
xen/crypto/vmac.c,3132
#define UINT64_C(15,566
#define VMAC_ARCH_64 20,707
#define VMAC_USE_SSE2 25,904
#define VMAC_ARCH_BIG_ENDIAN 31,1110
const uint64_t p64 39,1395
const uint64_t m62 40,1473
const uint64_t m63 41,1551
const uint64_t m64 42,1629
const uint64_t mpoly 43,1707
#define ADD128(61,2565
#define MUL64(67,2901
#define PMUL64 70,3045
#define GET_REVERSED_64(72,3067
#define GET_REVERSED_64(80,3470
#define ADD128(93,4200
#define MUL64(99,4529
#define PMUL64 105,4836
#define GET_REVERSED_64(107,4858
#define GET_REVERSED_64(117,5409
#define bswap32(127,5962
#define MUL64(146,6941
#define PMUL64 148,7028
#define ADD128(152,7098
#define GET_REVERSED_64(159,7410
#define MUL32(165,7603
#define ALIGN(174,7880
#define NOINLINE 175,7932
#define FASTCALL176,7981
#define ALIGN(178,8013
#define NOINLINE 179,8056
#define FASTCALL 180,8099
#define ALIGN(182,8138
#define NOINLINE183,8155
#define FASTCALL184,8172
#define ADD128(192,8447
#define MUL32(201,8850
#define PMUL64(205,8989
#define MUL64(215,9467
#define bswap32(229,10137
#define bswap64(234,10446
#define GET_REVERSED_64(241,10851
#  define get64PE 247,11021
#  define get64PE 249,11053
#  define get64BE(253,11114
#  define get64LE(254,11158
#  define get64BE(256,11235
#  define get64LE(257,11279
#define nh_16(277,12221
#define nh_16_2(285,12776
#define nh_vmac_nhbytes(297,13569
#define nh_vmac_nhbytes_2(311,14598
#define poly_step(335,16267
	#define GNU_AS2(364,17853
	#define GNU_AS3(365,17891
	#define GNU_ASL(366,17940
	#define GNU_ASJ(367,17972
	#define AS2(368,18015
	#define AS3(369,18048
	#define ASS(370,18087
	#define ASL(371,18170
	#define ASJ(372,18197
	#define AS2(374,18242
	#define AS3(375,18274
	#define ASS(376,18312
	#define ASL(377,18381
	#define ASJ(378,18415
static void NOINLINE nh_16_func(381,18464
#define nh_16(483,21114
static void poly_step_func(485,21189
#define a0 492,21561
#define a1 493,21580
#define a2 494,21599
#define a3 495,21618
#define k0 496,21637
#define k1 497,21656
#define k2 498,21675
#define k3 499,21694
#undef a0597,23904
#undef a1598,23914
#undef a2599,23924
#undef a3600,23934
#undef k0601,23944
#undef k1602,23954
#undef k2603,23964
#undef k3604,23974
#define poly_step(607,23987
#define nh_16(615,24312
static void poly_step_func(632,25358
#define INDEX_HIGH 637,25556
#define INDEX_LOW 638,25577
#define INDEX_HIGH 640,25603
#define INDEX_LOW 641,25624
#define a0 644,25652
#define a1 645,25693
#define a2 646,25735
#define a3 647,25776
#define k0 648,25818
#define k1 649,25858
#define k2 650,25899
#define k3 651,25939
#undef a0690,26818
#undef a1691,26828
#undef a2692,26838
#undef a3693,26848
#undef k0694,26858
#undef k1695,26868
#undef k2696,26878
#undef k3697,26888
#define poly_step(700,26901
#define nh_16_2(709,27321
#define nh_vmac_nhbytes(714,27539
#define nh_vmac_nhbytes_2(718,27676
void vhash_abort(725,27960
static uint64_t l3hash(737,28314
void vhash_update(779,29392
uint64_t vhash(846,31265
uint64_t vmac(951,34119
void vmac_set_key(1001,35333
unsigned prime(1059,37311
int main(1075,37772

xen/crypto/rijndael.c,715
#undef FULL_UNROLL37,1354
static const u32 Te0[Te053,1712
static const u32 Te1[Te1119,5329
static const u32 Te2[Te2185,8946
static const u32 Te3[Te3251,12563
static const u32 Te4[Te4317,16180
static const u32 Td0[Td0383,19797
static const u32 Td1[Td1449,23414
static const u32 Td2[Td2515,27031
static const u32 Td3[Td3581,30648
static const u32 Td4[Td4647,34265
static const u32 rcon[rcon713,37882
#define GETU32(719,38108
#define PUTU32(720,38213
rijndaelKeySetupEnc(728,38482
rijndaelKeySetupDec(815,40618
rijndaelEncrypt(858,42023
rijndaelDecrypt(1042,50115
rijndael_set_key_enc_only(1227,58330
rijndael_set_key(1243,58620
rijndael_decrypt(1260,58912
rijndael_encrypt(1266,59036

xen/tools/figlet/figlet.c,3706
#define DATE 25,898
#define VERSION 26,926
#define VERSION_INT 27,950
#define DEFAULTFONTDIR 50,1926
#define DEFAULTFONTFILE 51,1953
#define ZFILE 66,2215
#define Zopen 67,2234
#define Zgetc 68,2254
#define Zungetc(69,2274
#define Zclose 70,2319
#define MYSTRLEN(72,2342
#define DIRSEP 74,2409
#define DIRSEP2 75,2428
#define FONTFILESUFFIX 79,2547
#define FONTFILEMAGICNUMBER 80,2577
#define FSUFFIXLEN 81,2612
#define CONTROLFILESUFFIX 82,2656
#define CONTROLFILEMAGICNUMBER 83,2689
#define CSUFFIXLEN 84,2757
#define DEFAULTCOLUMNS 85,2804
typedef long inchr;94,3034
inchr *inchrline;inchrline96,3084
int inchrlinelen,98,3207
int inchrlinelen,inchrlinelenlimit;98,3207
inchr deutsch[deutsch99,3243
int hzmode;110,3718
int gndbl[gndbl111,3777
inchr gn[gn112,3835
int gl;113,3900
int gr;114,3955
int Myargc;116,4012
char **Myargv;Myargv117,4069
typedef struct fc 125,4290
  inchr ord;126,4310
  char **thechar;thechar127,4323
  struct fc *next;next128,4384
  } fcharnode;129,4403
fcharnode *fcharlist;fcharlist131,4419
char **currchar;currchar132,4441
int currcharwidth;133,4458
int previouscharwidth;134,4477
char **outputline;outputline135,4500
int outlinelen;136,4584
typedef struct cfn 145,4805
  char *thename;thename146,4826
  struct cfn *next;next147,4843
  } cfnamenode;148,4863
cfnamenode *cfilelist,cfilelist150,4880
cfnamenode *cfilelist,**cfilelistend;cfilelistend150,4880
typedef struct cm 152,4919
  int thecommand;153,4939
  inchr rangelo;154,4957
  inchr rangehi;155,4974
  inchr offset;156,4991
  struct cm *next;next157,5007
  } comnode;158,5026
comnode *commandlist,commandlist160,5040
comnode *commandlist,**commandlistend;commandlistend160,5040
int deutschflag,168,5282
int deutschflag,justification,168,5282
int deutschflag,justification,paragraphflag,168,5282
int deutschflag,justification,paragraphflag,right2left,168,5282
int deutschflag,justification,paragraphflag,right2left,multibyte;168,5282
int cmdinput;169,5348
#define SM_SMUSH 171,5363
#define SM_KERN 172,5384
#define SM_EQUAL 173,5403
#define SM_LOWLINE 174,5422
#define SM_HIERARCHY 175,5443
#define SM_PAIR 176,5466
#define SM_BIGX 177,5484
#define SM_HARDBLANK 178,5503
int smushmode;180,5528
#define SMO_NO 182,5544
#define SMO_YES 183,5597
#define SMO_FORCE 184,5674
int smushoverride;186,5748
int outputwidth;188,5768
int outlinelenlimit;189,5785
char *fontdirname,fontdirname190,5806
char *fontdirname,*fontname;fontname190,5806
char hardblank;199,6026
int charheight;200,6042
char *myname;myname209,6261
int get_columns(224,6698
char *myalloc(myalloc247,7186
int hasdirsep(276,7701
int suffixcmp(292,8069
void skiptoeol(318,8580
char *myfgets(myfgets342,9071
void printusage(374,9667
void printinfo(395,10211
void readmagic(435,11489
void skipws(454,11840
void readnum(470,12243
inchr readTchar(529,13247
inchr charsetname(578,14233
void charset(600,14664
void readcontrol(654,15834
void readcontrolfiles(805,20563
void clearcfilelist(823,20965
void getparams(847,21452
void clearline(1043,26605
void readfontchar(1064,27018
void readfont(1109,28089
#define MAXFIRSTLINELEN 1111,28107
void linealloc(1230,31334
void getletter(1253,31960
char smushem(1292,33102
int smushamt(1377,35875
int addchar(1425,37105
static int nr_chars=1478,38740
static void myputchar(1479,38763
void putstring(1512,39300
void printline(1543,39958
void splitline(1564,40446
inchr handlemapping(1611,41520
int Agetchar(1642,42202
inchr iso2022(1685,43702
inchr getinchr_buffer;1825,47594
int getinchr_flag;1826,47617
inchr ungetinchr(1828,47637
inchr getinchr(1856,48694
int main(1943,50994

xen/tools/symbols.c,1607
#define _GNU_SOURCE27,1022
#define KSYM_NAME_LEN	35,1142
struct sym_entry 38,1171
	unsigned long long addr;39,1190
	unsigned int len;40,1216
	unsigned char *sym;sym41,1235
static struct sym_entry *table;table45,1261
static unsigned int table_size,46,1293
static unsigned int table_size, table_cnt;46,1293
static unsigned long long _stext,47,1336
static unsigned long long _stext, _etext,47,1336
static unsigned long long _stext, _etext, _sinittext,47,1336
static unsigned long long _stext, _etext, _sinittext, _einittext,47,1336
static unsigned long long _stext, _etext, _sinittext, _einittext, _sextratext,47,1336
static unsigned long long _stext, _etext, _sinittext, _einittext, _sextratext, _eextratext;47,1336
static int all_symbols 48,1428
static char symbol_prefix_char 49,1456
int token_profit[token_profit51,1496
unsigned char best_table[best_table54,1581
unsigned char best_table_len[best_table_len55,1615
static void usage(58,1652
static inline int is_arm_mapping_symbol(68,1900
static int read_symbol(74,2055
static int symbol_valid(132,3449
static void read_map(166,4584
static void output_label(182,4900
static int expand_symbol(197,5344
static void write_src(222,5872
static void learn_symbol(302,7859
static void forget_symbol(311,8080
static void build_initial_tok_table(320,8320
static void *memmem_pvt(memmem_pvt336,8598
static void compress_symbols(346,8892
static int find_best_token(388,9678
static void optimize_result(405,9981
static void insert_real_symbols_in_table(432,10680
static void optimize_token_table(448,11005
int main(464,11266

xen/arch/x86/ioport_emulate.c,222
static void ioemul_handle_proliant_quirk(16,432
static int __init proliant_quirk(45,1136
static struct dmi_system_id __initdata ioport_quirks_tbl[ioport_quirks_tbl52,1337
static int __init ioport_quirks_init(124,3297

xen/arch/x86/x86_64/mm.c,2651
unsigned long __read_mostly max_pdx;40,1387
unsigned long __read_mostly pfn_pdx_bottom_mask 41,1424
unsigned long __read_mostly ma_va_bottom_mask 42,1480
unsigned long __read_mostly pfn_top_mask 43,1534
unsigned long __read_mostly ma_top_mask 44,1580
unsigned long __read_mostly pfn_hole_mask 45,1625
unsigned int __read_mostly pfn_pdx_hole_shift 46,1672
unsigned int __read_mostly m2p_compat_vstart 48,1724
    idle_pg_table[idle_pg_table52,1926
    l3_identmap[l3_identmap56,2100
    l2_identmap[l2_identmap58,2204
    l3_xenmap[l3_xenmap62,2378
    l2_xenmap[l2_xenmap64,2480
    l3_bootmap[l3_bootmap68,2641
    l2_bootmap[l2_bootmap70,2744
int __mfn_valid(72,2783
void *alloc_xen_pagetable(alloc_xen_pagetable80,3013
l3_pgentry_t *virt_to_xen_l3e(virt_to_xen_l3e95,3294
l2_pgentry_t *virt_to_xen_l2e(virt_to_xen_l2e110,3687
void *do_page_walk(do_page_walk126,4106
void __init pfn_pdx_hole_setup(168,5403
struct mem_hotadd_info207,6670
    unsigned long spfn;209,6695
    unsigned long epfn;210,6719
    unsigned long cur;211,6743
int hotadd_mem_valid(214,6770
static unsigned long alloc_hotadd_mfn(219,6897
#define M2P_NO_MAPPED 231,7175
#define M2P_2M_MAPPED 232,7201
#define M2P_1G_MAPPED 233,7227
static int m2p_mapped(234,7253
int share_hotadd_m2p_table(264,8062
static void destroy_compat_m2p_mapping(322,9981
void destroy_m2p_mapping(365,11465
static int setup_compat_m2p_table(425,13466
#define MFN(456,14630
#define CNT 457,14698
#undef CNT490,15998
#undef MFN491,16009
int setup_m2p_table(499,16171
#define MFN(518,16872
#define CNT 519,16941
#undef CNT592,19559
#undef MFN593,19570
void __init paging_init(600,19648
#define MFN(648,21275
#define CNT 649,21344
#undef CNT735,24869
#undef MFN736,24880
#define MFN(757,26026
#define CNT 758,26094
#undef CNT786,27359
#undef MFN787,27370
void __init setup_idle_pagetable(798,27642
void __init zap_low_mappings(807,27954
void *compat_arg_xlat_virt_base(compat_arg_xlat_virt_base820,28348
int setup_compat_arg_xlat(825,28433
void free_compat_arg_xlat(838,28731
void cleanup_frame_table(846,29000
static int setup_frametable_chunk(902,30807
int extend_frame_table(922,31391
void __init subarch_init_memory(958,32495
long subarch_memory_op(1017,34445
long do_stack_switch(1077,36207
long do_set_segment_base(1085,36434
int check_descriptor(1136,37707
int pagefault_by_memadd(1222,40270
int handle_memadd_fault(1231,40562
void domain_set_alloc_bitsize(1300,42224
unsigned int domain_clamp_alloc_bitsize(1313,42648
int transfer_pages_to_heap(1320,42857
int mem_hotadd_check(1340,43314
int memory_add(1402,45158

xen/arch/x86/x86_64/compat.c,205
#define physdev_op 11,247
#define physdev_op_t 12,303
#define do_physdev_op 13,361
#define do_physdev_op_compat(14,417
#define COMPAT16,487
#define _XEN_GUEST_HANDLE(17,502
typedef int ret_t;18,551

xen/arch/x86/x86_64/compat/mm.c,588
int compat_set_gdt(6,102
int compat_update_descriptor(39,921
int compat_arch_memory_op(45,1128
#define XLAT_memory_map_HNDL_buffer(78,1944
#undef XLAT_memory_map_HNDL_buffer81,2099
#define XLAT_memory_map_HNDL_buffer(97,2472
#undef XLAT_memory_map_HNDL_buffer100,2619
#define XLAT_memory_map_HNDL_buffer(106,2764
#undef XLAT_memory_map_HNDL_buffer108,2856
int compat_update_va_mapping(196,5108
int compat_update_va_mapping_otherdomain(202,5290
int compat_mmuext_op(211,5619
#define XLAT_mmuext_op_HNDL_arg2_vcpumask(291,8015
#undef XLAT_mmuext_op_HNDL_arg2_vcpumask294,8191

xen/arch/x86/x86_64/compat/traps.c,345
void compat_show_guest_stack(6,107
unsigned int compat_iret(63,1686
static long compat_register_guest_callback(166,5008
static long compat_unregister_guest_callback(218,6607
long compat_callback_op(245,7082
long compat_set_callbacks(283,7754
int compat_set_trap_table(311,8526
static void hypercall_page_initialise_ring1_kernel(355,9532

xen/arch/x86/x86_64/compat/entry.S,1321
compat_skip_clobber:compat_skip_clobber82,3391
compat_test_guest_events:compat_test_guest_events99,3962
compat_process_softirqs:compat_process_softirqs118,4632
compat_process_mce:compat_process_mce125,4763
compat_process_nmi:compat_process_nmi141,5340
compat_process_trap:compat_process_trap154,5870
compat_bad_hypercall:compat_bad_hypercall159,6012
compat_restore_all_guest:compat_restore_all_guest164,6154
.Lft0:.Lft0168,6257
.section 170,6272
.Lfx0:.Lfx0171,6293
.Ldf0:.Ldf0184,6766
compat_failsafe_callback:compat_failsafe_callback186,6829
compat_create_bounce_frame:compat_create_bounce_frame253,9387
.Lft1:.Lft1260,9627
.Lft2:.Lft2263,9727
.Lft3:.Lft3265,9793
.Lft4:.Lft4269,9952
.Lft5:.Lft5281,10451
.Lft6:.Lft6289,10879
.Lft7:.Lft7291,10965
.Lft8:.Lft8296,11138
.Lft9:.Lft9302,11316
.Lft10:.Lft10303,11361
.Lft11:.Lft11305,11429
.Lft12:.Lft12307,11497
.Lft13:.Lft13315,11909
.section 324,12211
.Lfx13:.Lfx13325,12232
compat_crash_page_fault_12:compat_crash_page_fault_12343,12996
compat_crash_page_fault_8:compat_crash_page_fault_8345,13046
compat_crash_page_fault_4:compat_crash_page_fault_4347,13095
compat_crash_page_fault:compat_crash_page_fault349,13144
.Lft14:.Lft14350,13169
.section 354,13284
.Lfx14:.Lfx14355,13305
.section 361,13406

xen/arch/x86/x86_64/compat_kexec.S,272
compatibility_mode_far:compatibility_mode_far87,2591
compat_stack:compat_stack97,2939
compatibility_mode:compatibility_mode112,3270
compat_page_list:compat_page_list157,4456
compat_pg_table:compat_pg_table166,4662
compat_pg_table_l2:compat_pg_table_l2174,5028

xen/arch/x86/x86_64/cpufreq.c,242
#define xlat_page_start 32,1274
#define xlat_malloc_init(34,1342
#define xlat_malloc_array(40,1526
compat_set_px_pminfo(46,1695
#define XLAT_processor_performance_HNDL_states(58,2083
#undef XLAT_processor_performance_HNDL_states67,2490

xen/arch/x86/x86_64/mmconfig.h,749
#define PCI_VENDOR_ID_INTEL 20,782
#define PCI_DEVICE_ID_INTEL_E7520_MCH 21,824
#define PCI_DEVICE_ID_INTEL_82945G_HB 22,872
#define PCI_PROBE_BIOS 25,939
#define PCI_PROBE_CONF1 26,976
#define PCI_PROBE_CONF2 27,1014
#define PCI_PROBE_MMCONF 28,1052
#define PCI_PROBE_MASK 29,1087
#define PCI_PROBE_NOEARLY 30,1124
#define PCI_VENDOR_ID_AMD 32,1161
#define PCI_CHECK_ENABLE_AMD_MMCONF 33,1206
#define PCI_VENDOR_ID_NVIDIA 35,1255
static inline unsigned char mmio_config_readb(46,1635
static inline unsigned short mmio_config_readw(53,1794
static inline unsigned int mmio_config_readl(60,1955
static inline void mmio_config_writeb(67,2115
static inline void mmio_config_writew(72,2256
static inline void mmio_config_writel(77,2398

xen/arch/x86/x86_64/cpu_idle.c,531
#define __XEN_TOOLS__ 25,1083
CHECK_processor_csd;33,1281
#define xlat_page_start 38,1401
#define xlat_page_size 39,1468
#define xlat_page_left_size(40,1513
#define xlat_malloc_init(43,1622
void *xlat_malloc(xlat_malloc47,1732
#define xlat_malloc_array(63,2073
static int copy_from_compat_state(65,2155
#define XLAT_processor_cx_HNDL_dp(68,2286
#undef XLAT_processor_cx_HNDL_dp76,2651
long compat_set_cx_pminfo(83,2779
#define XLAT_processor_power_HNDL_states(95,3158
#undef XLAT_processor_power_HNDL_states125,4214

xen/arch/x86/x86_64/mmconf-fam10h.c,730
struct pci_hostbridge_probe 17,298
	u32 bus;18,328
	u32 slot;19,338
	u32 vendor;20,349
	u32 device;21,362
static u64 __cpuinitdata fam10h_pci_mmconf_base;24,379
static struct pci_hostbridge_probe pci_probes[] __cpuinitdata 26,429
#define UNIT 31,581
#define MASK 32,632
#define SIZE 33,659
#define FAM10H_PCI_MMCONF_BASE 35,745
#define BASE_VALID(36,790
static void __init get_fam10h_pci_mmconf_base(37,863
	struct range 42,1003
		u64 start,43,1019
		u64 start, end;43,1019
void __cpuinit fam10h_check_enable_mmcfg(137,3030
static int __init set_check_enable_amd_mmconf(190,4435
static struct dmi_system_id __initdata mmconf_dmi_table[mmconf_dmi_table196,4579
void __init check_enable_amd_mmconf_dmi(207,4808

xen/arch/x86/x86_64/mmconfig_64.c,524
struct mmcfg_virt 21,479
    struct acpi_mcfg_allocation *cfg;cfg22,499
    char __iomem *virt;virt23,537
static struct mmcfg_virt *pci_mmcfg_virt;pci_mmcfg_virt25,564
static int __initdata mmcfg_pci_segment_shift;26,606
static char __iomem *get_virt(get_virt28,654
static char __iomem *pci_dev_base(pci_dev_base45,1117
int pci_mmcfg_read(55,1354
int pci_mmcfg_write(85,2043
static void __iomem * __init mcfg_ioremap(113,2703
int __init pci_mmcfg_arch_init(130,3274
void __init pci_mmcfg_arch_free(160,4286

xen/arch/x86/x86_64/acpi_mmcfg.c,142
struct acpi_mcfg_allocation *pci_mmcfg_config;pci_mmcfg_config48,1602
int pci_mmcfg_config_num;49,1649
int __init acpi_parse_mcfg(51,1676

xen/arch/x86/x86_64/platform_hypercall.c,616
#define xen_platform_op 10,233
#define xen_platform_op_t 11,280
#define do_platform_op(12,329
#define xen_processor_px 14,383
#define xen_processor_px_t 15,431
#define xen_processor_performance 16,481
#define xen_processor_performance_t 17,547
#define xenpf_set_processor_pminfo 18,615
#define set_px_pminfo	20,684
#define xen_processor_power 22,729
#define xen_processor_power_t 23,784
#define set_cx_pminfo 24,841
#define xenpf_pcpuinfo 26,895
#define xenpf_pcpuinfo_t 27,937
#define xenpf_enter_acpi_sleep 29,984
#define COMPAT31,1043
#define _XEN_GUEST_HANDLE(32,1058
typedef int ret_t;33,1107

xen/arch/x86/x86_64/traps.c,861
static void print_xen_info(31,705
enum context 45,1029
enum context { CTXT_hypervisor,45,1029
enum context { CTXT_hypervisor, CTXT_pv_guest,45,1029
enum context { CTXT_hypervisor, CTXT_pv_guest, CTXT_hvm_guest 45,1029
static void _show_registers(47,1095
void show_registers(84,2610
void vcpu_show_registers(147,4604
void show_page_walk(166,5192
asmlinkage void do_double_fault(219,7087
void toggle_guest_mode(253,8313
unsigned long do_iret(268,8707
static int write_stack_trampoline(322,10324
void __devinit subarch_percpu_traps_init(358,11113
void init_int80_direct_trap(422,13693
static long register_guest_callback(435,14005
static long unregister_guest_callback(493,15688
long do_callback_op(520,16175
long do_set_callbacks(558,16821
static void hypercall_page_initialise_ring3_kernel(582,17479
void hypercall_page_initialise(617,18693

xen/arch/x86/x86_64/physdev.c,1160
#define do_physdev_op 13,289
#define physdev_apic 15,330
#define physdev_apic_t 16,385
#define physdev_eoi 18,443
#define physdev_eoi_t 19,497
#define physdev_pirq_eoi_gmfn 21,554
#define physdev_pirq_eoi_gmfn_t 22,618
#define physdev_set_iobitmap 24,685
#define physdev_set_iobitmap_t 25,748
#define physdev_set_iopl 27,814
#define physdev_set_iopl_t 28,873
#define physdev_irq 30,935
#define physdev_irq_t 31,989
#define physdev_irq_status_query 33,1046
#define physdev_irq_status_query_t 34,1113
#define physdev_map_pirq 36,1183
#define physdev_map_pirq_t 37,1242
#define physdev_unmap_pirq 39,1304
#define physdev_unmap_pirq_t 40,1365
#define physdev_manage_pci 42,1429
#define physdev_manage_pci_t 43,1490
#define physdev_manage_pci_ext 45,1554
#define physdev_manage_pci_ext_t 46,1619
#define physdev_restore_msi 48,1687
#define physdev_restore_msi_t 49,1749
#define physdev_setup_gsi 51,1814
#define physdev_setup_gsi_t 52,1874
#define physdev_get_free_pirq 54,1937
#define physdev_get_free_pirq_t 55,2001
#define COMPAT57,2068
#undef guest_handle_okay58,2083
#define guest_handle_okay 59,2108
typedef int ret_t;60,2162

xen/arch/x86/x86_64/entry.S,1398
switch_to_kernel:switch_to_kernel17,306
restore_all_guest:restore_all_guest37,1108
iret_exit_to_guest:iret_exit_to_guest55,1590
.Lft0:.Lft057,1632
.section 59,1647
.Lfx0:.Lfx060,1668
.Ldf0:.Ldf073,2141
failsafe_callback:failsafe_callback75,2197
restore_all_xen:restore_all_xen92,2779
skip_clobber:skip_clobber181,6392
test_all_events:test_all_events186,6503
test_guest_events:test_guest_events198,6917
process_softirqs:process_softirqs215,7453
process_mce:process_mce222,7582
process_nmi:process_nmi238,8135
process_trap:process_trap251,8640
bad_hypercall:bad_hypercall256,8758
sysenter_eflags_saved:sysenter_eflags_saved266,8972
int80_slow_path:int80_slow_path313,10390
create_bounce_frame:create_bounce_frame328,11102
.Lft2:.Lft2353,12130
.Lft3:.Lft3355,12212
.Lft4:.Lft4364,12640
.Lft5:.Lft5372,13068
.Lft6:.Lft6374,13154
.Lft7:.Lft7379,13327
.Lft8:.Lft8384,13494
.Lft9:.Lft9386,13562
.Lft10:.Lft10388,13630
.Lft11:.Lft11390,13698
.Lft12:.Lft12394,13833
.Lft13:.Lft13396,13916
domain_crash_synchronous_string:domain_crash_synchronous_string424,15313
handle_exception_saved:handle_exception_saved459,16429
exception_with_ints_disabled:exception_with_ints_disabled482,17226
FATAL_exception_with_ints_disabled:FATAL_exception_with_ints_disabled503,18168
handle_ist_exception:handle_ist_exception602,20373
.section 628,21085

xen/arch/x86/x86_64/machine_kexec.c,34
int machine_kexec_get_xen(14,314

xen/arch/x86/x86_64/asm-offsets.c,228
#define COMPILE_OFFSETS6,174
#define DEFINE(16,370
#define BLANK(18,469
#define OFFSET(20,527
#define __L2(24,626
#define __L4(25,676
#define __L8(26,753
#define __L16(27,830
#define LOG_2(28,907
void __dummy__(30,985

xen/arch/x86/x86_64/pci.c,223
#define PCI_CONF_ADDRESS(11,214
uint8_t pci_conf_read8(14,335
uint16_t pci_conf_read16(31,741
uint32_t pci_conf_read32(48,1149
void pci_conf_write8(65,1551
void pci_conf_write16(78,1922
void pci_conf_write32(91,2295

xen/arch/x86/x86_64/mmconfig-shared.c,981
static int __initdata known_bridge;28,645
unsigned int __cpuinitdata pci_probe 29,681
static void __init parse_mmcfg(31,757
static const char __init *pci_mmcfg_e7520(pci_mmcfg_e752050,1174
static const char __init *pci_mmcfg_intel_945(pci_mmcfg_intel_94573,1873
static const char __init *pci_mmcfg_amd_fam10h(pci_mmcfg_amd_fam10h127,3328
static const char __init *pci_mmcfg_nvidia_mcp55(pci_mmcfg_nvidia_mcp55179,4707
struct pci_mmcfg_hostbridge_probe 266,7279
    u32 bus;267,7315
    u32 devfn;268,7328
    u32 vendor;269,7343
    u32 device;270,7359
    const char *(*probe)probe271,7375
static struct pci_mmcfg_hostbridge_probe pci_mmcfg_probes[] __initdata 274,7411
static int __init pci_mmcfg_check_hostbridge(287,7960
typedef int (*check_reserved_t)check_reserved_t319,8801
static int __init is_mmconf_reserved(321,8870
static void __init pci_mmcfg_reject_broken(355,9934
void __init acpi_mmcfg_init(396,11068
int pci_find_ext_capability(442,12329

xen/arch/x86/x86_64/domain.c,310
#define xen_vcpu_info 12,246
#undef xen_vcpu_info14,310
#define xen_vcpu_register_vcpu_info 16,332
CHECK_vcpu_register_vcpu_info;17,392
#undef xen_vcpu_register_vcpu_info18,423
#define xen_vcpu_get_physid 20,459
CHECK_vcpu_get_physid;21,503
#undef xen_vcpu_get_physid22,526
arch_compat_vcpu_op(25,558

xen/arch/x86/x86_64/gdbstub.c,174
#define GDB_REG64(23,854
#define GDB_REG32(24,920
gdb_arch_read_reg_array(27,994
gdb_arch_write_reg_array(61,1731
gdb_arch_read_reg(68,1891
gdb_arch_write_reg(107,3241

xen/arch/x86/bitops.c,160
unsigned int __find_first_bit(5,47
unsigned int __find_next_bit(27,685
unsigned int __find_first_zero_bit(53,1379
unsigned int __find_next_zero_bit(77,2125

xen/arch/x86/shutdown.c,1022
enum reboot_type 28,608
        BOOT_TRIPLE 29,627
        BOOT_KBD 30,654
        BOOT_ACPI 31,678
        BOOT_BIOS 32,703
static long no_idt[no_idt35,732
static int reboot_mode;36,755
static enum reboot_type reboot_type 47,1127
static void __init set_reboot_type(48,1176
static inline void kb_wait(77,1857
static void __attribute__((noreturn)) __machine_halt(86,2003
void machine_halt(93,2132
real_mode_gdt_entries 112,2760
    unsigned short       size 121,3026
    unsigned long long * base 122,3082
real_mode_gdt 124,3140
real_mode_idt 125,3219
static const unsigned char real_mode_switch 147,4191
#define MAX_LENGTH 161,5125
static const unsigned char jump_to_bios 162,5149
static void machine_real_restart(172,5445
static int __init set_bios_reboot(238,8168
static struct dmi_system_id __initdata reboot_dmi_table[reboot_dmi_table249,8437
static int __init reboot_init(285,9707
#define machine_real_restart(294,9851
static void __machine_restart(298,9895
void machine_restart(303,9990

xen/arch/x86/domctl.c,314
typedef unsigned long kdbva_t;42,1052
typedef unsigned char kdbbyt_t;43,1083
static int gdbsx_guest_mem_io(47,1196
long arch_do_domctl(57,1491
#define MAX_IOPORTS 1005,27014
#define PV_XSAVE_SIZE 1421,38993
void arch_get_info_guest(1577,43686
#define c(1580,43774
#define c(1582,43859
#undef c1661,46692

xen/arch/x86/mm.c,6520
    l1_identmap[l1_identmap127,5198
#define MEM_LOG(129,5238
#define PTE_UPDATE_WITH_CMPXCHG137,5540
bool_t __read_mostly mem_hotplug 140,5580
struct domain *dom_xen,dom_xen143,5676
struct domain *dom_xen, *dom_io,dom_io143,5676
struct domain *dom_xen, *dom_io, *dom_cow;dom_cow143,5676
unsigned long max_page;146,5753
unsigned long total_pages;147,5777
    / PDX_GROUP_COUNT)] = { [0] = 1 };[0] = 1 };151,5931
#define PAGE_CACHE_ATTRS 153,5971
bool_t __read_mostly opt_allow_superpage;155,6029
#define l1_disallow_mask(163,6259
l2_pgentry_t *compat_idle_pg_table_l2 compat_idle_pg_table_l2172,6738
#define l3_disallow_mask(173,6784
#define l3_disallow_mask(177,6960
static void __init init_spagetable(181,7031
static void __init init_frametable_chunk(204,7781
void __init init_frametable(235,8915
void __init arch_init_memory(271,10152
int page_is_ram_type(358,13085
unsigned long domain_get_maximum_gpfn(398,14075
void share_xen_page_with_guest(406,14330
void share_xen_page_with_privileged_guests(436,15252
#define l3tab_needs_shadow(446,15507
#define l3tab_needs_shadow(454,15827
static l1_pgentry_t *fix_pae_highmem_pl1e;fix_pae_highmem_pl1e461,16097
static int __init cache_pae_fixmap_address(464,16204
void make_cr3(475,16555
void make_cr3(520,18172
void write_ptbase(527,18296
void update_cr3(540,18606
static void invalidate_shadow_ldt(561,19014
static int alloc_segdesc_page(596,19867
int map_ldt_shadow_page(617,20280
static int get_page_from_pagenr(652,21178
static int get_page_and_type_from_pagenr(666,21491
static void put_data_page(690,22197
#define define_get_linear_pagetable(712,23069
int is_iomem_page(756,26271
static void update_xen_mappings(770,26594
get_page_from_l1e(788,27261
get_page_from_l2e(899,31061
get_page_from_l3e(941,32091
get_page_from_l4e(966,32756
#define adjust_guest_l1e(992,33413
#define adjust_guest_l1e(1009,34622
#define adjust_guest_l2e(1017,34978
#define adjust_guest_l3e(1024,35327
#define adjust_guest_l4e(1032,35766
#define adjust_guest_l1e(1041,36149
#define adjust_guest_l2e(1042,36195
#define adjust_guest_l3e(1043,36241
#define unadjust_guest_l3e(1048,36314
#define unadjust_guest_l3e(1055,36728
void put_page_from_l1e(1058,36784
static int put_page_from_l2e(1119,38998
static int put_page_from_l3e(1134,39385
static int put_page_from_l4e(1162,40247
static int alloc_l1_table(1176,40680
static int create_pae_xen_mappings(1213,41526
static void pae_flush_pgd(1272,43478
# define pae_flush_pgd(1319,44800
static int alloc_l2_table(1322,44857
static int alloc_l3_table(1383,46819
static int alloc_l4_table(1473,49817
#define alloc_l4_table(1529,51557
static void free_l1_table(1533,51618
static int free_l2_table(1550,51999
static int free_l3_table(1581,52765
static int free_l4_table(1621,53786
#define free_l4_table(1651,54614
static int page_lock(1654,54673
static void page_unlock(1671,55092
static inline int update_intpte(1683,55442
#define UPDATE_ENTRY(1728,56738
static int mod_l1_entry(1734,57039
static int mod_l2_entry(1808,59315
static int mod_l3_entry(1868,61112
static int mod_l4_entry(1946,63411
void put_page(2008,65175
struct domain *page_get_owner_and_reference(page_get_owner_and_reference2027,65563
int get_page(2047,66141
static void get_page_light(2074,67046
static int alloc_page_type(2088,67396
int free_page_type(2154,69289
static int __put_final_page_type(2211,70809
static int __put_page_type(2254,72223
static int __get_page_type(2311,74224
void put_page_type(2448,79324
int get_page_type(2455,79446
int put_page_type_preemptible(2464,79644
int get_page_type_preemptible(2469,79740
static int get_spage_pages(2474,79862
static void put_spage_pages(2490,80203
static int mark_superpage(2503,80403
static int unmark_superpage(2546,81576
void clear_superpage_mark(2579,82369
int get_superpage(2592,82627
static void put_superpage(2629,83546
void clear_superpage_mark(2665,84279
static int get_superpage(2669,84334
static void put_superpage(2674,84450
void cleanup_page_cacheattr(2681,84547
int new_guest_cr3(2697,84883
static struct domain *get_pg_owner(get_pg_owner2756,86475
static void put_pg_owner(2810,87696
static inline int vcpumask_to_pcpumask(2815,87784
static inline void *fixmap_domain_page(fixmap_domain_page2853,88930
static inline void fixunmap_domain_page(2863,89239
#define fixmap_domain_page(2871,89499
#define fixunmap_domain_page(2872,89548
int do_mmuext_op(2875,89604
int do_mmu_update(3328,102461
static int create_grant_pte_mapping(3681,113553
static int destroy_grant_pte_mapping(3741,114891
static int create_grant_va_mapping(3810,116655
static int replace_grant_va_mapping(3865,117930
static int destroy_grant_va_mapping(3927,119462
static int create_grant_p2m_mapping(3933,119631
int create_grant_host_mapping(3955,120303
static int replace_grant_p2m_mapping(3980,121154
int replace_grant_host_mapping(4004,121929
int donate_page(4081,123969
int steal_page(4117,124885
int page_make_sharable(4166,126389
int page_make_private(4215,127856
static int __do_update_va_mapping(4255,128831
int do_update_va_mapping(4345,131245
int do_update_va_mapping_otherdomain(4351,131420
void destroy_gdt(4374,131880
long set_gdt(4390,132283
long do_set_gdt(4432,133357
long do_update_descriptor(4457,133958
typedef struct e820entry e820entry_t;4511,135311
struct memory_map_context4514,135388
    unsigned int n;4516,135416
    unsigned long s;4517,135436
    struct xen_memory_map map;4518,135457
static int handle_iomem_range(4521,135492
long arch_memory_op(4545,136156
struct ptwr_emulate_ctxt 4854,144713
    struct x86_emulate_ctxt ctxt;4855,144740
    unsigned long cr2;4856,144774
    l1_pgentry_t  pte;4857,144797
static int ptwr_emulated_read(4860,144824
static int ptwr_emulated_update(4879,145252
static int ptwr_emulated_write(5006,149345
static int ptwr_emulated_cmpxchg(5029,149907
static const struct x86_emulate_ops ptwr_emulate_ops 5054,150531
int ptwr_do_page_fault(5062,150822
void free_xen_pagetable(5115,152158
#define l1f_to_lNf(5127,152433
#define lNf_to_l1f(5128,152506
#define flush_area(5138,152916
int map_pages_to_xen(5142,153110
void destroy_xen_mappings(5447,165264
void __set_fixmap(5567,169407
void memguard_init(5576,169622
static void __memguard_change_range(5600,170346
void memguard_guard_range(5617,170856
void memguard_unguard_range(5622,170951
void memguard_guard_stack(5629,171056
void memguard_unguard_stack(5637,171300

xen/arch/x86/compat.c,102
typedef long ret_t;13,322
ret_t do_physdev_op_compat(17,393
long do_event_channel_op_compat(30,701

xen/arch/x86/bzimage.c,2926
#define HEAPORDER 10,188
static unsigned char *window;window12,209
#define memptr 13,239
static memptr free_mem_ptr;14,259
static memptr free_mem_end_ptr;15,287
#define WSIZE 17,320
static unsigned char    *inbuf;inbuf19,356
static unsigned         insize;20,388
static unsigned         inptr;23,472
static unsigned         outcnt;26,534
#define OF(28,567
#define STATIC 29,596
#define memzero(31,628
typedef unsigned char   uch;33,673
typedef unsigned short  ush;34,702
typedef unsigned long   ulg;35,731
#define INIT 37,761
#define get_byte(39,782
#  define Assert(43,896
#  define Trace(44,966
#  define Tracev(45,1018
#  define Tracevv(46,1084
#  define Tracec(47,1154
#  define Tracecv(48,1227
#  define Assert(50,1310
#  define Trace(51,1338
#  define Tracev(52,1357
#  define Tracevv(53,1377
#  define Tracec(54,1398
#  define Tracecv(55,1421
static long bytes_out;58,1453
static __init void error(61,1509
static __init int fill_inbuf(66,1570
static __init void flush_window(75,1704
static __init unsigned long output_length(97,2139
static __init int gzip_check(102,2271
static __init int perform_gunzip(115,2570
struct setup_header 147,3167
        uint8_t         _pad0[_pad0148,3189
        uint8_t         setup_sects;149,3268
        uint16_t        root_flags;150,3305
        uint32_t        syssize;151,3341
        uint16_t        ram_size;152,3374
        uint16_t        vid_mode;153,3408
        uint16_t        root_dev;154,3442
        uint16_t        boot_flag;155,3476
        uint16_t        jump;156,3511
        uint32_t        header;157,3541
#define HDR_MAGIC 158,3573
#define HDR_MAGIC_SZ 159,3612
        uint16_t        version;160,3638
#define VERSION(161,3671
        uint32_t        realmode_swtch;162,3712
        uint16_t        start_sys;163,3752
        uint16_t        kernel_version;164,3787
        uint8_t         type_of_loader;165,3827
        uint8_t         loadflags;166,3867
        uint16_t        setup_move_size;167,3902
        uint32_t        code32_start;168,3943
        uint32_t        ramdisk_image;169,3981
        uint32_t        ramdisk_size;170,4020
        uint32_t        bootsect_kludge;171,4058
        uint16_t        heap_end_ptr;172,4099
        uint16_t        _pad1;173,4137
        uint32_t        cmd_line_ptr;174,4168
        uint32_t        initrd_addr_max;175,4206
        uint32_t        kernel_alignment;176,4247
        uint8_t         relocatable_kernel;177,4289
        uint8_t         _pad2[_pad2178,4333
        uint32_t        cmdline_size;179,4367
        uint32_t        hardware_subarch;180,4405
        uint64_t        hardware_subarch_data;181,4447
        uint32_t        payload_offset;182,4494
        uint32_t        payload_length;183,4534
static __init int bzimage_check(186,4606
int __init bzimage_headroom(202,5046
int __init bzimage_parse(226,5774

xen/arch/x86/flushtlb.c,196
#define WRAP_MASK 18,460
#define WRAP_MASK 20,498
u32 tlbflush_clock 23,538
static u32 pre_flush(34,989
static void post_flush(68,2164
void write_cr3(73,2232
void flush_area_local(101,2808

xen/arch/x86/boot/wakeup.S,427
mode_setw:mode_setw75,2176
setbadw:setbadw81,2303
check_vesaw:check_vesaw84,2329
_setbadw:_setbadw95,2712
bogus_real_magic:bogus_real_magic97,2738
real_magic:real_magic102,2849
video_mode:video_mode104,2922
video_flags:video_flags105,2946
wakeup_32:wakeup_32112,3104
.Lskip_eferw:.Lskip_eferw152,4470
wakeup_64:wakeup_64168,4834
ret_point:ret_point173,4976
bogus_saved_magic:bogus_saved_magic186,5202

xen/arch/x86/boot/x86_32.S,176
int_msg:int_msg38,1099
hex_msg:hex_msg40,1156
ignore_int:ignore_int43,1203
multiboot_ptr:multiboot_ptr72,1786
idt_descr:idt_descr76,1850
gdt_descr:gdt_descr81,1930

xen/arch/x86/boot/reloc.c,221
typedef unsigned int u32;31,1006
static void *memcpy(memcpy36,1100
static void *reloc_mbi_struct(reloc_mbi_struct44,1264
static char *reloc_mbi_string(reloc_mbi_string51,1464
multiboot_info_t *reloc(reloc59,1625

xen/arch/x86/boot/mem.S,249
get_memory_map:get_memory_map6,65
.Lmeme820:.Lmeme8208,82
.Lmem88:.Lmem8836,1192
.Lmeme801:.Lmeme80141,1291
.Lint12:.Lint1264,2662
e820map:e820map71,2800
e820nr:e820nr73,2840
lowmem_kb:lowmem_kb75,2866
highmem_kb:highmem_kb77,2895

xen/arch/x86/boot/edd.S,666
get_edd:get_edd34,1116
edd_mbr_sig_start:edd_mbr_sig_start41,1381
edd_mbr_sig_read:edd_mbr_sig_read44,1539
edd_mbr_sig_done:edd_mbr_sig_done72,2999
edd_start:edd_start86,3662
edd_check_ext:edd_check_ext91,3877
edd_get_device_params:edd_get_device_params105,4577
edd_get_legacy_chs:edd_get_legacy_chs112,5022
edd_legacy_done:edd_legacy_done134,6066
edd_next:edd_next141,6257
edd_done:edd_done146,6429
opt_edd:opt_edd149,6452
.globl 152,6531
.globl 153,6571
boot_edd_info_nr:boot_edd_info_nr154,6621
boot_mbr_signature_nr:boot_mbr_signature_nr156,6657
boot_mbr_signature:boot_mbr_signature158,6698
boot_edd_info:boot_edd_info160,6756

xen/arch/x86/boot/x86_64.S,176
int_msg:int_msg58,1571
hex_msg:hex_msg60,1630
ignore_int:ignore_int62,1667
multiboot_ptr:multiboot_ptr83,2096
gdt_descr:gdt_descr87,2148
idt_descr:idt_descr92,2282

xen/arch/x86/boot/mkelf32.c,842
#define u8 20,503
#define u16 21,523
#define u32 22,544
#define u64 23,565
#define s8 24,586
#define s16 25,605
#define s32 26,625
#define s64 27,645
#define DYNAMICALLY_FILLED 30,711
#define RAW_OFFSET 31,742
static Elf32_Ehdr out_ehdr 33,774
static Elf32_Phdr out_phdr 54,1894
static u8 out_shstrtab[out_shstrtab65,2402
static Elf32_Shdr out_shdr[out_shdr67,2452
#undef swap1694,3793
#undef swap3295,3807
#undef swap6496,3821
#define swap16(98,3836
#define swap32(99,3901
#define swap64(100,3980
static int big_endian;102,4060
static void endianadjust_ehdr32(104,4084
static void endianadjust_ehdr64(123,4750
static void endianadjust_phdr32(142,5416
static void endianadjust_phdr64(156,5860
static void endianadjust_shdr32(170,6304
static void do_write(186,6838
static void do_read(207,7288
int main(228,7735

xen/arch/x86/boot/head.S,371
.Lbad_cpu_msg:.Lbad_cpu_msg38,1084
.Lbad_ldr_msg:.Lbad_ldr_msg39,1131
bad_cpu:bad_cpu41,1189
not_multiboot:not_multiboot44,1288
print_err:print_err46,1367
gdt_boot_descr:gdt_boot_descr63,2039
__start:__start67,2119
reloc:reloc206,7141
trampoline_start:trampoline_start211,7234
trampoline_end:trampoline_end213,7276
__high_start:__high_start216,7307

xen/arch/x86/boot/video.S,3304
video:video50,1726
vid2:vid265,2327
vid1:vid166,2353
basic_detect:basic_detect71,2533
basret:basret83,3104
mode_params:mode_params89,3367
mopar1:mopar1109,4134
mopar2:mopar2111,4287
mopar_gr:mopar_gr115,4390
dac_set:dac_set165,5900
dac_done:dac_done179,6384
no_pm:no_pm191,6684
mode_menu:mode_menu196,6759
nokey:nokey200,6888
defmd1:defmd1211,7181
listm:listm213,7254
listm0:listm0214,7312
an2:an2223,7542
an1:an1225,7605
lm1:lm1230,7799
skip_bail:skip_bail269,8917
skip_pause:skip_pause285,9372
lm2:lm2291,9479
lm3:lm3294,9612
lmbs:lmbs311,9994
lment:lment322,10239
lmhx:lmhx338,10712
lmhex:lmhex339,10777
lmhx1:lmhx1357,11085
lmuse1:lmuse1361,11157
mnusel:mnusel364,11205
lmuse:lmuse379,11539
lmbad:lmbad382,11587
lmdef:lmdef385,11672
_setrec:_setrec387,11685
_set_80x25:_set_80x25388,11735
mode_set:mode_set391,11812
setbad:setbad412,12240
setspc:setspc415,12265
setmenu:setmenu422,12485
check_vesa:check_vesa437,12933
_setbad:_setbad469,13974
setrec:setrec475,14206
rct1:rct1496,14949
rct2:rct2499,15017
rct3:rct3502,15081
inidx:inidx504,15094
setvesabysize:setvesabysize510,15305
spec_inits:spec_inits531,15911
set_80x25:set_80x25542,16257
use_80x25:use_80x25544,16346
set_8pixel:set_8pixel554,16620
set_8pt:set_8pt556,16692
set_80x28:set_80x28574,17315
set14:set14576,17386
set_current:set_current582,17613
set_80x43:set_80x43588,17752
set_80x30:set_80x30597,18073
set48a:set48a606,18364
set_80x34:set_80x34633,19507
setvde:setvde638,19743
set_80x60:set_80x60643,19850
outidx:outidx651,20181
mode_table:mode_table667,20760
mtab1:mtab1687,21404
ret0:ret0688,21472
vga_modes:vga_modes691,21521
vga_modes_end:vga_modes_end698,21868
vesa_modes:vesa_modes701,21905
vesa1:vesa1721,22615
vesa2:vesa2735,23042
vesan:vesan760,23975
vesae:vesae761,24052
vesar:vesar764,24183
getkey:getkey768,24278
getkt:getkt774,24427
lminute:lminute780,24584
again:again782,24618
flush:flush794,24912
empty:empty802,25062
prthw:prthw805,25103
prthb:prthb809,25190
prthn:prthn814,25303
prth1:prth1818,25380
prtdec:prtdec822,25460
lt100:lt100836,25737
skip10:skip10838,25787
prtstr:prtstr847,25985
fin:fin855,26100
prtsp2:prtsp2858,26130
prtspc:prtspc859,26191
prtchr:prtchr862,26326
beep:beep872,26518
gettime:gettime876,26617
store_edid:store_edid889,26911
.Lforce_edid:.Lforce_edid931,28175
.Lno_edid:.Lno_edid939,28392
opt_edid:opt_edid948,28567
mt_end:mt_end949,28640
edit_buf:edit_buf950,28707
card_name:card_name951,28760
graphic_mode:graphic_mode952,28818
dac_size:dac_size953,28892
keymsg:keymsg956,28959
listhdr:listhdr961,29166
crlft:crlft964,29266
prompt:prompt966,29305
unknt:unknt969,29397
badmdt:badmdt972,29490
vesaer:vesaer975,29592
textmode:textmode979,29752
menu_more_msg:menu_more_msg980,29786
menu_bail_msg:menu_bail_msg981,29835
svga_name:svga_name984,29917
vga_name:vga_name986,29946
vesa_name:vesa_name988,29977
name_bann:name_bann990,30009
force_size:force_size992,30052
vesa_size:vesa_size994,30133
boot_vid_mode:boot_vid_mode998,30327
boot_vid_info:boot_vid_info999,30363
boot_edid_info:boot_edid_info1005,30661
boot_edid_caps:boot_edid_caps1006,30696

xen/arch/x86/boot/video.h,485
#define __BOOT_VIDEO_H__2,25
#define VIDEO_FIRST_MENU 8,213
#define VIDEO_FIRST_VESA 11,300
#define VIDEO_FIRST_SPECIAL 14,362
#define VIDEO_80x25 15,397
#define VIDEO_80x50 16,432
#define VIDEO_80x43 17,467
#define VIDEO_80x28 18,502
#define VIDEO_CURRENT_MODE 19,537
#define VIDEO_80x30 20,572
#define VIDEO_80x34 21,607
#define VIDEO_80x60 22,642
#define VIDEO_LAST_SPECIAL 23,677
#define ASK_VGA 25,713
#define VIDEO_VESA_BY_SIZE 26,748
#define VIDEO_RECALC 29,821

xen/arch/x86/boot/cmdline.S,886
.Latoi:.Latoi12,240
.Lstrstr:.Lstrstr56,1383
.Lstr_prefix:.Lstr_prefix86,2046
.Lstrlen:.Lstrlen104,2463
.Lfind_option:.Lfind_option121,2807
cmdline_parse_early:cmdline_parse_early150,3457
.Lparse_edd:.Lparse_edd175,4250
.Lparse_edid:.Lparse_edid192,4926
.Lparse_vga:.Lparse_vga218,5771
.Lparse_vga_gfx:.Lparse_vga_gfx257,6867
.Lparse_vga_mode:.Lparse_vga_mode296,7957
.Lparse_vga_current:.Lparse_vga_current313,8406
.Lcmdline_exit:.Lcmdline_exit325,8741
.Lvga_text_modes:.Lvga_text_modes329,8783
.Lvga_opt:.Lvga_opt339,9061
.Lvga_text80:.Lvga_text80341,9094
.Lvga_gfx:.Lvga_gfx343,9135
.Lvga_mode:.Lvga_mode345,9169
.Lvga_current:.Lvga_current347,9205
.Lno_rm_opt:.Lno_rm_opt349,9246
.Ltboot_opt:.Ltboot_opt351,9290
.Ledid_opt:.Ledid_opt353,9327
.Ledid_force:.Ledid_force355,9362
.Ledid_no:.Ledid_no357,9400
.Ledd_opt:.Ledd_opt359,9432

xen/arch/x86/boot/trampoline.S,655
trampoline_realmode_entry:trampoline_realmode_entry8,190
idt_48:idt_4822,675
gdt_48:gdt_4823,718
trampoline_gdt:trampoline_gdt25,785
cpuid_ext_features:cpuid_ext_features41,1473
trampoline_xen_phys_start:trampoline_xen_phys_start45,1553
trampoline_cpu_started:trampoline_cpu_started49,1637
trampoline_protmode_entry:trampoline_protmode_entry53,1696
.Lskip_efer:.Lskip_efer85,2741
start64:start6498,3035
high_start:high_start103,3142
trampoline_boot_cpu_entry:trampoline_boot_cpu_entry121,3526
.Lskip_realmode:.Lskip_realmode194,5754
skip_realmode:skip_realmode201,5962
rm_idt:rm_idt204,5996
early_stack:early_stack213,6150

xen/arch/x86/mpparse.c,2304
int smp_found_config;37,890
unsigned int __devinitdata maxcpus 38,912
int apic_version 44,1038
int mp_bus_id_to_type 45,1068
int mp_bus_id_to_node 46,1107
int mp_bus_id_to_local 47,1146
int mp_bus_id_to_pci_bus 48,1186
static int mp_current_pci_id;49,1263
struct mpc_config_ioapic mp_ioapics[mp_ioapics52,1317
struct mpc_config_intsrc mp_irqs[mp_irqs55,1402
int mp_irq_entries;58,1482
int pic_mode;60,1503
unsigned long mp_lapic_addr;61,1517
unsigned int def_to_bigsmp 63,1547
unsigned int boot_cpu_physical_apicid 66,1622
static unsigned int __devinitdata num_processors;68,1698
physid_mask_t phys_cpu_present_map;71,1791
static int __init mpf_checksum(82,1925
static int mpc_record;98,2232
static struct mpc_config_translation *translation_table[MAX_MPC_ENTRY] __initdata;99,2256
static int __devinit MP_processor_info_x(102,2410
static int __devinit MP_processor_info(217,5699
static void __init MP_bus_info 222,5822
static void __init MP_ioapic_info 258,7082
static void __init MP_intsrc_info 279,7683
static void __init MP_lintsrc_info 291,8103
static void __init MP_translation_info 314,8817
static void __init smp_read_mpc_oem(330,9352
static inline void mps_oem_check(373,10500
static int __init smp_read_mpc(388,10855
static int __init ELCR_trigger(500,13269
static void __init construct_default_ioirq_mptable(508,13410
static inline void __init construct_default_ISA_mptable(574,15308
static struct intel_mp_floating *mpf_found;mpf_found658,17437
void __init get_smp_config 663,17547
static int __init smp_scan_config 734,19476
void __init find_smp_config 782,20806
void __init mp_register_lapic_address 826,22104
int __devinit mp_register_lapic 841,22427
void mp_unregister_lapic(871,23263
#define MP_ISA_BUS	887,23585
#define MP_MAX_IOAPIC_PIN	888,23607
static struct mp_ioapic_routing 890,23638
	int			apic_id;891,23672
	int			gsi_base;892,23688
	int			gsi_end;893,23705
	u32			pin_programmed[pin_programmed894,23721
} mp_ioapic_routing[mp_ioapic_routing895,23747
static int mp_find_ioapic 898,23784
void __init mp_register_ioapic 916,24118
unsigned highest_gsi(972,25665
unsigned apic_gsi_base(981,25847
void __init mp_override_legacy_irq 986,25927
void __init mp_config_acpi_legacy_irqs 1032,27170
int mp_register_gsi 1097,28905

xen/arch/x86/microcode_intel.c,816
#define pr_debug(37,1147
#define DEFAULT_UCODE_DATASIZE 39,1181
#define MC_HEADER_SIZE 40,1220
#define DEFAULT_UCODE_TOTALSIZE 41,1292
#define EXT_HEADER_SIZE 42,1366
#define EXT_SIGNATURE_SIZE 43,1433
#define DWSIZE 44,1501
#define get_totalsize(45,1547
#define get_datasize(50,1728
#define sigmatch(54,1894
#define exttable_size(57,2006
static int collect_cpu_info(62,2191
static inline int microcode_update_match(100,3310
static int microcode_sanity_check(109,3620
static int get_matching_microcode(203,6443
static int apply_microcode(250,7899
static long get_next_ucode_from_buffer(296,9388
static int cpu_request_microcode(324,10199
static int microcode_resume_match(364,11163
static const struct microcode_ops microcode_intel_ops 372,11429
static __init int microcode_init_intel(379,11733

xen/arch/x86/trace.c,856
#undef TRC_64_FLAG10,181
#define TRC_64_FLAG 11,200
asmlinkage void trace_hypercall(14,230
            unsigned long eip;34,638
            u32 eax;35,669
void __trace_pv_trap(48,928
            unsigned long eip;72,1530
            unsigned trapnr:trapnr73,1561
                use_error_code:use_error_code74,1593
                error_code:error_code75,1627
void __trace_pv_page_fault(90,1977
            unsigned long eip,111,2463
            unsigned long eip, addr;111,2463
            u32 error_code;112,2500
void __trace_trap_one_addr(125,2789
void __trace_trap_two_addr(141,3103
            unsigned long va1,158,3492
            unsigned long va1, va2;158,3492
void __trace_ptwr_emulation(167,3688
            l1_pgentry_t pte;196,4560
            unsigned long addr,197,4590
            unsigned long addr, eip;197,4590

xen/arch/x86/apic.c,2834
static bool_t tdt_enabled __read_mostly;41,1090
static bool_t tdt_enable __initdata 42,1131
    int active;46,1223
    unsigned int apic_id;48,1265
    unsigned int apic_taskpri;49,1291
    unsigned int apic_ldr;50,1322
    unsigned int apic_dfr;51,1349
    unsigned int apic_spiv;52,1376
    unsigned int apic_lvtt;53,1404
    unsigned int apic_lvtpc;54,1432
    unsigned int apic_lvtcmci;55,1461
    unsigned int apic_lvt0;56,1492
    unsigned int apic_lvt1;57,1520
    unsigned int apic_lvterr;58,1548
    unsigned int apic_tmict;59,1578
    unsigned int apic_tdcr;60,1607
    unsigned int apic_thmr;61,1635
} apic_pm_state;62,1663
static int enable_local_apic __initdata 67,1749
int apic_verbosity;72,1857
static bool_t __initdata opt_x2apic 74,1878
bool_t __read_mostly x2apic_enabled 77,1957
bool_t __read_mostly directed_eoi_enabled 78,1998
BUILD_SMP_INTERRUPT(85,2218
void ack_bad_irq(122,3621
void __init apic_intr_init(138,4163
static bool_t __read_mostly using_apic_timer;163,4960
static bool_t __read_mostly enabled_via_apicbase;165,5007
void enable_NMI_through_LVT0 167,5058
int get_physical_broadcast(179,5368
int get_maxlvt(187,5479
void clear_local_APIC(198,5729
void __init connect_bsp_APIC(269,7863
void disconnect_bsp_APIC(288,8356
void disable_local_APIC(340,10317
int __init verify_local_APIC(364,10940
void __init sync_Arb_IDs(429,12756
void __init init_bsp_APIC(450,13252
static void apic_pm_activate(494,14420
static void __enable_x2apic(499,14490
static void resume_x2apic(512,14830
void __devinit setup_local_APIC(545,15480
int lapic_suspend(726,21323
int lapic_resume(759,22355
void lapic_shutdown(822,24325
static void __init lapic_disable(843,24666
static void __init lapic_enable(850,24826
static void __init apic_set_verbosity(856,24938
static int __init detect_init_APIC 868,25351
void x2apic_ap_setup(951,27843
void __init x2apic_bsp_setup(957,27928
void __init init_apic_mappings(1038,29923
static u32 __read_mostly bus_scale;1086,31470
static unsigned int __init get_8254_timer_count(1093,31714
static void __init wait_8254_wraparound(1112,32143
void (*wait_timer_tick)wait_timer_tick1132,32675
#define APIC_DIVISOR 1145,33174
static void __devinit setup_APIC_timer(1171,33912
static int __init calibrate_APIC_clock(1192,34542
void __init setup_boot_APIC_clock(1268,36704
void __devinit setup_secondary_APIC_clock(1289,37149
void disable_APIC_timer(1294,37226
void enable_APIC_timer(1307,37535
#undef APIC_DIVISOR1317,37731
int reprogram_timer(1324,37958
fastcall void smp_apic_timer_interrupt(1347,38505
void smp_send_state_dump(1358,38797
fastcall void smp_spurious_interrupt(1368,39102
fastcall void smp_error_interrupt(1403,40075
fastcall void smp_pmu_apic_interrupt(1435,40919
int __init APIC_init_uniprocessor 1447,41210

xen/arch/x86/x86_32/mm.c,697
    idle_pg_table_l2[idle_pg_table_l235,1255
unsigned int __read_mostly PAGE_HYPERVISOR 39,1360
unsigned int __read_mostly PAGE_HYPERVISOR_NOCACHE 40,1432
static unsigned long __read_mostly mpt_size;42,1513
void *alloc_xen_pagetable(alloc_xen_pagetable44,1559
l2_pgentry_t *virt_to_xen_l2e(virt_to_xen_l2e60,1867
void *do_page_walk(do_page_walk65,1970
void __init paging_init(70,2047
#define MFN(98,3140
#define CNT 99,3209
#undef CNT122,4394
#undef MFN123,4405
void __init setup_idle_pagetable(139,4903
void __init zap_low_mappings(150,5275
void __init subarch_init_memory(172,6073
long subarch_memory_op(204,7075
long do_stack_switch(248,8144
int check_descriptor(263,8523

xen/arch/x86/x86_32/domain_page.c,497
static inline struct vcpu *mapcache_current_vcpu(mapcache_current_vcpu20,464
void *map_domain_page(map_domain_page44,1224
void unmap_domain_page(119,3317
void mapcache_domain_init(172,4753
void mapcache_vcpu_init(179,4948
#define GLOBALMAP_BITS 193,5303
static unsigned long inuse[inuse194,5364
static unsigned long garbage[garbage195,5423
static unsigned int inuse_cursor;196,5484
void *map_domain_page_global(map_domain_page_global199,5559
void unmap_domain_page_global(248,6942

xen/arch/x86/x86_32/seg_fixup.c,439
#define INSN_SUFFIX_BYTES 36,1227
#define OPCODE_BYTE 37,1257
#define HAS_MODRM 38,1292
#define X 41,1359
#define O 42,1409
#define M 43,1432
static const u8 insn_decode[insn_decode45,1454
static const u8 float_decode[float_decode96,2894
static const u8 twobyte_decode[twobyte_decode107,3363
static int get_baselimit(167,5226
static int linearise_address(218,6675
static int fixup_seg(233,6944
int gpf_emulate_4gb(325,9856

xen/arch/x86/x86_32/traps.c,1099
static void print_xen_info(25,503
enum context 39,848
enum context { CTXT_hypervisor,39,848
enum context { CTXT_hypervisor, CTXT_pv_guest,39,848
enum context { CTXT_hypervisor, CTXT_pv_guest, CTXT_hvm_guest 39,848
static void _show_registers(41,914
void show_registers(71,2113
void vcpu_show_registers(136,4248
void show_page_walk(152,4676
    boot_cpu_doublefault_space[boot_cpu_doublefault_space199,6324
static int cpu_doublefault_tss_callback(201,6368
static struct notifier_block cpu_doublefault_tss_nfb 228,6998
asmlinkage void do_double_fault(232,7109
unsigned long do_iret(263,8148
static void set_task_gate(326,9991
void __devinit subarch_percpu_traps_init(335,10230
void init_int80_direct_trap(373,11385
static void do_update_sysenter(403,12486
static long register_guest_callback(412,12678
static long unregister_guest_callback(465,14121
long do_callback_op(493,14635
long do_set_callbacks(531,15281
static void hypercall_page_initialise_ring0_kernel(551,15875
static void hypercall_page_initialise_ring1_kernel(588,17168
void hypercall_page_initialise(616,18070

xen/arch/x86/x86_32/entry.S,1856
restore_all_guest:restore_all_guest65,3120
.Lrestore_sregs_guest:.Lrestore_sregs_guest83,3612
.Lft1:.Lft184,3635
.Lft2:.Lft285,3677
.Lft3:.Lft386,3719
.Lft4:.Lft487,3761
.Lrestore_iret_guest:.Lrestore_iret_guest88,3803
.Lft5:.Lft589,3825
.section 90,3838
.Lfx1:.Lfx191,3859
.Ldf1:.Ldf1101,4230
failsafe_callback:failsafe_callback103,4286
restore_all_xen:restore_all_xen130,5226
skip_clobber:skip_clobber204,7621
test_all_events:test_all_events207,7643
test_guest_events:test_guest_events220,8062
process_softirqs:process_softirqs238,8641
process_mce:process_mce245,8770
process_nmi:process_nmi261,9322
process_trap:process_trap274,9827
bad_hypercall:bad_hypercall279,9945
create_bounce_frame:create_bounce_frame287,10321
.Lft6:.Lft6294,10602
.Lft7:.Lft7299,10813
.Lft8:.Lft8301,10877
.Lft9:.Lft9303,10942
.Lft10:.Lft10305,11007
.Lft11:.Lft11309,11166
.Lft12:.Lft12311,11230
ring1:ring1313,11275
.Lft13:.Lft13315,11387
.Lft14:.Lft14320,11573
.Lft15:.Lft15334,12131
.Lft16:.Lft16341,12505
.Lft17:.Lft17346,12712
.Lft22:.Lft22353,13036
.Lft23:.Lft23355,13100
.Lft24:.Lft24357,13165
.Lft25:.Lft25359,13230
.Lvm86_2:.Lvm86_2361,13284
.Lft18:.Lft18363,13369
.Lft19:.Lft19364,13398
.Lft20:.Lft20365,13428
.Lft21:.Lft21366,13458
.Lnvm86_3:.Lnvm86_3376,13842
domain_crash_synchronous_string:domain_crash_synchronous_string412,15548
domain_crash_synchronous:domain_crash_synchronous415,15645
handle_exception:handle_exception432,16083
exception_with_ints_disabled:exception_with_ints_disabled463,17151
FATAL_exception_with_ints_disabled:FATAL_exception_with_ints_disabled483,17953
handle_nmi_mce:handle_nmi_mce566,19991
.Lnmi_mce_common:.Lnmi_mce_common574,20277
.Lnmi_mce_xen:.Lnmi_mce_xen587,20752
.Lnmi_mce_vm86:.Lnmi_mce_vm86611,21903
.section 641,22667

xen/arch/x86/x86_32/machine_kexec.c,34
int machine_kexec_get_xen(14,314

xen/arch/x86/x86_32/asm-offsets.c,228
#define COMPILE_OFFSETS6,174
#define DEFINE(15,346
#define BLANK(17,445
#define OFFSET(19,503
#define __L2(23,602
#define __L4(24,652
#define __L8(25,729
#define __L16(26,806
#define LOG_2(27,883
void __dummy__(29,961

xen/arch/x86/x86_32/pci.c,289
#define PCI_CONF_ADDRESS(11,214
uint8_t pci_conf_read8(14,335
uint16_t pci_conf_read16(21,586
uint32_t pci_conf_read32(28,839
void pci_conf_write8(35,1086
void pci_conf_write16(43,1353
void pci_conf_write32(51,1622
int pci_find_ext_capability(59,1885
void acpi_mmcfg_init(64,1970

xen/arch/x86/x86_32/supervisor_mode_kernel.S,363
RRG0:RRG035,1196
RRG1:RRG143,1463
RRG2:RRG246,1509
RRG3:RRG353,1748
RRG4:RRG454,1790
RRG5:RRG555,1832
RRG6:RRG656,1874
RRG7:RRG758,1917
.section 63,1988
TRP1:TRP1110,3546
TRP2:TRP2121,3825
.section 134,4082
domain_crash_synchronous_string:domain_crash_synchronous_string139,4205
domain_crash_synchronous:domain_crash_synchronous142,4319

xen/arch/x86/x86_32/gdbstub.c,225
gdb_arch_read_reg_array(26,979
#define GDB_REG(28,1058
#undef GDB_REG39,1364
#define GDB_SEG_REG(40,1379
#undef GDB_SEG_REG49,1704
gdb_arch_write_reg_array(54,1757
gdb_arch_read_reg(62,1938
gdb_arch_write_reg(69,2088

xen/arch/x86/delay.c,22
void __udelay(19,497

xen/arch/x86/crash.c,202
static atomic_t waiting_for_crash_ipi;31,718
static unsigned int crashing_cpu;32,757
static int crash_nmi_callback(34,792
static void nmi_shootdown_cpus(56,1299
void machine_crash_shutdown(86,2019

xen/arch/x86/percpu.c,367
unsigned long __per_cpu_offset[__per_cpu_offset7,112
#define INVALID_PERCPU_AREA 8,153
#define PERCPU_ORDER 9,206
void __init percpu_init_areas(11,287
static int init_percpu_area(18,445
static void free_percpu_area(30,788
static int cpu_percpu_callback(37,985
static struct notifier_block cpu_percpu_nfb 59,1435
static int __init percpu_presmp_init(64,1572

xen/arch/x86/acpi/suspend.c,520
static unsigned long saved_lstar,19,405
static unsigned long saved_lstar, saved_cstar;19,405
static unsigned long saved_sysenter_esp,20,452
static unsigned long saved_sysenter_esp, saved_sysenter_eip;20,452
static unsigned long saved_fs_base,21,513
static unsigned long saved_fs_base, saved_gs_base,21,513
static unsigned long saved_fs_base, saved_gs_base, saved_kernel_gs_base;21,513
static uint16_t saved_segs[saved_segs22,586
void save_rest_processor_state(25,625
void restore_rest_processor_state(48,1292

xen/arch/x86/acpi/power.c,722
uint32_t system_reset_counter 34,904
static char __initdata opt_acpi_sleep[opt_acpi_sleep36,940
static u8 sleep_states[sleep_states39,1028
struct acpi_sleep_info acpi_sinfo;42,1106
static int device_power_down(46,1175
static void device_power_up(63,1364
static void freeze_domains(78,1531
static void thaw_domains(93,1973
static void acpi_sleep_prepare(103,2165
static void acpi_sleep_post(123,2699
static int enter_state(126,2797
static long enter_state_helper(218,4749
int acpi_enter_sleep(228,5055
static int acpi_get_wake_status(252,5745
static void tboot_sleep(267,6123
#define TB_COPY_GAS(271,6194
acpi_status asmlinkage acpi_enter_sleep_state(313,7756
static int __init acpi_sleep_init(346,8681

xen/arch/x86/acpi/wakeup_prot.S,482
__ret_point:__ret_point105,2119
saved_magic:saved_magic172,3572
saved_ss:saved_ss174,3609
saved_gdt:saved_gdt198,3971
saved_idt:saved_idt199,3999
saved_ldt:saved_ldt200,4027
saved_cr0:saved_cr0202,4056
saved_cr3:saved_cr3203,4082
saved_cr8:saved_cr8204,4108
saved_gdt:saved_gdt208,4169
saved_idt:saved_idt209,4197
saved_ldt:saved_ldt210,4225
saved_cr0:saved_cr0212,4252
saved_cr3:saved_cr3213,4278
saved_ds:saved_ds215,4305
saved_es:saved_es216,4331

xen/arch/x86/acpi/cpu_idle.c,2540
#define GET_HW_RES_IN_NS(58,2112
#define GET_PC3_RES(60,2214
#define GET_PC6_RES(61,2269
#define GET_PC7_RES(62,2324
#define GET_CC3_RES(63,2379
#define GET_CC6_RES(64,2434
static void lapic_timer_nop(66,2490
static void (*pm_idle_save)pm_idle_save79,2918
struct hw_residencies87,3270
    uint64_t pc3;89,3294
    uint64_t pc6;90,3312
    uint64_t pc7;91,3330
    uint64_t cc3;92,3348
    uint64_t cc6;93,3366
static void do_get_hw_residencies(96,3388
static void get_hw_residencies(123,3981
static void print_hw_residencies(132,4265
static char* acpi_cstate_method_name[acpi_cstate_method_name144,4588
static void print_acpi_power(152,4682
static void dump_cx(184,5777
static struct keyhandler dump_cx_keyhandler 194,6035
static int __init cpu_idle_key_init(200,6167
static uint64_t get_stime_tick(207,6310
static uint64_t stime_ticks_elapsed(208,6375
static uint64_t stime_tick_to_ns(209,6457
static uint64_t ns_to_stime_tick(210,6524
static uint64_t get_acpi_pm_tick(212,6586
static uint64_t acpi_pm_ticks_elapsed(213,6665
#define MWAIT_ECX_INTERRUPT_BREAK 223,6956
static cpumask_t cpuidle_mwait_flags;230,7192
void cpuidle_wakeup_mwait(232,7231
static void mwait_idle_with_hints(246,7541
static void acpi_processor_ffh_cstate_enter(269,8192
static void acpi_idle_do_entry(274,8338
static int acpi_idle_bm_check(299,9054
    spinlock_t lock;315,9512
    unsigned int count;316,9533
} c3_cpu_status 317,9557
static inline void trace_exit_reason(319,9608
static int sched_has_urgent_vcpu(343,10300
bool_t errata_c6_eoi_workaround(356,10753
static void acpi_processor_idle(373,11328
static void acpi_dead_idle(551,16704
static int init_cx_pminfo(588,17615
#define CPUID_MWAIT_LEAF 609,18182
#define CPUID5_ECX_EXTENSIONS_SUPPORTED 610,18211
#define CPUID5_ECX_INTERRUPT_BREAK 611,18257
#define MWAIT_ECX_INTERRUPT_BREAK 613,18304
#define MWAIT_SUBSTATE_MASK 615,18351
#define MWAIT_SUBSTATE_SIZE 616,18385
static int acpi_processor_ffh_cstate_probe(618,18418
static void acpi_processor_power_init_bm_check(663,20028
#define VENDOR_INTEL 691,20886
#define NATIVE_CSTATE_BEYOND_HALT 692,20929
static int check_cx(694,20973
static unsigned int latency_factor 810,24576
static void set_cx(813,24671
int get_cpu_id(860,26001
static void print_cx_pminfo(879,26312
#define print_cx_pminfo(925,28025
long set_cx_pminfo(928,28063
uint32_t pmstat_get_cx_nr(1015,30314
int pmstat_get_cx_stat(1020,30434
int pmstat_reset_cx_stat(1069,31675
void cpuidle_disable_deep_cstate(1074,31735

xen/arch/x86/acpi/boot.c,1977
int sbf_port;46,1547
#define CONFIG_ACPI_PCI47,1561
#define BAD_MADT_ENTRY(49,1586
#define PREFIX	53,1766
bool_t __initdata acpi_noirq;56,1816
bool_t __initdata acpi_pci_disabled;57,1881
bool_t __initdata acpi_noirq 59,1972
bool_t __initdata acpi_pci_disabled 60,2006
bool_t __initdata acpi_ht 62,2054
bool_t __initdata acpi_lapic;64,2102
bool_t __initdata acpi_ioapic;65,2132
u8 acpi_sci_flags __initdata;67,2164
int acpi_sci_override_gsi __initdata;68,2194
bool_t acpi_skip_timer_override __initdata;69,2232
static u64 acpi_lapic_addr __initdata 72,2306
u32 acpi_smi_cmd;75,2378
u8 acpi_enable_value,76,2396
u8 acpi_enable_value, acpi_disable_value;76,2396
u32 x86_acpiid_to_apicid[x86_acpiid_to_apicid82,2527
enum acpi_irq_model_id		acpi_irq_model 94,2994
char *__acpi_map_table(__acpi_map_table108,3610
static int __init acpi_parse_madt(138,4308
acpi_parse_x2apic(157,4705
acpi_parse_lapic(186,5488
acpi_parse_lapic_addr_ovr(215,6266
acpi_parse_x2apic_nmi(231,6622
acpi_parse_lapic_nmi(250,7043
acpi_parse_ioapic(272,7561
acpi_parse_int_src_ovr(290,7940
acpi_parse_nmi_src(316,8550
static int __init acpi_parse_sbf(334,8905
static int __init acpi_parse_hpet(351,9219
#define	acpi_parse_hpet	377,9886
#define acpi_fadt_copy_address(381,9948
acpi_fadt_parse_sleep_info(395,10525
static int __init acpi_parse_fadt(459,12395
static int __init acpi_parse_madt_lapic_entries(512,13856
static int __init acpi_parse_madt_ioapic_entries(569,15471
static inline int acpi_parse_madt_ioapic_entries(640,17209
static void __init acpi_process_madt(647,17344
static int __init disable_acpi_irq(690,18137
static int __init disable_acpi_pci(700,18339
static int __init dmi_disable_acpi(710,18547
static int __init force_acpi_ht(725,18868
static struct dmi_system_id __initdata acpi_dmi_table[acpi_dmi_table743,19311
int __init acpi_boot_table_init(921,23667
int __init acpi_boot_init(964,24417
unsigned int acpi_get_processor_id(996,24974

xen/arch/x86/acpi/cpufreq/powernow.c,1390
#define CPUID_6_ECX_APERFMPERF_CAPABILITY 41,1394
#define CPUID_FREQ_VOLT_CAPABILITIES 42,1448
#define CPB_CAPABLE 43,1499
#define USE_HW_PSTATE 44,1542
#define HW_PSTATE_MASK 45,1585
#define HW_PSTATE_VALID_MASK 46,1628
#define HW_PSTATE_MAX_MASK 47,1671
#define HW_PSTATE_MAX_SHIFT 48,1714
#define MSR_PSTATE_DEF_BASE 49,1748
#define MSR_PSTATE_STATUS 50,1817
#define MSR_PSTATE_CTRL 51,1884
#define MSR_PSTATE_CUR_LIMIT 52,1952
#define MSR_HWCR_CPBDIS_MASK 53,2026
struct powernow_cpufreq_data 55,2073
    struct processor_performance *acpi_data;acpi_data56,2104
    struct cpufreq_frequency_table *freq_table;freq_table57,2149
    unsigned int max_freq;58,2197
    unsigned int resume;59,2224
    unsigned int cpu_feature;60,2249
static struct powernow_cpufreq_data *drv_data[drv_data63,2283
static struct cpufreq_driver powernow_cpufreq_driver;65,2340
struct drv_cmd 67,2395
    unsigned int type;68,2412
    const cpumask_t *mask;mask69,2435
    u32 val;70,2462
    int turbo;71,2475
static void transition_pstate(74,2494
static int powernow_cpufreq_target(91,2978
static int powernow_cpufreq_verify(149,4774
static void feature_detect(166,5277
static int powernow_cpufreq_cpu_init(187,5885
static int powernow_cpufreq_cpu_exit(294,9120
static struct cpufreq_driver powernow_cpufreq_driver 307,9387
unsigned int powernow_register_driver(314,9607

xen/arch/x86/acpi/cpufreq/cpufreq.c,1805
    UNDEFINED_CAPABLE 49,1762
    SYSTEM_INTEL_MSR_CAPABLE,50,1789
    SYSTEM_IO_CAPABLE,51,1819
#define INTEL_MSR_RANGE 54,1846
#define CPUID_6_ECX_APERFMPERF_CAPABILITY 55,1890
static struct acpi_cpufreq_data *drv_data[drv_data57,1945
static struct cpufreq_driver acpi_cpufreq_driver;59,1998
static unsigned int __read_mostly acpi_pstate_strict;61,2049
static int check_est_cpu(64,2161
static unsigned extract_io(75,2380
static unsigned extract_msr(89,2693
static unsigned extract_freq(104,3114
struct msr_addr 116,3399
    u32 reg;117,3417
struct io_addr 120,3434
    u16 port;121,3451
    u8 bit_width;122,3465
    struct msr_addr msr;126,3503
    struct io_addr io;127,3528
} drv_addr_union;128,3551
struct drv_cmd 130,3570
    unsigned int type;131,3587
    const cpumask_t *mask;mask132,3610
    drv_addr_union addr;133,3637
    u32 val;134,3662
static void do_drv_read(137,3679
static void do_drv_write(156,4097
static void drv_read(179,4692
static void drv_write(192,5021
static u32 get_cur_val(200,5238
struct perf_pair 240,6299
            uint32_t lo;243,6347
            uint32_t hi;244,6372
        } split;245,6397
        uint64_t whole;246,6414
    } aperf,247,6438
    } aperf, mperf;247,6438
static void read_measured_perf_ctrs(252,6574
unsigned int get_measured_perf(273,7350
static unsigned int get_cur_freq_on_cpu(362,9644
static void feature_detect(384,10156
static unsigned int check_freqs(404,10683
static int acpi_cpufreq_target(419,11052
static int acpi_cpufreq_verify(499,13667
acpi_cpufreq_guess_freq(517,14183
acpi_cpufreq_cpu_init(545,14997
static int acpi_cpufreq_cpu_exit(660,18457
static struct cpufreq_driver acpi_cpufreq_driver 673,18716
static int __init cpufreq_driver_init(681,18947
int cpufreq_cpu_init(696,19376

xen/arch/x86/acpi/cpuidle_menu.c,1166
#define BUCKETS 35,1308
#define RESOLUTION 36,1326
#define DECAY 37,1350
#define MAX_INTERESTING 38,1366
struct perf_factor{perf_factor93,3935
    s_time_t    time_stamp;94,3955
    s_time_t    duration;95,3983
    unsigned int irq_count_stamp;96,4009
    unsigned int irq_sum;97,4043
struct menu_device100,4073
    int             last_state_idx;102,4094
    unsigned int    expected_us;103,4130
    u64             predicted_us;104,4163
    unsigned int    measured_us;105,4197
    unsigned int    exit_us;106,4230
    unsigned int    bucket;107,4259
    u64             correction_factor[correction_factor108,4287
    struct perf_factor pf;109,4335
static inline int which_bucket(114,4424
#define SAMPLING_PERIOD 139,5053
#define IO_MULTIPLIER 142,5164
static inline s_time_t avg_intr_interval_us(144,5195
static unsigned int get_sleep_length_us(174,6068
static int menu_select(185,6452
static void menu_reflect(231,7960
static int menu_enable_device(271,9088
static struct cpuidle_governor menu_governor 281,9306
struct cpuidle_governor *cpuidle_current_governor cpuidle_current_governor290,9518
void menu_get_trace_data(291,9586

xen/arch/x86/cpu/mcheck/mce-apei.c,355
#define CPER_CREATOR_MCE	40,1485
#define CPER_SECTION_TYPE_MCE	43,1606
struct cper_mce_record 52,1842
	struct cper_record_header hdr;53,1867
	struct cper_section_descriptor sec_hdr;54,1899
	struct mce mce;55,1940
} __packed;56,1957
int apei_write_mce(60,2016
size_t apei_read_mce(95,3079
int apei_check_mce(121,3686
int apei_clear_mce(126,3749

xen/arch/x86/cpu/mcheck/mctelem.h,205
#define	_MCTELEM_H13,336
typedef struct mctelem_cookie *mctelem_cookie_t;mctelem_cookie_t55,2481
typedef enum mctelem_class 57,2531
	MC_URGENT,58,2560
	MC_NONURGENT59,2572
} mctelem_class_t;60,2586

xen/arch/x86/cpu/mcheck/non-fatal.c,339
static struct timer mce_timer;26,542
#define MCE_PERIOD 28,574
#define MCE_PERIOD_MIN 29,609
#define MCE_PERIOD_MAX 30,648
static uint64_t period 32,689
static int adjust 33,726
static int variable_period 34,749
static void mce_checkregs 36,782
static void mce_work_fn(70,1755
static int __init init_nonfatal_mce_checker(89,2099

xen/arch/x86/cpu/mcheck/vmce.c,643
#define dom_vmce(21,376
uint64_t g_mcg_cap;23,421
uint64_t h_mcg_ctl 26,479
uint64_t *h_mci_ctrl;h_mci_ctrl27,505
int vmce_init_msr(29,528
void vmce_destroy_msr(55,1168
static int bank_mce_rdmsr(64,1334
int vmce_rdmsr(146,3856
static int bank_mce_wrmsr(184,4828
int vmce_wrmsr(248,6738
int inject_vmce(304,8527
static struct bank_entry* alloc_bank_entry(361,10546
int fill_vmsr_data(383,11117
int vmce_domain_inject(428,12760
int vmce_init(440,13003
static int mca_ctl_conflict(469,13713
static int is_hvm_vmce_ready(486,14124
int is_vmce_ready(550,15588
#define P2M_UNMAP_TYPES 563,15905
int unmmap_broken_page(575,16397

xen/arch/x86/cpu/mcheck/amd_f10.c,71
amd_f10_handler(53,1462
enum mcheck_type amd_f10_mcheck_init(92,2440

xen/arch/x86/cpu/mcheck/x86_mca.h,1882
#define X86_MCA_H21,835
#define MCG_SER_P 33,1147
#define MCG_CAP_COUNT 34,1189
#define MCG_CTL_P 35,1243
#define MCG_EXT_P	36,1297
#define MCG_EXT_CNT	37,1325
#define MCG_CMCI_P	38,1351
#define MCG_STATUS_RIPV 42,1463
#define MCG_STATUS_EIPV 43,1517
#define MCG_STATUS_MCIP 44,1571
#define MCi_STATUS_MCA 49,1722
#define MCi_STATUS_MSEC 51,1808
#define MCi_STATUS_OTHER 53,1886
#define MCi_STATUS_AR 55,1967
#define MCi_STATUS_S 57,2042
#define MCi_STATUS_PCC 59,2128
#define MCi_STATUS_ADDRV 61,2219
#define MCi_STATUS_MISCV 63,2310
#define MCi_STATUS_EN 65,2394
#define MCi_STATUS_UC 67,2472
#define MCi_STATUS_OVER 69,2557
#define MCi_STATUS_VAL 71,2623
#define MCi_STATUS_OTHER_RESERVED1 75,2739
#define MCi_STATUS_OTEHR_UC_ECC 77,2831
#define MCi_STATUS_OTHER_C_ECC 79,2921
#define MCi_STATUS_OTHER_ECC_SYNDROME 81,3018
#define MCi_STATUS_OTHER_RESERVED2 83,3100
#define K8_HWCR_MCi_STATUS_WREN	86,3202
#define CMCI_THRESHOLD	89,3277
#define MCi_MISC_ADDRMOD_MASK 91,3307
#define MCi_MISC_PHYSMOD 92,3350
struct mca_banks96,3417
    int num;98,3436
    unsigned long *bank_map;bank_map99,3449
static inline void mcabanks_clear(102,3482
static inline void mcabanks_set(109,3671
static inline int mcabanks_test(116,3850
#define MCA_RECOVERED 140,4888
#define MCA_OWNER 142,4986
#define MCA_NEED_RESET 144,5065
#define MCA_NO_ACTION 146,5143
struct mca_handle_result148,5177
    uint32_t result;150,5204
    domid_t owner;152,5263
    struct recovery_action *action;action154,5341
struct mca_binfo 158,5441
    int bank;159,5460
    struct mcinfo_global *mig;mig160,5474
    struct mcinfo_bank *mib;mib161,5505
    struct mc_info *mi;mi162,5534
    struct cpu_user_regs *regs;regs163,5558
struct mca_error_handler169,5713
    int (*owned_error)owned_error176,5979
    void (*recovery_handler)recovery_handler177,6020

xen/arch/x86/cpu/mcheck/amd_nonfatal.c,362
static struct timer mce_timer;68,1966
#define MCE_PERIOD 70,1998
#define MCE_MIN 71,2034
#define MCE_MAX 72,2069
static s_time_t period 74,2106
static int hw_threshold 75,2143
static int adjust 76,2172
static int variable_period 77,2195
static void mce_amd_checkregs(83,2345
static void mce_amd_work_fn(131,3951
void amd_nonfatal_mcheck_init(206,5971

xen/arch/x86/cpu/mcheck/mce_intel.c,3444
bool_t __read_mostly cmci_support 23,558
static bool_t __read_mostly ser_support 24,597
static bool_t __read_mostly mce_force_broadcast;25,642
static int nr_intel_ext_msrs 28,738
static void unexpected_thermal_interrupt(32,826
static void intel_thermal_interrupt(40,1095
fastcall void smp_thermal_interrupt(66,1929
static void intel_init_thermal(76,2201
struct mce_softirq_barrier 135,4214
	atomic_t val;136,4243
	atomic_t ingen;137,4258
	atomic_t outgen;138,4275
static struct mce_softirq_barrier mce_inside_bar,141,4297
static struct mce_softirq_barrier mce_inside_bar, mce_severity_bar;141,4297
static struct mce_softirq_barrier mce_trap_bar;142,4365
static atomic_t severity_cpu 152,4700
static atomic_t found_error 153,4748
static cpumask_t mce_fatal_cpus;154,4794
struct mca_error_handler *mce_dhandlers,mce_dhandlers159,4950
struct mca_error_handler *mce_dhandlers, *mce_uhandlers;mce_uhandlers159,4950
int mce_dhandler_num,160,5007
int mce_dhandler_num, mce_uhandler_num;160,5007
enum mce_result162,5048
    MCER_NOERROR,164,5066
    MCER_RECOVERED,165,5084
    MCER_CONTINUE,167,5145
    MCER_RESET,168,5164
static enum mce_result mce_action(172,5238
static int mce_delayed_action(251,7629
static void mce_softirq(283,8450
static int mce_urgent_action(335,9930
static void mce_panic_check(366,10971
static void mce_barrier_init(378,11183
static void mce_handler_init(385,11351
static void mce_barrier_dec(406,11982
static void mce_spin_lock(414,12129
static void mce_spin_unlock(422,12278
static void mce_barrier_enter(439,12931
static void mce_barrier_exit(456,13338
static void mce_barrier(474,13734
static inline void intel_get_extended_msr(482,13886
intel_get_extended_msrs(494,14233
enum intel_mce_type530,15231
    intel_mce_invalid,532,15253
    intel_mce_fatal,533,15276
    intel_mce_corrected,534,15297
    intel_mce_ucr_ucna,535,15322
    intel_mce_ucr_srao,536,15346
    intel_mce_ucr_srar,537,15370
static enum intel_mce_type intel_check_mce_type(540,15398
static int is_async_memerr(573,16158
struct mcinfo_recovery *mci_add_pageoff_action(mci_add_pageoff_action578,16275
static void intel_memerr_dhandler(602,16883
static int default_check(707,20551
static void intel_default_dhandler(712,20612
struct mca_error_handler intel_mce_dhandlers[intel_mce_dhandlers727,21045
static void intel_default_uhandler(730,21192
struct mca_error_handler intel_mce_uhandlers[intel_mce_uhandlers752,21694
static void intel_machine_check(755,21799
static int intel_need_clearbank_scan(851,25279
static int intel_recoverable_scan(897,27074
static int do_cmci_discover(931,28205
static void cmci_discover(958,28897
static void mce_set_owner(1012,30652
static void __cpu_mcheck_distribute_cmci(1020,30771
static void cpu_mcheck_distribute_cmci(1025,30852
static void clear_cmci(1031,31001
static void cpu_mcheck_disable(1053,31601
static void intel_init_cmci(1061,31736
fastcall void smp_cmci_interrupt(1090,32466
static int mce_is_broadcast(1120,33249
static void intel_init_mca(1136,33720
static void intel_mce_post_reset(1181,35041
static void intel_init_mce(1196,35416
static int intel_init_mca_banks(1230,36612
enum mcheck_type intel_mcheck_init(1253,37124
int intel_mce_wrmsr(1273,37464
int intel_mce_rdmsr(1287,37783
static int cpu_callback(1301,38101
static struct notifier_block cpu_nfb 1319,38421
static int __init intel_mce_initcall(1323,38500

xen/arch/x86/cpu/mcheck/mce.h,1598
#define _MCE_H3,16
#define MCE_QUIET 15,213
#define MCE_VERBOSE 16,239
#define MCE_CRITICAL 18,332
#define mce_printk(26,583
enum mcheck_type 31,720
	mcheck_unset 32,739
	mcheck_none,33,759
	mcheck_amd_famXX,34,773
	mcheck_amd_k7,35,792
	mcheck_amd_k8,36,808
	mcheck_intel37,824
#define dom0_vmce_enabled(68,1876
typedef void (*x86_mce_vector_t)x86_mce_vector_t72,2054
typedef int (*mce_recoverable_t)mce_recoverable_t80,2421
static inline uint64_t mca_rdmsr(88,2718
#define mca_wrmsr(97,2936
enum mca_source 110,3481
	MCA_MCE_HANDLER,111,3499
	MCA_POLLER,112,3517
	MCA_CMCI_HANDLER,113,3530
	MCA_RESET,114,3549
	MCA_MCE_SCAN115,3561
struct mca_summary 118,3579
	uint32_t	errcnt;119,3600
	int		ripv;120,3658
	int		eipv;121,3694
	uint32_t	uc;122,3730
	uint32_t	pcc;123,3775
	uint32_t	recoverable;125,3882
typedef int (*mce_need_clearbank_t)mce_need_clearbank_t154,5095
typedef struct mcinfo_extended *(*x86_mce_callback_t)x86_mce_callback_t157,5229
static inline int mce_vendor_bank_msr(172,5815
static inline int mce_bank_msr(180,6043
struct mce 189,6279
    __u64 status;190,6292
    __u64 misc;191,6310
    __u64 addr;192,6326
    __u64 mcgstatus;193,6342
    __u64 ip;194,6363
    __u64 tsc;195,6377
    __u64 time;196,6426
    __u8  cpuvendor;197,6488
    __u8  inject_flags;198,6556
    __u16  pad;199,6612
    __u32 cpuid;200,6628
    __u8  cs;201,6666
    __u8  bank;202,6713
    __u8  cpu;203,6758
    __u8  finished;204,6821
    __u32 extcpu;205,6864
    __u32 socketid;206,6931
    __u32 apicid;207,6971
    __u64 mcgcap;208,7017

xen/arch/x86/cpu/mcheck/amd_k8.c,83
static void k8_machine_check(73,2099
enum mcheck_type amd_k8_mcheck_init(79,2258

xen/arch/x86/cpu/mcheck/mctelem.c,2206
struct mctelem_ent 32,703
	struct mctelem_ent *mcte_next;mcte_next33,724
	struct mctelem_ent *mcte_prev;mcte_prev34,790
	uint32_t mcte_flags;35,860
	uint32_t mcte_refcnt;36,908
	void *mcte_data;mcte_data37,954
#define	MCTE_F_HOME_URGENT	40,1010
#define	MCTE_F_HOME_NONURGENT	41,1076
#define	MCTE_F_CLASS_URGENT	42,1148
#define	MCTE_F_CLASS_NONURGENT	43,1214
#define	MCTE_F_STATE_FREE	44,1286
#define	MCTE_F_STATE_UNCOMMITTED	45,1341
#define	MCTE_F_STATE_COMMITTED	46,1409
#define	MCTE_F_STATE_PROCESSING	47,1475
#define	MCTE_F_MASK_HOME	49,1544
#define	MCTE_F_MASK_CLASS	50,1614
#define	MCTE_F_MASK_STATE	51,1687
#define	MCTE_HOME(56,1830
#define	MCTE_CLASS(58,1893
#define	MCTE_SET_CLASS(59,1957
#define	MCTE_STATE(63,2102
#define	MCTE_TRANSITION_STATE(64,2166
#define	MC_URGENT_NENT	69,2380
#define	MC_NONURGENT_NENT	70,2407
#define	MC_NCLASSES	72,2437
#define	COOKIE2MCTE(74,2478
#define	MCTE2COOKIE(75,2530
static struct mc_telem_ctl 77,2582
	struct mctelem_ent *mctc_free[mctc_free104,4086
	struct mctelem_ent *mctc_committed[mctc_committed105,4131
	struct mctelem_ent *mctc_processing_head[mctc_processing_head106,4181
	struct mctelem_ent *mctc_processing_tail[mctc_processing_tail107,4237
	struct mctelem_ent *mctc_elems;mctc_elems111,4322
} mctctl;112,4355
struct mc_telem_cpu_ctl 114,4366
	struct mctelem_ent *pending;pending121,4626
	struct mctelem_ent *processing;processing122,4656
static void mctelem_xchg_head(129,4834
void mctelem_defer(142,5052
void mctelem_process_deferred(149,5219
int mctelem_has_deferred(197,6525
static void mctelem_free(207,6730
static void mctelem_hold(222,7185
static void mctelem_processing_hold(230,7411
static void mctelem_processing_release(242,7786
void mctelem_init(255,8152
static int mctelem_drop_count;308,9572
mctelem_cookie_t mctelem_reserve(314,9806
void *mctelem_dataptr(mctelem_dataptr352,10734
void mctelem_dismiss(363,11053
void mctelem_commit(377,11498
static struct mctelem_ent *dangling[dangling402,12544
static void mctelem_append_processing(404,12595
mctelem_cookie_t mctelem_consume_oldest_begin(454,14209
void mctelem_consume_oldest_end(473,14665
void mctelem_ack(483,14880

xen/arch/x86/cpu/mcheck/mce_quirks.h,421
#define _MCE_QUIRK_H20,809
struct mce_quirkdata 24,855
	int32_t cpu_family;25,878
	int16_t cpu_model;26,899
	int16_t cpu_stepping;27,919
	uint32_t quirk;28,942
enum mcequirk_amd_flags 35,1041
	MCEQUIRK_K7_BANK0 36,1067
	MCEQUIRK_K7_BANK0 = 0x1,x136,1067
	MCEQUIRK_K8_GART 37,1093
	MCEQUIRK_K8_GART = 0x2,x237,1093
enum mcequirk_intel_flags 40,1122
	MCEQUIRK_DUMMY 41,1150
	MCEQUIRK_DUMMY = 0x1,x141,1150

xen/arch/x86/cpu/mcheck/mce.c,4453
bool_t __read_mostly mce_disabled;26,559
bool_t __read_mostly mce_broadcast 28,630
bool_t is_mc_panic;29,670
unsigned int __read_mostly nr_mce_banks;30,690
int __read_mostly firstbank;31,731
struct mca_banks *mca_allbanks;mca_allbanks35,837
#define SEG_PL(37,870
#define _MC_MSRINJ_F_REQ_HWCR_WREN 38,912
static int x86_mcerr(41,964
#define x86_mcerr(48,1142
int mce_verbosity;51,1184
static void __init mce_set_verbosity(52,1203
static void unexpected_machine_check(63,1569
static x86_mce_vector_t _machine_check_vector 70,1758
void x86_mce_vector_register(72,1833
void machine_check_vector(80,2003
static x86_mce_callback_t mc_callback_bank_extended 90,2412
void x86_mce_callback_register(92,2473
static mce_recoverable_t mc_recoverable_scan 100,2707
void mce_recoverable_register(102,2761
struct mca_banks *mcabanks_alloc(mcabanks_alloc107,2856
void mcabanks_free(129,3302
static mce_need_clearbank_t mc_need_clearbank_scan 142,3709
void mce_need_clearbank_register(144,3769
static struct mcinfo_bank *mca_init_bank(mca_init_bank149,3873
static int mca_init_global(198,5170
mctelem_cookie_t mcheck_mca_logout(242,6633
#define DOM_NORMAL 376,10946
#define DOM0_TRAP 377,10967
#define DOMU_TRAP 378,10987
#define DOMU_KILLED 379,11007
void mcheck_cmn_handler(382,11056
void mcheck_mca_clearbanks(599,18799
static enum mcheck_type amd_mcheck_init(614,19177
int mce_available(639,19716
int mce_firstbank(648,19941
int show_mca_info(661,20191
int set_poll_bankmask(698,21310
int mca_cap_init(723,21979
void mcheck_init(754,22773
static void mcinfo_clear(816,23932
void *x86_mcinfo_reserve(x86_mcinfo_reserve822,24058
void *x86_mcinfo_add(x86_mcinfo_add852,24817
void x86_mcinfo_dump(871,25311
static void do_mc_get_cpu_info(919,26818
void x86_mc_get_cpu_info(974,28458
#define INTPOSE_NENT 1009,29545
static struct intpose_ent 1011,29570
    unsigned  int cpu_nr;1012,29598
    uint64_t msr;1013,29624
    uint64_t val;1014,29642
} intpose_arr[intpose_arr1015,29660
static void intpose_init(1017,29690
struct intpose_ent *intpose_lookup(intpose_lookup1031,29880
static void intpose_add(1048,30291
void intpose_inval(1070,30818
#define IS_MCA_BANKREG(1079,31000
static int x86_mc_msrinject_verify(1084,31177
static uint64_t x86_mc_hwcr_wren(1144,33123
static void x86_mc_hwcr_wren_restore(1158,33372
static void x86_mc_msrinject(1164,33507
static void x86_mc_mceinject(1200,34537
static void x86_cmci_inject(1206,34684
#define ID2COOKIE(1214,34856
#define COOKIE2ID(1215,34903
#define ID2COOKIE(1219,34968
#define COOKIE2ID(1220,35041
# define xen_mcinfo_msr 1231,35273
CHECK_mcinfo_msr;1232,35321
# undef xen_mcinfo_msr1233,35339
# undef CHECK_mcinfo_msr1234,35362
# define CHECK_mcinfo_msr 1235,35387
# define xen_mcinfo_common 1237,35443
CHECK_mcinfo_common;1238,35494
# undef xen_mcinfo_common1239,35515
# undef CHECK_mcinfo_common1240,35541
# define CHECK_mcinfo_common 1241,35569
# define CHECK_compat_mc_fetch 1245,35709
# define CHECK_compat_mc_physcpuinfo 1248,35808
#define CHECK_compat_mc_inject_v2 1250,35868
CHECK_mc;1251,35924
# undef CHECK_compat_mc_fetch1252,35934
# undef CHECK_compat_mc_physcpuinfo1253,35964
# define xen_mc_info 1255,36001
CHECK_mc_info;1256,36046
# undef xen_mc_info1257,36061
# define xen_mcinfo_global 1259,36082
CHECK_mcinfo_global;1260,36133
# undef xen_mcinfo_global1261,36154
# define xen_mcinfo_bank 1263,36181
CHECK_mcinfo_bank;1264,36230
# undef xen_mcinfo_bank1265,36249
# define xen_mcinfo_extended 1267,36274
CHECK_mcinfo_extended;1268,36327
# undef xen_mcinfo_extended1269,36350
# define xen_mcinfo_recovery 1271,36379
# define xen_cpu_offline_action 1272,36432
# define xen_page_offline_action 1273,36488
CHECK_mcinfo_recovery;1274,36545
# undef xen_cpu_offline_action1275,36568
# undef xen_page_offline_action1276,36599
# undef xen_mcinfo_recovery1277,36631
# define compat_mc_fetch 1279,36665
# define compat_mc_physcpuinfo 1280,36703
# define compat_handle_is_null 1281,36753
# define copy_to_compat 1282,36805
long do_mca(1286,36894
        struct xen_mc_fetch *nat;nat1292,37044
        struct compat_mc_fetch *cmp;cmp1293,37078
        struct xen_mc_physcpuinfo *nat;nat1296,37143
        struct compat_mc_physcpuinfo *cmp;cmp1297,37183
int mcinfo_dumpped;1509,44082
static int x86_mcinfo_dump_panic(1510,44102
static void mc_panic_dump(1521,44321
void mc_panic(1531,44593

xen/arch/x86/cpu/mcheck/mce_amd_quirks.c,163
#define ANY 25,884
static const struct mce_quirkdata mce_amd_quirks[mce_amd_quirks27,900
mcequirk_lookup_amd_quirkdata(35,1174
int mcequirk_amd_apply(55,1678

xen/arch/x86/cpu/mcheck/k7.c,91
static fastcall void k7_machine_check(20,404
enum mcheck_type amd_k7_mcheck_init(73,1757

xen/arch/x86/cpu/cyrix.c,959
void __init do_cyrix_devid(14,268
static unsigned char Cx86_dir0_msb __initdata 54,1368
static char Cx86_model[][9] __initdata 56,1420
static char Cx486_name[][5] __initdata 60,1545
static char Cx486S_name[][4] __initdata 64,1652
static char Cx486D_name[][4] __initdata 67,1723
static char Cx86_cb[] __initdata 70,1805
static char cyrix_model_mult1[] __initdata 71,1863
static char cyrix_model_mult2[] __initdata 72,1918
static void __init check_cx686_slop(82,2250
static void __init set_cx86_reorder(101,2707
static void __init set_cx86_memwb(116,3138
static void __init set_cx86_inc(135,3599
static void __init geode_configure(156,4164
static void __init init_cyrix(181,4666
static inline int test_cyrix_52div(319,8485
static void cyrix_identify(335,8860
static struct cpu_dev cyrix_cpu_dev __initdata 371,9835
int __init cyrix_init_cpu(378,10000
static struct cpu_dev nsc_cpu_dev __initdata 386,10134
int __init nsc_init_cpu(393,10297

xen/arch/x86/cpu/centaur.c,382
#define ACE_PRESENT	10,179
#define ACE_ENABLED	11,208
#define ACE_FCR	12,237
#define RNG_PRESENT	14,283
#define RNG_ENABLED	15,312
#define RNG_ENABLE	16,341
static void __init init_c3(18,388
static void __init init_centaur(63,1733
static unsigned int centaur_size_cache(73,1989
static struct cpu_dev centaur_cpu_dev __initdata 88,2469
int __init centaur_init_cpu(95,2645

xen/arch/x86/cpu/common.c,1895
#define tsc_disable 18,340
#define disable_pse 19,362
static int cachesize_override __cpuinitdata 21,385
static bool_t __cpuinitdata disable_x86_fxsr;23,480
static bool_t __cpuinitdata disable_x86_serial_nr;25,569
static bool_t __cpuinitdata use_xsave;28,677
unsigned int __devinitdata opt_cpuid_mask_ecx 30,751
unsigned int __devinitdata opt_cpuid_mask_edx 32,857
unsigned int __devinitdata opt_cpuid_mask_ext_ecx 34,963
unsigned int __devinitdata opt_cpuid_mask_ext_edx 36,1081
struct cpu_dev * cpu_devs[cpu_devs39,1200
u64 host_pat 45,1362
static unsigned int __cpuinitdata cleared_caps[cleared_caps47,1394
void __init setup_clear_cpu_cap(49,1453
static void default_init(55,1588
static struct cpu_dev default_cpu 68,1913
static struct cpu_dev * this_cpu 72,2003
bool_t __cpuinitdata opt_cpu_info;74,2053
int __cpuinit get_model_name(77,2129
void __cpuinit display_cacheinfo(107,2793
static char __cpuinit *table_lookup_model(table_lookup_model151,4025
static void __cpuinit get_cpu_vendor(172,4398
static inline int flag_is_changeable_p(201,5095
static int __cpuinit have_cpuid_p(223,5485
static void __init early_cpu_detect(234,5873
void __cpuinit generic_identify(272,6813
static void __cpuinit squash_the_stupid_serial_number(331,8486
void __cpuinit identify_cpu(350,9072
static inline u32 phys_pkg_id(490,12740
#define SMT_LEVEL 496,12877
#define INVALID_TYPE 499,12934
#define SMT_TYPE 500,12960
#define CORE_TYPE 501,12986
#define LEAFB_SUBTYPE(503,13013
#define BITS_SHIFT_NEXT_LEVEL(504,13071
#define LEVEL_MAX_SIBLINGS(505,13122
void __cpuinit detect_extended_topology(511,13297
void __cpuinit detect_ht(570,15013
void __cpuinit print_cpu_info(619,16335
static cpumask_t cpu_initialized;648,16940
void __init early_cpu_init(658,17277
void __cpuinit cpu_init(676,17741
#define CD(722,19014
#undef CD724,19155
void cpu_uninit(727,19168

xen/arch/x86/cpu/intel.c,466
#define select_idle_routine(19,374
struct movsl_mask movsl_mask __read_mostly;27,559
static void __devinit set_cpuidmask(36,905
void __devinit early_intel_workaround(83,2159
static void __devinit Intel_errata_workarounds(110,2961
static int __devinit num_cpu_cores(129,3489
static void __devinit init_intel(144,3805
static unsigned int intel_size_cache(262,6812
static struct cpu_dev intel_cpu_dev __devinitdata 274,7205
int __init intel_cpu_init(331,8719

xen/arch/x86/cpu/cpu.h,349
struct cpu_model_info 2,1
	int vendor;3,25
	int family;4,38
	char *model_names[model_names5,51
struct cpu_dev 9,123
	char	* c_vendor;10,140
	char	* c_ident[c_ident13,211
	struct		cpu_model_info c_models[c_models15,233
	void		(*c_init)c_init17,271
	void		(*c_identify)c_identify18,313
	unsigned int	(*c_size_cache)c_size_cache19,359

xen/arch/x86/cpu/mtrr/state.c,99
void set_mtrr_prepare_save(10,194
void set_mtrr_cache_disable(41,931
void set_mtrr_done(52,1325

xen/arch/x86/cpu/mtrr/generic.c,1092
struct fixed_range_block 14,365
	int base_msr;15,392
	int ranges;16,444
static struct fixed_range_block fixed_range_blocks[fixed_range_blocks19,500
static unsigned long smp_changes_mask;26,718
struct mtrr_state mtrr_state 27,757
get_mtrr_var_range(31,854
get_fixed_ranges(38,1025
void mtrr_save_fixed_ranges(51,1285
void __init get_mtrr_state(58,1454
void __init mtrr_state_warn(89,2283
void mtrr_wrmsr(108,3057
static inline void k8_enable_fixed_iorrs(122,3556
static void set_fixed_range(140,4242
int generic_get_free_region(157,4683
static void generic_get_mtrr(179,5248
static int set_fixed_ranges(209,6007
static int set_mtrr_var_ranges(225,6483
static uint64_t deftype;265,7556
static unsigned long set_mtrr_state(267,7582
static unsigned long cr4 297,8586
static void prepare_set(307,8918
static void post_set(338,9754
static void generic_set_all(355,10112
static void generic_set_mtrr(378,10527
int generic_validate_add_page(421,11853
static int generic_have_wrcomb(456,12989
int positive_have_wrcomb(463,13117
struct mtrr_ops generic_mtrr_ops 470,13192

xen/arch/x86/cpu/mtrr/cyrix.c,587
int arr3_protected;8,124
cyrix_get_arr(11,157
cyrix_get_free_region(80,1706
static u32 cr4 129,2812
static u32 ccr3;130,2832
static void prepare_set(132,2850
static void post_set(157,3397
static void cyrix_set_arr(173,3691
	unsigned long base;231,4850
	unsigned long size;232,4871
	mtrr_type type;233,4892
} arr_state_t;234,4909
static arr_state_t arr_state[arr_state236,4925
static unsigned char ccr_state[ccr_state241,5102
static void cyrix_set_all(243,5164
cyrix_arr_init(277,6264
static struct mtrr_ops cyrix_mtrr_ops 362,8374
int __init cyrix_init_mtrr(373,8742

xen/arch/x86/cpu/mtrr/main.c,1636
#define DEFINE_MUTEX(46,1713
#define mutex_lock(47,1758
#define mutex_unlock(48,1795
#define dump_stack(49,1836
#define	get_cpu(50,1867
#define put_cpu(51,1904
u32 num_var_ranges 53,1938
unsigned int *usage_table;usage_table55,1963
u64 size_or_mask,58,2024
u64 size_or_mask, size_and_mask;58,2024
static struct mtrr_ops * mtrr_ops[mtrr_ops60,2058
struct mtrr_ops * mtrr_if 62,2115
#define arr3_protected 70,2309
static const char *mtrr_strings[mtrr_strings73,2342
const char *mtrr_attrib_to_str(mtrr_attrib_to_str84,2678
void set_mtrr_ops(89,2763
static int have_wrcomb(96,2958
static void __init set_num_var_ranges(102,3112
static void __init init_table(115,3370
struct set_mtrr_data 128,3624
	atomic_t	count;129,3647
	atomic_t	gate;130,3664
	unsigned long	smp_base;131,3680
	unsigned long	smp_size;132,3705
	unsigned int	smp_reg;133,3730
	mtrr_type	smp_type;134,3753
int hold_mtrr_updates_on_aps;146,4370
static void ipi_handler(150,4420
static inline int types_compatible(183,5217
static void set_mtrr(229,7002
int mtrr_add_page(330,10019
static int mtrr_check(426,12554
mtrr_add(476,14236
int mtrr_del_page(500,14923
mtrr_del(569,16544
static void __init init_ifs(586,16959
struct mtrr_value 597,17184
	mtrr_type	ltype;598,17204
	unsigned long	lbase;599,17222
	unsigned long	lsize;600,17244
unsigned int paddr_bits __read_mostly 603,17270
void __init mtrr_bp_init(612,17490
void mtrr_ap_init(675,19136
void mtrr_save_state(693,19717
void mtrr_aps_sync_begin(704,19905
void mtrr_aps_sync_end(711,20001
void mtrr_bp_restore(719,20120
static int __init mtrr_init_finialize(726,20202

xen/arch/x86/cpu/mtrr/amd.c,177
amd_get_mtrr(9,117
static void amd_set_mtrr(49,1155
static int amd_validate_add_page(91,2440
static struct mtrr_ops amd_mtrr_ops 106,2879
int __init amd_init_mtrr(115,3169

xen/arch/x86/cpu/mtrr/mtrr.h,1166
#define TRUE 6,44
#define FALSE 7,60
#define MTRRcap_MSR 10,84
#define MTRRdefType_MSR 11,114
#define MTRRphysBase_MSR(13,145
#define MTRRphysMask_MSR(14,195
#define MTRRfix64K_00000_MSR 16,250
#define MTRRfix16K_80000_MSR 17,285
#define MTRRfix16K_A0000_MSR 18,320
#define MTRRfix4K_C0000_MSR 19,355
#define MTRRfix4K_C8000_MSR 20,389
#define MTRRfix4K_D0000_MSR 21,423
#define MTRRfix4K_D8000_MSR 22,457
#define MTRRfix4K_E0000_MSR 23,491
#define MTRRfix4K_E8000_MSR 24,525
#define MTRRfix4K_F0000_MSR 25,559
#define MTRRfix4K_F8000_MSR 26,593
#define MTRR_CHANGE_MASK_FIXED 28,628
#define MTRR_CHANGE_MASK_VARIABLE 29,668
#define MTRR_CHANGE_MASK_DEFTYPE 30,708
struct mtrr_ops 33,750
	u32	vendor;34,768
	u32	use_intel_if;35,781
	void	(*set)set37,823
	void	(*set_all)set_all39,920
	void	(*get)get41,945
	int	(*get_free_region)get_free_region43,1046
	int	(*validate_add_page)validate_add_page45,1135
	int	(*have_wrcomb)have_wrcomb47,1230
struct set_mtrr_context 60,1606
	unsigned long flags;61,1632
	unsigned long cr4val;62,1654
	uint64_t deftype;63,1677
	u32 ccr3;64,1696
#define is_cpu(78,2035
#define use_intel(79,2104

xen/arch/x86/cpu/intel_cacheinfo.c,1696
#define LVL_1_INST	16,407
#define LVL_1_DATA	17,428
#define LVL_2	18,449
#define LVL_3	19,466
#define LVL_TRACE	20,483
struct _cache_table22,504
	unsigned char descriptor;24,526
	char cache_type;25,553
	short size;26,571
static struct _cache_table cache_table[] __cpuinitdata 30,671
enum _cache_type85,4330
	CACHE_TYPE_NULL	87,4349
	CACHE_TYPE_DATA 88,4371
	CACHE_TYPE_INST 89,4393
	CACHE_TYPE_UNIFIED 90,4415
union _cpuid4_leaf_eax 93,4443
		enum _cache_type	type:type95,4478
		unsigned int		level:level96,4505
		unsigned int		is_self_initializing:is_self_initializing97,4530
		unsigned int		is_fully_associative:is_fully_associative98,4570
		unsigned int		reserved:reserved99,4610
		unsigned int		num_threads_sharing:num_threads_sharing100,4638
		unsigned int		num_cores_on_die:num_cores_on_die101,4678
	} split;102,4714
	u32 full;103,4724
union _cpuid4_leaf_ebx 106,4739
		unsigned int		coherency_line_size:coherency_line_size108,4774
		unsigned int		physical_line_partition:physical_line_partition109,4814
		unsigned int		ways_of_associativity:ways_of_associativity110,4858
	} split;111,4900
	u32 full;112,4910
union _cpuid4_leaf_ecx 115,4925
		unsigned int		number_of_sets:number_of_sets117,4960
	} split;118,4995
	u32 full;119,5005
struct _cpuid4_info 122,5020
	union _cpuid4_leaf_eax eax;123,5042
	union _cpuid4_leaf_ebx ebx;124,5071
	union _cpuid4_leaf_ecx ecx;125,5100
	unsigned long size;126,5129
	cpumask_t shared_cpu_map;127,5150
unsigned short			num_cache_leaves;130,5181
static int __cpuinit cpuid4_cache_lookup(132,5217
static int __cpuinit find_num_cache_leaves(153,5818
unsigned int __cpuinit init_intel_cacheinfo(168,6158

xen/arch/x86/cpu/transmeta.c,206
static void __init init_transmeta(8,133
#define USER686 77,2175
static void transmeta_identify(82,2333
static struct cpu_dev transmeta_cpu_dev __initdata 95,2632
int __init transmeta_init_cpu(102,2828

xen/arch/x86/cpu/amd.c,977
static char opt_famrev[opt_famrev32,614
static inline void wrmsr_amd(35,687
static inline int rdmsr_amd_safe(46,886
static inline int wrmsr_amd_safe(63,1275
static void __devinit set_cpuidmask(90,1929
	static enum { not_parsed,94,2084
	static enum { not_parsed, no_mask,94,2084
	static enum { not_parsed, no_mask, set_mask 94,2084
int cpu_has_amd_erratum(189,5734
static s8 __devinit flush_filter_force;237,6745
static void __init flush_filter(238,6785
#define num_physpages 252,6998
static int c1_ramping_may_cause_clock_drift(271,7621
static void disable_c1_ramping(296,8260
int force_mwait __cpuinitdata;315,8860
static void disable_c1e(317,8892
static void check_disable_c1e(333,9424
static void __devinit init_amd(340,9645
#define CBAR	401,11203
#define CBAR_ENB	402,11269
#define CBAR_KEY	403,11299
static unsigned int __cpuinit amd_size_cache(626,17315
static struct cpu_dev amd_cpu_dev __cpuinitdata 639,17668
int __init amd_init_cpu(659,18109

xen/arch/x86/numa.c,1280
#define Dprintk(23,497
#define round_up(27,546
struct node_data node_data[node_data29,598
int memnode_shift;32,675
static typeof(*memnodemap) _memnodemap[_memnodemap33,694
unsigned long memnodemapsize;34,738
u8 *memnodemap;memnodemap35,768
unsigned char cpu_to_node[NR_CPUS] __read_mostly 37,785
unsigned char apicid_to_node[MAX_LOCAL_APIC] __cpuinitdata 43,959
cpumask_t node_to_cpumask[MAX_NUMNODES] __read_mostly;46,1067
nodemask_t __read_mostly node_online_map 48,1123
int numa_off __devinitdata 50,1186
int acpi_numa __devinitdata;52,1219
int srat_disabled(54,1249
static int __init populate_memnodemap(66,1498
static int __init allocate_cachealigned_memnodemap(96,2225
static int __init extract_lsb_from_nodes(130,3070
int __init compute_hash_shift(155,3643
void __init setup_node_bootmem(177,4303
void __init numa_init_array(191,4649
static int numa_fake __initdata 212,5273
static int numa_emulation(215,5332
void __init numa_initmem_init(256,6491
__cpuinit void numa_add_cpu(288,7399
void __cpuinit numa_set_node(293,7492
static __init int numa_setup(299,7588
void __devinit init_cpu_to_node(334,8526
static void dump_numa(354,8966
static struct keyhandler dump_numa_keyhandler 403,10261
static __init int register_numa_trigger(409,10379

xen/arch/x86/dmi_scan.c,1198
#define bt_ioremap(13,249
#define bt_iounmap(14,304
#define memcpy_fromio 15,339
#define alloc_bootmem(16,371
struct dmi_header18,414
	u8	type;20,434
	u8	length;21,444
	u16	handle;22,456
#undef DMI_DEBUG25,473
#define dmi_printk(28,508
#define dmi_printk(30,545
static char * __init dmi_string(33,575
static int __init dmi_table(54,910
inline static int __init dmi_checksum(93,1705
int __init dmi_get_table(103,1832
static int __init dmi_iterate(120,2184
static char *dmi_ident[dmi_ident153,3063
static void __init dmi_save_ident(159,3134
#define dmi_blacklist	177,3552
#define NO_MATCH	178,3588
#define MATCH	179,3623
static __init int broken_toshiba_keyboard(185,3726
static __init int reset_videomode_after_s3(193,4019
static __init __attribute__((unused)) int dmi_disable_acpi(203,4184
static __init __attribute__((unused)) int force_acpi_ht(218,4534
static __init int disable_acpi_irq(233,4893
static __init int disable_acpi_pci(242,5097
static __initdata struct dmi_blacklist dmi_blacklist[dmi_blacklist263,5478
static void __init dmi_decode(395,9317
void __init dmi_scan_machine(441,10576
int dmi_check_system(459,11065
char * dmi_get_system_info(492,11731

xen/arch/x86/oprofile/op_model_athlon.c,2608
#define NUM_COUNTERS 27,526
#define NUM_CONTROLS 28,549
#define CTR_READ(30,573
#define CTR_WRITE(31,674
#define CTR_OVERFLOWED(32,774
#define CTRL_READ(34,823
#define CTRL_WRITE(35,925
#define CTRL_SET_ACTIVE(36,1028
#define CTRL_SET_INACTIVE(37,1073
#define CTRL_CLEAR(38,1121
#define CTRL_SET_ENABLE(39,1165
#define CTRL_SET_USR(40,1212
#define CTRL_SET_KERN(41,1265
#define CTRL_SET_UM(42,1319
#define CTRL_SET_EVENT(43,1374
#define CTRL_SET_HOST_ONLY(44,1446
#define CTRL_SET_GUEST_ONLY(45,1511
static unsigned long reset_value[reset_value47,1578
u32 ibs_caps 52,1679
static u64 ibs_op_ctl;53,1697
#define ibs_op_ctl 55,1726
#define IBS_CPUID_FEATURES 59,1789
#define MSR_AMD64_IBSFETCHCTL 62,1856
#define MSR_AMD64_IBSFETCHLINAD 63,1907
#define MSR_AMD64_IBSFETCHPHYSAD 64,1958
#define MSR_AMD64_IBSOPCTL 65,2009
#define MSR_AMD64_IBSOPRIP 66,2060
#define MSR_AMD64_IBSOPDATA 67,2111
#define MSR_AMD64_IBSOPDATA2 68,2162
#define MSR_AMD64_IBSOPDATA3 69,2213
#define MSR_AMD64_IBSDCLINAD 70,2264
#define MSR_AMD64_IBSDCPHYSAD 71,2315
#define MSR_AMD64_IBSCTL 72,2366
#define IBS_CAPS_AVAIL 78,2547
#define IBS_CAPS_RDWROPCNT 79,2596
#define IBS_CAPS_OPCNT 80,2645
#define IBS_RANDOM_BITS 83,2726
#define IBS_RANDOM_MASK 84,2769
#define IBS_RANDOM_MAXCNT_OFFSET 85,2841
#define IBS_FETCH_RAND_EN 88,2943
#define IBS_FETCH_VAL 89,2994
#define IBS_FETCH_ENABLE 90,3045
#define IBS_FETCH_CNT 91,3096
#define IBS_FETCH_MAX_CNT 92,3150
#define IBS_OP_CNT_CTL 95,3225
#define IBS_OP_VAL 96,3276
#define IBS_OP_ENABLE 97,3327
#define IBS_OP_MAX_CNT 98,3378
#define IBS_FETCH_CODE 101,3461
#define IBS_OP_CODE 102,3504
#define clamp(104,3548
static unsigned int lfsr_random(116,3870
static inline u64 op_amd_randomize_ibs_op(140,4484
static void athlon_fill_in_addresses(165,5246
static void athlon_setup_ctrs(179,5664
ibs_log_event(220,6762
static inline int handle_ibs(233,7035
static int athlon_check_ctrs(291,8491
static inline void start_ibs(329,9404
static void athlon_start(372,10509
static void stop_ibs(386,10796
static void athlon_stop(400,11054
#define IBSCTL_LVTOFFSETVAL 418,11417
#define APIC_EILVT_MSG_NMI 419,11466
#define APIC_EILVT_LVTOFF_IBS 420,11510
#define APIC_EILVTn(421,11552
static inline void __init init_ibs_nmi_per_cpu(422,11611
#define PCI_VENDOR_ID_AMD 430,11792
#define PCI_DEVICE_ID_AMD_10H_NB_MISC 431,11839
#define IBSCTL 432,11886
static int __init init_ibs_nmi(433,11932
static void __init get_ibs_caps(480,12932
void __init ibs_init(496,13288
struct op_x86_model_spec const op_athlon_spec 514,13523

xen/arch/x86/oprofile/nmi_int.c,1323
struct op_counter_config counter_config[counter_config30,621
struct op_ibs_config ibs_config;31,678
static struct op_x86_model_spec const *__read_mostly model;33,712
static struct op_msrs cpu_msrs[cpu_msrs34,772
static unsigned long saved_lvtpc[saved_lvtpc35,813
static char *cpu_type;cpu_type37,857
static int passive_domain_msr_op_checks(39,881
int passive_domain_do_rdmsr(55,1282
int passive_domain_do_wrmsr(66,1509
void passive_domain_destroy(77,1735
static int nmi_callback(84,1895
static void nmi_cpu_save_registers(99,2254
static void nmi_save_registers(117,2693
static void free_msrs(126,2880
static int allocate_msrs(138,3082
static void nmi_cpu_setup(165,3595
int nmi_setup_events(173,3739
int nmi_reserve_counters(179,3820
int nmi_enable_virq(200,4347
void nmi_disable_virq(207,4423
static void nmi_restore_registers(213,4481
static void nmi_cpu_shutdown(231,4923
void nmi_release_counters(239,5075
static void nmi_cpu_start(247,5191
int nmi_start(257,5418
static void nmi_cpu_stop(264,5495
void nmi_stop(289,6279
static int __init p4_init(295,6342
static int force_arch_perfmon;329,7049
static int force_cpu_type(330,7080
static int __init ppro_init(342,7346
static int __init arch_perfmon_init(390,8132
static int __init nmi_init(400,8339
int xenoprof_arch_init(490,10484

xen/arch/x86/oprofile/op_x86_model.h,681
#define OP_X86_MODEL_H12,213
struct op_msr 14,237
	unsigned long addr;15,253
	uint64_t value;16,274
struct op_msrs 19,295
	struct op_msr * counters;20,312
	struct op_msr * controls;21,339
struct op_x86_model_spec 29,489
	unsigned int num_counters;30,516
	unsigned int num_controls;31,544
	void (*fill_in_addresses)fill_in_addresses32,572
	void (*setup_ctrs)setup_ctrs33,629
	int (*check_ctrs)check_ctrs34,685
	void (*start)start37,810
	void (*stop)stop38,861
	int (*is_arch_pmu_msr)is_arch_pmu_msr39,911
	int (*allocated_msr)allocated_msr40,974
	void (*free_msr)free_msr41,1013
	void (*load_msr)load_msr42,1048
        void (*save_msr)save_msr43,1129

xen/arch/x86/oprofile/op_model_p4.c,2458
#define NUM_EVENTS 23,410
#define NUM_COUNTERS_NON_HT 25,433
#define NUM_ESCRS_NON_HT 26,463
#define NUM_CCCRS_NON_HT 27,491
#define NUM_CONTROLS_NON_HT 28,519
#define NUM_COUNTERS_HT2 30,586
#define NUM_ESCRS_HT2 31,613
#define NUM_CCCRS_HT2 32,638
#define NUM_CONTROLS_HT2 33,662
static unsigned int num_counters 35,720
static inline void setup_num_counters(41,899
static int inline addr_increment(49,1061
struct p4_counter_binding 60,1267
	int virt_counter;61,1295
	int counter_address;62,1314
	int cccr_address;63,1336
struct p4_event_binding 66,1359
	int escr_select;67,1385
	int event_select;68,1431
		int virt_counter;70,1487
		int escr_address;71,1533
	} bindings[bindings72,1579
#define CTR_BPU_0 79,1686
#define CTR_MS_0 80,1718
#define CTR_FLAME_0 81,1750
#define CTR_IQ_4 82,1782
#define CTR_BPU_2 83,1814
#define CTR_MS_2 84,1846
#define CTR_FLAME_2 85,1878
#define CTR_IQ_5 86,1910
static struct p4_counter_binding p4_counters 88,1943
#define NUM_UNUSED_CCCRS	99,2489
static int p4_unused_cccr[p4_unused_cccr102,2583
static const struct p4_event_binding p4_events[p4_events112,2888
#define MISC_PMC_ENABLED_P(350,7572
#define ESCR_RESERVED_BITS 352,7621
#define ESCR_CLEAR(353,7662
#define ESCR_SET_USR_0(354,7718
#define ESCR_SET_OS_0(355,7786
#define ESCR_SET_USR_1(356,7851
#define ESCR_SET_OS_1(357,7914
#define ESCR_SET_EVENT_SELECT(358,7979
#define ESCR_SET_EVENT_MASK(359,8058
#define ESCR_READ(360,8138
#define ESCR_WRITE(361,8230
#define CCCR_RESERVED_BITS 363,8324
#define CCCR_CLEAR(364,8365
#define CCCR_SET_REQUIRED_BITS(365,8421
#define CCCR_SET_ESCR_SELECT(366,8484
#define CCCR_SET_PMI_OVF_0(367,8562
#define CCCR_SET_PMI_OVF_1(368,8618
#define CCCR_SET_ENABLE(369,8674
#define CCCR_SET_DISABLE(370,8727
#define CCCR_READ(371,8782
#define CCCR_WRITE(372,8885
#define CCCR_OVF_P(373,8989
#define CCCR_CLEAR_OVF(374,9036
#define CTR_READ(376,9092
#define CTR_WRITE(377,9196
#define CTR_OVERFLOW_P(378,9302
static unsigned int get_stagger(384,9556
#define VIRT_CTR(397,9875
static unsigned long reset_value[reset_value399,9942
static void p4_fill_in_addresses(402,9999
static void pmc_setup_one_p4_counter(480,12296
static void p4_setup_ctrs(543,13957
static int p4_check_ctrs(622,16063
static void p4_start(678,17581
static void p4_stop(696,17919
struct op_x86_model_spec const op_p4_ht2_spec 713,18239
struct op_x86_model_spec const op_p4_spec 724,18516

xen/arch/x86/oprofile/backtrace.c,270
struct frame_head 18,294
	struct frame_head * ebp;19,314
	unsigned long ret;20,340
dump_hypervisor_backtrace(24,415
dump_guest_backtrace(39,772
static int valid_hypervisor_stack(94,2682
static int valid_hypervisor_stack(109,3117
void xenoprof_backtrace(116,3236

xen/arch/x86/oprofile/xenoprof.c,146
int xenoprof_arch_counter(21,478
int xenoprof_arch_ibs_counter(41,1084
int compat_oprof_arch_counter(59,1629
int xenoprofile_get_mode(80,2250

xen/arch/x86/oprofile/op_counter.h,572
#define OP_COUNTER_H11,157
#define OP_MAX_COUNTER 13,180
struct op_counter_config 18,266
        unsigned long count;19,293
        unsigned long enabled;20,322
        unsigned long event;21,353
        unsigned long kernel;22,382
        unsigned long user;23,412
        unsigned long unit_mask;24,440
struct op_ibs_config 30,556
    unsigned long op_enabled;31,579
    unsigned long fetch_enabled;32,609
    unsigned long max_cnt_fetch;33,642
    unsigned long max_cnt_op;34,675
    unsigned long rand_en;35,705
    unsigned long dispatched_ops;36,732

xen/arch/x86/oprofile/op_model_ppro.c,1344
union cpuid10_eax 31,631
		unsigned int version_id:version_id33,661
		unsigned int num_counters:num_counters34,690
		unsigned int bit_width:bit_width35,721
		unsigned int mask_length:mask_length36,749
	} split;37,779
	unsigned int full;38,789
static int num_counters 41,813
static int counter_width 42,842
#define CTR_OVERFLOWED(44,874
#define CTRL_READ(46,939
#define CTRL_WRITE(47,1043
#define CTRL_SET_ACTIVE(48,1148
#define CTRL_SET_INACTIVE(49,1193
#define CTRL_CLEAR(50,1241
#define CTRL_SET_ENABLE(51,1281
#define CTRL_SET_USR(52,1328
#define CTRL_SET_KERN(53,1384
#define CTRL_SET_UM(54,1441
#define CTRL_SET_EVENT(55,1487
#define IS_ACTIVE(56,1529
#define IS_ENABLE(57,1576
static unsigned long reset_value[reset_value58,1621
int ppro_has_global_ctrl 59,1671
static void ppro_fill_in_addresses(61,1703
static void ppro_setup_ctrs(72,1950
static int ppro_check_ctrs(126,3337
static void ppro_start(167,4453
static void ppro_stop(187,4971
static int ppro_is_arch_pmu_msr(203,5330
static int ppro_allocate_msr(223,5846
static void ppro_free_msr(243,6478
static void ppro_load_msr(253,6694
static void ppro_save_msr(267,7006
void arch_perfmon_setup_counters(290,7592
struct op_x86_model_spec __read_mostly op_ppro_spec 312,8201
struct op_x86_model_spec __read_mostly op_arch_perfmon_spec 327,8625

xen/arch/x86/e820.c,1299
static unsigned long long __initdata opt_mem;17,363
static unsigned long long __initdata opt_availmem;24,571
static s8 __initdata e820_mtrr_clip 28,727
static bool_t __initdata e820_verbose;32,892
struct e820map e820;35,977
int __init e820_all_mapped(43,1198
static void __init add_memory_region(71,1845
static void __init print_e820_memory_map(91,2340
struct change_member 129,3331
    struct e820entry *pbios;pbios130,3354
    unsigned long long addr;131,3420
static struct change_member change_point_list[2*E820MAX] __initdata;133,3488
static struct change_member *change_point[2*E820MAX] __initdata;134,3557
static struct e820entry *overlap_list[E820MAX] __initdata;135,3622
static struct e820entry new_bios[E820MAX] __initdata;136,3681
static int __init sanitize_e820_map(138,3736
static int __init copy_e820_map(307,10073
static unsigned long __init find_max_pfn(346,11195
static void __init clip_to_limit(374,11791
#define MSR_MTRRphysBase(430,13546
#define MSR_MTRRphysMask(431,13596
static uint64_t __init mtrr_top_of_ram(432,13650
static void __init reserve_dmi_region(504,15801
static void __init machine_specific_memory_setup(513,16102
int __init e820_change_range_type(565,17696
int __init reserve_e820_ram(651,20121
unsigned long __init init_e820(656,20272

xen/arch/x86/microcode_amd.c,762
#define pr_debug(30,694
#define UCODE_MAGIC 32,728
#define UCODE_EQUIV_CPU_TABLE_TYPE 33,774
#define UCODE_UCODE_TYPE 34,820
#define UCODE_MAX_SIZE 36,867
#define DEFAULT_UCODE_DATASIZE 37,906
#define MC_HEADER_SIZE 38,944
#define DEFAULT_UCODE_TOTALSIZE 39,1014
#define DWSIZE 40,1088
struct equiv_cpu_entry *equiv_cpu_table;equiv_cpu_table45,1233
static int collect_cpu_info(47,1275
static int microcode_fits(68,1774
static int apply_microcode(124,3376
static int get_next_ucode_from_buffer_amd(164,4448
static int install_equiv_cpu_table(206,5545
static int cpu_request_microcode(249,6601
static int microcode_resume_match(320,8302
static const struct microcode_ops microcode_amd_ops 325,8392
static __init int microcode_init_amd(332,8694

xen/arch/x86/hpet.c,2350
#define MAX_DELTA_NS 21,426
#define MIN_DELTA_NS 22,466
#define MAX_HPET_NUM 24,502
#define HPET_EVT_USED_BIT 26,527
#define HPET_EVT_USED 27,558
#define HPET_EVT_DISABLE_BIT 28,611
#define HPET_EVT_DISABLE 29,642
struct hpet_event_channel31,699
    unsigned long mult;33,727
    int           shift;34,751
    s_time_t      next_event;35,776
    cpumask_t     cpumask;36,806
    rwlock_t      cpumask_lock;48,1454
    spinlock_t    lock;49,1486
    void          (*event_handler)event_handler50,1510
    unsigned int idx;52,1576
    int cpu;53,1627
    int irq;54,1668
    unsigned int flags;55,1706
} __cacheline_aligned;56,1747
static struct hpet_event_channel legacy_hpet_event;57,1770
static struct hpet_event_channel hpet_events[hpet_events58,1822
static unsigned int num_hpets_used;60,1925
static int *irq_channel;irq_channel64,2067
#define irq_to_channel(66,2093
unsigned long hpet_address;68,2141
static bool_t __read_mostly force_hpet_broadcast;75,2371
static inline unsigned long div_sc(89,2822
static inline unsigned long ns2ticks(103,3164
static int hpet_next_event(111,3384
static int reprogram_hpet_evt_channel(127,3823
static int evt_do_broadcast(170,4796
static void handle_hpet_broadcast(191,5177
static void hpet_interrupt_handler(239,6291
static void hpet_msi_unmask(255,6666
static void hpet_msi_mask(269,6984
static void hpet_msi_write(283,7301
static void hpet_msi_read(295,7618
static unsigned int hpet_msi_startup(308,7959
static void hpet_msi_shutdown(314,8059
static void hpet_msi_ack(319,8136
static void hpet_msi_end(328,8307
static void hpet_msi_set_affinity(332,8355
static hw_irq_controller hpet_msi_type 354,8932
static int hpet_setup_msi_irq(365,9259
static int hpet_assign_irq(383,9678
static int hpet_fsb_cap_lookup(408,10166
static int next_channel;453,11229
static spinlock_t next_lock 454,11254
static struct hpet_event_channel *hpet_get_channel(hpet_get_channel456,11305
static void hpet_attach_channel(488,12061
static void hpet_detach_channel(506,12527
static void handle_rtc_once(533,13155
void hpet_broadcast_init(554,13545
void hpet_disable_legacy_broadcast(635,15980
void hpet_broadcast_enter(659,16541
void hpet_broadcast_exit(690,17316
int hpet_broadcast_is_available(718,18024
int hpet_legacy_irq_tick(724,18172
u64 hpet_setup(734,18369

xen/arch/x86/usercopy.c,117
unsigned long __copy_to_user_ll(13,239
__copy_from_user_ll(50,1410
copy_to_user(106,3132
copy_from_user(130,3806

xen/arch/x86/nmi.c,2182
unsigned int nmi_watchdog 36,887
static unsigned int nmi_hz 37,925
static unsigned int nmi_perfctr_msr;38,958
static unsigned int nmi_p4_cccr_val;39,1033
static unsigned int lapic_nmi_owner;53,1564
#define LAPIC_NMI_WATCHDOG	54,1601
#define LAPIC_NMI_RESERVED	55,1635
int nmi_active;63,1892
#define K7_EVNTSEL_ENABLE	65,1909
#define K7_EVNTSEL_INT	66,1945
#define K7_EVNTSEL_OS	67,1979
#define K7_EVNTSEL_USR	68,2012
#define K7_EVENT_CYCLES_PROCESSOR_IS_RUNNING	69,2046
#define K7_NMI_EVENT	70,2096
#define P6_EVNTSEL0_ENABLE	72,2156
#define P6_EVNTSEL_INT	73,2193
#define P6_EVNTSEL_OS	74,2227
#define P6_EVNTSEL_USR	75,2260
#define P6_EVENT_CPU_CLOCKS_NOT_HALTED	76,2294
#define CORE_EVENT_CPU_CLOCKS_NOT_HALTED 77,2339
#define P4_ESCR_EVENT_SELECT(79,2386
#define P4_CCCR_OVF_PMI0	80,2428
#define P4_CCCR_OVF_PMI1	81,2461
#define P4_CCCR_THRESHOLD(82,2494
#define P4_CCCR_COMPLEMENT	83,2533
#define P4_CCCR_COMPARE	84,2568
#define P4_CCCR_REQUIRED	85,2601
#define P4_CCCR_ESCR_SELECT(86,2634
#define P4_CCCR_ENABLE	87,2675
#define P4_NMI_CRU_ESCR0	93,2905
#define P4_NMI_IQ_CCCR0	94,2957
int __init check_nmi_watchdog 98,3127
static void nmi_timer_fn(138,4264
static void disable_lapic_nmi_watchdog(144,4403
static void enable_lapic_nmi_watchdog(175,5156
int reserve_lapic_nmi(183,5311
void release_lapic_nmi(198,5682
#define __pminit 210,5988
static void __pminit clear_msr_range(217,6114
static inline void write_watchdog_counter(225,6269
static void __pminit setup_k7_watchdog(235,6517
static void __pminit setup_p6_watchdog(256,7018
static int __pminit setup_p4_watchdog(277,7527
void __pminit setup_apic_nmi_watchdog(315,8805
static int cpu_nmi_callback(354,9702
static struct notifier_block cpu_nmi_nfb 376,10203
static atomic_t watchdog_disable_count 383,10395
void watchdog_disable(385,10453
void watchdog_enable(390,10527
void nmi_watchdog_tick(408,11058
void self_nmi(466,12883
static void do_nmi_trigger(475,13070
static struct keyhandler nmi_trigger_keyhandler 481,13198
static void do_nmi_stats(486,13311
static struct keyhandler nmi_stats_keyhandler 509,13912
static __init int register_nmi_trigger(515,14042

xen/arch/x86/msi.c,1372
static int msix_fixmap_alloc(36,809
static void msix_fixmap_free(54,1208
static int msix_get_fixmap(62,1433
static void msix_put_fixmap(93,2189
void msi_compose_msg(122,2802
static void read_msi_msg(161,3926
static int set_irq_msi(208,5305
static void write_msi_msg(221,5584
void set_msi_affinity(269,6957
static void msi_set_enable(295,7651
static void msix_set_enable(314,8188
int msi_maskable_irq(333,8731
static void msi_set_mask_bit(340,8900
static int msi_get_mask_bit(376,9936
void mask_msi_irq(391,10469
void unmask_msi_irq(396,10540
static struct msi_desc* alloc_msi_entry(401,10613
int setup_msi_irq(416,10876
int msi_free_irq(427,11107
static struct msi_desc *find_msi_entry(find_msi_entry446,11589
static int msi_capability_init(470,12376
static u64 read_pci_mem_bar(524,14316
static int msix_capability_init(571,15771
static int __pci_enable_msi(710,20801
static void __pci_disable_msi(744,21799
static int __pci_enable_msix(779,23043
static void __pci_disable_msix(823,24410
int pci_enable_msi(860,25463
void pci_disable_msi(871,25710
static void msi_free_irqs(879,25954
void pci_cleanup_msi(890,26179
int pci_restore_msi_state(898,26346
unsigned int pci_msix_get_table_len(947,27644
static void dump_msi(968,28120
static struct keyhandler dump_msi_keyhandler 1017,29621
static int __init msi_setup_keyhandler(1023,29746

xen/arch/x86/x86_emulate/x86_emulate.h,2614
#define __X86_EMULATE_H__25,1005
enum x86_segment 30,1116
    x86_seg_cs,32,1162
    x86_seg_ss,33,1178
    x86_seg_ds,34,1194
    x86_seg_es,35,1210
    x86_seg_fs,36,1226
    x86_seg_gs,37,1242
    x86_seg_tr,39,1276
    x86_seg_ldtr,40,1292
    x86_seg_gdtr,41,1310
    x86_seg_idtr,42,1328
    x86_seg_none49,1601
#define is_x86_user_segment(52,1622
typedef union segment_attributes 58,1848
    uint16_t bytes;59,1883
        uint16_t type:type62,1920
        uint16_t s:s63,1968
        uint16_t dpl:dpl64,2013
        uint16_t p:p65,2061
        uint16_t avl:avl66,2106
        uint16_t l:l67,2151
        uint16_t db:db68,2196
        uint16_t g:g69,2241
        uint16_t pad:pad70,2286
    } fields;71,2311
} __attribute__ ((packed)) segment_attributes_t;72,2325
struct segment_register 78,2512
    uint16_t   sel;79,2538
    segment_attributes_t attr;80,2558
    uint32_t   limit;81,2589
    uint64_t   base;82,2611
#define X86EMUL_OKAY 89,2799
#define X86EMUL_UNHANDLEABLE 91,2892
#define X86EMUL_EXCEPTION 93,2972
#define X86EMUL_RETRY 95,3068
#define X86EMUL_CMPXCHG_FAILED 97,3177
enum x86_emulate_fpu_type 100,3271
    X86EMUL_FPU_fpu,101,3299
    X86EMUL_FPU_mmx 102,3367
struct x86_emulate_ops117,4012
    int (*read)read140,4875
    int (*insn_fetch)insn_fetch151,5191
    int (*write)write162,5469
    int (*cmpxchg)cmpxchg175,5923
    int (*rep_ins)rep_ins189,6379
    int (*rep_outs)rep_outs203,6867
    int (*rep_movs)rep_movs217,7366
    int (*read_segment)read_segment230,7798
    int (*write_segment)write_segment239,8102
    int (*read_io)read_io248,8335
    int (*write_io)write_io258,8577
    int (*read_cr)read_cr268,8827
    int (*write_cr)write_cr277,9049
    int (*read_dr)read_dr286,9268
    int (*write_dr)write_dr295,9488
    int (*read_msr)read_msr304,9710
    int (*write_msr)write_msr313,9929
    int (*wbinvd)wbinvd319,10101
    int (*cpuid)cpuid323,10233
    int (*inject_hw_exception)inject_hw_exception331,10430
    int (*inject_sw_interrupt)inject_sw_interrupt337,10585
    int (*get_fpu)get_fpu347,10938
    void (*put_fpu)put_fpu354,11225
    int (*invlpg)invlpg358,11360
struct x86_emulate_ctxt366,11506
    struct cpu_user_regs *regs;regs369,11581
    unsigned int addr_size;372,11688
    unsigned int sp_size;375,11771
    uint8_t force_writeback;378,11850
            uint8_t hlt:hlt383,11987
            uint8_t mov_ss:mov_ss384,12048
            uint8_t sti:sti385,12126
        } flags;386,12201
        uint8_t byte;387,12218
    } retire;388,12240

xen/arch/x86/x86_emulate/x86_emulate.c,4757
#define ByteOp 25,1045
#define DstNone 27,1126
#define DstImplicit 28,1183
#define DstBitBase 29,1263
#define DstReg 30,1324
#define DstEax 31,1375
#define DstMem 32,1448
#define DstMask 33,1497
#define SrcInvalid 35,1551
#define SrcNone 36,1606
#define SrcImplicit 37,1658
#define SrcReg 38,1733
#define SrcMem 39,1784
#define SrcMem16 40,1833
#define SrcImm 41,1891
#define SrcImmByte 42,1943
#define SrcMask 43,2015
#define ModRM 45,2070
#define Mov 47,2144
#define ImplicitOps 49,2218
static uint8_t opcode_table[opcode_table51,2265
static uint8_t twobyte_table[twobyte_table173,7859
struct operand 257,11552
    enum { OP_REG,258,11569
    enum { OP_REG, OP_MEM,258,11569
    enum { OP_REG, OP_MEM, OP_IMM,258,11569
    enum { OP_REG, OP_MEM, OP_IMM, OP_NONE 258,11569
    enum { OP_REG, OP_MEM, OP_IMM, OP_NONE } type;258,11569
    unsigned int bytes;259,11620
        unsigned long val;263,11733
        uint32_t bigval[bigval264,11760
        unsigned long orig_val;269,11884
        uint32_t orig_bigval[orig_bigval270,11916
        unsigned long *reg;reg275,12018
            enum x86_segment seg;278,12105
            unsigned long    off;279,12139
        } mem;280,12173
#define MSR_TSC 285,12211
#define MSR_SYSENTER_CS 286,12247
#define MSR_SYSENTER_ESP 287,12283
#define MSR_SYSENTER_EIP 288,12319
#define MSR_EFER 289,12355
#define EFER_SCE 290,12391
#define EFER_LMA 291,12424
#define MSR_STAR 292,12458
#define MSR_LSTAR 293,12494
#define MSR_CSTAR 294,12530
#define MSR_FMASK 295,12566
#define MSR_TSC_AUX 296,12602
#define CR0_PE 299,12669
#define CR4_TSD 300,12694
#define EFLG_VIP 303,12750
#define EFLG_VIF 304,12776
#define EFLG_AC 305,12802
#define EFLG_VM 306,12828
#define EFLG_RF 307,12854
#define EFLG_NT 308,12880
#define EFLG_IOPL 309,12906
#define EFLG_OF 310,12932
#define EFLG_DF 311,12958
#define EFLG_IF 312,12984
#define EFLG_TF 313,13009
#define EFLG_SF 314,13034
#define EFLG_ZF 315,13059
#define EFLG_AF 316,13084
#define EFLG_PF 317,13109
#define EFLG_CF 318,13134
#define EXC_DE 321,13189
#define EXC_DB 322,13207
#define EXC_BP 323,13225
#define EXC_OF 324,13243
#define EXC_BR 325,13261
#define EXC_UD 326,13279
#define EXC_TS 327,13297
#define EXC_NP 328,13315
#define EXC_SS 329,13333
#define EXC_GP 330,13351
#define EXC_PF 331,13369
#define EXC_MF 332,13387
#define _LO32 342,13640
#define _STK 343,13694
#define _BYTES_PER_LONG 344,13741
#define _LO32 346,13793
#define _STK 347,13847
#define _BYTES_PER_LONG 348,13894
#define EFLAGS_MASK 355,14078
#define _PRE_EFLAGS(358,14219
#define _POST_EFLAGS(375,15233
#define __emulate_2op_nobyte(383,15575
#define __emulate_2op(410,17589
#define emulate_2op_SrcB(429,18982
#define emulate_2op_SrcV(433,19250
#define emulate_2op_SrcV_nobyte(437,19513
#define emulate_1op(442,19786
#define __emulate_2op_8byte(478,22354
#define __emulate_1op_8byte(487,22958
#define __emulate_2op_8byte(496,23512
#define __emulate_1op_8byte(497,23576
#define insn_fetch_bytes(501,23704
#define insn_fetch_type(511,24373
#define truncate_word(513,24446
#define truncate_ea(519,24699
#define mode_64bit(521,24754
#define fail_if(523,24796
#define generate_exception_if(529,25041
static int even_parity(541,25664
#define _register_address_increment(548,25843
#define register_address_increment(560,26669
#define sp_pre_dec(563,26773
#define sp_post_inc(567,26998
#define jmp_rel(573,27298
struct fpu_insn_ctxt 583,27903
    uint8_t insn_bytes;584,27926
    uint8_t exn_raised;585,27950
static void fpu_handle_exception(588,27978
#define get_fpu(595,28153
#define put_fpu(601,28495
#define emulate_fpu_insn(608,28838
#define emulate_fpu_insn_memdst(619,29373
#define emulate_fpu_insn_memsrc(631,29966
#define emulate_fpu_insn_stub(643,30559
static unsigned long __get_rep_prefix(651,31016
#define get_rep_prefix(667,31469
static void __put_rep_prefix(676,31991
#define put_rep_prefix(699,32668
#define truncate_ea_and_reps(705,32969
static int read_ulong(714,33509
static int mul_dbl(731,33961
static int imul_dbl(745,34313
static int div_dbl(760,34671
static int idiv_dbl(778,35206
test_cc(813,35940
get_cpl(851,36799
_mode_iopl(868,37137
#define mode_ring0(878,37357
#define mode_iopl(883,37560
static int ioport_access_check(889,37764
in_realmode(936,39126
in_protmode(951,39392
in_longmode(959,39568
realmode_load_seg(973,39816
protmode_load_seg(992,40197
    struct { uint32_t a,999,40383
    struct { uint32_t a, b;999,40383
load_seg(1131,44491
decode_register(1148,44890
#define decode_segment_failed 1187,46113
decode_segment(1189,46178
x86_emulate(1205,46498
#define REPE_PREFIX 1215,46916
#define REPNE_PREFIX 1216,46939

xen/arch/x86/genapic/summit.c,80
static __init int probe_summit(18,384
const struct genapic apic_summit 24,481

xen/arch/x86/genapic/x2apic.c,571
static bool_t __initdata x2apic_phys;30,967
static void init_apic_ldr_x2apic_phys(33,1095
static void init_apic_ldr_x2apic_cluster(37,1144
static void __init clustered_apic_check_x2apic(43,1283
static unsigned int cpu_mask_to_apicid_x2apic_cluster(47,1341
static void __send_IPI_mask_x2apic(52,1483
static void send_IPI_mask_x2apic_phys(86,2650
static void send_IPI_mask_x2apic_cluster(91,2796
static const struct genapic apic_x2apic_phys 96,2944
static const struct genapic apic_x2apic_cluster 109,3465
const struct genapic *__init apic_x2apic_probe(122,4012

xen/arch/x86/genapic/default.c,82
static __init int probe_default(19,427
const struct genapic apic_default 24,483

xen/arch/x86/genapic/bigsmp.c,231
static int dmi_bigsmp;15,329
static __init int force_bigsmp(17,386
static struct dmi_system_id __initdata bigsmp_dmi_table[bigsmp_dmi_table25,550
static __init int probe_bigsmp(43,960
const struct genapic apic_bigsmp 52,1106

xen/arch/x86/genapic/probe.c,340
const struct genapic *__read_mostly genapic;23,562
const struct genapic *apic_probe[] __initdata 25,608
static int cmdline_apic;32,735
void __init generic_bigsmp_probe(34,761
static void __init genapic_apic_force(51,1253
void __init generic_apic_probe(60,1459
int __init mps_oem_check(79,1874
int __init acpi_madt_oem_check(95,2240

xen/arch/x86/genapic/delivery.c,480
const cpumask_t *target_cpus_all(target_cpus_all10,164
void init_apic_ldr_flat(19,321
void __init clustered_apic_check_flat(29,559
const cpumask_t *vector_allocation_cpumask_flat(vector_allocation_cpumask_flat34,681
unsigned int cpu_mask_to_apicid_flat(39,769
void init_apic_ldr_phys(48,940
void __init clustered_apic_check_phys(57,1192
const cpumask_t *vector_allocation_cpumask_phys(vector_allocation_cpumask_phys62,1314
unsigned int cpu_mask_to_apicid_phys(67,1401

xen/arch/x86/platform_hypercall.c,393
typedef long ret_t;36,848
# undef copy_from_compat38,897
# define copy_from_compat 39,922
# undef copy_to_compat40,964
# define copy_to_compat 41,987
# undef guest_from_compat_handle42,1025
# define guest_from_compat_handle(43,1058
static long cpu_frequency_change_helper(53,1348
static long cpu_down_helper(58,1454
ret_t do_platform_op(64,1560
#define C(246,6735
#undef C253,6982

xen/arch/x86/traps.c,4242
static char __read_mostly opt_nmi[opt_nmi79,2291
static char __read_mostly opt_nmi[opt_nmi81,2345
idt_entry_t idt_table[idt_table95,2695
idt_entry_t *idt_tables[NR_CPUS] __read_mostly;98,2771
static int debug_stack_lines 103,2914
static bool_t __devinitdata opt_ler;106,3005
#define stack_words_per_line 110,3095
#define ESP_BEFORE_EXCEPTION(111,3126
#define stack_words_per_line 113,3197
#define ESP_BEFORE_EXCEPTION(114,3228
static void show_guest_stack(117,3300
static void show_trace(199,5379
static void show_trace(223,5907
void show_stack(277,7357
void show_stack_overflow(303,8019
void show_execution_state(345,9224
void vcpu_show_execution_state(351,9331
static char *trapstr(trapstr371,9815
asmlinkage void fatal_trap(393,10595
static void do_guest_trap(423,11462
static void instruction_done(454,12311
static unsigned int check_guest_io_breakpoint(468,12765
asmlinkage int set_guest_machinecheck_trapbounce(507,13829
asmlinkage int set_guest_nmi_trapbounce(521,14254
static inline void do_trap(530,14550
#define DO_ERROR_NOCODE(568,15581
#define DO_ERROR(574,15816
DO_ERROR_NOCODE(580,16051
int wrmsr_hypervisor_regs(615,17032
int cpuid_hypervisor_leaves(668,18304
static void pv_cpuid(718,19698
static int emulate_invalid_rdtscp(824,23039
static int emulate_forced_invalid_op(844,23586
asmlinkage void do_invalid_op(880,24527
asmlinkage void do_int3(974,27183
asmlinkage void do_machine_check(987,27427
static void reserved_bit_page_fault(992,27543
void propagate_page_fault(1001,27833
static int handle_gdt_ldt_mapping_fault(1035,28918
#define IN_HYPERVISOR_RANGE(1086,30680
#define IN_HYPERVISOR_RANGE(1089,30790
static int __spurious_page_fault(1093,30870
static int spurious_page_fault(1180,33393
static int fixup_page_fault(1197,33835
asmlinkage void do_page_fault(1265,36115
asmlinkage void __init do_early_page_fault(1320,37672
long do_fpu_taskswitch(1348,38455
static int read_descriptor(1367,38765
static int read_gate_descriptor(1431,40647
static int guest_io_okay(1489,42209
#define TOGGLE_MODE(1496,42481
#define TOGGLE_MODE(1498,42565
static int admin_io_okay(1531,43436
static uint32_t guest_io_read(1545,43833
static void guest_io_write(1598,45147
void host_to_guest_gpr_switch(1653,46639
unsigned long guest_to_host_gpr_switch(1655,46730
static inline uint64_t guest_misc_enable(1660,46879
#define insn_fetch(1671,47237
# define read_sreg(1686,48233
# define read_sreg(1688,48304
static int is_cpufreq_controller(1691,48367
static int emulate_privileged_op(1697,48516
    enum { lm_seg_none,1702,48729
    enum { lm_seg_none, lm_seg_fs,1702,48729
    enum { lm_seg_none, lm_seg_fs, lm_seg_gs 1702,48729
#define rd_ad(1706,48948
#define wr_ad(1711,49153
#undef wr_ad2465,74467
#undef rd_ad2466,74480
static inline int check_stack_limit(2477,74606
static void emulate_gate_op(2484,74879
#define ad_default 2688,81773
#undef ad_default2690,81856
#define push(2726,82747
#undef push2834,86620
asmlinkage void do_general_protection(2846,86793
static void nmi_mce_softirq(2939,89718
void async_exception_cleanup(2973,90640
static void nmi_dom0_report(3048,93226
static void mem_parity_error(3060,93477
static void io_check_error(3079,94007
static void unknown_nmi_error(3098,94512
static int dummy_nmi_callback(3114,94986
static nmi_callback_t nmi_callback 3119,95073
asmlinkage void do_nmi(3121,95131
void set_nmi_callback(3147,95737
void unset_nmi_callback(3152,95818
asmlinkage void do_device_not_available(3157,95892
u64 read_efer(3176,96300
void write_efer(3181,96352
static void ler_enable(3187,96435
asmlinkage void do_debug(3198,96631
asmlinkage void do_spurious_interrupt_bug(3251,98212
static void __set_intr_gate(3255,98287
static void set_swint_gate(3265,98606
void set_intr_gate(3270,98699
void load_TR(3275,98784
void __devinit percpu_traps_init(3302,99655
void __init trap_init(3336,100335
long register_guest_nmi_callback(3381,102157
long unregister_guest_nmi_callback(3404,102759
int guest_has_trap_callback(3414,102951
int send_guest_trap(3432,103350
long do_set_trap_table(3481,104675
long set_debugreg(3527,105737
long do_set_debugreg(3632,109119
unsigned long do_get_debugreg(3637,109221

xen/arch/x86/string.c,150
#undef memcpy11,233
void *memcpy(memcpy12,247
#undef memset27,609
void *memset(memset28,623
#undef memmove41,829
void *memmove(memmove42,844

xen/arch/x86/physdev.c,174
typedef long ret_t;20,394
static int physdev_hvm_map_pirq(30,585
static int physdev_map_pirq(83,2082
static int physdev_unmap_pirq(223,5664
ret_t do_physdev_op(258,6492

xen/arch/x86/io_apic.c,5286
static struct { int pin,42,1187
static struct { int pin, apic;42,1187
static struct { int pin, apic; } ioapic_i8259 42,1187
bool_t __read_mostly skip_ioapic_setup;46,1286
int sis_apic_bug 53,1427
int __read_mostly nr_ioapic_registers[nr_ioapic_registers59,1495
int __read_mostly nr_ioapics;60,1548
#define MAX_PLUS_SHARED_IRQS 66,1668
#define PIN_MAP_SIZE 67,1709
static struct irq_pin_list 76,1916
    int apic,77,1945
    int apic, pin;77,1945
    unsigned int next;78,1964
} *irq_2_pin;irq_2_pin79,1987
static unsigned int irq_2_pin_free_entry;81,2002
static void add_pin_to_irq(88,2249
static void __init replace_pin_at_irq(114,2937
struct IO_APIC_route_entry **alloc_ioapic_entries(alloc_ioapic_entries131,3391
int save_IO_APIC_setup(161,4067
void mask_IO_APIC_setup(186,4663
int restore_IO_APIC_setup(217,5519
void free_ioapic_entries(241,6217
static void __modify_IO_APIC_irq 251,6418
static void __mask_IO_APIC_irq 271,6947
static void __unmask_IO_APIC_irq 277,7063
static void __edge_IO_APIC_irq 283,7184
static void __level_IO_APIC_irq 289,7303
static void mask_IO_APIC_irq 294,7405
static void unmask_IO_APIC_irq 303,7606
static void __eoi_IO_APIC_irq(312,7811
static void eoi_IO_APIC_irq(328,8184
#define clear_IO_APIC_pin(336,8381
#define clear_IO_APIC_pin_raw(337,8443
static void __clear_IO_APIC_pin(338,8505
static void clear_IO_APIC 366,9543
fastcall void smp_irq_move_cleanup_interrupt(379,9835
static void send_cleanup_vector(432,11314
void irq_complete_move(443,11621
unsigned int set_desc_affinity(459,12006
set_ioapic_affinity_irq_desc(489,12666
set_ioapic_affinity_irq(528,13726
static int find_irq_entry(541,13983
static int __init find_isa_irq_pin(558,14407
static int __init find_isa_irq_apic(578,14956
void /*__init*/ setup_ioapic_dest(617,16077
static int EISA_ELCR(643,16731
#define default_EISA_trigger(659,17265
#define default_EISA_polarity(660,17342
#define default_ISA_trigger(665,17491
#define default_ISA_polarity(666,17528
#define default_PCI_trigger(671,17676
#define default_PCI_polarity(672,17713
#define default_MCA_trigger(677,17862
#define default_MCA_polarity(678,17899
#define default_NEC98_trigger(683,18049
#define default_NEC98_polarity(684,18092
static int __init MPBIOS_polarity(686,18136
static int MPBIOS_trigger(760,19732
static inline int irq_polarity(834,21284
static inline int irq_trigger(839,21362
static int pin_2_irq(844,21438
static inline int IO_APIC_irq_trigger(887,22327
static hw_irq_controller ioapic_level_type;904,22759
static hw_irq_controller ioapic_edge_type;905,22803
#define IOAPIC_AUTO	907,22847
#define IOAPIC_EDGE	908,22870
#define IOAPIC_LEVEL	909,22892
#define SET_DEST(911,22916
static inline void ioapic_register_intr(914,23018
static void __init setup_IO_APIC_irqs(923,23304
static void __init setup_ExtINT_IRQ0_pin(1006,26090
static inline void UNEXPECTED_IO_APIC(1048,27275
static void /*__init*/ __print_IO_APIC(1052,27324
void print_IO_APIC(1194,32810
static void _print_IO_APIC_keyhandler(1200,32905
static struct keyhandler print_IO_APIC_keyhandler 1204,32989
static void __init enable_IO_APIC(1210,33139
void disable_IO_APIC(1276,35558
static void __init setup_ioapic_ids_from_mpc(1325,37077
static void __init setup_ioapic_ids_from_mpc(1432,40948
static int __init timer_irq_works(1443,41303
static unsigned int startup_edge_ioapic_irq(1493,42755
static void ack_edge_ioapic_irq(1515,43306
static unsigned int startup_level_ioapic_irq 1542,44202
int __read_mostly ioapic_ack_new 1549,44345
static void setup_ioapic_ack(1550,44383
static bool_t io_apic_level_ack_pending(1561,44665
static void mask_and_ack_level_ioapic_irq 1593,45416
static void end_level_ioapic_irq 1647,47221
static void disable_edge_ioapic_irq(1715,49501
static void end_edge_ioapic_irq(1719,49560
static hw_irq_controller ioapic_edge_type 1731,49991
static hw_irq_controller ioapic_level_type 1742,50347
static unsigned int startup_msi_irq(1753,50703
static void ack_msi_irq(1759,50801
static void end_msi_irq(1770,51039
#define shutdown_msi_irq 1776,51181
hw_irq_controller pci_msi_type 1782,51336
static inline void init_IO_APIC_traps(1793,51643
static void enable_lapic_irq(1802,51909
static void disable_lapic_irq(1810,52069
static void ack_lapic_irq(1818,52229
static void end_lapic_irq(1823,52298
static hw_irq_controller lapic_irq_type 1825,52361
static void __init unlock_ExtINT_logic(1842,53036
static void __init check_timer(1905,55206
#define PIC_IRQS	2031,58958
static struct IO_APIC_route_entry *ioapic_pm_state;ioapic_pm_state2033,58998
static void __init ioapic_pm_state_alloc(2035,59051
void __init setup_IO_APIC(2047,59392
void ioapic_suspend(2074,59998
void ioapic_resume(2090,60500
int __init io_apic_get_unique_id 2118,61486
int __init io_apic_get_version 2193,63763
int __init io_apic_get_redir_entries 2206,64040
int io_apic_set_pci_routing 2219,64323
static int ioapic_physbase_to_id(2285,66297
static int apic_pin_2_gsi_irq(2296,66558
int ioapic_guest_read(2312,66869
#define WARN_BOGUS_WRITE(2327,67212
int ioapic_guest_write(2335,67624
void dump_ioapic_irq_info(2446,71178
static unsigned int __initdata max_gsi_irqs;2496,72693
void __init init_ioapic_mappings(2499,72784

xen/arch/x86/i387.c,311
void init_fpu(19,387
void save_init_fpu(27,528
void restore_fpu(94,2634
#define XSTATE_CPUID 140,4070
u32 xsave_cntxt_size;147,4309
u64 xfeature_mask;150,4408
bool_t __read_mostly cpu_has_xsaveopt;155,4493
void xsave_init(157,4533
int xsave_alloc_save_area(213,6164
void xsave_free_save_area(236,6740

xen/arch/x86/domain_build.c,1130
static long __initdata dom0_nrpages;40,898
static long __initdata dom0_min_nrpages;41,935
static long __initdata dom0_max_nrpages 42,976
static long __init parse_amt(64,1976
static void __init parse_dom0_mem(69,2161
static unsigned int __initdata opt_dom0_max_vcpus;84,2580
struct vcpu *__init alloc_dom0_vcpu0(87,2685
static bool_t __initdata opt_dom0_shadow;103,3174
static char __initdata opt_dom0_ioports_disable[opt_dom0_ioports_disable106,3264
#define L1_PROT 111,3462
#define L2_PROT 112,3518
#define L3_PROT 113,3597
#define BASE_PROT 116,3725
#define L1_PROT 117,3794
#define COMPAT_L1_PROT 119,3889
#define L2_PROT 120,3952
#define L3_PROT 121,3992
#define L4_PROT 122,4032
#define round_pgup(125,4080
#define round_pgdown(126,4139
static struct page_info * __init alloc_chunk(128,4183
static unsigned long __init compute_dom0_nr_pages(179,5721
static void __init process_dom0_ioports_disable(259,8800
int __init construct_dom0(297,9754
#define NR(501,16837
#define MPT_ALLOC(621,21215
#undef MPT_ALLOC667,22962
#define REVERSE_START 1048,37543
#define pfn 1091,39053
#undef pfn1098,39347

xen/arch/x86/extable.c,368
#define EX_FIELD(15,399
#define swap_ex 16,441
#define EX_FIELD(18,468
static inline unsigned long ex_addr(21,551
static inline unsigned long ex_cont(26,658
static int __init cmp_ex(31,765
static void __init swap_ex(46,1050
void __init sort_exception_tables(59,1315
search_one_table(69,1677
search_exception_table(91,2196
search_pre_exception_table(98,2343

xen/arch/x86/debug.c,313
#define DBGP(35,1096
#define DBGP1(36,1148
#define DBGP2(37,1203
#define DBGP1(39,1264
#define DBGP2(40,1288
typedef unsigned long dbgva_t;43,1320
typedef unsigned char dbgbyte_t;44,1351
dbg_hvm_va2mfn(49,1459
dbg_pv_va2mfn(91,2853
dbg_pv_va2mfn(152,4789
dbg_rw_guest_mem(193,5985
dbg_rw_mem(240,7174

xen/arch/x86/smpboot.c,1930
#define setup_trampoline(49,1536
static int smp_b_stepping;52,1647
int phys_proc_id[NR_CPUS] __read_mostly 55,1712
int cpu_core_id[NR_CPUS] __read_mostly 58,1823
cpumask_t cpu_online_map __read_mostly;65,2120
struct cpuinfo_x86 cpu_data[cpu_data68,2192
u32 x86_cpu_to_apicid[NR_CPUS] __read_mostly 70,2231
static int cpu_error;75,2362
static enum cpu_state 76,2384
    CPU_STATE_DEAD 77,2408
    CPU_STATE_INIT,78,2476
    CPU_STATE_CALLOUT,79,2545
    CPU_STATE_CALLIN,80,2614
    CPU_STATE_ONLINE 81,2679
} cpu_state;82,2747
#define set_cpu_state(83,2760
void *stack_base[stack_base85,2834
static void smp_store_cpu_info(87,2862
static atomic_t tsc_count;136,4373
static uint64_t tsc_value;137,4400
static cpumask_t tsc_sync_cpu_mask;138,4427
static void synchronize_tsc_master(140,4464
static void synchronize_tsc_slave(161,4929
void smp_callin(179,5326
static int booting_cpu;226,6515
static cpumask_t cpu_sibling_setup_map;229,6591
static void set_cpu_sibling_map(231,6632
static void construct_percpu_idt(296,8545
void start_secondary(305,8841
    void * esp;387,11338
    unsigned short ss;388,11354
} stack_start;389,11377
u32 cpu_2_logical_apicid[NR_CPUS] __read_mostly 391,11393
static void map_cpu_to_logical_apicid(394,11484
static void unmap_cpu_to_logical_apicid(402,11653
static int wakeup_secondary_cpu(407,11751
int alloc_cpu_id(518,14768
static int do_boot_cpu(527,14953
void cpu_exit_clear(617,17234
static void cpu_smpboot_free(624,17371
static int cpu_smpboot_alloc(652,18174
static int cpu_smpboot_callback(703,19683
static struct notifier_block cpu_smpboot_nfb 725,20135
void __init smp_prepare_cpus(729,20230
void __init smp_prepare_boot_cpu(803,22412
remove_siblinginfo(810,22567
void __cpu_disable(832,23281
void __cpu_die(857,23823
int cpu_add(872,24184
int __cpu_up(940,26109
void __init smp_cpus_done(961,26489
void __init smp_intr_init(989,27212

xen/arch/x86/x86_emulate.c,22
#undef cmpxchg15,337

xen/arch/x86/hvm/pmtimer.c,967
#define PM1a_STS_ADDR_V0 28,1057
#define PM1a_EN_ADDR_V0 29,1113
#define TMR_VAL_ADDR_V0 30,1173
#define PM1a_STS_ADDR_V1 31,1227
#define PM1a_EN_ADDR_V1 32,1283
#define TMR_VAL_ADDR_V1 33,1343
#define TMR_STS 36,1450
#define GBL_STS 37,1478
#define PWRBTN_STS 38,1506
#define SLPBTN_STS 39,1534
#define TMR_EN 42,1589
#define GBL_EN 43,1617
#define PWRBTN_EN 44,1645
#define SLPBTN_EN 45,1673
#define SCI_MASK 48,1759
#define SCI_IRQ 51,1893
#define TMR_VAL_MASK 54,1991
#define TMR_VAL_MSB 55,2026
static void pmt_update_sci(58,2126
void hvm_acpi_power_button(68,2382
void hvm_acpi_sleep_button(77,2593
static void pmt_update_time(88,2910
static void pmt_timer_callback(117,3867
static int handle_evt_io(144,4677
static int handle_pmt_io(207,6567
static int pmtimer_save(244,7575
static int pmtimer_load(270,8457
int pmtimer_change_ioport(298,9109
void pmtimer_init(327,9972
void pmtimer_deinit(348,10658
void pmtimer_reset(354,10780

xen/arch/x86/hvm/io.c,340
int hvm_buffered_io_send(49,1510
void send_timeoffset_req(126,3588
void send_invalidate_req(148,4026
int handle_mmio(169,4508
int handle_mmio_with_translation(209,5608
int handle_pio(216,5811
void hvm_io_assist(248,6651
static int dpci_ioport_read(284,7630
static int dpci_ioport_write(322,8489
int dpci_ioport_intercept(361,9385

xen/arch/x86/hvm/vpic.c,813
#define vpic_domain(37,1477
#define __vpic_lock(39,1601
#define vpic_lock(41,1737
#define vpic_unlock(42,1786
#define vpic_is_locked(43,1837
#define vpic_elcr_mask(44,1894
#define VPIC_PRIO_NONE 47,2039
static int vpic_get_priority(48,2064
static int vpic_get_highest_priority_irq(64,2500
static void vpic_update_int_output(95,3518
static void __vpic_intack(132,4451
static int vpic_intack(150,4876
static void vpic_ioport_write(177,5377
static uint32_t vpic_ioport_read(305,9361
static int vpic_intercept_pic_io(319,9643
static int vpic_intercept_elcr_io(340,10144
static int vpic_save(367,10797
static int vpic_load(383,11108
void vpic_reset(403,11554
void vpic_init(418,11847
void vpic_irq_positive_edge(429,12166
void vpic_irq_negative_edge(445,12516
int vpic_ack_pending_irq(461,12867

xen/arch/x86/hvm/hvm.c,6261
bool_t __read_mostly hvm_enabled;65,1914
unsigned int opt_hvm_debug_level __read_mostly;67,1949
struct hvm_function_table hvm_funcs __read_mostly;70,2047
    hvm_io_bitmap[hvm_io_bitmap74,2231
static int cpu_callback(76,2279
static struct notifier_block cpu_nfb 101,2791
static int __init hvm_enable(105,2870
int hvm_event_needs_reinjection(156,4209
uint8_t hvm_combine_hw_exceptions(181,5006
void hvm_set_rdtsc_exiting(202,5681
void hvm_set_guest_tsc(210,5842
u64 hvm_get_guest_tsc(228,6215
void hvm_migrate_timers(246,6541
void hvm_migrate_pirqs(252,6632
void hvm_do_resume(281,7587
static void hvm_init_ioreq_page(312,8518
static void hvm_destroy_ioreq_page(320,8697
static int hvm_set_ioreq_page(337,9023
static int hvm_print_line(389,10154
int hvm_domain_initialise(417,10956
void hvm_domain_relinquish_resources(477,12276
void hvm_domain_destroy(494,12686
static int hvm_save_cpu_ctxt(503,12872
static bool_t hvm_efer_valid(618,16562
static int hvm_load_cpu_ctxt(629,17019
#define UNFOLD_ARBYTES(687,18774
#undef UNFOLD_ARBYTES698,19229
#define HVM_CPU_XSAVE_SIZE 816,22726
static int hvm_save_cpu_xsave_states(818,22797
static int hvm_load_cpu_xsave_states(845,23557
static int __hvm_register_CPU_XSAVE_save_and_restore(911,25727
int hvm_vcpu_initialise(923,26162
void hvm_vcpu_destroy(995,27891
void hvm_vcpu_down(1009,28268
bool_t hvm_send_assist_req(1033,28907
void hvm_hlt(1061,29717
void hvm_triple_fault(1081,30220
bool_t hvm_hap_nested_page_fault(1089,30444
int hvm_handle_xsetbv(1147,32052
int hvm_set_efer(1172,32614
static bool_t domain_exit_uc_mode(1206,33608
static void local_flush_cache(1223,33976
static void hvm_set_uc_mode(1228,34037
int hvm_set_cr0(1236,34290
int hvm_set_cr3(1355,38148
int hvm_set_cr4(1388,39159
int hvm_virtual_to_linear_addr(1423,40082
static void *__hvm_map_guest_frame(__hvm_map_guest_frame1505,42399
void *hvm_map_guest_frame_rw(hvm_map_guest_frame_rw1530,43040
void *hvm_map_guest_frame_ro(hvm_map_guest_frame_ro1535,43135
void hvm_unmap_guest_frame(1540,43230
static void *hvm_map_entry(hvm_map_entry1546,43314
static void hvm_unmap_entry(1580,44169
static int hvm_load_segment_selector(1585,44241
void hvm_task_switch(1710,48055
        u16 back_link,1721,48443
        u16 back_link,__blh;1721,48443
        u32 esp0;1722,48472
        u16 ss0,1723,48490
        u16 ss0, _0;1723,48490
        u32 esp1;1724,48511
        u16 ss1,1725,48529
        u16 ss1, _1;1725,48529
        u32 esp2;1726,48550
        u16 ss2,1727,48568
        u16 ss2, _2;1727,48568
        u32 cr3,1728,48589
        u32 cr3, eip,1728,48589
        u32 cr3, eip, eflags,1728,48589
        u32 cr3, eip, eflags, eax,1728,48589
        u32 cr3, eip, eflags, eax, ecx,1728,48589
        u32 cr3, eip, eflags, eax, ecx, edx,1728,48589
        u32 cr3, eip, eflags, eax, ecx, edx, ebx,1728,48589
        u32 cr3, eip, eflags, eax, ecx, edx, ebx, esp,1728,48589
        u32 cr3, eip, eflags, eax, ecx, edx, ebx, esp, ebp,1728,48589
        u32 cr3, eip, eflags, eax, ecx, edx, ebx, esp, ebp, esi,1728,48589
        u32 cr3, eip, eflags, eax, ecx, edx, ebx, esp, ebp, esi, edi;1728,48589
        u16 es,1729,48659
        u16 es, _3,1729,48659
        u16 es, _3, cs,1729,48659
        u16 es, _3, cs, _4,1729,48659
        u16 es, _3, cs, _4, ss,1729,48659
        u16 es, _3, cs, _4, ss, _5,1729,48659
        u16 es, _3, cs, _4, ss, _5, ds,1729,48659
        u16 es, _3, cs, _4, ss, _5, ds, _6,1729,48659
        u16 es, _3, cs, _4, ss, _5, ds, _6, fs,1729,48659
        u16 es, _3, cs, _4, ss, _5, ds, _6, fs, _7,1729,48659
        u16 es, _3, cs, _4, ss, _5, ds, _6, fs, _7, gs,1729,48659
        u16 es, _3, cs, _4, ss, _5, ds, _6, fs, _7, gs, _8,1729,48659
        u16 es, _3, cs, _4, ss, _5, ds, _6, fs, _7, gs, _8, ldt,1729,48659
        u16 es, _3, cs, _4, ss, _5, ds, _6, fs, _7, gs, _8, ldt, _9;1729,48659
        u16 trace,1730,48728
        u16 trace, iomap;1730,48728
#define HVMCOPY_from_guest 1917,54522
#define HVMCOPY_to_guest 1918,54557
#define HVMCOPY_no_fault 1919,54592
#define HVMCOPY_fault 1920,54627
#define HVMCOPY_phys 1921,54662
#define HVMCOPY_virt 1922,54697
static enum hvm_copy_result __hvm_copy(1923,54732
enum hvm_copy_result hvm_copy_to_guest_phys(2011,57231
enum hvm_copy_result hvm_copy_from_guest_phys(2019,57458
enum hvm_copy_result hvm_copy_to_guest_virt(2027,57689
enum hvm_copy_result hvm_copy_from_guest_virt(2035,57980
enum hvm_copy_result hvm_fetch_from_guest_virt(2043,58255
enum hvm_copy_result hvm_copy_to_guest_virt_nofault(2053,58599
enum hvm_copy_result hvm_copy_from_guest_virt_nofault(2061,58901
enum hvm_copy_result hvm_fetch_from_guest_virt_nofault(2069,59187
unsigned long copy_to_user_hvm(2079,59542
unsigned long copy_from_user_hvm(2097,60004
#define bitmaskof(2114,60422
void hvm_cpuid(2115,60467
void hvm_rdtsc_intercept(2175,62380
int hvm_msr_read_intercept(2187,62636
int hvm_msr_write_intercept(2300,65851
enum hvm_intblk hvm_interrupt_blocked(2411,69103
static int grant_table_op_is_allowed(2440,69951
static long hvm_grant_table_op(2456,70316
static long hvm_memory_op(2464,70576
static long hvm_physdev_op(2472,70833
static long hvm_vcpu_op(2487,71197
typedef unsigned long hvm_hypercall_t(2510,71681
#define HYPERCALL(2514,71820
static hvm_hypercall_t *hvm_hypercall32_table[hvm_hypercall32_table2519,71964
static long hvm_grant_table_op_compat32(2535,72526
static long hvm_memory_op_compat32(2544,72835
static long hvm_vcpu_op_compat32(2552,73105
static long hvm_physdev_op_compat32(2575,73602
static hvm_hypercall_t *hvm_hypercall64_table[hvm_hypercall64_table2593,74010
static hvm_hypercall_t *hvm_hypercall32_table[hvm_hypercall32_table2607,74539
int hvm_do_hypercall(2623,75138
static void hvm_latch_shinfo_size(2705,77801
void hvm_hypercall_page_initialise(2737,79132
static int hvmop_set_pci_intx_level(2744,79331
void hvm_vcpu_reset_state(2792,80287
static void hvm_s3_suspend(2874,82536
static void hvm_s3_resume(2907,83162
static int hvmop_set_isa_irq_level(2913,83305
static int hvmop_set_pci_link_route(2961,84186
static int hvmop_flush_tlb_all(2998,84914
long do_hvm_op(3039,85997
int hvm_debug_op(3480,98728

xen/arch/x86/hvm/vmx/vmcs.c,2162
static bool_t __read_mostly opt_vpid_enabled 41,1266
static bool_t __read_mostly opt_unrestricted_guest_enabled 44,1358
static unsigned int __read_mostly ple_gap 56,1935
static unsigned int __read_mostly ple_window 58,2019
u32 vmx_pin_based_exec_control __read_mostly;62,2173
u32 vmx_cpu_based_exec_control __read_mostly;63,2219
u32 vmx_secondary_exec_control __read_mostly;64,2265
u32 vmx_vmexit_control __read_mostly;65,2311
u32 vmx_vmentry_control __read_mostly;66,2349
u64 vmx_ept_vpid_cap __read_mostly;67,2388
bool_t cpu_has_vmx_ins_outs_instr_info __read_mostly;68,2424
static u32 vmcs_revision_id __read_mostly;74,2669
static void __init vmx_display_features(76,2713
#define P(82,2835
#undef P90,3307
static u32 adjust_vmx_controls(101,3532
static bool_t cap_check(122,4174
static int vmx_init_vmcs_config(129,4376
static struct vmcs_struct *vmx_alloc_vmcs(vmx_alloc_vmcs357,13020
static void vmx_free_vmcs(373,13338
static void __vmx_clear_vmcs(378,13424
static void vmx_clear_vmcs(400,13994
static void vmx_load_vmcs(408,14173
int vmx_cpu_up_prepare(428,14662
void vmx_cpu_dead(441,14967
int vmx_cpu_up(447,15094
void vmx_cpu_down(536,17775
struct foreign_vmcs 553,18199
    struct vcpu *v;v554,18221
    unsigned int count;555,18241
void vmx_vmcs_enter(559,18327
void vmx_vmcs_exit(593,18927
struct xgt_desc 618,19434
    unsigned short size;619,19452
    unsigned long address 620,19477
static void vmx_set_host_env(623,19532
void vmx_disable_intercept_for_msr(645,20284
static int construct_vmcs(671,21171
int vmx_read_guest_msr(896,28254
int vmx_write_guest_msr(914,28658
int vmx_add_guest_msr(932,29055
int vmx_add_host_load_msr(964,30028
int vmx_create_vmcs(994,30912
void vmx_destroy_vmcs(1016,31382
void vm_launch_fail(1029,31697
void vm_resume_fail(1036,31874
static void wbinvd_ipi(1043,32051
void vmx_do_resume(1048,32105
static unsigned long vmr(1096,33661
static void vmx_dump_sel(1104,33809
static void vmx_dump_sel2(1116,34264
void vmcs_dump_vcpu(1126,34553
static void vmcs_dump(1254,40442
static struct keyhandler vmcs_dump_keyhandler 1280,41006
void setup_vmcs_dump(1286,41136

xen/arch/x86/hvm/vmx/realmode.c,118
static void realmode_deliver_exception(24,543
static void realmode_emulate_one(103,2791
void vmx_realmode(169,4786

xen/arch/x86/hvm/vmx/intr.c,82
static void enable_intr_window(70,2828
asmlinkage void vmx_intr_assist(112,4418

xen/arch/x86/hvm/vmx/vpmu_core2.c,1187
bool_t __read_mostly is_pmc_quirk;50,1821
static void check_pmc_quirk(52,1857
static void handle_pmc_quirk(65,2156
u32 core2_counters_msr[core2_counters_msr101,2933
u32 core2_ctrls_msr[core2_ctrls_msr107,3112
struct pmumsr core2_counters 112,3222
struct pmumsr core2_ctrls 117,3289
static int arch_pmc_cnt;121,3349
static int core2_get_pmc_count(123,3375
static u64 core2_calc_intial_glb_ctrl_msr(136,3601
static int core2_get_bitwidth_fix_count(144,3872
static int is_core2_vpmu_msr(151,4025
static void core2_vpmu_set_msr_bitmap(202,5229
static void core2_vpmu_unset_msr_bitmap(227,6145
static inline void __core2_vpmu_save(249,6937
static void core2_vpmu_save(262,7445
static inline void __core2_vpmu_load(280,7923
static void core2_vpmu_load(298,8610
static int core2_vpmu_alloc_resource(310,8953
static void core2_vpmu_save_msr_context(354,10464
static int core2_vpmu_msr_common_check(370,10900
static int core2_vpmu_do_wrmsr(394,11600
static int core2_vpmu_do_rdmsr(517,15888
static int core2_vpmu_do_interrupt(546,16646
static void core2_vpmu_initialise(582,17814
static void core2_vpmu_destroy(587,17892
struct arch_vpmu_ops core2_vpmu_ops 602,18368

xen/arch/x86/hvm/vmx/entry.S,326
.globl 60,1946
vmx_asm_vmexit_handler:vmx_asm_vmexit_handler61,1976
.globl 119,3284
vmx_asm_do_vmentry:vmx_asm_do_vmentry120,3310
.Lvmx_not_realmode:.Lvmx_not_realmode140,3847
.Lvmx_launch:.Lvmx_launch188,4853
.Lvmx_goto_emulator:.Lvmx_goto_emulator194,4937
.Lvmx_process_softirqs:.Lvmx_process_softirqs199,5040

xen/arch/x86/hvm/vmx/vmx.c,4600
enum handler_return 58,1733
enum handler_return { HNDL_done,58,1733
enum handler_return { HNDL_done, HNDL_unhandled,58,1733
enum handler_return { HNDL_done, HNDL_unhandled, HNDL_exception_raised 58,1733
static int vmx_domain_initialise(78,2643
static void vmx_domain_destroy(97,3176
static int vmx_vcpu_initialise(104,3338
static void vmx_vcpu_destroy(133,4030
static u32 msr_index[msr_index144,4238
#define MSR_INDEX_SIZE 149,4311
void vmx_save_host_msrs(151,4359
#define WRITE_MSR(160,4574
long_mode_do_msr_read(168,4986
long_mode_do_msr_write(213,6032
static void vmx_restore_host_msrs(273,7729
static void vmx_save_guest_msrs(286,8060
static void vmx_restore_guest_msrs(295,8320
void vmx_save_host_msrs(335,9497
#define vmx_restore_host_msrs(336,9530
#define vmx_save_guest_msrs(338,9577
#define vmx_restore_guest_msrs(339,9623
long_mode_do_msr_read(342,9697
long_mode_do_msr_write(348,9819
void vmx_update_cpu_exec_control(355,9937
static void vmx_update_secondary_exec_control(360,10063
void vmx_update_exception_bitmap(366,10226
static int vmx_guest_x86_mode(371,10347
static void vmx_save_dr(386,10824
static void __restore_debug_registers(405,11558
static void vmx_restore_dr(426,12318
static void vmx_vmcs_save(433,12555
static int vmx_restore_cr0_cr3(462,13360
static int vmx_vmcs_restore(493,14193
static void vmx_save_cpu_state(548,15633
static void vmx_load_cpu_state(567,16265
static void vmx_save_vmcs_ctxt(586,16856
static int vmx_load_vmcs_ctxt(592,16994
static void vmx_fpu_enter(606,17285
static void vmx_fpu_leave(615,17547
static void vmx_ctxt_switch_from(641,18431
static void vmx_ctxt_switch_to(650,18602
#define rm_cs_attr 680,19676
#define rm_ds_attr 683,19890
#define vm86_ds_attr 686,20104
#define vm86_tr_attr 689,20318
static void vmx_get_segment_register(693,20533
static void vmx_set_segment_register(798,24317
static void vmx_set_tsc_offset(924,28316
static void vmx_set_rdtsc_exiting(934,28536
static void vmx_init_hypercall_page(944,28832
static unsigned int vmx_get_interrupt_shadow(964,29409
static void vmx_set_interrupt_shadow(969,29525
static void vmx_load_pdptrs(974,29666
static void vmx_update_host_cr3(1025,31045
void vmx_update_debug_state(1032,31181
static void vmx_update_guest_cr(1049,31575
static void vmx_update_guest_efer(1173,36147
static void __ept_sync_domain(1195,36697
void ept_sync_domain(1201,36830
static void __vmx_inject_exception(1223,37637
void vmx_inject_hw_exception(1250,38677
void vmx_inject_extint(1291,39887
void vmx_inject_nmi(1297,40037
static void vmx_inject_exception(1303,40172
static int vmx_event_pending(1312,40402
static int vmx_do_pmu_interrupt(1318,40544
static void vmx_set_uc_mode(1323,40645
static void vmx_set_info_guest(1331,40872
static struct hvm_function_table __read_mostly vmx_function_table 1359,41780
struct hvm_function_table * __init start_vmx(1395,43462
static int get_instruction_length(1431,44311
static void update_guest_eip(1439,44495
static void vmx_fpu_dirty_intercept(1458,45068
#define bitmaskof(1472,45435
static void vmx_cpuid_intercept(1473,45480
static void vmx_do_cpuid(1499,46163
static void vmx_dr_access(1516,46478
static void vmx_invlpg_intercept(1531,46889
#define CASE_SET_REG(1539,47147
#define CASE_GET_REG(1541,47255
#define CASE_EXTEND_SET_REG 1544,47364
#define CASE_EXTEND_GET_REG 1546,47425
#define CASE_EXTEND_REG(1550,47503
#define CASE_EXTEND_REG(1552,47536
static int mov_to_cr(1563,47883
static void mov_from_cr(1619,49073
static int vmx_cr_access(1661,50116
static const struct lbr_info 1697,51337
    u32 base,1698,51368
    u32 base, count;1698,51368
} p4_lbr[p4_lbr1699,51389
}, c2_lbr[c2_lbr1706,51678
}, pm_lbr[pm_lbr1714,51984
static const struct lbr_info *last_branch_msr_get(last_branch_msr_get1723,52208
static int is_last_branch_msr(1759,52880
static int vmx_msr_read_intercept(1773,53162
static int vmx_alloc_vlapic_mapping(1846,55229
static void vmx_free_vlapic_mapping(1865,55748
static void vmx_install_vlapic_mapping(1872,55936
void vmx_vlapic_msr_changed(1889,56410
static int vmx_msr_write_intercept(1907,56963
static void vmx_do_extint(1989,59311
static void wbinvd_ipi(2040,60547
static void vmx_wbinvd_intercept(2045,60601
static void ept_handle_violation(2059,60849
static void vmx_failed_vmentry(2109,62382
asmlinkage void vmx_enter_realmode(2142,63441
static void vmx_vmexit_ud_intercept(2153,63860
static int vmx_handle_eoi_write(2177,64430
asmlinkage void vmx_vmexit_handler(2196,64909
asmlinkage void vmx_vmenter_helper(2605,79415

xen/arch/x86/hvm/quirks.c,131
s8 __read_mostly hvm_port80_allowed 26,934
static int __init dmi_hvm_deny_port80(29,1026
static int __init check_port80(40,1333

xen/arch/x86/hvm/intercept.c,298
#define HVM_MMIO_HANDLER_NR 40,1381
hvm_mmio_handlers[hvm_mmio_handlers43,1456
static int hvm_mmio_access(51,1606
int hvm_mmio_intercept(123,3588
static int process_portio_intercept(138,3979
int hvm_io_intercept(195,5391
void register_io_handler(229,6324
void relocate_io_handler(244,6737

xen/arch/x86/hvm/emulate.c,1387
static void hvmtrace_io_assist(24,547
static int hvmemul_do_io(51,1172
int hvmemul_do_pio(228,6532
static int hvmemul_do_mmio(235,6737
static int hvmemul_linear_to_phys(248,7242
static int hvmemul_virtual_to_linear(329,9903
static int __hvmemul_read(393,11924
static int hvmemul_read(457,13942
static int hvmemul_insn_fetch(469,14241
static int hvmemul_write(491,14965
static int hvmemul_cmpxchg(551,16791
static int hvmemul_rep_ins(563,17103
static int hvmemul_rep_outs(596,18102
static int hvmemul_rep_movs(629,19082
static int hvmemul_read_segment(733,22504
static int hvmemul_write_segment(745,22897
static int hvmemul_read_io(760,23343
static int hvmemul_write_io(771,23594
static int hvmemul_read_cr(781,23833
static int hvmemul_write_cr(802,24230
static int hvmemul_read_msr(826,24719
static int hvmemul_write_msr(834,24875
static int hvmemul_wbinvd(842,25032
static int hvmemul_cpuid(849,25158
static int hvmemul_inject_hw_exception(860,25392
static int hvmemul_inject_sw_interrupt(876,25803
static int hvmemul_get_fpu(892,26211
static void hvmemul_put_fpu(921,26925
static int hvmemul_invlpg(928,27082
static const struct x86_emulate_ops hvm_emulate_ops 947,27546
int hvm_emulate_one(972,28489
void hvm_emulate_prepare(1048,30913
void hvm_emulate_writeback(1061,31351
struct segment_register *hvmemul_get_seg_reg(hvmemul_get_seg_reg1078,31871

xen/arch/x86/hvm/vlapic.c,2453
#define VLAPIC_VERSION 43,1331
#define VLAPIC_LVT_NUM 44,1382
#define APIC_BUS_CYCLE_NS 47,1461
#define LVT_MASK 49,1505
#define LINT_MASK 52,1584
static unsigned int vlapic_lvt_mask[vlapic_lvt_mask56,1711
#define APIC_SHORT_MASK 71,2044
#define APIC_DEST_NOSHORT 72,2093
#define APIC_DEST_MASK 73,2138
#define vlapic_lvt_vector(75,2186
#define vlapic_lvt_dm(78,2311
#define vlapic_lvtt_period(81,2434
#define vlapic_lvtt_oneshot(85,2601
#define vlapic_lvtt_tdt(89,2767
#define VEC_POS(98,3003
#define REG_POS(99,3031
#define vlapic_test_and_set_vector(100,3068
#define vlapic_test_and_clear_vector(103,3281
#define vlapic_set_vector(106,3496
#define vlapic_clear_vector(108,3640
static int vlapic_find_highest_vector(111,3787
static int vlapic_test_and_set_irr(128,4200
static void vlapic_clear_irr(133,4353
static int vlapic_find_highest_irr(138,4486
int vlapic_set_irq(143,4619
static int vlapic_find_highest_isr(155,4927
static uint32_t vlapic_get_ppr(160,5060
static int vlapic_match_logical_addr(181,5556
bool_t vlapic_match_dest(214,6423
static void vlapic_init_sipi_action(246,7249
static int vlapic_schedule_init_sipi_tasklet(284,8237
static int vlapic_accept_irq(304,8792
struct vlapic *vlapic_lowest_prio(vlapic_lowest_prio360,10320
void vlapic_EOI_set(391,11238
int vlapic_ipi(407,11707
static uint32_t vlapic_get_tmcct(444,12807
static void vlapic_set_tdcr(469,13547
static void vlapic_read_aligned(483,13990
static int vlapic_read(513,14703
int hvm_x2apic_msr_read(568,16155
static void vlapic_pt_cb(584,16615
static void vlapic_tdt_pt_cb(589,16720
static int vlapic_reg_write(595,16865
static int vlapic_write(758,21906
int hvm_x2apic_msr_write(820,23704
static int vlapic_range(839,24249
const struct hvm_mmio_handler vlapic_mmio_handler 846,24488
void vlapic_msr_set(852,24648
uint64_t  vlapic_tdt_msr_get(884,25577
void vlapic_tdt_msr_set(892,25720
static int __vlapic_accept_pic_intr(951,27649
int vlapic_accept_pic_intr(970,28476
void vlapic_adjust_i8259_target(976,28628
int vlapic_has_pending_irq(993,28987
int vlapic_ack_pending_irq(1013,29389
bool_t is_vlapic_lvtpc_enabled(1023,29609
void vlapic_reset(1030,29833
static void lapic_rearm(1064,30918
static int lapic_save_hidden(1091,31737
static int lapic_save_regs(1107,32047
static int lapic_load_hidden(1123,32361
static int lapic_load_regs(1146,32918
int vlapic_init(1174,33727
void vlapic_destroy(1224,35175

xen/arch/x86/hvm/i8254.c,1009
#define domain_vpit(41,1574
#define vcpu_vpit(42,1634
#define vpit_domain(43,1684
#define vpit_vcpu(45,1811
#define RW_STATE_LSB 47,1875
#define RW_STATE_MSB 48,1898
#define RW_STATE_WORD0 49,1921
#define RW_STATE_WORD1 50,1946
#define get_guest_time(57,2149
static int pit_get_count(60,2242
static int pit_get_out(91,2952
static void pit_set_gate(127,3704
static int pit_get_gate(154,4270
static void pit_time_fired(160,4410
static void pit_load_count(166,4550
static void pit_latch_count(207,5626
static void pit_latch_status(220,5928
static void pit_ioport_write(237,6380
static uint32_t pit_ioport_read(314,8415
void pit_stop_channel0_irq(379,9960
static int pit_save(386,10101
static int pit_load(400,10342
void pit_reset(429,11066
void pit_init(451,11499
void pit_deinit(463,11788
static int handle_pit_io(470,11975
static void speaker_ioport_write(496,12519
static uint32_t speaker_ioport_read(503,12694
static int handle_speaker_io(512,13048
int pv_pit_handler(531,13437

xen/arch/x86/hvm/svm/svm.c,2940
u32 svm_feature_flags;60,1823
bool_t cpu_has_lmsl;63,1898
#define set_segment_register(65,1920
static struct hvm_function_table svm_function_table;68,2032
static bool_t amd_erratum383_found __read_mostly;76,2270
static void inline __update_guest_eip(78,2321
static void svm_cpu_down(104,2949
static void svm_save_dr(109,3027
static void __restore_debug_registers(128,3694
static void svm_restore_dr(152,4566
static int svm_vmcb_save(158,4725
static int svm_vmcb_restore(184,5555
static void svm_save_cpu_state(257,7803
static void svm_load_cpu_state(273,8283
static void svm_save_vmcb_ctxt(288,8738
static int svm_load_vmcb_ctxt(294,8876
static void svm_fpu_enter(306,9146
static void svm_fpu_leave(315,9378
static unsigned int svm_get_interrupt_shadow(337,10130
static void svm_set_interrupt_shadow(351,10529
static int svm_guest_x86_mode(365,11050
static void svm_update_host_cr3(378,11466
static void svm_update_guest_cr(383,11579
static void svm_update_guest_efer(426,12706
static void svm_sync_vmcb(446,13380
static void svm_get_segment_register(458,13601
static void svm_set_segment_register(519,15394
static void svm_set_tsc_offset(595,17204
static void svm_set_rdtsc_exiting(601,17360
static void svm_init_hypercall_page(613,17741
static void svm_ctxt_switch_from(633,18319
static void svm_ctxt_switch_to(653,18803
static void svm_do_resume(689,19841
static int svm_domain_initialise(723,20949
static void svm_domain_destroy(728,21019
static int svm_vcpu_initialise(732,21073
static void svm_vcpu_destroy(754,21569
static void svm_inject_exception(761,21696
static int svm_event_pending(814,23135
static int svm_do_pmu_interrupt(820,23274
static void svm_cpu_dead(825,23375
static int svm_cpu_up_prepare(833,23571
static void svm_init_erratum_383(847,23923
static int svm_cpu_up(865,24429
struct hvm_function_table * __init start_svm(918,25798
#define P(938,26269
#undef P944,26611
static void svm_do_nested_pgfault(957,26950
static void svm_fpu_dirty_intercept(992,27801
#define bitmaskof(1003,28085
static void svm_cpuid_intercept(1004,28130
static void svm_vmexit_do_cpuid(1023,28597
static void svm_dr_access(1045,29063
static int svm_msr_read_intercept(1051,29199
static int svm_msr_write_intercept(1141,31612
static void svm_do_msr_access(1223,33974
static void svm_vmexit_do_hlt(1250,34788
static void svm_vmexit_do_rdtsc(1262,35093
static void svm_vmexit_do_pause(1273,35350
static void svm_vmexit_ud_intercept(1289,35792
static int svm_is_erratum_383(1315,36414
static void svm_vmexit_mce_intercept(1344,37130
static void wbinvd_ipi(1354,37362
static void svm_wbinvd_intercept(1359,37416
static void svm_vmexit_do_invalidate_cache(1365,37545
static void svm_invlpg_intercept(1380,37910
static struct hvm_function_table __read_mostly svm_function_table 1388,38124
asmlinkage void svm_vmexit_handler(1422,39713
asmlinkage void svm_trace_vmentry(1714,48974

xen/arch/x86/hvm/svm/emulate.c,320
#define MAX_INST_LEN 30,1022
static unsigned int is_prefix(32,1047
static unsigned long svm_rip2pointer(55,1381
static unsigned long svm_nextrip_insn_length(64,1682
#define MAKE_INSTR(93,2463
static const u8 *opc_bytes[opc_bytes106,2919
static int fetch(121,3356
int __get_instruction_length_from_list(144,4067

xen/arch/x86/hvm/svm/vmcb.c,520
#define IOPM_SIZE 43,1303
#define MSRPM_SIZE 44,1335
struct vmcb_struct *alloc_vmcb(alloc_vmcb46,1368
void free_vmcb(61,1642
struct host_save_area *alloc_host_save_area(alloc_host_save_area66,1717
void svm_intercept_msr(81,2000
static int construct_vmcb(113,2909
int svm_create_vmcb(269,7975
void svm_destroy_vmcb(293,8469
static void svm_dump_sel(310,8839
void svm_dump_vmcb(318,9154
static void vmcb_dump(382,12366
static struct keyhandler vmcb_dump_keyhandler 408,12963
void setup_vmcb_dump(414,13092

xen/arch/x86/hvm/svm/intr.c,157
static void svm_inject_nmi(42,1317
static void svm_inject_extint(64,1963
static void enable_intr_window(78,2304
asmlinkage void svm_intr_assist(119,3826

xen/arch/x86/hvm/svm/vpmu.c,992
#define NUM_COUNTERS 39,1275
#define MSR_F10H_EVNTSEL_GO_SHIFT 41,1299
#define MSR_F10H_EVNTSEL_EN_SHIFT 42,1338
#define MSR_F10H_COUNTER_LENGTH 43,1377
#define is_guest_mode(45,1417
#define is_pmu_enabled(46,1490
#define set_guest_mode(47,1564
#define is_overflowed(48,1637
u32 AMD_F10H_COUNTERS[AMD_F10H_COUNTERS51,1740
u32 AMD_F10H_CTRLS[AMD_F10H_CTRLS59,1879
struct amd_vpmu_context 67,2027
    u64 counters[counters68,2053
    u64 ctrls[ctrls69,2085
    u32 hw_lapic_lvtpc;70,2114
static inline int get_pmu_reg_type(73,2142
static int amd_vpmu_do_interrupt(86,2437
static inline void context_restore(107,2979
static void amd_vpmu_restore(131,3696
static inline void context_save(144,4030
static void amd_vpmu_save(157,4382
static void context_update(171,4776
static int amd_vpmu_do_wrmsr(189,5285
static int amd_vpmu_do_rdmsr(228,6499
static void amd_vpmu_initialise(234,6619
static void amd_vpmu_destroy(257,7241
struct arch_vpmu_ops amd_vpmu_ops 274,7608

xen/arch/x86/hvm/svm/entry.S,190
.Lsvm_trace_done:.Lsvm_trace_done71,2191
.globl 163,4306
svm_stgi_label:svm_stgi_label164,4328
.Lsvm_process_softirqs:.Lsvm_process_softirqs168,4419
.Lsvm_trace:.Lsvm_trace173,4512

xen/arch/x86/hvm/svm/asid.c,74
void svm_asid_init(26,899
asmlinkage void svm_asid_handle_vmrun(41,1302

xen/arch/x86/hvm/hpet.c,2575
#define domain_vhpet(27,961
#define vcpu_vhpet(28,1023
#define vhpet_domain(29,1075
#define vhpet_vcpu(31,1205
#define HPET_BASE_ADDRESS 33,1271
#define HPET_MMAP_SIZE 34,1313
#define S_TO_NS 35,1346
#define S_TO_FS 36,1408
#define STIME_PER_HPET_TICK 39,1532
#define guest_time_hpet(40,1563
#define HPET_ID 43,1661
#define HPET_PERIOD 44,1691
#define HPET_CFG 45,1721
#define HPET_STATUS 46,1751
#define HPET_COUNTER 47,1781
#define HPET_T0_CFG 48,1811
#define HPET_T0_CMP 49,1841
#define HPET_T0_ROUTE 50,1871
#define HPET_T1_CFG 51,1901
#define HPET_T1_CMP 52,1931
#define HPET_T1_ROUTE 53,1961
#define HPET_T2_CFG 54,1991
#define HPET_T2_CMP 55,2021
#define HPET_T2_ROUTE 56,2051
#define HPET_T3_CFG 57,2081
#define HPET_CFG_ENABLE 59,2112
#define HPET_CFG_LEGACY 60,2151
#define HPET_TN_INT_TYPE_LEVEL 62,2191
#define HPET_TN_ENABLE 63,2230
#define HPET_TN_PERIODIC 64,2269
#define HPET_TN_PERIODIC_CAP 65,2308
#define HPET_TN_SIZE_CAP 66,2347
#define HPET_TN_SETVAL 67,2386
#define HPET_TN_32BIT 68,2425
#define HPET_TN_INT_ROUTE_MASK 69,2464
#define HPET_TN_INT_ROUTE_SHIFT 70,2503
#define HPET_TN_INT_ROUTE_CAP_SHIFT 71,2542
#define HPET_TN_CFG_BITS_READONLY_OR_RESERVED 72,2581
#define HPET_TN_INT_ROUTE_CAP 75,2693
#define HPET_TN_INT_ROUTE_CAP_MASK 78,2799
#define hpet_tick_to_ns(81,2904
#define timer_config(85,3077
#define timer_enabled(86,3137
#define timer_is_periodic(87,3208
#define timer_is_32bit(88,3281
#define hpet_enabled(89,3351
#define timer_level(90,3419
#define timer_int_route(92,3499
#define timer_int_route_cap(95,3613
static inline uint64_t hpet_read_maincounter(99,3749
static uint64_t hpet_get_comparator(109,3968
static inline uint64_t hpet_read64(133,4714
static inline int hpet_check_access_length(164,5468
static int hpet_read(182,6014
static void hpet_stop_timer(213,6602
#define  HPET_TINY_TIME_SPAN 225,7016
static void hpet_set_timer(227,7093
static inline uint64_t hpet_fixup_reg(288,9254
static int hpet_write(296,9402
#define set_stop_timer(307,9744
#define set_start_timer(308,9804
#define set_restart_timer(309,9865
#undef set_stop_timer471,15559
#undef set_start_timer472,15581
#undef set_restart_timer473,15604
static int hpet_range(481,15692
const struct hvm_mmio_handler hpet_mmio_handler 488,15931
static int hpet_save(495,16085
#define C(512,16638
#undef C526,16977
static int hpet_load(539,17348
#define C(558,17808
#define HPET_TIMER_NUM 565,18057
#undef C579,18527
void hpet_init(598,18978
void hpet_deinit(628,19871
void hpet_reset(643,20165

xen/arch/x86/hvm/vpmu.c,245
static bool_t __read_mostly opt_vpmu_enabled;36,1154
int vpmu_do_wrmsr(39,1242
int vpmu_do_rdmsr(48,1466
int vpmu_do_interrupt(57,1691
void vpmu_save(66,1899
void vpmu_load(74,2060
void vpmu_initialise(85,2308
void vpmu_destroy(148,3889

xen/arch/x86/hvm/stdvga.c,844
#define VGA_MEM_BASE 38,1265
#define VGA_MEM_SIZE 39,1294
#define PAT(41,1324
static const uint32_t mask16[mask1642,1343
const uint8_t sr_mask[sr_mask62,1750
const uint8_t gr_mask[gr_mask73,1943
static uint8_t *vram_getb(vram_getb85,2255
static uint32_t *vram_getl(vram_getl92,2452
static void vram_put(99,2651
static int stdvga_outb(104,2737
static void stdvga_out(157,4189
static int stdvga_intercept_pio(175,4493
static unsigned int stdvga_mem_offset(190,4872
#define GET_PLANE(224,5553
static uint8_t stdvga_mem_readb(226,5612
static uint64_t stdvga_mem_read(278,6867
static void stdvga_mem_writeb(319,8020
static void stdvga_mem_write(427,10799
static uint32_t read_data;465,11991
static int mmio_move(467,12019
static int stdvga_intercept_mmio(545,14543
void stdvga_init(590,15711
void stdvga_deinit(623,16607

xen/arch/x86/hvm/mtrr.c,1437
static uint32_t size_or_mask;33,1040
#define pat_cr_2_paf(36,1123
static uint8_t pat_entry_2_pte_flags[pat_entry_2_pte_flags39,1249
static uint8_t mm_type_tbl[mm_type_tbl46,1531
static uint8_t mtrr_epat_tbl[mtrr_epat_tbl69,2381
static uint8_t pat_entry_tbl[pat_entry_tbl72,2513
static void get_mtrr_range(74,2559
bool_t is_var_mtrr_overlapped(101,3380
#define MTRR_PHYSMASK_VALID_BIT 138,4598
#define MTRR_PHYSMASK_SHIFT 139,4634
#define MTRR_PHYSBASE_TYPE_MASK 141,4671
#define MTRR_PHYSBASE_SHIFT 142,4731
#define MTRR_VCNT 143,4767
#define MTRRphysBase_MSR(145,4803
#define MTRRphysMask_MSR(146,4853
static int hvm_mtrr_pat_init(148,4908
uint8_t pat_type_2_pte_flags(187,5904
int hvm_vcpu_cacheattr_init(201,6344
void hvm_vcpu_cacheattr_destroy(227,7314
static uint8_t get_mtrr_type(235,7468
static uint8_t page_pat_type(324,10185
static uint8_t effective_mm_type(340,10563
uint32_t get_pat_flags(363,11214
bool_t pat_msr_set(410,13097
bool_t mtrr_def_type_msr_set(429,13553
bool_t mtrr_fix_range_msr_set(454,14227
bool_t mtrr_var_range_msr_set(478,14840
bool_t mtrr_pat_not_equal(517,15982
void hvm_init_cacheattr_region_list(548,16812
void hvm_destroy_cacheattr_region_list(554,16941
int32_t hvm_get_mem_pinned_cacheattr(570,17370
int32_t hvm_set_mem_pinned_cacheattr(596,17914
static int hvm_save_mtrr_msr(628,18722
static int hvm_load_mtrr_msr(665,19806
uint8_t epte_get_entry_emt(707,21028

xen/arch/x86/hvm/save.c,55
void arch_hvm_save(27,1046
int arch_hvm_load(39,1318

xen/arch/x86/hvm/vpt.c,831
#define mode_is(26,885
void hvm_init_guest_time(29,986
u64 hvm_get_guest_time(38,1200
void hvm_set_guest_time(57,1715
static int pt_irq_vector(62,1849
static int pt_irq_masked(81,2357
static void pt_lock(102,2985
static void pt_unlock(116,3257
static void pt_process_missed_ticks(121,3361
static void pt_freeze_time(140,3871
static void pt_thaw_time(148,4048
void pt_save_timer(160,4320
void pt_restore_timer(179,4740
static void pt_timer_fn(200,5186
void pt_update_irq(215,5416
static struct periodic_time *is_pt_irq(is_pt_irq268,6678
void pt_intr_post(284,7073
void pt_migrate(343,8516
void create_periodic_time(356,8820
void destroy_periodic_time(416,10527
static void pt_adjust_vcpu(436,11040
void pt_adjust_global_vcpu_target(464,11618
static void pt_resume(489,12209
void pt_may_unmask_irq(504,12519

xen/arch/x86/hvm/rtc.c,812
#define domain_vrtc(31,1295
#define vcpu_vrtc(32,1355
#define vrtc_domain(33,1405
#define vrtc_vcpu(35,1532
static void rtc_periodic_cb(37,1596
static void rtc_timer_update(47,1880
static int rtc_ioport_write(73,2608
static inline int to_bcd(144,4331
static inline int from_bcd(152,4496
static void rtc_set_time(160,4665
static void rtc_copy_date(193,5986
static int get_days_in_month(220,6857
static void rtc_next_second(236,7267
static void rtc_update_second(281,8507
static void rtc_update_second2(320,9772
static uint32_t rtc_ioport_read(366,11201
static int handle_rtc_io(404,12007
void rtc_migrate_timers(429,12577
static int rtc_save(441,12835
static int rtc_load(452,13112
void rtc_reset(483,13919
void rtc_init(491,14057
void rtc_deinit(522,14850
void rtc_update_clock(533,15057

xen/arch/x86/hvm/viridian.c,1422
#define VIRIDIAN_MSR_GUEST_OS_ID 20,469
#define VIRIDIAN_MSR_HYPERCALL 21,513
#define VIRIDIAN_MSR_VP_INDEX 22,557
#define VIRIDIAN_MSR_EOI 23,601
#define VIRIDIAN_MSR_ICR 24,645
#define VIRIDIAN_MSR_TPR 25,689
#define VIRIDIAN_MSR_APIC_ASSIST 26,733
#define HV_STATUS_SUCCESS 29,817
#define HV_STATUS_INVALID_HYPERCALL_CODE 30,872
#define HvNotifyLongSpinWait 33,975
#define CPUID3A_MSR_APIC_ACCESS 36,1067
#define CPUID3A_MSR_HYPERCALL 37,1108
#define CPUID3A_MSR_VP_INDEX 38,1149
#define CPUID4A_MSR_BASED_APIC 41,1253
#define CPUID4A_RELAX_TIMER_INT 42,1294
int cpuid_viridian_leaves(44,1336
static void enable_hypercall_page(99,2962
int wrmsr_viridian_regs(133,4028
int rdmsr_viridian_regs(228,7698
int viridian_hypercall(270,8716
    union hypercall_input 276,8910
        uint64_t raw;277,8938
            uint16_t call_code;279,8977
            uint16_t rsvd1;280,9009
            unsigned rep_count:rep_count281,9037
            unsigned rsvd2:rsvd2282,9072
            unsigned rep_start:rep_start283,9102
            unsigned rsvd3:rsvd3284,9137
    union hypercall_output 288,9192
        uint64_t raw;289,9221
            uint16_t result;291,9260
            uint16_t rsvd1;292,9289
            unsigned rep_complete:rep_complete293,9317
            unsigned rsvd2:rsvd2294,9355
static int viridian_save_cpu_ctxt(347,10487
static int viridian_load_cpu_ctxt(360,10861

xen/arch/x86/hvm/vmsi.c,1050
static void vmsi_inj_irq(44,1423
int vmsi_deliver(68,2035
int hvm_girq_dest_2_vcpu_id(129,4000
struct msixtbl_entry152,4490
    struct list_head list;154,4513
    atomic_t refcnt;155,4540
    struct pci_dev *pdev;pdev158,4680
    unsigned long gtable;159,4706
    unsigned long table_len;160,4762
    unsigned long table_flags[table_flags161,4791
#define MAX_MSIX_ACC_ENTRIES 162,4866
        uint32_t msi_ad[msi_ad164,4911
    } gentries[gentries165,4982
    struct rcu_head rcu;166,5020
static struct msixtbl_entry *msixtbl_find_entry(msixtbl_find_entry171,5097
static void __iomem *msixtbl_addr_to_virt(msixtbl_addr_to_virt185,5469
static int msixtbl_read(207,5944
static int msixtbl_write(250,6961
static int msixtbl_range(295,8106
const struct hvm_mmio_handler msixtbl_mmio_handler 310,8409
static void add_msixtbl_entry(316,8573
static void free_msixtbl_entry(337,9164
static void del_msixtbl_entry(346,9334
int msixtbl_pt_register(352,9477
void msixtbl_pt_unregister(407,10761
void msixtbl_pt_cleanup(450,11735

xen/arch/x86/hvm/vioapic.c,701
#define IRQ0_SPECIAL_ROUTING 45,1469
static unsigned long vioapic_read_indirect(49,1572
static int vioapic_read(92,2718
static void vioapic_write_redirent(122,3309
static void vioapic_write_indirect(172,4633
static int vioapic_write(211,5562
static int vioapic_range(242,6141
const struct hvm_mmio_handler vioapic_mmio_handler 250,6386
static void ioapic_inj_irq(256,6550
static inline int pit_channel0_enabled(273,7015
static void vioapic_deliver(279,7166
void vioapic_irq_positive_edge(363,9835
void vioapic_update_EOI(388,10458
static int ioapic_save(424,11420
static int ioapic_load(430,11585
void vioapic_reset(438,11827
int vioapic_init(449,12196
void vioapic_deinit(461,12471

xen/arch/x86/hvm/irq.c,898
static void assert_irq(31,1085
static void deassert_irq(44,1454
static void __hvm_pci_intx_assert(50,1624
void hvm_pci_intx_assert(72,2341
static void __hvm_pci_intx_deassert(80,2570
void hvm_pci_intx_deassert(101,3231
void hvm_isa_irq_assert(109,3464
void hvm_isa_irq_deassert(126,3918
static void hvm_set_callback_irq_level(143,4372
void hvm_maybe_deassert_evtchn_irq(191,5834
void hvm_assert_evtchn_irq(201,6124
void hvm_set_pci_link_route(215,6458
void hvm_set_callback_via(261,7781
struct hvm_intack hvm_vcpu_has_pending_irq(342,10359
struct hvm_intack hvm_vcpu_ack_pending_irq(367,11050
int hvm_local_events_need_delivery(402,11917
static void irq_dump(413,12182
static int irq_save_pci(445,13646
static int irq_save_isa(477,14573
static int irq_save_link(485,14795
static int irq_load_pci(493,15025
static int irq_load_isa(526,16118
static int irq_load_link(545,16691

xen/arch/x86/hvm/asid.c,314
struct hvm_asid_data 50,2054
   u64 core_asid_generation;51,2077
   u32 next_asid;52,2106
   u32 max_asid;53,2124
   bool_t disabled;54,2141
   bool_t initialised;55,2161
void hvm_asid_init(60,2249
void hvm_asid_flush_vcpu(90,3165
void hvm_asid_flush_core(95,3253
bool_t hvm_asid_handle_vmenter(117,3791

xen/arch/x86/machine_kexec.c,270
typedef void (*relocate_new_kernel_t)relocate_new_kernel_t23,522
int machine_kexec_load(35,872
void machine_kexec_unload(80,2264
void machine_reboot_kexec(84,2341
void machine_kexec(92,2493
int machine_kexec_get(136,3918
void arch_crash_save_vmcoreinfo(143,4068

xen/arch/x86/smp.c,1325
int hard_smp_processor_id(25,553
int logical_smp_processor_id(30,616
void send_IPI_mask(40,823
static inline int __prepare_ICR 87,2241
static inline int __prepare_ICR2 92,2360
void apic_wait_icr_idle(97,2457
static void __default_send_IPI_shortcut(106,2608
void send_IPI_self_flat(126,3040
void send_IPI_self_phys(131,3158
void send_IPI_self_x2apic(136,3276
void send_IPI_mask_flat(141,3362
void send_IPI_mask_phys(178,4103
static cpumask_t flush_cpumask;216,4956
static const void *flush_va;flush_va217,4988
static unsigned int flush_flags;218,5017
fastcall void smp_invalidate_interrupt(220,5051
void flush_area_mask(232,5373
void new_tlbflush_clock_period(254,6102
void smp_send_event_check_mask(268,6486
static struct call_data_struct 279,6748
    void (*func)func280,6781
    void *info;info281,6812
    int wait;282,6828
    atomic_t started;283,6842
    atomic_t finished;284,6864
    cpumask_t selected;285,6887
} call_data;286,6911
void smp_call_function(288,6925
void on_selected_cpus(298,7158
void __stop_this_cpu(339,8048
static void stop_this_cpu(355,8321
void smp_send_stop(367,8577
void smp_send_nmi_allbutself(383,8904
fastcall void smp_event_check_interrupt(388,8993
static void __smp_call_function_interrupt(396,9193
fastcall void smp_call_function_interrupt(422,9655

xen/arch/x86/irq.c,3598
bool_t __read_mostly opt_noirqbalance 28,716
unsigned int __read_mostly nr_irqs_gsi 31,809
unsigned int __read_mostly nr_irqs;32,854
u8 __read_mostly *irq_vector;irq_vector35,926
struct irq_desc __read_mostly *irq_desc irq_desc36,956
int __read_mostly *irq_status irq_status38,1005
#define IRQ_UNUSED 39,1043
#define IRQ_USED 40,1071
#define IRQ_RSVD 41,1099
#define IRQ_VECTOR_UNASSIGNED 43,1128
struct irq_cfg __read_mostly *irq_cfg irq_cfg47,1213
static struct timer irq_ratelimit_timer;57,1476
static unsigned int __read_mostly irq_ratelimit_threshold 60,1596
void lock_vector_lock(64,1760
void unlock_vector_lock(72,1917
static int __init __bind_irq_vector(77,1983
int __init bind_irq_vector(103,2755
static inline int find_unassigned_irq(114,3028
int create_irq(127,3284
static void dynamic_irq_cleanup(147,3658
static void __clear_irq_vector(173,4354
void clear_irq_vector(206,5199
void destroy_irq(215,5383
int irq_to_vector(222,5507
static void init_one_irq_desc(240,5840
static void init_one_irq_status(252,6144
static void init_one_irq_cfg(257,6224
int init_irq_data(264,6386
void no_action(308,7726
static void enable_none(310,7797
static unsigned int startup_none(311,7846
static void disable_none(312,7914
static void ack_none(313,7964
#define shutdown_none 318,8030
#define end_none 319,8067
hw_irq_controller no_irq_type 321,8104
int __assign_irq_vector(331,8253
int assign_irq_vector(411,10724
void __setup_vector_irq(434,11292
void move_masked_irq(452,11763
void move_native_irq(482,12693
void irq_set_affinity(498,13060
void pirq_set_affinity(511,13374
asmlinkage void do_IRQ(524,13708
static void irq_ratelimit_timer_fn(619,16591
static int __init irq_ratelimit_init(638,17078
int request_irq(646,17282
void release_irq(680,18119
int setup_irq(703,18698
#define IRQ_MAX_GUESTS 733,19233
    u8 nr_guests;735,19275
    u8 in_flight;736,19293
    u8 shareable;737,19311
    u8 ack_type;738,19329
#define ACKTYPE_NONE 739,19346
#define ACKTYPE_UNMASK 740,19418
#define ACKTYPE_EOI 741,19490
    cpumask_t cpu_eoi_map;742,19562
    struct timer eoi_timer;743,19634
    struct domain *guest[guest744,19662
} irq_guest_action_t;745,19704
struct pending_eoi 751,19880
    u32 ready:ready752,19901
    u32 irq:irq753,19945
    u32 vector:vector754,19987
#define pending_eoi_sp(758,20111
bool_t cpu_has_pending_apic_eoi(760,20173
static inline void set_pirq_eoi(765,20273
static inline void clear_pirq_eoi(771,20422
static void _irq_guest_eoi(777,20575
static void irq_guest_eoi_timer_fn(795,21099
static void __do_IRQ_guest(845,22332
struct irq_desc *domain_spin_lock_irq_desc(domain_spin_lock_irq_desc929,25146
static void flush_ready_eoi(954,25779
static void __set_eoi_ready(977,26285
static void set_eoi_ready(1000,26929
static void __pirq_guest_eoi(1013,27154
int pirq_guest_eoi(1070,28550
int pirq_guest_unmask(1080,28716
static int pirq_acktype(1096,29100
int pirq_shared(1142,30489
int pirq_guest_bind(1161,30955
static irq_guest_action_t *__pirq_guest_unbind(__pirq_guest_unbind1273,34204
void pirq_guest_unbind(1367,37185
static int pirq_guest_force_unbind(1400,37920
int get_free_pirq(1443,38917
int map_domain_pirq(1477,39746
int unmap_domain_pirq(1559,42020
void free_domain_pirqs(1626,43625
static void dump_irqs(1643,43968
static struct keyhandler dump_irqs_keyhandler 1711,46121
static int __init setup_dump_irqs(1717,46257
void fixup_irqs(1725,46473
int map_domain_emuirq_pirq(1801,48453
int unmap_domain_pirq_emuirq(1838,49539
int hvm_domain_use_pirq(1867,50177

xen/arch/x86/microcode.c,445
const struct microcode_ops *microcode_ops;microcode_ops39,1207
struct microcode_info 45,1349
    unsigned int cpu;46,1373
    uint32_t buffer_size;47,1395
    int error;48,1421
    char buffer[buffer49,1436
static void __microcode_fini_cpu(52,1460
static void microcode_fini_cpu(60,1635
int microcode_resume_cpu(67,1779
static int microcode_update_cpu(98,2425
static long do_microcode_update(117,2899
int microcode_update(137,3391

xen/arch/x86/pci.c,59
uint32_t pci_conf_read(13,256
void pci_conf_write(45,827

xen/arch/x86/setup.c,2984
static bool_t __initdata opt_nosmp;53,1328
static unsigned int __initdata max_cpus 57,1451
static bool_t __initdata opt_watchdog;61,1606
s8 __read_mostly xen_cpuidle 83,2585
bool_t __read_mostly early_boot 86,2660
cpumask_t __read_mostly cpu_present_map;88,2698
unsigned long __read_mostly xen_phys_start;90,2740
unsigned long __initdata xenheap_initial_phys_start;94,2866
unsigned long __read_mostly xenheap_phys_end;95,2919
char __attribute__ ((__section__(".bss.stack_aligned"))) cpu0_stack[cpu0_stack100,3019
struct cpuinfo_x86 __read_mostly boot_cpu_data 102,3101
unsigned long __read_mostly mmu_cr4_features 104,3171
bool_t __initdata acpi_disabled;106,3260
bool_t __initdata acpi_force;107,3293
static char __initdata acpi_param[acpi_param108,3323
static void __init parse_acpi_param(109,3367
#define EARLY_FAIL(137,3946
static const module_t *__initdata initial_images;142,4109
static unsigned int __initdata nr_initial_images;143,4159
unsigned long __init initial_images_nrpages(145,4210
void __init discard_initial_images(156,4424
static void free_xen_data(172,4792
static void __init init_idle_domain(186,5131
void __devinit srat_detect_node(194,5294
static void __init normalise_cpu_order(215,6001
#define BOOTSTRAP_MAP_BASE 260,7387
#define BOOTSTRAP_MAP_LIMIT 261,7428
static void *__init bootstrap_map(267,7650
static void *__init move_memory(305,8687
static uint64_t __init consider_modules(352,9869
static void __init setup_max_pdx(384,10722
void set_pdx_range(399,11100
static struct e820map __initdata boot_e820;410,11463
struct boot_video_info 412,11508
    u8  orig_x;413,11533
    u8  orig_y;414,11572
    u8  orig_video_mode;415,11611
    u8  orig_video_cols;416,11650
    u8  orig_video_lines;417,11689
    u8  orig_video_isVGA;418,11728
    u16 orig_video_points;419,11767
    u32 capabilities;422,11858
    u16 lfb_linelength;423,11897
    u16 lfb_width;424,11936
    u16 lfb_height;425,11975
    u16 lfb_depth;426,12014
    u32 lfb_base;427,12053
    u32 lfb_size;428,12092
    u8  red_size;429,12131
    u8  red_pos;430,12170
    u8  green_size;431,12209
    u8  green_pos;432,12248
    u8  blue_size;433,12287
    u8  blue_pos;434,12326
    u8  rsvd_size;435,12365
    u8  rsvd_pos;436,12404
    u16 vesapm_seg;437,12443
    u16 vesapm_off;438,12482
    u16 vesa_attrib;439,12521
static void __init parse_video_info(442,12564
static void __init kexec_reserve_area(477,14304
void init_done(503,15107
static bool_t __init loader_is_grub2(513,15413
static char * __init cmdline_cook(520,15622
void __init __start_xen(541,16067
#define reloc_size 796,25035
void arch_get_xen_caps(1332,42473
int xen_in_range(1359,43228
    enum { region_s3,1364,43302
    enum { region_s3, region_text,1364,43302
    enum { region_s3, region_text, region_bss,1364,43302
    enum { region_s3, region_text, region_bss, nr_regions 1364,43302
        paddr_t s,1366,43383
        paddr_t s, e;1366,43383

xen/arch/x86/domain.c,2490
void (*pm_idle)pm_idle66,1534
static void continue_nonidle_domain(79,1902
static void default_idle(85,2030
static void default_dead_idle(94,2196
static void play_dead(100,2269
void idle_loop(109,2411
void startup_cpu_idle_loop(121,2606
void dump_pageframe_info(132,2864
struct domain *alloc_domain_struct(alloc_domain_struct169,3851
void free_domain_struct(187,4323
struct vcpu *alloc_vcpu_struct(alloc_vcpu_struct193,4492
void free_vcpu_struct(208,5025
static int setup_compat_l4(215,5148
static void release_compat_l4(250,6091
static inline int may_switch_mode(258,6328
int switch_native(263,6440
int switch_compat(285,6878
#define setup_compat_l4(320,7627
#define release_compat_l4(321,7656
int vcpu_initialise(324,7703
void vcpu_destroy(399,9628
int arch_domain_create(410,9815
void arch_domain_destroy(583,15175
unsigned long pv_guest_cr4_fixup(622,16165
int arch_set_info_guest(643,16917
#define c(656,17324
#define c(658,17384
#undef c854,23520
void arch_vcpu_reset(857,23532
unmap_vcpu_info(876,23923
map_vcpu_info(899,24502
arch_do_vcpu_op(958,26045
#define loadsegment(1064,28245
#define DIRTY_DS 1083,29030
#define DIRTY_ES 1084,29062
#define DIRTY_FS 1085,29094
#define DIRTY_GS 1086,29126
#define DIRTY_FS_BASE 1087,29158
#define DIRTY_GS_BASE_USER 1088,29190
static void load_segments(1090,29223
static void save_segments(1249,35444
#define switch_kernel_stack(1289,36527
#define load_segments(1293,36594
#define save_segments(1294,36629
static inline void switch_kernel_stack(1296,36665
static void paravirt_ctxt_switch_from(1305,36896
static void paravirt_ctxt_switch_to(1319,37355
static void update_runstate_area(1346,38289
static inline int need_full_gdt(1365,38727
static void __context_switch(1370,38830
void context_switch(1448,41238
void continue_running(1513,42823
int __sync_local_execstate(1519,42905
void sync_local_execstate(1539,43264
void sync_vcpu_execstate(1544,43337
#define next_arg(1553,43597
unsigned long hypercall_create_continuation(1565,44381
int hypercall_xlat_continuation(1647,46680
static int relinquish_memory(1737,49104
static void vcpu_destroy_pagetables(1849,52716
int domain_relinquish_resources(1906,54131
void arch_dump_domain_info(1989,56179
void arch_dump_vcpu_info(1994,56261
void domain_cpuid(1999,56337
void vcpu_kick(2039,57374
void vcpu_mark_events_pending(2056,57981
static void vcpu_kick_softirq(2070,58279
static int __init init_vcpu_kick_softirq(2079,58566

xen/arch/x86/time.c,5763
static char __initdata opt_clocksource[opt_clocksource40,1004
unsigned long cpu_khz;43,1095
unsigned long pit0_ticks;45,1180
static u32 wc_sec,46,1206
static u32 wc_sec, wc_nsec;46,1206
struct cpu_time 49,1306
    u64 local_tsc_stamp;50,1324
    s_time_t stime_local_stamp;51,1349
    s_time_t stime_master_stamp;52,1381
    struct time_scale tsc_scale;53,1414
struct platform_timesource 56,1451
    char *id;id57,1480
    char *name;name58,1494
    u64 frequency;59,1510
    u64 (*read_counter)read_counter60,1529
    int (*init)init61,1560
    void (*resume)resume62,1607
    int counter_bits;63,1657
#define EPOCH 69,1790
static struct timer calibration_timer;70,1820
static u16 pit_stamp16;80,2166
static u32 pit_stamp32;81,2190
static int using_pit;82,2214
static inline u32 div_frac(88,2343
static inline u32 mul_frac(103,2761
static inline u64 scale_delta(117,3122
#define _TS_MUL_FRAC_IDENTITY 149,3870
static inline struct time_scale scale_reciprocal(152,3968
static cpumask_t pit_broadcast_mask;178,4611
static void smp_send_timer_broadcast_ipi(180,4649
static void timer_interrupt(199,5019
static struct irqaction __read_mostly irq0 234,5850
#define CLOCK_TICK_RATE 240,6029
#define CALIBRATE_FRAC 241,6097
#define CALIBRATE_LATCH 242,6155
static u64 init_pit_and_calibrate_tsc(244,6234
#define LATCH 250,6364
static void set_time_scale(281,7362
static char *freq_string(freq_string306,7818
static u64 read_pit_count(320,8175
static int __init init_pit(339,8530
static struct platform_timesource __initdata plt_pit 345,8628
static u64 read_hpet_count(359,8962
static int __init init_hpet(364,9038
static void resume_hpet(375,9230
static struct platform_timesource __initdata plt_hpet 383,9387
int use_cyclone;397,9705
#define CYCLONE_CBAR_ADDR 404,9964
#define CYCLONE_PMCC_OFFSET 405,10003
#define CYCLONE_MPMC_OFFSET 406,10038
#define CYCLONE_MPCS_OFFSET 407,10073
#define CYCLONE_TIMER_FREQ 408,10108
static volatile u32 *cyclone_timer;cyclone_timer411,10177
static u64 read_cyclone_count(413,10214
static volatile u32 *__init map_cyclone_reg(418,10282
static int __init init_cyclone(426,10579
static struct platform_timesource __initdata plt_cyclone 448,11157
u32 pmtmr_ioport;462,11498
#define ACPI_PM_FREQUENCY 465,11560
static u64 read_pmtimer_count(467,11595
static int __init init_pmtimer(472,11666
static struct platform_timesource __initdata plt_pmtimer 480,11797
static struct time_scale pmt_scale;490,12034
static struct time_scale pmt_scale_r;491,12070
static __init int init_pmtmr_scale(492,12108
uint64_t acpi_pm_tick_to_ns(500,12296
uint64_t ns_to_acpi_pm_tick(505,12388
static struct platform_timesource plt_src;514,12584
static u64 plt_mask;515,12663
static u64 plt_overflow_period;516,12742
static struct time_scale plt_scale;517,12821
static s_time_t stime_platform_stamp;521,12986
static u64 platform_timer_stamp;522,13065
static u64 plt_stamp64;523,13144
static u64 plt_stamp;524,13223
static struct timer plt_overflow_timer;525,13302
static s_time_t __read_platform_stime(527,13343
static void plt_overflow(534,13575
static s_time_t read_platform_stime(569,14522
static void platform_time_calibration(584,14857
static void resume_platform_timer(598,15263
static void __init init_platform_timer(608,15512
u64 stime2tsc(664,16944
void cstate_restore_tsc(680,17315
mktime 708,18349
static unsigned long __get_cmos_time(726,18880
static unsigned long get_cmos_time(753,19533
s_time_t get_s_time(778,20274
uint64_t tsc_ticks2ns(791,20531
#define version_update_begin(799,20740
#define version_update_end(800,20784
static void __update_vcpu_system_time(802,20825
void update_vcpu_system_time(879,23120
void force_update_vcpu_system_time(884,23207
void update_domain_wallclock_time(889,23300
static void update_domain_rtc(908,23714
void domain_set_time_offset(921,23951
int cpu_frequency_change(928,24138
void do_settime(965,25258
struct cpu_calibration 986,25840
    u64 local_tsc_stamp;987,25865
    s_time_t stime_local_stamp;988,25890
    s_time_t stime_master_stamp;989,25922
static void local_time_calibration(994,26075
void check_tsc_warp(1157,31228
#define rdtsc_barrier(1159,31298
static unsigned long tsc_max_warp,1216,32829
static unsigned long tsc_max_warp, tsc_check_count;1216,32829
static cpumask_t tsc_check_cpumask 1217,32881
static void tsc_check_slave(1219,32934
void tsc_check_reliability(1230,33219
struct calibration_rendezvous 1255,33858
    cpumask_t cpu_calibration_map;1256,33890
    atomic_t semaphore;1257,33925
    s_time_t master_stime;1258,33949
    u64 master_tsc_stamp;1259,33976
static void time_calibration_tsc_rendezvous(1266,34106
static void time_calibration_std_rendezvous(1318,35606
static void time_calibration(1350,36574
void init_percpu_time(1363,36951
int __init init_xen_time(1388,37596
void __init early_time_init(1428,38831
static int disable_pit_irq(1443,39221
void pit_broadcast_enter(1482,40291
void pit_broadcast_exit(1487,40380
int pit_broadcast_is_available(1495,40556
void send_timer_event(1500,40622
unsigned long get_localtime(1506,40767
unsigned long get_sec(1512,40907
static long cmos_utc_offset;1518,41069
int time_suspend(1520,41116
int time_resume(1538,41580
int dom0_pit_access(1557,41862
struct tm wallclock_time(1601,43088
static void __init tsc_parse(1621,43501
u64 gtime_to_gtsc(1636,43896
u64 gtsc_to_gtime(1643,44085
void pv_soft_rdtsc(1652,44273
int host_tsc_is_safe(1681,44963
void cpuid_time_leaf(1686,45046
void tsc_get_info(1727,46285
void tsc_set_info(1786,48089
static void dump_softtsc(1845,50324
static struct keyhandler dump_softtsc_keyhandler 1895,52170
static int __init setup_dump_softtsc(1901,52307

xen/arch/x86/srat.c,1269
static struct acpi_table_slit *__read_mostly acpi_slit;23,609
static nodemask_t nodes_parsed __initdata;25,666
static nodemask_t nodes_found __initdata;26,709
static struct node nodes[MAX_NUMNODES] __initdata;27,751
static u8 __read_mostly pxm2node[pxm2node28,802
static int num_node_memblks;31,876
static struct node node_memblk_range[node_memblk_range32,905
static int memblk_nodeid[memblk_nodeid33,960
#define NODE_MIN_SIZE 37,1087
int pxm_to_node(41,1156
__devinit int setup_node(49,1292
int valid_numa_range(62,1569
static __init int conflicting_memblks(77,1823
static __init void cutoff_node(93,2178
static __init void bad_srat(108,2465
static __init int slit_valid(126,2982
void __init acpi_numa_slit_init(144,3318
void __init acpi_numa_slit_init(162,3796
acpi_numa_x2apic_affinity_init(169,3936
acpi_numa_processor_affinity_init(199,4623
acpi_numa_memory_affinity_init(230,5443
static int nodes_cover_memory(309,7469
void __init acpi_numa_arch_fixup(349,8218
static u64 __initdata srat_region_mask;353,8280
static u64 __init fill_mask(355,8321
static int __init srat_parse_region(362,8425
void __init srat_parse_regions(388,9070
int __init acpi_scan_nodes(416,9743
static int node_to_pxm(459,10643
int __node_distance(470,10866

xen/arch/x86/mm/shadow/private.h,6047
#define _XEN_SHADOW_PRIVATE_H25,1144
#define SHADOW_AUDIT_HASH 39,1506
#define SHADOW_AUDIT_HASH_FULL 40,1580
#define SHADOW_AUDIT_ENTRIES 41,1652
#define SHADOW_AUDIT_ENTRIES_FULL 42,1726
#define SHADOW_AUDIT_ENTRIES_MFNS 43,1793
#define SHADOW_AUDIT 46,1885
#define SHADOW_AUDIT_ENABLE 47,1926
#define SHADOW_AUDIT 49,1973
#define SHADOW_AUDIT_ENABLE 50,2040
#define SHOPT_WRITABLE_HEURISTIC 58,2247
#define SHOPT_EARLY_UNSHADOW 59,2326
#define SHOPT_FAST_FAULT_PATH 60,2401
#define SHOPT_PREFETCH 61,2478
#define SHOPT_LINUX_L3_TOPLEVEL 62,2558
#define SHOPT_SKIP_VERIFY 63,2634
#define SHOPT_VIRTUAL_TLB 64,2713
#define SHOPT_FAST_EMULATION 65,2789
#define SHOPT_OUT_OF_SYNC 66,2856
#define SHADOW_OPTIMIZATIONS 68,2932
#define SHADOW_PRINTK(75,3092
#define SHADOW_ERROR(77,3218
#define SHADOW_DEBUG(79,3339
#define SHADOW_DEBUG_PROPAGATE 86,3681
#define SHADOW_DEBUG_MAKE_SHADOW 87,3722
#define SHADOW_DEBUG_DESTROY_SHADOW 88,3763
#define SHADOW_DEBUG_A_AND_D 89,3804
#define SHADOW_DEBUG_EMULATE 90,3845
#define SHADOW_DEBUG_P2M 91,3886
#define SHADOW_DEBUG_LOGDIRTY 92,3927
#define TRACE_SHADOW_PATH_FLAG(99,4116
#define TRACE_CLEAR_PATH_FLAGS 104,4311
    TRCE_SFLAG_SET_AD,108,4411
    TRCE_SFLAG_SET_A,109,4434
    TRCE_SFLAG_SHADOW_L1_GET_REF,110,4456
    TRCE_SFLAG_SHADOW_L1_PUT_REF,111,4490
    TRCE_SFLAG_L2_PROPAGATE,112,4524
    TRCE_SFLAG_SET_CHANGED,113,4553
    TRCE_SFLAG_SET_FLUSH,114,4581
    TRCE_SFLAG_SET_ERROR,115,4607
    TRCE_SFLAG_DEMOTE,116,4633
    TRCE_SFLAG_PROMOTE,117,4656
    TRCE_SFLAG_WRMAP,118,4680
    TRCE_SFLAG_WRMAP_GUESS_FOUND,119,4702
    TRCE_SFLAG_WRMAP_BRUTE_FORCE,120,4736
    TRCE_SFLAG_EARLY_UNSHADOW,121,4770
    TRCE_SFLAG_EMULATION_2ND_PT_WRITTEN,122,4801
    TRCE_SFLAG_EMULATION_LAST_FAILED,123,4842
    TRCE_SFLAG_EMULATE_FULL_PT,124,4880
    TRCE_SFLAG_PREALLOC_UNHOOK,125,4912
    TRCE_SFLAG_UNSYNC,126,4944
    TRCE_SFLAG_OOS_FIXUP_ADD,127,4967
    TRCE_SFLAG_OOS_FIXUP_EVICT,128,4997
#define shadow_lock_init(150,5686
#define shadow_locked_by_me(157,6028
#define shadow_lock(160,6143
#define shadow_unlock(174,7120
# define GUEST_PTE_SIZE 185,7642
# define GUEST_PTE_SIZE 187,7674
#define shadow_audit_tables(197,7915
#define SHADOW_INTERNAL_NAME_HIDDEN(204,8160
#define SHADOW_INTERNAL_NAME(206,8255
#define GUEST_LEVELS 209,8366
#undef GUEST_LEVELS211,8409
#define GUEST_LEVELS 213,8430
#undef GUEST_LEVELS215,8473
#define GUEST_LEVELS 218,8524
#undef GUEST_LEVELS220,8567
#define SH_type_none 224,8651
#define SH_type_min_shadow 225,8717
#define SH_type_l1_32_shadow 226,8753
#define SH_type_fl1_32_shadow 227,8828
#define SH_type_l2_32_shadow 228,8903
#define SH_type_l1_pae_shadow 229,8978
#define SH_type_fl1_pae_shadow 230,9044
#define SH_type_l2_pae_shadow 231,9115
#define SH_type_l2h_pae_shadow 232,9185
#define SH_type_l1_64_shadow 233,9256
#define SH_type_fl1_64_shadow 234,9325
#define SH_type_l2_64_shadow 235,9399
#define SH_type_l2h_64_shadow 236,9468
#define SH_type_l3_64_shadow 237,9546
#define SH_type_l4_64_shadow 238,9615
#define SH_type_max_shadow 239,9684
#define SH_type_p2m_table 240,9720
#define SH_type_monitor_table 241,9786
#define SH_type_oos_snapshot 242,9854
#define SH_type_unused 243,9919
static inline int sh_type_is_pinnable(249,10002
static inline int sh_type_has_up_pointer(275,11094
#define SHF_page_type_mask 291,11611
#define SHF_L1_32 295,11731
#define SHF_FL1_32 296,11780
#define SHF_L2_32 297,11830
#define SHF_L1_PAE 298,11879
#define SHF_FL1_PAE 299,11929
#define SHF_L2_PAE 300,11980
#define SHF_L2H_PAE 301,12030
#define SHF_L1_64 302,12081
#define SHF_FL1_64 303,12130
#define SHF_L2_64 304,12180
#define SHF_L2H_64 305,12229
#define SHF_L3_64 306,12279
#define SHF_L4_64 307,12328
#define SHF_32 309,12378
#define SHF_PAE 310,12427
#define SHF_64 311,12491
#define SHF_L1_ANY 313,12572
#define SHF_out_of_sync 330,13315
#define SHF_oos_may_write 331,13348
#define SHF_pagetable_dying 335,13441
static inline int sh_page_has_multiple_shadows(337,13479
static inline int page_is_out_of_sync(350,13962
static inline int mfn_is_out_of_sync(356,14119
static inline int page_oos_may_write(361,14232
static inline int mfn_oos_may_write(367,14390
shadow_resync_all(444,17758
shadow_resync_current_vcpu(454,17982
shadow_sync_other_vcpus(464,18216
#define SHADOW_SET_CHANGED 489,19057
#define SHADOW_SET_FLUSH 491,19153
#define SHADOW_SET_ERROR 493,19271
#undef mfn_to_page501,19494
#define mfn_to_page(502,19513
#undef mfn_valid503,19562
#define mfn_valid(504,19579
#undef page_to_mfn505,19628
#define page_to_mfn(506,19647
#undef pagetable_get_page509,19777
#define pagetable_get_page(510,19803
#undef pagetable_from_page511,19869
#define pagetable_from_page(512,19896
#define backpointer(514,19965
static inline unsigned long __backpointer(515,20038
sh_mfn_is_a_page_table(528,20335
sh_map_domain_page(548,20870
sh_unmap_domain_page(554,20965
sh_map_domain_page_global(560,21048
sh_unmap_domain_page_global(566,21157
static inline int sh_get_ref(580,21639
static inline void sh_put_ref(613,22526
prev_pinned_shadow(649,23496
#define foreach_pinned_shadow(675,24348
static inline int sh_pin(683,24741
static inline void sh_unpin(733,26456
struct sh_emulate_ctxt 782,28011
    struct x86_emulate_ctxt ctxt;783,28036
    uint8_t insn_buf[insn_buf786,28121
    uint8_t insn_buf_bytes;787,28147
    unsigned long insn_buf_eip;788,28175
    unsigned int valid_seg_regs;791,28282
    struct segment_register seg_reg[seg_reg792,28315
    mfn_t mfn1,795,28415
    mfn_t mfn1, mfn2;795,28415
    int low_bit_was_clear:low_bit_was_clear800,28624
#define VTLB_ENTRIES 825,29644
struct shadow_vtlb 827,29669
    unsigned long page_number;828,29690
    unsigned long frame_number;829,29769
    uint32_t pfec;830,29848
static inline void vtlb_flush(836,30125
static inline int vtlb_hash(843,30343
static inline void vtlb_insert(849,30515
static inline unsigned long vtlb_lookup(860,30968

xen/arch/x86/mm/shadow/common.c,4364
void shadow_domain_init(46,1685
void shadow_vcpu_init(69,2647
int shadow_audit_enable 87,3153
static void shadow_audit_key(89,3183
static struct keyhandler shadow_audit_keyhandler 96,3369
static int __init shadow_audit_key_init(101,3491
int _shadow_mode_refcounts(109,3673
struct segment_register *hvm_get_seg_reg(hvm_get_seg_reg119,3887
static int hvm_translate_linear_addr(128,4195
hvm_read(152,4755
hvm_emulate_read(191,5706
hvm_emulate_insn_fetch(204,6126
hvm_emulate_write(227,6923
hvm_emulate_cmpxchg(256,7766
static const struct x86_emulate_ops hvm_shadow_emulator_ops 294,8847
pv_emulate_read(302,9080
pv_emulate_write(323,9594
pv_emulate_cmpxchg(339,10107
static const struct x86_emulate_ops pv_shadow_emulator_ops 371,11035
const struct x86_emulate_ops *shadow_init_emulation(shadow_init_emulation378,11246
void shadow_continue_emulation(425,12758
static void sh_oos_audit(502,16000
void oos_audit_hash_is_present(550,17705
static inline void _sh_resync_l1(575,18311
static inline int oos_fixup_flush_gmfn(600,19096
void oos_fixup_add(619,19678
static int oos_remove_write_access(678,21781
static inline void trace_resync(712,22684
static void _sh_resync(723,23001
static void oos_hash_add(759,24221
static void oos_hash_remove(803,25576
mfn_t oos_snapshot_lookup(829,26241
void sh_resync(855,26937
static int sh_skip_sync(886,27870
void sh_resync_all(909,28900
int sh_unsync(984,31114
void shadow_promote(1021,32400
void shadow_demote(1047,33262
sh_validate_guest_entry(1076,34092
sh_validate_guest_pt_write(1143,36767
int shadow_write_guest_entry(1168,37694
int shadow_cmpxchg_guest_entry(1182,38192
static unsigned int shadow_min_acceptable_pages(1245,40945
shadow_size(1258,41219
void shadow_unhook_mappings(1286,42275
static inline void trace_shadow_prealloc_unpin(1309,42983
static void _shadow_prealloc(1323,43431
void shadow_prealloc(1394,45924
static void shadow_blow_tables(1401,46156
void shadow_blow_tables_per_domain(1428,46885
static void shadow_blow_all_tables(1441,47303
static struct keyhandler shadow_blow_all_tables_keyhandler 1458,47751
static __init int shadow_blow_tables_keyhandler_init(1464,47955
next_shadow(1474,48272
set_next_shadow(1480,48402
mfn_t shadow_alloc(1488,48688
void shadow_free(1568,51317
shadow_alloc_p2m_page(1623,53407
shadow_free_p2m_page(1660,54517
static void p2m_install_entry_in_monitors(1690,55469
static unsigned int sh_set_allocation(1738,57398
static unsigned int shadow_get_allocation(1813,59958
#define SHADOW_HASH_BUCKETS 1826,60509
typedef u32 key_t;1830,60692
static inline key_t sh_hash(1831,60711
static void sh_hash_audit_bucket(1844,61150
#define sh_hash_audit_bucket(1914,63961
static void sh_hash_audit(1920,64094
#define sh_hash_audit(1935,64359
static int shadow_hash_alloc(1940,64526
static void shadow_hash_teardown(1957,65058
mfn_t shadow_hash_lookup(1967,65288
void shadow_hash_insert(2021,66991
void shadow_hash_delete(2047,67693
typedef int (*hash_callback_t)hash_callback_t2090,68906
static void hash_foreach(2092,68984
void sh_destroy_shadow(2146,71095
static inline void trace_shadow_wrmap_bf(2210,73177
int sh_remove_write_access(2227,73835
#define GUESS(2307,76853
#undef GUESS2397,80881
int sh_remove_write_access_from_sl1p(2453,82860
int sh_remove_all_mappings(2488,84040
static int sh_remove_shadow_via_pointer(2572,87214
void sh_remove_shadows(2629,88926
#define DO_UNSHADOW(2720,92436
#undef DO_UNSHADOW2756,94436
sh_remove_all_shadows_and_parents(2775,95002
static int sh_clear_up_pointer(2796,96004
void sh_reset_l3_up_pointers(2803,96134
static void sh_update_paging_modes(2835,96999
void shadow_update_paging_modes(3031,104043
static void sh_new_mode(3041,104304
int shadow_enable(3054,104617
void shadow_teardown(3172,108173
void shadow_final_teardown(3288,112382
static int shadow_one_bit_enable(3318,113640
static int shadow_one_bit_disable(3358,114665
static int shadow_test_enable(3422,116962
static int shadow_test_disable(3435,117182
static void sh_unshadow_for_p2m_change(3456,117700
shadow_write_p2m_entry(3524,120372
int shadow_enable_log_dirty(3571,122058
int shadow_disable_log_dirty(3600,122944
void shadow_clean_dirty_bitmap(3615,123274
int shadow_track_dirty_vram(3628,123703
int shadow_domctl(3825,130345
void shadow_audit_tables(3886,132275

xen/arch/x86/mm/shadow/multi.c,5515
#define FETCH_TYPE_PREFETCH 67,2603
#define FETCH_TYPE_DEMAND 68,2633
#define FETCH_TYPE_WRITE 69,2663
    ft_prefetch 71,2708
    ft_prefetch     = FETCH_TYPE_PREFETCH,71,2708
    ft_demand_read 72,2751
    ft_demand_read  = FETCH_TYPE_DEMAND,72,2751
    ft_demand_write 73,2792
    ft_demand_write = FETCH_TYPE_DEMAND 73,2792
    ft_demand_write = FETCH_TYPE_DEMAND | FETCH_TYPE_WRITE,73,2792
} fetch_type_t;74,2852
static char *fetch_type_names[fetch_type_names77,2893
get_fl1_shadow_status(93,3415
get_shadow_status(102,3686
set_fl1_shadow_status(112,4002
set_shadow_status(123,4369
delete_fl1_shadow_status(146,5066
delete_shadow_status(156,5433
sh_walk_guest_tables(174,6178
shadow_check_gwalk(195,6965
shadow_check_gl1e(252,8894
#define GW_RMWR_FLUSHTLB 276,9581
#define GW_RMWR_REWALK 277,9608
gw_remove_write_accesses(280,9659
static void sh_audit_gw(324,10946
#define sh_audit_gw(364,12609
sh_guest_map_l1e(370,12736
sh_guest_get_eff_l1e(394,13327
static inline mfn_t sh_next_page(427,14779
guest_index(446,15344
shadow_l1_index(452,15456
shadow_l2_index(465,15776
shadow_l3_index(485,16441
shadow_l4_index(491,16527
_sh_propagate(507,17009
l4e_propagate_from_guest(733,25105
l3e_propagate_from_guest(743,25397
l2e_propagate_from_guest(754,25724
l1e_propagate_from_guest(764,26016
static inline void safe_write_entry(781,26617
shadow_write_entries(810,27780
perms_strictly_increased(841,28840
shadow_get_page_from_l1e(859,29626
shadow_put_page_from_l1e(913,31324
static int shadow_set_l4e(922,31507
static int shadow_set_l3e(972,33127
static int shadow_set_l2e(1018,34561
static inline void shadow_vram_get_l1e(1102,37449
static inline void shadow_vram_put_l1e(1133,38618
static int shadow_set_l1e(1199,40896
static inline void increment_ptr_to_guest_entry(1285,44095
#define _SHADOW_FOREACH_L1E(1295,44282
#define SHADOW_FOREACH_L1E(1314,45529
#define SHADOW_FOREACH_L1E(1325,46265
#define SHADOW_FOREACH_L2E(1333,46525
#define SHADOW_FOREACH_L2E(1360,48288
#define SHADOW_FOREACH_L2E(1385,49903
#define SHADOW_FOREACH_L3E(1414,51715
#define SHADOW_FOREACH_L4E(1431,52796
void sh_install_xen_entries_in_l4(1463,54562
static void sh_install_xen_entries_in_l2h(1519,56679
sh_make_shadow(1600,59367
make_fl1_shadow(1671,61886
sh_make_monitor_table(1686,62281
static shadow_l4e_t * shadow_get_and_create_l4e(1797,66646
static shadow_l3e_t * shadow_get_and_create_l3e(1807,67089
static shadow_l2e_t * shadow_get_and_create_l2e(1853,68694
static shadow_l1e_t * shadow_get_and_create_l1e(1927,71656
void sh_destroy_l4_shadow(2018,75184
void sh_destroy_l3_shadow(2049,76176
void sh_destroy_l2_shadow(2081,77175
void sh_destroy_l1_shadow(2116,78251
void sh_destroy_monitor_table(2159,79546
void sh_unhook_32b_mappings(2223,81850
void sh_unhook_pae_mappings(2234,82177
void sh_unhook_64b_mappings(2246,82570
static int validate_gl4e(2269,83267
static int validate_gl3e(2328,85225
static int validate_gl2e(2361,86286
static int validate_gl1e(2447,89342
void sh_resync_l1(2496,90950
int sh_safe_not_to_sync(2545,92589
sh_map_and_validate(2603,94329
sh_map_and_validate_gl4e(2655,96169
sh_map_and_validate_gl3e(2671,96648
sh_map_and_validate_gl2e(2687,97122
sh_map_and_validate_gl2he(2697,97447
sh_map_and_validate_gl1e(2713,97954
static inline void check_for_early_unshadow(2733,98812
static inline void reset_early_unshadow(2758,99891
#define PREFETCH_DISTANCE 2776,100404
static void sh_prefetch(2778,100434
typedef u64 guest_va_t;2869,103424
typedef u64 guest_pa_t;2870,103448
typedef u32 guest_va_t;2872,103503
typedef u64 guest_pa_t;2873,103527
typedef u32 guest_va_t;2875,103557
typedef u32 guest_pa_t;2876,103581
static inline void trace_shadow_gen(2879,103613
static inline void trace_shadow_fixup(2888,103817
static inline void trace_not_shadow_fault(2912,104503
static inline void trace_shadow_emulate_other(2936,105202
static inline void trace_shadow_emulate(2968,106074
static int sh_page_fault(3003,107282
sh_invlpg(3637,129981
sh_gva_to_gfn(3771,134645
sh_update_linear_entries(3806,135711
sh_detach_old_tables(4054,145328
sh_set_toplevel_shadow(4095,146393
sh_update_cr3(4167,148763
int sh_rm_write_access_from_sl1p(4446,158489
static int sh_guess_wrmap(4495,159866
int sh_rm_write_access_from_l1(4546,161744
int sh_rm_mappings_from_l1(4580,163003
void sh_clear_shadow_entry(4606,163917
int sh_remove_l1_shadow(4632,164687
int sh_remove_l2_shadow(4655,165400
int sh_remove_l3_shadow(4677,166073
static void sh_pagetable_dying(4706,167096
static void sh_pagetable_dying(4773,169120
#define BAD_GVA_TO_GFN 4809,170331
#define BAD_GFN_TO_MFN 4810,170361
#define READONLY_GFN 4811,170391
static mfn_t emulate_gva_to_mfn(4812,170421
#define MAPPING_UNHANDLEABLE 4852,171722
#define MAPPING_EXCEPTION 4853,171797
#define MAPPING_SILENT_FAIL 4854,171869
#define emulate_map_dest_failed(4855,171936
static void *emulate_map_dest(emulate_map_dest4856,171999
static void emulate_unmap_dest(4935,175229
sh_x86_emulate_write(5011,178117
sh_x86_emulate_cmpxchg(5050,179311
sh_x86_emulate_cmpxchg8b(5093,180658
#define AUDIT_FAIL(5131,181743
#define AUDIT_FAIL_MIN(5148,182873
static char * sh_audit_flags(5161,183700
int sh_audit_l1_table(5188,184919
int sh_audit_fl1_table(5256,187234
int sh_audit_l2_table(5282,188198
int sh_audit_l3_table(5333,190036
int sh_audit_l4_table(5381,191798
#undef AUDIT_FAIL5427,193317
const struct paging_mode sh_paging_mode 5434,193564

xen/arch/x86/mm/shadow/types.h,5564
#define _XEN_SHADOW_TYPES_H24,1069
#define SHADOW_PAGING_LEVELS 29,1251
#define SHADOW_PAGING_LEVELS 31,1288
#define SHADOW_L1_PAGETABLE_ENTRIES 41,1566
#define SHADOW_L2_PAGETABLE_ENTRIES 42,1610
#define SHADOW_L3_PAGETABLE_ENTRIES 43,1654
#define SHADOW_L1_PAGETABLE_SHIFT 44,1698
#define SHADOW_L2_PAGETABLE_SHIFT 45,1742
#define SHADOW_L3_PAGETABLE_SHIFT 46,1786
#define SHADOW_L1_PAGETABLE_ENTRIES 48,1868
#define SHADOW_L2_PAGETABLE_ENTRIES 49,1912
#define SHADOW_L3_PAGETABLE_ENTRIES 50,1956
#define SHADOW_L4_PAGETABLE_ENTRIES 51,2000
#define SHADOW_L1_PAGETABLE_SHIFT 52,2044
#define SHADOW_L2_PAGETABLE_SHIFT 53,2088
#define SHADOW_L3_PAGETABLE_SHIFT 54,2132
#define SHADOW_L4_PAGETABLE_SHIFT 55,2176
typedef l1_pgentry_t shadow_l1e_t;59,2266
typedef l2_pgentry_t shadow_l2e_t;60,2301
typedef l3_pgentry_t shadow_l3e_t;61,2336
typedef l4_pgentry_t shadow_l4e_t;63,2401
static inline paddr_t shadow_l1e_get_paddr(67,2476
static inline paddr_t shadow_l2e_get_paddr(69,2570
static inline paddr_t shadow_l3e_get_paddr(71,2664
static inline paddr_t shadow_l4e_get_paddr(74,2788
static inline mfn_t shadow_l1e_get_mfn(78,2890
static inline mfn_t shadow_l2e_get_mfn(80,2984
static inline mfn_t shadow_l3e_get_mfn(82,3078
static inline mfn_t shadow_l4e_get_mfn(85,3202
static inline u32 shadow_l1e_get_flags(89,3304
static inline u32 shadow_l2e_get_flags(91,3394
static inline u32 shadow_l3e_get_flags(93,3484
static inline u32 shadow_l4e_get_flags(96,3604
shadow_l1e_remove_flags(101,3729
static inline shadow_l1e_t shadow_l1e_empty(104,3832
static inline shadow_l2e_t shadow_l2e_empty(106,3907
static inline shadow_l3e_t shadow_l3e_empty(108,3982
static inline shadow_l4e_t shadow_l4e_empty(111,4087
static inline shadow_l1e_t shadow_l1e_from_mfn(115,4170
static inline shadow_l2e_t shadow_l2e_from_mfn(117,4283
static inline shadow_l3e_t shadow_l3e_from_mfn(119,4396
static inline shadow_l4e_t shadow_l4e_from_mfn(122,4539
#define shadow_l1_table_offset(126,4660
#define shadow_l2_table_offset(127,4713
#define shadow_l3_table_offset(128,4766
#define shadow_l4_table_offset(129,4819
#define shadow_l1_linear_offset(135,5084
#define shadow_l2_linear_offset(137,5223
#define shadow_l3_linear_offset(139,5362
#define shadow_l4_linear_offset(141,5501
#define __sh_linear_l1_table 149,5956
#define __sh_linear_l2_table 150,6029
#define __sh_linear_l3_table 155,6284
#define __sh_linear_l4_table 157,6442
#define sh_linear_l1_table(161,6608
#define sh_linear_l2_table(169,6820
#define sh_linear_l3_table(177,7070
#define sh_linear_l4_table(186,7428
#undef gfn_to_mfn_query195,7702
#define gfn_to_mfn_query(196,7726
#undef gfn_to_mfn_guest197,7808
#define gfn_to_mfn_guest(198,7832
#define SH_type_l1_shadow 203,7999
#define SH_type_l2_shadow 204,8047
#define SH_type_fl1_shadow 205,8095
#define SH_type_l1_shadow 207,8175
#define SH_type_fl1_shadow 208,8224
#define SH_type_l2_shadow 209,8274
#define SH_type_l2h_shadow 210,8323
#define SH_type_l1_shadow 212,8379
#define SH_type_fl1_shadow 213,8427
#define SH_type_l2_shadow 214,8476
#define SH_type_l2h_shadow 215,8524
#define SH_type_l3_shadow 216,8573
#define SH_type_l4_shadow 217,8621
#define INTERNAL_NAME(223,8797
#define sh_page_fault 228,8989
#define sh_invlpg 229,9053
#define sh_gva_to_gfn 230,9113
#define sh_update_cr3 231,9177
#define sh_rm_write_access_from_l1 232,9241
#define sh_rm_mappings_from_l1 233,9318
#define sh_remove_l1_shadow 234,9391
#define sh_remove_l2_shadow 235,9461
#define sh_remove_l3_shadow 236,9531
#define sh_map_and_validate_gl4e 237,9601
#define sh_map_and_validate_gl3e 238,9676
#define sh_map_and_validate_gl2e 239,9751
#define sh_map_and_validate_gl2he 240,9826
#define sh_map_and_validate_gl1e 241,9902
#define sh_destroy_l4_shadow 242,9977
#define sh_destroy_l3_shadow 243,10048
#define sh_destroy_l2_shadow 244,10119
#define sh_destroy_l1_shadow 245,10190
#define sh_unhook_32b_mappings 246,10261
#define sh_unhook_pae_mappings 247,10334
#define sh_unhook_64b_mappings 248,10407
#define sh_paging_mode 249,10480
#define sh_detach_old_tables 250,10545
#define sh_x86_emulate_write 251,10616
#define sh_x86_emulate_cmpxchg 252,10687
#define sh_x86_emulate_cmpxchg8b 253,10760
#define sh_audit_l1_table 254,10835
#define sh_audit_fl1_table 255,10903
#define sh_audit_l2_table 256,10972
#define sh_audit_l3_table 257,11040
#define sh_audit_l4_table 258,11108
#define sh_guess_wrmap 259,11176
#define sh_clear_shadow_entry 260,11241
#define sh_resync_l1 263,11359
#define sh_safe_not_to_sync 264,11422
#define sh_rm_write_access_from_sl1p 265,11492
#define sh_guest_map_l1e 269,11653
#define sh_guest_get_eff_l1e 271,11749
#define sh_make_monitor_table 275,11926
#define sh_destroy_monitor_table 277,12032
#define MFN_FITS_IN_HVM_CR3(281,12175
#define SH_PRI_pte 284,12238
#define SH_PRI_gpte 285,12265
#define SH_PRI_gfn 286,12294
#define SH_L1E_MAGIC 302,12950
static inline int sh_l1e_is_magic(303,12993
static inline shadow_l1e_t sh_l1e_gnp(309,13152
static inline int sh_l1e_is_gnp(314,13238
#define SH_L1E_MMIO_MAGIC 323,13602
#define SH_L1E_MMIO_MAGIC_MASK 324,13656
#define SH_L1E_MMIO_GFN_MASK 325,13710
#define SH_L1E_MMIO_GFN_SHIFT 326,13764
static inline shadow_l1e_t sh_l1e_mmio(328,13799
static inline int sh_l1e_is_mmio(335,14053
static inline gfn_t sh_l1e_mmio_get_gfn(340,14181
static inline u32 sh_l1e_mmio_get_flags(345,14322
#define sh_l1e_gnp(352,14447
#define sh_l1e_mmio(353,14487
#define sh_l1e_is_magic(354,14540

xen/arch/x86/mm/mem_event.c,488
#define xen_mb(31,1076
#define xen_rmb(32,1100
#define xen_wmb(33,1125
#define mem_event_ring_lock_init(35,1151
#define mem_event_ring_lock(36,1232
#define mem_event_ring_unlock(37,1308
#define MEM_EVENT_RING_THRESHOLD 39,1387
static int mem_event_enable(41,1423
static int mem_event_disable(82,2554
void mem_event_put_request(93,2790
void mem_event_get_response(116,3346
void mem_event_unpause_vcpus(137,3850
int mem_event_check_ring(146,4043
int mem_event_domctl(173,4701

xen/arch/x86/mm/mem_paging.c,30
int mem_paging_domctl(28,970

xen/arch/x86/mm/p2m.c,2161
#define P2M_AUDIT 39,1582
#define P2M_DEBUGGING 40,1606
static bool_t __read_mostly opt_hap_1gb;43,1685
#define P2M_PRINTK(47,1782
#define P2M_ERROR(49,1901
#define P2M_DEBUG(52,2032
#define P2M_DEBUG(55,2162
#undef mfn_to_page60,2295
#define mfn_to_page(61,2314
#undef mfn_valid62,2363
#define mfn_valid(63,2380
#undef page_to_mfn64,2429
#define page_to_mfn(65,2448
#define P2M_BASE_FLAGS 69,2551
#define SUPERPAGE_PAGES 72,2645
#define superpage_aligned(73,2680
static unsigned long p2m_type_to_flags(75,2744
# define audit_p2m(115,3768
p2m_find_entry(122,3983
p2m_alloc_ptp(140,4492
p2m_next_level(162,5019
p2m_pod_cache_add(291,9418
static struct page_info * p2m_pod_cache_get(378,11884
p2m_pod_set_cache_target(435,13431
p2m_pod_set_mem_target(556,17406
p2m_pod_empty_cache(598,18396
p2m_pod_decrease_reservation(644,19592
p2m_pod_dump_data(765,22730
p2m_pod_zero_check_superpage(775,23035
p2m_pod_zero_check(909,26903
#define POD_SWEEP_LIMIT 1018,30109
p2m_pod_emergency_sweep_super(1020,30150
#define POD_SWEEP_STRIDE 1048,31070
p2m_pod_emergency_sweep(1050,31111
p2m_pod_demand_populate(1095,32357
static int p2m_pod_check_and_populate(1219,36067
p2m_set_entry(1252,36947
p2m_gfn_to_mfn(1404,42479
static mfn_t p2m_gfn_to_mfn_current(1544,47174
static void p2m_initialise(1720,53064
int p2m_init(1740,53642
void p2m_change_entry_type_global(1752,53856
int set_p2m_entry(1761,54078
int p2m_alloc_table(1797,55189
void p2m_teardown(1877,57327
void p2m_final_teardown(1907,58076
static void audit_p2m(1918,58449
p2m_remove_page(2185,67919
guest_physmap_remove_entry(2213,68749
static int gfn_check_limit(2224,69058
#define gfn_check_limit(2244,69754
guest_physmap_mark_populate_on_demand(2248,69801
guest_physmap_add_entry(2306,71225
void p2m_change_type_global(2433,75014
p2m_type_t p2m_change_type(2569,79795
set_mmio_p2m_entry(2589,80184
clear_mmio_p2m_entry(2623,81012
set_shared_p2m_entry(2650,81652
int p2m_mem_paging_nominate(2677,82495
int p2m_mem_paging_evict(2721,83420
void p2m_mem_paging_populate(2758,84407
int p2m_mem_paging_prep(2803,85614
void p2m_mem_paging_resume(2821,86021

xen/arch/x86/mm/mem_sharing.c,2535
#define MEM_SHARING_AUDIT 35,1202
#define MEM_SHARING_DEBUG(39,1291
# define mem_sharing_audit(42,1439
#define mem_sharing_enabled(45,1515
#undef mfn_to_page48,1616
#define mfn_to_page(49,1635
#undef mfn_valid50,1684
#define mfn_valid(51,1701
#undef page_to_mfn52,1750
#define page_to_mfn(53,1769
static shr_handle_t next_handle 55,1820
static atomic_t nr_saved_mfns 56,1857
typedef struct shr_hash_entry 58,1907
    shr_handle_t handle;60,1940
    mfn_t mfn;61,1965
    struct shr_hash_entry *next;next62,1981
    struct list_head gfns;63,2014
} shr_hash_entry_t;64,2041
#define SHR_HASH_LENGTH 66,2062
static shr_hash_entry_t *shr_hash[shr_hash67,2091
typedef struct gfn_info69,2144
    unsigned long gfn;71,2170
    domid_t domain;72,2193
    struct list_head list;73,2214
} gfn_info_t;74,2241
typedef struct shr_lock76,2256
    spinlock_t  lock;78,2282
    int         locker;79,2338
    const char *locker_function;locker_function80,2408
} shr_lock_t;81,2465
static shr_lock_t shr_lock;82,2479
static inline int list_has_one_entry(85,2572
static inline struct gfn_info* gfn_get_info(90,2701
#define shr_lock_init(95,2832
#define shr_locked_by_me(102,3094
#define shr_lock(105,3188
#define shr_unlock(119,3985
static void mem_sharing_hash_init(127,4362
static shr_hash_entry_t *mem_sharing_hash_alloc(mem_sharing_hash_alloc136,4505
static void mem_sharing_hash_destroy(141,4603
static gfn_info_t *mem_sharing_gfn_alloc(mem_sharing_gfn_alloc146,4680
static void mem_sharing_gfn_destroy(151,4765
static shr_hash_entry_t* mem_sharing_hash_lookup(168,5213
static shr_hash_entry_t* mem_sharing_hash_insert(183,5489
static void mem_sharing_hash_delete(197,5811
static void mem_sharing_audit(219,6303
static struct page_info* mem_sharing_alloc_page(295,9285
unsigned int mem_sharing_get_nr_saved_mfns(334,10402
int mem_sharing_sharing_resume(339,10510
int mem_sharing_debug_mfn(353,10806
int mem_sharing_debug_gfn(373,11259
#define SHGNT_PER_PAGE_V1 388,11613
#define shared_entry_v1(389,11678
#define SHGNT_PER_PAGE_V2 391,11777
#define shared_entry_v2(392,11842
#define STGNT_PER_PAGE 394,11941
#define status_entry(395,12001
shared_entry_header(399,12119
static int mem_sharing_gref_to_gfn(408,12362
static int mem_sharing_gfn_account(437,13153
int mem_sharing_debug_gref(464,13778
int mem_sharing_nominate_page(489,14475
int mem_sharing_share_pages(570,16606
int mem_sharing_unshare_page(621,18275
int mem_sharing_domctl(724,21481
void mem_sharing_init(817,24025

xen/arch/x86/mm/hap/hap.c,1999
#undef mfn_to_page47,1543
#define mfn_to_page(48,1562
#undef mfn_valid49,1611
#define mfn_valid(50,1628
#undef page_to_mfn51,1677
#define page_to_mfn(52,1696
static int hap_enable_vram_tracking(58,1901
static int hap_disable_vram_tracking(79,2479
static void hap_clean_vram_tracking(99,3009
static void hap_vram_tracking_init(114,3437
int hap_track_dirty_vram(121,3655
static int hap_enable_log_dirty(195,5907
static int hap_disable_log_dirty(209,6298
static void hap_clean_dirty_bitmap(221,6595
void hap_logdirty_init(229,6847
static struct page_info *hap_alloc(hap_alloc248,7495
static void hap_free(269,7900
static struct page_info *hap_alloc_p2m_page(hap_alloc_p2m_page279,8130
static void hap_free_p2m_page(324,9464
hap_get_allocation(354,10535
hap_set_allocation(366,10902
static void hap_install_xen_entries_in_l4(419,12520
static void hap_install_xen_entries_in_l2h(451,13638
static mfn_t hap_make_monitor_table(495,15207
static void hap_destroy_monitor_table(552,16901
void hap_domain_init(573,17529
int hap_enable(580,17697
void hap_final_teardown(632,18788
void hap_teardown(645,19122
int hap_domctl(693,20620
static const struct paging_mode hap_paging_real_mode;721,21504
static const struct paging_mode hap_paging_protected_mode;722,21558
static const struct paging_mode hap_paging_pae_mode;723,21617
static const struct paging_mode hap_paging_long_mode;724,21670
void hap_vcpu_init(726,21725
static int hap_page_fault(738,22117
static int hap_invlpg(753,22529
static void hap_update_cr3(761,22754
static void hap_update_paging_modes(767,22911
static void p2m_install_entry_in_monitors(794,23674
hap_write_p2m_entry(835,25175
static unsigned long hap_gva_to_gfn_real_mode(859,25936
static const struct paging_mode hap_paging_real_mode 866,26135
static const struct paging_mode hap_paging_protected_mode 876,26524
static const struct paging_mode hap_paging_pae_mode 886,26917
static const struct paging_mode hap_paging_long_mode 896,27304

xen/arch/x86/mm/hap/private.h,33
#define __HAP_PRIVATE_H__21,782

xen/arch/x86/mm/hap/p2m-ept.c,1087
#define atomic_read_ept_entry(35,1139
#define atomic_write_ept_entry(37,1275
#define is_epte_present(40,1398
#define is_epte_superpage(41,1464
static int ept_pod_check_and_populate(44,1562
static void ept_p2m_type_to_flags(65,2046
#define GUEST_TABLE_MAP_FAILED 104,3165
#define GUEST_TABLE_NORMAL_PAGE 105,3199
#define GUEST_TABLE_SUPER_PAGE 106,3233
#define GUEST_TABLE_POD_PAGE 107,3267
static int ept_set_middle_entry(110,3343
void ept_free_entry(126,3698
static int ept_split_super_page(146,4276
static int ept_next_level(210,6213
ept_set_entry(262,7723
static mfn_t ept_get_entry(449,13621
static ept_entry_t ept_get_entry_content(544,16191
void ept_walk_table(578,17098
static mfn_t ept_get_entry_current(628,18366
static int need_modify_ept_entry(639,18690
void ept_change_entry_emt_with_range(655,19137
static void ept_change_entry_type_page(713,20957
static void ept_change_entry_type_global(741,21795
void ept_p2m_init(756,22247
static void ept_dump_p2m_table(765,22527
static struct keyhandler ept_p2m_table 825,24223
void setup_ept_dump(831,24356

xen/arch/x86/mm/hap/guest_walk.c,141
#define _hap_gva_to_gfn(29,972
#define hap_gva_to_gfn(30,1037
unsigned long hap_gva_to_gfn(37,1190
unsigned long hap_gva_to_gfn(116,3172

xen/arch/x86/mm/guest_walk.c,165
static uint32_t mandatory_flags(35,1334
static uint32_t set_ad_bits(71,2940
static inline void *map_domain_gfn(map_domain_gfn89,3524
guest_walk_tables(122,4385

xen/arch/x86/mm/paging.c,1287
#define PAGING_PRINTK(33,1152
#define PAGING_ERROR(35,1278
#define PAGING_DEBUG(37,1399
#undef mfn_to_page47,1920
#define mfn_to_page(48,1939
#undef mfn_valid49,1988
#define mfn_valid(50,2005
#undef page_to_mfn51,2054
#define page_to_mfn(52,2073
#define log_dirty_lock_init(69,2946
#define log_dirty_lock(76,3303
#define log_dirty_unlock(90,4268
static mfn_t paging_new_log_dirty_page(98,4741
static mfn_t paging_new_log_dirty_leaf(116,5161
static mfn_t paging_new_log_dirty_node(125,5386
static mfn_t *paging_map_log_dirty_bitmap(paging_map_log_dirty_bitmap136,5752
static void paging_free_log_dirty_page(148,6063
void paging_free_log_dirty_bitmap(154,6226
int paging_log_dirty_enable(198,7395
int paging_log_dirty_disable(212,7638
void paging_mark_dirty(229,8020
int paging_mfn_is_dirty(310,10121
int paging_log_dirty_op(360,11399
int paging_log_dirty_range(467,14773
void paging_log_dirty_init(621,20207
static void paging_log_dirty_teardown(636,20865
int paging_domain_init(646,21205
void paging_vcpu_init(666,21736
int paging_domctl(675,21878
void paging_teardown(742,23892
void paging_final_teardown(757,24271
int paging_enable(769,24533
void pagetable_dying(779,24854
void paging_dump_domain_info(790,25095
void paging_dump_vcpu_info(811,25682

xen/arch/x86/sysctl.c,101
#define get_xen_guest_handle(31,725
static long cpu_down_helper(33,798
long arch_do_sysctl(41,947

xen/arch/x86/tboot.c,2236
static char __initdata opt_tboot[opt_tboot17,377
tboot_shared_t *g_tboot_shared;g_tboot_shared21,523
static vmac_t domain_mac;23,556
static vmac_t xenheap_mac;24,622
static vmac_t frametable_mac;25,685
static const uuid_t tboot_shared_uuid 27,752
static uint64_t __initdata txt_heap_base,30,886
static uint64_t __initdata txt_heap_base, __initdata txt_heap_size;30,886
static uint64_t __initdata sinit_base,31,954
static uint64_t __initdata sinit_base, __initdata sinit_size;31,954
#define TXT_PUB_CONFIG_REGS_BASE 37,1104
#define TXT_PRIV_CONFIG_REGS_BASE 38,1154
#define NR_TXT_CONFIG_PAGES 41,1263
#define TXTCR_SINIT_BASE 45,1459
#define TXTCR_SINIT_SIZE 46,1502
#define TXTCR_HEAP_BASE 47,1545
#define TXTCR_HEAP_SIZE 48,1588
#define SHA1_SIZE 52,1676
typedef uint8_t   sha1_hash_t[sha1_hash_t53,1702
typedef struct __packed 55,1745
    uint32_t     version;56,1771
    sha1_hash_t  bios_acm_id;57,1827
    uint32_t     edx_senter_flags;58,1857
    uint64_t     mseg_valid;59,1892
    sha1_hash_t  sinit_hash;60,1921
    sha1_hash_t  mle_hash;61,1950
    sha1_hash_t  stm_hash;62,1977
    sha1_hash_t  lcp_policy_hash;63,2004
    uint32_t     lcp_policy_control;64,2038
    uint32_t     rlp_wakeup_addr;65,2075
    uint32_t     reserved;66,2109
    uint32_t     num_mdrs;67,2136
    uint32_t     mdrs_off;68,2163
    uint32_t     num_vtd_dmars;69,2190
    uint32_t     vtd_dmars_off;70,2222
} sinit_mle_data_t;71,2254
static void tboot_copy_memory(73,2275
void __init tboot_probe(92,2839
#define LEVEL_STRIDE 143,5012
#define PTE_NUM 144,5037
#define dma_pte_present(145,5071
#define dma_pte_addr(146,5119
#define agaw_to_level(147,5168
struct dma_pte 148,5205
    u64 val;149,5222
static void update_iommu_mac(152,5239
#define is_page_in_use(177,5840
static void update_pagetable_mac(180,5939
static void tboot_gen_domain_integrity(200,6460
static int mfn_in_guarded_stack(245,7720
static void tboot_gen_xenheap_integrity(264,8133
static void tboot_gen_frametable_integrity(302,9379
void tboot_shutdown(331,10451
int tboot_in_measured_env(388,12630
int __init tboot_protect_mem_regions(393,12704
int __init tboot_parse_dmar_table(429,13532
int tboot_s3_resume(484,15412

xen/arch/x86/i8259.c,1182
#define BI(38,979
#define BUILD_16_IRQS(41,1018
BUILD_COMMON_IRQ(BUILD_16_IRQS36,959
#undef BUILD_16_IRQS52,1501
#undef BI53,1522
#define IRQ(56,1534
#define IRQLIST_16(59,1580
#undef IRQ72,2138
#undef IRQLIST_1673,2149
static unsigned int startup_8259A_irq(88,2569
static void end_8259A_irq(94,2700
static struct hw_interrupt_type __read_mostly i8259A_irq_type 100,2845
static unsigned int cached_irq_mask 117,3273
#define __byte(119,3320
#define cached_21 120,3369
#define cached_A1 121,3417
unsigned long io_apic_irqs;132,3839
void disable_8259A_irq(134,3868
void enable_8259A_irq(148,4182
int i8259A_irq_pending(162,4498
void mask_8259A(178,4822
void unmask_8259A(188,5012
static inline int i8259A_irq_real(204,5396
static void mask_and_ack_8259A_irq(227,6094
static char irq_trigger[irq_trigger296,8372
static void restore_ELCR(300,8467
static void save_ELCR(306,8570
int i8259A_resume(313,8732
int i8259A_suspend(320,8825
void __devinit init_8259A(326,8897
void __init make_8259A_irq(369,10332
static struct irqaction __read_mostly cascade 375,10465
void __init init_IRQ(377,10545
#define CLOCK_TICK_RATE 409,11419
#define LATCH 410,11475

xen/arch/x86/gdbstub.c,194
gdb_arch_signal_num(25,976
gdb_arch_copy_from_user(35,1258
gdb_arch_copy_to_user(41,1389
gdb_arch_print_state(47,1507
gdb_arch_enter(53,1580
gdb_arch_exit(59,1651
gdb_arch_resume(65,1722

xen/arch/ia64/xen/hyperprivop.S,340
fast_tick_reflect_done:fast_tick_reflect_done519,15056
fast_tlb_no_tr_match:fast_tlb_no_tr_match789,22898
guest_vhpt_miss:guest_vhpt_miss949,27256
page_not_present:page_not_present959,27560
just_do_rfi:just_do_rfi1051,30597
hyper_itc_i:hyper_itc_i2039,55856
hyper_itc_d:hyper_itc_d2041,55921
no_inc_iip:no_inc_iip2220,60938

xen/arch/ia64/xen/xenmisc.c,642
unsigned long loops_per_jiffy 26,517
void hpsim_setup(31,692
struct pt_regs *guest_cpu_user_regs(guest_cpu_user_regs38,769
void dump_pageframe_info(43,935
void console_print(52,1130
void die_if_kernel(61,1334
ia64_peek 73,1557
ia64_poke 81,1762
ia64_sync_fph 89,1966
ia64_flush_fph 95,2070
void hpsim_irq_init(104,2329
void *search_module_extables(search_module_extables109,2430
void *__module_text_address(__module_text_address110,2496
void *module_text_address(module_text_address111,2561
void arch_dump_domain_info(114,2626
void arch_dump_vcpu_info(118,2676
void audit_domains_key(122,2722
void panic_domain(126,2769

xen/arch/ia64/xen/xen.lds.S,30
jiffies 14,290
PHDRS 15,312

xen/arch/ia64/xen/xensetup.c,1655
unsigned long total_pages;37,899
char saved_command_line[saved_command_line39,927
char __initdata dom0_command_line[dom0_command_line40,971
cpumask_t cpu_present_map;42,1026
static bool_t __initdata opt_nosmp;59,1528
static unsigned int __initdata max_cpus 63,1650
static int __initdata opt_xencons 69,1883
static bool_t __initdata opt_xencons_poll;73,2037
#define XENHEAP_DEFAULT_SIZE 76,2130
#define XENHEAP_SIZE_MIN 77,2182
unsigned long xenheap_size 78,2253
unsigned long xen_pstart;79,2304
xen_count_pages(82,2349
static char null[null104,3093
void __init early_cmdline_parse(106,3123
struct ns16550_defaults ns16550_com1 134,3838
unsigned int ns16550_com1_gsi;140,3944
unsigned int ns16550_com1_polarity;141,3975
unsigned int ns16550_com1_trigger;142,4011
struct ns16550_defaults ns16550_com2 144,4047
static bool_t __initdata opt_efi_print;151,4194
efi_print(156,4325
efi_get_md 186,5216
is_xenheap_usable_memory(205,5752
md_overlaps(222,6129
md_overlap_with_boot_param(228,6301
#define MD_SIZE(235,6527
#define MD_END(236,6581
efi_get_max_addr 239,6661
static void noinline init_done(259,7251
struct xen_heap_desc 270,7615
    void*               xen_heap_start;271,7638
    unsigned long       xenheap_phys_end;272,7678
    efi_memory_desc_t*  kern_md;273,7720
init_xenheap_mds(277,7775
int running_on_sim;305,8693
is_platform_hp_ski(308,8732
static int __initdata dom0_vhpt_size_log2;331,9193
unsigned long xen_fixed_mfn_start __read_mostly;334,9302
unsigned long xen_fixed_mfn_end __read_mostly;335,9351
void __init start_kernel(337,9399
void arch_get_xen_caps(686,20552
int xen_in_range(710,21153

xen/arch/ia64/xen/mm.c,4507
#define MEM_LOG(187,6855
struct domain *dom_xen,dom_xen198,7301
struct domain *dom_xen, *dom_io,dom_io198,7301
struct domain *dom_xen, *dom_io, *dom_cow;dom_cow198,7301
#define DOMID_P2M 204,7490
static struct domain *dom_p2m;dom_p2m205,7524
alloc_dom_xen_and_dom_io(209,7630
mm_teardown_can_skip(236,8384
mm_teardown_update_offset(242,8510
mm_teardown_pte(248,8634
mm_teardown_pmd(285,9811
mm_teardown_pud(307,10498
mm_teardown_pgd(327,11094
mm_teardown(351,11759
mm_p2m_teardown_pmd(379,12419
mm_p2m_teardown_pud(386,12587
mm_p2m_teardown_pgd(401,12989
mm_p2m_teardown(416,13391
mm_final_teardown(434,13786
domain_get_maximum_gpfn(444,13988
share_xen_page_with_guest(451,14156
share_xen_page_with_privileged_guests(496,15520
gmfn_to_mfn_foreign(502,15671
u64 translate_domain_pte(521,16251
unsigned long translate_domain_mpaddr(627,19578
lookup_alloc_domain_pte(641,20095
lookup_noalloc_domain_pte(688,21392
lookup_noalloc_domain_pte_none(712,22018
____lookup_domain_mpa(736,22628
unsigned long lookup_domain_mpa(749,22909
void *domain_mpa_to_imva(domain_mpa_to_imva794,24803
void *domain_mpa_to_imva(domain_mpa_to_imva805,25085
paddr_to_maddr(814,25258
__assign_new_domain_page(832,25767
assign_new_domain_page(870,26972
assign_new_domain0_page(881,27215
flags_to_prot 896,27606
__assign_domain_page(916,28281
assign_domain_page(991,30784
ioports_get_mmio_addr(1006,31403
ioports_get_mmio_base(1020,31857
ioports_permit_access(1038,32208
ioports_has_allowed(1095,34006
ioports_deny_access(1105,34216
assign_domain_same_page(1165,35913
efi_mmio(1177,36284
assign_domain_mmio_page(1225,37692
assign_domain_mach_page(1253,38524
adjust_page_count_info(1263,38808
domain_put_page(1287,39410
assign_domain_page_replace(1325,40947
assign_domain_page_cmpxchg_rel(1358,41998
zap_domain_page_one(1433,44454
deassign_domain_mmio_page(1504,46648
dom0vp_zap_physmap(1528,47367
__dom0vp_add_physmap(1542,47684
dom0vp_add_physmap(1598,49395
dom0vp_add_physmap_with_gmfn(1605,49609
#define P2M_PFN_ROUNDUP(1613,49894
#define P2M_PFN_ROUNDDOWN(1615,50010
#define P2M_NUM_PFN(1616,50070
#define MD_END(1617,50144
static struct page_info* p2m_pte_zero_page 1619,50267
expose_p2m_init(1623,50387
allocate_pgd_pmd(1643,50861
expose_p2m_page(1679,51951
expose_p2m_range(1689,52241
expose_zero_page(1722,53183
expose_p2m(1745,53897
unexpose_p2m(1764,54437
dom0vp_expose_p2m(1777,54818
memmap_info_copy_from_guest(1810,56034
foreign_p2m_allocate_pte(1915,59428
struct foreign_p2m_region 1938,60119
    unsigned long       gpfn;1939,60147
    unsigned long       num_gpfn;1940,60177
struct foreign_p2m_entry 1943,60215
    struct list_head            list;1944,60242
    int                         busy;1945,60280
    struct domain*              src_dom;1948,60341
    unsigned long               gpfn;1951,60439
    unsigned long               num_gpfn;1952,60477
    unsigned int                num_region;1953,60519
    struct foreign_p2m_region   region[region1954,60563
foreign_p2m_alloc(1959,60680
foreign_p2m_unexpose(2033,62979
foreign_p2m_unbusy(2044,63269
foreign_p2m_free(2054,63509
foreign_p2m_init(2067,63797
foreign_p2m_destroy(2075,63982
dom0vp_expose_foreign_p2m(2093,64504
dom0vp_unexpose_foreign_p2m(2179,67036
memmap_lock(2221,68180
memmap_unlock(2227,68247
__memmap_copy_to(2234,68381
__memmap_copy_from(2265,69199
memmap_copy_from(2296,69979
memdesc_can_expand(2327,70924
memdesc_can_collapse(2340,71265
__dom0vp_add_memdesc_one(2347,71456
__dom0vp_add_memdesc(2467,75383
dom0vp_get_memmap(2543,77675
create_grant_host_mapping(2597,79114
replace_grant_host_mapping(2628,80125
steal_page(2754,85013
donate_page(2881,89263
__guest_physmap_add_page(2889,89457
guest_physmap_add_page(2906,90010
guest_physmap_remove_page(2925,90493
domain_page_flush_and_put(2939,90850
domain_page_mapped(3019,93869
void domain_cache_flush 3030,94110
static void free_page_type(3075,95703
static int alloc_page_type(3079,95779
void *pgtable_quicklist_alloc(pgtable_quicklist_alloc3084,95866
void pgtable_quicklist_free(3099,96126
void put_page_type(3109,96358
static int get_page_from_pagenr(3156,98049
int get_page_type(3170,98362
int page_is_ram_type(3255,101410
arch_memory_op(3309,102571
int is_iomem_page(3525,109184
static void __xencomm_mark_dirty(3530,109304
void xencomm_mark_dirty(3544,109719
guest_physmap_mark_populate_on_demand(3551,109879
p2m_pod_decrease_reservation(3559,110115

xen/arch/ia64/xen/dom0_ops.c,241
#define get_xen_guest_handle(33,764
long arch_do_domctl(37,872
#define MAX_IOPORTS 475,13487
long arch_do_sysctl(718,19398
dom0vp_ioremap(848,23688
dom0vp_fpswa_revision(870,24302
dom0vp_add_io_space(880,24542
do_dom0vp_op(914,25460

xen/arch/ia64/xen/flushtlb.c,201
#define WRAP_MASK 32,1164
#define WRAP_MASK 34,1202
volatile u32 tlbflush_clock 37,1242
tlbflush_clock_inc_and_return(41,1362
tlbflush_clock_local_flush(63,1931
new_tlbflush_clock_period(70,2033

xen/arch/ia64/xen/faults.c,535
static void check_bad_nested_interruption(44,1116
static void reflect_interruption(65,1762
void reflect_event(100,2855
static int handle_lazy_cover(149,4092
void ia64_do_page_fault(160,4356
fpswa_interface_t *fpswa_interface fpswa_interface259,7491
void __init trap_init(261,7532
fp_emulate(271,7770
handle_fpu_swa(315,9043
ia64_fault(361,10241
int first_break 513,13396
ia64_handle_break(516,13423
ia64_handle_privop(559,14719
ia64_lazy_load_fpu(581,15373
ia64_handle_reflection(592,15579
ia64_shadow_fault(739,19307

xen/arch/ia64/xen/fw_emul.c,1854
struct sal_mc_params 44,1256
	u64 param_type;45,1279
	u64 i_or_m;46,1296
	u64 i_or_m_val;47,1309
	u64 timeout;48,1326
	u64 rz_always;49,1340
} sal_mc_params[sal_mc_params50,1356
struct sal_vectors 52,1400
	u64 vector_type;53,1421
	u64 handler_addr1;54,1439
	u64 gp1;55,1459
	u64 handler_len1;56,1469
	u64 handler_addr2;57,1488
	u64 gp2;58,1508
	u64 handler_len2;59,1518
} sal_vectors[sal_vectors60,1537
struct smp_call_args_t 62,1584
	u64 type;63,1609
	u64 ret;64,1620
	u64 target;65,1630
	struct domain *domain;domain66,1643
	int corrected;67,1667
	int status;68,1683
	void *data;data69,1696
#define IA64_SAL_NO_INFORMATION_AVAILABLE	77,1828
static const char * const rec_name[rec_name80,1907
# define IA64_SAL_DEBUG(82,1980
# define IA64_SAL_DEBUG(84,2047
void get_state_info_on(87,2087
void clear_state_info_on(122,3325
sal_emulator 132,3617
safe_copy_to_guest(610,16836
cpumask_t cpu_cache_coherent_map;648,17845
struct cache_flush_args 650,17880
	u64 cache_type;651,17906
	u64 operation;652,17923
	u64 progress;653,17939
	long status;654,17954
remote_pal_cache_flush(658,17984
remote_pal_prefetch_visibility(671,18253
remote_pal_mc_drain(678,18379
xen_pal_emulator(684,18458
efi_translate_domain_addr(992,27084
efi_emulate_get_time(1021,27761
void domain_set_time_offset(1066,28943
efi_emulate_set_time(1072,29090
efi_emulate_get_wakeup_time(1098,29612
efi_emulate_set_wakeup_time(1141,30739
efi_emulate_get_variable(1171,31379
efi_emulate_get_next_variable(1226,33039
efi_emulate_set_variable(1265,34171
efi_emulate_set_virtual_address_map(1306,35315
#define EFI_HYPERCALL_PATCH_TO_VIRT(1373,37582
efi_emulator 1409,39066
do_ssc(1507,41374
/**/	struct ssc_disk_stat 1513,41589
/**/	struct ssc_disk_stat { int fd;1513,41589
/**/	struct ssc_disk_stat { int fd; unsigned count;1513,41589

xen/arch/ia64/xen/dom_fw_utils.c,516
uint32_t xen_ia64_version(34,1151
int xen_ia64_fpswa_revision(39,1264
int xen_ia64_is_vcpu_allocated(48,1439
int xen_ia64_is_running_on_sim(53,1539
int xen_ia64_is_dom0(58,1622
void xen_ia64_set_convmem_end(63,1685
static void dom_fw_domain_init(68,1796
static int dom_fw_set_convmem_end(76,2061
assign_new_domain_page_if_dom0(139,3975
static void dom_fw_setup_for_domain_restore(145,4105
dom_fw_copy_to(154,4419
dom_fw_copy_from(175,4938
int dom_fw_setup(194,5379
#define NUM_EXTRA_MEM_DESCS 273,7861

xen/arch/ia64/xen/dom_fw_dom0.c,635
struct acpi_backup_table_entry 41,1346
	struct list_head list;42,1379
	unsigned long pa;43,1403
	unsigned long size;44,1422
	unsigned char data[data45,1443
static u32 lsapic_nbr;50,1514
acpi_update_lsapic(54,1599
acpi_patch_plat_int_src(83,2268
acpi_update_madt_checksum(100,2653
acpi_backup_table(116,2988
acpi_restore_tables(141,3555
static int __init __acpi_table_disable(155,3948
static void __init acpi_table_disable(169,4363
static void __init touch_acpi_table(175,4506
void __init efi_systable_init_dom0(221,5765
setup_dom0_memmap_info(264,7009
assign_new_domain0_range(331,9265
complete_dom0_memmap(353,9829

xen/arch/ia64/xen/dom_fw_domu.c,143
#define xen_ia64_dom_fw_map(31,1156
#define xen_ia64_dom_fw_unmap(32,1230
void efi_systable_init_domu(51,1573
complete_domu_memmap(69,2007

xen/arch/ia64/xen/hypercall.c,618
xen_hypercall 42,985
xen_fast_hypercall 50,1171
static long __do_pirq_guest_eoi(64,1449
long do_pirq_guest_eoi(73,1672
fw_hypercall_ipi 79,1774
fpswa_get_domain_addr(131,3030
fw_hypercall_fpswa 166,3873
fw_hypercall_fpswa_error(256,6390
ia64_hypercall(262,6473
#define next_arg(407,10755
unsigned long hypercall_create_continuation(419,11539
static int physdev_map_pirq(480,13215
static int physdev_unmap_pirq(485,13289
long do_physdev_op(491,13370
static long register_guest_callback(713,19356
static long unregister_guest_callback(739,19844
long do_callback_op(747,20045
do_ia64_debug_op(786,20705

xen/arch/ia64/xen/ivt.S,389
ia64_ivt:ia64_ivt103,2997
late_alt_itlb_miss:late_alt_itlb_miss153,4293
late_alt_dtlb_miss:late_alt_dtlb_miss184,5241
alt_dtlb_miss_identity_map:alt_dtlb_miss_identity_map238,6919
fast_hypercall:fast_hypercall573,15763
slow_interrupt:slow_interrupt788,22048
dispatch_break_fault_post_save:dispatch_break_fault_post_save822,23074
.mem.offset 959,27420
.mem.offset 960,27489

xen/arch/ia64/xen/xentime.c,883
seqlock_t xtime_lock __cacheline_aligned_in_smp 37,813
#define TIME_KEEPER_ID 39,882
unsigned long domain0_ready 40,908
static s_time_t stime_irq 41,941
static unsigned long itc_scale __read_mostly,42,1020
static unsigned long itc_scale __read_mostly, ns_scale __read_mostly;42,1020
static unsigned long itc_at_irq;43,1090
static u32 wc_sec,45,1124
static u32 wc_sec, wc_nsec;45,1124
u64 cycle_to_ns(52,1402
static u64 ns_to_cycle(57,1472
static inline u64 get_time_delta(62,1542
s_time_t get_s_time(77,1876
void update_vcpu_system_time(90,2105
xen_timer_interrupt 97,2237
static struct irqaction __read_mostly xen_timer_irqaction 157,3990
ia64_time_init 163,4128
static void ia64_wallclock_set(170,4274
int __init init_xen_time(194,4952
int reprogram_timer(213,5423
void send_timer_event(235,5894
struct tm wallclock_time(244,6091
void get_wallclock(256,6322

xen/arch/ia64/xen/crash.c,36
void machine_crash_shutdown(20,555

xen/arch/ia64/xen/vhpt.c,919
__vhpt_flush(31,775
local_vhpt_flush(42,1057
vcpu_vhpt_flush(54,1407
vhpt_erase(66,1699
void vhpt_insert 81,2060
void vhpt_multiple_insert(95,2535
void __init vhpt_init(128,3722
domain_set_vhpt_size(157,4700
pervcpu_vhpt_alloc(173,5162
pervcpu_vhpt_free(205,6170
domain_purge_swtc_entries(214,6354
domain_purge_swtc_entries_vcpu_dirty_mask(229,6629
void vcpu_flush_vtlb_all(250,7274
static void __vcpu_flush_vtlb_all(274,7786
void domain_flush_vtlb_all(280,7936
__flush_vhpt_range(318,8945
cpu_flush_vhpt_range(338,9493
vcpu_flush_vhpt_range(344,9631
void vcpu_flush_tlb_vhpt_range 349,9759
void domain_flush_vtlb_range 361,10106
__domain_flush_vtlb_track_entry(405,11236
domain_flush_vtlb_track_entry(492,13469
static void flush_tlb_vhpt_all 503,13724
void domain_flush_tlb_vhpt(512,13866
void flush_tlb_for_log_dirty(522,14151
void flush_tlb_mask(551,14910
void gather_vhpt_stats(569,15334

xen/arch/ia64/xen/oprofile/perfmon.c,651
static int allow_virq;45,1610
static int allow_ints;46,1633
xenoprof_is_xen_mode(49,1668
xenoprof_handler(57,1828
#define XENOPROF_FMT_UUID 85,2785
static pfm_buffer_fmt_t xenoprof_fmt 88,2917
static char * get_cpu_type(94,3075
static int using_xenoprof;108,3342
xenprof_perfmon_init(111,3381
void xenoprof_perfmon_exit(123,3632
xenoprof_arch_init(136,3930
xenoprof_arch_reserve_counters(144,4089
xenoprof_arch_counter(151,4175
xenoprof_arch_setup_events(157,4254
xenoprof_arch_enable_virq(165,4360
xenoprof_arch_start(173,4459
xenoprof_arch_stop(181,4550
xenoprof_arch_disable_virq(188,4626
xenoprof_arch_release_counters(194,4689

xen/arch/ia64/xen/oprofile/xenoprof.c,124
xenoprofile_get_mode(30,1089
#define CPU_MODE_USER 39,1285
#define CPU_MODE_KERNEL 40,1319
#define CPU_MODE_XEN 41,1353

xen/arch/ia64/xen/dom_fw_sn2.c,53
#define SWAP_NASID(35,1105
sn2_dom_fw_init(38,1185

xen/arch/ia64/xen/idle0_task.c,123
#define IDLE_VCPU(5,70
		struct vcpu task;24,619
	} s;25,639
	unsigned long stack[stack26,645
} init_task_mem 27,709

xen/arch/ia64/xen/mm_init.c,254
struct ia64_mca_tlb_info ia64_mca_tlb_list[ia64_mca_tlb_list17,321
cpumask_t percpu_set;22,421
ia64_mmu_init 26,466
#	define pte_bits	55,1575
#	define mapped_space_bits	56,1597
#	define vmlpt_bits	64,2064
#	define POW2(65,2124
mem_init 100,3330

xen/arch/ia64/xen/tlb_track.c,476
#define CONFIG_TLB_TRACK_DEBUG29,1135
# define tlb_track_printd(31,1196
# define tlb_track_printd(34,1290
tlb_track_allocate_entries(38,1366
tlb_track_create(75,2697
tlb_track_destroy(130,4271
tlb_track_get_entry(150,4817
tlb_track_free_entry(169,5379
tlb_track_hash_head(182,5727
tlb_track_pte_zapped(191,6022
tlb_track_insert_or_dirty(203,6372
__vcpu_tlb_track_insert_or_dirty(407,13889
tlb_track_search_and_remove(427,14606
__tlb_track_entry_printf(501,17363

xen/arch/ia64/xen/sn_console.c,459
struct sn_console_data 13,264
	struct timer timer;14,289
	unsigned int timeout_ms;15,310
	int booted;16,336
static struct sn_console_data console_data 19,353
static void sn_putc(27,520
static int sn_getc(40,790
static void sn_endboot(49,917
static void sn_poll(57,1040
static void sn_init_postirq(72,1394
static struct uart_driver sn_sal_console 81,1634
static void __init early_sn_setup(94,1889
int __init sn_serial_console_early_setup(138,3235

xen/arch/ia64/xen/xenmem.c,693
#define FRAMETABLE_PGD_OFFSET(20,408
#define FRAMETABLE_PMD_OFFSET(24,533
#define FRAMETABLE_PTE_OFFSET(28,670
static unsigned long table_size;32,817
static bool_t __read_mostly opt_contig_mem;33,850
#define opt_contig_mem 36,945
struct page_info *frame_table __read_mostly;39,978
unsigned long max_page;40,1023
volatile unsigned long *mpt_table __read_mostly;45,1082
paging_init 48,1144
alloc_dir_page(86,2243
alloc_table_page(97,2447
create_page_table(110,2754
create_frametable_page_table 132,3355
create_mpttable_page_table 148,3788
void __init init_virtual_frametable(163,4209
ia64_mfn_valid 201,5479
#define FT_ALIGN_SIZE	224,6071
void __init init_frametable(225,6106

xen/arch/ia64/xen/cpufreq/cpufreq.c,544
static struct acpi_cpufreq_data *drv_data[drv_data31,837
static struct cpufreq_driver acpi_cpufreq_driver;33,890
processor_get_pstate 36,952
extract_clock 52,1234
processor_get_freq 69,1592
acpi_cpufreq_get 88,1883
processor_set_pstate 104,2145
processor_set_freq 118,2321
acpi_cpufreq_target 161,3260
acpi_cpufreq_verify 179,3708
acpi_cpufreq_cpu_init 195,4124
acpi_cpufreq_cpu_exit 263,5790
static struct cpufreq_driver acpi_cpufreq_driver 276,6009
static int __init cpufreq_driver_init(285,6278
int cpufreq_cpu_init(297,6485

xen/arch/ia64/xen/dom_fw_common.c,1029
#define ia64_fc(30,665
#define MAX_VIRT_CPUS 31,736
xen_ia64_efi_make_md(40,919
#define EFI_HYPERCALL_PATCH(52,1192
build_hypercall_bundle(70,1947
build_pal_hypercall_bundles(108,3045
build_fpswa_hypercall_bundle(204,5412
dom_fpswa_hypercall_patch(259,6471
dom_efi_hypercall_patch(293,7590
dom_fw_hypercall_patch(303,7915
dom_fw_pal_hypercall_patch(313,8211
print_md(322,8508
struct fake_acpi_tables 341,8968
	struct acpi_table_rsdp rsdp;342,8994
	struct acpi_table_xsdt xsdt;343,9024
	uint64_t madt_ptr;344,9054
	struct acpi_table_fadt fadt;345,9074
	struct acpi_table_facs facs;346,9104
	struct acpi_table_header dsdt;347,9134
	uint8_t aml[aml348,9166
	struct acpi_table_madt madt;349,9204
	struct acpi_table_lsapic lsapic[lsapic350,9234
	uint8_t pm1a_event_block[pm1a_event_block351,9283
	uint8_t pm1a_control_block[pm1a_control_block352,9313
	uint8_t pm_timer_block[pm_timer_block353,9345
#define ACPI_TABLE_MPA(355,9376
dom_fw_fake_acpi(360,9593
efi_mdt_cmp(513,14912
dom_fw_init(532,15238

xen/arch/ia64/xen/hpsimserial.c,104
static void hp_ski_putc(13,224
static struct uart_driver hp_ski 18,319
void hpsim_serial_init(20,380

xen/arch/ia64/xen/platform_hypercall.c,28
long do_platform_op(24,649

xen/arch/ia64/xen/pcdp.c,203
pcdp_hp_irq_fixup(42,1312
setup_pcdp_irq(107,3227
setup_serial_console(141,4307
setup_vga_console(165,4832
setup_serial_console(194,5482
setup_vga_console(212,5924
efi_setup_pcdp_console(230,6311

xen/arch/ia64/xen/privop.c,1822
static const long priv_verbose 19,382
static const int privify_en 23,513
static const int privify_en 25,552
static IA64FAULT priv_rfi(32,786
static IA64FAULT priv_bsw0(46,1200
static IA64FAULT priv_bsw1(51,1283
static IA64FAULT priv_cover(56,1366
static IA64FAULT priv_ptc_l(61,1451
static IA64FAULT priv_ptc_e(70,1675
static IA64FAULT priv_ptc_g(80,1964
static IA64FAULT priv_ptc_ga(89,2196
static IA64FAULT priv_ptr_d(98,2430
static IA64FAULT priv_ptr_i(107,2652
static IA64FAULT priv_tpa(116,2874
static IA64FAULT priv_tak(133,3320
static IA64FAULT priv_itr_d(154,3878
static IA64FAULT priv_itr_i(172,4349
static IA64FAULT priv_itc_d(189,4811
static IA64FAULT priv_itc_i(205,5221
static IA64FAULT priv_mov_to_ar_imm(225,5748
static IA64FAULT priv_mov_to_ar_reg(233,5968
static IA64FAULT priv_mov_to_pkr(255,6546
static IA64FAULT priv_mov_to_rr(262,6730
static IA64FAULT priv_mov_to_dbr(269,6912
static IA64FAULT priv_mov_to_ibr(276,7096
static IA64FAULT priv_mov_to_pmc(283,7280
static IA64FAULT priv_mov_to_pmd(290,7464
static IA64FAULT priv_mov_to_cr(297,7648
static IA64FAULT priv_rsm(359,8969
static IA64FAULT priv_ssm(365,9136
static IA64FAULT priv_mov_to_psr(374,9373
static IA64FAULT priv_mov_from_rr(384,9624
static IA64FAULT priv_mov_from_pkr(404,10112
static IA64FAULT priv_mov_from_dbr(416,10374
static IA64FAULT priv_mov_from_ibr(428,10636
static IA64FAULT priv_mov_from_pmc(440,10898
#define cr_get(460,11384
static IA64FAULT priv_mov_from_cr(464,11507
static IA64FAULT priv_mov_from_psr(530,12613
static const IA64_SLOT_TYPE slot_types[slot_types547,13069
typedef IA64FAULT(*PPEFCN)PPEFCN565,13690
static const PPEFCN Mpriv_funcs[Mpriv_funcs567,13746
static IA64FAULT priv_handle_op(586,14322
IA64FAULT priv_emulate(751,18661
int ia64_hyperprivop(778,19607

xen/arch/ia64/xen/dom_fw_asm.S,114
.global 25,783
.align 26,815
.proc 27,826
xen_ia64_pal_call_stub:xen_ia64_pal_call_stub28,856
.endp 43,1199

xen/arch/ia64/xen/regionreg.c,771
#define	IA64_MIN_IMPL_RID_BITS	47,1582
#define	IA64_MAX_IMPL_RID_BITS	49,1697
#define	MAX_RID_BLOCKS	52,1765
static unsigned int domain_rid_bits_default 55,1891
ia64_get_rr 69,2480
ia64_set_rr 77,2646
static unsigned long allocate_metaphysical_rr(83,2784
static int implemented_rid_bits 101,3297
static int mp_rid_shift;102,3334
static struct domain *ridblock_owner[ridblock_owner104,3398
void __init init_rid_allocator 106,3461
int allocate_rid_range(156,5029
int deallocate_rid_range(219,6642
set_rr(245,7240
ia64_new_rr7_vcpu(252,7364
int set_one_rr(263,7739
int set_one_rr_efi(309,9004
set_one_rr_efi_restore(331,9411
void set_virtual_rr0(355,10020
void set_metaphysical_rr0(364,10224
void init_all_rr(374,10428
void load_region_regs(404,11214

xen/arch/ia64/xen/privop_stat.c,836
struct privop_addr_count 9,150
	unsigned long addr[addr10,177
	unsigned int count[count11,219
	unsigned int overflow;12,261
struct privop_addr_info 15,289
	enum perfcounter perfc_addr;16,315
	enum perfcounter perfc_count;17,345
	enum perfcounter perfc_overflow;18,376
#define PERFCOUNTER(21,414
#define PERFCOUNTER_ARRAY(22,445
#define PERFSTATUS(24,489
#define PERFSTATUS_ARRAY(25,519
#define PERFPRIVOPADDR(27,562
static const struct privop_addr_info privop_addr_info[privop_addr_info34,840
#define PRIVOP_COUNT_NINSTS 38,932
void privop_count_addr(43,1120
void gather_privop_addrs(64,1516
void reset_privop_addrs(91,2175
static const char * const Mpriv_str[Mpriv_str113,2712
#define RS 132,3487
static const char * const cr_str[cr_str133,3505
static const char * const hyperpriv_str[hyperpriv_str148,4050

xen/arch/ia64/xen/vcpu.c,4656
	struct ia64_psr ia64_psr;42,1157
	unsigned long i64;43,1184
} PSR;44,1204
#define	IA64_PTA_SZ_BIT	49,1345
#define	IA64_PTA_VF_BIT	50,1372
#define	IA64_PTA_BASE_BIT	51,1399
#define	IA64_PTA_SZ(52,1428
#define IA64_PSR_NON_VIRT_BITS	54,1480
unsigned long vcpu_verbose 62,1790
u64 vcpu_get_gr(68,2025
IA64FAULT vcpu_get_gr_nat(79,2213
IA64FAULT vcpu_set_gr(93,2565
vcpu_get_fpreg(107,2891
vcpu_set_fpreg(115,3087
IA64FAULT vcpu_set_gr(127,3412
void vcpu_init_regs(142,3725
void vcpu_load_kernel_regs(199,5407
#define ia64_setreg_unknown_kr(212,5810
IA64FAULT vcpu_set_ar(214,5868
IA64FAULT vcpu_get_ar(232,6261
void vcpu_pkr_load_regs(259,7327
static void vcpu_pkr_set_psr_handling(268,7505
static void vcpu_set_metaphysical_mode(284,8016
IA64FAULT vcpu_reset_psr_dt(296,8300
IA64FAULT vcpu_reset_psr_sm(302,8410
IA64FAULT vcpu_set_psr_dt(353,9746
IA64FAULT vcpu_set_psr_i(359,9855
IA64FAULT vcpu_set_psr_sm(366,10010
IA64FAULT vcpu_set_psr_l(431,11588
IA64FAULT vcpu_set_psr(477,12690
u64 vcpu_get_psr(546,14246
IA64FAULT vcpu_get_psr_masked(581,15074
BOOLEAN vcpu_get_psr_ic(588,15234
BOOLEAN vcpu_get_psr_i(593,15328
void vcpu_pend_unspecified_interrupt(603,15618
void vcpu_pend_interrupt(608,15712
#define	IA64_TPR_MMI	629,16135
#define	IA64_TPR_MIC	630,16164
u64 vcpu_check_pending_interrupts(638,16590
u64 vcpu_deliverable_interrupts(707,18586
u64 vcpu_deliverable_timer(713,18728
IA64FAULT vcpu_get_lid(719,18865
IA64FAULT vcpu_get_ivr(726,19002
#define HEARTBEAT_FREQ 731,19080
#define N_DOMS 733,19149
IA64FAULT vcpu_get_tpr(799,20793
IA64FAULT vcpu_get_eoi(805,20895
IA64FAULT vcpu_get_irr0(811,21017
IA64FAULT vcpu_get_irr1(817,21124
IA64FAULT vcpu_get_irr2(823,21231
IA64FAULT vcpu_get_irr3(829,21338
IA64FAULT vcpu_get_itv(835,21445
IA64FAULT vcpu_get_pmv(841,21547
IA64FAULT vcpu_get_cmcv(847,21649
IA64FAULT vcpu_get_lrr0(853,21753
IA64FAULT vcpu_get_lrr1(862,21994
IA64FAULT vcpu_set_lid(871,22235
IA64FAULT vcpu_set_tpr(877,22369
IA64FAULT vcpu_set_eoi(888,22651
IA64FAULT vcpu_set_lrr0(917,23501
IA64FAULT vcpu_set_lrr1(927,23752
IA64FAULT vcpu_set_itv(937,24003
IA64FAULT vcpu_set_pmv(951,24289
IA64FAULT vcpu_set_cmcv(959,24456
u64 vcpu_get_tmp(970,24818
void vcpu_set_tmp(977,24924
BOOLEAN vcpu_timer_disabled(987,25206
BOOLEAN vcpu_timer_inservice(993,25317
BOOLEAN vcpu_timer_expired(999,25435
void vcpu_safe_set_itm(1013,25706
void vcpu_set_next_timer(1031,26081
IA64FAULT vcpu_set_itm(1056,26673
IA64FAULT vcpu_set_itc(1067,26926
#define DISALLOW_SETTING_ITC_FOR_NOW1069,26973
IA64FAULT vcpu_get_itm(1108,27914
IA64FAULT vcpu_get_itc(1116,28115
void vcpu_pend_timer(1123,28276
u64 vcpu_timer_pending_early(1148,29008
static void vcpu_force_tlb_miss(1164,29434
IA64FAULT vcpu_force_inst_miss(1171,29620
IA64FAULT vcpu_force_data_miss(1178,29798
IA64FAULT vcpu_rfi(1185,29976
IA64FAULT vcpu_cover(1201,30234
IA64FAULT vcpu_thash(1213,30474
IA64FAULT vcpu_ttag(1237,31313
int warn_region0_address 1243,31453
static inline int range_overlap(1246,31597
check_xen_space_overlap(1254,31851
static inline int vcpu_match_tr_entry_no_p(1276,32592
static inline int vcpu_match_tr_entry(1283,32811
vcpu_match_tr_entry_range(1289,32969
static TR_ENTRY *vcpu_tr_lookup(vcpu_tr_lookup1297,33156
vcpu_get_domain_bundle(1332,33887
IA64FAULT vcpu_translate(1427,36273
IA64FAULT vcpu_tpa(1560,40556
IA64FAULT vcpu_tak(1574,40941
IA64FAULT vcpu_set_dbr(1592,41440
IA64FAULT vcpu_set_ibr(1616,41984
IA64FAULT vcpu_get_dbr(1640,42572
IA64FAULT vcpu_get_ibr(1648,42747
IA64FAULT vcpu_set_pmc(1660,43126
IA64FAULT vcpu_set_pmd(1671,43424
IA64FAULT vcpu_get_pmc(1682,43722
IA64FAULT vcpu_get_pmd(1693,43989
#define vcpu_bsw0_unat(1707,44454
IA64FAULT vcpu_bsw0(1720,45031
#define vcpu_bsw1_unat(1757,45926
IA64FAULT vcpu_bsw1(1770,46436
IA64FAULT vcpu_get_cpuid(1811,47522
unsigned long vcpu_get_rr_ve(1844,48224
IA64FAULT vcpu_set_rr(1852,48351
IA64FAULT vcpu_get_rr(1867,48698
IA64FAULT vcpu_set_rr0_to_rr4(1877,48887
IA64FAULT vcpu_get_pkr(1918,50167
IA64FAULT vcpu_set_pkr(1927,50378
vcpu_set_tr_entry_rid(1952,51012
vcpu_set_tr_entry(1975,51523
IA64FAULT vcpu_itr_d(1981,51689
IA64FAULT vcpu_itr_i(2008,52405
IA64FAULT vcpu_set_itr(2035,53121
IA64FAULT vcpu_set_dtr(2054,53639
vcpu_rebuild_vhpt(2078,54362
vcpu_itc_no_srlz(2093,54745
IA64FAULT vcpu_itc_d(2131,56121
IA64FAULT vcpu_itc_i(2159,56932
IA64FAULT vcpu_ptc_l(2187,57748
IA64FAULT vcpu_fc(2209,58546
IA64FAULT vcpu_ptc_e(2227,58920
IA64FAULT vcpu_ptc_g(2238,59196
IA64FAULT vcpu_ptc_ga(2244,59341
IA64FAULT vcpu_ptr_d(2258,59769
IA64FAULT vcpu_ptr_i(2290,60554

xen/arch/ia64/xen/machine_kexec.c,608
#define kexec_flush_icache_page(29,700
int machine_kexec_load(35,893
void machine_kexec_unload(40,978
static void ia64_machine_kexec(44,1055
static void machine_shutdown(79,2098
void machine_kexec(93,2315
void machine_reboot_kexec(100,2442
static int machine_kexec_get_xen(105,2522
#define ELF_PAGE_SHIFT 112,2689
#define ELF_PAGE_SIZE 113,2715
#define ELF_PAGE_MASK 114,2777
static int machine_kexec_get_xenheap(116,2824
static int machine_kexec_get_boot_param(126,3117
static int machine_kexec_get_efi_memmap(133,3279
int machine_kexec_get(140,3455
void arch_crash_save_vmcoreinfo(155,3849

xen/arch/ia64/xen/xenpatch.c,211
get_imm64 42,1545
ia64_patch 57,2049
#define insn_mask 60,2158
ia64_patch_imm64 78,2592
static void __init xen_patch_frametable_miss(97,3298
ia64_patch_vtop 118,3879
void __init xen_patch_kernel(135,4219

xen/arch/ia64/xen/irq.c,1417
#define apicid_to_phys_cpu_present(49,1360
unsigned int __ia64_local_vector_to_irq 52,1428
irq_desc_t irq_desc[irq_desc77,2260
struct irq_cfg irq_cfg[irq_cfg85,2405
void no_action(98,2592
static void enable_none(104,2695
static unsigned int startup_none(105,2741
static void disable_none(106,2806
static void ack_none(107,2853
#define shutdown_none	118,3231
#define end_none	119,3266
hw_irq_controller no_irq_type 121,3296
fastcall unsigned int __do_IRQ(143,3729
int setup_vector(236,6052
unsigned long ia64_xen_vector[ia64_xen_vector267,6812
int setup_irq_vector(269,6868
void release_irq_vector(282,7154
#define IRQ_MAX_GUESTS 312,7738
    u8 nr_guests;314,7780
    u8 in_flight;315,7798
    u8 shareable;316,7816
    u8 ack_type;317,7834
#define ACKTYPE_NONE 318,7851
#define ACKTYPE_UNMASK 319,7923
    struct domain *guest[guest320,7990
} irq_guest_action_t;321,8032
static inline void set_pirq_eoi(323,8055
static inline void clear_pirq_eoi(329,8204
static void _irq_guest_eoi(335,8357
static struct timer irq_guest_eoi_timer[irq_guest_eoi_timer350,8784
static void irq_guest_eoi_timer_fn(351,8834
void __do_IRQ_guest(361,9043
static int pirq_acktype(413,10654
int pirq_guest_eoi(426,10938
int pirq_guest_unmask(456,11626
int pirq_guest_bind(473,12010
void pirq_guest_unbind(557,14324
xen_debug_irq(594,15351
void pirq_set_affinity(613,15830
void irq_exit(621,15999

xen/arch/ia64/xen/pci.c,346
#define PCI_SAL_ADDRESS(28,684
#define PCI_SAL_EXT_ADDRESS(33,855
pci_sal_read 37,983
pci_sal_write 62,1605
uint8_t pci_conf_read8(85,2172
uint16_t pci_conf_read16(94,2450
uint32_t pci_conf_read32(103,2731
void pci_conf_write8(112,3012
void pci_conf_write16(120,3258
void pci_conf_write32(128,3506
int pci_find_ext_capability(136,3754

xen/arch/ia64/xen/domain.c,2772
static unsigned long __initdata dom0_size 61,1616
static unsigned int __initdata dom0_max_vcpus 64,1750
static void flush_vtlb_for_context_switch(81,2226
static void flush_cache_for_context_switch(136,3881
static void set_current_psr_i_addr(158,4467
static void clear_current_psr_i_addr(167,4744
static void lazy_fp_switch(173,4889
static void load_state(204,5583
void schedule_tail(214,5782
void context_switch(231,6120
void continue_running(313,8755
static int pal_halt 319,8844
static int can_do_pal_halt 320,8876
static int __init nohalt_setup(322,8909
update_pal_halt_status(330,9051
#define can_do_pal_halt	335,9141
static void default_idle(338,9177
static void continue_cpu_idle_loop(352,9397
void startup_cpu_idle_loop(373,9802
void hlt_timer_fn(390,10311
void relinquish_vcpu_resources(396,10388
struct domain *alloc_domain_struct(alloc_domain_struct408,10696
void free_domain_struct(427,11130
struct vcpu *alloc_vcpu_struct(alloc_vcpu_struct436,11292
void free_vcpu_struct(467,11985
int vcpu_initialise(472,12091
static void vcpu_share_privregs_with_guest(509,13333
int vcpu_late_initialise(528,14017
void vcpu_destroy(550,14495
vcpu_to_rbs_bottom(559,14651
static void init_switch_stack(564,14746
static int opt_pervcpu_vhpt 582,15413
int arch_domain_create(586,15503
void arch_domain_destroy(666,17952
void arch_vcpu_reset(687,18348
static unsigned long num_phys_stacked;693,18491
init_num_phys_stacked(695,18548
#define COPY_FPREG(713,18968
#define AR_PFS_PEC_SHIFT	715,19042
#define AR_PFS_REC_SIZE	716,19070
#define AR_PFS_PEC_MASK	717,19097
vcpu_to_switch_stack(723,19223
vcpu_has_not_run(729,19335
nats_update(739,19584
__vcpu_get_itc(750,19757
__vcpu_set_itc(769,20126
void arch_get_info_guest(791,20508
#define NATS_UPDATE(929,24849
#undef NATS_UPDATE981,26025
__rbs_print(1122,30374
#define rbs_print(1144,30967
copy_rbs(1149,31084
unat_update(1254,34672
int arch_set_info_guest(1263,34873
#define UNAT_UPDATE(1497,42716
#undef UNAT_UPDATE1545,43724
static int relinquish_memory(1647,46542
int domain_relinquish_resources(1716,48714
domain_set_shared_info_va 1771,49844
#define SHADOW_COPY_CHUNK 1804,50824
int shadow_mode_control(1806,50856
#define	privify_memory(1963,54499
static void __init loaddomainelfimage(1966,54550
static void __init calc_dom0_size(2021,56151
static void __init physdev_init_dom0(2084,58248
int __init construct_dom0(2094,58462
struct vcpu *__init alloc_dom0_vcpu0(2306,64979
void machine_restart(2324,65551
void machine_halt(2337,65824
void sync_local_execstate(2349,65981
void sync_vcpu_execstate(2353,66018
arch_do_vcpu_op(2361,66216
optf_identity_mapping_cmd_to_flg(2405,67026
optf_set_identity_mapping(2423,67407
domain_opt_feature(2444,67848

xen/arch/ia64/xen/xenasm.S,397
.vhpt_overlaps:.vhpt_overlaps142,4016
ia64_new_rr7_efi_percpu_not_mapped:ia64_new_rr7_efi_percpu_not_mapped304,7722
ia64_new_rr7_efi_vpd_not_mapped:ia64_new_rr7_efi_vpd_not_mapped333,8153
.ret22:.ret22360,8836
.ret23:.ret23373,9192
.ret24:.ret24386,9557
.failure_in_get_bundle:.failure_in_get_bundle399,9841
static:static421,10210
.loop:.loop452,11126
stacked:stacked504,12518

xen/arch/ia64/xen/flushd.S,21
.Loop:.Loop53,1209

xen/arch/ia64/xen/gdbstub.c,3072
#define USE_UNWIND40,1163
#define dbg_printk(48,1328
gdb_arch_signal_num(52,1403
gdb_arch_read_reg_array(59,1512
gdb_arch_write_reg(65,1629
gdb_arch_write_reg_array(72,1804
gdb_arch_copy_from_user(82,2107
gdb_arch_copy_to_user(106,2664
#define NUM_REGS 112,2765
#define REGISTER_BYTES 113,2786
#define REGISTER_BYTE(114,2828
#define REGISTER_SIZE(117,3010
#define IA64_GR0_REGNUM 119,3148
#define IA64_FR0_REGNUM 120,3182
#define IA64_FR127_REGNUM 121,3218
#define IA64_PR0_REGNUM 122,3272
#define IA64_BR0_REGNUM 123,3308
#define IA64_VFP_REGNUM 124,3344
#define IA64_PR_REGNUM 125,3380
#define IA64_IP_REGNUM 126,3416
#define IA64_PSR_REGNUM 127,3452
#define IA64_CFM_REGNUM 128,3488
#define IA64_AR0_REGNUM 129,3524
#define IA64_NAT0_REGNUM 130,3560
#define IA64_NAT31_REGNUM 131,3596
#define IA64_NAT32_REGNUM 132,3650
#define IA64_RSC_REGNUM	133,3704
#define IA64_BSP_REGNUM	134,3751
#define IA64_BSPSTORE_REGNUM	135,3798
#define IA64_RNAT_REGNUM	136,3848
#define IA64_FCR_REGNUM	137,3895
#define IA64_EFLAG_REGNUM	138,3942
#define IA64_CSD_REGNUM	139,3990
#define IA64_SSD_REGNUM	140,4037
#define IA64_CFLG_REGNUM	141,4084
#define IA64_FSR_REGNUM	142,4131
#define IA64_FIR_REGNUM	143,4178
#define IA64_FDR_REGNUM	144,4225
#define IA64_CCV_REGNUM	145,4272
#define IA64_UNAT_REGNUM	146,4319
#define IA64_FPSR_REGNUM	147,4366
#define IA64_ITC_REGNUM	148,4413
#define IA64_PFS_REGNUM	149,4460
#define IA64_LC_REGNUM	150,4507
#define IA64_EC_REGNUM	151,4553
struct regs_to_cpu_user_resgs_index 154,4619
	unsigned int reg;155,4657
	unsigned int ptregoff;156,4676
#define ptoff(159,4704
gr_reg_to_cpu_user_regs_index[gr_reg_to_cpu_user_regs_index163,4827
static const int gr_reg_to_cpu_user_regs_index_max 198,6006
br_reg_to_cpu_user_regs_index[br_reg_to_cpu_user_regs_index204,6200
static const int br_reg_to_cpu_user_regs_index_max 209,6344
fr_reg_to_cpu_user_regs_index[fr_reg_to_cpu_user_regs_index215,6537
static const int fr_reg_to_cpu_user_regs_index_max 223,6794
gdb_arch_read_reg(229,6941
#define	ptoff(310,9442
struct reg_to_ptreg_index 311,9504
	unsigned int reg;312,9532
	unsigned int ptregoff;313,9551
static struct reg_to_ptreg_index gr_reg_to_ptreg_index[gr_reg_to_ptreg_index316,9579
static struct reg_to_ptreg_index br_reg_to_ptreg_index[br_reg_to_ptreg_index346,10633
static struct reg_to_ptreg_index ar_reg_to_ptreg_index[ar_reg_to_ptreg_index352,10799
static int kgdb_gr_reg(368,11254
static int kgdb_gr_ptreg(381,11600
static int kgdb_br_reg(415,12596
static int kgdb_fr_reg(459,13653
static int kgdb_ar_reg(514,14931
void kgdb_get_reg(588,16749
static int inline kgdb_get_blocked_state(668,18546
struct gdb_callback_arg704,19186
	struct cpu_user_regs*		regs;706,19212
	unsigned long				regnum;707,19242
	unsigned long*				reg;708,19268
	struct pt_fpreg*			freg;709,19292
	int							error;711,19319
gdb_get_reg_callback(718,19449
gdb_arch_read_reg(739,20013
gdb_arch_resume(784,21174
gdb_arch_print_state(795,21409
gdb_arch_enter(801,21482
gdb_arch_exit(807,21553

xen/arch/ia64/xen/relocate_kernel.S,39
tlb_purge_done:tlb_purge_done59,1467

xen/arch/ia64/linux/pcdp.h,2024
#define PCDP_CONSOLE	16,530
#define PCDP_DEBUG	17,555
#define PCDP_CONSOLE_OUTPUT	18,578
#define PCDP_CONSOLE_INPUT	19,609
#define PCDP_UART	21,640
#define PCDP_VGA	22,669
#define PCDP_USB	23,697
#define PCDP_CONSOLE_UART	26,768
#define PCDP_DEBUG_UART	27,822
#define PCDP_CONSOLE_VGA	28,873
#define PCDP_CONSOLE_USB	29,933
#define PCDP_UART_EDGE_SENSITIVE	32,1015
#define PCDP_UART_ACTIVE_LOW	33,1057
#define PCDP_UART_PRIMARY_CONSOLE	34,1096
#define PCDP_UART_IRQ	35,1139
#define PCDP_UART_PCI	36,1202
struct pcdp_uart 38,1266
	u8				type;39,1285
	u8				bits;40,1298
	u8				parity;41,1311
	u8				stop_bits;42,1326
	u8				pci_seg;43,1344
	u8				pci_bus;44,1360
	u8				pci_dev;45,1376
	u8				pci_func;46,1392
	u64				baud;47,1409
	struct acpi_generic_address	addr;48,1423
	u16				pci_dev_id;49,1458
	u16				pci_vendor_id;50,1478
	u32				gsi;51,1501
	u32				clock_rate;52,1514
	u8				pci_prog_intfc;53,1534
	u8				flags;54,1557
	u16				conout_index;55,1571
	u32				reserved;56,1593
#define PCDP_IF_PCI	59,1639
#define PCDP_PCI_TRANS_IOPORT	62,1686
#define PCDP_PCI_TRANS_MMIO	63,1721
struct pcdp_if_pci 65,1755
	u8			interconnect;66,1776
	u8			reserved;67,1796
	u16			length;68,1812
	u8			segment;69,1827
	u8			bus;70,1842
	u8			dev;71,1853
	u8			fun;72,1864
	u16			dev_id;73,1875
	u16			vendor_id;74,1890
	u32			acpi_interrupt;75,1908
	u64			mmio_tra;76,1931
	u64			ioport_tra;77,1948
	u8			flags;78,1967
	u8			trans;79,1980
struct pcdp_vga 82,2021
	u8			count;83,2039
#define PCDP_PRIMARY_CONSOLE	87,2137
struct pcdp_device 89,2169
	u8			type;90,2190
	u8			flags;91,2202
	u16			length;92,2215
	u16			efi_index;93,2230
struct pcdp 98,2411
	u8			signature[signature99,2425
	u32			length;100,2445
	u8			rev;101,2460
	u8			chksum;102,2497
	u8			oemid[oemid103,2511
	u8			oem_tabid[oem_tabid104,2527
	u32			oem_rev;105,2547
	u8			creator_id[creator_id106,2563
	u32			creator_rev;107,2584
	u32			num_uarts;108,2604
	struct pcdp_uart	uart[uart109,2622

xen/arch/ia64/linux/flush.S,21
.Loop:.Loop50,1159

xen/arch/ia64/linux/io.c,995
void memcpy_fromio(10,169
void memcpy_toio(25,451
void memset_io(40,709
#undef __ia64_inb54,928
#undef __ia64_inw55,946
#undef __ia64_inl56,964
#undef __ia64_outb57,982
#undef __ia64_outw58,1001
#undef __ia64_outl59,1020
#undef __ia64_readb60,1039
#undef __ia64_readw61,1059
#undef __ia64_readl62,1079
#undef __ia64_readq63,1099
#undef __ia64_readb_relaxed64,1119
#undef __ia64_readw_relaxed65,1147
#undef __ia64_readl_relaxed66,1175
#undef __ia64_readq_relaxed67,1203
#undef __ia64_writeb68,1231
#undef __ia64_writew69,1252
#undef __ia64_writel70,1273
#undef __ia64_writeq71,1294
#undef __ia64_mmiowb72,1315
__ia64_inb 75,1350
__ia64_inw 81,1427
__ia64_inl 87,1504
__ia64_outb 93,1573
__ia64_outw 99,1661
__ia64_outl 105,1750
__ia64_readb 111,1846
__ia64_readw 117,1930
__ia64_readl 123,2012
__ia64_readq 129,2095
__ia64_readb_relaxed 135,2178
__ia64_readw_relaxed 141,2270
__ia64_readl_relaxed 147,2360
__ia64_readq_relaxed 153,2451
__ia64_mmiowb(159,2533

xen/arch/ia64/linux/bitop.c,62
int __find_next_zero_bit 11,201
int __find_next_bit(52,1042

xen/arch/ia64/linux/memset.S,388
.pref_l1a:.pref_l1a146,4005
.l1ax:.l1ax156,4213
.l1b:.l1b198,5046
.pref_l1b:.pref_l1b216,5677
.l1bx:.l1bx226,5883
.fraction_of_line:.fraction_of_line250,6384
.l2:.l2265,6701
.store_words:.store_words274,6928
.move_bytes_from_alignment:.move_bytes_from_alignment295,7405
.restore_and_exit:.restore_and_exit313,7835
.move_bytes_unaligned:.move_bytes_unaligned320,7920

xen/arch/ia64/linux/machvec.c,203
struct ia64_machine_vector ia64_mv;14,207
lookup_machvec 18,304
machvec_init 32,596
machvec_setup 47,913
machvec_timer_interrupt 53,980
machvec_dma_sync_single 59,1100
machvec_dma_sync_sg 66,1249

xen/arch/ia64/linux/memcpy_mck.S,807
.common_code:.common_code89,1775
.aligned_src:.aligned_src106,2265
.prefetch:.prefetch128,2735
.medium_copy:.medium_copy134,2853
.aligned_src_tail:.aligned_src_tail164,3664
.long_copy:.long_copy185,4253
.prefetch_loop:.prefetch_loop208,4909
.line_copy:.line_copy217,5201
.unaligned_src:.unaligned_src273,7191
.4k_block:.4k_block282,7362
.noloop:.noloop349,9273
.unaligned_src_tail:.unaligned_src_tail362,9491
.memcpy_short:.memcpy_short402,10441
.align_dest:.align_dest463,12041
.jump_table:.jump_table514,13817
.jmp1:.jmp1516,13859
.ex_hndlr_s:.ex_hndlr_s562,15091
.ex_hndlr_d:.ex_hndlr_d566,15146
.ex_hndlr_lcpy_1:.ex_hndlr_lcpy_1570,15201
.ex_handler_lcpy:.ex_handler_lcpy581,15470
.ex_handler:.ex_handler587,15699
.ex_handler_short:.ex_handler_short592,15812

xen/arch/ia64/linux/copy_page_mck.S,72
.prefetch_loop:.prefetch_loop131,4302
.line_copy:.line_copy140,4633

xen/arch/ia64/linux/numa.c,186
int num_node_memblks;28,786
struct node_memblk_s node_memblk[node_memblk29,808
struct node_cpuid_s node_cpuid[node_cpuid30,859
u8 numa_slit[numa_slit35,1027
paddr_to_nid(39,1132

xen/arch/ia64/linux/pal.S,62
pal_entry_point:pal_entry_point19,523
.ret0:.ret0118,2809

xen/arch/ia64/linux/dig/machvec.c,73
#define MACHVEC_PLATFORM_NAME	1,0
#define MACHVEC_PLATFORM_HEADER	2,35

xen/arch/ia64/linux/irq_lsapic.c,95
lsapic_noop_startup 18,500
lsapic_noop 24,567
hw_irq_controller irq_type_ia64_lsapic 29,627

xen/arch/ia64/linux/clear_page.S,23
.fetch:.fetch46,1036

xen/arch/ia64/linux/hp/zx1/hpzx1_machvec.c,73
#define MACHVEC_PLATFORM_NAME	1,0
#define MACHVEC_PLATFORM_HEADER	2,37

xen/arch/ia64/linux/strlen.S,28
.recover:.recover168,5710

xen/arch/ia64/linux/extable.c,136
static int cmp_ex(14,303
static void swap_ex(28,573
void sort_extable 50,1346
search_extable 58,1578
ia64_handle_exception 81,2153

xen/arch/ia64/linux/sn/pci/pcibr/pcibr_reg.c,505
union br_ptr 18,481
	struct tiocp tio;19,496
	struct pic pic;20,515
void pcireg_control_bit_clr(26,621
void pcireg_control_bit_set(46,1139
u64 pcireg_tflush_get(69,1733
u64 pcireg_intr_status_get(99,2455
void pcireg_intr_enable_bit_clr(124,3079
void pcireg_intr_enable_bit_set(144,3607
void pcireg_intr_addr_addr_set(167,4220
void pcireg_force_intr_set(197,5076
u64 pcireg_wrb_flush_get(220,5664
void pcireg_int_ate_set(244,6294
u64 __iomem *pcireg_int_ate_addr(pcireg_int_ate_addr265,6823

xen/arch/ia64/linux/sn/kernel/machvec.c,77
#define MACHVEC_PLATFORM_NAME	9,256
#define MACHVEC_PLATFORM_HEADER	10,290

xen/arch/ia64/linux/sn/kernel/ptc_deadlock.S,70
sn2_ptc_deadlock_recovery_core:sn2_ptc_deadlock_recovery_core20,543

xen/arch/ia64/linux/linuxextable.c,237
void __init sort_main_extable(31,1282
const struct exception_table_entry *search_exception_tables(search_exception_tables37,1438
static int core_kernel_text(47,1688
int __kernel_text_address(59,1933
int kernel_text_address(66,2070

xen/arch/ia64/linux/efi_stub.S,63
.ret0:.ret066,2152
.ret1:.ret176,2335
.ret2:.ret281,2506

xen/arch/ia64/tools/p2m_expose/expose_p2m.c,174
#define printd(30,1105
local_flush_tlb_all 35,1259
do_p2m(58,1985
do_with_hypercall(84,2644
do_with_table(93,2865
expose_p2m_init(102,3083
expose_p2m_cleanup(177,4859

xen/arch/ia64/tools/privify/privify_elf64.c,206
#define ELFSIZE 12,221
#define MAX_FILSIZ 15,264
unsigned long buf[buf16,298
usage 19,364
panic 25,457
read_file(32,534
write_file(52,1102
#define IS_ELF(64,1299
privify_elf(71,1557
main(99,2262

xen/arch/ia64/tools/privify/privify.c,11340
typedef unsigned long long u64;11,185
typedef unsigned long long IA64_INST;12,217
typedef union U_IA64_BUNDLE 14,256
    u64 i64[i6415,286
    struct { u64 16,302
    struct { u64 template:5,slot0:slot016,302
    struct { u64 template:5,slot0:41,slot1a:slot1a16,302
    struct { u64 template:5,slot0:41,slot1a:18,slot1b:slot1b16,302
    struct { u64 template:5,slot0:41,slot1a:18,slot1b:23,slot2:slot216,302
} IA64_BUNDLE;20,533
typedef enum E_IA64_SLOT_TYPE 22,549
typedef enum E_IA64_SLOT_TYPE { I,22,549
typedef enum E_IA64_SLOT_TYPE { I, M,22,549
typedef enum E_IA64_SLOT_TYPE { I, M, F,22,549
typedef enum E_IA64_SLOT_TYPE { I, M, F, B,22,549
typedef enum E_IA64_SLOT_TYPE { I, M, F, B, L,22,549
typedef enum E_IA64_SLOT_TYPE { I, M, F, B, L, ILLEGAL 22,549
typedef enum E_IA64_SLOT_TYPE { I, M, F, B, L, ILLEGAL } IA64_SLOT_TYPE;22,549
typedef union U_INST64_A5 24,623
    IA64_INST inst;25,651
    struct { u64 qp:qp26,671
    struct { u64 qp:6, r1:r126,671
    struct { u64 qp:6, r1:7, imm7b:imm7b26,671
    struct { u64 qp:6, r1:7, imm7b:7, r3:r326,671
    struct { u64 qp:6, r1:7, imm7b:7, r3:2, imm5c:imm5c26,671
    struct { u64 qp:6, r1:7, imm7b:7, r3:2, imm5c:5, imm9d:imm9d26,671
    struct { u64 qp:6, r1:7, imm7b:7, r3:2, imm5c:5, imm9d:9, s:s26,671
    struct { u64 qp:6, r1:7, imm7b:7, r3:2, imm5c:5, imm9d:9, s:1, major:major26,671
} INST64_A5;27,750
typedef union U_INST64_B4 29,764
    IA64_INST inst;30,792
    struct { u64 qp:qp31,812
    struct { u64 qp:6, btype:btype31,812
    struct { u64 qp:6, btype:3, un3:un331,812
    struct { u64 qp:6, btype:3, un3:3, p:p31,812
    struct { u64 qp:6, btype:3, un3:3, p:1, b2:b231,812
    struct { u64 qp:6, btype:3, un3:3, p:1, b2:3, un11:un1131,812
    struct { u64 qp:6, btype:3, un3:3, p:1, b2:3, un11:11, x6:x631,812
    struct { u64 qp:6, btype:3, un3:3, p:1, b2:3, un11:11, x6:6, wh:wh31,812
    struct { u64 qp:6, btype:3, un3:3, p:1, b2:3, un11:11, x6:6, wh:2, d:d31,812
    struct { u64 qp:6, btype:3, un3:3, p:1, b2:3, un11:11, x6:6, wh:2, d:1, un1:un131,812
    struct { u64 qp:6, btype:3, un3:3, p:1, b2:3, un11:11, x6:6, wh:2, d:1, un1:1, major:major31,812
} INST64_B4;32,907
typedef union U_INST64_B8 34,921
    IA64_INST inst;35,949
    struct { u64 qp:qp36,969
    struct { u64 qp:6, un21:un2136,969
    struct { u64 qp:6, un21:21, x6:x636,969
    struct { u64 qp:6, un21:21, x6:6, un4:un436,969
    struct { u64 qp:6, un21:21, x6:6, un4:4, major:major36,969
} INST64_B8;37,1026
typedef union U_INST64_B9 39,1040
    IA64_INST inst;40,1068
    struct { u64 qp:qp41,1088
    struct { u64 qp:6, imm20:imm2041,1088
    struct { u64 qp:6, imm20:20, :1, x6:x641,1088
    struct { u64 qp:6, imm20:20, :1, x6:6, :3, i:i41,1088
    struct { u64 qp:6, imm20:20, :1, x6:6, :3, i:1, major:major41,1088
} INST64_B9;42,1152
typedef union U_INST64_I19 44,1166
    IA64_INST inst;45,1195
    struct { u64 qp:qp46,1215
    struct { u64 qp:6, imm20:imm2046,1215
    struct { u64 qp:6, imm20:20, :1, x6:x646,1215
    struct { u64 qp:6, imm20:20, :1, x6:6, x3:x346,1215
    struct { u64 qp:6, imm20:20, :1, x6:6, x3:3, i:i46,1215
    struct { u64 qp:6, imm20:20, :1, x6:6, x3:3, i:1, major:major46,1215
} INST64_I19;47,1281
typedef union U_INST64_I26 49,1296
    IA64_INST inst;50,1325
    struct { u64 qp:qp51,1345
    struct { u64 qp:6, :7, r2:r251,1345
    struct { u64 qp:6, :7, r2:7, ar3:ar351,1345
    struct { u64 qp:6, :7, r2:7, ar3:7, x6:x651,1345
    struct { u64 qp:6, :7, r2:7, ar3:7, x6:6, x3:x351,1345
    struct { u64 qp:6, :7, r2:7, ar3:7, x6:6, x3:3, :1, major:major51,1345
} INST64_I26;52,1412
typedef union U_INST64_I27 54,1427
    IA64_INST inst;55,1456
    struct { u64 qp:qp56,1476
    struct { u64 qp:6, :7, imm:imm56,1476
    struct { u64 qp:6, :7, imm:7, ar3:ar356,1476
    struct { u64 qp:6, :7, imm:7, ar3:7, x6:x656,1476
    struct { u64 qp:6, :7, imm:7, ar3:7, x6:6, x3:x356,1476
    struct { u64 qp:6, :7, imm:7, ar3:7, x6:6, x3:3, s:s56,1476
    struct { u64 qp:6, :7, imm:7, ar3:7, x6:6, x3:3, s:1, major:major56,1476
} INST64_I27;57,1545
typedef union U_INST64_I28 59,1560
    IA64_INST inst;60,1621
    struct { u64 qp:qp61,1641
    struct { u64 qp:6, r1:r161,1641
    struct { u64 qp:6, r1:7, :7, ar3:ar361,1641
    struct { u64 qp:6, r1:7, :7, ar3:7, x6:x661,1641
    struct { u64 qp:6, r1:7, :7, ar3:7, x6:6, x3:x361,1641
    struct { u64 qp:6, r1:7, :7, ar3:7, x6:6, x3:3, :1, major:major61,1641
} INST64_I28;62,1708
typedef union U_INST64_M28 64,1723
    IA64_INST inst;65,1752
    struct { u64 qp:qp66,1772
    struct { u64 qp:6, :14, r3:r366,1772
    struct { u64 qp:6, :14, r3:7, x6:x666,1772
    struct { u64 qp:6, :14, r3:7, x6:6, x3:x366,1772
    struct { u64 qp:6, :14, r3:7, x6:6, x3:3, :1, major:major66,1772
} INST64_M28;67,1833
typedef union U_INST64_M29 69,1848
    IA64_INST inst;70,1877
    struct { u64 qp:qp71,1897
    struct { u64 qp:6, :7, r2:r271,1897
    struct { u64 qp:6, :7, r2:7, ar3:ar371,1897
    struct { u64 qp:6, :7, r2:7, ar3:7, x6:x671,1897
    struct { u64 qp:6, :7, r2:7, ar3:7, x6:6, x3:x371,1897
    struct { u64 qp:6, :7, r2:7, ar3:7, x6:6, x3:3, :1, major:major71,1897
} INST64_M29;72,1964
typedef union U_INST64_M30 74,1979
    IA64_INST inst;75,2008
    struct { u64 qp:qp76,2028
    struct { u64 qp:6, :7, imm:imm76,2028
    struct { u64 qp:6, :7, imm:7, ar3:ar376,2028
    struct { u64 qp:6, :7, imm:7, ar3:7,x4:x476,2028
    struct { u64 qp:6, :7, imm:7, ar3:7,x4:4,x2:x276,2028
    struct { u64 qp:6, :7, imm:7, ar3:7,x4:4,x2:2,x3:x376,2028
    struct { u64 qp:6, :7, imm:7, ar3:7,x4:4,x2:2,x3:3,s:s76,2028
    struct { u64 qp:6, :7, imm:7, ar3:7,x4:4,x2:2,x3:3,s:1,major:major76,2028
} INST64_M30;77,2098
typedef union U_INST64_M31 79,2113
    IA64_INST inst;80,2142
    struct { u64 qp:qp81,2162
    struct { u64 qp:6, r1:r181,2162
    struct { u64 qp:6, r1:7, :7, ar3:ar381,2162
    struct { u64 qp:6, r1:7, :7, ar3:7, x6:x681,2162
    struct { u64 qp:6, r1:7, :7, ar3:7, x6:6, x3:x381,2162
    struct { u64 qp:6, r1:7, :7, ar3:7, x6:6, x3:3, :1, major:major81,2162
} INST64_M31;82,2229
typedef union U_INST64_M32 84,2244
    IA64_INST inst;85,2273
    struct { u64 qp:qp86,2293
    struct { u64 qp:6, :7, r2:r286,2293
    struct { u64 qp:6, :7, r2:7, cr3:cr386,2293
    struct { u64 qp:6, :7, r2:7, cr3:7, x6:x686,2293
    struct { u64 qp:6, :7, r2:7, cr3:7, x6:6, x3:x386,2293
    struct { u64 qp:6, :7, r2:7, cr3:7, x6:6, x3:3, :1, major:major86,2293
} INST64_M32;87,2360
typedef union U_INST64_M33 89,2375
    IA64_INST inst;90,2404
    struct { u64 qp:qp91,2424
    struct { u64 qp:6, r1:r191,2424
    struct { u64 qp:6, r1:7, :7, cr3:cr391,2424
    struct { u64 qp:6, r1:7, :7, cr3:7, x6:x691,2424
    struct { u64 qp:6, r1:7, :7, cr3:7, x6:6, x3:x391,2424
    struct { u64 qp:6, r1:7, :7, cr3:7, x6:6, x3:3, :1, major:major91,2424
} INST64_M33;92,2492
typedef union U_INST64_M35 94,2507
    IA64_INST inst;95,2536
    struct { u64 qp:qp96,2556
    struct { u64 qp:6, :7, r2:r296,2556
    struct { u64 qp:6, :7, r2:7, :7, x6:x696,2556
    struct { u64 qp:6, :7, r2:7, :7, x6:6, x3:x396,2556
    struct { u64 qp:6, :7, r2:7, :7, x6:6, x3:3, :1, major:major96,2556
} INST64_M35;98,2627
typedef union U_INST64_M36 100,2642
    IA64_INST inst;101,2671
    struct { u64 qp:qp102,2691
    struct { u64 qp:6, r1:r1102,2691
    struct { u64 qp:6, r1:7, :14, x6:x6102,2691
    struct { u64 qp:6, r1:7, :14, x6:6, x3:x3102,2691
    struct { u64 qp:6, r1:7, :14, x6:6, x3:3, :1, major:major102,2691
} INST64_M36;103,2754
typedef union U_INST64_M41 105,2769
    IA64_INST inst;106,2798
    struct { u64 qp:qp107,2818
    struct { u64 qp:6, :7, r2:r2107,2818
    struct { u64 qp:6, :7, r2:7, :7, x6:x6107,2818
    struct { u64 qp:6, :7, r2:7, :7, x6:6, x3:x3107,2818
    struct { u64 qp:6, :7, r2:7, :7, x6:6, x3:3, :1, major:major107,2818
} INST64_M41;108,2884
typedef union U_INST64_M42 110,2899
    IA64_INST inst;111,2928
    struct { u64 qp:qp112,2948
    struct { u64 qp:6, :7, r2:r2112,2948
    struct { u64 qp:6, :7, r2:7, r3:r3112,2948
    struct { u64 qp:6, :7, r2:7, r3:7, x6:x6112,2948
    struct { u64 qp:6, :7, r2:7, r3:7, x6:6, x3:x3112,2948
    struct { u64 qp:6, :7, r2:7, r3:7, x6:6, x3:3, :1, major:major112,2948
} INST64_M42;113,3015
typedef union U_INST64_M43 115,3030
    IA64_INST inst;116,3059
    struct { u64 qp:qp117,3079
    struct { u64 qp:6, r1:r1117,3079
    struct { u64 qp:6, r1:7, :7, r3:r3117,3079
    struct { u64 qp:6, r1:7, :7, r3:7, x6:x6117,3079
    struct { u64 qp:6, r1:7, :7, r3:7, x6:6, x3:x3117,3079
    struct { u64 qp:6, r1:7, :7, r3:7, x6:6, x3:3, :1, major:major117,3079
} INST64_M43;118,3146
typedef union U_INST64_M44 120,3161
    IA64_INST inst;121,3190
    struct { u64 qp:qp122,3210
    struct { u64 qp:6, imm:imm122,3210
    struct { u64 qp:6, imm:21, x4:x4122,3210
    struct { u64 qp:6, imm:21, x4:4, i2:i2122,3210
    struct { u64 qp:6, imm:21, x4:4, i2:2, x3:x3122,3210
    struct { u64 qp:6, imm:21, x4:4, i2:2, x3:3, i:i122,3210
    struct { u64 qp:6, imm:21, x4:4, i2:2, x3:3, i:1, major:major122,3210
} INST64_M44;123,3276
typedef union U_INST64_M45 125,3291
    IA64_INST inst;126,3320
    struct { u64 qp:qp127,3340
    struct { u64 qp:6, :7, r2:r2127,3340
    struct { u64 qp:6, :7, r2:7, r3:r3127,3340
    struct { u64 qp:6, :7, r2:7, r3:7, x6:x6127,3340
    struct { u64 qp:6, :7, r2:7, r3:7, x6:6, x3:x3127,3340
    struct { u64 qp:6, :7, r2:7, r3:7, x6:6, x3:3, :1, major:major127,3340
} INST64_M45;128,3407
typedef union U_INST64_M46 130,3422
    IA64_INST inst;131,3451
    struct { u64 qp:qp132,3471
    struct { u64 qp:6, r1:r1132,3471
    struct { u64 qp:6, r1:7, un7:un7132,3471
    struct { u64 qp:6, r1:7, un7:7, r3:r3132,3471
    struct { u64 qp:6, r1:7, un7:7, r3:7, x6:x6132,3471
    struct { u64 qp:6, r1:7, un7:7, r3:7, x6:6, x3:x3132,3471
    struct { u64 qp:6, r1:7, un7:7, r3:7, x6:6, x3:3, un1:un1132,3471
    struct { u64 qp:6, r1:7, un7:7, r3:7, x6:6, x3:3, un1:1, major:major132,3471
} INST64_M46;133,3544
typedef union U_INST64 135,3559
    IA64_INST inst;136,3584
    struct { u64 137,3604
    struct { u64 :37, major:major137,3604
    struct { u64 :37, major:4; } generic;137,3604
    INST64_A5 A5;138,3646
    INST64_B4 B4;139,3703
    INST64_B8 B8;140,3760
    INST64_B9 B9;141,3795
    INST64_I19 I19;142,3824
    INST64_I26 I26;143,3883
    INST64_I27 I27;144,3934
    INST64_I28 I28;145,3986
    INST64_M28 M28;146,4030
    INST64_M29 M29;147,4083
    INST64_M30 M30;148,4134
    INST64_M31 M31;149,4186
    INST64_M32 M32;150,4230
    INST64_M33 M33;151,4267
    INST64_M35 M35;152,4302
    INST64_M36 M36;153,4336
    INST64_M41 M41;154,4372
    INST64_M42 M42;155,4420
    INST64_M43 M43;156,4486
    INST64_M44 M44;157,4531
    INST64_M45 M45;158,4576
    INST64_M46 M46;159,4617
} INST64;160,4669
#define MASK_41 162,4680
long priv_verbose 164,4718
#define verbose(165,4741
IA64_INST privify_inst(183,5301
#define read_slot1(283,8449
#define write_slot1(288,8812
void privify_memory(291,8893

xen/arch/ia64/tools/privify/privify.h,378
#define notimpl(23,638
#define privify_mov_from_cflg_m(24,688
#define privify_mov_from_cflg_i(25,768
#define privify_mov_from_kr_m(26,848
#define privify_mov_from_kr_i(27,940
#define privify_fc(28,1032
#define privify_thash(29,1113
#define privify_ttag(30,1187
#define privify_mov_from_cpuid(31,1260
#define privify_mov_from_pmd(32,1343
#define privify_cover(33,1416

xen/arch/ia64/tools/privop/postat.c,12
main 9,150

xen/arch/ia64/tools/privop/pohcalls.S,91
dump_privop_counts:dump_privop_counts7,134
zero_privop_counts:zero_privop_counts20,331

xen/arch/ia64/vmx/vmx_utility.c,825
is_reserved_indirect_register 36,1189
indirect_reg_igfld_MASK 81,2095
cr_igfld_mask 137,3450
check_psr_rsv_fields 191,4568
check_cr_rsv_fields 218,5091
check_indirect_reg_rsv_fields 323,7622
set_isr_ei_ni 374,8674
set_isr_for_na_inst(407,9302
set_rnat_consumption_isr 433,9799
void set_break_isr 466,10401
void set_privileged_operation_isr 490,10705
void set_privileged_reg_isr 520,11245
void set_rsv_reg_field_isr 546,11628
void set_illegal_op_isr 570,12006
void set_isr_reg_nat_consumption(587,12259
void set_isr_for_priv_fault(601,12555
IA64FAULT check_target_register(614,12772
int is_reserved_rr_register(626,13006
#define  ITIR_RSV_MASK	631,13095
int is_reserved_itir_field(632,13151
static int __is_reserved_rr_field(640,13262
int is_reserved_rr_rid(658,13632
int is_reserved_rr_field(668,13818

xen/arch/ia64/vmx/vmx_hypercall.c,109
static int hvmop_set_isa_irq_level(40,1321
static int hvmop_set_pci_intx_level(69,1875
do_hvm_op(101,2504

xen/arch/ia64/vmx/vtlb.c,1118
static inline void cch_mem_init(30,1143
static thash_data_t *cch_alloc(cch_alloc36,1254
static inline int __is_tr_translated(57,1748
__is_tr_overlap(66,1952
static thash_data_t *__vtr_lookup(__vtr_lookup83,2255
static void thash_recycle_cch(115,3085
static void vmx_vhpt_insert(125,3331
void thash_vhpt_insert(172,4620
int vhpt_access_rights_fixup(195,5403
thash_data_t * vhpt_lookup(229,6321
u64 guest_vhpt_lookup(261,7046
static thash_data_t * vtlb_thash(292,8125
static void vtlb_purge(307,8508
static void vhpt_purge(343,9437
void thash_recycle_cch_all(374,10159
static thash_data_t *__alloc_chain(__alloc_chain390,10421
static void vtlb_insert(411,10949
int vtr_find_overlap(456,12012
void thash_purge_entries(491,12910
void thash_purge_entries_remote(498,13080
static u64 translate_phy_pte(507,13310
int thash_purge_and_insert(551,14701
void thash_purge_all(590,15564
static void __thash_purge_all(626,16318
void vmx_vcpu_flush_vtlb_all(634,16462
thash_data_t *vtlb_lookup(vtlb_lookup659,16969
static void thash_init(701,18076
int thash_alloc(726,18578
void thash_free(755,19477

xen/arch/ia64/vmx/sioemu.c,232
sioemu_deliver 30,1095
sioemu_callback_return 71,2327
sioemu_deliver_event 107,3475
sioemu_io_emulate 116,3618
sioemu_sal_assist 130,3949
sioemu_set_callback 139,4110
sioemu_add_io_physmap 163,4783
sioemu_hypercall 195,5602

xen/arch/ia64/vmx/vmx_ivt.S,969
vmx_ia64_ivt:vmx_ia64_ivt136,4216
vmx_itlb_loop:vmx_itlb_loop165,4998
vmx_itlb_out:vmx_itlb_out218,6590
vmx_dtlb_loop:vmx_dtlb_loop245,7217
vmx_dtlb_out:vmx_dtlb_out293,8190
vmx_alt_itlb_miss_vmm:vmx_alt_itlb_miss_vmm310,8667
vmx_alt_itlb_miss_dom:vmx_alt_itlb_miss_dom329,9279
vmx_alt_dtlb_miss_vmm:vmx_alt_dtlb_miss_vmm352,9923
vmx_alt_dtlb_miss_dom:vmx_alt_dtlb_miss_dom391,11333
dirty_bit_tpa_fail:dirty_bit_tpa_fail453,13116
.mem.offset 771,23353
.mem.offset 772,23422
vmx_virtualization_fault_back:vmx_virtualization_fault_back986,30518
.Lvmx_dispatch_reflection_string:.Lvmx_dispatch_reflection_string1354,42023
.Lvmx_dispatch_virtualization_fault_string:.Lvmx_dispatch_virtualization_fault_string1356,42096
.Lvmx_dispatch_vexirq_string:.Lvmx_dispatch_vexirq_string1358,42189
.Lvmx_dispatch_tlb_miss_string:.Lvmx_dispatch_tlb_miss_string1360,42254
.Lvmx_dispatch_shadow_fault_string:.Lvmx_dispatch_shadow_fault_string1362,42323

xen/arch/ia64/vmx/vmx_vsa.S,82
rpsave 39,1302
pfssave 40,1319
psrsave 41,1336
entry 42,1353
hostret 43,1370

xen/arch/ia64/vmx/vmx_minstate.h,579
#define VMX_MINSTATE_START_SAVE_MIN 37,1131
#define VMX_MINSTATE_END_SAVE_MIN 54,2686
#define PAL_VSA_SYNC_READ 58,2890
#define IA64_CURRENT_REG 73,3663
#define VMX_MINSTATE_GET_CURRENT(75,3818
# define P6_BR_VMX_PANIC 106,4807
# define P6_BR_VMX_PANIC 108,4872
#define P6_BR_CALL_PANIC(111,4926
#define VMX_DO_SAVE_MIN(115,5043
#define VMX_SAVE_REST 228,14165
#define VMX_SAVE_EXTRA 281,16350
#define VMX_SAVE_MIN_WITH_COVER 292,16768
#define VMX_SAVE_MIN_WITH_COVER_NO_PANIC 293,16861
#define VMX_SAVE_MIN_WITH_COVER_R19 295,16985
#define VMX_SAVE_MIN 296,17090

xen/arch/ia64/vmx/vmx_init.c,1349
u32 vmx_enabled 60,1966
static u64 buffer_size;61,1987
static u64 vp_env_info;62,2011
static u64 vm_buffer 63,2035
u64 __vsa_base 64,2107
void vmx_vps_patch(68,2214
identify_vmx_feature(90,2764
vmx_init_env(135,3889
#define VM_BUFFER_ALIGN	142,4073
#define VM_BUFFER_ALIGN_UP(143,4109
	u64 value;185,5189
		u64 number 187,5211
		u64 revision 188,5229
		u64 model 189,5249
		u64 family 190,5266
		u64 archrev 191,5284
		u64 rv 192,5303
} cpuid3_t;194,5322
static vpd_t *alloc_vpd(alloc_vpd197,5367
free_vpd(240,6275
__vmx_vpd_pin(250,6542
__vmx_vpd_unpin(292,7548
vmx_create_vp(310,7919
vmx_save_state(331,8463
vmx_load_state(352,9101
vmx_vcpu_initialise(376,9826
static int vmx_create_event_channels(396,10341
static void vmx_release_assist_channel(417,10793
static void vmx_init_ioreq_page(424,10959
static void vmx_destroy_ioreq_page(432,11126
int vmx_set_ioreq_page(448,11384
vmx_final_setup_guest(488,12120
vmx_relinquish_guest_resources(532,13010
vmx_relinquish_vcpu_resources(550,13390
typedef struct io_range 564,13689
	unsigned long start;565,13715
	unsigned long size;566,13737
	unsigned long type;567,13758
} io_range_t;568,13779
static const io_range_t io_ranges[io_ranges570,13794
static void vmx_build_io_physmap_table(580,14245
int vmx_setup_platform(594,14635
void vmx_do_resume(631,15557

xen/arch/ia64/vmx/optvfault.S,404
ia64_leave_hypervisor_virt_1:ia64_leave_hypervisor_virt_1144,6979
vmx_asm_rfi_1:vmx_asm_rfi_1479,13998
vmx_asm_mov_from_rr_back_1:vmx_asm_mov_from_rr_back_1536,15141
vmx_asm_mov_to_rr_back_1:vmx_asm_mov_to_rr_back_1562,15732
vmx_asm_mov_to_rr_back_2:vmx_asm_mov_to_rr_back_2576,16100
vmx_asm_mov_to_psr_back:vmx_asm_mov_to_psr_back668,17880
vmx_asm_thash_back1:vmx_asm_thash_back1711,19090

xen/arch/ia64/vmx/vacpi.c,539
#define TMR_STS 36,1242
#define PWRBTN_STS 37,1270
#define GBL_STS 38,1298
#define TMR_EN 41,1353
#define PWRBTN_EN 42,1381
#define GBL_EN 43,1409
#define SCI_MASK 49,1685
#define SCI_IRQ 52,1807
#define TMR_VAL_MASK 55,1905
#define TMR_VAL_MSB 56,1940
static void pmt_update_sci(63,2155
static void pmt_update_time(74,2505
static void pmt_timer_callback(101,3330
int vacpi_intercept(124,3948
void vacpi_init(183,5415
void vacpi_relinquish_resources(198,5764
static int vacpi_save(205,5931
static int vacpi_load(240,7035

xen/arch/ia64/vmx/vmx_virt.c,2247
ia64_priv_decoder(37,1267
static IA64FAULT vmx_emul_rsm(148,5277
static IA64FAULT vmx_emul_ssm(154,5456
static IA64FAULT vmx_emul_mov_from_psr(160,5633
static IA64FAULT vmx_emul_mov_to_psr(178,6086
static IA64FAULT vmx_emul_rfi(193,6536
static IA64FAULT vmx_emul_bsw0(221,7213
static IA64FAULT vmx_emul_bsw1(236,7595
static IA64FAULT vmx_emul_cover(251,7978
static IA64FAULT vmx_emul_ptc_l(256,8073
static IA64FAULT vmx_emul_ptc_e(290,8985
static IA64FAULT vmx_emul_ptc_g(315,9636
static IA64FAULT vmx_emul_ptc_ga(348,10555
static IA64FAULT ptr_fault_check(381,11476
static IA64FAULT vmx_emul_ptr_d(412,12363
static IA64FAULT vmx_emul_ptr_i(423,12621
static IA64FAULT vmx_emul_thash(435,12880
static IA64FAULT vmx_emul_ttag(465,13614
static IA64FAULT vmx_emul_tpa(497,14373
static IA64FAULT vmx_emul_tak(541,15518
static IA64FAULT vmx_emul_itr_d(577,16376
static IA64FAULT vmx_emul_itr_i(644,18079
static IA64FAULT itc_fault_check(709,19776
static IA64FAULT vmx_emul_itc_d(756,20954
static IA64FAULT vmx_emul_itc_i(769,21242
static IA64FAULT vmx_emul_mov_to_ar_imm(786,21643
static IA64FAULT vmx_emul_mov_to_ar_reg(812,22320
static IA64FAULT vmx_emul_mov_from_ar_reg(840,23102
static IA64FAULT vmx_emul_mov_to_pkr(872,23996
static IA64FAULT vmx_emul_mov_to_rr(895,24653
static IA64FAULT vmx_emul_mov_to_dbr(918,25308
static IA64FAULT vmx_emul_mov_to_ibr(941,25965
static IA64FAULT vmx_emul_mov_to_pmc(964,26620
static IA64FAULT vmx_emul_mov_to_pmd(987,27277
static IA64FAULT vmx_emul_mov_from_rr(1015,28044
static IA64FAULT vmx_emul_mov_from_pkr(1051,29010
static IA64FAULT vmx_emul_mov_from_dbr(1088,30006
static IA64FAULT vmx_emul_mov_from_ibr(1128,31077
static IA64FAULT vmx_emul_mov_from_pmc(1168,32148
static IA64FAULT vmx_emul_mov_from_cpuid(1205,33144
static IA64FAULT vmx_emul_mov_to_cr(1233,33893
#define cr_get(1303,36384
#define vmx_cr_get(1315,36713
static IA64FAULT vmx_emul_mov_from_cr(1317,36790
__vmx_get_domain_bundle(1377,38730
vmx_emulate(1391,39025
    IA64_BUNDLE bundle;1413,39584
    int slot;1414,39608
    IA64_SLOT_TYPE slot_type;1415,39622
    IA64_PSR vpsr;1416,39652
    bundle 1417,39671
    slot 1418,39714
    slot_type 1424,40001
    inst.inst=inst1430,40227

xen/arch/ia64/vmx/vlsapic.c,1771
#define IPI_DPRINTK(54,1746
#define IPI_DPRINTK(56,1788
static void update_last_itc(69,2058
#define NMI_VECTOR	78,2180
#define ExtINT_VECTOR	79,2202
#define NULL_VECTOR	80,2227
static void update_vhpi(82,2252
static int vmx_vcpu_unpend_interrupt(110,2860
static uint64_t now_itc(132,3277
static void vtm_reset(146,3578
static void vtm_timer_fn(170,4183
void vtm_init(191,4751
uint64_t vtm_get_itc(208,5140
void vtm_set_itc(218,5292
void vtm_set_itm(248,5970
void vtm_set_itv(269,6498
void vlsapic_reset(282,6746
static __inline__ int highest_bits(313,7559
static int highest_pending_irq(333,7952
static int highest_inservice_irq(340,8190
static int is_higher_irq(351,8507
static int is_higher_class(357,8680
#define   IRQ_NO_MASKED 362,8771
#define   IRQ_MASKED_BY_VTPR 363,8805
#define   IRQ_MASKED_BY_INSVC 364,8839
_xirq_masked(368,8965
static int irq_masked(408,9861
int vmx_vcpu_pend_interrupt(421,10094
void vmx_vcpu_pend_batch_interrupt(445,10584
int vmx_check_pending_irq(470,11351
void vmx_pend_pal_init(509,12491
void guest_write_eoi(520,12672
int is_unmasked_irq(536,13062
uint64_t guest_read_vivr(550,13381
static void generate_exirq(570,14005
void vhpi_detection(582,14323
void vmx_vexirq(598,14689
struct vcpu *lid_to_vcpu(lid_to_vcpu603,14749
#define PSR_SET_BITS 617,15087
static void vmx_inject_guest_pal_init(620,15231
static int vcpu_deliver_int(637,15593
int vlsapic_deliver_int(681,16644
void deliver_pal_init(699,17033
static void vlsapic_write_ipi(707,17147
unsigned long vlsapic_read(748,18517
static void vlsapic_write_xtp(786,19562
void vlsapic_write(808,20092
static int vlsapic_save(843,21110
static int vlsapic_load(869,21750
static int vtime_save(900,22620
static int vtime_load(928,23325

xen/arch/ia64/vmx/pal_emul.c,35
pal_emul(28,916
sal_emul(50,1460

xen/arch/ia64/vmx/vmmu.c,1050
static int default_vtlb_sz 27,1049
static int default_vhpt_sz 28,1095
static void __init parse_vtlb_size(30,1142
static void __init parse_vhpt_size(42,1414
static int init_domain_vhpt(55,1734
static void free_domain_vhpt(71,2092
int init_domain_tlb(77,2206
void free_domain_tlb(95,2474
int vhpt_enabled(104,2607
int unimplemented_gva(130,3135
fetch_code(153,3507
IA64FAULT vmx_vcpu_itc_i(204,5060
IA64FAULT vmx_vcpu_itc_d(223,5562
IA64FAULT vmx_vcpu_itr_i(246,6068
IA64FAULT vmx_vcpu_itr_d(280,6951
IA64FAULT vmx_vcpu_ptr_d(326,8237
IA64FAULT vmx_vcpu_ptr_i(339,8534
IA64FAULT vmx_vcpu_ptc_l(352,8832
IA64FAULT vmx_vcpu_ptc_e(360,8984
IA64FAULT vmx_vcpu_ptc_g(366,9087
struct ptc_ga_args 377,9311
    unsigned long vadr;378,9332
    unsigned long rid;379,9356
    unsigned long ps;380,9379
    struct vcpu *vcpu;vcpu381,9401
static void ptc_ga_remote_func 384,9428
IA64FAULT vmx_vcpu_ptc_ga(425,10558
u64 vmx_vcpu_thash(461,11440
u64 vmx_vcpu_ttag(486,12076
IA64FAULT vmx_vcpu_tpa(506,12445
u64 vmx_vcpu_tak(594,14847

xen/arch/ia64/vmx/viosapic.c,610
static void viosapic_deliver(47,1510
static int iosapic_get_highest_irq(63,2087
static int get_redir_num(75,2341
static void service_iosapic(88,2613
static void viosapic_update_EOI(104,2959
static unsigned long viosapic_read_indirect(136,3869
unsigned long viosapic_read(176,5008
static void viosapic_write_indirect(204,5537
void viosapic_write(251,6918
static void viosapic_reset(280,7484
void viosapic_set_irq(293,7744
void viosapic_set_pci_irq(325,8457
void viosapic_init(333,8632
#define VIOSAPIC_INVALID_VCPU_ID 344,8857
static int viosapic_save(345,8897
static int viosapic_load(370,9738

xen/arch/ia64/vmx/vmx_interrupt.c,329
#define INITIAL_PSR_VALUE_AT_INTERRUPTION 30,1179
collect_interruption(33,1253
inject_guest_interruption(91,2698
void hvm_pci_intx_assert(116,3274
void hvm_pci_intx_deassert(131,3708
void hvm_isa_irq_assert(148,4147
void hvm_isa_irq_deassert(153,4232
int msixtbl_pt_register(158,4319
void msixtbl_pt_unregister(164,4429

xen/arch/ia64/vmx/save.c,54
void arch_hvm_save(26,999
int arch_hvm_load(34,1166

xen/arch/ia64/vmx/vmx_support.c,62
void vmx_io_assist(36,1328
void vmx_send_assist_req(52,1699

xen/arch/ia64/vmx/mmio.c,960
#define HVM_BUFFERED_IO_RANGE_NR 46,1529
struct hvm_buffered_io_range 48,1565
    unsigned long start_addr;49,1596
    unsigned long length;50,1626
static struct hvm_buffered_io_range buffered_stdvga_range 53,1656
*hvm_buffered_io_ranges[hvm_buffered_io_ranges55,1772
static int hvm_buffered_io_intercept(60,1857
static void low_mmio_access(139,4035
static int vmx_ide_pio_intercept(170,4642
#define TO_LEGACY_IO(228,6304
static void __vmx_identity_mapping_save(230,6358
static int vmx_identity_mappings_save(244,6697
static int __vmx_identity_mapping_load(260,7444
static int vmx_identity_mappings_load(273,7787
static void legacy_io_access(301,8735
static void mmio_access(339,9616
enum inst_type_en 372,10526
enum inst_type_en { SL_INTEGER,372,10526
enum inst_type_en { SL_INTEGER, SL_FLOATING,372,10526
enum inst_type_en { SL_INTEGER, SL_FLOATING, SL_FLOATING_FP8 372,10526
void emulate_io_inst(377,10621
emulate_io_update(535,15899

xen/arch/ia64/vmx/vmx_fault.c,480
#define INITIAL_PSR_VALUE_AT_INTERRUPTION 60,1888
#define DOMN_PAL_REQUEST 64,2044
#define DOMN_SAL_REQUEST 65,2081
static const u16 vec2off[vec2off67,2119
void vmx_lazy_load_fpu(77,2660
void vmx_reflect_interruption(86,2892
vmx_ia64_handle_break 169,5070
void save_banked_regs_to_vpd(224,6780
void leave_hypervisor_tail(257,7892
static int vmx_handle_lds(320,10031
static inline int unimpl_phys_addr 326,10131
vmx_hpw_miss(333,10324
vmx_ia64_shadow_fault(563,17954

xen/arch/ia64/vmx/vmx_vcpu_save.c,255
vmx_arch_get_info_guest(29,1062
vmx_arch_set_info_guest(114,3669
static int vmx_cpu_save(200,6206
static int vmx_cpu_load(222,6682
static int vmx_vpd_save(252,7393
static int vmx_vpd_load(271,7876
#define VPD_COPY(302,8674
#undef VPD_COPY347,9631

xen/arch/ia64/vmx/vmx_phy_mode.c,609
#define MODE_IND(32,1138
#define SW_BAD 35,1216
#define SW_2P_DT 36,1266
#define SW_2P_D 37,1326
#define SW_2V 38,1402
#define SW_SELF 39,1459
#define SW_NOP 40,1506
static const unsigned char mm_switch_table[mm_switch_table49,1809
physical_mode_init(104,3744
physical_tlb_miss(110,3836
vmx_init_all_rr(119,4024
vmx_load_all_rr(137,4499
switch_to_physical_rid(180,5773
switch_to_virtual_rid(208,6341
static int mm_switch_action(222,6662
switch_mm_mode_fast(231,6880
switch_mm_mode(255,7458
check_mm_mode_switch 301,8981
prepare_if_physical_mode(329,9748
recover_if_physical_mode(338,9913

xen/arch/ia64/vmx/vmx_entry.S,268
vmx_rbs_switch:vmx_rbs_switch300,6987
vmx_dont_preserve_current_frame:vmx_dont_preserve_current_frame305,7088
vmx_rse_clear_invalid:vmx_rse_clear_invalid324,7683
.work_processed_syscall:.work_processed_syscall470,11882
.vhpt_overlaps:.vhpt_overlaps723,19260

xen/arch/ia64/vmx/vmx_vcpu.c,1102
struct guest_psr_bundle{guest_psr_bundle50,1768
    unsigned long ip;51,1793
    unsigned long psr;52,1815
struct guest_psr_bundle guest_psr_buf[guest_psr_buf55,1842
unsigned long guest_psr_index 56,1886
vmx_ia64_set_dcr(61,1935
vmx_vcpu_set_psr(81,2450
IA64FAULT vmx_vcpu_cover(159,4622
void vmx_vcpu_set_rr_fast(174,4956
void __vmx_switch_rr7_vcpu(199,5671
void vmx_switch_rr7_vcpu(204,5810
IA64FAULT vmx_vcpu_set_rr(212,6121
u64 vmx_vcpu_get_pkr(254,7341
IA64FAULT vmx_vcpu_set_pkr(259,7425
int tlb_debug=266,7548
check_entry(267,7565
u64 vmx_vcpu_get_itir_on_fault(279,7806
void vmx_vcpu_mov_to_psr_fast(292,8089
#define IA64_PSR_MMU_VIRT 320,8868
void vmx_vcpu_rfi_fast(324,9026
void vmx_vcpu_ssm_fast(374,10577
void vmx_vcpu_rsm_fast(397,11143
IA64FAULT vmx_vcpu_rfi(422,11758
vmx_vcpu_get_bgr(444,12214
vmx_vcpu_set_bgr(471,12815
vmx_vcpu_get_gr(497,13394
vmx_vcpu_set_gr(520,13902
u64 vmx_vcpu_get_psr(544,14418
IA64FAULT vmx_vcpu_reset_psr_sm(553,14690
IA64FAULT vmx_vcpu_set_psr_sm(563,14882
IA64FAULT vmx_vcpu_set_psr_l(573,15069
vmx_vcpu_set_tpr(581,15266

xen/arch/ia64/asm-xsi-offsets.c,133
#define task_struct 38,1290
#define DEFINE(40,1316
#define BLANK(43,1406
#define DEFINE_MAPPED_REG_OFS(45,1449
void foo(48,1559

xen/arch/ia64/linux-xen/perfmon_default_smpl.c,430
#define pid	26,616
#define DEFAULT_DEBUG 29,644
#define DPRINT(32,690
#define DPRINT_ovfl(37,854
#define DPRINT(43,1058
#define DPRINT_ovfl(44,1076
default_validate(48,1118
default_get_size(71,1666
default_init(84,1944
default_handler(109,2570
default_restart(241,5987
default_exit(257,6340
static pfm_buffer_fmt_t default_fmt=263,6474
pfm_default_smpl_init_module(278,6938
pfm_default_smpl_cleanup_module(299,7350

xen/arch/ia64/linux-xen/mm_contig.c,364
static unsigned long num_dma_physpages;30,901
show_mem 40,1104
unsigned long bootmap_start;71,1861
find_max_pfn 83,2192
find_bootmap_location 103,2703
find_memory 148,3669
void *percpu_area __initdata 181,4485
per_cpu_allocate(184,4536
get_per_cpu_area(205,5207
per_cpu_init 217,5365
count_pages 261,6678
count_dma_pages 271,6849
paging_init 286,7083

xen/arch/ia64/linux-xen/perfmon.c,15638
#define CONFIG_PERFMON68,1746
#define pid	69,1769
#define thread	70,1790
#define task_pt_regs	71,1819
#define PMC_USER	73,1851
#define PMC_KERNEL	74,1880
#define PMC_XEN_AND_GUEST	75,1911
#define PMC_PRIV_MONITOR	76,1976
#undef ia64_set_pmc78,2013
#define ia64_set_pmc(79,2033
#define PFM_CTX_UNLOADED	107,2983
#define PFM_CTX_LOADED	108,3052
#define PFM_CTX_MASKED	109,3114
#define PFM_CTX_ZOMBIE	110,3205
#define PFM_INVALID_ACTIVATION	112,3273
#define PFM_MAX_MSGS	117,3345
#define PFM_CTXQ_EMPTY(118,3370
#define PFM_REG_NOTIMPL	131,3736
#define PFM_REG_IMPL	132,3794
#define PFM_REG_END	133,3847
#define PFM_REG_MONITOR	134,3889
#define PFM_REG_COUNTING	135,3973
#define PFM_REG_CONTROL	136,4071
#define	PFM_REG_CONFIG	137,4145
#define PFM_REG_BUFFER	138,4220
#define PMC_IS_LAST(140,4293
#define PMD_IS_LAST(141,4359
#define PMC_OVFL_NOTIFY(143,4426
#define PMC_IS_IMPL(146,4536
#define PMD_IS_IMPL(147,4626
#define PMD_IS_COUNTING(150,4772
#define PMC_IS_COUNTING(151,4869
#define PMC_IS_MONITOR(152,4966
#define PMC_IS_CONTROL(153,5062
#define PMC_DFL_VAL(155,5159
#define PMC_RSVD_MASK(156,5222
#define PMD_PMD_DEP(157,5285
#define PMC_PMD_DEP(158,5344
#define PFM_NUM_IBRS	160,5404
#define PFM_NUM_DBRS	161,5445
#define CTX_OVFL_NOBLOCK(163,5487
#define CTX_HAS_SMPL(164,5540
#define PFM_CTX_TASK(165,5591
#define PMU_PMC_OI	167,5631
#define CTX_USED_PMD(170,5729
#define CTX_IS_USED_PMD(171,5795
#define CTX_USED_MONITOR(173,5878
#define CTX_USED_IBR(175,5953
#define CTX_USED_DBR(176,6031
#define CTX_USES_DBREGS(177,6109
#define PFM_CODE_RR	178,6188
#define PFM_DATA_RR	179,6250
#define PFM_CPUINFO_CLEAR(181,6313
#define PFM_CPUINFO_SET(182,6381
#define PFM_CPUINFO_GET(183,6446
#define RDEP(185,6504
#define PROTECT_CTX(205,7210
#define UNPROTECT_CTX(212,7434
#define PROTECT_CTX_NOPRINT(218,7604
#define UNPROTECT_CTX_NOPRINT(224,7705
#define PROTECT_CTX_NOIRQ(230,7812
#define UNPROTECT_CTX_NOIRQ(235,7896
#define GET_ACTIVATION(243,8003
#define INC_ACTIVATION(244,8067
#define SET_ACTIVATION(245,8133
#define SET_ACTIVATION(248,8228
#define GET_ACTIVATION(249,8270
#define INC_ACTIVATION(250,8312
#define SET_PMU_OWNER(253,8379
#define GET_PMU_OWNER(254,8489
#define GET_PMU_CTX(255,8541
#define LOCK_PFS(257,8590
#define UNLOCK_PFS(258,8660
#define PFM_REG_RETFLAG_SET(260,8738
#define PMC0_HAS_OVFL(265,8882
#define PFMFS_MAGIC 267,8928
#define PFM_DEBUGGING 272,8980
#define DPRINT(274,9025
#define DPRINT_ovfl(279,9208
	unsigned long	val;291,9567
	unsigned long	lval;292,9622
	unsigned long	long_reset;293,9667
	unsigned long	short_reset;294,9733
	unsigned long	reset_pmds[reset_pmds295,9794
	unsigned long	smpl_pmds[smpl_pmds296,9885
	unsigned long	seed;297,9968
	unsigned long	mask;298,10029
	unsigned int 	flags;299,10090
	unsigned long	eventid;300,10140
} pfm_counter_t;301,10196
	unsigned int block:block307,10255
	unsigned int system:system308,10333
	unsigned int using_dbreg:using_dbreg309,10390
	unsigned int is_sampling:is_sampling310,10468
	unsigned int excl_idle:excl_idle311,10533
	unsigned int going_zombie:going_zombie312,10607
	unsigned int trap_reason:trap_reason313,10679
	unsigned int no_msg:no_msg314,10754
	unsigned int can_restart:can_restart315,10813
	unsigned int reserved:reserved316,10879
} pfm_context_flags_t;317,10906
#define PFM_TRAP_REASON_NONE	319,10930
#define PFM_TRAP_REASON_BLOCK	320,10984
#define PFM_TRAP_REASON_RESET	321,11054
typedef struct pfm_context 328,11198
	spinlock_t		ctx_lock;329,11227
	pfm_context_flags_t	ctx_flags;331,11277
	unsigned int		ctx_state;332,11355
	struct task_struct 	*ctx_task;ctx_task334,11426
	unsigned long		ctx_ovfl_regs[ctx_ovfl_regs336,11500
	struct completion	ctx_restart_done;339,11595
	unsigned long		ctx_used_pmds[ctx_used_pmds342,11683
	unsigned long		ctx_all_pmds[ctx_all_pmds343,11754
	unsigned long		ctx_reload_pmds[ctx_reload_pmds344,11824
	unsigned long		ctx_all_pmcs[ctx_all_pmcs346,11907
	unsigned long		ctx_reload_pmcs[ctx_reload_pmcs347,11977
	unsigned long		ctx_used_monitors[ctx_used_monitors348,12059
	unsigned long		ctx_pmcs[ctx_pmcs350,12138
	unsigned int		ctx_used_ibrs[ctx_used_ibrs352,12218
	unsigned int		ctx_used_dbrs[ctx_used_dbrs353,12297
	unsigned long		ctx_dbrs[ctx_dbrs354,12376
	unsigned long		ctx_ibrs[ctx_ibrs355,12462
	pfm_counter_t		ctx_pmds[ctx_pmds357,12549
	u64			ctx_saved_psr_up;359,12625
	unsigned long		ctx_last_activation;361,12684
	unsigned int		ctx_last_cpu;362,12771
	unsigned int		ctx_cpu;363,12853
	int			ctx_fd;365,12931
	pfm_ovfl_arg_t		ctx_ovfl_arg;366,12991
	pfm_buffer_fmt_t	*ctx_buf_fmt;ctx_buf_fmt368,13071
	void			*ctx_smpl_hdr;ctx_smpl_hdr369,13134
	unsigned long		ctx_smpl_size;370,13210
	void			*ctx_smpl_vaddr;ctx_smpl_vaddr371,13272
	wait_queue_head_t 	ctx_msgq_wait;374,13358
	pfm_msg_t		ctx_msgq[ctx_msgq375,13393
	int			ctx_msgq_head;376,13429
	int			ctx_msgq_tail;377,13451
	struct fasync_struct	*ctx_async_queue;ctx_async_queue378,13473
	wait_queue_head_t 	ctx_zombieq;380,13514
} pfm_context_t;382,13592
#define PFM_IS_FILE(388,13694
#define PFM_GET_CTX(390,13748
#define SET_LAST_CPU(393,13835
#define GET_LAST_CPU(394,13890
#define SET_LAST_CPU(396,13942
#define GET_LAST_CPU(397,13986
#define ctx_fl_block	401,14036
#define ctx_fl_system	402,14074
#define ctx_fl_using_dbreg	403,14114
#define ctx_fl_is_sampling	404,14163
#define ctx_fl_excl_idle	405,14212
#define ctx_fl_going_zombie	406,14257
#define ctx_fl_trap_reason	407,14308
#define ctx_fl_no_msg	408,14357
#define ctx_fl_can_restart	409,14397
#define PFM_SET_WORK_PENDING(411,14447
#define PFM_GET_WORK_PENDING(412,14535
	spinlock_t		pfs_lock;419,14731
	unsigned int		pfs_task_sessions;421,14784
	unsigned int		pfs_sys_sessions;422,14855
	unsigned int		pfs_sys_use_dbregs;423,14932
	unsigned int		pfs_ptrace_use_dbregs;424,15031
	struct task_struct	*pfs_sys_session[pfs_sys_session425,15121
#define XENOPROF_TASK	427,15228
} pfm_session_t;429,15282
typedef int (*pfm_reg_check_t)pfm_reg_check_t436,15444
	unsigned int		type;438,15600
	int			pm_pos;439,15621
	unsigned long		default_value;440,15636
	unsigned long		reserved_mask;441,15696
	pfm_reg_check_t		read_check;442,15758
	pfm_reg_check_t		write_check;443,15788
	unsigned long		dep_pmd[dep_pmd444,15819
	unsigned long		dep_pmc[dep_pmc445,15847
} pfm_reg_desc_t;446,15875
#define PMC_PM(449,15931
	unsigned long  ovfl_val;464,16470
	pfm_reg_desc_t *pmc_desc;pmc_desc466,16531
	pfm_reg_desc_t *pmd_desc;pmd_desc467,16612
	unsigned int   num_pmcs;469,16694
	unsigned int   num_pmds;470,16764
	unsigned long  impl_pmcs[impl_pmcs471,16834
	unsigned long  impl_pmds[impl_pmds472,16898
	char	      *pmu_name;pmu_name474,16963
	unsigned int  pmu_family;475,17008
	unsigned int  flags;476,17083
	unsigned int  num_ibrs;477,17131
	unsigned int  num_dbrs;478,17201
	unsigned int  num_counters;479,17271
	int           (*probe)probe480,17353
	unsigned int  use_rr_dbregs:use_rr_dbregs481,17417
} pmu_config_t;482,17505
#define PFM_PMU_IRQ_RESEND	486,17550
	unsigned long ibr_mask:ibr_mask492,17683
	unsigned long ibr_plm:ibr_plm493,17711
	unsigned long ibr_ig:ibr_ig494,17737
	unsigned long ibr_x:ibr_x495,17762
} ibr_mask_reg_t;496,17786
	unsigned long dbr_mask:dbr_mask499,17822
	unsigned long dbr_plm:dbr_plm500,17850
	unsigned long dbr_ig:dbr_ig501,17876
	unsigned long dbr_w:dbr_w502,17901
	unsigned long dbr_r:dbr_r503,17925
} dbr_mask_reg_t;504,17949
	unsigned long  val;507,17984
	ibr_mask_reg_t ibr;508,18005
	dbr_mask_reg_t dbr;509,18026
} dbreg_t;510,18047
	int		(*cmd_func)cmd_func517,18116
	char		*cmd_name;cmd_name518,18199
	int		cmd_flags;519,18217
	unsigned int	cmd_narg;520,18234
	size_t		cmd_argsize;521,18258
	int		(*cmd_getsize)cmd_getsize522,18280
} pfm_cmd_desc_t;523,18325
#define PFM_CMD_FD	525,18344
#define PFM_CMD_ARG_READ	526,18410
#define PFM_CMD_ARG_RW	527,18476
#define PFM_CMD_STOP	528,18547
#define PFM_CMD_NAME(531,18622
#define PFM_CMD_READ_ARG(532,18676
#define PFM_CMD_RW_ARG(533,18756
#define PFM_CMD_USE_FD(534,18832
#define PFM_CMD_STOPPED(535,18904
#define PFM_CMD_ARG_MANY	537,18980
	unsigned long pfm_spurious_ovfl_intr_count;540,19047
	unsigned long pfm_replay_ovfl_intr_count;541,19137
	unsigned long pfm_ovfl_intr_count;542,19225
	unsigned long pfm_ovfl_intr_cycles;543,19299
	unsigned long pfm_ovfl_intr_cycles_min;544,19383
	unsigned long pfm_ovfl_intr_cycles_max;545,19475
	unsigned long pfm_smpl_handler_calls;546,19567
	unsigned long pfm_smpl_handler_cycles;547,19606
	char pad[SMP_CACHE_BYTES] ____cacheline_aligned;548,19646
} pfm_stats_t;549,19696
static pfm_stats_t		pfm_stats[pfm_stats554,19749
static pfm_session_t		pfm_sessions;555,19789
static pfm_intr_handler_desc_t  *pfm_alt_intr_handler;pfm_alt_intr_handler560,19926
static struct proc_dir_entry 	*perfmon_dir;perfmon_dir563,19994
static pfm_uuid_t		pfm_null_uuid 565,20045
static spinlock_t		pfm_buffer_fmt_lock;567,20087
static pmu_config_t		*pmu_conf;pmu_conf570,20167
pfm_sysctl_t pfm_sysctl;573,20224
static ctl_table pfm_ctl_table[pfm_ctl_table577,20289
static ctl_table pfm_sysctl_dir[pfm_sysctl_dir584,20694
static ctl_table pfm_sysctl_root[pfm_sysctl_root588,20792
static struct ctl_table_header *pfm_sysctl_header;pfm_sysctl_header592,20891
#define pfm_get_cpu_var(598,21087
#define pfm_get_cpu_data(599,21137
pfm_put_task(603,21214
pfm_set_task_notify(609,21322
pfm_clear_task_notify(618,21528
pfm_reserve_page(624,21619
pfm_unreserve_page(629,21722
pfm_protect_ctx_ctxsw(636,21845
pfm_unprotect_ctx_ctxsw(643,21950
pfm_do_munmap(650,22083
pfm_get_unmapped_area(656,22229
pfmfs_get_sb(663,22463
static struct file_system_type pfm_fs_type 668,22619
static struct file_operations pfm_file_ops;684,23030
static pmu_config_t *pmu_confs[pmu_confs702,23457
pfm_clear_psr_pp(716,23678
pfm_set_psr_pp(723,23765
pfm_clear_psr_up(730,23850
pfm_set_psr_up(737,23937
pfm_get_psr(744,24031
pfm_set_psr_l(753,24157
pfm_freeze_pmu(760,24266
pfm_unfreeze_pmu(767,24349
pfm_restore_ibrs(774,24434
pfm_restore_dbrs(786,24636
pfm_read_soft_counter(801,24893
pfm_write_soft_counter(810,25090
pfm_get_new_msg(824,25415
pfm_get_next_msg(842,25856
pfm_reset_msgq(866,26352
pfm_rvmalloc(873,26491
pfm_rvfree(894,26881
pfm_context_alloc(913,27214
pfm_context_free(930,27526
pfm_mask_monitoring(940,27656
pfm_restore_monitoring(1015,29869
pfm_save_pmds(1112,32446
pfm_restore_pmds(1128,32701
pfm_copy_pmds(1145,33067
xenpfm_restore_pmds(1179,33845
pfm_copy_pmcs(1212,34548
pfm_restore_pmcs(1230,34935
xenpfm_restore_pmcs(1242,35147
pfm_uuid_cmp(1259,35456
pfm_buf_fmt_exit(1265,35562
pfm_buf_fmt_getsize(1273,35772
pfm_buf_fmt_validate(1282,36032
pfm_buf_fmt_init(1291,36274
pfm_buf_fmt_restart(1300,36520
pfm_buf_fmt_restart_active(1308,36768
__pfm_find_buffer_fmt(1316,37045
pfm_find_buffer_fmt(1333,37399
pfm_register_buffer_fmt(1343,37590
pfm_unregister_buffer_fmt(1374,38292
pfm_reserve_session(1400,38823
pfm_unreserve_session(1474,40447
pfm_remove_smpl_mapping(1531,41881
pfm_free_smpl_buffer(1568,42750
pfm_exit_smpl_buffer(1603,43407
static struct vfsmount *pfmfs_mnt;pfmfs_mnt1618,43844
init_pfm_fs(1621,43898
exit_pfm_fs(1636,44167
pfm_read(1643,44263
pfm_write(1736,46192
pfm_poll(1744,46353
pfm_ioctl(1779,47065
pfm_do_fasync(1789,47279
pfm_fasync(1805,47590
pfm_syswide_force_stop(1845,48627
pfm_syswide_cleanup_other_cpu(1893,49900
pfm_flush(1908,50324
pfm_close(2054,54315
pfm_no_open(2277,59708
static struct file_operations pfm_file_ops 2285,59827
pfmfs_delete_dentry(2298,60155
static struct dentry_operations pfmfs_dentry_operations 2303,60214
pfm_alloc_fd(2309,60324
pfm_free_fd(2379,61622
pfm_remap_buffer(2398,61988
pfm_smpl_buffer_alloc(2421,62534
pfm_bad_permissions(2547,65692
pfarg_is_sane(2569,66229
pfm_setup_buffer_fmt(2594,66653
#define PFM_CTXARG_BUF_ARG(2602,66909
pfm_reset_pmu_state(2648,68087
pfm_ctx_getsize(2705,69713
pfm_task_incompatible(2735,70298
pfm_get_task(2781,71356
pfm_context_create(2816,71958
pfm_new_counter_value 2954,74603
pfm_reset_regs_masked(2973,75211
pfm_reset_regs(3009,76194
pfm_write_pmcs(3060,77485
#define PFM_CHECK_PMC_PM(3074,77963
pfm_write_pmds(3319,84590
pfm_read_pmds(3535,90032
pfm_mod_write_pmcs(3668,93662
pfm_mod_read_pmds(3689,94129
pfm_use_debug_registers(3715,94719
pfm_release_debug_registers(3770,96318
pfm_restart(3792,96745
pfm_debug(3945,100739
pfm_write_ibr_dbr(3965,101221
pfm_write_ibrs(4179,106556
pfm_write_dbrs(4185,106714
pfm_mod_write_ibrs(4191,106865
pfm_mod_write_dbrs(4212,107332
pfm_get_features(4234,107807
pfm_stop(4244,108010
pfm_start(4333,109913
pfm_get_pmc_reset(4414,111572
pfm_check_task_exist(4441,112121
pfm_context_load(4464,112488
pfm_context_unload(4772,119390
pfm_exit_thread(4926,122375
#define PFM_CMD(4989,124036
#define PFM_CMD_S(4990,124152
#define PFM_CMD_PCLRWS	4991,124218
#define PFM_CMD_PCLRW	4992,124282
#define PFM_CMD_NONE	4993,124332
static pfm_cmd_desc_t pfm_cmd_tab[pfm_cmd_tab4995,124387
#define PFM_CMD_COUNT	5031,125878
pfm_check_task_state(5034,125957
sys_perfmonctl 5138,128648
#define PFM_MAX_ARGSIZE	5149,129072
pfm_resume_after_ovfl(5288,132034
pfm_context_force_terminate(5334,133245
pfm_handle_work(5368,134293
pfm_notify_user(5469,136624
pfm_ovfl_notify_user(5490,137053
pfm_end_notify_user(5521,137878
#define pfm_ovfl_notify_user(5545,138397
pfm_overflow_handler(5553,138611
pfm_do_interrupt_handler(5849,147580
pfm_interrupt_handler(5928,149165
#define PFM_PROC_SHOW_HEADER	5971,150143
pfm_proc_start(5974,150207
pfm_proc_next(5990,150439
pfm_proc_stop(5997,150553
pfm_proc_show_header(6002,150613
pfm_proc_show(6064,152239
struct seq_operations pfm_seq_ops 6132,154343
pfm_proc_open(6140,154499
pfm_syst_wide_update_task(6154,154873
pfm_force_cleanup(6203,155988
pfm_save_regs(6231,156608
pfm_save_regs(6322,158472
pfm_lazy_save_regs 6353,159072
pfm_load_regs 6417,160391
pfm_load_regs 6582,164377
pfm_flush_pmds(6701,167425
static struct irqaction __read_mostly perfmon_irqaction 6814,170406
pfm_alt_save_pmu_state(6824,170596
pfm_alt_restore_pmu_state(6850,170979
pfm_install_alt_pmu_interrupt(6875,171328
pfm_remove_alt_pmu_interrupt(6922,172373
#define init_pfm_fs(6957,173090
pfm_probe_pmu(6961,173153
static struct file_operations pfm_proc_fops 6984,173498
pfm_init(6993,173661
pfm_init_percpu 7100,176273
dump_pmu_state(7125,176723
pfm_inherit(7214,178799
sys_perfmonctl 7236,179233
xenpfm_get_features(7255,179668
xenpfm_pfarg_is_sane(7269,179952
xenpfm_context_create(7290,180316
xenpfm_context_destroy(7341,181219
xenpfm_write_pmcs(7396,182385
xenpfm_write_pmds(7428,183145
struct xenpfm_context_load_arg 7459,183888
	pfarg_load_t*	req;7460,183921
	int		error[error7461,183941
xenpfm_context_load_cpu(7465,183979
xenpfm_context_load(7478,184337
struct xenpfm_context_unload_arg 7508,184966
	int		error[error7509,185001
xenpfm_context_unload_cpu(7513,185039
xenpfm_context_unload(7525,185400
__xenpfm_start(7562,186168
__xenpfm_stop(7596,186884
__xenpfm_start_stop(7641,187797
struct xenpfm_start_arg 7649,187910
	int		is_start;7650,187936
	atomic_t	started;7651,187952
	atomic_t	finished;7652,187971
	int		error[error7653,187991
xenpfm_start_stop_cpu(7657,188029
xenpfm_start_stop_vcpu(7674,188400
xenpfm_start_stop_locked(7720,189543
xenpfm_start_stop(7779,191034
#define NONPRIV_OP(7801,191515
do_perfmon_op(7804,191574

xen/arch/ia64/linux-xen/minstate.h,854
#define MINSTATE_START_SAVE_MIN_VIRT	14,243
#define MINSTATE_END_SAVE_MIN_VIRT	31,1037
# define MINSTATE_START_SAVE_MIN_PHYS	40,1321
# define MINSTATE_END_SAVE_MIN_PHYS	61,2330
# define MINSTATE_START_SAVE_MIN_PHYS	65,2451
# define MINSTATE_END_SAVE_MIN_PHYS	84,3409
# define MINSTATE_GET_CURRENT(91,3574
# define MINSTATE_GET_CURRENT_VIRT(94,3712
# define MINSTATE_GET_CURRENT(96,3784
# define MINSTATE_START_SAVE_MIN	98,3851
# define MINSTATE_END_SAVE_MIN	99,3913
# define MINSTATE_GET_CURRENT(104,4013
# define MINSTATE_GET_CURRENT_VIRT(109,4172
# define MINSTATE_GET_CURRENT(114,4319
# define MINSTATE_START_SAVE_MIN	116,4410
# define MINSTATE_END_SAVE_MIN	117,4472
#define DO_SAVE_MIN(145,5337
#define SAVE_REST	247,9268
#define SAVE_MIN_WITH_COVER	304,10884
#define SAVE_MIN_WITH_COVER_R19	305,10948
#define SAVE_MIN	306,11028

xen/arch/ia64/linux-xen/acpi.c,2477
#define BAD_MADT_ENTRY(63,2189
#define PREFIX	67,2399
void (*pm_idle)pm_idle69,2426
acpi_get_sysname(94,3025
#define ACPI_MAX_PLATFORM_INTERRUPTS	161,4611
int platform_intr_list[platform_intr_list164,4733
enum acpi_irq_model_id acpi_irq_model 168,4841
int acpi_request_vector(174,5055
char *__init __acpi_map_table(187,5352
static int total_cpus __initdata;196,5669
static int available_cpus __initdata;197,5703
struct acpi_table_madt *acpi_madt __initdata;198,5741
static u8 has_8259;199,5787
acpi_parse_lapic_addr_ovr(202,5826
#define MAX_LOCAL_SAPIC 221,6203
static u16 ia64_acpiid_to_sapicid[ia64_acpiid_to_sapicid222,6231
int get_cpu_id(226,6354
acpi_parse_lsapic(246,6631
acpi_parse_lapic_nmi(271,7212
acpi_parse_iosapic(285,7527
static unsigned int __initdata acpi_madt_rev;302,7932
acpi_parse_plat_int_src(305,7997
unsigned int force_cpei_retarget 348,9149
unsigned int can_cpei_retarget(351,9195
unsigned int is_cpu_cpei_target(370,9572
void set_cpei_target_cpu(382,9761
unsigned int get_cpei_target_cpu(388,9862
acpi_parse_int_src_ovr(394,9954
acpi_parse_nmi_src(415,10531
static void __init acpi_madt_oem_check(428,10809
static int __init acpi_parse_madt(445,11224
#undef SLIT_DEBUG477,11983
#define PXM_FLAG_LEN 479,12002
static int __initdata srat_num_cpus;481,12051
static u32 __devinitdata pxm_flag[pxm_flag482,12109
#define pxm_bit_set(483,12158
#define pxm_bit_test(484,12215
static struct acpi_table_slit __initdata *slit_table;slit_table485,12274
cpumask_t early_cpu_possible_map 486,12328
get_processor_proximity_domain(489,12397
get_memory_proximity_domain(504,12771
void __init acpi_numa_slit_init(519,13086
acpi_numa_processor_affinity_init(536,13505
acpi_numa_memory_affinity_init(557,14012
void __init acpi_numa_arch_fixup(592,14758
int acpi_register_gsi(670,16745
void acpi_unregister_gsi(687,17164
static int __init acpi_parse_fadt(699,17338
int __init acpi_boot_init(719,17809
int acpi_gsi_to_irq(821,20793
int acpi_map_cpu2node(841,21089
int additional_cpus __initdata 862,21623
static __init int setup_additional_cpus(864,21661
__init void prefill_possible_map(889,22527
int acpi_map_lsapic(916,23071
int acpi_unmap_lsapic(968,24198
acpi_map_iosapic(987,24534
acpi_map_iosapics 1040,25789
int __ref acpi_register_ioapic(1049,25951
int acpi_unregister_ioapic(1065,26259
int acpi_save_state_mem(1078,26522
void acpi_restore_state_mem(1083,26599
void do_suspend_lowlevel(1088,26669

xen/arch/ia64/linux-xen/entry.h,561
#define PRED_LEAVE_SYSCALL	7,145
#define PRED_KERNEL_STACK	8,208
#define PRED_USER_STACK	9,270
#define PRED_SYSCALL	10,329
#define PRED_NON_SYSCALL	11,381
# define PASTE2(14,462
# define PASTE(15,488
# define pLvSys	17,521
# define pKStk	18,566
# define pUStk	19,609
# define pSys	20,650
# define pNonSys	21,687
#define PT(24,738
#define SW(25,781
#define VPD(27,841
#define PT_REGS_SAVES(30,894
#define PT_REGS_UNWIND_INFO(39,1182
#define SWITCH_STACK_SAVES(44,1268
#define DO_SAVE_SWITCH_STACK	68,2614
#define DO_LOAD_SWITCH_STACK	78,2852

xen/arch/ia64/linux-xen/mca.c,3927
# define IA64_MCA_DEBUG(91,2957
# define IA64_MCA_DEBUG(93,3007
ia64_mca_sal_to_os_state_t	ia64_sal_to_os_handoff_state;98,3083
ia64_mca_sal_to_os_state_t	ia64_sal_to_os_handoff_state[ia64_sal_to_os_handoff_state100,3146
ia64_mca_os_to_sal_state_t	ia64_os_to_sal_handoff_state;103,3276
u64				ia64_mca_serialize;104,3333
unsigned long __per_cpu_mca[__per_cpu_mca110,3654
static ia64_mc_info_t		ia64_mc_info;116,3807
#define jiffies	119,3856
#undef HZ120,3880
#define HZ	121,3890
#define MAX_CPE_POLL_INTERVAL 124,3924
#define MIN_CPE_POLL_INTERVAL 125,3982
#define CMC_POLL_INTERVAL 126,4039
#define CPE_HISTORY_LENGTH 127,4095
#define CMC_HISTORY_LENGTH 128,4127
static struct timer_list cpe_poll_timer;131,4173
static struct timer_list cmc_poll_timer;132,4214
#define mod_timer(134,4261
static struct timer cpe_poll_timer;135,4321
static struct timer cmc_poll_timer;136,4357
static int cmc_polling_enabled 143,4568
static int cpe_poll_enabled 151,4847
static int mca_init;155,4959
#define IA64_MAX_LOGS	160,5012
#define IA64_MAX_LOG_TYPES 161,5076
typedef struct ia64_state_log_s163,5139
	spinlock_t	isl_lock;165,5173
	int		isl_index;166,5195
	unsigned long	isl_count;167,5212
	ia64_err_rec_t  *isl_log[isl_log168,5238
} ia64_state_log_t;169,5325
static ia64_state_log_t ia64_state_log[ia64_state_log171,5346
#define IA64_LOG_ALLOCATE(174,5419
#define IA64_LOG_ALLOCATE(180,5663
#define IA64_LOG_LOCK_INIT(194,6160
#define IA64_LOG_LOCK(195,6236
#define IA64_LOG_UNLOCK(196,6318
#define IA64_LOG_NEXT_INDEX(197,6404
#define IA64_LOG_CURR_INDEX(198,6468
#define IA64_LOG_INDEX_INC(199,6536
#define IA64_LOG_INDEX_DEC(202,6678
#define IA64_LOG_NEXT_BUFFER(204,6779
#define IA64_LOG_CURR_BUFFER(205,6878
#define IA64_LOG_COUNT(206,6977
sal_queue_entry_t sal_entry[sal_entry209,7053
struct list_head *sal_queue,sal_queue210,7111
struct list_head *sal_queue, sal_log_queues[sal_log_queues210,7111
sal_log_record_header_t *sal_record;sal_record211,7176
ia64_log_init(222,7403
ia64_log_get(266,8640
ia64_mca_log_sal_error_record(303,9636
ia64_log_queue(341,10772
void disable_irq_nosync(422,12867
void enable_irq(450,13504
int cpe_vector 481,14109
ia64_mca_cpe_int_handler 484,14150
show_min_state 548,15983
fetch_min_state 609,18976
#	define PUT_NAT_BIT(652,20214
static spinlock_t init_dump_lock 686,21936
static spinlock_t show_stack_lock 687,21991
static atomic_t num_stopped_cpus 688,22047
#define CPU_FLUSH_RETRY_MAX 691,22163
init_cache_flush 693,22205
save_ksp 714,22675
freeze_cpu_osinit 722,22814
try_crashdump(734,23068
init_handler_platform 744,23263
ia64_mca_register_cpev 845,25896
ia64_mca_cmc_vector_setup 878,26732
ia64_mca_cmc_vector_disable 908,27480
ia64_mca_cmc_vector_enable 935,28089
ia64_mca_cmc_vector_disable_keventd(957,28650
ia64_mca_cmc_vector_enable_keventd(969,28933
ia64_mca_wakeup_ipi_wait(986,29268
ia64_mca_wakeup(1021,29953
ia64_mca_wakeup_all(1037,30272
ia64_mca_rendez_int_handler(1062,30828
ia64_mca_wakeup_int_handler(1103,31977
ia64_return_to_sal_check(1123,32492
ia64_reg_MCA_extension(1170,33817
ia64_unreg_MCA_extension(1180,33945
ia64_mca_ucmc_handler(1206,34760
ia64_mca_cmc_int_handler(1277,36545
ia64_mca_cmc_int_caller(1355,38644
ia64_mca_cmc_poll 1412,39984
ia64_mca_cpe_int_caller(1438,40551
ia64_mca_cpe_poll 1502,42261
ia64_init_handler 1526,42786
ia64_mca_disable_cpe_polling(1558,43794
static struct irqaction __read_mostly cmci_irqaction 1566,43933
static struct irqaction __read_mostly cmcp_irqaction 1574,44097
static struct irqaction __read_mostly mca_rdzv_irqaction 1582,44259
static struct irqaction __read_mostly mca_wkup_irqaction 1590,44429
static struct irqaction __read_mostly mca_cpe_irqaction 1599,44618
static struct irqaction __read_mostly mca_cpep_irqaction 1607,44785
ia64_mca_cpu_init(1619,45038
ia64_mca_init(1718,47804
ia64_mca_late_init(1888,53269

xen/arch/ia64/linux-xen/process-linux-xen.c,1182
#define __KERNEL_SYSCALLS__	23,525
unsigned long boot_option_idle_override 71,1585
ia64_do_show_stack 76,1685
show_stack 98,2187
dump_stack 111,2432
show_registers(120,2524
do_notify_resume_user 195,5557
static int pal_halt 214,6046
static int can_do_pal_halt 215,6078
static int __init nohalt_setup(217,6111
update_pal_halt_status(225,6241
default_idle 234,6390
static inline void play_dead(248,6637
static inline void play_dead(270,7064
void cpu_idle_wait(280,7190
cpu_idle 309,7767
ia64_save_extra 349,8392
ia64_load_extra 374,8928
copy_thread 430,10549
#	define THREAD_FLAGS_TO_CLEAR	517,13813
#	define THREAD_FLAGS_TO_SET	519,13923
do_copy_task_regs 549,14683
do_dump_task_fpu 631,16868
do_copy_regs 654,17350
do_dump_fpu 662,17467
dump_task_regs(668,17568
ia64_elf_core_copy_regs 685,17924
dump_task_fpu 693,18048
dump_fpu 708,18380
sys_execve 715,18540
kernel_thread 732,18863
		struct switch_stack sw;737,19052
		struct pt_regs pt;738,19078
kernel_thread_helper 758,19930
flush_thread 776,20435
exit_thread 797,21076
get_wchan 822,21774
cpu_halt 849,22428
machine_restart 873,22993
machine_halt 879,23089
machine_power_off 885,23132

xen/arch/ia64/linux-xen/cmdline.c,100
int get_option 37,873
char *get_options(get_options74,1669
unsigned long long memparse 103,2451

xen/arch/ia64/linux-xen/perfmon_generic.h,170
static pfm_reg_desc_t pfm_gen_pmc_desc[pfm_gen_pmc_desc9,217
static pfm_reg_desc_t pfm_gen_pmd_desc[pfm_gen_pmd_desc21,1199
static pmu_config_t pmu_conf_gen=36,2136

xen/arch/ia64/linux-xen/unwind_i.h,4366
#define UNW_VER(8,133
#define UNW_FLAG_MASK	9,165
#define UNW_FLAG_OSMASK	10,207
#define UNW_FLAG_EHANDLER(11,251
#define UNW_FLAG_UHANDLER(12,308
#define UNW_LENGTH(13,365
enum unw_register_index 15,417
	UNW_REG_PRI_UNAT_GR,17,464
	UNW_REG_PRI_UNAT_MEM,18,486
	UNW_REG_BSP,21,532
	UNW_REG_BSPSTORE,22,579
	UNW_REG_PFS,23,598
	UNW_REG_RNAT,24,646
	UNW_REG_PSP,26,681
	UNW_REG_RP,28,758
	UNW_REG_R4,31,800
	UNW_REG_R4, UNW_REG_R5,31,800
	UNW_REG_R4, UNW_REG_R5, UNW_REG_R6,31,800
	UNW_REG_R4, UNW_REG_R5, UNW_REG_R6, UNW_REG_R7,31,800
	UNW_REG_UNAT,32,849
	UNW_REG_UNAT, UNW_REG_PR,32,849
	UNW_REG_UNAT, UNW_REG_PR, UNW_REG_LC,32,849
	UNW_REG_UNAT, UNW_REG_PR, UNW_REG_LC, UNW_REG_FPSR,32,849
	UNW_REG_B1,33,902
	UNW_REG_B1, UNW_REG_B2,33,902
	UNW_REG_B1, UNW_REG_B2, UNW_REG_B3,33,902
	UNW_REG_B1, UNW_REG_B2, UNW_REG_B3, UNW_REG_B4,33,902
	UNW_REG_B1, UNW_REG_B2, UNW_REG_B3, UNW_REG_B4, UNW_REG_B5,33,902
	UNW_REG_F2,34,963
	UNW_REG_F2, UNW_REG_F3,34,963
	UNW_REG_F2, UNW_REG_F3, UNW_REG_F4,34,963
	UNW_REG_F2, UNW_REG_F3, UNW_REG_F4, UNW_REG_F5,34,963
	UNW_REG_F16,35,1012
	UNW_REG_F16, UNW_REG_F17,35,1012
	UNW_REG_F16, UNW_REG_F17, UNW_REG_F18,35,1012
	UNW_REG_F16, UNW_REG_F17, UNW_REG_F18, UNW_REG_F19,35,1012
	UNW_REG_F20,36,1065
	UNW_REG_F20, UNW_REG_F21,36,1065
	UNW_REG_F20, UNW_REG_F21, UNW_REG_F22,36,1065
	UNW_REG_F20, UNW_REG_F21, UNW_REG_F22, UNW_REG_F23,36,1065
	UNW_REG_F24,37,1118
	UNW_REG_F24, UNW_REG_F25,37,1118
	UNW_REG_F24, UNW_REG_F25, UNW_REG_F26,37,1118
	UNW_REG_F24, UNW_REG_F25, UNW_REG_F26, UNW_REG_F27,37,1118
	UNW_REG_F28,38,1171
	UNW_REG_F28, UNW_REG_F29,38,1171
	UNW_REG_F28, UNW_REG_F29, UNW_REG_F30,38,1171
	UNW_REG_F28, UNW_REG_F29, UNW_REG_F30, UNW_REG_F31,38,1171
	UNW_NUM_REGS39,1224
struct unw_info_block 42,1242
	u64 header;43,1266
	u64 desc[desc44,1279
struct unw_table 48,1403
	struct unw_table *next;next49,1422
	const char *name;name50,1476
	unsigned long gp;51,1495
	unsigned long segment_base;52,1557
	unsigned long start;53,1637
	unsigned long end;54,1659
	const struct unw_table_entry *array;array55,1679
	unsigned long length;56,1717
enum unw_where 59,1744
	UNW_WHERE_NONE,60,1761
	UNW_WHERE_GR,61,1814
	UNW_WHERE_FR,62,1877
	UNW_WHERE_BR,63,1947
	UNW_WHERE_SPREL,64,2009
	UNW_WHERE_PSPREL,65,2078
	UNW_WHERE_SPILL_HOME,70,2275
	UNW_WHERE_GR_SAVE	71,2341
#define UNW_WHEN_NEVER	74,2414
struct unw_reg_info 76,2449
	unsigned long val;77,2471
	enum unw_where where;78,2539
	int when;79,2599
struct unw_reg_state 82,2651
	struct unw_reg_state *next;next83,2674
	struct unw_reg_info reg[reg84,2746
struct unw_labeled_state 87,2820
	struct unw_labeled_state *next;next88,2847
	unsigned long label;89,2916
	struct unw_reg_state saved_state;90,2967
struct unw_state_record 93,3006
	unsigned int first_region 94,3032
	unsigned int done 95,3096
	unsigned int any_spills 96,3161
	unsigned int in_body 97,3222
	unsigned long flags;98,3304
	u8 *imask;imask100,3361
	unsigned long pr_val;101,3416
	unsigned long pr_mask;102,3463
	long spill_offset;103,3509
	int region_start;104,3571
	int region_len;105,3590
	int epilogue_start;106,3607
	int epilogue_count;107,3628
	int when_target;108,3649
	u8 gr_save_loc;110,3668
	u8 return_link_reg;111,3744
	struct unw_labeled_state *labeled_states;labeled_states113,3824
	struct unw_reg_state curr;114,3900
enum unw_nat_type 117,3952
	UNW_NAT_NONE,118,3972
	UNW_NAT_VAL,119,4014
	UNW_NAT_MEMSTK,120,4073
	UNW_NAT_REGSTK	121,4138
enum unw_insn_opcode 124,4180
	UNW_INSN_ADD,125,4203
	UNW_INSN_ADD_PSP,126,4240
	UNW_INSN_ADD_SP,127,4289
	UNW_INSN_MOVE,128,4336
	UNW_INSN_MOVE2,129,4376
	UNW_INSN_MOVE_STACKED,130,4438
	UNW_INSN_SETNAT_MEMSTK,131,4505
	UNW_INSN_SETNAT_TYPE,133,4613
	UNW_INSN_LOAD,134,4667
	UNW_INSN_MOVE_SCRATCH,135,4708
	UNW_INSN_MOVE_CONST,136,4766
struct unw_insn 139,4837
	unsigned int opc	140,4855
	unsigned int dst	141,4879
	signed int val	142,4903
#define UNW_MAX_SCRIPT_LEN	151,5162
struct unw_script 153,5209
	unsigned long ip;154,5229
	unsigned long pr_mask;155,5277
	unsigned long pr_val;156,5345
	rwlock_t lock;157,5411
	unsigned int flags;158,5427
	unsigned short lru_chain;159,5482
	unsigned short coll_chain;160,5550
	unsigned short hint;161,5609
	unsigned short count;162,5674
	struct unw_insn insn[insn163,5737

xen/arch/ia64/linux-xen/efi.c,1787
#define EFI_DEBUG	39,1159
struct efi efi;49,1459
static efi_runtime_services_t *runtime;runtime51,1495
static unsigned long mem_limit 54,1652
static unsigned long mem_limit 56,1739
#define efi_call_virt(59,1819
#define STUB_GET_TIME(61,1867
#define STUB_SET_TIME(80,2543
#define STUB_GET_WAKEUP_TIME(96,3078
#define STUB_SET_WAKEUP_TIME(113,3724
#define STUB_GET_VARIABLE(133,4402
#define STUB_GET_NEXT_VARIABLE(155,5195
#define STUB_SET_VARIABLE(172,5859
#define STUB_GET_NEXT_HIGH_MONO_COUNT(191,6562
#define STUB_RESET_SYSTEM(208,7166
#define phys_ptr(229,7889
STUB_GET_TIME(231,7946
#define id(241,8268
is_memory_available 269,8850
typedef struct kern_memdesc 285,9165
	u64 attribute;286,9195
	u64 start;287,9211
	u64 num_pages;288,9223
} kern_memdesc_t;289,9239
static kern_memdesc_t *kern_memmap;kern_memmap291,9258
#define efi_md_size(293,9295
kmd_end(296,9372
efi_md_end(302,9483
efi_wb(308,9583
efi_uc(314,9677
walk 320,9765
efi_memmap_walk 342,10367
efi_memmap_walk_uc 352,10626
__efi_get_pal_addr 365,10944
static void *pal_vaddr pal_vaddr435,13113
efi_get_pal_addr(438,13149
__efi_unmap_pal_code 448,13279
efi_unmap_pal_code 455,13411
efi_map_pal_code 474,13693
efi_init 499,14270
efi_enter_virtual_mode 631,18594
efi_get_iobase 719,21320
kern_memory_descriptor 740,21842
efi_memory_descriptor 752,22098
efi_mem_type 772,22588
efi_mem_attributes 782,22735
efi_mem_attribute 793,22928
kern_mem_attribute 821,23530
valid_phys_addr_range 859,24281
valid_mmap_phys_addr_range 876,24741
phys_mem_access_prot(887,25006
efi_uart_console_only(916,25805
find_memmap_space 966,27128
efi_memmap_init(1040,29219
efi_initialize_iomem_resources(1165,32694
kdump_find_rsvd_region 1263,35152
vmcore_find_descriptor_size 1308,36301

xen/arch/ia64/linux-xen/hpsim_ssc.h,891
#define _IA64_PLATFORM_HPSIM_SSC_H9,266
#define SSC_CONSOLE_INIT	13,333
#define SSC_GETCHAR	14,362
#define SSC_PUTCHAR	15,387
#define SSC_CONNECT_INTERRUPT	16,412
#define SSC_GENERATE_INTERRUPT	17,446
#define SSC_SET_PERIODIC_INTERRUPT	18,481
#define SSC_GET_RTC	19,519
#define SSC_EXIT	20,544
#define SSC_LOAD_SYMBOLS	21,566
#define SSC_GET_TOD	22,595
#define SSC_CTL_TRACE	23,620
#define SSC_NETDEV_PROBE	25,648
#define SSC_NETDEV_SEND	26,678
#define SSC_NETDEV_RECV	27,708
#define SSC_NETDEV_ATTACH	28,738
#define SSC_NETDEV_DETACH	29,769
#define SSC_OPEN	39,1067
#define SSC_CLOSE	40,1089
#define SSC_READ	41,1112
#define SSC_WRITE	42,1134
#define SSC_GET_COMPLETION	43,1157
#define SSC_WAIT_COMPLETION	44,1188
#define SSC_WRITE_ACCESS	46,1221
#define SSC_READ_ACCESS	47,1249
struct ssc_disk_req 49,1278
	unsigned long addr;50,1300
	unsigned long len;51,1321

xen/arch/ia64/linux-xen/acpi_numa.c,793
#define ACPI_NUMA	35,1218
#define _COMPONENT	36,1247
#define NID_INVAL	39,1308
#define PXM_INVAL	40,1329
static nodemask_t nodes_found_map 44,1370
static nodemask_t nodes_found_map;49,1539
static int pxm_to_node_map[pxm_to_node_map53,1649
static int node_to_pxm_map[node_to_pxm_map55,1744
int pxm_to_node(58,1834
int node_to_pxm(65,1928
void __acpi_map_pxm_to_node(72,2025
int acpi_map_pxm_to_node(78,2137
void __cpuinit acpi_unmap_pxm_to_node(95,2453
acpi_table_print_srat_entry(105,2684
static int __init acpi_parse_slit(156,4038
acpi_parse_processor_affinity(175,4386
acpi_parse_memory_affinity(193,4827
static int __init acpi_parse_srat(210,5229
acpi_table_parse_srat(223,5436
int __init acpi_numa_init(231,5680
int acpi_get_pxm(249,6184
int acpi_get_node(266,6532

xen/arch/ia64/linux-xen/perfmon_montecito.h,327
#define RDEP_MONT_ETB	10,394
#define RDEP_MONT_DEAR 12,586
#define RDEP_MONT_IEAR 13,639
static pfm_reg_desc_t pfm_mont_pmc_desc[pfm_mont_pmc_desc15,684
static pfm_reg_desc_t pfm_mont_pmd_desc[pfm_mont_pmd_desc62,4360
pfm_mont_reserved(134,8944
pfm_mont_pmc_check(155,9462
static pmu_config_t pmu_conf_mont=259,12675

xen/arch/ia64/linux-xen/irq_ia64.c,610
#define IRQ_DEBUG	51,1258
void __iomem *ipi_base_addr ipi_base_addr54,1316
__u8 isa_irq_to_vector_map[isa_irq_to_vector_map60,1487
unsigned long ia64_vector_mask[ia64_vector_mask68,1718
static unsigned long ia64_vector_mask[ia64_vector_mask70,1796
assign_irq_vector 74,1887
free_irq_vector 88,2197
#	define IS_RESCHEDULE(101,2497
#	define IS_RESCHEDULE(103,2560
ia64_handle_irq 111,2753
void ia64_process_pending_intr(189,4625
static struct irqaction __read_mostly ipi_irqaction 236,5696
register_percpu_irq 246,5851
int request_irq_vector(270,6350
init_IRQ 304,7128
ia64_send_ipi 317,7359

xen/arch/ia64/linux-xen/unaligned.c,3385
#undef DEBUG_UNALIGNED_TRAP29,1000
# define DPRINT(32,1057
# define DDUMP(33,1151
dump 36,1210
# define DPRINT(47,1388
# define DDUMP(48,1410
#define IA64_FIRST_STACKED_GR	51,1445
#define IA64_FIRST_ROTATING_FR	52,1478
#define SIGN_EXT9	53,1512
#define IA64_OPCODE_MASK	69,2047
#define IA64_OPCODE_SHIFT	70,2078
#define LD_OP 80,2313
#define LDS_OP 81,2344
#define LDA_OP 82,2375
#define LDSA_OP 83,2406
#define LDBIAS_OP 84,2437
#define LDACQ_OP 85,2468
#define LDCCLR_OP 87,2535
#define LDCNC_OP 88,2566
#define LDCCLRACQ_OP 89,2597
#define ST_OP 90,2628
#define STREL_OP 91,2659
#define LD_IMM_OP 109,3106
#define LDS_IMM_OP 110,3141
#define LDA_IMM_OP 111,3176
#define LDSA_IMM_OP 112,3211
#define LDBIAS_IMM_OP 113,3246
#define LDACQ_IMM_OP 114,3281
#define LDCCLR_IMM_OP 116,3351
#define LDCNC_IMM_OP 117,3386
#define LDCCLRACQ_IMM_OP 118,3421
#define ST_IMM_OP 119,3456
#define STREL_IMM_OP 120,3491
#define LDF_OP 126,3608
#define LDFS_OP 127,3639
#define LDFA_OP 128,3670
#define LDFSA_OP 129,3701
#define LDFCCLR_OP 131,3758
#define LDFCNC_OP 132,3789
#define STF_OP 134,3847
#define LDF_IMM_OP 146,4087
#define LDFS_IMM_OP 147,4118
#define LDFA_IMM_OP 148,4149
#define LDFSA_IMM_OP 149,4180
#define LDFCCLR_IMM_OP 151,4237
#define LDFCNC_IMM_OP 152,4268
#define STF_IMM_OP 153,4299
	unsigned long	 qp:qp156,4348
	unsigned long    r1:r1157,4384
	unsigned long   imm:imm158,4422
	unsigned long    r3:r3159,4460
	unsigned long     x:x160,4498
	unsigned long  hint:hint161,4537
	unsigned long x6_sz:x6_sz162,4575
	unsigned long x6_op:x6_op163,4613
	unsigned long     m:m164,4669
	unsigned long    op:op165,4707
	unsigned long   pad:pad166,4745
} load_store_t;167,4784
	UPD_IMMEDIATE,171,4817
	UPD_REG	172,4859
} update_t;173,4895
#define RPO(187,5335
#define RSO(188,5387
#define RPT(190,5445
#define RSW(191,5475
#define GR_OFFS(193,5507
#define GR_IN_SW(194,5542
#define FR_OFFS(196,5582
#define FR_IN_SW(197,5617
static u16 gr_info[gr_info199,5657
static u16 fr_info[fr_info220,6132
invala_gr 238,6628
#	define F(240,6652
#	undef F260,7783
invala_fr 265,7872
#	define F(267,7896
#	undef F287,9027
rotate_reg 292,9085
set_rse_reg 302,9238
get_rse_reg 368,11080
set_rse_reg 418,12555
get_rse_reg 491,14952
setreg 569,17199
fph_index 632,18792
setfpreg 640,18987
float_spill_f0 694,20457
float_spill_f1 700,20550
getfpreg 707,20648
getfpreg 757,21967
#define CASE_FIXED_FP(762,22204
#define CASE_SAVED_FP(766,22290
#undef CASE_FIXED_FP903,25172
#undef CASE_SAVED_FP904,25193
setfpreg 909,25223
#define CASE_FIXED_FP(916,25481
#define CASE_RESTORED_FP(920,25566
#undef CASE_FIXED_FP1055,28431
#undef CASE_RESTORED_FP1056,28452
getreg 1067,28539
emulate_load_updates 1117,29465
emulate_load_int 1197,31392
emulate_store_int 1318,35826
static const unsigned char float_fsz[float_fsz1396,37456
mem2float_extended 1404,37657
mem2float_integer 1412,37814
mem2float_single 1420,37970
mem2float_double 1428,38125
float2mem_extended 1436,38280
float2mem_integer 1444,38436
float2mem_single 1452,38591
float2mem_double 1460,38745
emulate_load_floatpair 1469,38903
emulate_load_float 1574,41708
emulate_store_float 1650,43564
within_logging_rate_limit 1739,45617
ia64_handle_unaligned 1755,45834
		unsigned long l;1767,46177
		load_store_t insn;1768,46196

xen/arch/ia64/linux-xen/unwind.c,5163
#undef write_trylock41,1702
#define write_trylock(43,1741
#define write_trylock(45,1800
#define UNW_LOG_CACHE_SIZE	71,2273
#define UNW_CACHE_SIZE	72,2346
#define UNW_LOG_HASH_SIZE	74,2397
#define UNW_HASH_SIZE	75,2448
#define UNW_STATS	77,2497
  static unsigned int unw_debug_level 80,2597
#  define UNW_DEBUG_ON(81,2648
#  define UNW_DPRINT(83,2767
#  define inline84,2838
#  define UNW_DEBUG_ON(86,2878
#  define UNW_DPRINT(87,2907
# define STAT(91,2974
# define STAT(93,3002
#define alloc_reg_state(97,3041
#define free_reg_state(98,3118
#define alloc_labeled_state(99,3157
#define free_labeled_state(100,3242
#define alloc_reg_state(102,3291
#define free_reg_state(103,3367
#define alloc_labeled_state(104,3406
#define free_labeled_state(105,3490
typedef unsigned long unw_word;108,3541
typedef unsigned char unw_hash_index_t;109,3573
	spinlock_t lock;112,3630
	struct unw_table *tables;tables115,3733
	unsigned long r0;117,3761
	const unsigned char save_order[save_order120,3893
	unsigned short sw_off[sw_off123,4020
	unsigned short lru_head;125,4080
	unsigned short lru_tail;126,4148
	unsigned short preg_index[preg_index129,4275
	short pt_regs_offsets[pt_regs_offsets131,4318
	struct unw_table kernel_table;134,4383
	size_t gate_table_size;137,4507
	unsigned long *gate_table;gate_table138,4532
	unsigned short hash[hash141,4626
	struct unw_script cache[cache144,4685
	const char *preg_name[preg_name147,4746
			int lookups;152,4828
			int hinted_hits;153,4844
			int normal_hits;154,4864
			int collision_chain_traversals;155,4884
		} cache;156,4919
			unsigned long build_time;158,4941
			unsigned long run_time;159,4970
			unsigned long parse_time;160,4997
			int builds;161,5026
			int news;162,5041
			int collisions;163,5054
			int runs;164,5073
		} script;165,5086
			unsigned long init_time;167,5109
			unsigned long unwind_time;168,5137
			int inits;169,5167
			int unwinds;170,5181
		} api;171,5197
	} stat;172,5206
} unw 174,5223
read_only 270,8886
pt_regs_off 279,9071
get_scratch_regs 294,9368
unw_access_gr 311,9879
unw_access_br 437,13177
unw_access_fr 473,14076
unw_access_ar 527,15314
unw_access_pr 624,17124
push 648,17582
pop 662,17826
dup_state_stack 676,18151
free_state_stack 699,18615
decode_abreg 713,18884
set_reg 739,19798
alloc_spill_area 748,19993
spill_next_when 763,20324
finish_prologue 778,20660
desc_prologue 839,22292
desc_abi 886,23278
desc_br_gr 898,23635
desc_br_mem 911,23919
desc_frgr_mem 926,24220
desc_fr_mem 950,24807
desc_gr_gr 965,25115
desc_gr_mem 978,25406
desc_mem_stack_f 993,25714
desc_mem_stack_v 1000,25931
desc_reg_gr 1006,26102
desc_reg_psprel 1012,26294
desc_reg_sprel 1019,26506
desc_rp_br 1026,26707
desc_reg_when 1032,26819
desc_spill_base 1042,27109
desc_spill_mask 1048,27244
desc_epilogue 1058,27429
desc_copy_state 1065,27625
desc_label_state 1081,28062
desc_is_active 1104,28572
desc_restore_p 1117,28872
desc_spill_reg_p 1131,29174
desc_spill_psprel_p 1152,29684
desc_spill_sprel_p 1167,30069
#define UNW_DEC_BAD_CODE(1181,30426
#define UNW_DEC_PROLOGUE_GR(1187,30557
#define UNW_DEC_PROLOGUE(1188,30629
#define UNW_DEC_ABI(1192,30728
#define UNW_DEC_BR_GR(1193,30780
#define UNW_DEC_BR_MEM(1194,30836
#define UNW_DEC_FRGR_MEM(1195,30890
#define UNW_DEC_FR_MEM(1196,30952
#define UNW_DEC_GR_GR(1197,31006
#define UNW_DEC_GR_MEM(1198,31062
#define UNW_DEC_MEM_STACK_F(1199,31116
#define UNW_DEC_MEM_STACK_V(1200,31183
#define UNW_DEC_REG_GR(1201,31247
#define UNW_DEC_REG_PSPREL(1202,31305
#define UNW_DEC_REG_SPREL(1203,31371
#define UNW_DEC_REG_WHEN(1204,31435
#define UNW_DEC_PRIUNAT_WHEN_GR(1205,31497
#define UNW_DEC_PRIUNAT_WHEN_MEM(1206,31581
#define UNW_DEC_PRIUNAT_GR(1207,31667
#define UNW_DEC_PRIUNAT_PSPREL(1208,31745
#define UNW_DEC_PRIUNAT_SPREL(1209,31831
#define UNW_DEC_RP_BR(1210,31915
#define UNW_DEC_SPILL_BASE(1211,31967
#define UNW_DEC_SPILL_MASK(1212,32029
#define UNW_DEC_EPILOGUE(1216,32125
#define UNW_DEC_COPY_STATE(1217,32187
#define UNW_DEC_LABEL_STATE(1218,32249
#define UNW_DEC_SPILL_REG_P(1222,32351
#define UNW_DEC_SPILL_REG(1223,32428
#define UNW_DEC_SPILL_PSPREL_P(1224,32501
#define UNW_DEC_SPILL_PSPREL(1225,32580
#define UNW_DEC_SPILL_SPREL_P(1226,32655
#define UNW_DEC_SPILL_SPREL(1227,32732
#define UNW_DEC_RESTORE_P(1228,32805
#define UNW_DEC_RESTORE(1229,32871
hash 1237,33019
#	define hashmagic	1239,33045
#undef hashmagic1242,33177
cache_match 1246,33216
script_lookup 1257,33513
script_new 1299,34522
script_finalize 1365,36177
script_emit 1378,36564
emit_nat_info 1389,36864
compile_reg 1434,37867
lookup 1533,40274
build_script 1559,40906
run_script 1737,46711
is_hypervisor_virt(1855,49496
find_save_locs 1864,49659
unw_unwind 1911,50757
unw_unwind_to_user 2000,53801
init_frame_info 2047,55037
unw_init_from_interruption 2095,56678
unw_init_frame_info 2117,57341
unw_init_from_blocked_task 2137,57919
init_unwind_table 2151,58316
unw_add_unwind_table 2167,58803
unw_remove_unwind_table 2198,59608
create_gate_table 2257,60974
unw_init 2315,62604
sys_getunwind 2386,65392

xen/arch/ia64/linux-xen/unwind_decoder.c,522
unw_decode_uleb128 66,2034
unw_decode_x1 85,2353
unw_decode_x2 102,2742
unw_decode_x3 120,3181
unw_decode_x4 140,3635
unw_decode_r1 161,4137
unw_decode_r2 172,4359
unw_decode_r3 187,4703
unw_decode_p1 197,4918
unw_decode_p2_p5 206,5100
unw_decode_p6 255,6692
unw_decode_p7_p10 268,6961
unw_decode_b1 367,10219
unw_decode_b2 379,10474
unw_decode_b3_x4 389,10674
typedef unsigned char *(*unw_decoder)unw_decoder419,11449
static unw_decoder unw_decode_table[unw_decode_table421,11530
unw_decode 450,12066

xen/arch/ia64/linux-xen/numa.c,220
nodemask_t __read_mostly node_online_map 35,1119
u8 cpu_to_node_map[NR_CPUS] __cacheline_aligned;38,1189
cpumask_t node_to_cpu_mask[MAX_NUMNODES] __cacheline_aligned;41,1271
void __init build_cpu_to_node_map(49,1546

xen/arch/ia64/linux-xen/iosapic.c,3074
static inline int iosapic_irq_to_vector 97,4374
#undef irq_to_vector102,4442
#define irq_to_vector(103,4463
#define AUTO_ASSIGN	104,4522
#undef DEBUG_INTERRUPT_ROUTING107,4566
#define DBG(110,4629
#define DBG(112,4667
#define NR_PREALLOCATE_RTE_ENTRIES	115,4695
#define RTE_PREALLOCATED	116,4776
struct iosapic_rte_info 122,4930
	struct list_head rte_list;123,4956
	char __iomem	*addr;addr124,5035
	unsigned int	gsi_base;125,5087
	char		rte_index;126,5152
	int		refcnt;127,5194
	unsigned int	flags;128,5233
} ____cacheline_aligned;129,5267
static struct iosapic_intr_info 131,5293
	struct list_head rtes;132,5327
	int		count;133,5417
	u32		low32;134,5471
	unsigned int	dest;135,5544
	unsigned char	dmode	136,5599
	unsigned char 	polarity:polarity137,5661
	unsigned char	trigger	138,5731
} iosapic_intr_info[iosapic_intr_info139,5794
static struct iosapic 142,5846
	char __iomem	*addr;addr143,5870
	unsigned int 	gsi_base;144,5922
	unsigned short 	num_rte;145,5988
	int		rtes_inuse;146,6050
	unsigned short	node;148,6126
} iosapic_lists[iosapic_lists150,6192
struct iosapic iosapic_lists[iosapic_lists152,6228
static unsigned char pcat_compat __devinitdata;155,6279
static int iosapic_kmalloc_ok;157,6358
find_iosapic 164,6489
_gsi_to_vector 177,6698
gsi_to_vector 194,7154
gsi_to_irq 200,7225
static struct iosapic_rte_info *gsi_vector_to_rte(gsi_vector_to_rte217,7538
set_rte 228,7813
nop 279,9112
kexec_disable_iosapic(285,9169
mask_irq 303,9797
unmask_irq 329,10441
iosapic_set_affinity 355,11059
iosapic_startup_level_irq 411,12484
iosapic_end_level_irq 418,12575
#define iosapic_shutdown_level_irq	428,12805
#define iosapic_enable_level_irq	429,12849
#define iosapic_disable_level_irq	430,12893
#define iosapic_ack_level_irq	431,12936
static hw_irq_controller irq_type_iosapic_level 433,12972
iosapic_startup_edge_irq 449,13388
iosapic_ack_edge_irq 461,13650
#define iosapic_enable_edge_irq	475,13996
#define iosapic_disable_edge_irq	476,14040
#define iosapic_end_edge_irq	477,14077
static hw_irq_controller irq_type_iosapic_edge 479,14112
iosapic_version 491,14461
static int iosapic_find_sharable_vector 505,14756
iosapic_reassign_vector 536,15560
static struct iosapic_rte_info *iosapic_alloc_rte iosapic_alloc_rte555,16308
static void iosapic_free_rte 590,17198
static inline int vector_is_shared 598,17368
register_intr 604,17479
get_target_cpu 669,19308
iosapic_register_intr 750,21297
iosapic_unregister_intr 825,23340
iosapic_register_platform_intr 912,25823
iosapic_override_isa_irq 965,27466
iosapic_system_init 985,28050
iosapic_alloc 1007,28606
iosapic_free 1020,28847
iosapic_check_gsi_range 1026,28956
iosapic_init 1053,29511
iosapic_remove 1108,30923
map_iosapic_to_node(1140,31588
static int __init iosapic_enable_kmalloc 1156,31873
void set_irq_affinity_info(1166,32038
static int iosapic_physbase_to_id(1168,32108
int iosapic_guest_read(1181,32359
int iosapic_guest_write(1196,32694
int iosapic_get_nr_iosapics(1280,35386
int iosapic_get_nr_pins(1292,35558

xen/arch/ia64/linux-xen/perfmon_mckinley.h,225
static pfm_reg_desc_t pfm_mck_pmc_desc[pfm_mck_pmc_desc10,355
static pfm_reg_desc_t pfm_mck_pmd_desc[pfm_mck_pmd_desc30,2611
pfm_mck_reserved(56,5418
pfm_mck_pmc_check(77,5935
static pmu_config_t pmu_conf_mck=175,9096

xen/arch/ia64/linux-xen/entry.S,1173
.ret0:.ret072,1762
.ret1:.ret1144,4035
.ret2:.ret2176,5088
.done:.done228,6397
.map:.map258,7194
.strace_check_retval:.strace_check_retval593,15304
.strace_save_retval:.strace_save_retval600,15549
.mem.offset 601,15570
.mem.offset 602,15643
.ret3:.ret3604,15810
strace_error:strace_error606,15857
.ret4:.ret4632,16641
.ret8:.ret8686,18082
.work_processed_syscall:.work_processed_syscall782,21298
.work_processed_kernel:.work_processed_kernel931,26058
rbs_switch:rbs_switch1119,30331
dont_preserve_current_frame:dont_preserve_current_frame1130,30691
rse_clear_invalid:rse_clear_invalid1153,31357
skip_rbs_switch:skip_rbs_switch1212,32661
.work_pending_syscall:.work_pending_syscall1256,33768
.work_pending:.work_pending1262,33850
.ret9:.ret91275,34259
.notify:.notify1286,34572
.ret10:.ret101288,34629
.sigdelayed:.sigdelayed1297,35035
.work_pending_syscall_end:.work_pending_syscall_end1303,35242
.ret11:.ret111342,36379
.ret15:.ret151369,37355
.ret17:.ret171395,38132
.ret19:.ret191437,39206
.ret21:.ret211456,39621
ia64_hypercall_table:ia64_hypercall_table1519,41187
sys_call_table:sys_call_table1592,43737

xen/arch/ia64/linux-xen/mca_asm.S,1782
ia64_do_tlb_purge:ia64_do_tlb_purge164,5003
.vpd_not_mapped:.vpd_not_mapped294,7242
.vhpt_not_mapped:.vhpt_not_mapped312,7584
ia64_os_mca_dispatch:ia64_os_mca_dispatch318,7662
ia64_os_mca_spin:ia64_os_mca_spin323,7773
begin_os_mca_dump:begin_os_mca_dump338,8194
ia64_os_mca_done_dump:ia64_os_mca_done_dump341,8248
begin_tlb_purge_and_reload:begin_tlb_purge_and_reload364,8814
ia64_reload_tr:ia64_reload_tr370,8958
.vmx_domain:.vmx_domain529,11855
.reload_vpd_not_mapped:.reload_vpd_not_mapped572,12530
.overlap_vhpt:.overlap_vhpt622,13516
err:err625,13578
done_tlb_purge_and_reload:done_tlb_purge_and_reload629,13661
ia64_os_mca_virtual_begin:ia64_os_mca_virtual_begin647,14171
.ret0:.ret0653,14307
ia64_os_mca_virtual_end:ia64_os_mca_virtual_end656,14430
begin_os_mca_restore:begin_os_mca_restore670,14749
ia64_os_mca_done_restore:ia64_os_mca_done_restore673,14809
ia64_os_mca_dispatch_end:ia64_os_mca_dispatch_end686,15068
ia64_os_mca_proc_state_dump:ia64_os_mca_proc_state_dump700,15336
cSaveCRs:cSaveCRs757,16582
begin_skip_intr_regs:begin_skip_intr_regs777,17160
SkipIntrRegs:SkipIntrRegs807,17732
cSaveARs:cSaveARs846,18708
cStRR:cStRR910,19824
end_os_mca_dump:end_os_mca_dump917,19929
ia64_os_mca_proc_state_restore:ia64_os_mca_proc_state_restore933,20222
restore_GRs:restore_GRs940,20358
restore_BRs:restore_BRs966,21013
restore_CRs:restore_CRs989,21388
begin_rskip_intr_regs:begin_rskip_intr_regs1009,21969
rSkipIntrRegs:rSkipIntrRegs1038,22545
restore_ARs:restore_ARs1079,23484
restore_RRs:restore_RRs1139,24512
cStRRr:cStRRr1143,24576
end_os_mca_restore:end_os_mca_restore1152,24754
IVirtual_Switch:IVirtual_Switch1221,26834
.ret1:.ret11236,27219
return_from_init:return_from_init1238,27227

xen/arch/ia64/linux-xen/head.S,554
_lbl:_lbl59,1827
RestRR:RestRR90,2680
empty_zero_page:empty_zero_page178,5766
swapper_pg_dir:swapper_pg_dir183,5837
frametable_pg_dir:frametable_pg_dir189,5961
halt_msg:halt_msg194,6014
start_ap:start_ap207,6285
.load_current:.load_current367,9628
.ret0:.ret0430,11210
.ret1:.ret1439,11406
.ret2:.ret2442,11455
self:self449,11575
.wait:.wait1156,27946
ia64_spinlock_contention_pre3_4_end:ia64_spinlock_contention_pre3_4_end1167,28345
.wait:.wait1178,28534
.wait2:.wait21181,28669
tlb_purge_done:tlb_purge_done1230,29717

xen/arch/ia64/linux-xen/smpboot.c,2534
cpumask_t cpu_online_map 69,2050
#define SMP_DEBUG 76,2173
#define Dprintk(79,2208
#define Dprintk(81,2247
struct task_struct *idle_thread_array[idle_thread_array90,2467
struct sal_to_os_boot sal_boot_rendez_state[sal_boot_rendez_state95,2574
struct sal_to_os_boot *sal_state_for_booting_cpu sal_state_for_booting_cpu101,2706
#define set_brendez_area(103,2785
#define get_idle_for_cpu(105,2873
#define set_idle_for_cpu(106,2927
#define get_idle_for_cpu(110,2996
#define set_idle_for_cpu(111,3032
#define set_brendez_area(112,3062
#define MASTER	119,3144
#define SLAVE	120,3161
#define NUM_ROUNDS	122,3196
#define NUM_ITERS	123,3236
static volatile unsigned long go[go126,3311
#define DEBUG_ITC_SYNC	128,3357
task_t *task_for_booting_cpu;task_for_booting_cpu134,3493
cpumask_t cpu_online_map;142,3640
cpumask_t cpu_possible_map;144,3697
int smp_num_siblings 149,3868
int smp_num_cpucores 150,3894
volatile int ia64_cpu_to_sapicid[ia64_cpu_to_sapicid153,3989
static volatile cpumask_t cpu_callin_map;156,4069
struct smp_boot_data smp_boot_data __initdata;158,4112
unsigned long ap_wakeup_vector 160,4160
char __initdata no_int_routing;162,4235
unsigned char smp_int_redirect;164,4268
nointroute 167,4370
static void fix_b0_for_bsp(176,4499
sync_master 198,4889
get_delta 223,5416
ia64_sync_itc 287,7535
		long rt;293,7705
		long master;294,7737
		long diff;295,7777
		long lat;296,7847
smp_setup_percpu_timer 360,9453
smp_callin 365,9510
start_secondary 449,11210
struct pt_regs * __devinit idle_regs(471,11594
struct create_idle 477,11684
	struct task_struct *idle;idle478,11705
	struct completion done;479,11732
	int cpu;480,11757
do_fork_idle(484,11776
do_boot_cpu 494,11943
decay 568,13567
smp_build_cpu_map 582,13750
smp_prepare_cpus 615,14477
void __devinit smp_prepare_boot_cpu(653,15295
	__u32   socket_id;666,15661
	__u16   core_id;667,15681
	__u16   thread_id;668,15699
	__u16   proc_fixed_addr;669,15719
	__u8    valid;670,15745
} mt_info[NR_CPUS] __devinitdata;671,15761
remove_from_mtinfo(675,15864
clear_cpu_sibling_map(686,16063
remove_siblinginfo(700,16400
void __cpu_disable(725,16991
void __cpu_disable(738,17234
void __cpu_die(745,17330
void __cpu_die(765,17721
smp_cpus_done 773,17841
set_cpu_sibling_map(791,18262
__cpu_up 808,18656
init_smp_config(849,19559
	struct fptr 851,19583
		unsigned long fp;852,19598
		unsigned long gp;853,19618
check_for_mtinfo_index(867,20038
check_for_new_socket(884,20350
identify_siblings(905,20905

xen/arch/ia64/linux-xen/sn/kernel/sn2_smp.c,1621
#define sn2_ptctest	65,1779
#define local_node_uses_ptc_ga(66,1801
#define max_active_pio(67,1853
#define reset_max_active_on_deadlock(68,1899
#define PTC_LOCK(70,1952
#define PTC_LOCK(72,2037
struct ptc_stats 75,2090
	unsigned long ptc_l;76,2109
	unsigned long change_rid;77,2131
	unsigned long shub_ptc_flushes;78,2158
	unsigned long nodes_flushed;79,2191
	unsigned long deadlocks;80,2221
	unsigned long deadlocks2;81,2247
	unsigned long lock_itc_clocks;82,2274
	unsigned long shub_itc_clocks;83,2306
	unsigned long shub_itc_clocks_max;84,2338
	unsigned long shub_ptc_flushes_not_my_mm;85,2374
#define sn2_ptctest	88,2421
static inline unsigned long wait_piowc(90,2444
void sn_migrate(113,3254
void sn_tlb_migrate_finish(125,3622
struct sn_flush_struct 166,5089
	unsigned long start;167,5114
	unsigned long end;168,5136
	unsigned long nbits;169,5156
static void sn_flush_ptcga_cpu(172,5182
sn2_global_tlb_purge(200,5694
sn2_global_tlb_purge(249,6761
sn2_ptc_deadlock_recovery(421,11010
void sn_send_IPI_phys(465,12268
void sn2_send_IPI(508,13457
#define PTC_BASENAME	530,13960
static void *sn2_ptc_seq_start(sn2_ptc_seq_start532,14006
static void *sn2_ptc_seq_next(sn2_ptc_seq_next539,14137
static void sn2_ptc_seq_stop(547,14293
static int sn2_ptc_seq_show(551,14362
static struct seq_operations sn2_ptc_seq_ops 578,15247
static int sn2_ptc_proc_open(585,15409
static struct file_operations proc_sn2_ptc_operations 590,15525
static struct proc_dir_entry *proc_sn2_ptc;proc_sn2_ptc597,15681
static int __init sn2_ptc_init(599,15726
static void __exit sn2_ptc_exit(613,16073

xen/arch/ia64/linux-xen/sn/kernel/io_init.c,1362
#define pci_dev_get(42,1026
static struct list_head sn_sysdata_list;46,1106
struct sysdata_el 49,1174
	struct list_head entry;50,1194
	void *sysdata;sysdata51,1219
struct slab_info 54,1239
	struct hubdev_info hubdev;55,1258
struct brick 58,1290
	moduleid_t id;59,1305
	struct slab_info slab_info[slab_info60,1360
int sn_ioif_inited;63,1408
struct sn_pcibus_provider *sn_pci_provider[sn_pci_provider65,1471
static int max_segment_number;67,1565
static int max_pcibus_number 68,1635
sn_default_pci_map(75,1785
sn_default_pci_unmap(81,1898
sn_default_pci_bus_fixup(87,2001
static struct sn_pcibus_provider sn_pci_default_provider 92,2109
sal_get_device_dmaflush_list(104,2489
static inline u64 sal_get_hubdev_info(121,2916
static inline u64 sal_get_pcibus_info(136,3263
sal_get_pcidev_info(152,3676
sn_pcidev_info_get(173,4171
static u8 war_implemented 192,4649
static s64 sn_device_fixup_war(194,4681
static void __init sn_fixup_ionodes(228,5604
sn_pci_window_fixup(328,8392
void sn_pci_unfixup_slot(364,9331
void sn_pci_fixup_slot(381,9763
void sn_pci_controller_fixup(490,13031
void sn_bus_store_sysdata(620,17108
void sn_bus_free_sysdata(633,17420
#define PCI_BUSES_TO_SCAN 654,17874
static int __init sn_io_early_init(656,17905
void hubdev_init_node(722,19344
cnodeid_get_geoid(745,19784
void sn_generate_path(754,19951

xen/arch/ia64/linux-xen/sn/kernel/irq.c,1012
#define pci_dev_get(30,712
#define move_native_irq(31,752
int sn_force_interrupt_flag 40,992
struct list_head **sn_irq_lh;sn_irq_lh42,1052
u64 sn_intr_alloc(45,1144
void sn_intr_free(62,1614
static unsigned int sn_startup_irq(75,1983
static void sn_shutdown_irq(80,2052
static void sn_disable_irq(84,2103
static void sn_enable_irq(88,2153
static void sn_ack_irq(92,2202
static void sn_end_irq(105,2548
struct sn_irq_info *sn_retarget_vector(sn_retarget_vector130,3262
static void sn_set_affinity_irq(209,5293
static hw_irq_controller irq_type_sn 224,5677
unsigned int sn_local_vector_to_irq(241,6001
void sn_irq_init(246,6110
static void register_intr_pda(268,6546
static void unregister_intr_pda(282,6879
static void sn_irq_info_free(344,8114
void sn_irq_fixup(354,8305
void sn_irq_unfixup(385,9102
sn_call_force_intr_provider(424,9922
static void force_interrupt(433,10195
static void sn_check_intr(471,11141
void sn_lb_int_war_check(508,12153
void __init sn_irq_lh_init(543,12755

xen/arch/ia64/linux-xen/sn/kernel/setup.c,2499
#define MAX_PHYS_MEMORY	80,1747
unsigned long sn_rtc_cycles_per_second;90,2079
char sn_system_serial_number_string[sn_system_serial_number_string102,2453
u64 sn_partition_serial_number;104,2542
u8 sn_partition_id;106,2617
u8 sn_system_size;108,2669
u8 sn_sharing_domain_size;110,2719
u8 sn_coherency_id;112,2785
u8 sn_region_size;114,2837
int sn_prom_type;116,2887
short physical_node_map[physical_node_map118,2961
static unsigned long sn_prom_features[sn_prom_features119,3006
int num_cnodes;123,3104
static nodepda_t *nodepdaindr[nodepdaindr128,3195
struct screen_info sn_screen_info 136,3429
static int __init pxm_to_nasid(157,3946
void __init early_sn_setup(178,4369
static int __initdata shub_1_1_found;219,5625
static inline int __init is_shub_1_1(227,5740
static void __init sn_check_for_wars(239,5980
struct hcdp_uart_desc 272,6994
	u8	pad[pad273,7018
struct pcdp 276,7035
	u8	signature[signature277,7049
	u32	length;278,7090
	u8	rev;279,7103
	u8	sum;280,7155
	u8	oem_id[oem_id281,7164
	u64	oem_tableid;282,7179
	u32	oem_rev;283,7197
	u32	creator_id;284,7211
	u32	creator_rev;285,7228
	u32	num_type0;286,7246
	struct hcdp_uart_desc uart[uart287,7262
struct pcdp_device_desc 291,7379
	u8	type;292,7405
	u8	primary;293,7415
	u16	length;294,7428
	u16	index;295,7441
struct pcdp_interface_pci 300,7575
	u8	type;301,7603
	u8	reserved;302,7629
	u16	length;303,7643
	u8	segment;304,7656
	u8	bus;305,7669
	u8 	dev;306,7678
	u8	fun;307,7688
	u16	devid;308,7697
	u16	vendid;309,7709
	u32	acpi_interrupt;310,7722
	u64	mmio_tra;311,7743
	u64	ioport_tra;312,7758
	u8	flags;313,7775
	u8	translation;314,7786
struct pcdp_vga_device 317,7832
	u8	num_eas_desc;318,7857
#define PCDP_PRIMARY_CONSOLE	323,7988
#define PCDP_CONSOLE_INOUT	326,8056
#define PCDP_CONSOLE_DEBUG	327,8087
#define PCDP_CONSOLE_OUT	328,8118
#define PCDP_CONSOLE_IN	329,8147
#define PCDP_CONSOLE_TYPE_VGA	330,8176
#define PCDP_CONSOLE_VGA	332,8211
#define PCDP_IF_PCI	335,8315
#define PCDP_PCI_TRANS_IOPORT	338,8381
#define PCDP_PCI_TRANS_MMIO	339,8416
sn_scan_pcdp(343,8516
static unsigned long sn2_rtc_initial;386,9586
static unsigned long long ia64_sn2_printk_clock(388,9625
void __init sn_setup(409,10165
static void __init sn_init_pdas(539,13566
void __cpuinit sn_cpu_init(600,15266
static inline int __init board_needs_cnode(728,18612
void __init build_cnode_tables(733,18723
nasid_slice_to_cpuid(784,20193
int sn_prom_feature_available(796,20391

xen/arch/ia64/linux-xen/sn/kernel/iomv.c,134
#define IS_LEGACY_VGA_IOPORT(21,506
#define vga_console_iobase	25,620
void *sn_io_addr(sn_io_addr36,936
void __sn_mmiowb(73,1959

xen/arch/ia64/linux-xen/perfmon_itanium.h,199
static pfm_reg_desc_t pfm_ita_pmc_desc[pfm_ita_pmc_desc10,354
static pfm_reg_desc_t pfm_ita_pmd_desc[pfm_ita_pmd_desc28,2148
pfm_ita_pmc_check(51,4845
static pmu_config_t pmu_conf_ita=104,6561

xen/arch/ia64/linux-xen/sal.c,922
unsigned long sal_platform_features;28,645
unsigned short sal_revision;30,683
unsigned short sal_version;31,712
#define SAL_MAJOR(33,741
#define SAL_MINOR(34,773
	void *addr;addr37,824
	void *gpval;gpval38,864
} pdesc;39,900
default_handler 42,922
ia64_sal_handler ia64_sal 47,962
ia64_sal_desc_ptc_t *ia64_ptc_domain_info;ia64_ptc_domain_info48,1026
ia64_sal_strerror 51,1083
ia64_sal_handler_init 93,2962
check_versions 102,3199
sal_desc_entry_point 121,3750
set_smp_redirect 130,3980
#define set_smp_redirect(151,4593
sal_desc_platform_feature 155,4668
sal_desc_ap_wakeup 183,5435
chk_nointroute_opt(200,5817
static void __init sal_desc_ap_wakeup(220,6140
static int sal_cache_flush_drops_interrupts;230,6485
check_sal_cache_flush 233,6550
ia64_sal_cache_flush 273,7319
ia64_sal_init 295,7756
ia64_sal_oemcall(352,9026
ia64_sal_oemcall_nolock(363,9367
ia64_sal_oemcall_reentrant(376,9735

xen/arch/ia64/linux-xen/smp.c,915
void smp_send_event_check_mask(60,1759
struct call_data_struct 85,2404
	void (*func)func86,2430
	void *info;info87,2458
	long wait;88,2471
	atomic_t started;89,2483
	atomic_t finished;90,2502
static volatile struct call_data_struct *call_data;call_data93,2526
#define IPI_CALL_FUNC	95,2579
#define IPI_CPU_STOP	96,2604
#define IPI_STATE_DUMP	97,2628
static DEFINE_PER_CPU(100,2739
unlock_ipi_calllock(113,2983
lock_ipi_calllock(119,3083
unlock_ipi_calllock(125,3145
stop_this_cpu 132,3225
cpu_die(144,3381
handle_IPI 155,3506
send_IPI_single 227,5088
send_IPI_allbutself 237,5311
send_IPI_all 251,5537
send_IPI_self 264,5715
smp_send_reschedule 274,5846
smp_flush_tlb_all 280,5952
smp_flush_tlb_mm 286,6049
smp_call_function_single 322,7206
smp_call_function 390,8874
on_selected_cpus(443,10012
smp_send_stop 479,10730
smp_send_state_dump 485,10797
setup_profiling_timer 491,10891

xen/arch/ia64/linux-xen/setup.c,1865
unsigned long __per_cpu_offset[__per_cpu_offset75,2148
unsigned long ia64_cycles_per_usec;85,2445
struct ia64_boot_param *ia64_boot_param;ia64_boot_param86,2481
struct screen_info screen_info;87,2522
unsigned long vga_console_iobase;88,2554
unsigned long vga_console_membase;89,2588
unsigned long ia64_max_cacheline_size;91,2624
unsigned long ia64_iobase;92,2663
struct io_space io_space[io_space94,2757
unsigned int num_io_spaces;96,2823
#define	I_CACHE_STRIDE_SHIFT	107,3094
unsigned long ia64_i_cache_stride_shift 108,3170
#define D_CACHE_STRIDE_SHIFT	111,3228
unsigned long ia64_d_cache_stride_shift 112,3274
unsigned long ia64_max_iommu_merge_mask 124,3871
struct rsvd_region rsvd_region[rsvd_region130,4050
int num_rsvd_regions;131,4109
filter_rsvd_memory 141,4468
sort_regions 186,5584
reserve_memory 211,6188
find_initrd 307,8902
io_port_init 321,9268
acpi_oem_console_setup(354,10305
early_console_setup 434,12515
mark_bsp_online 462,13029
check_for_logical_procs 472,13220
early_setup_arch 500,13872
late_setup_arch 563,15109
show_cpuinfo 631,16601
#	define lpj	634,16664
#	define cpunum	635,16696
#	define lpj	637,16725
#	define cpunum	638,16754
		unsigned long mask;641,16796
		const char *feature_name;feature_name642,16818
c_start 717,18862
c_next 727,19066
c_stop 734,19167
struct seq_operations cpuinfo_op 738,19209
identify_cpu 747,19350
		unsigned long bits[bits750,19399
			char vendor[vendor753,19454
			u64 ppn;756,19489
			unsigned number	759,19548
			unsigned revision	760,19574
			unsigned model	761,19601
			unsigned family	762,19626
			unsigned archrev	763,19652
			unsigned reserved	764,19678
			u64 features;767,19721
		} field;768,19738
setup_per_cpu_areas 809,20868
get_max_cacheline_size 821,21101
cpu_init 890,23180
#		define FEATURE_SET 928,24227
check_bugs 1047,28026

xen/arch/ia64/linux-xen/tlb.c,246
	unsigned long mask;27,658
	unsigned long max_bits;28,720
} purge;29,795
struct ia64_ctx ia64_ctx 32,817
wrap_mmu_context 45,1098
ia64_global_tlb_purge 91,2256
local_flush_tlb_all 111,2651
flush_tlb_range 143,3473
ia64_tlb_init 181,4329

xen/arch/ia64/linux-xen/time.c,397
u64 jiffies_64 __cacheline_aligned_in_smp 38,920
#define TIME_KEEPER_ID	42,1010
unsigned long last_cli_ip;46,1106
static struct time_interpolator itc_interpolator 52,1182
timer_interrupt 59,1330
ia64_cpu_local_tick 123,3087
static int nojitter;144,3629
static int __init nojitter_setup(146,3651
ia64_init_itm 157,3834
static struct irqaction timer_irqaction 254,7289
time_init 261,7420

xen/arch/ia64/asm-offsets.c,113
#define task_struct 17,386
#define DEFINE(19,412
#define BLANK(22,502
#define OFFSET(24,545
void foo(27,621

xen/include/xen/domain.h,161
#define __XEN_DOMAIN_H__3,26
    struct vcpu_guest_context *nat;nat9,117
    struct compat_vcpu_guest_context *cmp;cmp10,153
} vcpu_guest_context_u 11,196

xen/include/xen/bitmap.h,747
#define __XEN_BITMAP_H2,23
#define BITMAP_LAST_WORD_MASK(106,4533
static inline void bitmap_zero(112,4673
static inline void bitmap_fill(122,4875
static inline void bitmap_copy(132,5129
static inline void bitmap_and(143,5363
static inline void bitmap_or(152,5585
static inline void bitmap_xor(161,5805
static inline void bitmap_andnot(170,6027
static inline void bitmap_complement(179,6258
static inline int bitmap_equal(188,6484
static inline int bitmap_intersects(197,6728
static inline int bitmap_subset(206,6985
static inline int bitmap_empty(215,7234
static inline int bitmap_full(223,7429
static inline int bitmap_weight(231,7625
static inline void bitmap_shift_right(236,7736
static inline void bitmap_shift_left(245,7945

xen/include/xen/libelf.h,2854
#define __XEN_LIBELF_H__24,1197
#define XEN_ELF_LITTLE_ENDIAN27,1289
#undef ELFSIZE32,1372
typedef void elf_log_callback(44,1581
    Elf32_Ehdr e32;52,1826
    Elf64_Ehdr e64;53,1846
} elf_ehdr;54,1866
    Elf32_Phdr e32;57,1895
    Elf64_Phdr e64;58,1915
} elf_phdr;59,1935
    Elf32_Shdr e32;62,1964
    Elf64_Shdr e64;63,1984
} elf_shdr;64,2004
    Elf32_Sym e32;67,2033
    Elf64_Sym e64;68,2052
} elf_sym;69,2071
    Elf32_Rel e32;72,2099
    Elf64_Rel e64;73,2118
} elf_rel;74,2137
    Elf32_Rela e32;77,2165
    Elf64_Rela e64;78,2185
} elf_rela;79,2205
    Elf32_Note e32;82,2234
    Elf64_Note e64;83,2254
} elf_note;84,2274
struct elf_binary 86,2287
    const char *image;image88,2328
    size_t size;89,2351
    char data;91,2384
    const elf_ehdr *ehdr;ehdr93,2400
    const char *sec_strtab;sec_strtab94,2426
    const elf_shdr *sym_tab;sym_tab95,2454
    const char *sym_strtab;sym_strtab96,2483
    char *dest;dest99,2532
    uint64_t pstart;100,2548
    uint64_t pend;101,2569
    uint64_t reloc_offset;102,2588
    uint64_t bsd_symtab_pstart;104,2616
    uint64_t bsd_symtab_pend;105,2648
    elf_log_callback *log_callback;log_callback109,2710
    void *log_caller_data;log_caller_data110,2746
    int verbose;112,2780
# define NATIVE_ELFDATA 119,2986
# define NATIVE_ELFDATA 121,3028
#define elf_32bit(124,3072
#define elf_64bit(125,3124
#define elf_msb(126,3176
#define elf_lsb(127,3228
#define elf_swap(128,3280
#define elf_uval(130,3336
#define elf_sval(139,3908
#define elf_size(148,4478
#define UNSET_ADDR 214,7461
enum xen_elfnote_type 216,7505
    XEN_ENT_NONE 217,7529
    XEN_ENT_LONG 218,7551
    XEN_ENT_STR 219,7573
struct xen_elfnote 222,7598
    enum xen_elfnote_type type;223,7619
    const char *name;name224,7651
        const char *str;str226,7685
        uint64_t num;227,7710
    } data;228,7732
struct elf_dom_parms 231,7748
    const char *guest_info;guest_info233,7785
    const void *elf_note_start;elf_note_start234,7813
    const void *elf_note_end;elf_note_end235,7845
    struct xen_elfnote elf_notes[elf_notes236,7875
    char guest_os[guest_os239,7948
    char guest_ver[guest_ver240,7971
    char xen_ver[xen_ver241,7995
    char loader[loader242,8017
    int pae;243,8038
    int bsd_symtab;244,8051
    uint64_t virt_base;245,8071
    uint64_t virt_entry;246,8095
    uint64_t virt_hypercall;247,8120
    uint64_t virt_hv_start_low;248,8149
    uint64_t p2m_base;249,8181
    uint64_t elf_paddr_offset;250,8204
    uint32_t f_supported[f_supported251,8235
    uint32_t f_required[f_required252,8281
    uint64_t virt_offset;255,8348
    uint64_t virt_kstart;256,8374
    uint64_t virt_kend;257,8400
static inline void elf_xen_feature_set(260,8428
static inline int elf_xen_feature_get(264,8533

xen/include/xen/sched-if.h,2752
#define __XEN_SCHED_IF_H__9,328
struct schedule_data 29,1064
    spinlock_t         *schedule_lock,schedule_lock30,1087
                       _lock;31,1126
    struct vcpu        *curr;curr32,1156
    void               *sched_priv;sched_priv33,1234
    struct timer        s_timer;34,1270
    atomic_t            urgent_count;35,1348
static inline spinlock_t * pcpu_schedule_lock(42,1577
static inline int pcpu_schedule_trylock(62,2079
#define pcpu_schedule_lock_irq(78,2409
#define pcpu_schedule_lock_irqsave(80,2512
static inline void pcpu_schedule_unlock(83,2629
#define pcpu_schedule_unlock_irq(88,2743
#define pcpu_schedule_unlock_irqrestore(90,2849
static inline void vcpu_schedule_lock(93,2976
#define vcpu_schedule_lock_irq(117,3691
#define vcpu_schedule_lock_irqsave(119,3794
static inline void vcpu_schedule_unlock(122,3911
#define vcpu_schedule_unlock_irq(127,4041
#define vcpu_schedule_unlock_irqrestore(129,4147
struct task_slice 132,4274
    struct vcpu *task;task133,4294
    s_time_t     time;134,4317
    bool_t       migrated;135,4340
struct scheduler 138,4371
    char *name;name139,4390
    char *opt_name;opt_name140,4458
    unsigned int sched_id;141,4526
    void *sched_data;sched_data142,4594
    int          (*init)init144,4663
    void         (*deinit)deinit145,4720
    void         (*free_vdata)free_vdata147,4784
    void *       (*alloc_vdata)alloc_vdata148,4855
    void         (*free_pdata)free_pdata150,4977
    void *       (*alloc_pdata)alloc_pdata151,5053
    void         (*free_domdata)free_domdata152,5121
    void *       (*alloc_domdata)alloc_domdata153,5192
    int          (*init_domain)init_domain155,5273
    void         (*destroy_domain)destroy_domain156,5353
    void         (*insert_vcpu)insert_vcpu159,5486
    void         (*remove_vcpu)remove_vcpu160,5564
    void         (*sleep)sleep162,5643
    void         (*wake)wake163,5721
    void         (*yield)yield164,5799
    void         (*context_saved)context_saved165,5877
    struct task_slice (*do_schedule)do_schedule167,5956
    int          (*pick_cpu)pick_cpu170,6101
    int          (*adjust)adjust171,6179
    int          (*adjust_global)adjust_global173,6329
    void         (*dump_settings)dump_settings175,6462
    void         (*dump_cpu_state)dump_cpu_state176,6525
    void         (*tick_suspend)tick_suspend178,6594
    void         (*tick_resume)tick_resume179,6672
struct cpupool182,6754
    int              cpupool_id;184,6771
    cpumask_t        cpu_valid;185,6804
    struct cpupool   *next;next186,6873
    unsigned int     n_dom;187,6901
    struct scheduler *sched;sched188,6929
    atomic_t         refcnt;189,6958

xen/include/xen/irq_cpustat.h,175
#define __irq_cpustat_h2,24
#define __IRQ_STAT(23,579
#define softirq_pending(26,676
#define local_irq_count(27,742
#define nmi_count(28,808
#define mwait_wakeup(29,863

xen/include/xen/keyhandler.h,341
#define __XEN_KEYHANDLER_H__11,413
typedef void keyhandler_fn_t(13,443
typedef void irq_keyhandler_fn_t(15,497
struct keyhandler 18,584
    bool_t irq_callback;26,896
    bool_t diagnostic;32,1068
        keyhandler_fn_t *fn;fn35,1104
        irq_keyhandler_fn_t *irq_fn;irq_fn36,1133
    } u;37,1170
    char *desc;desc40,1258

xen/include/xen/trace.h,253
#define __XEN_TRACE_H__22,699
static inline void trace_var(41,1165
#define TRACE_0D(49,1437
#define TRACE_1D(54,1608
#define TRACE_2D(64,2156
#define TRACE_3D(75,2770
#define TRACE_4D(87,3450
#define TRACE_5D(100,4196
#define TRACE_6D(114,5007

xen/include/xen/console.h,28
#define __CONSOLE_H__8,174

xen/include/xen/delay.h,50
#define _LINUX_DELAY_H2,23
#define mdelay(7,111

xen/include/xen/pci.h,1312
#define __XEN_PCI_H__8,145
#define PCI_BUS(24,485
#define PCI_SLOT(25,531
#define PCI_FUNC(26,577
#define PCI_DEVFN(27,616
#define PCI_DEVFN2(28,677
#define PCI_BDF(29,716
#define PCI_BDF2(30,779
#define MAX_MSIX_TABLE_ENTRIES 32,842
#define MAX_MSIX_TABLE_PAGES 33,879
struct pci_dev_info 34,913
    unsigned is_extfn;35,935
    unsigned is_virtfn;36,958
        u8 bus;38,995
        u8 devfn;39,1011
    } physfn;40,1029
struct pci_dev 43,1047
    struct list_head alldevs_list;44,1064
    struct list_head domain_list;45,1099
    struct list_head msi_list;47,1134
    unsigned int msix_nr_entries,48,1165
    unsigned int msix_nr_entries, msix_used_entries;48,1165
        unsigned long first,50,1231
        unsigned long first, last;50,1231
    } msix_table,51,1266
    } msix_table, msix_pba;51,1266
    int msix_table_refcnt[msix_table_refcnt52,1294
    int msix_table_idx[msix_table_idx53,1343
    spinlock_t msix_table_lock;54,1389
    struct domain *domain;domain56,1422
    const u8 bus;57,1449
    const u8 devfn;58,1467
    struct pci_dev_info info;59,1487
#define for_each_pdev(62,1521
    DEV_TYPE_PCIe_ENDPOINT,74,1873
    DEV_TYPE_PCIe_BRIDGE,75,1901
    DEV_TYPE_PCIe2PCI_BRIDGE,76,1959
    DEV_TYPE_LEGACY_PCI_BRIDGE,77,2018
    DEV_TYPE_PCI,78,2071

xen/include/xen/wait.h,187
#define __XEN_WAIT_H__10,232
struct waitqueue_head 16,328
    spinlock_t lock;17,352
    struct list_head list;18,373
#define DEFINE_WAITQUEUE_HEAD(22,456
#define wait_event(35,914

xen/include/xen/config.h,943
#define __XEN_CONFIG_H__8,163
#define EXPORT_SYMBOL(12,214
#define EXPORT_SYMBOL_GPL(13,241
#define XENLOG_ERR 39,1062
#define XENLOG_WARNING 40,1091
#define XENLOG_INFO 41,1120
#define XENLOG_DEBUG 42,1149
#define XENLOG_GUEST 44,1179
#define XENLOG_G_ERR 46,1209
#define XENLOG_G_WARNING 47,1258
#define XENLOG_G_INFO 48,1311
#define XENLOG_G_DEBUG 49,1361
#define KERN_ERR 55,1510
#define KERN_CRIT 56,1544
#define KERN_EMERG 57,1578
#define KERN_WARNING 58,1612
#define KERN_NOTICE 59,1650
#define KERN_INFO 60,1685
#define KERN_DEBUG 61,1720
#define __iomem64,1788
#define __user65,1804
#define __force66,1819
#define __bitwise67,1835
#define dprintk(72,1905
#define gdprintk(74,2025
#define __STR(82,2256
#define STR(83,2288
#define __mk_unsigned_long(87,2405
#define mk_unsigned_long(88,2443
#define mk_unsigned_long(91,2584
#define fastcall94,2642
#define __cpuinitdata95,2659
#define __cpuinit96,2681

xen/include/xen/timer.h,514
#define _TIMER_H_9,199
struct timer 16,313
    s_time_t expires;18,389
        unsigned int heap_offset;23,531
        struct timer *list_next;list_next25,615
        struct list_head inactive;27,718
    void (*function)function31,839
    void *data;data32,869
    uint16_t cpu;35,952
#define TIMER_STATUS_invalid 38,995
#define TIMER_STATUS_inactive 39,1066
#define TIMER_STATUS_killed 40,1137
#define TIMER_STATUS_in_heap 41,1208
#define TIMER_STATUS_in_list 42,1279
    uint8_t status;43,1350

xen/include/xen/lzo.h,503
#define __LZO_H__2,18
#define LZO1X_MEM_COMPRESS 17,428
#define LZO1X_1_MEM_COMPRESS 18,489
#define lzo1x_worst_compress(20,538
#define LZO_E_OK 33,1012
#define LZO_E_ERROR 34,1048
#define LZO_E_OUT_OF_MEMORY 35,1087
#define LZO_E_NOT_COMPRESSIBLE 36,1126
#define LZO_E_INPUT_OVERRUN 37,1165
#define LZO_E_OUTPUT_OVERRUN 38,1204
#define LZO_E_LOOKBEHIND_OVERRUN 39,1243
#define LZO_E_EOF_NOT_FOUND 40,1282
#define LZO_E_INPUT_NOT_CONSUMED 41,1321
#define LZO_E_NOT_YET_IMPLEMENTED 42,1360

xen/include/xen/smp.h,142
#define __XEN_SMP_H__2,22
#define smp_send_event_check_cpu(13,233
static inline void on_each_cpu(54,1088
#define smp_processor_id(62,1243

xen/include/xen/mm.h,2451
#define __XEN_MM_H__29,1355
#define alloc_xenheap_page(49,1976
#define free_xenheap_page(50,2032
#define alloc_domheap_page(61,2583
#define free_domheap_page(62,2644
#define _MEMF_no_refcount 77,3095
#define  MEMF_no_refcount 78,3123
#define _MEMF_populate_on_demand 79,3173
#define  MEMF_populate_on_demand 80,3208
#define _MEMF_tmem 81,3272
#define  MEMF_tmem 82,3300
#define _MEMF_no_dma 83,3343
#define  MEMF_no_dma 84,3371
#define _MEMF_exact_node 85,3416
#define  MEMF_exact_node 86,3444
#define _MEMF_node 87,3493
#define  MEMF_node(88,3521
#define _MEMF_bits 89,3576
#define  MEMF_bits(90,3605
#define MAX_ORDER 93,3684
#define MAX_ORDER 95,3735
#define page_list_entry 98,3792
struct page_list_head103,3872
    struct page_info *next,next105,3896
    struct page_info *next, *tail;tail105,3896
# define page_list_entry108,3992
#define PAGE_LIST_NULL 110,4018
#   define page_to_pdx 114,4154
#   define pdx_to_page 115,4191
#   define page_to_pdx 117,4236
#   define pdx_to_page 118,4271
# define PAGE_LIST_HEAD_INIT(122,4324
# define PAGE_LIST_HEAD(123,4374
# define INIT_PAGE_LIST_HEAD(125,4465
# define INIT_PAGE_LIST_ENTRY(126,4537
page_list_empty(129,4636
page_list_first(134,4748
page_list_next(139,4859
page_list_prev(145,5060
page_list_add(151,5247
page_list_add_tail(167,5624
__page_list_del_head(183,6008
page_list_del(208,6567
page_list_del2(220,6931
page_list_remove_head(234,7416
page_list_move(244,7601
page_list_splice(253,7795
#define page_list_for_each(278,8315
#define page_list_for_each_safe(280,8424
#define page_list_for_each_safe_reverse(284,8588
# define page_list_head 289,8766
# define PAGE_LIST_HEAD_INIT 290,8817
# define PAGE_LIST_HEAD 291,8873
# define INIT_PAGE_LIST_HEAD 292,8924
# define INIT_PAGE_LIST_ENTRY 293,8980
# define page_list_empty 294,9036
# define page_list_first(295,9088
# define page_list_next(297,9230
# define page_list_add(299,9377
# define page_list_add_tail(300,9444
# define page_list_del(301,9516
# define page_list_del2(302,9579
# define page_list_remove_head(303,9642
# define page_list_move(309,9838
# define page_list_for_each(311,9944
# define page_list_for_each_safe(312,10022
# define page_list_for_each_safe_reverse(314,10124
# define page_list_splice(316,10242
#define RAM_TYPE_CONVENTIONAL 323,10419
#define RAM_TYPE_RESERVED 324,10460
#define RAM_TYPE_UNUSABLE 325,10501
#define RAM_TYPE_ACPI 326,10542

xen/include/xen/nodemask.h,2519
#define __LINUX_NODEMASK_H2,27
typedef struct { DECLARE_BITMAP(77,2991
typedef struct { DECLARE_BITMAP(bits, MAX_NUMNODES); } nodemask_t;77,2991
#define node_set(80,3100
static inline void __node_set(81,3155
#define node_clear(86,3255
static inline void __node_clear(87,3314
#define nodes_setall(92,3418
static inline void __nodes_setall(93,3481
#define nodes_clear(98,3582
static inline void __nodes_clear(99,3643
#define node_isset(105,3806
#define node_test_and_set(107,3876
static inline int __node_test_and_set(109,3964
#define nodes_and(114,4079
static inline void __nodes_and(116,4171
#define nodes_or(122,4349
static inline void __nodes_or(124,4439
#define nodes_xor(130,4615
static inline void __nodes_xor(132,4707
#define nodes_andnot(138,4885
static inline void __nodes_andnot(140,4983
#define nodes_complement(146,5167
static inline void __nodes_complement(148,5256
#define nodes_equal(154,5408
static inline int __nodes_equal(156,5491
#define nodes_intersects(162,5649
static inline int __nodes_intersects(164,5742
#define nodes_subset(170,5910
static inline int __nodes_subset(172,5995
#define nodes_empty(178,6155
static inline int __nodes_empty(179,6216
#define nodes_full(184,6329
static inline int __nodes_full(185,6398
#define nodes_weight(190,6509
static inline int __nodes_weight(191,6582
#define nodes_shift_right(196,6697
static inline void __nodes_shift_right(198,6796
#define nodes_shift_left(204,6960
static inline void __nodes_shift_left(206,7057
#define first_node(215,7356
static inline int __first_node(216,7415
#define next_node(221,7548
static inline int __next_node(222,7613
#define last_node(227,7756
static inline int __last_node(228,7813
#define nodemask_of_node(238,8045
#define first_unset_node(250,8315
static inline int __first_unset_node(251,8374
#define NODE_MASK_LAST_WORD 257,8525
#define NODE_MASK_ALL	261,8625
#define NODE_MASK_ALL	268,8752
#define NODE_MASK_NONE	276,8931
#define nodes_addr(281,9044
#define nodemask_scnprintf(284,9088
static inline int __nodemask_scnprintf(286,9192
#define nodemask_parse(292,9351
static inline int __nodemask_parse(294,9451
#define for_each_node_mask(302,9637
#define for_each_node_mask(307,9814
#define num_online_nodes(320,10112
#define node_online(321,10169
#define num_online_nodes(323,10237
#define node_online(324,10266
#define any_online_node(327,10314
#define node_set_online(336,10469
#define node_set_offline(337,10540
#define for_each_online_node(339,10615

xen/include/xen/string.h,245
#define _LINUX_STRING_H_2,25
#define __kernel_size_t 10,132
#define strcpy 26,546
#define strcat 27,584
#define strncpy 28,622
#define strncat 29,661
#define is_char_array(85,2157
#define safe_strcpy(88,2308
#define safe_strcat(92,2461

xen/include/xen/preempt.h,152
#define __XEN_PREEMPT_H__10,249
#define preempt_count(19,466
#define preempt_disable(21,519
#define preempt_enable(26,682
#define in_atomic(31,845

xen/include/xen/iommu.h,1633
#define _IOMMU_H_21,785
#define domain_hvm_iommu(39,1267
#define MAX_IOMMUS 41,1332
#define PAGE_SHIFT_4K 43,1355
#define PAGE_SIZE_4K 44,1388
#define PAGE_MASK_4K 45,1439
#define PAGE_ALIGN_4K(46,1496
struct iommu 48,1570
    struct list_head list;49,1585
    void __iomem *reg;reg50,1612
    u32	index;51,1680
    u32 nr_pt_levels;52,1734
    u64	cap;53,1756
    u64	ecap;54,1769
    spinlock_t lock;55,1783
    spinlock_t register_lock;56,1838
    u64 root_maddr;57,1906
    int irq;58,1959
    struct intel_iommu *intel;intel59,1972
    unsigned long *domid_bitmap;domid_bitmap60,2003
    u16 *domid_map;domid_map61,2060
#define _IOMMUF_readable 81,2791
#define IOMMUF_readable 82,2818
#define _IOMMUF_writable 83,2866
#define IOMMUF_writable 84,2893
#define PT_IRQ_TIME_OUT 114,4433
#define VTDPREFIX 115,4470
struct iommu_ops 117,4498
    int (*init)init118,4517
    void (*dom0_init)dom0_init119,4552
    int (*add_device)add_device120,4593
    int (*remove_device)remove_device121,4638
    int (*assign_device)assign_device122,4686
    void (*teardown)teardown123,4748
    int (*map_page)map_page124,4788
    int (*unmap_page)unmap_page126,4905
    int (*reassign_device)reassign_device127,4965
    int (*get_device_group_id)get_device_group_id129,5053
    void (*update_ire_from_apic)update_ire_from_apic130,5103
    void (*update_ire_from_msi)update_ire_from_msi131,5194
    void (*read_msi_from_ire)read_msi_from_ire132,5275
    unsigned int (*read_apic_from_ire)read_apic_from_ire133,5354
    void (*suspend)suspend134,5431
    void (*resume)resume135,5458

xen/include/xen/xmalloc.h,256
#define __XMALLOC_H__3,23
#define xmalloc(10,129
#define xmalloc_array(13,257
#define xmalloc_bytes(17,398
static inline void *_xmalloc_array(_xmalloc_array24,613
typedef void *(xmem_pool_get_memory)39,892
typedef void (xmem_pool_put_memory)40,951

xen/include/xen/spinlock.h,2794
#define __SPINLOCK_H__2,23
struct lock_debug 9,137
    int irq_safe;10,157
#define _LOCK_DEBUG 12,234
struct lock_debug 16,328
#define _LOCK_DEBUG 17,351
#define spin_debug_enable(18,375
#define spin_debug_disable(19,413
struct lock_profile 57,1422
    struct lock_profile *next;next58,1444
    char                *name;name59,1500
    u64                 lock_cnt;60,1553
    u64                 block_cnt;61,1622
    s64                 time_hold;62,1693
    s64                 time_block;63,1756
    s64                 time_locked;64,1819
struct lock_profile_qhead 67,1894
    struct lock_profile_qhead *head_q;head_q68,1922
    struct lock_profile       *elem_q;elem_q69,1990
    int32_t                   idx;70,2054
#define _LOCK_PROFILE(73,2122
#define _LOCK_NO_PROFILE 74,2177
#define _LOCK_PROFILE_PTR(75,2222
#define _SPIN_LOCK_UNLOCKED(78,2453
#define SPIN_LOCK_UNLOCKED 80,2583
#define DEFINE_SPINLOCK(81,2648
#define spin_lock_init_prof(85,2834
#define lock_profile_register_struct(96,3423
#define lock_profile_deregister_struct(98,3579
struct lock_profile 103,3733
struct lock_profile_qhead 104,3758
#define SPIN_LOCK_UNLOCKED 106,3790
#define DEFINE_SPINLOCK(108,3931
#define spin_lock_init_prof(110,3993
#define lock_profile_register_struct(111,4053
#define lock_profile_deregister_struct(112,4113
    raw_spinlock_t raw;117,4189
    u16 recurse_cpu:recurse_cpu118,4213
    u16 recurse_cnt:recurse_cnt119,4237
    struct lock_debug debug;120,4260
    struct lock_profile profile;121,4289
} spinlock_t;122,4322
#define spin_lock_init(125,4338
    raw_rwlock_t raw;128,4422
    struct lock_debug debug;129,4444
} rwlock_t;130,4473
#define RW_LOCK_UNLOCKED 132,4486
#define DEFINE_RWLOCK(133,4550
#define rwlock_init(134,4605
#define spin_lock(173,5882
#define spin_lock_irq(174,5934
#define spin_lock_irqsave(175,5990
#define spin_unlock(177,6059
#define spin_unlock_irq(178,6113
#define spin_unlock_irqrestore(179,6171
#define spin_is_locked(181,6240
#define spin_trylock(182,6297
#define spin_trylock_irqsave(184,6353
#define spin_barrier(192,6673
#define spin_barrier_irq(193,6728
#define spin_trylock_recursive(202,7135
#define spin_lock_recursive(203,7200
#define spin_unlock_recursive(204,7262
#define read_lock(206,7327
#define read_lock_irq(207,7379
#define read_lock_irqsave(208,7435
#define read_unlock(210,7504
#define read_unlock_irq(211,7558
#define read_unlock_irqrestore(212,7616
#define write_lock(214,7685
#define write_lock_irq(215,7738
#define write_lock_irqsave(216,7795
#define write_trylock(217,7864
#define write_unlock(219,7921
#define write_unlock_irq(220,7976
#define write_unlock_irqrestore(221,8035
#define rw_is_locked(223,8105
#define rw_is_write_locked(224,8160

xen/include/xen/errno.h,3164
#define _I386_ERRNO_H2,22
#define	EPERM	4,45
#define	ENOENT	5,93
#define	ESRCH	6,144
#define	EINTR	7,184
#define	EIO	8,232
#define	ENXIO	9,264
#define	E2BIG	10,314
#define	ENOEXEC	11,356
#define	EBADF	12,400
#define	ECHILD	13,440
#define	EAGAIN	14,484
#define	ENOMEM	15,519
#define	EACCES	16,558
#define	EFAULT	17,601
#define	ENOTBLK	18,638
#define	EBUSY	19,686
#define	EEXIST	20,734
#define	EXDEV	21,771
#define	ENODEV	22,813
#define	ENOTDIR	23,853
#define	EISDIR	24,895
#define	EINVAL	25,935
#define	ENFILE	26,977
#define	EMFILE	27,1022
#define	ENOTTY	28,1067
#define	ETXTBSY	29,1109
#define	EFBIG	30,1150
#define	ENOSPC	31,1189
#define	ESPIPE	32,1238
#define	EROFS	33,1276
#define	EMLINK	34,1322
#define	EPIPE	35,1362
#define	EDOM	36,1398
#define	ERANGE	37,1457
#define	EDEADLK	38,1512
#define	ENAMETOOLONG	39,1568
#define	ENOLCK	40,1617
#define	ENOSYS	41,1668
#define	ENOTEMPTY	42,1718
#define	ELOOP	43,1765
#define	EWOULDBLOCK	44,1825
#define	ENOMSG	45,1880
#define	EIDRM	46,1932
#define	ECHRNG	47,1975
#define	EL2NSYNC	48,2028
#define	EL3HLT	49,2079
#define	EL3RST	50,2119
#define	ELNRNG	51,2158
#define	EUNATCH	52,2208
#define	ENOCSI	53,2263
#define	EL2HLT	54,2315
#define	EBADE	55,2355
#define	EBADR	56,2396
#define	EXFULL	57,2447
#define	ENOANO	58,2486
#define	EBADRQC	59,2520
#define	EBADSLT	60,2567
#define	EDEADLOCK	62,2607
#define	EBFONT	64,2634
#define	ENOSTR	65,2680
#define	ENODATA	66,2725
#define	ETIME	67,2769
#define	ENOSR	68,2807
#define	ENONET	69,2856
#define	ENOPKG	70,2911
#define	EREMOTE	71,2958
#define	ENOLINK	72,3001
#define	EADV	73,3049
#define	ESRMNT	74,3088
#define	ECOMM	75,3127
#define	EPROTO	76,3179
#define	EMULTIHOP	77,3219
#define	EDOTDOT	78,3265
#define	EBADMSG	79,3310
#define	EOVERFLOW	80,3355
#define	ENOTUNIQ	81,3420
#define	EBADFD	82,3473
#define	EREMCHG	83,3527
#define	ELIBACC	84,3576
#define	ELIBBAD	85,3641
#define	ELIBSCN	86,3704
#define	ELIBMAX	87,3762
#define	ELIBEXEC	88,3836
#define	EILSEQ	89,3900
#define	ERESTART	90,3947
#define	ESTRPIPE	91,4017
#define	EUSERS	92,4062
#define	ENOTSOCK	93,4102
#define	EDESTADDRREQ	94,4159
#define	EMSGSIZE	95,4218
#define	EPROTOTYPE	96,4261
#define	ENOPROTOOPT	97,4320
#define	EPROTONOSUPPORT	98,4372
#define	ESOCKTNOSUPPORT	99,4428
#define	EOPNOTSUPP	100,4487
#define	EPFNOSUPPORT	101,4561
#define	EAFNOSUPPORT	102,4621
#define	EADDRINUSE	103,4692
#define	EADDRNOTAVAIL	104,4743
#define	ENETDOWN	105,4806
#define	ENETUNREACH	106,4849
#define	ENETRESET	107,4902
#define	ECONNABORTED	108,4974
#define	ECONNRESET	109,5038
#define	ENOBUFS	110,5092
#define	EISCONN	111,5145
#define	ENOTCONN	112,5212
#define	ESHUTDOWN	113,5275
#define	ETOOMANYREFS	114,5349
#define	ETIMEDOUT	115,5415
#define	ECONNREFUSED	116,5464
#define	EHOSTDOWN	117,5514
#define	EHOSTUNREACH	118,5555
#define	EALREADY	119,5603
#define	EINPROGRESS	120,5660
#define	ESTALE	121,5716
#define	EUCLEAN	122,5764
#define	ENOTNAM	123,5816
#define	ENAVAIL	124,5871
#define	EISNAM	125,5928
#define	EREMOTEIO	126,5975
#define	EDQUOT	127,6020
#define	ENOMEDIUM	129,6062
#define	EMEDIUMTYPE	130,6106

xen/include/xen/iocap.h,310
#define __XEN_IOCAP_H__8,156
#define iomem_permit_access(13,231
#define iomem_deny_access(15,335
#define iomem_access_permitted(17,442
#define irq_permit_access(20,552
#define irq_deny_access(22,655
#define irqs_permit_access(24,761
#define irqs_deny_access(26,863
#define irq_access_permitted(28,968

xen/include/xen/hypercall.h,102
#define __XEN_HYPERCALL_H__6,128
#define MEMOP_EXTENT_SHIFT 51,1082
#define MEMOP_CMD_MASK 52,1141

xen/include/xen/cache.h,127
#define __LINUX_CACHE_H2,24
#define L1_CACHE_ALIGN(8,120
#define SMP_CACHE_BYTES 12,225
#define __cacheline_aligned 16,300

xen/include/xen/radix-tree.h,664
#define _XEN_RADIX_TREE_H21,859
struct radix_tree_root 24,954
    unsigned int height;25,979
    struct radix_tree_node *rnode;rnode26,1004
#define RADIX_TREE_MAP_SHIFT 29,1043
#define RADIX_TREE_MAP_SIZE 31,1075
#define RADIX_TREE_MAP_MASK 32,1133
#define RADIX_TREE_TAG_LONGS 34,1186
struct radix_tree_node 37,1279
    unsigned int count;38,1304
    void  *slots[slots39,1328
struct radix_tree_path 42,1371
    struct radix_tree_node *node;node43,1396
    int offset;44,1430
#define RADIX_TREE_INDEX_BITS 47,1450
#define RADIX_TREE_MAX_PATH 48,1524
#define RADIX_TREE_INIT(51,1603
#define RADIX_TREE(56,1690
#define INIT_RADIX_TREE(59,1777

xen/include/xen/numa.h,170
#define _XEN_NUMA_H2,20
#define NODES_SHIFT 8,108
#define NUMA_NO_NODE 11,142
#define MAX_NUMNODES 13,172
#define vcpu_to_node(15,216
#define domain_to_node(17,271

xen/include/xen/grant_table.h,1972
#define __XEN_GRANT_TABLE_H__25,1009
struct active_grant_entry 32,1198
    u32           pin;33,1226
    domid_t       domid;34,1299
    domid_t       trans_dom;35,1372
    uint32_t      trans_gref;36,1401
    unsigned long frame;37,1431
    unsigned long gfn;38,1504
    unsigned      is_sub_page:is_sub_page39,1577
    unsigned      start:start40,1650
    unsigned      length:length42,1792
#define GNTPIN_hstw_shift 47,1984
#define GNTPIN_hstw_inc 48,2017
#define GNTPIN_hstw_mask 49,2071
#define GNTPIN_hstr_shift 51,2174
#define GNTPIN_hstr_inc 52,2207
#define GNTPIN_hstr_mask 53,2261
#define GNTPIN_devw_shift 55,2365
#define GNTPIN_devw_inc 56,2399
#define GNTPIN_devw_mask 57,2453
#define GNTPIN_devr_shift 59,2558
#define GNTPIN_devr_inc 60,2592
#define GNTPIN_devr_mask 61,2646
#define DEFAULT_MAX_NR_GRANT_FRAMES 65,2827
struct grant_mapping 76,3181
    u32      ref;77,3204
    u16      flags;78,3248
    domid_t  domid;79,3311
#define MAPTRACK_MAX_ENTRIES 83,3398
struct grant_table 86,3470
    unsigned int          nr_grant_frames;88,3548
        void **shared_raw;shared_raw91,3668
        struct grant_entry_v1 **shared_v1;shared_v192,3695
        union grant_entry_v2 **shared_v2;shared_v293,3738
    unsigned int          nr_status_frames;96,3861
    grant_status_t       **status;status98,3969
    struct active_grant_entry **active;active100,4034
    struct grant_mapping **maptrack;maptrack102,4108
    unsigned int          maptrack_head;103,4145
    unsigned int          maptrack_limit;104,4186
    spinlock_t            lock;106,4297
    unsigned              gt_version;109,4432
static inline unsigned int nr_grant_frames(130,4990
static inline unsigned int nr_status_frames(136,5173
#define GRANT_STATUS_PER_PAGE 141,5279
#define GRANT_PER_PAGE 142,5346
static inline unsigned int grant_to_status_frames(144,5488
num_act_frames_from_sha_frames(151,5692
nr_active_grant_frames(164,6203

xen/include/xen/domain_page.h,904
#define __XEN_DOMAIN_PAGE_H__10,266
#define __map_domain_page(37,1053
#define __map_domain_page_global(38,1125
#define DMCACHE_ENTRY_VALID 40,1205
#define DMCACHE_ENTRY_HELD 41,1236
struct domain_mmap_cache 43,1268
    unsigned long mfn;44,1295
    void         *va;va45,1318
    unsigned int  flags;46,1340
domain_mmap_cache_init(50,1388
map_domain_page_with_cache(59,1561
unmap_domain_page_with_cache(81,2108
domain_mmap_cache_destroy(88,2278
#define map_domain_page(102,2580
#define __map_domain_page(103,2641
#define unmap_domain_page(104,2702
#define map_domain_page_global(106,2760
#define __map_domain_page_global(107,2821
#define unmap_domain_page_global(108,2882
struct domain_mmap_cache 110,2940
#define domain_mmap_cache_init(113,2972
#define map_domain_page_with_cache(114,3028
#define unmap_domain_page_with_cache(115,3095
#define domain_mmap_cache_destroy(116,3152

xen/include/xen/nmi.h,29
#define __XEN_NMI_H__10,229

xen/include/xen/byteorder/generic.h,1106
#define __XEN_BYTEORDER_GENERIC_H__2,36
#define cpu_to_le64 31,928
#define le64_to_cpu 32,962
#define cpu_to_le32 33,996
#define le32_to_cpu 34,1030
#define cpu_to_le16 35,1064
#define le16_to_cpu 36,1098
#define cpu_to_be64 37,1132
#define be64_to_cpu 38,1166
#define cpu_to_be32 39,1200
#define be32_to_cpu 40,1234
#define cpu_to_be16 41,1268
#define be16_to_cpu 42,1302
#define cpu_to_le64p 43,1336
#define le64_to_cpup 44,1372
#define cpu_to_le32p 45,1408
#define le32_to_cpup 46,1444
#define cpu_to_le16p 47,1480
#define le16_to_cpup 48,1516
#define cpu_to_be64p 49,1552
#define be64_to_cpup 50,1588
#define cpu_to_be32p 51,1624
#define be32_to_cpup 52,1660
#define cpu_to_be16p 53,1696
#define be16_to_cpup 54,1732
#define cpu_to_le64s 55,1768
#define le64_to_cpus 56,1804
#define cpu_to_le32s 57,1840
#define le32_to_cpus 58,1876
#define cpu_to_le16s 59,1912
#define le16_to_cpus 60,1948
#define cpu_to_be64s 61,1984
#define be64_to_cpus 62,2020
#define cpu_to_be32s 63,2056
#define be32_to_cpus 64,2092
#define cpu_to_be16s 65,2128
#define be16_to_cpus 66,2164

xen/include/xen/byteorder/swab.h,1360
#define __XEN_BYTEORDER_SWAB_H__2,33
#define ___swab16(18,491
#define ___swab32(26,843
#define ___swab64(36,1375
#define ___constant_swab16(50,2303
#define ___constant_swab32(54,2501
#define ___constant_swab64(60,2845
#  define __arch__swab16(75,3696
#  define __arch__swab32(78,3798
#  define __arch__swab64(81,3900
#  define __arch__swab16p(85,4004
#  define __arch__swab32p(88,4085
#  define __arch__swab64p(91,4166
#  define __arch__swab16s(95,4248
#  define __arch__swab32s(98,4354
#  define __arch__swab64s(101,4460
#  define __swab16(109,4624
#  define __swab32(113,4723
#  define __swab64(117,4822
#  define __swab16(122,4927
#  define __swab32(123,4962
#  define __swab64(124,4997
static inline __attribute_const__ __u16 __fswab16(128,5056
static inline __u16 __swab16p(132,5149
static inline void __swab16s(136,5230
static inline __attribute_const__ __u32 __fswab32(141,5304
static inline __u32 __swab32p(145,5397
static inline void __swab32s(149,5478
static inline __attribute_const__ __u64 __fswab64(155,5581
static inline __u64 __swab64p(165,5851
static inline void __swab64s(169,5932
#define swab16 175,6041
#define swab32 176,6065
#define swab64 177,6089
#define swab16p 178,6113
#define swab32p 179,6139
#define swab64p 180,6165
#define swab16s 181,6191
#define swab32s 182,6217
#define swab64s 183,6243

xen/include/xen/byteorder/little_endian.h,1876
#define __XEN_BYTEORDER_LITTLE_ENDIAN_H__2,42
#define __LITTLE_ENDIAN 5,109
#define __LITTLE_ENDIAN_BITFIELD8,178
#define __constant_cpu_to_le64(14,275
#define __constant_le64_to_cpu(15,338
#define __constant_cpu_to_le32(16,401
#define __constant_le32_to_cpu(17,464
#define __constant_cpu_to_le16(18,527
#define __constant_le16_to_cpu(19,590
#define __constant_cpu_to_be64(20,653
#define __constant_be64_to_cpu(21,729
#define __constant_cpu_to_be32(22,810
#define __constant_be32_to_cpu(23,886
#define __constant_cpu_to_be16(24,967
#define __constant_be16_to_cpu(25,1043
#define __cpu_to_le64(26,1124
#define __le64_to_cpu(27,1178
#define __cpu_to_le32(28,1232
#define __le32_to_cpu(29,1286
#define __cpu_to_le16(30,1340
#define __le16_to_cpu(31,1394
#define __cpu_to_be64(32,1448
#define __be64_to_cpu(33,1505
#define __cpu_to_be32(34,1567
#define __be32_to_cpu(35,1624
#define __cpu_to_be16(36,1686
#define __be16_to_cpu(37,1743
static inline __le64 __cpu_to_le64p(39,1806
static inline __u64 __le64_to_cpup(43,1893
static inline __le32 __cpu_to_le32p(47,1979
static inline __u32 __le32_to_cpup(51,2066
static inline __le16 __cpu_to_le16p(55,2152
static inline __u16 __le16_to_cpup(59,2239
static inline __be64 __cpu_to_be64p(63,2325
static inline __u64 __be64_to_cpup(67,2422
static inline __be32 __cpu_to_be32p(71,2512
static inline __u32 __be32_to_cpup(75,2609
static inline __be16 __cpu_to_be16p(79,2699
static inline __u16 __be16_to_cpup(83,2796
#define __cpu_to_le64s(87,2886
#define __le64_to_cpus(88,2928
#define __cpu_to_le32s(89,2970
#define __le32_to_cpus(90,3012
#define __cpu_to_le16s(91,3054
#define __le16_to_cpus(92,3096
#define __cpu_to_be64s(93,3138
#define __be64_to_cpus(94,3179
#define __cpu_to_be32s(95,3220
#define __be32_to_cpus(96,3261
#define __cpu_to_be16s(97,3302
#define __be16_to_cpus(98,3343

xen/include/xen/byteorder/big_endian.h,1867
#define __XEN_BYTEORDER_BIG_ENDIAN_H__2,39
#define __BIG_ENDIAN 5,100
#define __BIG_ENDIAN_BITFIELD8,163
#define __constant_cpu_to_le64(14,257
#define __constant_le64_to_cpu(15,333
#define __constant_cpu_to_le32(16,414
#define __constant_le32_to_cpu(17,490
#define __constant_cpu_to_le16(18,571
#define __constant_le16_to_cpu(19,647
#define __constant_cpu_to_be64(20,728
#define __constant_be64_to_cpu(21,791
#define __constant_cpu_to_be32(22,854
#define __constant_be32_to_cpu(23,917
#define __constant_cpu_to_be16(24,980
#define __constant_be16_to_cpu(25,1043
#define __cpu_to_le64(26,1106
#define __le64_to_cpu(27,1163
#define __cpu_to_le32(28,1225
#define __le32_to_cpu(29,1282
#define __cpu_to_le16(30,1344
#define __le16_to_cpu(31,1401
#define __cpu_to_be64(32,1463
#define __be64_to_cpu(33,1517
#define __cpu_to_be32(34,1571
#define __be32_to_cpu(35,1625
#define __cpu_to_be16(36,1679
#define __be16_to_cpu(37,1733
static inline __le64 __cpu_to_le64p(39,1788
static inline __u64 __le64_to_cpup(43,1885
static inline __le32 __cpu_to_le32p(47,1975
static inline __u32 __le32_to_cpup(51,2072
static inline __le16 __cpu_to_le16p(55,2162
static inline __u16 __le16_to_cpup(59,2259
static inline __be64 __cpu_to_be64p(63,2349
static inline __u64 __be64_to_cpup(67,2436
static inline __be32 __cpu_to_be32p(71,2522
static inline __u32 __be32_to_cpup(75,2609
static inline __be16 __cpu_to_be16p(79,2695
static inline __u16 __be16_to_cpup(83,2782
#define __cpu_to_le64s(87,2868
#define __le64_to_cpus(88,2909
#define __cpu_to_le32s(89,2950
#define __le32_to_cpus(90,2991
#define __cpu_to_le16s(91,3032
#define __le16_to_cpus(92,3073
#define __cpu_to_be64s(93,3114
#define __be64_to_cpus(94,3156
#define __cpu_to_be32s(95,3198
#define __be32_to_cpus(96,3240
#define __cpu_to_be16s(97,3282
#define __be16_to_cpus(98,3324

xen/include/xen/prefetch.h,289
#define _LINUX_PREFETCH_H11,266
#define ARCH_HAS_PREFETCH42,1112
static inline void prefetch(43,1138
#define ARCH_HAS_PREFETCHW47,1220
static inline void prefetchw(48,1247
#define ARCH_HAS_SPINLOCK_PREFETCH52,1338
#define spin_lock_prefetch(53,1373
#define PREFETCH_STRIDE 57,1448

xen/include/xen/notifier.h,575
#define __XEN_NOTIFIER_H__11,315
struct notifier_block 26,720
    int (*notifier_call)notifier_call27,744
    struct list_head chain;28,818
    int priority;29,846
struct notifier_head 32,868
    struct notifier_block head;33,891
#define NOTIFIER_INIT(36,927
#define NOTIFIER_HEAD(38,1006
#define NOTIFY_FORWARD 51,1464
#define NOTIFY_REVERSE 52,1534
#define NOTIFY_DONE 55,1636
#define NOTIFY_STOP_MASK 56,1668
#define NOTIFY_STOP 57,1700
#define NOTIFY_BAD 58,1756
static inline int notifier_from_errno(61,1850
static inline int notifier_to_errno(67,2001

xen/include/xen/irq.h,1998
#define __XEN_IRQ_H__2,22
struct irqaction 12,212
    void (*handler)handler13,231
    const char *name;name14,289
    void *dev_id;dev_id15,311
    bool_t free_on_release;16,329
#define IRQ_INPROGRESS	22,388
#define IRQ_DISABLED	23,454
#define IRQ_PENDING	24,512
#define IRQ_REPLAY	25,571
#define IRQ_GUEST 26,638
#define IRQ_GUEST_EOI_PENDING 27,707
#define IRQ_MOVE_PENDING 28,784
#define IRQ_PER_CPU 29,857
#define AUTO_ASSIGN_IRQ 32,938
#define NEVER_ASSIGN_IRQ 33,975
#define FREE_TO_ASSIGN_IRQ 34,1012
struct hw_interrupt_type 40,1159
    const char *typename;typename41,1186
    unsigned int (*startup)startup42,1212
    void (*shutdown)shutdown43,1259
    void (*enable)enable44,1299
    void (*disable)disable45,1337
    void (*ack)ack46,1376
    void (*end)end47,1411
    void (*set_affinity)set_affinity48,1446
typedef const struct hw_interrupt_type hw_irq_controller;51,1510
# define nr_irqs 56,1606
# define nr_irqs_gsi 57,1631
typedef struct irq_desc 70,1946
    unsigned int status;71,1972
    hw_irq_controller *handler;handler72,2015
    struct msi_desc   *msi_desc;msi_desc73,2047
    struct irqaction *action;action74,2080
    unsigned int depth;75,2132
    struct irq_cfg *chip_data;chip_data76,2183
    int irq;77,2214
    spinlock_t lock;78,2227
    cpumask_t affinity;79,2248
    cpumask_t pending_mask;80,2272
    s_time_t rl_quantum_start;83,2359
    unsigned int rl_cnt;84,2390
    struct list_head rl_link;85,2415
} __cacheline_aligned irq_desc_t;86,2445
#define setup_irq(91,2543
#define release_irq(94,2626
#define request_irq(97,2697
#define create_irq(107,3191
#define destroy_irq(108,3248
#define irq_cfg(110,3291
#define irq_to_desc(111,3331
#define irq_complete_move(113,3373
#define domain_pirq_to_irq(116,3425
struct irq_cfg 118,3490
        int  vector;119,3507
        cpumask_t cpu_mask;120,3528
static inline void set_native_irq_info(146,4446
static inline void set_irq_info(151,4567

xen/include/xen/perfc_defn.h,25
PERFCOUNTER_ARRAY(7,153

xen/include/xen/shutdown.h,32
#define __XEN_SHUTDOWN_H__2,27

xen/include/xen/cpuidle.h,1471
#define _XEN_CPUIDLE_H28,1172
#define ACPI_PROCESSOR_MAX_POWER 32,1222
#define CPUIDLE_NAME_LEN 33,1264
#define ACPI_CSTATE_EM_NONE 35,1308
#define ACPI_CSTATE_EM_SYSIO 36,1342
#define ACPI_CSTATE_EM_FFH 37,1376
#define ACPI_CSTATE_EM_HALT 38,1410
struct acpi_processor_cx40,1445
    u8 idx;42,1472
    u8 valid;43,1484
    u8 type;44,1498
    u32 address;45,1511
    u8 entry_method;46,1528
    u32 latency;47,1574
    u32 latency_ticks;48,1591
    u32 power;49,1614
    u32 usage;50,1629
    u64 time;51,1644
    u32 target_residency;52,1658
struct acpi_processor_flags55,1688
    u8 bm_control:bm_control57,1718
    u8 bm_check:bm_check58,1739
    u8 has_cst:has_cst59,1758
    u8 power_setup_done:power_setup_done60,1776
    u8 bm_rld_set:bm_rld_set61,1803
struct acpi_processor_power64,1828
    unsigned int cpu;66,1858
    struct acpi_processor_flags flags;67,1880
    struct acpi_processor_cx *last_state;last_state68,1919
    struct acpi_processor_cx *safe_state;safe_state69,1961
    u32 last_residency;70,2003
    void *gdata;gdata71,2027
    u32 count;72,2073
    struct acpi_processor_cx states[states73,2088
struct cpuidle_governor76,2155
    char                    name[name78,2181
    unsigned int            rating;79,2233
    int  (*enable)enable81,2270
    void (*disable)disable82,2334
    int  (*select)select84,2399
    void (*reflect)reflect85,2463
#define CPUIDLE_DRIVER_STATE_START 93,2682

xen/include/xen/elfcore.h,1223
#define __ELFCOREC_H__10,264
#define NT_PRSTATUS 17,378
    int signo;21,422
    int code;22,479
    int errno;23,533
} ELF_Signifo;24,582
typedef int ELF_Pid;27,667
	long tv_sec;29,705
	long tv_usec;30,719
} ELF_Timeval;31,734
    ELF_Signifo pr_info;43,1152
    short pr_cursig;44,1219
    unsigned long pr_sigpend;45,1273
    unsigned long pr_sighold;46,1335
    ELF_Pid pr_pid;47,1394
    ELF_Pid pr_ppid;48,1414
    ELF_Pid pr_pgrp;49,1435
    ELF_Pid pr_sid;50,1456
    ELF_Timeval pr_utime;51,1476
    ELF_Timeval pr_stime;52,1525
    ELF_Timeval pr_cutime;53,1576
    ELF_Timeval pr_cstime;54,1636
    ELF_Gregset pr_reg;55,1698
    int pr_fpvalid;56,1773
} ELF_Prstatus;57,1851
    unsigned long xen_major_version;60,1885
    unsigned long xen_minor_version;61,1922
    unsigned long xen_extra_version;62,1959
    unsigned long xen_changeset;63,1996
    unsigned long xen_compiler;64,2029
    unsigned long xen_compile_date;65,2061
    unsigned long xen_compile_time;66,2097
    unsigned long tainted;67,2133
    unsigned long xen_phys_start;69,2205
    unsigned long dom0_pfn_to_mfn_frame_list_list;70,2239
    unsigned long dom0_mm_pgd_mfn;73,2319
} crash_xen_info_t;75,2361

xen/include/xen/compat.h,1289
#define __XEN_COMPAT_H__6,122
#define __DEFINE_COMPAT_HANDLE(16,268
#define DEFINE_COMPAT_HANDLE(22,444
#define COMPAT_HANDLE(25,578
#define compat_handle_is_null(28,686
#define compat_handle_add_offset(31,810
#define compat_handle_cast(35,984
#define guest_from_compat_handle(40,1201
#define copy_to_compat_offset(48,1536
#define copy_from_compat_offset(59,2016
#define copy_to_compat(65,2308
#define copy_from_compat(68,2423
#define copy_field_to_compat(72,2614
#define copy_field_from_compat(81,3120
#define compat_handle_okay(92,3562
#define __copy_to_compat_offset(97,3823
#define __copy_from_compat_offset(104,4182
#define __copy_to_compat(110,4474
#define __copy_from_compat(113,4591
#define __copy_field_to_compat(116,4710
#define __copy_field_from_compat(124,5140
#define CHECK_NAME(132,5500
#define CHECK_NAME_(133,5553
#define CHECK_TYPE(135,5615
#define CHECK_TYPE_(141,5798
#define CHECK_SIZE(148,5971
#define CHECK_SIZE_(151,6148
#define CHECK_FIELD_COMMON(155,6315
#define CHECK_FIELD_COMMON_(162,6563
#define CHECK_FIELD(170,6800
#define CHECK_FIELD_(172,6886
#define CHECK_SUBFIELD_1(175,6985
#define CHECK_SUBFIELD_1_(177,7099
#define CHECK_SUBFIELD_2(181,7252
#define CHECK_SUBFIELD_2_(184,7410
#define compat_handle_is_null(201,7969

xen/include/xen/multiboot.h,1731
#define __MULTIBOOT_H__19,837
#define MULTIBOOT_HEADER_MAGIC 25,901
#define MULTIBOOT_HEADER_MODS_ALIGNED 26,951
#define MULTIBOOT_HEADER_WANT_MEMORY 27,1001
#define MULTIBOOT_HEADER_HAS_VBE 28,1051
#define MULTIBOOT_HEADER_HAS_ADDR 29,1101
#define MULTIBOOT_BOOTLOADER_MAGIC 32,1220
#define MBI_MEMLIMITS 34,1271
#define MBI_BOOTDEV 35,1303
#define MBI_CMDLINE 36,1335
#define MBI_MODULES 37,1367
#define MBI_AOUT_SYMS 38,1399
#define MBI_ELF_SYMS 39,1431
#define MBI_MEMMAP 40,1463
#define MBI_DRIVES 41,1495
#define MBI_BIOSCONFIG 42,1527
#define MBI_LOADERNAME 43,1559
#define MBI_APM 44,1591
    u32 tabsize;50,1698
    u32 strsize;51,1715
    u32 addr;52,1732
    u32 reserved;53,1746
} aout_symbol_table_t;54,1764
    u32 num;58,1846
    u32 size;59,1859
    u32 addr;60,1873
    u32 shndx;61,1887
} elf_section_header_table_t;62,1902
    u32 flags;66,1984
    u32 mem_lower;69,2044
    u32 mem_upper;70,2063
    u32 boot_device;73,2125
    u32 cmdline;76,2189
    u32 mods_count;79,2249
    u32 mods_addr;80,2269
        aout_symbol_table_t aout_sym;84,2335
        elf_section_header_table_t elf_sec;85,2404
    } u;86,2472
    u32 mmap_length;89,2523
    u32 mmap_addr;90,2544
    u32 drives_length;93,2605
    u32 drives_addr;94,2628
    u32 config_table;97,2695
    u32 boot_loader_name;100,2763
    u32 apm_table;103,2828
} multiboot_info_t;104,2847
    u32 mod_start;108,2914
    u32 mod_end;109,2933
    u32 string;110,2950
    u32 reserved;111,2966
} module_t;112,2984
    u32 size;117,3099
    u32 base_addr_low;118,3113
    u32 base_addr_high;119,3136
    u32 length_low;120,3160
    u32 length_high;121,3180
    u32 type;122,3201
} memory_map_t;123,3215

xen/include/xen/cpumask.h,3297
#define __XEN_CPUMASK_H2,24
typedef struct cpumask{cpumask82,3371
typedef struct cpumask{ DECLARE_BITMAP(82,3371
typedef struct cpumask{ DECLARE_BITMAP(bits, NR_CPUS); } cpumask_t;82,3371
#define cpu_set(84,3440
static inline void __cpu_set(85,3491
#define cpu_clear(90,3587
static inline void __cpu_clear(91,3642
#define cpus_setall(96,3742
static inline void __cpus_setall(97,3798
#define cpus_clear(102,3897
static inline void __cpus_clear(103,3951
#define cpumask_test_cpu(109,4112
#define cpu_isset(110,4182
#define cpu_test_and_set(112,4247
static inline int __cpu_test_and_set(113,4324
#define cpu_test_and_clear(118,4435
static inline int __cpu_test_and_clear(119,4516
#define cpus_and(124,4631
static inline void __cpus_and(125,4711
#define cpus_or(131,4885
static inline void __cpus_or(132,4963
#define cpus_xor(138,5135
static inline void __cpus_xor(139,5215
#define cpus_andnot(145,5389
static inline void __cpus_andnot(147,5481
#define cpus_complement(153,5661
static inline void __cpus_complement(154,5738
#define cpumask_equal(160,5887
#define cpus_equal(161,5955
static inline int __cpus_equal(162,6026
#define cpus_intersects(168,6181
static inline int __cpus_intersects(169,6262
#define cpus_subset(175,6427
static inline int __cpus_subset(176,6500
#define cpumask_empty(182,6657
#define cpus_empty(183,6711
static inline int __cpus_empty(184,6765
#define cpus_full(189,6876
static inline int __cpus_full(190,6936
#define cpumask_weight(195,7045
#define cpus_weight(196,7109
static inline int __cpus_weight(197,7173
#define cpus_copy(202,7286
static inline void __cpus_copy(203,7344
#define cpus_shift_right(208,7467
static inline void __cpus_shift_right(210,7559
#define cpus_shift_left(216,7720
static inline void __cpus_shift_left(218,7810
#define cpumask_first(224,7969
#define first_cpu(225,8022
static inline int __first_cpu(226,8074
#define cpumask_next(231,8205
#define next_cpu(232,8262
static inline int __next_cpu(233,8320
#define cpumask_last(238,8461
#define last_cpu(239,8512
static inline int __last_cpu(240,8562
#define cpumask_cycle(250,8781
#define cycle_cpu(251,8840
static inline int __cycle_cpu(252,8900
static inline const cpumask_t *cpumask_of(cpumask_of270,9438
#define cpumask_of_cpu(276,9624
#define CPU_MASK_LAST_WORD 278,9672
#define CPU_MASK_ALL	282,9761
#define CPU_MASK_ALL	289,9883
#define CPU_MASK_NONE	297,10052
#define CPU_MASK_CPU0	302,10161
#define cpus_addr(307,10244
#define cpumask_scnprintf(309,10281
static inline int __cpumask_scnprintf(311,10378
#define cpulist_scnprintf(317,10535
static inline int __cpulist_scnprintf(319,10632
#define for_each_cpu_mask(326,10809
#define for_each_cpu_mask(331,10965
#define num_online_cpus(395,13787
#define num_possible_cpus(396,13841
#define num_present_cpus(397,13899
#define cpu_online(398,13955
#define cpu_possible(399,14013
#define cpu_present(400,14074
#define num_online_cpus(402,14139
#define num_possible_cpus(403,14167
#define num_present_cpus(404,14197
#define cpu_online(405,14226
#define cpu_possible(406,14264
#define cpu_present(407,14303
#define any_online_cpu(410,14349
#define for_each_possible_cpu(419,14498
#define for_each_online_cpu(420,14576
#define for_each_present_cpu(421,14652

xen/include/xen/decompress.h,177
#define __XEN_GENERIC_H2,24
typedef int decompress_fn(4,49
decompress_fn bunzip2,34,1451
decompress_fn bunzip2, unlzma,34,1451
decompress_fn bunzip2, unlzma, unlzo;34,1451

xen/include/xen/dmi.h,581
#define __DMI_H__2,18
enum dmi_field 4,37
	DMI_NONE,5,54
	DMI_BIOS_VENDOR,6,65
	DMI_BIOS_VERSION,7,83
	DMI_BIOS_DATE,8,102
	DMI_SYS_VENDOR,9,118
	DMI_PRODUCT_NAME,10,135
	DMI_PRODUCT_VERSION,11,154
	DMI_BOARD_VENDOR,12,176
	DMI_BOARD_NAME,13,195
	DMI_BOARD_VERSION,14,212
	DMI_STRING_MAX,15,232
struct dmi_strmatch 21,296
	u8 slot;22,318
	char *substr;substr23,328
struct dmi_system_id 26,347
	int (*callback)callback27,370
	char *ident;ident28,412
	struct dmi_strmatch matches[matches29,426
	void *driver_data;driver_data30,459
#define DMI_MATCH(33,483

xen/include/xen/rangeset.h,121
#define __XEN_RANGESET_H__11,260
#define _RANGESETF_prettyprint_hex 43,1226
#define RANGESETF_prettyprint_hex 44,1263

xen/include/xen/bitops.h,589
#define _LINUX_BITOPS_H2,24
static inline int generic_ffs(11,248
static __inline__ int generic_fls(44,692
static inline int generic_fls64(80,1260
static __inline__ int get_bitmask_order(88,1387
static __inline__ int get_count_order(96,1571
static inline unsigned int generic_hweight32(111,1839
static inline unsigned int generic_hweight16(120,2206
static inline unsigned int generic_hweight8(128,2482
static inline unsigned long generic_hweight64(135,2695
static inline unsigned long hweight_long(151,3371
static inline __u32 rol32(162,3605
static inline __u32 ror32(173,3820

xen/include/xen/softirq.h,265
#define __XEN_SOFTIRQ_H__2,58
    TIMER_SOFTIRQ 6,153
    SCHEDULE_SOFTIRQ,7,176
    NEW_TLBFLUSH_CLOCK_PERIOD_SOFTIRQ,8,198
    RCU_SOFTIRQ,9,237
    NR_COMMON_SOFTIRQS10,254
#define NR_SOFTIRQS 21,447
typedef void (*softirq_handler)softirq_handler23,508

xen/include/xen/kexec.h,609
#define __XEN_KEXEC_H__2,24
typedef struct xen_kexec_reserve 8,125
    unsigned long size;9,160
    unsigned long start;10,184
} xen_kexec_reserve_t;11,209
#define KEXEC_IMAGE_DEFAULT_BASE 22,480
#define KEXEC_IMAGE_CRASH_BASE 23,515
#define KEXEC_IMAGE_NR 24,550
#define VMCOREINFO_BYTES 39,1137
#define VMCOREINFO_NOTE_NAME 40,1179
void vmcoreinfo_append_str(42,1270
#define VMCOREINFO_PAGESIZE(44,1367
#define VMCOREINFO_SYMBOL(46,1458
#define VMCOREINFO_SYMBOL_ALIAS(48,1570
#define VMCOREINFO_STRUCT_SIZE(50,1696
#define VMCOREINFO_OFFSET(52,1810
#define VMCOREINFO_OFFSET_ALIAS(55,1994

xen/include/xen/pmstat.h,29
#define __XEN_PMSTAT_H_2,24

xen/include/xen/event.h,125
#define __XEN_EVENT_H__10,234
#define wait_on_xen_event_channel(66,1989
#define prepare_wait_on_xen_event_channel(81,2970

xen/include/xen/symbols.h,271
#define _XEN_SYMBOLS_H2,23
#define KSYM_NAME_LEN 7,95
static void __check_printsym_format(19,511
    static inline void __check_printsym_format(21,610
#define print_fn_descriptor_symbol(27,812
#define print_fn_descriptor_symbol(33,978
#define print_symbol(36,1056

xen/include/xen/gdbstub.h,779
#define __XEN_GDBSTUB_H__22,944
struct gdb_context 29,1038
    int                 serhnd;30,1059
    int                 console_steal_id;31,1133
    bool_t              currently_attached;32,1206
    atomic_t            running;33,1250
    unsigned long       connected;34,1283
    u8                  signum;35,1318
    char                in_buf[in_buf37,1351
    unsigned long       in_bytes;38,1394
    char                out_buf[out_buf40,1429
    unsigned long       out_offset;41,1473
    u8                  out_csum;42,1509
#define GDB_CONTINUE 80,3043
#define GDB_STEP 81,3070
#define SIGILL 83,3098
#define SIGTRAP 84,3125
#define SIGBUS 85,3152
#define SIGFPE 86,3179
#define SIGSEGV 87,3206
#define SIGALRM 88,3233
#define SIGTERM 89,3260

xen/include/xen/inttypes.h,4512
#define _XEN_INTTYPES_H	24,958
#  define __PRI64_PREFIX	30,1058
#  define __PRIPTR_PREFIX	31,1087
#  define __PRI64_PREFIX	33,1124
#  define __PRIPTR_PREFIX34,1154
# define PRId8	40,1261
# define PRId16	41,1281
# define PRId32	42,1302
# define PRId64	43,1323
# define PRIdLEAST8	45,1360
# define PRIdLEAST16	46,1384
# define PRIdLEAST32	47,1409
# define PRIdLEAST64	48,1434
# define PRIdFAST8	50,1475
# define PRIdFAST16	51,1498
# define PRIdFAST32	52,1538
# define PRIdFAST64	53,1578
# define PRIi8	56,1619
# define PRIi16	57,1639
# define PRIi32	58,1660
# define PRIi64	59,1681
# define PRIiLEAST8	61,1718
# define PRIiLEAST16	62,1742
# define PRIiLEAST32	63,1767
# define PRIiLEAST64	64,1792
# define PRIiFAST8	66,1833
# define PRIiFAST16	67,1856
# define PRIiFAST32	68,1896
# define PRIiFAST64	69,1936
# define PRIo8	72,1999
# define PRIo16	73,2019
# define PRIo32	74,2040
# define PRIo64	75,2061
# define PRIoLEAST8	77,2098
# define PRIoLEAST16	78,2122
# define PRIoLEAST32	79,2147
# define PRIoLEAST64	80,2172
# define PRIoFAST8	82,2213
# define PRIoFAST16	83,2236
# define PRIoFAST32	84,2276
# define PRIoFAST64	85,2316
# define PRIu8	88,2382
# define PRIu16	89,2402
# define PRIu32	90,2423
# define PRIu64	91,2444
# define PRIuLEAST8	93,2481
# define PRIuLEAST16	94,2505
# define PRIuLEAST32	95,2530
# define PRIuLEAST64	96,2555
# define PRIuFAST8	98,2596
# define PRIuFAST16	99,2619
# define PRIuFAST32	100,2659
# define PRIuFAST64	101,2699
# define PRIx8	104,2778
# define PRIx16	105,2798
# define PRIx32	106,2819
# define PRIx64	107,2840
# define PRIxLEAST8	109,2877
# define PRIxLEAST16	110,2901
# define PRIxLEAST32	111,2926
# define PRIxLEAST64	112,2951
# define PRIxFAST8	114,2992
# define PRIxFAST16	115,3015
# define PRIxFAST32	116,3055
# define PRIxFAST64	117,3095
# define PRIX8	120,3174
# define PRIX16	121,3194
# define PRIX32	122,3215
# define PRIX64	123,3236
# define PRIXLEAST8	125,3273
# define PRIXLEAST16	126,3297
# define PRIXLEAST32	127,3322
# define PRIXLEAST64	128,3347
# define PRIXFAST8	130,3388
# define PRIXFAST16	131,3411
# define PRIXFAST32	132,3451
# define PRIXFAST64	133,3491
# define PRIdMAX	137,3587
# define PRIiMAX	138,3623
# define PRIoMAX	139,3659
# define PRIuMAX	140,3695
# define PRIxMAX	141,3731
# define PRIXMAX	142,3767
# define PRIdPTR	146,3860
# define PRIiPTR	147,3897
# define PRIoPTR	148,3934
# define PRIuPTR	149,3971
# define PRIxPTR	150,4008
# define PRIXPTR	151,4045
# define SCNd8	157,4163
# define SCNd16	158,4185
# define SCNd32	159,4207
# define SCNd64	160,4228
# define SCNdLEAST8	162,4265
# define SCNdLEAST16	163,4291
# define SCNdLEAST32	164,4317
# define SCNdLEAST64	165,4342
# define SCNdFAST8	167,4383
# define SCNdFAST16	168,4408
# define SCNdFAST32	169,4448
# define SCNdFAST64	170,4488
# define SCNi8	173,4560
# define SCNi16	174,4582
# define SCNi32	175,4604
# define SCNi64	176,4625
# define SCNiLEAST8	178,4662
# define SCNiLEAST16	179,4688
# define SCNiLEAST32	180,4714
# define SCNiLEAST64	181,4739
# define SCNiFAST8	183,4780
# define SCNiFAST16	184,4805
# define SCNiFAST32	185,4845
# define SCNiFAST64	186,4885
# define SCNu8	189,4959
# define SCNu16	190,4981
# define SCNu32	191,5003
# define SCNu64	192,5024
# define SCNuLEAST8	194,5061
# define SCNuLEAST16	195,5087
# define SCNuLEAST32	196,5113
# define SCNuLEAST64	197,5138
# define SCNuFAST8	199,5179
# define SCNuFAST16	200,5204
# define SCNuFAST32	201,5244
# define SCNuFAST64	202,5284
# define SCNo8	205,5347
# define SCNo16	206,5369
# define SCNo32	207,5391
# define SCNo64	208,5412
# define SCNoLEAST8	210,5449
# define SCNoLEAST16	211,5475
# define SCNoLEAST32	212,5501
# define SCNoLEAST64	213,5526
# define SCNoFAST8	215,5567
# define SCNoFAST16	216,5592
# define SCNoFAST32	217,5632
# define SCNoFAST64	218,5672
# define SCNx8	221,5741
# define SCNx16	222,5763
# define SCNx32	223,5785
# define SCNx64	224,5806
# define SCNxLEAST8	226,5843
# define SCNxLEAST16	227,5869
# define SCNxLEAST32	228,5895
# define SCNxLEAST64	229,5920
# define SCNxFAST8	231,5961
# define SCNxFAST16	232,5986
# define SCNxFAST32	233,6026
# define SCNxFAST64	234,6066
# define SCNdMAX	238,6162
# define SCNiMAX	239,6198
# define SCNoMAX	240,6234
# define SCNuMAX	241,6270
# define SCNxMAX	242,6306
# define SCNdPTR	245,6397
# define SCNiPTR	246,6434
# define SCNoPTR	247,6471
# define SCNuPTR	248,6508
# define SCNxPTR	249,6545

xen/include/xen/kernel.h,307
#define _LINUX_KERNEL_H2,24
#define min(13,233
#define max(19,412
#define min_t(31,720
#define max_t(33,814
#define MIN(40,1030
#define MAX(41,1071
#define container_of(51,1360
#define typecheck(59,1693
#define is_kernel(67,1951
#define is_kernel_text(73,2137
#define is_kernel_inittext(79,2331

xen/include/xen/xencomm.h,690
#define __XENCOMM_H__22,831
static inline int xencomm_is_inline(33,1196
static inline unsigned long xencomm_inline_addr(39,1369
#define guest_handle_is_null(45,1543
#define guest_handle_add_offset(49,1702
#define guest_handle_cast(55,1987
#define guest_handle_okay(64,2384
#define guest_handle_subrange_okay(65,2421
#define copy_to_guest_offset(71,2603
#define copy_field_to_guest(75,2773
#define copy_from_guest_offset(82,2992
#define copy_field_from_guest(86,3168
#define __copy_to_guest_offset(89,3263
#define __copy_field_to_guest(96,3621
#define __copy_from_guest_offset(104,4045
#define __copy_field_from_guest(110,4335
static inline void xencomm_mark_dirty(121,4868

xen/include/xen/serial.h,1510
#define __XEN_SERIAL_H__10,209
typedef void (*serial_rx_fn)serial_rx_fn15,325
#define serial_rxbufsz 19,504
struct serial_port 26,663
    struct uart_driver *driver;driver28,718
    void               *uart;uart29,750
    int                 tx_fifo_size;31,843
    char               *txbuf;txbuf33,937
    unsigned int        txbufp,34,968
    unsigned int        txbufp, txbufc;34,968
    bool_t              tx_quench;35,1008
    int                 tx_log_everything;36,1043
    int                 sync;38,1124
    serial_rx_fn        rx_lo,40,1218
    serial_rx_fn        rx_lo, rx_hi,40,1218
    serial_rx_fn        rx_lo, rx_hi, rx;40,1218
    char                rxbuf[rxbuf42,1311
    unsigned int        rxbufp,43,1358
    unsigned int        rxbufp, rxbufc;43,1358
    spinlock_t          rx_lock,45,1440
    spinlock_t          rx_lock, tx_lock;45,1440
struct uart_driver 48,1486
    void (*init_preirq)init_preirq50,1576
    void (*init_postirq)init_postirq51,1623
    void (*endboot)endboot53,1742
    int  (*tx_empty)tx_empty55,1858
    void (*putc)putc57,1950
    int  (*getc)getc59,2073
    int  (*irq)irq61,2195
#define SERHND_IDX 65,2301
#define SERHND_HI 66,2378
#define SERHND_LO 67,2455
#define SERHND_COOKED 68,2532
struct ns16550_defaults 130,4775
    int baud;131,4801
    int data_bits;132,4873
    int parity;133,4931
    int stop_bits;134,4989
    int irq;135,5041
    unsigned long io_base;136,5078
#define BAUD_AUTO 141,5272

xen/include/xen/list.h,3297
#define __XEN_LIST_H__8,194
#define LIST_POISON1 17,427
#define LIST_POISON2 18,471
struct list_head 30,856
    struct list_head *next,next31,875
    struct list_head *next, *prev;prev31,875
#define LIST_HEAD_INIT(34,914
#define LIST_HEAD(36,965
static inline void INIT_LIST_HEAD(39,1041
static inline void __list_add(51,1317
static inline void list_add(69,1768
static inline void list_add_tail(82,2093
static inline void __list_add_rcu(93,2383
static inline void list_add_rcu(120,3253
static inline void list_add_tail_rcu(141,3983
static inline void __list_del(154,4336
static inline void list_del(167,4691
static inline void list_del_rcu(200,5917
static inline void list_replace(212,6234
static inline void list_replace_init(221,6457
static inline void list_replace_rcu(236,6870
static inline void list_del_init(251,7266
static inline void list_move(262,7543
static inline void list_move_tail(273,7840
static inline int list_is_last(285,8169
static inline int list_empty(295,8409
static inline int list_empty_careful(313,8993
static inline void __list_splice(319,9157
static inline void list_splice(338,9610
static inline void list_splice_init(351,9957
#define list_entry(366,10398
#define list_for_each(374,10624
#define __list_for_each(388,11172
#define list_for_each_prev(396,11457
#define list_for_each_safe(406,11880
#define list_for_each_backwards_safe(417,12361
#define list_for_each_entry(427,12737
#define list_for_each_entry_reverse(438,13254
#define list_prepare_entry(453,13887
#define list_for_each_entry_continue(465,14322
#define list_for_each_entry_from(479,14951
#define list_for_each_entry_safe(491,15500
#define list_for_each_entry_safe_continue(507,16220
#define list_for_each_entry_safe_from(523,16923
#define list_for_each_entry_safe_reverse(538,17546
#define list_for_each_rcu(553,18258
#define __list_for_each_rcu(558,18483
#define list_for_each_safe_rcu(575,19118
#define list_for_each_entry_rcu(590,19715
#define list_for_each_continue_rcu(607,20474
struct hlist_head 619,20928
    struct hlist_node *first;first620,20948
struct hlist_node 623,20982
    struct hlist_node *next,next624,21002
    struct hlist_node *next, **pprev;pprev624,21002
#define HLIST_HEAD_INIT 627,21044
#define HLIST_HEAD(628,21086
#define INIT_HLIST_HEAD(629,21155
static inline void INIT_HLIST_NODE(630,21206
static inline int hlist_unhashed(636,21309
static inline int hlist_empty(641,21397
static inline void __hlist_del(646,21482
static inline void hlist_del(655,21683
static inline void hlist_del_rcu(681,22603
static inline void hlist_del_init(687,22712
static inline void hlist_replace_rcu(702,23061
static inline void hlist_add_head(716,23403
static inline void hlist_add_head_rcu(745,24389
static inline void hlist_add_before(758,24710
static inline void hlist_add_after(767,24915
static inline void hlist_add_before_rcu(796,25873
static inline void hlist_add_after_rcu(824,26829
#define hlist_entry(835,27100
#define hlist_for_each(837,27170
#define hlist_for_each_safe(841,27345
#define hlist_for_each_entry(852,27772
#define hlist_for_each_entry_continue(865,28395
#define hlist_for_each_entry_from(878,29009
#define hlist_for_each_entry_safe(892,29671
#define hlist_for_each_entry_rcu(910,30457

xen/include/xen/sort.h,28
#define __XEN_SORT_H__2,23

xen/include/xen/stringify.h,88
#define __XEN_STRINGIFY_H2,26
#define __stringify_1(9,228
#define __stringify(10,259

xen/include/xen/time.h,489
#define __XEN_TIME_H__9,203
typedef s64 s_time_t;31,683
struct tm 36,781
    int     tm_sec;37,793
    int     tm_min;38,835
    int     tm_hour;39,877
    int     tm_mday;40,917
    int     tm_mon;41,968
    int     tm_year;42,1008
    int     tm_wday;43,1047
    int     tm_yday;44,1097
    int     tm_isdst;45,1147
#define SYSTEM_TIME_HZ 49,1241
#define NOW(50,1279
#define SECONDS(51,1328
#define MILLISECS(52,1388
#define MICROSECS(53,1445
#define STIME_MAX 54,1499

xen/include/xen/hash.h,187
#define _XEN_HASH_H2,20
#define GOLDEN_RATIO_PRIME 18,652
#define GOLDEN_RATIO_PRIME 21,769
static inline unsigned long hash_long(26,883
static inline unsigned long hash_ptr(54,1502

xen/include/xen/guest_access.h,165
#define __XEN_GUEST_ACCESS_H__8,172
#define copy_to_guest(12,235
#define copy_from_guest(15,336
#define __copy_to_guest(18,439
#define __copy_from_guest(21,542

xen/include/xen/init.h,1195
#define _LINUX_INIT_H2,22
#define __init 11,180
#define __exit 13,252
#define __initdata 15,342
#define __exitdata 17,414
#define __initsetup 19,505
#define __init_call(21,597
#define __exit_call 23,704
typedef int (*initcall_t)initcall_t66,2001
typedef void (*exitcall_t)exitcall_t67,2034
#define presmp_initcall(69,2069
#define __initcall(71,2164
#define __exitcall(73,2249
struct kernel_param 82,2443
    const char *name;name83,2465
        OPT_STR,85,2498
        OPT_UINT,86,2515
        OPT_BOOL,87,2533
        OPT_INVBOOL,88,2551
        OPT_SIZE,89,2572
        OPT_CUSTOM90,2590
    } type;91,2609
    void *var;var92,2621
    unsigned int len;93,2636
#define __setup_str 98,2718
#define __kparam 99,2793
#define custom_param(101,2869
#define boolean_param(104,3027
#define invbool_param(108,3206
#define integer_param(112,3388
#define size_param(116,3567
#define string_param(120,3743
#define __setup(126,3984
#define __devinit131,4118
#define __devinitdata132,4136
#define __devexit133,4158
#define __devexitdata134,4176
#define __devinit 136,4204
#define __devinitdata 137,4229
#define __devexit 138,4262
#define __devexitdata 139,4287

xen/include/xen/sched.h,8598
#define __SCHED_H__3,21
#define BITS_PER_EVTCHN_WORD(39,854
#define BITS_PER_EVTCHN_WORD(41,906
#define MAX_EVTCHNS(43,988
#define EVTCHNS_PER_BUCKET 44,1063
#define NR_EVTCHN_BUCKETS 45,1094
struct evtchn47,1163
#define ECS_FREE 49,1179
#define ECS_RESERVED 50,1259
#define ECS_UNBOUND 51,1339
#define ECS_INTERDOMAIN 52,1419
#define ECS_PIRQ 53,1499
#define ECS_VIRQ 54,1579
#define ECS_IPI 55,1659
    u8  state;56,1739
    u8  consumer_is_xen;57,1778
    u16 notify_vcpu_id;58,1840
            domid_t remote_domid;61,1939
        } unbound;62,1973
            u16            remote_port;64,2040
            struct domain *remote_dom;remote_dom65,2080
        } interdomain;66,2119
            u16            irq;68,2190
            u16            next_port;69,2222
            u16            prev_port;70,2260
        } pirq;71,2298
        u16 virq;72,2345
    } u;73,2392
    void *ssid;ssid75,2421
struct vcpu 85,2676
    int              vcpu_id;87,2691
    int              processor;89,2722
    vcpu_info_t     *vcpu_info;vcpu_info91,2755
    struct domain   *domain;domain93,2788
    struct vcpu     *next_in_list;next_in_list95,2818
    s_time_t         periodic_period;97,2854
    s_time_t         periodic_last_event;98,2892
    struct timer     periodic_timer;99,2934
    struct timer     singleshot_timer;100,2971
    struct timer     poll_timer;102,3011
    void            *sched_priv;sched_priv104,3079
    struct vcpu_runstate_info runstate;106,3146
# define runstate_guest(108,3208
    XEN_GUEST_HANDLE(109,3257
# define runstate_guest(111,3342
        XEN_GUEST_HANDLE(113,3410
#define VCPU_TRAP_NONE 133,4096
        bool_t           pending;135,4137
        uint8_t          old_mask;136,4171
    }                async_exception_state[async_exception_state137,4206
#define async_exception_state(138,4266
    uint8_t          async_exception_mask;139,4328
    bool_t           defer_shutdown;143,4454
    bool_t           paused_for_shutdown;145,4566
    int              poll_evtchn;152,4791
    int              pirq_evtchn_head;155,4877
    unsigned long    pause_flags;157,4917
    atomic_t         pause_count;158,4951
    u16              virq_to_evtchn[virq_to_evtchn161,5065
    spinlock_t       virq_lock;162,5112
    cpumask_t        cpu_affinity;165,5199
    cpumask_t        cpu_affinity_tmp;167,5281
    cpumask_t        vcpu_dirty_cpumask;170,5389
    struct tasklet   continue_hypercall_tasklet;173,5482
    struct mc_state  mc_state;176,5565
    struct waitqueue_vcpu *waitqueue_vcpu;waitqueue_vcpu178,5597
    struct arch_vcpu arch;180,5641
#define domain_lock(184,5741
#define domain_unlock(185,5803
#define domain_is_locked(186,5869
struct mem_event_domain189,5951
    spinlock_t ring_lock;192,5997
    mem_event_shared_page_t *shared_page;shared_page194,6045
    void *ring_page;ring_page196,6114
    mem_event_front_ring_t front_ring;198,6160
    int xen_port;200,6241
struct domain203,6263
    domid_t          domain_id;205,6279
    shared_info_t   *shared_info;shared_info207,6312
    spinlock_t       domain_lock;209,6374
    spinlock_t       page_alloc_lock;211,6409
    struct page_list_head page_list;212,6488
    struct page_list_head xenpage_list;213,6567
    unsigned int     tot_pages;214,6646
    unsigned int     max_pages;215,6725
    atomic_t         shr_pages;216,6804
    unsigned int     xenheap_pages;217,6883
    unsigned int     max_vcpus;219,6963
    void            *sched_priv;sched_priv222,7018
    struct cpupool  *cpupool;cpupool223,7084
    struct domain   *next_in_list;next_in_list225,7115
    struct domain   *next_in_hashbucket;next_in_hashbucket226,7150
    struct list_head rangesets;228,7192
    spinlock_t       rangesets_lock;229,7224
    struct evtchn   *evtchn[evtchn232,7299
    spinlock_t       event_lock;233,7347
    struct grant_table *grant_table;grant_table235,7381
    unsigned int     nr_pirqs;242,7642
    u16             *pirq_to_evtchn;pirq_to_evtchn243,7673
    unsigned long   *pirq_mask;pirq_mask244,7710
    struct rangeset *iomem_caps;iomem_caps247,7810
    struct rangeset *irq_caps;irq_caps248,7843
    bool_t           is_hvm;251,7907
    bool_t           need_iommu;253,7983
    bool_t           is_privileged;255,8069
    struct domain   *target;target257,8156
    bool_t           debugger_attached;259,8233
    enum { DOMDYING_alive,261,8321
    enum { DOMDYING_alive, DOMDYING_dying,261,8321
    enum { DOMDYING_alive, DOMDYING_dying, DOMDYING_dead 261,8321
    enum { DOMDYING_alive, DOMDYING_dying, DOMDYING_dead } is_dying;261,8321
    bool_t           is_paused_by_controller;263,8441
    bool_t           is_pinned;265,8545
    DECLARE_BITMAP(269,8676
    unsigned long   *poll_mask;poll_mask271,8728
    spinlock_t       shutdown_lock;275,8818
    bool_t           is_shutting_down;276,8854
    bool_t           is_shut_down;277,8928
    int              shutdown_code;278,8990
    int              suspend_evtchn;282,9120
    atomic_t         pause_count;284,9158
    unsigned long    vm_assist;286,9193
    atomic_t         refcnt;288,9226
    struct vcpu    **vcpu;vcpu290,9256
    cpumask_t        domain_dirty_cpumask;293,9354
    struct arch_domain arch;295,9398
    void *ssid;ssid297,9428
    xen_domain_handle_t handle;300,9539
    struct xenoprof *xenoprof;xenoprof303,9600
    int32_t time_offset_seconds;304,9631
#define NR_DOMAIN_WATCHDOG_TIMERS 307,9692
    spinlock_t watchdog_lock;308,9728
    uint32_t watchdog_inuse_map;309,9758
    struct timer watchdog_timer[watchdog_timer310,9791
    struct rcu_head rcu;312,9852
    spinlock_t hypercall_deadlock_mutex;318,10030
    void *tmem;tmem321,10150
    struct lock_profile_qhead profile_head;323,10167
    bool_t disable_migrate;326,10258
    struct mem_event_domain mem_event;329,10319
    nodemask_t node_affinity;332,10431
    unsigned int last_alloc_node;333,10461
    spinlock_t node_affinity_lock;334,10495
struct domain_setup_info337,10534
    unsigned long image_addr;340,10594
    unsigned long image_len;341,10624
    unsigned long v_start;343,10694
    unsigned long v_end;344,10721
    unsigned long v_kernstart;345,10746
    unsigned long v_kernend;346,10777
    unsigned long v_kernentry;347,10806
#define PAEKERN_no 348,10837
#define PAEKERN_yes 349,10868
#define PAEKERN_extended_cr3 350,10899
#define PAEKERN_bimodal 351,10930
    unsigned int  pae_kernel;352,10961
    unsigned long elf_paddr_offset;354,11033
    unsigned int  load_symtab;355,11069
    unsigned long symtab_addr;356,11100
    unsigned long symtab_len;357,11131
#define is_idle_domain(365,11355
#define is_idle_vcpu(366,11412
#define DOMAIN_DESTROYED 368,11469
#define put_domain(369,11539
static always_inline int get_domain(376,11742
static inline void get_knownalive_domain(395,12300
#define _DOMCRF_hvm 406,12667
#define DOMCRF_hvm 407,12699
#define _DOMCRF_hap 409,12813
#define DOMCRF_hap 410,12845
#define _DOMCRF_s3_integrity 413,13009
#define DOMCRF_s3_integrity 414,13041
#define _DOMCRF_dummy 416,13177
#define DOMCRF_dummy 417,13209
#define _DOMCRF_oos_off 419,13339
#define DOMCRF_oos_off 420,13373
static inline void rcu_unlock_domain(439,14181
static inline struct domain *rcu_lock_domain(rcu_lock_domain445,14318
static inline struct domain *rcu_lock_current_domain(rcu_lock_current_domain452,14458
#define domain_crash(473,15146
void __domain_crash_synchronous(482,15515
#define domain_crash_synchronous(483,15580
#define set_current_state(488,15821
#define hypercall_preempt_check(551,18290
#define for_each_domain(559,18553
#define for_each_vcpu(564,18758
#define _VPF_blocked 573,19024
#define VPF_blocked 574,19055
#define _VPF_down 576,19128
#define VPF_down 577,19159
#define _VPF_blocked_in_xen 579,19269
#define VPF_blocked_in_xen 580,19300
#define _VPF_migrating 582,19414
#define VPF_migrating 583,19445
#define _VPF_mem_event 585,19541
#define VPF_mem_event 586,19572
static inline int vcpu_runnable(588,19624
#define cpu_is_haltable(622,20806
#define IS_PRIV(630,21091
#define IS_PRIV_FOR(631,21133
#define VM_ASSIST(633,21218
#define is_hvm_domain(635,21279
#define is_hvm_vcpu(636,21318
#define need_iommu(637,21370
extern enum cpufreq_controller 644,21551
    FREQCTL_none,645,21584
    FREQCTL_none, FREQCTL_dom0_kernel,645,21584
    FREQCTL_none, FREQCTL_dom0_kernel, FREQCTL_xen645,21584
#define CPUPOOLID_NONE 648,21658
#define num_cpupool_cpus(655,21928

xen/include/xen/lib.h,949
#define __LIB_H__2,18
void __bug(12,205
#define BUG_ON(15,301
#define WARN_ON(16,362
#define BUILD_BUG_ON(19,477
#define BUILD_BUG_ON_ZERO(25,795
#define assert_failed(28,880
#define ASSERT(37,1245
#define ASSERT(40,1332
#define ABS(43,1368
#define SWAP(48,1522
#define DIV_ROUND(51,1614
#define ARRAY_SIZE(53,1663
#define reserve_bootmem(55,1736
#define debugtrace_dump(67,2008
#define debugtrace_printk(68,2053
#define _p(72,2179
extern void printk(73,2224
extern void panic(75,2313
#define sprintf 82,2592
#define vsprintf 83,2631
extern int snprintf(84,2672
extern int vsnprintf(86,2785
extern int scnprintf(88,2906
extern int vscnprintf(90,3020
extern int sscanf(92,3142
extern int vsscanf(94,3245
#define TAINT_UNSAFE_SMP 110,3833
#define TAINT_MACHINE_CHECK 111,3880
#define TAINT_BAD_PAGE 112,3927
#define TAINT_SYNC_CONSOLE 113,3974
#define TAINT_ERROR_INJECT 114,4021
#define TAINT_STRING_MAX_LEN 116,4088

xen/include/xen/xenoprof.h,1090
#define __XEN_XENOPROF_H__11,284
#define XENOPROF_DOMAIN_IGNORED 17,392
#define XENOPROF_DOMAIN_ACTIVE 18,429
#define XENOPROF_DOMAIN_PASSIVE 19,466
#define XENOPROF_IDLE 21,504
#define XENOPROF_INITIALIZED 22,541
#define XENOPROF_COUNTERS_RESERVED 23,578
#define XENOPROF_READY 24,615
#define XENOPROF_PROFILING 25,652
typedef struct xenoprof_buf xenoprof_buf_t;28,712
	struct xenoprof_buf native;32,807
	struct compat_oprof_buf compat;33,836
} xenoprof_buf_t;34,869
struct xenoprof_vcpu 37,895
    int event_size;38,918
    xenoprof_buf_t *buffer;buffer39,938
struct xenoprof 42,970
    char *rawbuf;rawbuf43,988
    int npages;44,1006
    int nbuf;45,1022
    int bufsize;46,1036
    int domain_type;47,1053
    int domain_ready;48,1074
    int is_primary;49,1096
    int is_compat;51,1137
    struct xenoprof_vcpu *vcpu;vcpu53,1163
#define XENOPROF_COMPAT(57,1221
#define xenoprof_buf(58,1250
#define XENOPROF_COMPAT(60,1303
#define xenoprof_buf(61,1347
#define PMU_OWNER_NONE 74,1783
#define PMU_OWNER_XENOPROF 75,1817
#define PMU_OWNER_HVM 76,1851

xen/include/xen/elf.h,151
#define __XEN_ELF_H__28,1495
#define ELFNOTE_ALIGN(32,1547
#define ELFNOTE_NAME(33,1589
#define ELFNOTE_DESC(34,1647
#define ELFNOTE_NEXT(35,1724

xen/include/xen/perfc.h,1035
#define __XEN_PERFC_H__2,24
#define PERFCOUNTER(33,1340
#define PERFCOUNTER_ARRAY(35,1393
#define PERFSTATUS 39,1572
#define PERFSTATUS_ARRAY 40,1609
enum perfcounter 42,1653
	NUM_PERFCOUNTERS44,1700
#undef PERFCOUNTER47,1722
#undef PERFCOUNTER_ARRAY48,1741
#undef PERFSTATUS49,1766
#undef PERFSTATUS_ARRAY50,1784
typedef unsigned perfc_t;52,1809
#define PRIperfc 53,1835
#define perfc_value(57,1915
#define perfc_valuea(58,1977
#define perfc_set(61,2175
#define perfc_seta(62,2245
#define perfc_incr(65,2451
#define perfc_decr(66,2517
#define perfc_incra(67,2583
#define perfc_add(70,2783
#define perfc_adda(71,2854
#define perfc_incr_histo(80,3202
#define perfc_incr_histo(93,4043
#define perfc_value(101,4200
#define perfc_valuea(102,4230
#define perfc_set(103,4260
#define perfc_seta(104,4296
#define perfc_incr(105,4332
#define perfc_decr(106,4368
#define perfc_incra(107,4404
#define perfc_decra(108,4440
#define perfc_add(109,4476
#define perfc_adda(110,4512
#define perfc_incr_histo(111,4548

xen/include/xen/stop_machine.h,36
#define __XEN_STOP_MACHINE_H__2,31

xen/include/xen/paging.h,261
#define __XEN_PAGING_H__3,26
#define paging_mode_translate(16,215
#define paging_mode_external(17,274
#define paging_mode_translate(21,320
#define paging_mode_external(22,370
#define guest_physmap_add_page(23,420
#define guest_physmap_remove_page(24,470

xen/include/xen/cpu.h,270
#define __XEN_CPU_H__2,22
#define CPU_UP_PREPARE 35,1215
#define CPU_UP_CANCELED 37,1328
#define CPU_STARTING 39,1456
#define CPU_ONLINE 41,1536
#define CPU_DOWN_PREPARE 43,1630
#define CPU_DOWN_FAILED 45,1733
#define CPU_DYING 47,1847
#define CPU_DEAD 49,1927

xen/include/xen/elfstructs.h,11019
#define __XEN_ELFSTRUCTS_H__2,29
typedef uint8_t		Elf_Byte;29,1531
typedef uint32_t	Elf32_Addr;31,1559
typedef uint32_t	Elf32_Off;32,1619
typedef int32_t		Elf32_Sword;33,1674
typedef uint32_t	Elf32_Word;34,1731
typedef uint16_t	Elf32_Half;35,1789
typedef uint64_t	Elf64_Addr;37,1849
typedef uint64_t	Elf64_Off;38,1878
typedef int32_t		Elf64_Shalf;39,1906
typedef int32_t		Elf64_Sword;41,1937
typedef uint32_t	Elf64_Word;42,1967
typedef int64_t		Elf64_Sxword;44,1997
typedef uint64_t	Elf64_Xword;45,2028
typedef uint32_t	Elf64_Half;47,2059
typedef uint16_t	Elf64_Quarter;48,2088
#define EI_MAG0	54,2239
#define EI_MAG1	55,2273
#define EI_MAG2	56,2307
#define EI_MAG3	57,2341
#define EI_CLASS	58,2375
#define EI_DATA	59,2412
#define EI_VERSION	60,2452
#define EI_OSABI	61,2499
#define EI_ABIVERSION	62,2535
#define EI_PAD	63,2578
#define EI_NIDENT	64,2622
#define	ELFMAG0	67,2698
#define	ELFMAG1	68,2744
#define	ELFMAG2	69,2789
#define	ELFMAG3	70,2834
#define	ELFMAG	71,2879
#define	SELFMAG	72,2917
#define	ELFCLASSNONE	75,2985
#define	ELFCLASS32	76,3023
#define	ELFCLASS64	77,3063
#define	ELFCLASSNUM	78,3103
#define ELFDATANONE	81,3181
#define ELFDATA2LSB	82,3218
#define ELFDATA2MSB	83,3261
#define ELFDATANUM	84,3301
#define ELFOSABI_SYSV	87,3397
#define ELFOSABI_HPUX	88,3446
#define ELFOSABI_NETBSD	89,3500
#define ELFOSABI_LINUX	90,3540
#define ELFOSABI_HURD	91,3582
#define ELFOSABI_86OPEN	92,3622
#define ELFOSABI_SOLARIS	93,3678
#define ELFOSABI_MONTEREY	94,3719
#define ELFOSABI_IRIX	95,3762
#define ELFOSABI_FREEBSD	96,3798
#define ELFOSABI_TRU64	97,3839
#define ELFOSABI_MODESTO	98,3883
#define ELFOSABI_OPENBSD	99,3932
#define ELFOSABI_ARM	100,3974
#define ELFOSABI_STANDALONE	101,4009
#define IS_ELF(104,4096
typedef struct elfhdr 110,4358
	unsigned char	e_ident[e_ident111,4382
	Elf32_Half	e_type;112,4442
	Elf32_Half	e_machine;113,4486
	Elf32_Word	e_version;114,4523
	Elf32_Addr	e_entry;115,4572
	Elf32_Off	e_phoff;116,4619
	Elf32_Off	e_shoff;117,4673
	Elf32_Word	e_flags;118,4727
	Elf32_Half	e_ehsize;119,4779
	Elf32_Half	e_phentsize;120,4823
	Elf32_Half	e_phnum;121,4880
	Elf32_Half	e_shentsize;122,4940
	Elf32_Half	e_shnum;123,4997
	Elf32_Half	e_shstrndx;124,5057
} Elf32_Ehdr;126,5161
	unsigned char	e_ident[e_ident129,5193
	Elf64_Quarter	e_type;130,5243
	Elf64_Quarter	e_machine;131,5284
	Elf64_Half	e_version;132,5330
	Elf64_Addr	e_entry;133,5375
	Elf64_Off	e_phoff;134,5415
	Elf64_Off	e_shoff;135,5461
	Elf64_Half	e_flags;136,5507
	Elf64_Quarter	e_ehsize;137,5551
	Elf64_Quarter	e_phentsize;138,5595
	Elf64_Quarter	e_phnum;139,5656
	Elf64_Quarter	e_shentsize;140,5713
	Elf64_Quarter	e_shnum;141,5774
	Elf64_Quarter	e_shstrndx;142,5831
} Elf64_Ehdr;143,5884
#define ET_NONE	146,5912
#define ET_REL	147,5951
#define ET_EXEC	148,5993
#define ET_DYN	149,6035
#define ET_CORE	150,6079
#define ET_NUM	151,6115
#define ET_LOPROC	152,6156
#define ET_HIPROC	153,6217
#define EM_NONE	156,6283
#define EM_M32	157,6320
#define EM_SPARC	158,6359
#define EM_386	159,6391
#define EM_68K	160,6428
#define EM_88K	161,6468
#define EM_486	162,6508
#define EM_860	163,6555
#define EM_MIPS	164,6592
#define EM_MIPS_RS4_BE	170,6742
#define EM_SPARC64	171,6797
#define EM_PARISC	172,6852
#define EM_SPARC32PLUS	173,6885
#define EM_PPC	174,6949
#define EM_PPC64	175,6983
#define EM_ARM	176,7025
#define EM_ALPHA	177,7078
#define EM_SPARCV9	178,7115
#define EM_ALPHA_EXP	179,7160
#define EM_IA_64	180,7205
#define EM_X86_64	181,7245
#define EM_VAX	182,7297
#define EV_NONE	185,7346
#define EV_CURRENT	186,7380
#define EV_NUM	187,7416
	Elf32_Word	sh_name;191,7499
	Elf32_Word	sh_type;193,7588
	Elf32_Word	sh_flags;194,7620
	Elf32_Addr	sh_addr;195,7654
	Elf32_Off	sh_offset;196,7689
	Elf32_Word	sh_size;197,7729
	Elf32_Word	sh_link;198,7769
	Elf32_Word	sh_info;199,7828
	Elf32_Word	sh_addralign;200,7873
	Elf32_Word	sh_entsize;201,7923
} Elf32_Shdr;202,7972
	Elf64_Half	sh_name;205,8004
	Elf64_Half	sh_type;206,8044
	Elf64_Xword	sh_flags;207,8084
	Elf64_Addr	sh_addr;208,8127
	Elf64_Off	sh_offset;209,8170
	Elf64_Xword	sh_size;210,8210
	Elf64_Half	sh_link;211,8251
	Elf64_Half	sh_info;212,8294
	Elf64_Xword	sh_addralign;213,8331
	Elf64_Xword	sh_entsize;214,8381
} Elf64_Shdr;215,8429
#define SHN_UNDEF	218,8474
#define SHN_LORESERVE	219,8511
#define SHN_LOPROC	220,8580
#define SHN_HIPROC	221,8642
#define SHN_ABS	222,8702
#define SHN_COMMON	223,8748
#define SHN_HIRESERVE	224,8795
#define SHT_NULL	227,8879
#define SHT_PROGBITS	228,8914
#define SHT_SYMTAB	229,8972
#define SHT_STRTAB	230,9021
#define SHT_RELA	231,9070
#define SHT_HASH	232,9127
#define SHT_DYNAMIC	233,9179
#define SHT_NOTE	234,9224
#define SHT_NOBITS	235,9263
#define SHT_REL	236,9308
#define SHT_SHLIB	237,9367
#define SHT_DYNSYM	238,9422
#define SHT_NUM	239,9480
#define SHT_LOPROC	240,9531
#define SHT_HIPROC	241,9596
#define SHT_LOUSER	242,9663
#define SHT_HIUSER	243,9730
#define ELF_BSS 246,9805
#define ELF_DATA 247,9862
#define ELF_DEBUG 248,9918
#define ELF_DYNAMIC 249,9963
#define ELF_DYNSTR 250,10032
#define ELF_DYNSYM 251,10093
#define ELF_FINI 252,10154
#define ELF_GOT 253,10210
#define ELF_HASH 254,10268
#define ELF_INIT 255,10325
#define ELF_REL_DATA 256,10384
#define ELF_REL_FINI 257,10442
#define ELF_REL_INIT 258,10512
#define ELF_REL_DYN 259,10585
#define ELF_REL_RODATA 260,10656
#define ELF_REL_TEXT 261,10726
#define ELF_RODATA 262,10784
#define ELF_SHSTRTAB 263,10839
#define ELF_STRTAB 264,10909
#define ELF_SYMTAB 265,10962
#define ELF_TEXT 266,11015
#define SHF_WRITE	270,11102
#define SHF_ALLOC	271,11140
#define SHF_EXECINSTR	272,11185
#define SHF_MASKPROC	273,11229
typedef struct elf32_sym 277,11361
	Elf32_Word	st_name;278,11388
	Elf32_Addr	st_value;279,11446
	Elf32_Word	st_size;280,11487
	unsigned char	st_info;281,11526
	unsigned char	st_other;282,11573
	Elf32_Half	st_shndx;283,11627
} Elf32_Sym;284,11676
	Elf64_Half	st_name;287,11707
	Elf_Byte	st_info;288,11765
	Elf_Byte	st_other;289,11811
	Elf64_Quarter	st_shndx;290,11844
	Elf64_Xword	st_value;291,11899
	Elf64_Xword	st_size;292,11944
} Elf64_Sym;293,11987
#define STN_UNDEF	296,12026
#define ELF32_ST_BIND(299,12100
#define ELF32_ST_TYPE(300,12136
#define ELF32_ST_INFO(301,12188
#define ELF64_ST_BIND(303,12243
#define ELF64_ST_TYPE(304,12279
#define ELF64_ST_INFO(305,12331
#define STB_LOCAL	308,12433
#define STB_GLOBAL	309,12473
#define STB_WEAK	310,12515
#define STB_NUM	311,12572
#define STB_LOPROC	312,12624
#define STB_HIPROC	313,12682
#define STT_NOTYPE	316,12782
#define STT_OBJECT	317,12824
#define STT_FUNC	318,12864
#define STT_SECTION	319,12899
#define STT_FILE	320,12936
#define STT_NUM	321,12967
#define STT_LOPROC	322,13016
#define STT_HIPROC	323,13074
	Elf32_Addr	r_offset;327,13188
	Elf32_Word	r_info;328,13237
} Elf32_Rel;329,13292
	Elf32_Addr	r_offset;333,13367
	Elf32_Word	r_info;334,13416
	Elf32_Sword	r_addend;335,13471
} Elf32_Rela;336,13494
#define ELF32_R_SYM(339,13548
#define ELF32_R_TYPE(340,13583
#define ELF32_R_INFO(341,13630
	Elf64_Xword	r_offset;344,13709
	Elf64_Xword	r_info;345,13753
} Elf64_Rel;346,13808
	Elf64_Xword	r_offset;349,13839
	Elf64_Xword	r_info;350,13883
	Elf64_Sxword	r_addend;351,13938
} Elf64_Rela;352,13985
#define	ELF64_R_SYM(354,14000
#define	ELF64_R_TYPE(355,14041
#define ELF64_R_INFO(356,14090
	Elf32_Word	p_type;360,14187
	Elf32_Off	p_offset;361,14227
	Elf32_Addr	p_vaddr;362,14269
	Elf32_Addr	p_paddr;363,14323
	Elf32_Word	p_filesz;364,14378
	Elf32_Word	p_memsz;365,14439
	Elf32_Word	p_flags;366,14499
	Elf32_Word	p_align;367,14532
} Elf32_Phdr;368,14576
	Elf64_Half	p_type;371,14608
	Elf64_Half	p_flags;372,14646
	Elf64_Off	p_offset;373,14679
	Elf64_Addr	p_vaddr;374,14713
	Elf64_Addr	p_paddr;375,14756
	Elf64_Xword	p_filesz;376,14800
	Elf64_Xword	p_memsz;377,14839
	Elf64_Xword	p_align;378,14879
} Elf64_Phdr;379,14931
#define PT_NULL	382,14975
#define PT_LOAD	383,15008
#define PT_DYNAMIC	384,15051
#define PT_INTERP	385,15103
#define PT_NOTE	386,15139
#define PT_SHLIB	387,15187
#define PT_PHDR	388,15242
#define PT_NUM	389,15283
#define PT_LOPROC	390,15332
#define PT_HIPROC	391,15396
#define PF_X	394,15486
#define PF_W	395,15522
#define PF_R	396,15556
#define PF_MASKPROC	397,15590
	Elf32_Sword	d_tag;402,15732
		Elf32_Word	d_val;404,15794
		Elf32_Addr	d_ptr;405,15850
	} d_un;406,15900
} Elf32_Dyn;407,15909
	Elf64_Xword	d_tag;410,15940
		Elf64_Addr	d_ptr;412,16002
		Elf64_Xword	d_val;413,16022
	} d_un;414,16043
} Elf64_Dyn;415,16052
#define DT_NULL	418,16099
#define DT_NEEDED	419,16153
#define DT_PLTRELSZ	420,16214
#define DT_PLTGOT	421,16277
#define DT_HASH	422,16320
#define DT_STRTAB	423,16375
#define DT_SYMTAB	424,16426
#define DT_RELA	425,16477
#define DT_RELASZ	426,16531
#define DT_RELAENT	427,16583
#define DT_STRSZ	428,16636
#define DT_SYMENT	429,16684
#define DT_INIT	430,16739
#define DT_FINI	431,16798
#define DT_SONAME	432,16857
#define DT_RPATH	433,16919
#define DT_SYMBOLIC	435,16997
#define DT_REL	436,17059
#define DT_RELSZ	437,17116
#define DT_RELENT	438,17175
#define DT_PLTREL	439,17235
#define DT_DEBUG	440,17295
#define DT_TEXTREL	441,17329
#define DT_JMPREL	442,17392
#define DT_BIND_NOW	443,17453
#define DT_NUM	444,17518
#define DT_LOPROC	445,17557
#define DT_HIPROC	446,17621
	Elf32_Word namesz;455,17817
	Elf32_Word descsz;456,17837
	Elf32_Word type;457,17857
} Elf32_Note;458,17875
	Elf64_Half namesz;461,17907
	Elf64_Half descsz;462,17927
	Elf64_Half type;463,17947
} Elf64_Note;464,17965
#define CONCAT(468,18002
#define ELFNAME(469,18036
#define ELFNAME2(470,18095
#define ELFNAMEEND(471,18168
#define ELFDEFNNAME(472,18221
#define Elf_Ehdr	476,18332
#define Elf_Phdr	477,18360
#define Elf_Shdr	478,18388
#define Elf_Sym	479,18416
#define Elf_Rel	480,18443
#define Elf_RelA	481,18470
#define Elf_Dyn	482,18498
#define Elf_Word	483,18525
#define Elf_Sword	484,18553
#define Elf_Addr	485,18583
#define Elf_Off	486,18611
#define Elf_Nhdr	487,18638
#define Elf_Note	488,18666
#define ELF_R_SYM	490,18695
#define ELF_R_TYPE	491,18725
#define ELF_R_INFO	492,18757
#define ELFCLASS	493,18789
#define ELF_ST_BIND	495,18818
#define ELF_ST_TYPE	496,18852
#define ELF_ST_INFO	497,18886
#define AuxInfo	499,18921
#define Elf_Ehdr	501,18990
#define Elf_Phdr	502,19018
#define Elf_Shdr	503,19046
#define Elf_Sym	504,19074
#define Elf_Rel	505,19101
#define Elf_RelA	506,19128
#define Elf_Dyn	507,19156
#define Elf_Word	508,19183
#define Elf_Sword	509,19211
#define Elf_Addr	510,19241
#define Elf_Off	511,19269
#define Elf_Nhdr	512,19296
#define Elf_Note	513,19324
#define ELF_R_SYM	515,19353
#define ELF_R_TYPE	516,19383
#define ELF_R_INFO	517,19415
#define ELFCLASS	518,19447
#define ELF_ST_BIND	520,19476
#define ELF_ST_TYPE	521,19510
#define ELF_ST_INFO	522,19544
#define AuxInfo	524,19579

xen/include/xen/cper.h,1884
#define LINUX_CPER_H23,851
	__u8 b[b31,975
} uuid_le;32,988
static inline int uuid_le_cmp(34,1000
static inline u64 cper_next_record_id(39,1121
#define UUID_LE(49,1269
#define CPER_SIG_RECORD	57,1601
#define CPER_SIG_SIZE	58,1635
#define CPER_SIG_END	60,1725
#define CPER_RECORD_REV	66,1855
#define CPER_SER_RECOVERABLE	72,2026
#define CPER_SER_FATAL	73,2061
#define CPER_SER_CORRECTED	74,2091
#define CPER_SER_INFORMATIONAL	75,2124
#define CPER_NOTIFY_CMC	83,2309
#define CPER_NOTIFY_CPE	87,2461
#define CPER_NOTIFY_MCE	91,2612
#define CPER_NOTIFY_PCIE	95,2757
#define CPER_NOTIFY_INIT	99,2906
#define CPER_NOTIFY_NMI	103,3056
#define CPER_NOTIFY_BOOT	107,3201
#define CPER_NOTIFY_DMAR	111,3348
#define CPER_HW_ERROR_FLAGS_RECOVERED	119,3582
#define CPER_HW_ERROR_FLAGS_PREVERR	121,3670
#define CPER_HW_ERROR_FLAGS_SIMULATED	123,3759
#define CPER_SEC_REV	129,3903
#define CPER_SEC_VALID_FRU_ID	138,4148
#define CPER_SEC_VALID_FRU_TEXT	140,4211
#define CPER_SEC_PRIMARY	148,4430
struct cper_record_header 156,4616
	char	signature[signature157,4644
	__u16	revision;158,4706
	__u32	signature_end;159,4755
	__u16	section_count;160,4806
	__u32	error_severity;161,4828
	__u32	validation_bits;162,4851
	__u32	record_length;163,4875
	__u64	timestamp;164,4897
	uuid_le	platform_id;165,4915
	uuid_le	partition_id;166,4937
	uuid_le	creator_id;167,4960
	uuid_le	notification_type;168,4981
	__u64	record_id;169,5009
	__u32	flags;170,5027
	__u64	persistence_information;171,5041
	__u8	reserved[reserved172,5073
struct cper_section_descriptor 175,5118
	__u32	section_offset;176,5151
	__u32	section_length;179,5270
	__u16	revision;180,5293
	__u8	validation_bits;181,5341
	__u8	reserved;182,5364
	__u32	flags;183,5400
	uuid_le	section_type;184,5414
	uuid_le	fru_id;185,5437
	__u32	section_severity;186,5454
	__u8	fru_text[fru_text187,5479

xen/include/xen/rbtree.h,732
#define __RBTREE_H__21,793
struct rb_node23,815
    unsigned long  rb_parent_color;25,832
#define RB_RED 26,868
#define RB_BLACK 27,886
    struct rb_node *rb_right;rb_right28,905
    struct rb_node *rb_left;rb_left29,935
struct rb_root32,968
    struct rb_node *rb_node;rb_node34,985
#define rb_parent(37,1018
#define rb_color(38,1089
#define rb_is_red(39,1138
#define rb_is_black(40,1176
#define rb_set_red(41,1211
#define rb_set_black(42,1279
static inline void rb_set_parent(44,1349
static inline void rb_set_color(48,1497
#define RB_ROOT 53,1627
#define rb_entry(54,1670
#define RB_EMPTY_ROOT(56,1739
#define RB_EMPTY_NODE(57,1793
#define RB_CLEAR_NODE(58,1847
static inline void rb_link_node(73,2488

xen/include/xen/types.h,1399
#define __TYPES_H__2,20
#define BITS_TO_LONGS(7,89
#define DECLARE_BITMAP(9,164
#define NULL 13,258
#define INT_MAX 16,290
#define INT_MIN 17,330
#define UINT_MAX 18,369
#define LONG_MAX 19,399
#define LONG_MIN 20,441
#define ULONG_MAX 21,481
typedef unsigned char           u_char;24,523
typedef unsigned short          u_short;25,563
typedef unsigned int            u_int;26,604
typedef unsigned long           u_long;27,643
typedef unsigned char           unchar;30,695
typedef unsigned short          ushort;31,735
typedef unsigned int            uint;32,775
typedef unsigned long           ulong;33,813
typedef         __u8            uint8_t;35,853
typedef         __u8            u_int8_t;36,894
typedef         __s8            int8_t;37,936
typedef         __u16           uint16_t;39,977
typedef         __u16           u_int16_t;40,1019
typedef         __s16           int16_t;41,1062
typedef         __u32           uint32_t;43,1104
typedef         __u32           u_int32_t;44,1146
typedef         __s32           int32_t;45,1189
typedef         __u64           uint64_t;47,1231
typedef         __u64           u_int64_t;48,1273
typedef         __s64           int64_t;49,1316
typedef __u16 __le16;54,1387
typedef __u16 __be16;55,1409
typedef __u32 __le32;56,1431
typedef __u32 __be32;57,1453
typedef __u64 __le64;58,1475
typedef __u64 __be64;59,1497

xen/include/xen/shared.h,508
#define __XEN_SHARED_H__2,25
    struct shared_info native;11,139
    struct compat_shared_info compat;12,170
} shared_info_t;13,208
#define __shared_info(20,440
    struct vcpu_info native;26,687
    struct compat_vcpu_info compat;27,716
} vcpu_info_t;28,752
#define __vcpu_info(31,811
typedef struct shared_info shared_info_t;38,1049
#define __shared_info(39,1091
typedef struct vcpu_info vcpu_info_t;41,1140
#define __vcpu_info(42,1178
#define shared_info(48,1272
#define vcpu_info(49,1349

xen/include/xen/tmem.h,30
#define __XEN_TMEM_H__10,200

xen/include/xen/tasklet.h,402
#define __XEN_TASKLET_H__9,267
struct tasklet14,340
    struct list_head list;16,357
    int scheduled_on;17,384
    bool_t is_running;18,406
    bool_t is_dead;19,429
    void (*func)func20,449
    unsigned long data;21,482
#define DECLARE_TASKLET(24,510
#define _TASKLET_enqueued 29,737
#define _TASKLET_scheduled 30,811
#define TASKLET_enqueued 31,884
#define TASKLET_scheduled 32,938

xen/include/xen/hvm/save.h,602
#define __XEN_HVM_SAVE_H__19,747
typedef struct hvm_domain_context 26,924
    uint32_t cur;27,960
    uint32_t size;28,978
    uint8_t *data;data29,997
} hvm_domain_context_t;30,1016
#define hvm_save_entry(41,1442
#define _hvm_load_entry(61,2379
#define hvm_load_entry(68,2785
#define hvm_load_entry_zeroextend(70,2872
static inline uint16_t hvm_load_instance(74,3024
typedef int (*hvm_save_handler)hvm_save_handler85,3468
typedef int (*hvm_load_handler)hvm_load_handler87,3579
#define HVMSR_PER_DOM 99,4134
#define HVMSR_PER_VCPU 100,4159
#define HVM_REGISTER_SAVE_RESTORE(104,4311

xen/include/xen/hvm/iommu.h,692
#define __XEN_HVM_IOMMU_H__21,795
struct g2m_ioport 25,848
    struct list_head list;26,868
    unsigned int gport;27,895
    unsigned int mport;28,919
    unsigned int np;29,943
struct mapped_rmrr 32,968
    struct list_head list;33,989
    u64 base;34,1016
    u64 end;35,1030
struct hvm_iommu 38,1047
    u64 pgd_maddr;39,1066
    spinlock_t mapping_lock;40,1141
    int agaw;41,1201
    struct list_head g2m_ioport_list;42,1275
    u64 iommu_bitmap;43,1352
    struct list_head mapped_rmrrs;44,1433
    int domain_id;47,1497
    int paging_mode;48,1516
    struct page_info *root_table;root_table49,1537
    const struct iommu_ops *platform_ops;platform_ops52,1592

xen/include/xen/hvm/irq.h,1878
#define __XEN_HVM_IRQ_H__23,887
struct dev_intx_gsi_link 31,1039
    struct list_head list;32,1066
    uint8_t device;33,1093
    uint8_t intx;34,1113
    uint8_t gsi;35,1131
    uint8_t link;36,1148
#define _HVM_IRQ_DPCI_MACH_PCI_SHIFT 39,1170
#define _HVM_IRQ_DPCI_MACH_MSI_SHIFT 40,1220
#define _HVM_IRQ_DPCI_GUEST_PCI_SHIFT 41,1270
#define _HVM_IRQ_DPCI_GUEST_MSI_SHIFT 42,1320
#define _HVM_IRQ_DPCI_TRANSLATE_SHIFT 43,1370
#define HVM_IRQ_DPCI_MACH_PCI 44,1420
#define HVM_IRQ_DPCI_MACH_MSI 45,1493
#define HVM_IRQ_DPCI_GUEST_PCI 46,1566
#define HVM_IRQ_DPCI_GUEST_MSI 47,1640
#define HVM_IRQ_DPCI_TRANSLATE 48,1714
#define VMSI_DEST_ID_MASK 50,1789
#define VMSI_RH_MASK 51,1820
#define VMSI_DM_MASK 52,1852
#define VMSI_DELIV_MASK 53,1884
#define VMSI_TRIG_MODE 54,1917
#define GFLAGS_SHIFT_RH 56,1951
#define GLFAGS_SHIFT_DELIV_MODE 57,1989
#define GLFAGS_SHIFT_TRG_MODE 58,2028
struct hvm_gmsi_info 60,2068
    uint32_t gvec;61,2091
    uint32_t gflags;62,2110
    int dest_vcpu_id;63,2131
struct hvm_mirq_dpci_mapping 66,2206
    uint32_t flags;67,2237
    int pending;68,2257
    struct list_head digl_list;69,2274
    struct domain *dom;dom70,2306
    struct hvm_gmsi_info gmsi;71,2330
struct hvm_girq_dpci_mapping 74,2365
    struct list_head list;75,2396
    uint8_t device;76,2423
    uint8_t intx;77,2443
    uint8_t machine_gsi;78,2461
#define NR_ISAIRQS 81,2490
#define NR_LINK 82,2513
# define NR_HVM_IRQS 84,2580
# define NR_HVM_IRQS 86,2642
struct hvm_irq_dpci 90,2728
    unsigned long *mapping;mapping92,2802
    struct hvm_mirq_dpci_mapping *mirq;mirq93,2830
    unsigned long *dirq_mask;dirq_mask94,2870
    struct list_head girq[girq96,2950
    DECLARE_BITMAP(98,3026
    uint8_t link_cnt[link_cnt100,3103
    struct timer *hvm_timer;hvm_timer101,3134
    struct tasklet dirq_tasklet;102,3163

xen/include/xen/percpu.h,185
#define __XEN_PERCPU_H__2,25
#define DEFINE_PER_CPU(13,318
#define DEFINE_PER_CPU_READ_MOSTLY(14,387
#define this_cpu(18,541
#define get_cpu_var(21,613
#define put_cpu_var(22,652

xen/include/xen/rcupdate.h,1367
#define __XEN_RCUPDATE_H33,1312
struct rcu_head 46,1633
    struct rcu_head *next;next47,1651
    void (*func)func48,1678
#define RCU_HEAD_INIT 51,1723
#define RCU_HEAD(52,1778
#define INIT_RCU_HEAD(53,1838
struct rcu_ctrlblk 60,2000
    long cur;61,2021
    long completed;62,2094
    int  next_pending;63,2167
    spinlock_t  lock __cacheline_aligned;65,2241
    cpumask_t   cpumask;66,2283
} __cacheline_aligned;68,2398
static inline int rcu_batch_before(71,2456
static inline int rcu_batch_after(77,2569
struct rcu_data 87,2803
    long quiescbatch;89,2861
    int  qs_pending;90,2917
    long            batch;93,3005
    struct rcu_head *nxtlist;nxtlist94,3079
    struct rcu_head **nxttail;nxttail95,3109
    long            qlen;96,3140
    struct rcu_head *curlist;curlist97,3206
    struct rcu_head **curtail;curtail98,3236
    struct rcu_head *donelist;donelist99,3267
    struct rcu_head **donetail;donetail100,3298
    long            blimit;101,3330
    int cpu;102,3407
    struct rcu_head barrier;103,3420
    long            last_rs_qlen;105,3467
struct _rcu_read_lock 119,3842
typedef struct _rcu_read_lock rcu_read_lock_t;120,3868
#define DEFINE_RCU_READ_LOCK(121,3915
#define rcu_read_lock(149,5254
#define rcu_read_unlock(156,5453
#define rcu_dereference(177,6315
#define rcu_assign_pointer(191,6879

xen/include/xen/vga.h,104
#define _XEN_VGA_H10,214
#define vga_init(20,420
#define vga_endboot(21,452
#define vga_puts(22,484

xen/include/xen/acpi.h,6422
#define _LINUX_ACPI_H26,1008
#define _LINUX29,1046
enum acpi_irq_model_id 41,1221
	ACPI_IRQ_MODEL_PIC 42,1246
	ACPI_IRQ_MODEL_IOAPIC,43,1271
	ACPI_IRQ_MODEL_IOSAPIC,44,1295
	ACPI_IRQ_MODEL_COUNT45,1320
enum acpi_madt_entry_id 50,1393
	ACPI_MADT_LAPIC 51,1419
	ACPI_MADT_IOAPIC,52,1441
	ACPI_MADT_INT_SRC_OVR,53,1460
	ACPI_MADT_NMI_SRC,54,1484
	ACPI_MADT_LAPIC_NMI,55,1504
	ACPI_MADT_LAPIC_ADDR_OVR,56,1526
	ACPI_MADT_IOSAPIC,57,1553
	ACPI_MADT_LSAPIC,58,1573
	ACPI_MADT_PLAT_INT_SRC,59,1592
	ACPI_MADT_X2APIC,60,1617
	ACPI_MADT_X2APIC_NMI,61,1636
	ACPI_MADT_ENTRY_COUNT62,1659
	u16			polarity:polarity66,1703
	u16			trigger:trigger67,1722
	u16			reserved:reserved68,1740
} __attribute__ ((packed)) acpi_interrupt_flags;69,1760
struct acpi_table_lapic 71,1810
	struct acpi_subtable_header	header;72,1836
	u8			acpi_id;73,1873
	u8			id;74,1888
		u32			enabled:enabled76,1908
		u32			reserved:reserved77,1927
	}			flags;78,1948
struct acpi_table_x2apic 81,1989
	struct acpi_subtable_header header;82,2016
	u16			reserved;83,2053
	u32			id;84,2070
		u32			enabled:enabled86,2091
		u32			reserved:reserved87,2110
	}			flags;88,2131
	u32         acpi_uid;89,2143
struct acpi_table_ioapic 92,2195
	struct acpi_subtable_header	header;93,2222
	u8			id;94,2259
	u8			reserved;95,2269
	u32			address;96,2285
	u32			global_irq_base;97,2301
struct acpi_table_int_src_ovr 100,2354
	struct acpi_subtable_header	header;101,2386
	u8			bus;102,2423
	u8			bus_irq;103,2434
	u32			global_irq;104,2449
	acpi_interrupt_flags	flags;105,2468
struct acpi_table_nmi_src 108,2526
	struct acpi_subtable_header	header;109,2554
	acpi_interrupt_flags	flags;110,2591
	u32			global_irq;111,2620
struct acpi_table_lapic_nmi 114,2668
	struct acpi_subtable_header	header;115,2698
	u8			acpi_id;116,2735
	acpi_interrupt_flags	flags;117,2750
	u8			lint;118,2779
struct acpi_table_x2apic_nmi 121,2820
	struct acpi_subtable_header header;122,2851
	acpi_interrupt_flags	flags;123,2888
	u32			acpi_uid;124,2917
	u8			lint;125,2934
	u8			reserved[reserved126,2946
struct acpi_table_lapic_addr_ovr 129,2994
	struct acpi_subtable_header	header;130,3029
	u8			reserved[reserved131,3066
	u64			address;132,3085
struct acpi_table_iosapic 135,3130
	struct acpi_subtable_header	header;136,3158
	u8			id;137,3195
	u8			reserved;138,3205
	u32			global_irq_base;139,3221
	u64			address;140,3245
struct acpi_table_lsapic 143,3290
	struct acpi_subtable_header	header;144,3317
	u8			acpi_id;145,3354
	u8			id;146,3369
	u8			eid;147,3379
	u8			reserved[reserved148,3390
		u32			enabled:enabled150,3419
		u32			reserved:reserved151,3438
	}			flags;152,3459
struct acpi_table_plat_int_src 155,3500
	struct acpi_subtable_header	header;156,3533
	acpi_interrupt_flags	flags;157,3570
	u8			type;158,3599
	u8			id;159,3641
	u8			eid;160,3651
	u8			iosapic_vector;161,3662
	u32			global_irq;162,3684
	u32			reserved;163,3703
enum acpi_interrupt_id 166,3749
	ACPI_INTERRUPT_PMI	167,3774
	ACPI_INTERRUPT_INIT,168,3799
	ACPI_INTERRUPT_CPEI,169,3821
	ACPI_INTERRUPT_COUNT170,3843
#define	ACPI_SPACE_MEM	173,3869
struct acpi_table_sbf179,3994
	u8 sbf_signature[sbf_signature181,4018
	u32 sbf_len;182,4040
	u8 sbf_revision;183,4054
	u8 sbf_csum;184,4072
	u8 sbf_oemid[sbf_oemid185,4086
	u8 sbf_oemtable[sbf_oemtable186,4104
	u8 sbf_revdata[sbf_revdata187,4125
	u8 sbf_creator[sbf_creator188,4145
	u8 sbf_crearev[sbf_crearev189,4165
	u8 sbf_cmos;190,4185
	u8 sbf_spare[sbf_spare191,4199
enum acpi_srat_entry_id 194,4246
	ACPI_SRAT_PROCESSOR_AFFINITY 195,4272
	ACPI_SRAT_MEMORY_AFFINITY,196,4307
	ACPI_SRAT_ENTRY_COUNT197,4335
enum acpi_address_range_id 200,4362
	ACPI_ADDRESS_RANGE_MEMORY 201,4391
	ACPI_ADDRESS_RANGE_RESERVED 202,4423
	ACPI_ADDRESS_RANGE_ACPI 203,4457
	ACPI_ADDRESS_RANGE_NVS	204,4487
	ACPI_ADDRESS_RANGE_COUNT205,4516
#define DMAR_FLAGS_INTR_REMAP 210,4590
struct acpi_dmar_entry_header 212,4658
	u16	type;213,4690
	u16	length;214,4701
enum acpi_dmar_entry_type 217,4742
	ACPI_DMAR_DRHD 218,4770
	ACPI_DMAR_RMRR,219,4791
	ACPI_DMAR_ATSR,220,4808
	ACPI_DMAR_RHSA,221,4825
	ACPI_DMAR_ENTRY_COUNT222,4842
#define DRHD_FLAGS_INCLUDE_ALL	225,4869
struct acpi_table_drhd 226,4946
	struct	acpi_dmar_entry_header header;227,4971
	u8	flags;228,5010
	u8	reserved;229,5021
	u16	segment;230,5035
	u64	address;231,5049
struct acpi_table_rmrr 234,5134
	struct	acpi_dmar_entry_header header;235,5159
	u16	reserved;236,5198
	u16	segment;237,5213
	u64	base_address;238,5227
	u64	end_address;239,5246
struct acpi_table_atsr 242,5293
	struct	acpi_dmar_entry_header header;243,5318
	u8	flags;244,5357
	u8	reserved;245,5368
	u16	segment;246,5382
struct acpi_table_rhsa 249,5425
	struct	acpi_dmar_entry_header header;250,5450
	u32	reserved;251,5489
	u64	address;252,5504
	u32	proximity_domain;253,5560
enum acpi_dev_scope_type 256,5612
	ACPI_DEV_ENDPOINT=257,5639
	ACPI_DEV_ENDPOINT=0x01,x01257,5639
	ACPI_DEV_P2PBRIDGE,258,5690
	ACPI_DEV_IOAPIC,259,5732
	ACPI_DEV_MSI_HPET,260,5769
	ACPI_DEV_ENTRY_COUNT261,5811
struct acpi_dev_scope 264,5837
	u8	dev_type;265,5861
	u8	length;266,5875
	u8	reserved[reserved267,5887
	u8	enum_id;268,5904
	u8	start_bus;269,5917
struct acpi_pci_path 272,5960
	u8	dev;273,5983
	u8	fn;274,5992
typedef int (*acpi_madt_entry_handler)acpi_madt_entry_handler277,6028
typedef int (*acpi_table_handler)acpi_table_handler279,6132
typedef int (*acpi_table_entry_handler)acpi_table_entry_handler281,6202
#define acpi_mp_config	323,7972
static inline int acpi_boot_init(325,7998
static inline int acpi_boot_table_init(330,8053
struct acpi_prt_entry 351,8537
	struct list_head	node;352,8561
	struct acpi_pci_id	id;353,8585
	u8			pin;354,8609
		acpi_handle		handle;356,8630
		u32			index;357,8653
	}			link;358,8668
	u32			irq;359,8679
struct acpi_prt_list 362,8695
	int			count;363,8718
	struct list_head	entries;364,8732
struct acpi_pci_driver 378,8995
	struct acpi_pci_driver *next;next379,9020
	int (*add)add380,9051
	void (*remove)remove381,9084
static inline int acpi_blacklisted(403,9549
static inline unsigned int acpi_get_cstate_limit(420,9822
static inline void acpi_set_cstate_limit(424,9901
static inline unsigned int acpi_get_cstate_limit(430,10010
static inline void acpi_set_cstate_limit(431,10079
static inline int acpi_get_pxm(437,10232

xen/include/xen/compiler.h,525
#define __LINUX_COMPILER_H2,27
#define barrier(8,159
#define likely(10,220
#define unlikely(11,266
#define inline 13,313
#define always_inline 14,346
#define noinline 15,411
#define __attribute_pure__ 17,460
#define __attribute_const__ 18,510
#define __attribute_used__ 21,625
#define __attribute_used__ 23,684
#define __must_check 27,806
#define __must_check29,869
#define offsetof(33,915
#define offsetof(35,967
#define __must_be_array(39,1095
#define RELOC_HIDE(55,1744
#define uninitialized_var(64,2025

xen/include/xen/pci_regs.h,16540
#define LINUX_PCI_REGS_H23,563
#define PCI_VENDOR_ID	29,728
#define PCI_DEVICE_ID	30,770
#define PCI_COMMAND	31,812
#define  PCI_COMMAND_IO	32,852
#define  PCI_COMMAND_MEMORY	33,916
#define  PCI_COMMAND_MASTER	34,986
#define  PCI_COMMAND_SPECIAL	35,1045
#define  PCI_COMMAND_INVALIDATE	36,1118
#define  PCI_COMMAND_VGA_PALETTE 37,1193
#define  PCI_COMMAND_PARITY	38,1261
#define  PCI_COMMAND_WAIT 39,1323
#define  PCI_COMMAND_SERR	40,1390
#define  PCI_COMMAND_FAST_BACK	41,1440
#define  PCI_COMMAND_INTX_DISABLE 42,1510
#define PCI_STATUS	44,1580
#define  PCI_STATUS_CAP_LIST	45,1619
#define  PCI_STATUS_66MHZ	46,1683
#define  PCI_STATUS_UDF	47,1747
#define  PCI_STATUS_FAST_BACK	48,1826
#define  PCI_STATUS_PARITY	49,1892
#define  PCI_STATUS_DEVSEL_MASK	50,1953
#define  PCI_STATUS_DEVSEL_FAST	51,2011
#define  PCI_STATUS_DEVSEL_MEDIUM	52,2050
#define  PCI_STATUS_DEVSEL_SLOW	53,2090
#define  PCI_STATUS_SIG_TARGET_ABORT	54,2129
#define  PCI_STATUS_REC_TARGET_ABORT	55,2198
#define  PCI_STATUS_REC_MASTER_ABORT	56,2264
#define  PCI_STATUS_SIG_SYSTEM_ERROR	57,2334
#define  PCI_STATUS_DETECTED_PARITY	58,2407
#define PCI_CLASS_REVISION	60,2477
#define PCI_REVISION_ID	61,2554
#define PCI_CLASS_PROG	62,2602
#define PCI_CLASS_DEVICE	63,2670
#define PCI_CACHE_LINE_SIZE	65,2720
#define PCI_LATENCY_TIMER	66,2766
#define PCI_HEADER_TYPE	67,2810
#define  PCI_HEADER_TYPE_NORMAL	68,2853
#define  PCI_HEADER_TYPE_BRIDGE	69,2888
#define  PCI_HEADER_TYPE_CARDBUS	70,2923
#define PCI_BIST	72,2959
#define  PCI_BIST_CODE_MASK	73,2995
#define  PCI_BIST_START	74,3048
#define  PCI_BIST_CAPABLE	75,3116
#define PCI_BASE_ADDRESS_0	83,3376
#define PCI_BASE_ADDRESS_1	84,3422
#define PCI_BASE_ADDRESS_2	85,3485
#define PCI_BASE_ADDRESS_3	86,3546
#define PCI_BASE_ADDRESS_4	87,3592
#define PCI_BASE_ADDRESS_5	88,3638
#define  PCI_BASE_ADDRESS_SPACE	89,3684
#define  PCI_BASE_ADDRESS_SPACE_IO	90,3748
#define  PCI_BASE_ADDRESS_SPACE_MEMORY	91,3788
#define  PCI_BASE_ADDRESS_MEM_TYPE_MASK	92,3832
#define  PCI_BASE_ADDRESS_MEM_TYPE_32	93,3877
#define  PCI_BASE_ADDRESS_MEM_TYPE_1M	94,3941
#define  PCI_BASE_ADDRESS_MEM_TYPE_64	95,4010
#define  PCI_BASE_ADDRESS_MEM_PREFETCH	96,4074
#define  PCI_BASE_ADDRESS_MEM_MASK	97,4138
#define  PCI_BASE_ADDRESS_IO_MASK	98,4183
#define PCI_CARDBUS_CIS	102,4310
#define PCI_SUBSYSTEM_VENDOR_ID	103,4340
#define PCI_SUBSYSTEM_ID	104,4377
#define PCI_ROM_ADDRESS	105,4407
#define  PCI_ROM_ADDRESS_ENABLE	106,4483
#define PCI_ROM_ADDRESS_MASK	107,4520
#define PCI_CAPABILITY_LIST	109,4561
#define PCI_INTERRUPT_LINE	112,4668
#define PCI_INTERRUPT_PIN	113,4713
#define PCI_MIN_GNT	114,4757
#define PCI_MAX_LAT	115,4796
#define PCI_PRIMARY_BUS	118,4877
#define PCI_SECONDARY_BUS	119,4932
#define PCI_SUBORDINATE_BUS	120,4990
#define PCI_SEC_LATENCY_TIMER	121,5066
#define PCI_IO_BASE	122,5145
#define PCI_IO_LIMIT	123,5205
#define  PCI_IO_RANGE_TYPE_MASK	124,5232
#define  PCI_IO_RANGE_TYPE_16	125,5295
#define  PCI_IO_RANGE_TYPE_32	126,5330
#define  PCI_IO_RANGE_MASK	127,5365
#define PCI_SEC_STATUS	128,5402
#define PCI_MEMORY_BASE	129,5481
#define PCI_MEMORY_LIMIT	130,5537
#define  PCI_MEMORY_RANGE_TYPE_MASK 131,5567
#define  PCI_MEMORY_RANGE_MASK	132,5610
#define PCI_PREF_MEMORY_BASE	133,5651
#define PCI_PREF_MEMORY_LIMIT	134,5724
#define  PCI_PREF_RANGE_TYPE_MASK 135,5759
#define  PCI_PREF_RANGE_TYPE_32	136,5800
#define  PCI_PREF_RANGE_TYPE_64	137,5837
#define  PCI_PREF_RANGE_MASK	138,5874
#define PCI_PREF_BASE_UPPER32	139,5913
#define PCI_PREF_LIMIT_UPPER32	140,5994
#define PCI_IO_BASE_UPPER16	141,6030
#define PCI_IO_LIMIT_UPPER16	142,6097
#define PCI_ROM_ADDRESS1	145,6190
#define PCI_BRIDGE_CONTROL	147,6307
#define  PCI_BRIDGE_CTL_PARITY	148,6339
#define  PCI_BRIDGE_CTL_SERR	149,6428
#define  PCI_BRIDGE_CTL_ISA	150,6497
#define  PCI_BRIDGE_CTL_VGA	151,6552
#define  PCI_BRIDGE_CTL_MASTER_ABORT	152,6613
#define  PCI_BRIDGE_CTL_BUS_RESET	153,6683
#define  PCI_BRIDGE_CTL_FAST_BACK	154,6748
#define PCI_CB_CAPABILITY_LIST	157,6878
#define PCI_CB_SEC_STATUS	159,6934
#define PCI_CB_PRIMARY_BUS	160,6988
#define PCI_CB_CARD_BUS	161,7041
#define PCI_CB_SUBORDINATE_BUS	162,7096
#define PCI_CB_LATENCY_TIMER	163,7161
#define PCI_CB_MEMORY_BASE_0	164,7223
#define PCI_CB_MEMORY_LIMIT_0	165,7257
#define PCI_CB_MEMORY_BASE_1	166,7292
#define PCI_CB_MEMORY_LIMIT_1	167,7326
#define PCI_CB_IO_BASE_0	168,7361
#define PCI_CB_IO_BASE_0_HI	169,7391
#define PCI_CB_IO_LIMIT_0	170,7424
#define PCI_CB_IO_LIMIT_0_HI	171,7455
#define PCI_CB_IO_BASE_1	172,7489
#define PCI_CB_IO_BASE_1_HI	173,7519
#define PCI_CB_IO_LIMIT_1	174,7552
#define PCI_CB_IO_LIMIT_1_HI	175,7583
#define  PCI_CB_IO_RANGE_MASK	176,7617
#define PCI_CB_BRIDGE_CONTROL	178,7697
#define  PCI_CB_BRIDGE_CTL_PARITY	179,7732
#define  PCI_CB_BRIDGE_CTL_SERR	180,7821
#define  PCI_CB_BRIDGE_CTL_ISA	181,7859
#define  PCI_CB_BRIDGE_CTL_VGA	182,7896
#define  PCI_CB_BRIDGE_CTL_MASTER_ABORT	183,7933
#define  PCI_CB_BRIDGE_CTL_CB_RESET	184,7978
#define  PCI_CB_BRIDGE_CTL_16BIT_INT	185,8039
#define  PCI_CB_BRIDGE_CTL_PREFETCH_MEM0 186,8121
#define  PCI_CB_BRIDGE_CTL_PREFETCH_MEM1 187,8214
#define  PCI_CB_BRIDGE_CTL_POST_WRITES	188,8261
#define PCI_CB_SUBSYSTEM_VENDOR_ID	189,8306
#define PCI_CB_SUBSYSTEM_ID	190,8346
#define PCI_CB_LEGACY_MODE_BASE	191,8380
#define PCI_CAP_LIST_ID	196,8521
#define  PCI_CAP_ID_PM	197,8568
#define  PCI_CAP_ID_AGP	198,8620
#define  PCI_CAP_ID_VPD	199,8682
#define  PCI_CAP_ID_SLOTID	200,8737
#define  PCI_CAP_ID_MSI	201,8795
#define  PCI_CAP_ID_CHSWP	202,8860
#define  PCI_CAP_ID_PCIX	203,8916
#define  PCI_CAP_ID_HT	204,8958
#define  PCI_CAP_ID_VNDR	205,9008
#define  PCI_CAP_ID_DBG	206,9060
#define  PCI_CAP_ID_CCRC	207,9107
#define  PCI_CAP_ID_SHPC 208,9179
#define  PCI_CAP_ID_SSVID	209,9249
#define  PCI_CAP_ID_AGP3	210,9320
#define  PCI_CAP_ID_EXP 211,9382
#define  PCI_CAP_ID_MSIX	212,9430
#define PCI_CAP_LIST_NEXT	213,9472
#define PCI_CAP_FLAGS	214,9534
#define PCI_CAP_SIZEOF	215,9600
#define PCI_PM_PMC	219,9661
#define  PCI_PM_CAP_VER_MASK	220,9714
#define  PCI_PM_CAP_PME_CLOCK	221,9764
#define  PCI_PM_CAP_RESERVED 222,9826
#define  PCI_PM_CAP_DSI	223,9887
#define  PCI_PM_CAP_AUX_POWER	224,9956
#define  PCI_PM_CAP_D1	225,10029
#define  PCI_PM_CAP_D2	226,10089
#define  PCI_PM_CAP_PME	227,10149
#define  PCI_PM_CAP_PME_MASK	228,10205
#define  PCI_PM_CAP_PME_D0	229,10280
#define  PCI_PM_CAP_PME_D1	230,10333
#define  PCI_PM_CAP_PME_D2	231,10386
#define  PCI_PM_CAP_PME_D3	232,10439
#define  PCI_PM_CAP_PME_D3cold	233,10498
#define PCI_PM_CTRL	234,10562
#define  PCI_PM_CTRL_STATE_MASK	235,10622
#define  PCI_PM_CTRL_NO_SOFT_RESET	236,10698
#define  PCI_PM_CTRL_PME_ENABLE	237,10769
#define  PCI_PM_CTRL_DATA_SEL_MASK	238,10829
#define  PCI_PM_CTRL_DATA_SCALE_MASK	239,10894
#define  PCI_PM_CTRL_PME_STATUS	240,10960
#define PCI_PM_PPB_EXTENSIONS	241,11020
#define  PCI_PM_PPB_B2_B3	242,11086
#define  PCI_PM_BPCC_ENABLE	243,11153
#define PCI_PM_DATA_REGISTER	244,11228
#define PCI_PM_SIZEOF	245,11270
#define PCI_AGP_VERSION	249,11317
#define PCI_AGP_RFU	250,11369
#define PCI_AGP_STATUS	251,11423
#define  PCI_AGP_STATUS_RQ_MASK	252,11471
#define  PCI_AGP_STATUS_SBA	253,11551
#define  PCI_AGP_STATUS_64BIT	254,11622
#define  PCI_AGP_STATUS_FW	255,11693
#define  PCI_AGP_STATUS_RATE4	256,11756
#define  PCI_AGP_STATUS_RATE2	257,11826
#define  PCI_AGP_STATUS_RATE1	258,11896
#define PCI_AGP_COMMAND	259,11966
#define  PCI_AGP_COMMAND_RQ_MASK 260,12016
#define  PCI_AGP_COMMAND_SBA	261,12102
#define  PCI_AGP_COMMAND_AGP	262,12172
#define  PCI_AGP_COMMAND_64BIT	263,12251
#define  PCI_AGP_COMMAND_FW	264,12333
#define  PCI_AGP_COMMAND_RATE4	265,12394
#define  PCI_AGP_COMMAND_RATE2	266,12450
#define  PCI_AGP_COMMAND_RATE1	267,12506
#define PCI_AGP_SIZEOF	268,12562
#define PCI_VPD_ADDR	272,12616
#define  PCI_VPD_ADDR_MASK	273,12675
#define  PCI_VPD_ADDR_F	274,12728
#define PCI_VPD_DATA	275,12798
#define PCI_SID_ESR	279,12886
#define  PCI_SID_ESR_NSLOTS	280,12939
#define  PCI_SID_ESR_FIC	281,13014
#define PCI_SID_CHASSIS_NR	282,13072
#define PCI_MSI_FLAGS	286,13169
#define  PCI_MSI_FLAGS_64BIT	287,13214
#define  PCI_MSI_FLAGS_QSIZE	288,13279
#define  PCI_MSI_FLAGS_QMASK	289,13349
#define  PCI_MSI_FLAGS_ENABLE	290,13418
#define  PCI_MSI_FLAGS_MASKBIT	291,13479
#define PCI_MSI_RFU	292,13547
#define PCI_MSI_ADDRESS_LO	293,13601
#define PCI_MSI_ADDRESS_HI	294,13650
#define PCI_MSI_DATA_32	295,13728
#define PCI_MSI_DATA_64	296,13796
#define PCI_MSI_MASK_BIT	297,13865
#define PCI_MSIX_FLAGS	300,13978
#define  PCI_MSIX_FLAGS_QSIZE	301,14004
#define  PCI_MSIX_FLAGS_ENABLE	302,14040
#define  PCI_MSIX_FLAGS_MASKALL	303,14081
#define PCI_MSIX_TABLE	304,14123
#define PCI_MSIX_PBA	305,14149
#define  PCI_MSIX_BIRMASK	306,14173
#define PCI_MSIX_VECTOR_BITMASK	308,14209
#define PCI_CHSWP_CSR	312,14286
#define  PCI_CHSWP_DHA	313,14345
#define  PCI_CHSWP_EIM	314,14398
#define  PCI_CHSWP_PIE	315,14451
#define  PCI_CHSWP_LOO	316,14512
#define  PCI_CHSWP_PI	317,14560
#define  PCI_CHSWP_EXT	318,14616
#define  PCI_CHSWP_INS	319,14677
#define PCI_X_CMD	323,14761
#define  PCI_X_CMD_DPERR_E	324,14805
#define  PCI_X_CMD_ERO	325,14879
#define  PCI_X_CMD_READ_512	326,14940
#define  PCI_X_CMD_READ_1K	327,15014
#define  PCI_X_CMD_READ_2K	328,15085
#define  PCI_X_CMD_READ_4K	329,15156
#define  PCI_X_CMD_MAX_READ	330,15227
#define  PCI_X_CMD_SPLIT_1	332,15345
#define  PCI_X_CMD_SPLIT_2	333,15391
#define  PCI_X_CMD_SPLIT_3	334,15437
#define  PCI_X_CMD_SPLIT_4	335,15483
#define  PCI_X_CMD_SPLIT_8	336,15529
#define  PCI_X_CMD_SPLIT_12	337,15575
#define  PCI_X_CMD_SPLIT_16	338,15623
#define  PCI_X_CMD_SPLIT_32	339,15671
#define  PCI_X_CMD_MAX_SPLIT	340,15719
#define  PCI_X_CMD_VERSION(341,15796
#define PCI_X_STATUS	342,15859
#define  PCI_X_STATUS_DEVFN	343,15908
#define  PCI_X_STATUS_BUS	344,15969
#define  PCI_X_STATUS_64BIT	345,16029
#define  PCI_X_STATUS_133MHZ	346,16088
#define  PCI_X_STATUS_SPL_DISC	347,16150
#define  PCI_X_STATUS_UNX_SPL	348,16225
#define  PCI_X_STATUS_COMPLEX	349,16300
#define  PCI_X_STATUS_MAX_READ	350,16365
#define  PCI_X_STATUS_MAX_SPLIT	351,16444
#define  PCI_X_STATUS_MAX_CUM	352,16537
#define  PCI_X_STATUS_SPL_ERR	353,16618
#define  PCI_X_STATUS_266MHZ	354,16697
#define  PCI_X_STATUS_533MHZ	355,16759
#define PCI_EXP_FLAGS	359,16862
#define PCI_EXP_FLAGS_VERS	360,16915
#define PCI_EXP_FLAGS_TYPE	361,16974
#define  PCI_EXP_TYPE_ENDPOINT	362,17031
#define  PCI_EXP_TYPE_LEG_END	363,17089
#define  PCI_EXP_TYPE_ROOT_PORT 364,17145
#define  PCI_EXP_TYPE_UPSTREAM	365,17197
#define  PCI_EXP_TYPE_DOWNSTREAM 366,17252
#define  PCI_EXP_TYPE_PCI_BRIDGE 367,17311
#define PCI_EXP_FLAGS_SLOT	368,17371
#define PCI_EXP_FLAGS_IRQ	369,17428
#define PCI_EXP_DEVCAP	370,17492
#define  PCI_EXP_DEVCAP_PAYLOAD	371,17544
#define  PCI_EXP_DEVCAP_PHANTOM	372,17604
#define  PCI_EXP_DEVCAP_EXT_TAG	373,17665
#define  PCI_EXP_DEVCAP_L0S	374,17722
#define  PCI_EXP_DEVCAP_L1	375,17785
#define  PCI_EXP_DEVCAP_ATN_BUT	376,17846
#define  PCI_EXP_DEVCAP_ATN_IND	377,17916
#define  PCI_EXP_DEVCAP_PWR_IND	378,17989
#define  PCI_EXP_DEVCAP_PWR_VAL	379,18058
#define  PCI_EXP_DEVCAP_PWR_SCL	380,18129
#define PCI_EXP_DEVCTL	381,18200
#define  PCI_EXP_DEVCTL_CERE	382,18247
#define  PCI_EXP_DEVCTL_NFERE	383,18321
#define  PCI_EXP_DEVCTL_FERE	384,18397
#define  PCI_EXP_DEVCTL_URRE	385,18468
#define  PCI_EXP_DEVCTL_RELAX_EN 386,18544
#define  PCI_EXP_DEVCTL_PAYLOAD	387,18614
#define  PCI_EXP_DEVCTL_EXT_TAG	388,18676
#define  PCI_EXP_DEVCTL_PHANTOM	389,18747
#define  PCI_EXP_DEVCTL_AUX_PME	390,18817
#define  PCI_EXP_DEVCTL_NOSNOOP_EN 391,18888
#define  PCI_EXP_DEVCTL_READRQ	392,18953
#define PCI_EXP_DEVSTA	393,19019
#define  PCI_EXP_DEVSTA_CED	394,19066
#define  PCI_EXP_DEVSTA_NFED	395,19132
#define  PCI_EXP_DEVSTA_FED	396,19197
#define  PCI_EXP_DEVSTA_URD	397,19257
#define  PCI_EXP_DEVSTA_AUXPD	398,19325
#define  PCI_EXP_DEVSTA_TRPND	399,19385
#define PCI_EXP_LNKCAP	400,19447
#define PCI_EXP_LNKCTL	401,19498
#define  PCI_EXP_LNKCTL_CLKREQ_EN 402,19544
#define PCI_EXP_LNKSTA	403,19604
#define PCI_EXP_SLTCAP	404,19649
#define PCI_EXP_SLTCTL	405,19700
#define PCI_EXP_SLTSTA	406,19746
#define PCI_EXP_RTCTL	407,19791
#define  PCI_EXP_RTCTL_SECEE	408,19836
#define  PCI_EXP_RTCTL_SENFEE	409,19910
#define  PCI_EXP_RTCTL_SEFEE	410,19983
#define  PCI_EXP_RTCTL_PMEIE	411,20051
#define  PCI_EXP_RTCTL_CRSSVE	412,20112
#define PCI_EXP_RTCAP	413,20184
#define PCI_EXP_RTSTA	414,20234
#define PCI_EXT_CAP_ID(417,20331
#define PCI_EXT_CAP_VER(418,20385
#define PCI_EXT_CAP_NEXT(419,20441
#define PCI_EXT_CAP_ID_ERR	421,20500
#define PCI_EXT_CAP_ID_VC	422,20529
#define PCI_EXT_CAP_ID_DSN	423,20557
#define PCI_EXT_CAP_ID_PWR	424,20586
#define PCI_EXT_CAP_ID_ACS	425,20615
#define PCI_EXT_CAP_ID_ARI	426,20645
#define PCI_EXT_CAP_ID_ATS	427,20675
#define PCI_EXT_CAP_ID_IOV	428,20705
#define PCI_ERR_UNCOR_STATUS	431,20767
#define  PCI_ERR_UNC_TRAIN	432,20831
#define  PCI_ERR_UNC_DLP	433,20884
#define  PCI_ERR_UNC_POISON_TLP	434,20945
#define  PCI_ERR_UNC_FCP	435,21007
#define  PCI_ERR_UNC_COMP_TIME	436,21071
#define  PCI_ERR_UNC_COMP_ABORT	437,21138
#define  PCI_ERR_UNC_UNX_COMP	438,21203
#define  PCI_ERR_UNC_RX_OVER	439,21272
#define  PCI_ERR_UNC_MALF_TLP	440,21336
#define  PCI_ERR_UNC_ECRC	441,21397
#define  PCI_ERR_UNC_UNSUP	442,21458
#define PCI_ERR_UNCOR_MASK	443,21522
#define PCI_ERR_UNCOR_SEVER	445,21608
#define PCI_ERR_COR_STATUS	447,21700
#define  PCI_ERR_COR_RCVR	448,21761
#define  PCI_ERR_COR_BAD_TLP	449,21826
#define  PCI_ERR_COR_BAD_DLLP	450,21887
#define  PCI_ERR_COR_REP_ROLL	451,21950
#define  PCI_ERR_COR_REP_TIMER	452,22017
#define PCI_ERR_COR_MASK	453,22086
#define PCI_ERR_CAP	455,22169
#define  PCI_ERR_CAP_FEP(456,22227
#define  PCI_ERR_CAP_ECRC_GENC	457,22292
#define  PCI_ERR_CAP_ECRC_GENE	458,22364
#define  PCI_ERR_CAP_ECRC_CHKC	459,22435
#define  PCI_ERR_CAP_ECRC_CHKE	460,22502
#define PCI_ERR_HEADER_LOG	461,22568
#define PCI_ERR_ROOT_COMMAND	462,22635
#define PCI_ERR_ROOT_CMD_COR_EN	464,22731
#define PCI_ERR_ROOT_CMD_NONFATAL_EN	466,22812
#define PCI_ERR_ROOT_CMD_FATAL_EN	468,22893
#define PCI_ERR_ROOT_STATUS	469,22938
#define PCI_ERR_ROOT_COR_RCV	470,22969
#define PCI_ERR_ROOT_MULTI_COR_RCV	472,23062
#define PCI_ERR_ROOT_UNCOR_RCV	474,23142
#define PCI_ERR_ROOT_MULTI_UNCOR_RCV	476,23225
#define PCI_ERR_ROOT_FIRST_FATAL	477,23273
#define PCI_ERR_ROOT_NONFATAL_RCV	478,23335
#define PCI_ERR_ROOT_FATAL_RCV	479,23405
#define PCI_ERR_ROOT_COR_SRC	480,23469
#define PCI_ERR_ROOT_SRC	481,23501
#define PCI_VC_PORT_REG1	484,23552
#define PCI_VC_PORT_REG2	485,23579
#define PCI_VC_PORT_CTRL	486,23606
#define PCI_VC_PORT_STATUS	487,23634
#define PCI_VC_RES_CAP	488,23664
#define PCI_VC_RES_CTRL	489,23691
#define PCI_VC_RES_STATUS	490,23719
#define PCI_PWR_DSR	493,23771
#define PCI_PWR_DATA	494,23821
#define  PCI_PWR_DATA_BASE(495,23865
#define  PCI_PWR_DATA_SCALE(496,23929
#define  PCI_PWR_DATA_PM_SUB(497,23997
#define  PCI_PWR_DATA_PM_STATE(498,24068
#define  PCI_PWR_DATA_TYPE(499,24135
#define  PCI_PWR_DATA_RAIL(500,24196
#define PCI_PWR_CAP	501,24263
#define  PCI_PWR_CAP_BUDGET(502,24304
#define HT_3BIT_CAP_MASK	512,24683
#define HT_CAPTYPE_SLAVE	513,24713
#define HT_CAPTYPE_HOST	514,24782
#define HT_5BIT_CAP_MASK	516,24853
#define HT_CAPTYPE_IRQ	517,24883
#define HT_CAPTYPE_REMAPPING_40	518,24936
#define HT_CAPTYPE_REMAPPING_64 519,25004
#define HT_CAPTYPE_UNITID_CLUMP	520,25072
#define HT_CAPTYPE_EXTCONF	521,25132
#define HT_CAPTYPE_MSI_MAPPING	522,25206
#define  HT_MSI_FLAGS	523,25271
#define  HT_MSI_FLAGS_ENABLE	524,25322
#define  HT_MSI_FLAGS_FIXED	525,25377
#define  HT_MSI_FIXED_ADDR	526,25435
#define  HT_MSI_ADDR_LO	527,25501
#define  HT_MSI_ADDR_LO_MASK	528,25562
#define  HT_MSI_ADDR_HI	529,25629
#define HT_CAPTYPE_DIRECT_ROUTE	530,25691
#define HT_CAPTYPE_VCSET	531,25763
#define HT_CAPTYPE_ERROR_RETRY	532,25829
#define HT_CAPTYPE_GEN3	533,25900
#define HT_CAPTYPE_PM	534,25978
#define PCI_ACS_CAP	537,26087
#define  PCI_ACS_SV	538,26143
#define  PCI_ACS_TB	539,26193
#define  PCI_ACS_RR	540,26246
#define  PCI_ACS_CR	541,26299
#define  PCI_ACS_UF	542,26355
#define  PCI_ACS_EC	543,26407
#define  PCI_ACS_DT	544,26458
#define PCI_ACS_CTRL	545,26512
#define PCI_ACS_EGRESS_CTL_V	546,26566

xen/include/xen/version.h,31
#define __XEN_VERSION_H__2,26

xen/include/xen/multicall.h,334
#define __XEN_MULTICALL_H__6,128
#define _MCSF_in_multicall 14,261
#define _MCSF_call_preempted 15,292
#define MCSF_in_multicall 16,323
#define MCSF_call_preempted 17,376
struct mc_state 18,431
    unsigned long flags;19,449
        struct multicall_entry call;21,486
        struct compat_multicall_entry compat_call;23,544

xen/include/xen/ctype.h,664
#define _LINUX_CTYPE_H2,23
#define _U	9,142
#define _L	10,170
#define _D	11,198
#define _C	12,226
#define _P	13,254
#define _S	14,282
#define _X	15,331
#define _SP	16,363
#define __ismask(20,443
#define isalnum(22,498
#define isalpha(23,549
#define iscntrl(24,597
#define isdigit(25,642
#define isgraph(26,687
#define islower(27,741
#define isprint(28,786
#define ispunct(29,844
#define isspace(30,889
#define isupper(31,934
#define isxdigit(32,979
#define isascii(34,1029
#define toascii(35,1077
static inline unsigned char __tolower(37,1125
static inline unsigned char __toupper(44,1229
#define tolower(51,1333
#define toupper(52,1365

xen/include/xen/tmem_xen.h,3879
#define __XEN_TMEM_XEN_H__10,221
struct tmem_host_dependent_client 24,626
    struct domain *domain;domain25,662
    struct xmem_pool *persistent_pool;persistent_pool26,689
typedef struct tmem_host_dependent_client tmh_client_t;28,731
typedef uint32_t pagesize_t;30,788
#define IS_PAGE_ALIGNED(32,868
#define IS_VALID_PAGE(34,976
#define tmh_hash 49,1446
static inline bool_t tmh_compression_enabled(55,1632
static inline bool_t tmh_dedup_enabled(61,1748
static inline bool_t tmh_tze_enabled(67,1853
static inline void tmh_tze_disable(72,1926
static inline bool_t tmh_shared_auth(78,2030
static inline bool_t tmh_enabled(84,2135
static inline struct page_info *tmh_page_list_get(tmh_page_list_get95,2271
static inline void tmh_page_list_put(107,2590
static inline unsigned long tmh_avail_pages(116,2825
static inline bool_t domain_fully_allocated(125,2962
#define tmh_client_memory_fully_allocated(129,3073
static inline void *_tmh_alloc_subpage_thispool(_tmh_alloc_subpage_thispool132,3177
#define tmh_alloc_subpage_thispool(148,3617
static inline void _tmh_free_subpage_thispool(152,3797
#define tmh_free_subpage_thispool(163,4112
static inline struct page_info *_tmh_alloc_page_thispool(_tmh_alloc_page_thispool166,4237
#define tmh_alloc_page_thispool(193,4993
static inline void _tmh_free_page_thispool(196,5092
#define tmh_free_page_thispool(210,5462
static inline void *tmh_alloc_subpage(tmh_alloc_subpage217,5605
static inline void tmh_free_subpage(230,5956
static inline struct page_info *tmh_alloc_page(tmh_alloc_page241,6178
static inline void tmh_free_page(253,6525
static inline unsigned int tmem_subpage_maxsize(260,6681
static inline unsigned long tmh_freeable_pages(265,6773
static inline unsigned long tmh_free_mb(270,6897
static inline void *tmh_alloc_infra(tmh_alloc_infra279,7077
static inline void tmh_free_infra(284,7178
#define tmh_lock_all 289,7247
#define tmh_called_from_tmem(290,7283
typedef domid_t cli_id_t;295,7403
typedef struct domain tmh_cli_ptr_t;296,7429
typedef struct page_info pfp_t;297,7466
static inline struct client *tmh_client_from_cli_id(tmh_client_from_cli_id302,7596
static inline struct client *tmh_client_from_current(tmh_client_from_current313,7862
#define tmh_client_is_dying(318,7979
static inline cli_id_t tmh_get_cli_id_from_current(320,8052
static inline tmh_cli_ptr_t *tmh_get_cli_ptr_from_current(tmh_get_cli_ptr_from_current325,8153
static inline bool_t tmh_set_client_from_id(330,8250
static inline bool_t tmh_current_is_privileged(347,8619
static inline uint8_t tmh_get_first_byte(352,8714
static inline int tmh_page_cmp(359,8845
static inline int tmh_pcd_cmp(376,9281
static inline int tmh_tze_pfp_cmp(397,9774
static inline pagesize_t tmh_tze_pfp_scan(426,10680
static inline void tmh_tze_copy_from_pfp(437,10990
typedef XEN_GUEST_HANDLE(tmem_op_t)451,11430
static inline int tmh_get_tmemop_from_client(453,11482
#define XLAT_tmem_op_HNDL_u_ctrl_buf(475,12256
#undef XLAT_tmem_op_HNDL_u_ctrl_buf478,12408
static inline void tmh_copy_to_client_buf_offset(485,12519
#define TMH_CLI_ID_NULL 491,12721
#define tmh_cli_id_str 493,12773
#define tmh_client_str 494,12804
#define TMEM_PERF510,13367
#define DECL_CYC_COUNTER(512,13402
#define EXTERN_CYC_COUNTER(515,13544
#define DECL_LOCAL_CYC_COUNTER(518,13677
#define START_CYC_COUNTER(520,13739
#define DUP_START_CYC_COUNTER(521,13793
#define END_CYC_COUNTER(523,13918
#define END_CYC_COUNTER_CLI(532,14294
#define RESET_CYC_COUNTER(542,14715
#define SCNPRINTF_CYC_COUNTER(544,14836
#define DECL_CYC_COUNTER(549,15046
#define EXTERN_CYC_COUNTER(550,15074
#define DECL_LOCAL_CYC_COUNTER(553,15207
#define START_CYC_COUNTER(554,15258
#define DUP_START_CYC_COUNTER(555,15304
#define END_CYC_COUNTER(556,15354
#define SCNPRINTF_CYC_COUNTER(557,15398
#define RESET_CYC_COUNTER(558,15448

xen/include/crypto/rijndael.h,229
#define __RIJNDAEL_H29,1216
#define AES_MAXKEYBITS	31,1238
#define AES_MAXKEYBYTES	32,1267
#define AES_MAXROUNDS	34,1349
	int	enc_only;42,1520
	int	Nr;43,1581
	u32	ek[ek44,1636
	u32	dk[dk45,1695
} rijndael_ctx;46,1754

xen/include/crypto/vmac.h,1182
#define HEADER_VMAC_H2,22
#define VMAC_TAG_LEN 15,660
#define VMAC_KEY_LEN 16,738
#define VMAC_NHBYTES 17,816
#define VMAC_PREFER_BIG_ENDIAN 18,894
#define VMAC_USE_OPENSSL 20,951
#define VMAC_CACHE_NONCES 21,1029
#define VMAC_RUN_TESTS 24,1186
#define VMAC_HZ 25,1264
#define VMAC_HASH_ONLY 26,1341
#define VMAC_USE_STDINT 44,2111
#define __STDC_CONSTANT_MACROS48,2289
typedef unsigned __int32 uint32_t;52,2427
typedef unsigned __int64 uint64_t;53,2462
#define UINT64_C(54,2497
typedef unsigned int uint32_t;56,2605
typedef unsigned long long uint64_t;57,2636
#define UINT64_C(58,2673
typedef AES_KEY aes_int_key;73,3428
#define aes_encryption(75,3458
#define aes_key_setup(77,3590
typedef uint64_t  vmac_t;83,3744
typedef u32 aes_int_key[aes_int_key85,3792
#define aes_encryption(87,3841
#define aes_key_setup(91,4044
	uint64_t nhkey 100,4342
	uint64_t polykey[polykey101,4401
	uint64_t l3key 102,4439
	uint64_t polytmp[polytmp103,4477
	aes_int_key cipher_key;104,4515
	uint64_t cached_nonce[cached_nonce106,4589
	uint64_t cached_aes[cached_aes107,4616
	int first_block_processed;109,4649
} vmac_ctx_t;110,4677
#define vmac_update 143,6342

xen/include/asm-ia64/domain.h,4978
#define __ASM_DOMAIN_H__2,25
extern void panic_domain(44,1271
#define has_arch_pdevs(47,1390
#define has_arch_mmios(48,1455
struct mm_struct 50,1523
	volatile pgd_t * pgd;51,1542
struct foreign_p2m 55,1635
    spinlock_t          lock;56,1656
    struct list_head    head;62,1846
struct last_vcpu 65,1880
#define INVALID_VCPU_ID 66,1899
    int vcpu_id;67,1931
    u32 tlbflush_timestamp;69,1986
} ____cacheline_aligned_in_smp;71,2021
struct xen_sal_data 74,2111
    unsigned long boot_rdv_ip;76,2165
    unsigned long boot_rdv_r1;77,2196
    int efi_virt_mode;80,2297
struct identity_mapping 97,2914
        unsigned long pgprot;98,2940
        unsigned long key;99,3016
#define XEN_IA64_OPTF_IDENT_MAP_REG7_FLG_BIT 109,3313
#define XEN_IA64_OPTF_IDENT_MAP_REG7_FLG 110,3363
#define XEN_IA64_OPTF_IDENT_MAP_REG4_FLG_BIT 114,3514
#define XEN_IA64_OPTF_IDENT_MAP_REG4_FLG 116,3615
#define XEN_IA64_OPTF_IDENT_MAP_REG5_FLG_BIT 120,3773
#define XEN_IA64_OPTF_IDENT_MAP_REG5_FLG 122,3874
struct opt_feature 126,4053
    unsigned long mask;127,4074
    struct identity_mapping im_reg4;128,4133
    struct identity_mapping im_reg5;129,4202
    struct identity_mapping im_reg7;130,4271
struct arch_domain 136,4484
    struct mm_struct mm;137,4505
        unsigned long flags;141,4561
            unsigned int is_sioemu 143,4607
            unsigned int has_pervcpu_vhpt 145,4683
            unsigned int vhpt_size_log2 146,4730
    u64 convmem_end;152,4863
    struct rangeset *ioport_caps;ioport_caps155,4926
    unsigned int starting_rid;161,5149
    unsigned int ending_rid;162,5215
    unsigned int starting_mp_rid;164,5323
    unsigned int ending_mp_rid;165,5357
    unsigned int metaphysical_rid_dt;167,5427
    unsigned int metaphysical_rid_d;168,5480
    unsigned char rid_bits;170,5543
    int breakimm;171,5619
    struct list_head pdev_list;173,5689
    struct virtual_platform_def     vmx_platform;174,5721
#define	hvm_domain 175,5771
    u64 shared_info_va;177,5845
    struct xen_sal_data *sal_data;sal_data180,5911
    unsigned long *pirq_eoi_map;pirq_eoi_map183,6019
    unsigned long pirq_eoi_map_mfn;184,6052
    void *efi_runtime;efi_runtime187,6160
    void *fpswa_inf;fpswa_inf189,6249
    u64 *shadow_bitmap;shadow_bitmap193,6350
    unsigned long shadow_bitmap_size;195,6421
    atomic64_t shadow_dirty_count;197,6500
    atomic64_t shadow_fault_count;199,6564
    struct foreign_p2m foreign_p2m;202,6647
    struct last_vcpu last_vcpu[last_vcpu204,6684
    struct opt_feature opt_feature;206,6726
    unsigned int debug_flags;209,6829
    unsigned int debug_event;212,6898
    struct tlb_track*   tlb_track;215,6962
        RELRES_not_started,220,7065
        RELRES_mm_teardown,221,7093
        RELRES_xen,222,7121
        RELRES_dom,223,7141
        RELRES_done,224,7161
    } relres;225,7182
    unsigned long mm_teardown_offset;227,7232
    struct page_list_head relmem_list;229,7322
#define INT_ENABLE_OFFSET(231,7364
#define HAS_PERVCPU_VHPT(236,7527
#define HAS_PERVCPU_VHPT(238,7594
struct arch_vcpu 242,7639
    mapped_regs_t *privregs;privregs245,7746
    TR_ENTRY itrs[itrs248,7798
    TR_ENTRY dtrs[dtrs249,7824
    TR_ENTRY itlb;250,7850
    TR_ENTRY dtlb;251,7869
    unsigned char itr_regions;254,7947
    unsigned char dtr_regions;255,7978
    unsigned char tc_regions;256,8009
    unsigned long irr[irr258,8040
    unsigned long insvc[insvc259,8105
    unsigned long iva;260,8163
    unsigned long domain_itm;261,8186
    unsigned long domain_itm_last;262,8216
    unsigned long event_callback_ip;264,8252
    unsigned long failsafe_callback_ip;265,8316
    unsigned long metaphysical_rid_dt;269,8482
    unsigned long metaphysical_rid_d;270,8556
    unsigned long metaphysical_saved_rr0;271,8629
    unsigned long metaphysical_saved_rr4;272,8706
    unsigned long fp_psr;273,8783
    u64 *shadow_bitmap;shadow_bitmap274,8847
    int breakimm;275,8914
    int starting_rid;276,8969
    int ending_rid;277,9027
    unsigned char rid_bits;278,9096
    unsigned int dbg_used;281,9206
    u64 dbr[dbr282,9233
    u64 ibr[ibr283,9265
    struct thread_struct _thread;285,9298
    thash_cb_t vtlb;287,9354
    thash_cb_t vhpt;288,9375
    char irq_new_pending;289,9396
    char irq_new_condition;290,9422
    char hypercall_continuation;291,9499
    fpswa_ret_t fpswa_ret;293,9533
    struct timer hlt_timer;294,9608
    struct arch_vmx_struct arch_vmx;295,9636
    unsigned long pkrs[pkrs300,9892
#define XEN_IA64_PKR_IN_USE	301,9965
    unsigned char pkr_flags;302,10027
    unsigned char       vhpt_pg_shift;304,10057
    PTA                 pta;306,10158
    unsigned long       vhpt_maddr;307,10187
    struct page_info*   vhpt_page;308,10223
    unsigned long       vhpt_entries;309,10258
#define INVALID_PROCESSOR 311,10303
    int last_processor;312,10343
    cpumask_t cache_coherent_map;313,10367

xen/include/asm-ia64/dom_fw_dom0.h,42
#define __ASM_IA64_DOM_FW_DOM0_H__22,956

xen/include/asm-ia64/vmx.h,134
#define _ASM_IA64_VT_H23,918
#define vmx_user_mode(28,999
#define VCPU_LID(30,1077
static inline ioreq_t *get_vio(get_vio52,2118

xen/include/asm-ia64/trace.h,29
#define __ASM_TRACE_H__2,24

xen/include/asm-ia64/linux/asm-generic/iomap.h,28
#define __GENERIC_IO_H2,23

xen/include/asm-ia64/linux/asm-generic/pci.h,183
#define _ASM_GENERIC_PCI_H7,108
pcibios_resource_to_bus(18,419
pcibios_bus_to_resource(26,599
#define pcibios_scan_all_fns(33,759
static inline int pci_get_legacy_ide_irq(36,838

xen/include/asm-ia64/linux/asm-generic/pgtable.h,921
#define _ASM_GENERIC_PGTABLE_H2,31
#define ptep_establish(17,453
#define ptep_establish(23,683
#define ptep_set_access_flags(38,1170
#define ptep_test_and_clear_young(46,1436
#define ptep_clear_flush_young(60,1779
#define ptep_test_and_clear_dirty(71,2077
#define ptep_clear_flush_dirty(85,2420
#define ptep_get_and_clear(96,2711
#define ptep_clear_flush(105,2924
static inline void ptep_set_wrprotect(115,3187
#define pte_same(123,3404
#define page_test_and_clear_dirty(127,3507
#define pte_maybe_dirty(128,3551
#define pte_maybe_dirty(130,3602
#define page_test_and_clear_young(134,3690
#define pgd_offset_gate(138,3778
#define lazy_mmu_prot_update(142,3882
#define pgd_addr_end(151,4158
#define pud_addr_end(157,4343
#define pmd_addr_end(164,4531
static inline int pgd_none_or_clear_bad(180,5039
static inline int pud_none_or_clear_bad(191,5209
static inline int pmd_none_or_clear_bad(202,5379

xen/include/asm-ia64/linux/asm-generic/div64.h,82
#define _ASM_GENERIC_DIV64_H2,29
# define do_div(25,535
# define do_div(40,910

xen/include/asm-ia64/linux/asm-generic/sections.h,38
#define _ASM_GENERIC_SECTIONS_H_2,33

xen/include/asm-ia64/linux/asm-generic/ide_iops.h,284
#define __ide_insw	3,49
#define __ide_insl	4,73
#define __ide_outsw	5,97
#define __ide_outsl	6,123
static __inline__ void __ide_mm_insw(8,150
static __inline__ void __ide_mm_insl(16,300
static __inline__ void __ide_mm_outsw(24,450
static __inline__ void __ide_mm_outsl(32,601

xen/include/asm-ia64/linux/asm-generic/vmlinux.lds.h,163
#define LOAD_OFFSET 2,20
#define VMLINUX_SYMBOL(6,73
#define RODATA	9,117
#define SECURITY_INIT	75,2386
#define SCHED_TEXT	82,2636
#define LOCK_TEXT	87,2774

xen/include/asm-ia64/linux/asm-generic/unaligned.h,635
#define _ASM_GENERIC_UNALIGNED_H_2,34
#define get_unaligned(18,472
#define put_unaligned(20,563
extern void bad_unaligned_access_length(29,877
struct __una_u64 31,951
struct __una_u64 { __u64 x 31,951
struct __una_u32 32,1006
struct __una_u32 { __u32 x 32,1006
struct __una_u16 33,1061
struct __una_u16 { __u16 x 33,1061
static inline unsigned long __uldq(39,1155
static inline unsigned long __uldl(45,1294
static inline unsigned long __uldw(51,1433
static inline void __ustq(61,1611
static inline void __ustl(67,1733
static inline void __ustw(73,1855
#define __get_unaligned(79,1977
#define __put_unaligned(101,2400

xen/include/asm-ia64/linux/asm-generic/topology.h,232
#define _ASM_GENERIC_TOPOLOGY_H28,982
#define cpu_to_node(33,1190
#define parent_node(36,1246
#define node_to_cpumask(39,1307
#define node_to_first_cpu(42,1387
#define pcibus_to_node(45,1453
#define pcibus_to_cpumask(49,1521

xen/include/asm-ia64/linux/bitmap.h,749
#define __LINUX_BITMAP_H2,25
#define BITMAP_LAST_WORD_MASK(111,4850
static inline void bitmap_zero(117,4990
static inline void bitmap_fill(127,5192
static inline void bitmap_copy(137,5446
static inline void bitmap_and(148,5680
static inline void bitmap_or(157,5902
static inline void bitmap_xor(166,6122
static inline void bitmap_andnot(175,6344
static inline void bitmap_complement(184,6575
static inline int bitmap_equal(193,6801
static inline int bitmap_intersects(202,7045
static inline int bitmap_subset(211,7302
static inline int bitmap_empty(220,7551
static inline int bitmap_full(228,7746
static inline int bitmap_weight(236,7942
static inline void bitmap_shift_right(241,8053
static inline void bitmap_shift_left(250,8262

xen/include/asm-ia64/linux/pci_ids.h,96286
#define PCI_CLASS_NOT_DEFINED	9,107
#define PCI_CLASS_NOT_DEFINED_VGA	10,145
#define PCI_BASE_CLASS_STORAGE	12,187
#define PCI_CLASS_STORAGE_SCSI	13,224
#define PCI_CLASS_STORAGE_IDE	14,263
#define PCI_CLASS_STORAGE_FLOPPY	15,301
#define PCI_CLASS_STORAGE_IPI	16,341
#define PCI_CLASS_STORAGE_RAID	17,379
#define PCI_CLASS_STORAGE_SAS	18,418
#define PCI_CLASS_STORAGE_OTHER	19,456
#define PCI_BASE_CLASS_NETWORK	21,497
#define PCI_CLASS_NETWORK_ETHERNET	22,534
#define PCI_CLASS_NETWORK_TOKEN_RING	23,576
#define PCI_CLASS_NETWORK_FDDI	24,620
#define PCI_CLASS_NETWORK_ATM	25,659
#define PCI_CLASS_NETWORK_OTHER	26,697
#define PCI_BASE_CLASS_DISPLAY	28,738
#define PCI_CLASS_DISPLAY_VGA	29,775
#define PCI_CLASS_DISPLAY_XGA	30,813
#define PCI_CLASS_DISPLAY_3D	31,851
#define PCI_CLASS_DISPLAY_OTHER	32,888
#define PCI_BASE_CLASS_MULTIMEDIA	34,929
#define PCI_CLASS_MULTIMEDIA_VIDEO	35,968
#define PCI_CLASS_MULTIMEDIA_AUDIO	36,1010
#define PCI_CLASS_MULTIMEDIA_PHONE	37,1052
#define PCI_CLASS_MULTIMEDIA_OTHER	38,1094
#define PCI_BASE_CLASS_MEMORY	40,1137
#define PCI_CLASS_MEMORY_RAM	41,1173
#define PCI_CLASS_MEMORY_FLASH	42,1210
#define PCI_CLASS_MEMORY_OTHER	43,1249
#define PCI_BASE_CLASS_BRIDGE	45,1289
#define PCI_CLASS_BRIDGE_HOST	46,1325
#define PCI_CLASS_BRIDGE_ISA	47,1363
#define PCI_CLASS_BRIDGE_EISA	48,1400
#define PCI_CLASS_BRIDGE_MC	49,1438
#define PCI_CLASS_BRIDGE_PCI	50,1474
#define PCI_CLASS_BRIDGE_PCMCIA	51,1511
#define PCI_CLASS_BRIDGE_NUBUS	52,1551
#define PCI_CLASS_BRIDGE_CARDBUS	53,1590
#define PCI_CLASS_BRIDGE_RACEWAY	54,1630
#define PCI_CLASS_BRIDGE_OTHER	55,1670
#define PCI_BASE_CLASS_COMMUNICATION	57,1710
#define PCI_CLASS_COMMUNICATION_SERIAL	58,1752
#define PCI_CLASS_COMMUNICATION_PARALLEL 59,1798
#define PCI_CLASS_COMMUNICATION_MULTISERIAL 60,1846
#define PCI_CLASS_COMMUNICATION_MODEM	61,1897
#define PCI_CLASS_COMMUNICATION_OTHER	62,1942
#define PCI_BASE_CLASS_SYSTEM	64,1988
#define PCI_CLASS_SYSTEM_PIC	65,2024
#define PCI_CLASS_SYSTEM_PIC_IOAPIC	66,2061
#define PCI_CLASS_SYSTEM_PIC_IOXAPIC	67,2106
#define PCI_CLASS_SYSTEM_DMA	68,2152
#define PCI_CLASS_SYSTEM_TIMER	69,2189
#define PCI_CLASS_SYSTEM_RTC	70,2228
#define PCI_CLASS_SYSTEM_PCI_HOTPLUG	71,2265
#define PCI_CLASS_SYSTEM_SDHCI	72,2309
#define PCI_CLASS_SYSTEM_OTHER	73,2348
#define PCI_BASE_CLASS_INPUT	75,2388
#define PCI_CLASS_INPUT_KEYBOARD	76,2423
#define PCI_CLASS_INPUT_PEN	77,2463
#define PCI_CLASS_INPUT_MOUSE	78,2499
#define PCI_CLASS_INPUT_SCANNER	79,2537
#define PCI_CLASS_INPUT_GAMEPORT	80,2577
#define PCI_CLASS_INPUT_OTHER	81,2617
#define PCI_BASE_CLASS_DOCKING	83,2656
#define PCI_CLASS_DOCKING_GENERIC	84,2693
#define PCI_CLASS_DOCKING_OTHER	85,2734
#define PCI_BASE_CLASS_PROCESSOR	87,2775
#define PCI_CLASS_PROCESSOR_386	88,2813
#define PCI_CLASS_PROCESSOR_486	89,2853
#define PCI_CLASS_PROCESSOR_PENTIUM	90,2893
#define PCI_CLASS_PROCESSOR_ALPHA	91,2936
#define PCI_CLASS_PROCESSOR_POWERPC	92,2977
#define PCI_CLASS_PROCESSOR_MIPS	93,3020
#define PCI_CLASS_PROCESSOR_CO	94,3060
#define PCI_BASE_CLASS_SERIAL	96,3100
#define PCI_CLASS_SERIAL_FIREWIRE	97,3136
#define PCI_CLASS_SERIAL_ACCESS	98,3177
#define PCI_CLASS_SERIAL_SSA	99,3217
#define PCI_CLASS_SERIAL_USB	100,3254
#define PCI_CLASS_SERIAL_USB_UHCI	101,3291
#define PCI_CLASS_SERIAL_USB_OHCI	102,3334
#define PCI_CLASS_SERIAL_USB_EHCI	103,3377
#define PCI_CLASS_SERIAL_FIBER	104,3420
#define PCI_CLASS_SERIAL_SMBUS	105,3459
#define PCI_BASE_CLASS_INTELLIGENT	107,3499
#define PCI_CLASS_INTELLIGENT_I2O	108,3539
#define PCI_BASE_CLASS_SATELLITE	110,3581
#define PCI_CLASS_SATELLITE_TV	111,3619
#define PCI_CLASS_SATELLITE_AUDIO	112,3658
#define PCI_CLASS_SATELLITE_VOICE	113,3699
#define PCI_CLASS_SATELLITE_DATA	114,3740
#define PCI_BASE_CLASS_CRYPT	116,3781
#define PCI_CLASS_CRYPT_NETWORK	117,3816
#define PCI_CLASS_CRYPT_ENTERTAINMENT	118,3856
#define PCI_CLASS_CRYPT_OTHER	119,3901
#define PCI_BASE_CLASS_SIGNAL_PROCESSING 121,3940
#define PCI_CLASS_SP_DPIO	122,3986
#define PCI_CLASS_SP_OTHER	123,4020
#define PCI_CLASS_OTHERS	125,4056
#define PCI_VENDOR_ID_DYNALINK	129,4154
#define PCI_DEVICE_ID_DYNALINK_IS64PH	130,4193
#define PCI_VENDOR_ID_BERKOM	132,4239
#define PCI_DEVICE_ID_BERKOM_A1T	133,4277
#define PCI_DEVICE_ID_BERKOM_T_CONCEPT	134,4318
#define PCI_DEVICE_ID_BERKOM_A4T	135,4365
#define PCI_DEVICE_ID_BERKOM_SCITEL_QUADRO	136,4406
#define PCI_VENDOR_ID_COMPAQ	138,4457
#define PCI_DEVICE_ID_COMPAQ_TOKENRING	139,4494
#define PCI_DEVICE_ID_COMPAQ_TACHYON	140,4540
#define PCI_DEVICE_ID_COMPAQ_SMART2P	141,4584
#define PCI_DEVICE_ID_COMPAQ_NETEL100	142,4628
#define PCI_DEVICE_ID_COMPAQ_NETEL10	143,4673
#define PCI_DEVICE_ID_COMPAQ_TRIFLEX_IDE 144,4717
#define PCI_DEVICE_ID_COMPAQ_NETFLEX3I	145,4765
#define PCI_DEVICE_ID_COMPAQ_NETEL100D	146,4811
#define PCI_DEVICE_ID_COMPAQ_NETEL100PI	147,4857
#define PCI_DEVICE_ID_COMPAQ_NETEL100I	148,4904
#define PCI_DEVICE_ID_COMPAQ_CISS	149,4950
#define PCI_DEVICE_ID_COMPAQ_CISSB	150,4991
#define PCI_DEVICE_ID_COMPAQ_CISSC	151,5033
#define PCI_DEVICE_ID_COMPAQ_THUNDER	152,5073
#define PCI_DEVICE_ID_COMPAQ_NETFLEX3B	153,5117
#define PCI_VENDOR_ID_NCR	155,5164
#define PCI_VENDOR_ID_LSI_LOGIC	156,5198
#define PCI_DEVICE_ID_NCR_53C810	157,5238
#define PCI_DEVICE_ID_NCR_53C820	158,5278
#define PCI_DEVICE_ID_NCR_53C825	159,5318
#define PCI_DEVICE_ID_NCR_53C815	160,5358
#define PCI_DEVICE_ID_LSI_53C810AP	161,5398
#define PCI_DEVICE_ID_NCR_53C860	162,5440
#define PCI_DEVICE_ID_LSI_53C1510	163,5480
#define PCI_DEVICE_ID_NCR_53C896	164,5521
#define PCI_DEVICE_ID_NCR_53C895	165,5561
#define PCI_DEVICE_ID_NCR_53C885	166,5601
#define PCI_DEVICE_ID_NCR_53C875	167,5641
#define PCI_DEVICE_ID_NCR_53C1510	168,5681
#define PCI_DEVICE_ID_LSI_53C895A	169,5722
#define PCI_DEVICE_ID_LSI_53C875A	170,5763
#define PCI_DEVICE_ID_LSI_53C1010_33	171,5804
#define PCI_DEVICE_ID_LSI_53C1010_66	172,5848
#define PCI_DEVICE_ID_LSI_53C1030	173,5892
#define PCI_DEVICE_ID_LSI_1030_53C1035	174,5933
#define PCI_DEVICE_ID_LSI_53C1035	175,5979
#define PCI_DEVICE_ID_NCR_53C875J	176,6020
#define PCI_DEVICE_ID_LSI_FC909	177,6061
#define PCI_DEVICE_ID_LSI_FC929	178,6101
#define PCI_DEVICE_ID_LSI_FC929_LAN	179,6141
#define PCI_DEVICE_ID_LSI_FC919	180,6184
#define PCI_DEVICE_ID_LSI_FC919_LAN	181,6224
#define PCI_DEVICE_ID_LSI_FC929X	182,6267
#define PCI_DEVICE_ID_LSI_FC939X	183,6307
#define PCI_DEVICE_ID_LSI_FC949X	184,6347
#define PCI_DEVICE_ID_LSI_FC949ES	185,6387
#define PCI_DEVICE_ID_LSI_FC919X	186,6428
#define PCI_DEVICE_ID_NCR_YELLOWFIN	187,6468
#define PCI_DEVICE_ID_LSI_61C102	188,6511
#define PCI_DEVICE_ID_LSI_63C815	189,6551
#define PCI_DEVICE_ID_LSI_SAS1064	190,6591
#define PCI_DEVICE_ID_LSI_SAS1064R	191,6632
#define PCI_DEVICE_ID_LSI_SAS1066	192,6674
#define PCI_DEVICE_ID_LSI_SAS1068	193,6715
#define PCI_DEVICE_ID_LSI_SAS1064A	194,6756
#define PCI_DEVICE_ID_LSI_SAS1064E	195,6798
#define PCI_DEVICE_ID_LSI_SAS1066E	196,6840
#define PCI_DEVICE_ID_LSI_SAS1068E	197,6882
#define PCI_DEVICE_ID_LSI_SAS1078	198,6924
#define PCI_VENDOR_ID_ATI	200,6966
#define PCI_DEVICE_ID_ATI_68800	202,7013
#define PCI_DEVICE_ID_ATI_215CT222	203,7053
#define PCI_DEVICE_ID_ATI_210888CX	204,7095
#define PCI_DEVICE_ID_ATI_215ET222	205,7137
#define PCI_DEVICE_ID_ATI_215GB	207,7199
#define PCI_DEVICE_ID_ATI_215GD	208,7239
#define PCI_DEVICE_ID_ATI_215GI	209,7279
#define PCI_DEVICE_ID_ATI_215GP	210,7319
#define PCI_DEVICE_ID_ATI_215GQ	211,7359
#define PCI_DEVICE_ID_ATI_215XL	212,7399
#define PCI_DEVICE_ID_ATI_215GT	213,7439
#define PCI_DEVICE_ID_ATI_215GTB	214,7479
#define PCI_DEVICE_ID_ATI_215_IV	215,7519
#define PCI_DEVICE_ID_ATI_215_IW	216,7559
#define PCI_DEVICE_ID_ATI_215_IZ	217,7599
#define PCI_DEVICE_ID_ATI_210888GX	218,7639
#define PCI_DEVICE_ID_ATI_215_LB	219,7681
#define PCI_DEVICE_ID_ATI_215_LD	220,7721
#define PCI_DEVICE_ID_ATI_215_LG	221,7761
#define PCI_DEVICE_ID_ATI_215_LI	222,7801
#define PCI_DEVICE_ID_ATI_215_LM	223,7841
#define PCI_DEVICE_ID_ATI_215_LN	224,7881
#define PCI_DEVICE_ID_ATI_215_LR	225,7921
#define PCI_DEVICE_ID_ATI_215_LS	226,7961
#define PCI_DEVICE_ID_ATI_264_LT	227,8001
#define PCI_DEVICE_ID_ATI_264VT	229,8057
#define PCI_DEVICE_ID_ATI_264VU	230,8097
#define PCI_DEVICE_ID_ATI_264VV	231,8137
#define PCI_DEVICE_ID_ATI_RAGE128_RE	233,8194
#define PCI_DEVICE_ID_ATI_RAGE128_RF	234,8238
#define PCI_DEVICE_ID_ATI_RAGE128_RG	235,8282
#define PCI_DEVICE_ID_ATI_RAGE128_RK	237,8343
#define PCI_DEVICE_ID_ATI_RAGE128_RL	238,8387
#define PCI_DEVICE_ID_ATI_RAGE128_SE	239,8431
#define PCI_DEVICE_ID_ATI_RAGE128_SF	240,8475
#define PCI_DEVICE_ID_ATI_RAGE128_SG	241,8519
#define PCI_DEVICE_ID_ATI_RAGE128_SH	242,8563
#define PCI_DEVICE_ID_ATI_RAGE128_SK	243,8607
#define PCI_DEVICE_ID_ATI_RAGE128_SL	244,8651
#define PCI_DEVICE_ID_ATI_RAGE128_SM	245,8695
#define PCI_DEVICE_ID_ATI_RAGE128_SN	246,8739
#define PCI_DEVICE_ID_ATI_RAGE128_TF	248,8803
#define PCI_DEVICE_ID_ATI_RAGE128_TL	249,8847
#define PCI_DEVICE_ID_ATI_RAGE128_TR	250,8891
#define PCI_DEVICE_ID_ATI_RAGE128_TS	251,8935
#define PCI_DEVICE_ID_ATI_RAGE128_TT	252,8979
#define PCI_DEVICE_ID_ATI_RAGE128_TU	253,9023
#define PCI_DEVICE_ID_ATI_RAGE128_LE	255,9084
#define PCI_DEVICE_ID_ATI_RAGE128_LF	256,9128
#define PCI_DEVICE_ID_ATI_RAGE128_MF 258,9189
#define PCI_DEVICE_ID_ATI_RAGE128_ML 259,9236
#define PCI_DEVICE_ID_ATI_RAGE128_PA	261,9304
#define PCI_DEVICE_ID_ATI_RAGE128_PB	262,9348
#define PCI_DEVICE_ID_ATI_RAGE128_PC	263,9392
#define PCI_DEVICE_ID_ATI_RAGE128_PD	264,9436
#define PCI_DEVICE_ID_ATI_RAGE128_PE	265,9480
#define PCI_DEVICE_ID_ATI_RAGE128_PF	266,9524
#define PCI_DEVICE_ID_ATI_RAGE128_PG	268,9589
#define PCI_DEVICE_ID_ATI_RAGE128_PH	269,9633
#define PCI_DEVICE_ID_ATI_RAGE128_PI	270,9677
#define PCI_DEVICE_ID_ATI_RAGE128_PJ	271,9721
#define PCI_DEVICE_ID_ATI_RAGE128_PK	272,9765
#define PCI_DEVICE_ID_ATI_RAGE128_PL	273,9809
#define PCI_DEVICE_ID_ATI_RAGE128_PM	274,9853
#define PCI_DEVICE_ID_ATI_RAGE128_PN	275,9897
#define PCI_DEVICE_ID_ATI_RAGE128_PO	276,9941
#define PCI_DEVICE_ID_ATI_RAGE128_PP	277,9985
#define PCI_DEVICE_ID_ATI_RAGE128_PQ	278,10029
#define PCI_DEVICE_ID_ATI_RAGE128_PR	279,10073
#define PCI_DEVICE_ID_ATI_RAGE128_PS	280,10117
#define PCI_DEVICE_ID_ATI_RAGE128_PT	281,10161
#define PCI_DEVICE_ID_ATI_RAGE128_PU	282,10205
#define PCI_DEVICE_ID_ATI_RAGE128_PV	283,10249
#define PCI_DEVICE_ID_ATI_RAGE128_PW	284,10293
#define PCI_DEVICE_ID_ATI_RAGE128_PX	285,10337
#define PCI_DEVICE_ID_ATI_RADEON_QD	288,10416
#define PCI_DEVICE_ID_ATI_RADEON_QE	289,10459
#define PCI_DEVICE_ID_ATI_RADEON_QF	290,10502
#define PCI_DEVICE_ID_ATI_RADEON_QG	291,10545
#define PCI_DEVICE_ID_ATI_RADEON_QY	293,10612
#define PCI_DEVICE_ID_ATI_RADEON_QZ	294,10655
#define PCI_DEVICE_ID_ATI_RADEON_QL	296,10723
#define PCI_DEVICE_ID_ATI_RADEON_QN	297,10766
#define PCI_DEVICE_ID_ATI_RADEON_QO	298,10809
#define PCI_DEVICE_ID_ATI_RADEON_Ql	299,10852
#define PCI_DEVICE_ID_ATI_RADEON_BB	300,10895
#define PCI_DEVICE_ID_ATI_RADEON_QM	302,10963
#define PCI_DEVICE_ID_ATI_RADEON_QW	304,11032
#define PCI_DEVICE_ID_ATI_RADEON_QX	305,11075
#define PCI_DEVICE_ID_ATI_RADEON_Id	308,11164
#define PCI_DEVICE_ID_ATI_RADEON_Ie	309,11207
#define PCI_DEVICE_ID_ATI_RADEON_If	310,11250
#define PCI_DEVICE_ID_ATI_RADEON_Ig	311,11293
#define PCI_DEVICE_ID_ATI_RADEON_Ya	313,11362
#define PCI_DEVICE_ID_ATI_RADEON_Yd	314,11405
#define PCI_DEVICE_ID_ATI_RADEON_ND	317,11498
#define PCI_DEVICE_ID_ATI_RADEON_NE	318,11541
#define PCI_DEVICE_ID_ATI_RADEON_NF	319,11584
#define PCI_DEVICE_ID_ATI_RADEON_NG	320,11627
#define PCI_DEVICE_ID_ATI_RADEON_LY	324,11737
#define PCI_DEVICE_ID_ATI_RADEON_LZ	325,11780
#define PCI_DEVICE_ID_ATI_RADEON_LW	327,11839
#define PCI_DEVICE_ID_ATI_RADEON_LX	328,11882
#define PCI_DEVICE_ID_ATI_RADEON_Ld	330,11941
#define PCI_DEVICE_ID_ATI_RADEON_Le	331,11984
#define PCI_DEVICE_ID_ATI_RADEON_Lf	332,12027
#define PCI_DEVICE_ID_ATI_RADEON_Lg	333,12070
#define PCI_DEVICE_ID_ATI_RS100	336,12142
#define PCI_DEVICE_ID_ATI_RS200	337,12182
#define PCI_DEVICE_ID_ATI_RS200_B	338,12222
#define PCI_DEVICE_ID_ATI_RS250	339,12263
#define PCI_DEVICE_ID_ATI_RS300_100	340,12303
#define PCI_DEVICE_ID_ATI_RS300_133	341,12346
#define PCI_DEVICE_ID_ATI_RS300_166	342,12389
#define PCI_DEVICE_ID_ATI_RS300_200	343,12432
#define PCI_DEVICE_ID_ATI_RS350_100 344,12475
#define PCI_DEVICE_ID_ATI_RS350_133 345,12522
#define PCI_DEVICE_ID_ATI_RS350_166 346,12569
#define PCI_DEVICE_ID_ATI_RS350_200 347,12616
#define PCI_DEVICE_ID_ATI_RS400_100 348,12663
#define PCI_DEVICE_ID_ATI_RS400_133 349,12710
#define PCI_DEVICE_ID_ATI_RS400_166 350,12757
#define PCI_DEVICE_ID_ATI_RS400_200 351,12804
#define PCI_DEVICE_ID_ATI_RS480 352,12851
#define PCI_DEVICE_ID_ATI_IXP200_IDE	354,12920
#define PCI_DEVICE_ID_ATI_IXP200_SMBUS	355,12964
#define PCI_DEVICE_ID_ATI_IXP300_SMBUS	356,13010
#define PCI_DEVICE_ID_ATI_IXP300_IDE	357,13056
#define PCI_DEVICE_ID_ATI_IXP300_SATA 358,13100
#define PCI_DEVICE_ID_ATI_IXP400_SMBUS	359,13147
#define PCI_DEVICE_ID_ATI_IXP400_IDE	360,13193
#define PCI_DEVICE_ID_ATI_IXP400_SATA 361,13237
#define PCI_DEVICE_ID_ATI_IXP400_SATA2	362,13284
#define PCI_DEVICE_ID_ATI_IXP600_SATA	363,13330
#define PCI_DEVICE_ID_ATI_IXP600_SRAID	364,13375
#define PCI_DEVICE_ID_ATI_IXP600_IDE	365,13421
#define PCI_VENDOR_ID_VLSI	367,13466
#define PCI_DEVICE_ID_VLSI_82C592	368,13501
#define PCI_DEVICE_ID_VLSI_82C593	369,13542
#define PCI_DEVICE_ID_VLSI_82C594	370,13583
#define PCI_DEVICE_ID_VLSI_82C597	371,13624
#define PCI_DEVICE_ID_VLSI_82C541	372,13665
#define PCI_DEVICE_ID_VLSI_82C543	373,13706
#define PCI_DEVICE_ID_VLSI_82C532	374,13747
#define PCI_DEVICE_ID_VLSI_82C534	375,13788
#define PCI_DEVICE_ID_VLSI_82C535	376,13829
#define PCI_DEVICE_ID_VLSI_82C147	377,13870
#define PCI_DEVICE_ID_VLSI_VAS96011	378,13911
#define PCI_VENDOR_ID_ADL	380,13955
#define PCI_DEVICE_ID_ADL_2301	381,13989
#define PCI_VENDOR_ID_NS	383,14029
#define PCI_DEVICE_ID_NS_87415	384,14062
#define PCI_DEVICE_ID_NS_87560_LIO	385,14101
#define PCI_DEVICE_ID_NS_87560_USB	386,14143
#define PCI_DEVICE_ID_NS_83815	387,14185
#define PCI_DEVICE_ID_NS_83820	388,14224
#define PCI_DEVICE_ID_NS_CS5535_ISA	389,14263
#define PCI_DEVICE_ID_NS_CS5535_IDE	390,14306
#define PCI_DEVICE_ID_NS_CS5535_AUDIO	391,14349
#define PCI_DEVICE_ID_NS_CS5535_USB	392,14394
#define PCI_DEVICE_ID_NS_CS5535_VIDEO	393,14437
#define PCI_DEVICE_ID_NS_SATURN	394,14482
#define PCI_DEVICE_ID_NS_SCx200_BRIDGE	395,14522
#define PCI_DEVICE_ID_NS_SCx200_SMI	396,14568
#define PCI_DEVICE_ID_NS_SCx200_IDE	397,14611
#define PCI_DEVICE_ID_NS_SCx200_AUDIO	398,14654
#define PCI_DEVICE_ID_NS_SCx200_VIDEO	399,14699
#define PCI_DEVICE_ID_NS_SCx200_XBUS	400,14744
#define PCI_DEVICE_ID_NS_SC1100_BRIDGE	401,14788
#define PCI_DEVICE_ID_NS_SC1100_SMI	402,14834
#define PCI_DEVICE_ID_NS_SC1100_XBUS	403,14877
#define PCI_DEVICE_ID_NS_87410	404,14921
#define PCI_DEVICE_ID_NS_CS5535_HOST_BRIDGE 406,14961
#define PCI_DEVICE_ID_NS_CS5535_ISA_BRIDGE 407,15013
#define PCI_VENDOR_ID_TSENG	409,15066
#define PCI_DEVICE_ID_TSENG_W32P_2	410,15102
#define PCI_DEVICE_ID_TSENG_W32P_b	411,15144
#define PCI_DEVICE_ID_TSENG_W32P_c	412,15186
#define PCI_DEVICE_ID_TSENG_W32P_d	413,15228
#define PCI_DEVICE_ID_TSENG_ET6000	414,15270
#define PCI_VENDOR_ID_WEITEK	416,15313
#define PCI_DEVICE_ID_WEITEK_P9000	417,15350
#define PCI_DEVICE_ID_WEITEK_P9100	418,15392
#define PCI_VENDOR_ID_DEC	420,15435
#define PCI_DEVICE_ID_DEC_BRD	421,15469
#define PCI_DEVICE_ID_DEC_TULIP	422,15507
#define PCI_DEVICE_ID_DEC_TGA	423,15547
#define PCI_DEVICE_ID_DEC_TULIP_FAST	424,15585
#define PCI_DEVICE_ID_DEC_TGA2	425,15629
#define PCI_DEVICE_ID_DEC_FDDI	426,15668
#define PCI_DEVICE_ID_DEC_TULIP_PLUS	427,15707
#define PCI_DEVICE_ID_DEC_21142	428,15751
#define PCI_DEVICE_ID_DEC_21052	429,15791
#define PCI_DEVICE_ID_DEC_21150	430,15831
#define PCI_DEVICE_ID_DEC_21152	431,15871
#define PCI_DEVICE_ID_DEC_21153	432,15911
#define PCI_DEVICE_ID_DEC_21154	433,15951
#define PCI_DEVICE_ID_DEC_21285	434,15991
#define PCI_DEVICE_ID_COMPAQ_42XX	435,16031
#define PCI_VENDOR_ID_CIRRUS	437,16073
#define PCI_DEVICE_ID_CIRRUS_7548	438,16110
#define PCI_DEVICE_ID_CIRRUS_5430	439,16151
#define PCI_DEVICE_ID_CIRRUS_5434_4	440,16192
#define PCI_DEVICE_ID_CIRRUS_5434_8	441,16235
#define PCI_DEVICE_ID_CIRRUS_5436	442,16278
#define PCI_DEVICE_ID_CIRRUS_5446	443,16319
#define PCI_DEVICE_ID_CIRRUS_5480	444,16360
#define PCI_DEVICE_ID_CIRRUS_5462	445,16401
#define PCI_DEVICE_ID_CIRRUS_5464	446,16442
#define PCI_DEVICE_ID_CIRRUS_5465	447,16483
#define PCI_DEVICE_ID_CIRRUS_6729	448,16524
#define PCI_DEVICE_ID_CIRRUS_6832	449,16565
#define PCI_DEVICE_ID_CIRRUS_7543	450,16606
#define PCI_DEVICE_ID_CIRRUS_4610	451,16647
#define PCI_DEVICE_ID_CIRRUS_4612	452,16688
#define PCI_DEVICE_ID_CIRRUS_4615	453,16729
#define PCI_VENDOR_ID_IBM	455,16771
#define PCI_DEVICE_ID_IBM_TR	456,16805
#define PCI_DEVICE_ID_IBM_TR_WAKE	457,16842
#define PCI_DEVICE_ID_IBM_CPC710_PCI64	458,16883
#define PCI_DEVICE_ID_IBM_SNIPE	459,16929
#define PCI_DEVICE_ID_IBM_CITRINE	460,16969
#define PCI_DEVICE_ID_IBM_GEMSTONE	461,17011
#define PCI_DEVICE_ID_IBM_OBSIDIAN	462,17054
#define PCI_DEVICE_ID_IBM_ICOM_DEV_ID_1	463,17097
#define PCI_DEVICE_ID_IBM_ICOM_DEV_ID_2	464,17144
#define PCI_DEVICE_ID_IBM_ICOM_V2_TWO_PORTS_RVX	465,17191
#define PCI_DEVICE_ID_IBM_ICOM_V2_ONE_PORT_RVX_ONE_PORT_MDM	466,17247
#define PCI_DEVICE_ID_IBM_ICOM_FOUR_PORT_MODEL	467,17314
#define PCI_VENDOR_ID_COMPEX2	469,17368
#define PCI_DEVICE_ID_COMPEX2_100VG	470,17442
#define PCI_VENDOR_ID_WD	472,17486
#define PCI_DEVICE_ID_WD_90C	473,17519
#define PCI_VENDOR_ID_AMI	475,17557
#define PCI_DEVICE_ID_AMI_MEGARAID3	476,17591
#define PCI_DEVICE_ID_AMI_MEGARAID	477,17634
#define PCI_DEVICE_ID_AMI_MEGARAID2	478,17676
#define PCI_VENDOR_ID_AMD	480,17720
#define PCI_DEVICE_ID_AMD_K8_NB	481,17754
#define PCI_DEVICE_ID_AMD_K8_NB_MISC	482,17794
#define PCI_DEVICE_ID_AMD_LANCE	483,17838
#define PCI_DEVICE_ID_AMD_LANCE_HOME	484,17878
#define PCI_DEVICE_ID_AMD_SCSI	485,17922
#define PCI_DEVICE_ID_AMD_SERENADE	486,17961
#define PCI_DEVICE_ID_AMD_FE_GATE_7006	487,18003
#define PCI_DEVICE_ID_AMD_FE_GATE_7007	488,18049
#define PCI_DEVICE_ID_AMD_FE_GATE_700C	489,18095
#define PCI_DEVICE_ID_AMD_FE_GATE_700E	490,18141
#define PCI_DEVICE_ID_AMD_COBRA_7401	491,18187
#define PCI_DEVICE_ID_AMD_VIPER_7409	492,18231
#define PCI_DEVICE_ID_AMD_VIPER_740B	493,18275
#define PCI_DEVICE_ID_AMD_VIPER_7410	494,18319
#define PCI_DEVICE_ID_AMD_VIPER_7411	495,18363
#define PCI_DEVICE_ID_AMD_VIPER_7413	496,18407
#define PCI_DEVICE_ID_AMD_VIPER_7440	497,18451
#define PCI_DEVICE_ID_AMD_OPUS_7441	498,18495
#define PCI_DEVICE_ID_AMD_OPUS_7443	499,18538
#define PCI_DEVICE_ID_AMD_VIPER_7443	500,18581
#define PCI_DEVICE_ID_AMD_OPUS_7445	501,18625
#define PCI_DEVICE_ID_AMD_8111_LPC	502,18668
#define PCI_DEVICE_ID_AMD_8111_IDE	503,18710
#define PCI_DEVICE_ID_AMD_8111_SMBUS2	504,18752
#define PCI_DEVICE_ID_AMD_8111_SMBUS	505,18797
#define PCI_DEVICE_ID_AMD_8111_AUDIO	506,18841
#define PCI_DEVICE_ID_AMD_8151_0	507,18885
#define PCI_DEVICE_ID_AMD_8131_BRIDGE	508,18925
#define PCI_DEVICE_ID_AMD_8131_APIC	509,18970
#define PCI_DEVICE_ID_AMD_8132_BRIDGE	510,19013
#define PCI_DEVICE_ID_AMD_CS5536_ISA 511,19058
#define PCI_DEVICE_ID_AMD_CS5536_FLASH 512,19105
#define PCI_DEVICE_ID_AMD_CS5536_AUDIO 513,19152
#define PCI_DEVICE_ID_AMD_CS5536_OHC 514,19199
#define PCI_DEVICE_ID_AMD_CS5536_EHC 515,19246
#define PCI_DEVICE_ID_AMD_CS5536_UDC 516,19293
#define PCI_DEVICE_ID_AMD_CS5536_UOC 517,19340
#define PCI_DEVICE_ID_AMD_CS5536_IDE 518,19387
#define PCI_DEVICE_ID_AMD_LX_VIDEO 520,19435
#define PCI_DEVICE_ID_AMD_LX_AES 521,19478
#define PCI_VENDOR_ID_TRIDENT	523,19522
#define PCI_DEVICE_ID_TRIDENT_4DWAVE_DX	524,19560
#define PCI_DEVICE_ID_TRIDENT_4DWAVE_NX	525,19607
#define PCI_DEVICE_ID_TRIDENT_9320	526,19654
#define PCI_DEVICE_ID_TRIDENT_9388	527,19696
#define PCI_DEVICE_ID_TRIDENT_9397	528,19738
#define PCI_DEVICE_ID_TRIDENT_939A	529,19780
#define PCI_DEVICE_ID_TRIDENT_9520	530,19822
#define PCI_DEVICE_ID_TRIDENT_9525	531,19864
#define PCI_DEVICE_ID_TRIDENT_9420	532,19906
#define PCI_DEVICE_ID_TRIDENT_9440	533,19948
#define PCI_DEVICE_ID_TRIDENT_9660	534,19990
#define PCI_DEVICE_ID_TRIDENT_9750	535,20032
#define PCI_DEVICE_ID_TRIDENT_9850	536,20074
#define PCI_DEVICE_ID_TRIDENT_9880	537,20116
#define PCI_DEVICE_ID_TRIDENT_8400	538,20158
#define PCI_DEVICE_ID_TRIDENT_8420	539,20200
#define PCI_DEVICE_ID_TRIDENT_8500	540,20242
#define PCI_VENDOR_ID_AI	542,20285
#define PCI_DEVICE_ID_AI_M1435	543,20318
#define PCI_VENDOR_ID_DELL	545,20358
#define PCI_DEVICE_ID_DELL_RACIII	546,20393
#define PCI_DEVICE_ID_DELL_RAC4	547,20434
#define PCI_DEVICE_ID_DELL_PERC5	548,20474
#define PCI_VENDOR_ID_MATROX	550,20515
#define PCI_DEVICE_ID_MATROX_MGA_2	551,20552
#define PCI_DEVICE_ID_MATROX_MIL	552,20594
#define PCI_DEVICE_ID_MATROX_MYS	553,20634
#define PCI_DEVICE_ID_MATROX_MIL_2	554,20674
#define PCI_DEVICE_ID_MATROX_MYS_AGP	555,20716
#define PCI_DEVICE_ID_MATROX_MIL_2_AGP	556,20760
#define PCI_DEVICE_ID_MATROX_MGA_IMP	557,20806
#define PCI_DEVICE_ID_MATROX_G100_MM	558,20850
#define PCI_DEVICE_ID_MATROX_G100_AGP	559,20894
#define PCI_DEVICE_ID_MATROX_G200_PCI	560,20939
#define PCI_DEVICE_ID_MATROX_G200_AGP	561,20984
#define	PCI_DEVICE_ID_MATROX_G400	562,21029
#define PCI_DEVICE_ID_MATROX_G550	563,21070
#define PCI_DEVICE_ID_MATROX_VIA	564,21111
#define PCI_VENDOR_ID_CT	566,21152
#define PCI_DEVICE_ID_CT_69000	567,21185
#define PCI_DEVICE_ID_CT_65545	568,21224
#define PCI_DEVICE_ID_CT_65548	569,21263
#define PCI_DEVICE_ID_CT_65550	570,21302
#define PCI_DEVICE_ID_CT_65554	571,21341
#define PCI_DEVICE_ID_CT_65555	572,21380
#define PCI_VENDOR_ID_MIRO	574,21420
#define PCI_DEVICE_ID_MIRO_36050	575,21455
#define PCI_DEVICE_ID_MIRO_DC10PLUS	576,21495
#define PCI_DEVICE_ID_MIRO_DC30PLUS	577,21538
#define PCI_VENDOR_ID_NEC	579,21582
#define PCI_DEVICE_ID_NEC_CBUS_1	580,21616
#define PCI_DEVICE_ID_NEC_LOCAL	581,21678
#define PCI_DEVICE_ID_NEC_ATM	582,21737
#define PCI_DEVICE_ID_NEC_R4000	583,21800
#define PCI_DEVICE_ID_NEC_486	584,21859
#define PCI_DEVICE_ID_NEC_ACCEL_1	585,21934
#define PCI_DEVICE_ID_NEC_UXBUS	586,22001
#define PCI_DEVICE_ID_NEC_ACCEL_2	587,22061
#define PCI_DEVICE_ID_NEC_GRAPH	588,22128
#define PCI_DEVICE_ID_NEC_VL	589,22195
#define PCI_DEVICE_ID_NEC_STARALPHA2	590,22252
#define PCI_DEVICE_ID_NEC_CBUS_2	591,22314
#define PCI_DEVICE_ID_NEC_USB	592,22376
#define PCI_DEVICE_ID_NEC_CBUS_3	593,22433
#define PCI_DEVICE_ID_NEC_NAPCCARD	594,22473
#define PCI_DEVICE_ID_NEC_PCX2	595,22515
#define PCI_DEVICE_ID_NEC_NILE4	596,22568
#define PCI_DEVICE_ID_NEC_VRC5476 597,22608
#define PCI_DEVICE_ID_NEC_VRC4173	598,22655
#define PCI_DEVICE_ID_NEC_VRC5477_AC97 599,22696
#define PCI_DEVICE_ID_NEC_PC9821CS01 600,22743
#define PCI_DEVICE_ID_NEC_PC9821NRB06 601,22809
#define PCI_VENDOR_ID_FD	603,22877
#define PCI_DEVICE_ID_FD_36C70	604,22910
#define PCI_VENDOR_ID_SI	606,22950
#define PCI_DEVICE_ID_SI_5591_AGP	607,22983
#define PCI_DEVICE_ID_SI_6202	608,23024
#define PCI_DEVICE_ID_SI_503	609,23062
#define PCI_DEVICE_ID_SI_ACPI	610,23099
#define PCI_DEVICE_ID_SI_SMBUS	611,23137
#define PCI_DEVICE_ID_SI_LPC	612,23176
#define PCI_DEVICE_ID_SI_5597_VGA	613,23213
#define PCI_DEVICE_ID_SI_6205	614,23254
#define PCI_DEVICE_ID_SI_501	615,23292
#define PCI_DEVICE_ID_SI_496	616,23329
#define PCI_DEVICE_ID_SI_300	617,23366
#define PCI_DEVICE_ID_SI_315H	618,23403
#define PCI_DEVICE_ID_SI_315	619,23441
#define PCI_DEVICE_ID_SI_315PRO	620,23478
#define PCI_DEVICE_ID_SI_530	621,23518
#define PCI_DEVICE_ID_SI_540	622,23555
#define PCI_DEVICE_ID_SI_550	623,23592
#define PCI_DEVICE_ID_SI_540_VGA	624,23629
#define PCI_DEVICE_ID_SI_550_VGA	625,23669
#define PCI_DEVICE_ID_SI_620	626,23709
#define PCI_DEVICE_ID_SI_630	627,23746
#define PCI_DEVICE_ID_SI_633	628,23783
#define PCI_DEVICE_ID_SI_635	629,23820
#define PCI_DEVICE_ID_SI_640	630,23857
#define PCI_DEVICE_ID_SI_645	631,23894
#define PCI_DEVICE_ID_SI_646	632,23931
#define PCI_DEVICE_ID_SI_648	633,23968
#define PCI_DEVICE_ID_SI_650	634,24005
#define PCI_DEVICE_ID_SI_651	635,24042
#define PCI_DEVICE_ID_SI_655	636,24079
#define PCI_DEVICE_ID_SI_661	637,24116
#define PCI_DEVICE_ID_SI_730	638,24153
#define PCI_DEVICE_ID_SI_733	639,24190
#define PCI_DEVICE_ID_SI_630_VGA	640,24227
#define PCI_DEVICE_ID_SI_735	641,24267
#define PCI_DEVICE_ID_SI_740	642,24304
#define PCI_DEVICE_ID_SI_741	643,24341
#define PCI_DEVICE_ID_SI_745	644,24378
#define PCI_DEVICE_ID_SI_746	645,24415
#define PCI_DEVICE_ID_SI_755	646,24452
#define PCI_DEVICE_ID_SI_760	647,24489
#define PCI_DEVICE_ID_SI_900	648,24526
#define PCI_DEVICE_ID_SI_961	649,24563
#define PCI_DEVICE_ID_SI_962	650,24600
#define PCI_DEVICE_ID_SI_963	651,24637
#define PCI_DEVICE_ID_SI_965	652,24674
#define PCI_DEVICE_ID_SI_966	653,24711
#define PCI_DEVICE_ID_SI_968	654,24748
#define PCI_DEVICE_ID_SI_5511	655,24785
#define PCI_DEVICE_ID_SI_5513	656,24823
#define PCI_DEVICE_ID_SI_5517	657,24861
#define PCI_DEVICE_ID_SI_5518	658,24899
#define PCI_DEVICE_ID_SI_5571	659,24937
#define PCI_DEVICE_ID_SI_5581	660,24975
#define PCI_DEVICE_ID_SI_5582	661,25013
#define PCI_DEVICE_ID_SI_5591	662,25051
#define PCI_DEVICE_ID_SI_5596	663,25089
#define PCI_DEVICE_ID_SI_5597	664,25127
#define PCI_DEVICE_ID_SI_5598	665,25165
#define PCI_DEVICE_ID_SI_5600	666,25203
#define PCI_DEVICE_ID_SI_7012	667,25241
#define PCI_DEVICE_ID_SI_7013	668,25279
#define PCI_DEVICE_ID_SI_7016	669,25317
#define PCI_DEVICE_ID_SI_7018	670,25355
#define PCI_VENDOR_ID_HP	672,25394
#define PCI_DEVICE_ID_HP_VISUALIZE_EG	673,25427
#define PCI_DEVICE_ID_HP_VISUALIZE_FX6	674,25472
#define PCI_DEVICE_ID_HP_VISUALIZE_FX4	675,25518
#define PCI_DEVICE_ID_HP_VISUALIZE_FX2	676,25564
#define PCI_DEVICE_ID_HP_TACHYON	677,25610
#define PCI_DEVICE_ID_HP_TACHLITE	678,25650
#define PCI_DEVICE_ID_HP_J2585A	679,25691
#define PCI_DEVICE_ID_HP_J2585B	680,25731
#define PCI_DEVICE_ID_HP_J2973A	681,25771
#define PCI_DEVICE_ID_HP_J2970A	682,25811
#define PCI_DEVICE_ID_HP_DIVA	683,25851
#define PCI_DEVICE_ID_HP_DIVA_TOSCA1	684,25889
#define PCI_DEVICE_ID_HP_DIVA_TOSCA2	685,25933
#define PCI_DEVICE_ID_HP_DIVA_MAESTRO	686,25977
#define PCI_DEVICE_ID_HP_REO_IOC	687,26022
#define PCI_DEVICE_ID_HP_VISUALIZE_FXE	688,26062
#define PCI_DEVICE_ID_HP_DIVA_HALFDOME	689,26108
#define PCI_DEVICE_ID_HP_DIVA_KEYSTONE	690,26154
#define PCI_DEVICE_ID_HP_DIVA_POWERBAR	691,26200
#define PCI_DEVICE_ID_HP_ZX1_IOC	692,26246
#define PCI_DEVICE_ID_HP_PCIX_LBA	693,26286
#define PCI_DEVICE_ID_HP_SX1000_IOC	694,26327
#define PCI_DEVICE_ID_HP_DIVA_EVEREST	695,26370
#define PCI_DEVICE_ID_HP_DIVA_AUX	696,26415
#define PCI_DEVICE_ID_HP_DIVA_RMP3	697,26456
#define PCI_DEVICE_ID_HP_DIVA_HURRICANE	698,26498
#define PCI_DEVICE_ID_HP_CISSA	699,26545
#define PCI_DEVICE_ID_HP_CISSC	700,26584
#define PCI_DEVICE_ID_HP_CISSD	701,26623
#define PCI_DEVICE_ID_HP_ZX2_IOC	702,26662
#define PCI_VENDOR_ID_PCTECH	704,26703
#define PCI_DEVICE_ID_PCTECH_RZ1000	705,26740
#define PCI_DEVICE_ID_PCTECH_RZ1001	706,26783
#define PCI_DEVICE_ID_PCTECH_SAMURAI_IDE 707,26826
#define PCI_VENDOR_ID_ASUSTEK	709,26875
#define PCI_DEVICE_ID_ASUSTEK_0675	710,26913
#define PCI_VENDOR_ID_DPT	712,26956
#define PCI_DEVICE_ID_DPT	713,26990
#define PCI_VENDOR_ID_OPTI	715,27025
#define PCI_DEVICE_ID_OPTI_82C558	716,27060
#define PCI_DEVICE_ID_OPTI_82C621	717,27101
#define PCI_DEVICE_ID_OPTI_82C700	718,27142
#define PCI_DEVICE_ID_OPTI_82C825	719,27183
#define PCI_VENDOR_ID_ELSA	721,27225
#define PCI_DEVICE_ID_ELSA_MICROLINK	722,27260
#define PCI_DEVICE_ID_ELSA_QS3000	723,27304
#define PCI_VENDOR_ID_BUSLOGIC	726,27347
#define PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER_NC 727,27392
#define PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER 728,27445
#define PCI_DEVICE_ID_BUSLOGIC_FLASHPOINT 729,27498
#define PCI_VENDOR_ID_TI	731,27552
#define PCI_DEVICE_ID_TI_TVP4020	732,27585
#define PCI_DEVICE_ID_TI_4450	733,27625
#define PCI_DEVICE_ID_TI_XX21_XX11	734,27663
#define PCI_DEVICE_ID_TI_XX21_XX11_SD	735,27705
#define PCI_DEVICE_ID_TI_X515	736,27750
#define PCI_DEVICE_ID_TI_XX12	737,27788
#define PCI_DEVICE_ID_TI_1130	738,27826
#define PCI_DEVICE_ID_TI_1031	739,27864
#define PCI_DEVICE_ID_TI_1131	740,27902
#define PCI_DEVICE_ID_TI_1250	741,27940
#define PCI_DEVICE_ID_TI_1220	742,27978
#define PCI_DEVICE_ID_TI_1221	743,28016
#define PCI_DEVICE_ID_TI_1210	744,28054
#define PCI_DEVICE_ID_TI_1450	745,28092
#define PCI_DEVICE_ID_TI_1225	746,28130
#define PCI_DEVICE_ID_TI_1251A	747,28168
#define PCI_DEVICE_ID_TI_1211	748,28207
#define PCI_DEVICE_ID_TI_1251B	749,28245
#define PCI_DEVICE_ID_TI_4410	750,28284
#define PCI_DEVICE_ID_TI_4451	751,28322
#define PCI_DEVICE_ID_TI_4510	752,28360
#define PCI_DEVICE_ID_TI_4520	753,28398
#define PCI_DEVICE_ID_TI_7510	754,28436
#define PCI_DEVICE_ID_TI_7610	755,28474
#define PCI_DEVICE_ID_TI_7410	756,28512
#define PCI_DEVICE_ID_TI_1410	757,28550
#define PCI_DEVICE_ID_TI_1420	758,28588
#define PCI_DEVICE_ID_TI_1451A	759,28626
#define PCI_DEVICE_ID_TI_1620	760,28665
#define PCI_DEVICE_ID_TI_1520	761,28703
#define PCI_DEVICE_ID_TI_1510	762,28741
#define PCI_DEVICE_ID_TI_X620	763,28779
#define PCI_DEVICE_ID_TI_X420	764,28817
#define PCI_VENDOR_ID_SONY	766,28856
#define PCI_VENDOR_ID_WINBOND2	770,28947
#define PCI_DEVICE_ID_WINBOND2_89C940F	771,28986
#define PCI_DEVICE_ID_WINBOND2_6692	772,29032
#define PCI_VENDOR_ID_ANIGMA	774,29076
#define PCI_DEVICE_ID_ANIGMA_MC145575	775,29113
#define PCI_VENDOR_ID_EFAR	777,29161
#define PCI_DEVICE_ID_EFAR_SLC90E66_1	778,29196
#define PCI_DEVICE_ID_EFAR_SLC90E66_3	779,29241
#define PCI_VENDOR_ID_MOTOROLA	781,29287
#define PCI_DEVICE_ID_MOTOROLA_MPC105	782,29326
#define PCI_DEVICE_ID_MOTOROLA_MPC106	783,29371
#define PCI_DEVICE_ID_MOTOROLA_MPC107	784,29416
#define PCI_DEVICE_ID_MOTOROLA_RAVEN	785,29461
#define PCI_DEVICE_ID_MOTOROLA_FALCON	786,29505
#define PCI_DEVICE_ID_MOTOROLA_HAWK	787,29550
#define PCI_DEVICE_ID_MOTOROLA_HARRIER	788,29593
#define PCI_DEVICE_ID_MOTOROLA_MPC5200	789,29639
#define PCI_DEVICE_ID_MOTOROLA_MPC5200B	790,29685
#define PCI_VENDOR_ID_PROMISE	792,29733
#define PCI_DEVICE_ID_PROMISE_20265	793,29771
#define PCI_DEVICE_ID_PROMISE_20267	794,29814
#define PCI_DEVICE_ID_PROMISE_20246	795,29857
#define PCI_DEVICE_ID_PROMISE_20262	796,29900
#define PCI_DEVICE_ID_PROMISE_20263	797,29943
#define PCI_DEVICE_ID_PROMISE_20268	798,29986
#define PCI_DEVICE_ID_PROMISE_20269	799,30029
#define PCI_DEVICE_ID_PROMISE_20270	800,30072
#define PCI_DEVICE_ID_PROMISE_20271	801,30115
#define PCI_DEVICE_ID_PROMISE_20275	802,30158
#define PCI_DEVICE_ID_PROMISE_20276	803,30201
#define PCI_DEVICE_ID_PROMISE_20277	804,30244
#define PCI_VENDOR_ID_UMC	807,30289
#define PCI_DEVICE_ID_UMC_UM8673F	808,30323
#define PCI_DEVICE_ID_UMC_UM8886BF	809,30364
#define PCI_DEVICE_ID_UMC_UM8886A	810,30406
#define PCI_VENDOR_ID_MYLEX	813,30449
#define PCI_DEVICE_ID_MYLEX_DAC960_P	814,30485
#define PCI_DEVICE_ID_MYLEX_DAC960_PD	815,30529
#define PCI_DEVICE_ID_MYLEX_DAC960_PG	816,30574
#define PCI_DEVICE_ID_MYLEX_DAC960_LA	817,30619
#define PCI_DEVICE_ID_MYLEX_DAC960_LP	818,30664
#define PCI_DEVICE_ID_MYLEX_DAC960_BA	819,30709
#define PCI_DEVICE_ID_MYLEX_DAC960_GEM	820,30754
#define PCI_VENDOR_ID_APPLE	823,30802
#define PCI_DEVICE_ID_APPLE_BANDIT	824,30838
#define PCI_DEVICE_ID_APPLE_HYDRA	825,30880
#define PCI_DEVICE_ID_APPLE_UNI_N_FW	826,30921
#define PCI_DEVICE_ID_APPLE_UNI_N_AGP	827,30965
#define PCI_DEVICE_ID_APPLE_UNI_N_GMAC	828,31010
#define PCI_DEVICE_ID_APPLE_UNI_N_GMACP	829,31056
#define PCI_DEVICE_ID_APPLE_UNI_N_AGP_P	830,31103
#define PCI_DEVICE_ID_APPLE_UNI_N_AGP15	831,31150
#define PCI_DEVICE_ID_APPLE_UNI_N_PCI15	832,31197
#define PCI_DEVICE_ID_APPLE_UNI_N_GMAC2	833,31244
#define PCI_DEVICE_ID_APPLE_UNI_N_ATA	834,31291
#define PCI_DEVICE_ID_APPLE_UNI_N_AGP2	835,31336
#define PCI_DEVICE_ID_APPLE_IPID_ATA100	836,31382
#define PCI_DEVICE_ID_APPLE_K2_ATA100	837,31429
#define PCI_DEVICE_ID_APPLE_U3_AGP	838,31474
#define PCI_DEVICE_ID_APPLE_K2_GMAC	839,31516
#define PCI_DEVICE_ID_APPLE_SH_ATA 840,31559
#define PCI_DEVICE_ID_APPLE_SH_SUNGEM 841,31606
#define PCI_DEVICE_ID_APPLE_U3L_AGP	842,31653
#define PCI_DEVICE_ID_APPLE_U3H_AGP	843,31696
#define PCI_DEVICE_ID_APPLE_IPID2_AGP	844,31739
#define PCI_DEVICE_ID_APPLE_IPID2_ATA	845,31784
#define PCI_DEVICE_ID_APPLE_IPID2_FW	846,31829
#define PCI_DEVICE_ID_APPLE_IPID2_GMAC	847,31873
#define PCI_DEVICE_ID_APPLE_TIGON3	848,31919
#define PCI_VENDOR_ID_YAMAHA	850,31962
#define PCI_DEVICE_ID_YAMAHA_724	851,31999
#define PCI_DEVICE_ID_YAMAHA_724F	852,32039
#define PCI_DEVICE_ID_YAMAHA_740	853,32080
#define PCI_DEVICE_ID_YAMAHA_740C	854,32120
#define PCI_DEVICE_ID_YAMAHA_744	855,32161
#define PCI_DEVICE_ID_YAMAHA_754	856,32201
#define PCI_VENDOR_ID_QLOGIC	859,32243
#define PCI_DEVICE_ID_QLOGIC_ISP10160	860,32280
#define PCI_DEVICE_ID_QLOGIC_ISP1020	861,32325
#define PCI_DEVICE_ID_QLOGIC_ISP1080	862,32369
#define PCI_DEVICE_ID_QLOGIC_ISP12160	863,32413
#define PCI_DEVICE_ID_QLOGIC_ISP1240	864,32458
#define PCI_DEVICE_ID_QLOGIC_ISP1280	865,32502
#define PCI_DEVICE_ID_QLOGIC_ISP2100	866,32546
#define PCI_DEVICE_ID_QLOGIC_ISP2200	867,32590
#define PCI_DEVICE_ID_QLOGIC_ISP2300	868,32634
#define PCI_DEVICE_ID_QLOGIC_ISP2312	869,32678
#define PCI_DEVICE_ID_QLOGIC_ISP2322	870,32722
#define PCI_DEVICE_ID_QLOGIC_ISP6312	871,32766
#define PCI_DEVICE_ID_QLOGIC_ISP6322	872,32810
#define PCI_DEVICE_ID_QLOGIC_ISP2422	873,32854
#define PCI_DEVICE_ID_QLOGIC_ISP2432	874,32898
#define PCI_DEVICE_ID_QLOGIC_ISP2512	875,32942
#define PCI_DEVICE_ID_QLOGIC_ISP2522	876,32986
#define PCI_DEVICE_ID_QLOGIC_ISP5422	877,33030
#define PCI_DEVICE_ID_QLOGIC_ISP5432	878,33074
#define PCI_VENDOR_ID_CYRIX	880,33119
#define PCI_DEVICE_ID_CYRIX_5510	881,33155
#define PCI_DEVICE_ID_CYRIX_PCI_MASTER	882,33195
#define PCI_DEVICE_ID_CYRIX_5520	883,33241
#define PCI_DEVICE_ID_CYRIX_5530_LEGACY	884,33281
#define PCI_DEVICE_ID_CYRIX_5530_IDE	885,33328
#define PCI_DEVICE_ID_CYRIX_5530_AUDIO	886,33372
#define PCI_DEVICE_ID_CYRIX_5530_VIDEO	887,33418
#define PCI_VENDOR_ID_CONTAQ	891,33467
#define PCI_DEVICE_ID_CONTAQ_82C693	892,33504
#define PCI_VENDOR_ID_OLICOM	895,33549
#define PCI_DEVICE_ID_OLICOM_OC2325	896,33586
#define PCI_DEVICE_ID_OLICOM_OC2183	897,33629
#define PCI_DEVICE_ID_OLICOM_OC2326	898,33672
#define PCI_VENDOR_ID_SUN	900,33716
#define PCI_DEVICE_ID_SUN_EBUS	901,33750
#define PCI_DEVICE_ID_SUN_HAPPYMEAL	902,33789
#define PCI_DEVICE_ID_SUN_RIO_EBUS	903,33832
#define PCI_DEVICE_ID_SUN_RIO_GEM	904,33874
#define PCI_DEVICE_ID_SUN_RIO_1394	905,33915
#define PCI_DEVICE_ID_SUN_RIO_USB	906,33957
#define PCI_DEVICE_ID_SUN_GEM	907,33998
#define PCI_DEVICE_ID_SUN_SIMBA	908,34036
#define PCI_DEVICE_ID_SUN_PBM	909,34076
#define PCI_DEVICE_ID_SUN_SCHIZO	910,34114
#define PCI_DEVICE_ID_SUN_SABRE	911,34154
#define PCI_DEVICE_ID_SUN_HUMMINGBIRD	912,34194
#define PCI_DEVICE_ID_SUN_TOMATILLO	913,34239
#define PCI_DEVICE_ID_SUN_CASSINI	914,34282
#define PCI_VENDOR_ID_CMD	916,34324
#define PCI_DEVICE_ID_CMD_643	917,34358
#define PCI_DEVICE_ID_CMD_646	918,34396
#define PCI_DEVICE_ID_CMD_648	919,34434
#define PCI_DEVICE_ID_CMD_649	920,34472
#define PCI_DEVICE_ID_SII_680	922,34511
#define PCI_DEVICE_ID_SII_3112	923,34549
#define PCI_DEVICE_ID_SII_1210SA	924,34588
#define PCI_VENDOR_ID_BROOKTREE	927,34630
#define PCI_DEVICE_ID_BROOKTREE_878	928,34670
#define PCI_DEVICE_ID_BROOKTREE_879	929,34713
#define PCI_VENDOR_ID_SGI	932,34758
#define PCI_DEVICE_ID_SGI_IOC3	933,34792
#define PCI_DEVICE_ID_SGI_IOC4	934,34831
#define PCI_VENDOR_ID_SGI_LITHIUM	935,34870
#define PCI_VENDOR_ID_WINBOND	938,34913
#define PCI_DEVICE_ID_WINBOND_82C105	939,34951
#define PCI_DEVICE_ID_WINBOND_83C553	940,34995
#define PCI_VENDOR_ID_PLX	943,35041
#define PCI_DEVICE_ID_PLX_R685	944,35075
#define PCI_DEVICE_ID_PLX_ROMULUS	945,35114
#define PCI_DEVICE_ID_PLX_SPCOM800	946,35155
#define PCI_DEVICE_ID_PLX_1077	947,35197
#define PCI_DEVICE_ID_PLX_SPCOM200	948,35236
#define PCI_DEVICE_ID_PLX_DJINN_ITOO	949,35278
#define PCI_DEVICE_ID_PLX_R753	950,35322
#define PCI_DEVICE_ID_PLX_OLITEC	951,35361
#define PCI_DEVICE_ID_PLX_PCI200SYN	952,35401
#define PCI_DEVICE_ID_PLX_9050	953,35444
#define PCI_DEVICE_ID_PLX_9080	954,35483
#define PCI_DEVICE_ID_PLX_GTEK_SERIAL2	955,35522
#define PCI_VENDOR_ID_MADGE	957,35569
#define PCI_DEVICE_ID_MADGE_MK2	958,35605
#define PCI_VENDOR_ID_3COM	960,35646
#define PCI_DEVICE_ID_3COM_3C985	961,35681
#define PCI_DEVICE_ID_3COM_3C940	962,35721
#define PCI_DEVICE_ID_3COM_3C339	963,35761
#define PCI_DEVICE_ID_3COM_3C359	964,35801
#define PCI_DEVICE_ID_3COM_3C940B	965,35841
#define PCI_DEVICE_ID_3COM_3CR990	966,35882
#define PCI_DEVICE_ID_3COM_3CR990_TX_95	967,35923
#define PCI_DEVICE_ID_3COM_3CR990_TX_97	968,35970
#define PCI_DEVICE_ID_3COM_3CR990B	969,36017
#define PCI_DEVICE_ID_3COM_3CR990_FX	970,36059
#define PCI_DEVICE_ID_3COM_3CR990SVR95	971,36103
#define PCI_DEVICE_ID_3COM_3CR990SVR97	972,36149
#define PCI_DEVICE_ID_3COM_3CR990SVR	973,36195
#define PCI_VENDOR_ID_AL	976,36241
#define PCI_DEVICE_ID_AL_M1533	977,36274
#define PCI_DEVICE_ID_AL_M1535 978,36313
#define PCI_DEVICE_ID_AL_M1541	979,36353
#define PCI_DEVICE_ID_AL_M1563	980,36392
#define PCI_DEVICE_ID_AL_M1621	981,36431
#define PCI_DEVICE_ID_AL_M1631	982,36470
#define PCI_DEVICE_ID_AL_M1632	983,36509
#define PCI_DEVICE_ID_AL_M1641	984,36548
#define PCI_DEVICE_ID_AL_M1644	985,36587
#define PCI_DEVICE_ID_AL_M1647	986,36626
#define PCI_DEVICE_ID_AL_M1651	987,36665
#define PCI_DEVICE_ID_AL_M1671	988,36704
#define PCI_DEVICE_ID_AL_M1681	989,36743
#define PCI_DEVICE_ID_AL_M1683	990,36782
#define PCI_DEVICE_ID_AL_M1689	991,36821
#define PCI_DEVICE_ID_AL_M5219	992,36860
#define PCI_DEVICE_ID_AL_M5228	993,36899
#define PCI_DEVICE_ID_AL_M5229	994,36938
#define PCI_DEVICE_ID_AL_M5451	995,36977
#define PCI_DEVICE_ID_AL_M7101	996,37016
#define PCI_VENDOR_ID_NEOMAGIC	1000,37058
#define PCI_DEVICE_ID_NEOMAGIC_NM256AV_AUDIO 1001,37097
#define PCI_DEVICE_ID_NEOMAGIC_NM256ZX_AUDIO 1002,37149
#define PCI_DEVICE_ID_NEOMAGIC_NM256XL_PLUS_AUDIO 1003,37201
#define PCI_VENDOR_ID_TCONRAD	1006,37260
#define PCI_DEVICE_ID_TCONRAD_TOKENRING	1007,37298
#define PCI_VENDOR_ID_NVIDIA	1010,37347
#define PCI_DEVICE_ID_NVIDIA_TNT	1011,37385
#define PCI_DEVICE_ID_NVIDIA_TNT2	1012,37426
#define PCI_DEVICE_ID_NVIDIA_UTNT2	1013,37468
#define PCI_DEVICE_ID_NVIDIA_TNT_UNKNOWN 1014,37511
#define PCI_DEVICE_ID_NVIDIA_VTNT2	1015,37566
#define PCI_DEVICE_ID_NVIDIA_UVTNT2	1016,37609
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SMBUS	1017,37653
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_IDE	1018,37708
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SATA	1019,37761
#define PCI_DEVICE_ID_NVIDIA_NVENET_10	1020,37815
#define PCI_DEVICE_ID_NVIDIA_NVENET_11	1021,37862
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SATA2	1022,37909
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_ULTRA 1023,37964
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800 1024,38019
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_LE 1025,38074
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_GT 1026,38129
#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_4000 1027,38184
#define PCI_DEVICE_ID_NVIDIA_NFORCE4_SMBUS	1028,38239
#define PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_IDE	1029,38289
#define PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_SATA	1030,38342
#define PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_SATA2	1031,38396
#define PCI_DEVICE_ID_NVIDIA_NVENET_8	1032,38451
#define PCI_DEVICE_ID_NVIDIA_NVENET_9	1033,38497
#define PCI_DEVICE_ID_NVIDIA_CK804_AUDIO	1034,38543
#define PCI_DEVICE_ID_NVIDIA_CK804_PCIE	1035,38591
#define PCI_DEVICE_ID_NVIDIA_NFORCE2_SMBUS	1036,38639
#define PCI_DEVICE_ID_NVIDIA_NFORCE2_IDE	1037,38689
#define PCI_DEVICE_ID_NVIDIA_NVENET_2	1038,38737
#define PCI_DEVICE_ID_NVIDIA_MCP2_MODEM	1039,38783
#define PCI_DEVICE_ID_NVIDIA_MCP2_AUDIO	1040,38831
#define PCI_DEVICE_ID_NVIDIA_NFORCE2S_SMBUS	1041,38879
#define PCI_DEVICE_ID_NVIDIA_NFORCE2S_IDE	1042,38930
#define PCI_DEVICE_ID_NVIDIA_NVENET_4	1043,38979
#define PCI_DEVICE_ID_NVIDIA_MCP2S_MODEM	1044,39025
#define PCI_DEVICE_ID_NVIDIA_CK8_AUDIO	1045,39073
#define PCI_DEVICE_ID_NVIDIA_NVENET_5	1046,39120
#define PCI_DEVICE_ID_NVIDIA_NFORCE2S_SATA	1047,39166
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_7800_GT 1048,39216
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_7800_GTX	1049,39270
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_7800 1050,39323
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_7800_GTX 1051,39377
#define PCI_DEVICE_ID_NVIDIA_ITNT2	1052,39433
#define PCI_DEVICE_ID_GEFORCE_6800A 1053,39476
#define PCI_DEVICE_ID_GEFORCE_6800A_LE 1054,39531
#define PCI_DEVICE_ID_GEFORCE_GO_6800 1055,39586
#define PCI_DEVICE_ID_GEFORCE_GO_6800_ULTRA 1056,39641
#define PCI_DEVICE_ID_QUADRO_FX_GO1400 1057,39696
#define PCI_DEVICE_ID_QUADRO_FX_1400 1058,39751
#define PCI_DEVICE_ID_NVIDIA_NFORCE3	1059,39806
#define PCI_DEVICE_ID_NVIDIA_NFORCE3_SMBUS	1060,39851
#define PCI_DEVICE_ID_NVIDIA_NFORCE3_IDE	1061,39901
#define PCI_DEVICE_ID_NVIDIA_NVENET_3	1062,39949
#define PCI_DEVICE_ID_NVIDIA_MCP3_MODEM	1063,39995
#define PCI_DEVICE_ID_NVIDIA_MCP3_AUDIO	1064,40043
#define PCI_DEVICE_ID_NVIDIA_NVENET_7	1065,40091
#define PCI_DEVICE_ID_NVIDIA_NFORCE3S	1066,40137
#define PCI_DEVICE_ID_NVIDIA_NFORCE3S_SATA	1067,40183
#define PCI_DEVICE_ID_NVIDIA_NFORCE3S_SMBUS	1068,40233
#define PCI_DEVICE_ID_NVIDIA_NFORCE3S_IDE	1069,40284
#define PCI_DEVICE_ID_NVIDIA_NVENET_6	1070,40333
#define PCI_DEVICE_ID_NVIDIA_CK8S_AUDIO	1071,40379
#define PCI_DEVICE_ID_NVIDIA_NFORCE3S_SATA2	1072,40427
#define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6800_ALT1 1073,40478
#define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6600_ALT1 1074,40533
#define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6600_ALT2 1075,40588
#define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6200_ALT1 1076,40643
#define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6800_GT 1077,40698
#define PCIE_DEVICE_ID_NVIDIA_QUADRO_NVS280	1078,40753
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_SDR	1079,40804
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_DDR	1080,40852
#define PCI_DEVICE_ID_NVIDIA_QUADRO	1081,40900
#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_MX	1082,40944
#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_MX2	1083,40992
#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_GO	1084,41041
#define PCI_DEVICE_ID_NVIDIA_QUADRO2_MXR	1085,41089
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6600_GT	1086,41137
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6600	1087,41189
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6610_XL	1088,41238
#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_540	1089,41290
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6200	1090,41340
#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_GTS	1091,41389
#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_GTS2	1092,41438
#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_ULTRA	1093,41488
#define PCI_DEVICE_ID_NVIDIA_QUADRO2_PRO	1094,41539
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6200_TURBOCACHE 1095,41587
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6200 1096,41647
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6250 1097,41702
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6200_1 1098,41757
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6250_1 1099,41812
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_460	1100,41867
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440	1101,41919
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_420	1102,41971
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440_SE	1103,42023
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_440_GO	1104,42078
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_420_GO	1105,42130
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_420_GO_M32 1106,42182
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_460_GO 1107,42238
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_500XGL	1108,42293
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_440_GO_M64 1109,42344
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_200	1110,42400
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_550XGL	1111,42448
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_500_GOGL	1112,42499
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_410_GO_M16 1113,42552
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440_8X 1114,42608
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440SE_8X 1115,42663
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_420_8X 1116,42720
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_4000 1117,42775
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_448_GO 1118,42830
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_488_GO 1119,42885
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_580_XGL 1120,42940
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_MAC 1121,42995
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_280_NVS 1122,43050
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_380_XGL 1123,43105
#define PCI_DEVICE_ID_NVIDIA_IGEFORCE2	1124,43160
#define PCI_DEVICE_ID_NVIDIA_NFORCE	1125,43207
#define PCI_DEVICE_ID_NVIDIA_MCP1_AUDIO	1126,43251
#define PCI_DEVICE_ID_NVIDIA_NFORCE_SMBUS	1127,43299
#define PCI_DEVICE_ID_NVIDIA_NFORCE_IDE	1128,43348
#define PCI_DEVICE_ID_NVIDIA_MCP1_MODEM	1129,43396
#define PCI_DEVICE_ID_NVIDIA_NVENET_1	1130,43444
#define PCI_DEVICE_ID_NVIDIA_NFORCE2	1131,43490
#define PCI_DEVICE_ID_NVIDIA_GEFORCE3	1132,43535
#define PCI_DEVICE_ID_NVIDIA_GEFORCE3_1	1133,43581
#define PCI_DEVICE_ID_NVIDIA_GEFORCE3_2	1134,43629
#define PCI_DEVICE_ID_NVIDIA_QUADRO_DDC	1135,43677
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B 1136,43725
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B_LE 1137,43780
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B_GT 1138,43835
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4600	1139,43890
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4400	1140,43943
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4200	1141,43996
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_900XGL	1142,44049
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_750XGL	1143,44100
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_700XGL	1144,44151
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SMBUS	1145,44202
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_IDE	1146,44257
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SATA	1147,44310
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SATA2	1148,44364
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SMBUS	1149,44419
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_IDE	1150,44474
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SATA	1151,44527
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SATA2	1152,44581
#define PCI_DEVICE_ID_NVIDIA_NVENET_12	1153,44636
#define PCI_DEVICE_ID_NVIDIA_NVENET_13	1154,44683
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800	1155,44730
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800_8X 1156,44783
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800SE 1157,44842
#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_4200_GO 1158,44901
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_980_XGL 1159,44960
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_780_XGL 1160,45019
#define PCI_DEVICE_ID_NVIDIA_QUADRO4_700_GOGL 1161,45078
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5800_ULTRA 1162,45137
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5800 1163,45196
#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_2000 1164,45255
#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_1000 1165,45314
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600_ULTRA 1166,45373
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600 1167,45432
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600SE 1168,45491
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5600 1169,45550
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5650 1170,45609
#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_GO700 1171,45668
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200 1172,45727
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200_ULTRA 1173,45786
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200_1 1174,45845
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200SE 1175,45904
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5200 1176,45963
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5250 1177,46022
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5500 1178,46081
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5100 1179,46140
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5250_32 1180,46199
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO_5200	1181,46258
#define PCI_DEVICE_ID_NVIDIA_QUADRO_NVS_280_PCI 1182,46317
#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_500 1183,46376
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5300 1184,46435
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5100 1185,46494
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900_ULTRA 1186,46553
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900 1187,46612
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900XT 1188,46671
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5950_ULTRA 1189,46730
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900ZT 1190,46789
#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_3000 1191,46848
#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_700 1192,46907
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700_ULTRA 1193,46966
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700 1194,47025
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700LE 1195,47084
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700VE 1196,47143
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5700_1 1197,47202
#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5700_2 1198,47261
#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_GO1000 1199,47320
#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_1100 1200,47379
#define PCI_DEVICE_ID_NVIDIA_NVENET_14 1201,47438
#define PCI_DEVICE_ID_NVIDIA_NVENET_15 1202,47497
#define PCI_DEVICE_ID_NVIDIA_NVENET_16 1203,47556
#define PCI_DEVICE_ID_NVIDIA_NVENET_17 1204,47615
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA 1205,47674
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_IDE 1206,47733
#define PCI_DEVICE_ID_NVIDIA_NVENET_18 1207,47792
#define PCI_DEVICE_ID_NVIDIA_NVENET_19 1208,47851
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA2 1209,47910
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA3 1210,47969
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP65_IDE	1211,48028
#define PCI_DEVICE_ID_NVIDIA_NVENET_20 1212,48085
#define PCI_DEVICE_ID_NVIDIA_NVENET_21 1213,48144
#define PCI_DEVICE_ID_NVIDIA_NVENET_22 1214,48203
#define PCI_DEVICE_ID_NVIDIA_NVENET_23 1215,48262
#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP67_IDE 1216,48321
#define PCI_VENDOR_ID_IMS	1218,48381
#define PCI_DEVICE_ID_IMS_TT128	1219,48415
#define PCI_DEVICE_ID_IMS_TT3D	1220,48455
#define PCI_VENDOR_ID_INTERG	1225,48498
#define PCI_DEVICE_ID_INTERG_1682	1226,48535
#define PCI_DEVICE_ID_INTERG_2000	1227,48576
#define PCI_DEVICE_ID_INTERG_2010	1228,48617
#define PCI_DEVICE_ID_INTERG_5000	1229,48658
#define PCI_DEVICE_ID_INTERG_5050	1230,48699
#define PCI_VENDOR_ID_REALTEK	1232,48741
#define PCI_DEVICE_ID_REALTEK_8139	1233,48779
#define PCI_VENDOR_ID_XILINX	1235,48822
#define PCI_DEVICE_ID_RME_DIGI96	1236,48859
#define PCI_DEVICE_ID_RME_DIGI96_8	1237,48899
#define PCI_DEVICE_ID_RME_DIGI96_8_PRO	1238,48941
#define PCI_DEVICE_ID_RME_DIGI96_8_PAD_OR_PST 1239,48987
#define PCI_DEVICE_ID_XILINX_HAMMERFALL_DSP 1240,49040
#define PCI_DEVICE_ID_XILINX_HAMMERFALL_DSP_MADI 1241,49091
#define PCI_VENDOR_ID_INIT	1244,49149
#define PCI_VENDOR_ID_CREATIVE	1246,49185
#define PCI_DEVICE_ID_CREATIVE_EMU10K1	1247,49248
#define PCI_VENDOR_ID_ECTIVA	1249,49295
#define PCI_DEVICE_ID_ECTIVA_EV1938	1250,49358
#define PCI_VENDOR_ID_TTI	1252,49402
#define PCI_DEVICE_ID_TTI_HPT343	1253,49436
#define PCI_DEVICE_ID_TTI_HPT366	1254,49476
#define PCI_DEVICE_ID_TTI_HPT372	1255,49516
#define PCI_DEVICE_ID_TTI_HPT302	1256,49556
#define PCI_DEVICE_ID_TTI_HPT371	1257,49596
#define PCI_DEVICE_ID_TTI_HPT374	1258,49636
#define PCI_DEVICE_ID_TTI_HPT372N	1259,49676
#define PCI_VENDOR_ID_VIA	1261,49751
#define PCI_DEVICE_ID_VIA_8763_0	1262,49785
#define PCI_DEVICE_ID_VIA_8380_0	1263,49825
#define PCI_DEVICE_ID_VIA_3238_0	1264,49865
#define PCI_DEVICE_ID_VIA_PT880	1265,49905
#define PCI_DEVICE_ID_VIA_PT880ULTRA	1266,49945
#define PCI_DEVICE_ID_VIA_PX8X0_0	1267,49989
#define PCI_DEVICE_ID_VIA_3269_0	1268,50030
#define PCI_DEVICE_ID_VIA_K8T800PRO_0	1269,50070
#define PCI_DEVICE_ID_VIA_3296_0	1270,50115
#define PCI_DEVICE_ID_VIA_8363_0	1271,50155
#define PCI_DEVICE_ID_VIA_P4M800CE	1272,50195
#define PCI_DEVICE_ID_VIA_8371_0	1273,50237
#define PCI_DEVICE_ID_VIA_8501_0	1274,50277
#define PCI_DEVICE_ID_VIA_82C561	1275,50317
#define PCI_DEVICE_ID_VIA_82C586_1	1276,50357
#define PCI_DEVICE_ID_VIA_82C576	1277,50399
#define PCI_DEVICE_ID_VIA_SATA_EIDE	1278,50439
#define PCI_DEVICE_ID_VIA_82C586_0	1279,50482
#define PCI_DEVICE_ID_VIA_82C596	1280,50524
#define PCI_DEVICE_ID_VIA_82C597_0	1281,50564
#define PCI_DEVICE_ID_VIA_82C598_0	1282,50606
#define PCI_DEVICE_ID_VIA_8601_0	1283,50648
#define PCI_DEVICE_ID_VIA_8605_0	1284,50688
#define PCI_DEVICE_ID_VIA_82C686	1285,50728
#define PCI_DEVICE_ID_VIA_82C691_0	1286,50768
#define PCI_DEVICE_ID_VIA_82C576_1	1287,50810
#define PCI_DEVICE_ID_VIA_82C586_2	1288,50852
#define PCI_DEVICE_ID_VIA_82C586_3	1289,50894
#define PCI_DEVICE_ID_VIA_82C596_3	1290,50936
#define PCI_DEVICE_ID_VIA_82C596B_3	1291,50978
#define PCI_DEVICE_ID_VIA_82C686_4	1292,51021
#define PCI_DEVICE_ID_VIA_82C686_5	1293,51063
#define PCI_DEVICE_ID_VIA_8233_5	1294,51105
#define PCI_DEVICE_ID_VIA_8233_0	1295,51145
#define PCI_DEVICE_ID_VIA_8633_0	1296,51185
#define PCI_DEVICE_ID_VIA_8367_0	1297,51225
#define PCI_DEVICE_ID_VIA_8653_0	1298,51265
#define PCI_DEVICE_ID_VIA_8622	1299,51305
#define PCI_DEVICE_ID_VIA_8235_USB_2	1300,51344
#define PCI_DEVICE_ID_VIA_8233C_0	1301,51388
#define PCI_DEVICE_ID_VIA_8361	1302,51429
#define PCI_DEVICE_ID_VIA_XM266	1303,51468
#define PCI_DEVICE_ID_VIA_612X	1304,51508
#define PCI_DEVICE_ID_VIA_862X_0	1305,51547
#define PCI_DEVICE_ID_VIA_8753_0	1306,51587
#define PCI_DEVICE_ID_VIA_8233A	1307,51627
#define PCI_DEVICE_ID_VIA_8703_51_0	1308,51667
#define PCI_DEVICE_ID_VIA_8237_SATA	1309,51710
#define PCI_DEVICE_ID_VIA_XN266	1310,51753
#define PCI_DEVICE_ID_VIA_6410	1311,51793
#define PCI_DEVICE_ID_VIA_8754C_0	1312,51832
#define PCI_DEVICE_ID_VIA_8235	1313,51873
#define PCI_DEVICE_ID_VIA_8385_0	1314,51912
#define PCI_DEVICE_ID_VIA_8377_0	1315,51952
#define PCI_DEVICE_ID_VIA_8378_0	1316,51992
#define PCI_DEVICE_ID_VIA_8783_0	1317,52032
#define PCI_DEVICE_ID_VIA_8237	1318,52072
#define PCI_DEVICE_ID_VIA_8251	1319,52111
#define PCI_DEVICE_ID_VIA_8237A	1320,52150
#define PCI_DEVICE_ID_VIA_8231	1321,52190
#define PCI_DEVICE_ID_VIA_8231_4	1322,52229
#define PCI_DEVICE_ID_VIA_8365_1	1323,52269
#define PCI_DEVICE_ID_VIA_CX700	1324,52309
#define PCI_DEVICE_ID_VIA_8371_1	1325,52349
#define PCI_DEVICE_ID_VIA_82C598_1	1326,52389
#define PCI_DEVICE_ID_VIA_838X_1	1327,52431
#define PCI_DEVICE_ID_VIA_83_87XX_1	1328,52471
#define PCI_VENDOR_ID_SIEMENS 1330,52515
#define PCI_DEVICE_ID_SIEMENS_DSCC4 1331,52562
#define PCI_VENDOR_ID_VORTEX	1334,52611
#define PCI_DEVICE_ID_VORTEX_GDT60x0	1335,52648
#define PCI_DEVICE_ID_VORTEX_GDT6000B	1336,52692
#define PCI_DEVICE_ID_VORTEX_GDT6x10	1337,52737
#define PCI_DEVICE_ID_VORTEX_GDT6x20	1338,52781
#define PCI_DEVICE_ID_VORTEX_GDT6530	1339,52825
#define PCI_DEVICE_ID_VORTEX_GDT6550	1340,52869
#define PCI_DEVICE_ID_VORTEX_GDT6x17	1341,52913
#define PCI_DEVICE_ID_VORTEX_GDT6x27	1342,52957
#define PCI_DEVICE_ID_VORTEX_GDT6537	1343,53001
#define PCI_DEVICE_ID_VORTEX_GDT6557	1344,53045
#define PCI_DEVICE_ID_VORTEX_GDT6x15	1345,53089
#define PCI_DEVICE_ID_VORTEX_GDT6x25	1346,53133
#define PCI_DEVICE_ID_VORTEX_GDT6535	1347,53177
#define PCI_DEVICE_ID_VORTEX_GDT6555	1348,53221
#define PCI_DEVICE_ID_VORTEX_GDT6x17RP	1349,53265
#define PCI_DEVICE_ID_VORTEX_GDT6x27RP	1350,53311
#define PCI_DEVICE_ID_VORTEX_GDT6537RP	1351,53357
#define PCI_DEVICE_ID_VORTEX_GDT6557RP	1352,53403
#define PCI_DEVICE_ID_VORTEX_GDT6x11RP	1353,53449
#define PCI_DEVICE_ID_VORTEX_GDT6x21RP	1354,53495
#define PCI_VENDOR_ID_EF	1356,53542
#define PCI_DEVICE_ID_EF_ATM_FPGA	1357,53575
#define PCI_DEVICE_ID_EF_ATM_ASIC	1358,53616
#define PCI_VENDOR_ID_EF_ATM_LANAI2	1359,53657
#define PCI_VENDOR_ID_EF_ATM_LANAIHB	1360,53700
#define PCI_VENDOR_ID_IDT	1362,53745
#define PCI_DEVICE_ID_IDT_IDT77201	1363,53779
#define PCI_VENDOR_ID_FORE	1365,53822
#define PCI_DEVICE_ID_FORE_PCA200E	1366,53857
#define PCI_VENDOR_ID_PHILIPS	1369,53901
#define PCI_DEVICE_ID_PHILIPS_SAA7146	1370,53939
#define PCI_DEVICE_ID_PHILIPS_SAA9730	1371,53984
#define PCI_VENDOR_ID_EICON	1373,54030
#define PCI_DEVICE_ID_EICON_DIVA20	1374,54066
#define PCI_DEVICE_ID_EICON_DIVA20_U	1375,54108
#define PCI_DEVICE_ID_EICON_DIVA201	1376,54152
#define PCI_DEVICE_ID_EICON_DIVA202	1377,54195
#define PCI_DEVICE_ID_EICON_MAESTRA	1378,54238
#define PCI_DEVICE_ID_EICON_MAESTRAQ	1379,54281
#define PCI_DEVICE_ID_EICON_MAESTRAQ_U	1380,54325
#define PCI_DEVICE_ID_EICON_MAESTRAP	1381,54371
#define PCI_VENDOR_ID_ZIATECH	1383,54416
#define PCI_DEVICE_ID_ZIATECH_5550_HC	1384,54454
#define PCI_VENDOR_ID_SYSKONNECT	1388,54503
#define PCI_DEVICE_ID_SYSKONNECT_TR	1389,54543
#define PCI_DEVICE_ID_SYSKONNECT_GE	1390,54586
#define PCI_DEVICE_ID_SYSKONNECT_YU	1391,54629
#define PCI_DEVICE_ID_SYSKONNECT_9DXX	1392,54672
#define PCI_DEVICE_ID_SYSKONNECT_9MXX	1393,54717
#define PCI_VENDOR_ID_DIGI	1396,54764
#define PCI_DEVICE_ID_DIGI_DF_M_IOM2_E	1397,54799
#define PCI_DEVICE_ID_DIGI_DF_M_E	1398,54845
#define PCI_DEVICE_ID_DIGI_DF_M_IOM2_A	1399,54886
#define PCI_DEVICE_ID_DIGI_DF_M_A	1400,54932
#define PCI_DEVICE_ID_NEO_2DB9 1401,54973
#define PCI_DEVICE_ID_NEO_2DB9PRI 1402,55020
#define PCI_DEVICE_ID_NEO_2RJ45 1403,55067
#define PCI_DEVICE_ID_NEO_2RJ45PRI 1404,55114
#define PCI_VENDOR_ID_XIRCOM	1407,55163
#define PCI_DEVICE_ID_XIRCOM_RBM56G	1408,55200
#define PCI_DEVICE_ID_XIRCOM_X3201_MDM	1409,55243
#define PCI_VENDOR_ID_SERVERWORKS	1412,55291
#define PCI_DEVICE_ID_SERVERWORKS_HE	1413,55334
#define PCI_DEVICE_ID_SERVERWORKS_LE	1414,55380
#define PCI_DEVICE_ID_SERVERWORKS_GCNB_LE 1415,55426
#define PCI_DEVICE_ID_SERVERWORKS_EPB	1416,55475
#define PCI_DEVICE_ID_SERVERWORKS_HT2000_PCIE	1417,55522
#define PCI_DEVICE_ID_SERVERWORKS_OSB4	1418,55575
#define PCI_DEVICE_ID_SERVERWORKS_CSB5	1419,55623
#define PCI_DEVICE_ID_SERVERWORKS_CSB6 1420,55671
#define PCI_DEVICE_ID_SERVERWORKS_HT1000SB 1421,55720
#define PCI_DEVICE_ID_SERVERWORKS_OSB4IDE 1422,55770
#define PCI_DEVICE_ID_SERVERWORKS_CSB5IDE 1423,55819
#define PCI_DEVICE_ID_SERVERWORKS_CSB6IDE 1424,55868
#define PCI_DEVICE_ID_SERVERWORKS_HT1000IDE 1425,55917
#define PCI_DEVICE_ID_SERVERWORKS_CSB6IDE2 1426,55968
#define PCI_DEVICE_ID_SERVERWORKS_CSB6LPC 1427,56018
#define PCI_VENDOR_ID_SBE	1429,56068
#define PCI_DEVICE_ID_SBE_WANXL100	1430,56102
#define PCI_DEVICE_ID_SBE_WANXL200	1431,56144
#define PCI_DEVICE_ID_SBE_WANXL400	1432,56186
#define PCI_VENDOR_ID_TOSHIBA	1434,56229
#define PCI_DEVICE_ID_TOSHIBA_PICCOLO	1435,56267
#define PCI_DEVICE_ID_TOSHIBA_PICCOLO_1	1436,56312
#define PCI_DEVICE_ID_TOSHIBA_PICCOLO_2	1437,56359
#define PCI_DEVICE_ID_TOSHIBA_TOPIC95	1438,56406
#define PCI_DEVICE_ID_TOSHIBA_TOPIC97	1439,56451
#define PCI_DEVICE_ID_TOSHIBA_TOPIC100	1440,56496
#define PCI_VENDOR_ID_TOSHIBA_2	1442,56543
#define PCI_DEVICE_ID_TOSHIBA_TC35815CF	1443,56583
#define PCI_DEVICE_ID_TOSHIBA_TC86C001_MISC	1444,56630
#define PCI_DEVICE_ID_TOSHIBA_SPIDER_NET 1445,56681
#define PCI_VENDOR_ID_RICOH	1447,56730
#define PCI_DEVICE_ID_RICOH_RL5C465	1448,56766
#define PCI_DEVICE_ID_RICOH_RL5C466	1449,56809
#define PCI_DEVICE_ID_RICOH_RL5C475	1450,56852
#define PCI_DEVICE_ID_RICOH_RL5C476	1451,56895
#define PCI_DEVICE_ID_RICOH_RL5C478	1452,56938
#define PCI_DEVICE_ID_RICOH_R5C822	1453,56981
#define PCI_VENDOR_ID_DLINK	1455,57024
#define PCI_DEVICE_ID_DLINK_DGE510T	1456,57060
#define PCI_VENDOR_ID_ARTOP	1458,57104
#define PCI_DEVICE_ID_ARTOP_ATP850UF	1459,57140
#define PCI_DEVICE_ID_ARTOP_ATP860	1460,57184
#define PCI_DEVICE_ID_ARTOP_ATP860R	1461,57226
#define PCI_DEVICE_ID_ARTOP_ATP865	1462,57269
#define PCI_DEVICE_ID_ARTOP_ATP865R	1463,57311
#define PCI_DEVICE_ID_ARTOP_AEC7610	1464,57354
#define PCI_DEVICE_ID_ARTOP_AEC7612UW	1465,57397
#define PCI_DEVICE_ID_ARTOP_AEC7612U	1466,57442
#define PCI_DEVICE_ID_ARTOP_AEC7612S	1467,57486
#define PCI_DEVICE_ID_ARTOP_AEC7612D	1468,57530
#define PCI_DEVICE_ID_ARTOP_AEC7612SUW	1469,57574
#define PCI_DEVICE_ID_ARTOP_8060	1470,57620
#define PCI_VENDOR_ID_ZEITNET	1472,57661
#define PCI_DEVICE_ID_ZEITNET_1221	1473,57699
#define PCI_DEVICE_ID_ZEITNET_1225	1474,57741
#define PCI_VENDOR_ID_FUJITSU_ME	1477,57785
#define PCI_DEVICE_ID_FUJITSU_FS155	1478,57825
#define PCI_DEVICE_ID_FUJITSU_FS50	1479,57868
#define PCI_SUBVENDOR_ID_KEYSPAN	1481,57911
#define PCI_SUBDEVICE_ID_KEYSPAN_SX2	1482,57951
#define PCI_VENDOR_ID_MARVELL	1484,57996
#define PCI_DEVICE_ID_MARVELL_GT64111	1485,58034
#define PCI_DEVICE_ID_MARVELL_GT64260	1486,58079
#define PCI_DEVICE_ID_MARVELL_MV64360	1487,58124
#define PCI_DEVICE_ID_MARVELL_MV64460	1488,58169
#define PCI_VENDOR_ID_V3	1490,58215
#define PCI_DEVICE_ID_V3_V960	1491,58248
#define PCI_DEVICE_ID_V3_V351	1492,58286
#define PCI_VENDOR_ID_ATT	1495,58326
#define PCI_DEVICE_ID_ATT_VENUS_MODEM	1496,58360
#define PCI_VENDOR_ID_SPECIALIX	1499,58406
#define PCI_DEVICE_ID_SPECIALIX_IO8	1500,58446
#define PCI_DEVICE_ID_SPECIALIX_RIO	1501,58489
#define PCI_SUBDEVICE_ID_SPECIALIX_SPEED4 1502,58532
#define PCI_VENDOR_ID_ANALOG_DEVICES	1505,58583
#define PCI_DEVICE_ID_AD1889JS	1506,58627
#define PCI_DEVICE_ID_SEGA_BBA	1509,58668
#define PCI_VENDOR_ID_ZORAN	1511,58708
#define PCI_DEVICE_ID_ZORAN_36057	1512,58744
#define PCI_DEVICE_ID_ZORAN_36120	1513,58785
#define PCI_VENDOR_ID_COMPEX	1516,58828
#define PCI_DEVICE_ID_COMPEX_ENET100VG4	1517,58865
#define PCI_VENDOR_ID_RP	1519,58913
#define PCI_DEVICE_ID_RP32INTF	1520,58946
#define PCI_DEVICE_ID_RP8INTF	1521,58985
#define PCI_DEVICE_ID_RP16INTF	1522,59023
#define PCI_DEVICE_ID_RP4QUAD	1523,59062
#define PCI_DEVICE_ID_RP8OCTA	1524,59100
#define PCI_DEVICE_ID_RP8J	1525,59138
#define PCI_DEVICE_ID_RP4J	1526,59173
#define PCI_DEVICE_ID_RP8SNI	1527,59208
#define PCI_DEVICE_ID_RP16SNI	1528,59246
#define PCI_DEVICE_ID_RPP4	1529,59285
#define PCI_DEVICE_ID_RPP8	1530,59320
#define PCI_DEVICE_ID_RP4M	1531,59355
#define PCI_DEVICE_ID_RP2_232	1532,59390
#define PCI_DEVICE_ID_RP2_422	1533,59428
#define PCI_DEVICE_ID_URP32INTF	1534,59466
#define PCI_DEVICE_ID_URP8INTF	1535,59506
#define PCI_DEVICE_ID_URP16INTF	1536,59545
#define PCI_DEVICE_ID_URP8OCTA	1537,59585
#define PCI_DEVICE_ID_UPCI_RM3_8PORT	1538,59624
#define PCI_DEVICE_ID_UPCI_RM3_4PORT	1539,59675
#define PCI_DEVICE_ID_CRP16INTF	1540,59719
#define PCI_VENDOR_ID_CYCLADES	1542,59767
#define PCI_DEVICE_ID_CYCLOM_Y_Lo	1543,59806
#define PCI_DEVICE_ID_CYCLOM_Y_Hi	1544,59847
#define PCI_DEVICE_ID_CYCLOM_4Y_Lo	1545,59888
#define PCI_DEVICE_ID_CYCLOM_4Y_Hi	1546,59930
#define PCI_DEVICE_ID_CYCLOM_8Y_Lo	1547,59972
#define PCI_DEVICE_ID_CYCLOM_8Y_Hi	1548,60014
#define PCI_DEVICE_ID_CYCLOM_Z_Lo	1549,60056
#define PCI_DEVICE_ID_CYCLOM_Z_Hi	1550,60097
#define PCI_DEVICE_ID_PC300_RX_2	1551,60138
#define PCI_DEVICE_ID_PC300_RX_1	1552,60178
#define PCI_DEVICE_ID_PC300_TE_2	1553,60218
#define PCI_DEVICE_ID_PC300_TE_1	1554,60258
#define PCI_DEVICE_ID_PC300_TE_M_2	1555,60298
#define PCI_DEVICE_ID_PC300_TE_M_1	1556,60340
#define PCI_VENDOR_ID_ESSENTIAL	1558,60383
#define PCI_DEVICE_ID_ESSENTIAL_ROADRUNNER	1559,60423
#define PCI_VENDOR_ID_O2	1561,60474
#define PCI_DEVICE_ID_O2_6729	1562,60507
#define PCI_DEVICE_ID_O2_6730	1563,60545
#define PCI_DEVICE_ID_O2_6832	1564,60583
#define PCI_DEVICE_ID_O2_6836	1565,60621
#define PCI_VENDOR_ID_3DFX	1567,60660
#define PCI_DEVICE_ID_3DFX_VOODOO	1568,60695
#define PCI_DEVICE_ID_3DFX_VOODOO2	1569,60736
#define PCI_DEVICE_ID_3DFX_BANSHEE	1570,60778
#define PCI_DEVICE_ID_3DFX_VOODOO3	1571,60820
#define PCI_DEVICE_ID_3DFX_VOODOO5	1572,60862
#define PCI_VENDOR_ID_AVM	1576,60907
#define PCI_DEVICE_ID_AVM_B1	1577,60941
#define PCI_DEVICE_ID_AVM_C4	1578,60978
#define PCI_DEVICE_ID_AVM_A1	1579,61015
#define PCI_DEVICE_ID_AVM_A1_V2	1580,61052
#define PCI_DEVICE_ID_AVM_C2	1581,61092
#define PCI_DEVICE_ID_AVM_T1	1582,61129
#define PCI_VENDOR_ID_STALLION	1585,61168
#define PCI_VENDOR_ID_AT 1588,61229
#define PCI_SUBDEVICE_ID_AT_2700FX	1589,61266
#define PCI_SUBDEVICE_ID_AT_2701FX	1590,61308
#define PCI_VENDOR_ID_ESS	1592,61351
#define PCI_DEVICE_ID_ESS_ESS1968	1593,61385
#define PCI_DEVICE_ID_ESS_ESS1978	1594,61426
#define PCI_DEVICE_ID_ESS_ALLEGRO_1	1595,61467
#define PCI_DEVICE_ID_ESS_ALLEGRO	1596,61510
#define PCI_DEVICE_ID_ESS_CANYON3D_2LE	1597,61551
#define PCI_DEVICE_ID_ESS_CANYON3D_2	1598,61597
#define PCI_DEVICE_ID_ESS_MAESTRO3	1599,61641
#define PCI_DEVICE_ID_ESS_MAESTRO3_1	1600,61683
#define PCI_DEVICE_ID_ESS_MAESTRO3_HW	1601,61727
#define PCI_DEVICE_ID_ESS_MAESTRO3_2	1602,61772
#define PCI_VENDOR_ID_SATSAGEM	1604,61817
#define PCI_DEVICE_ID_SATSAGEM_NICCY	1605,61856
#define PCI_VENDOR_ID_ENSONIQ	1608,61902
#define PCI_DEVICE_ID_ENSONIQ_CT5880	1609,61940
#define PCI_DEVICE_ID_ENSONIQ_ES1370	1610,61984
#define PCI_DEVICE_ID_ENSONIQ_ES1371	1611,62028
#define PCI_VENDOR_ID_TRANSMETA	1613,62073
#define PCI_DEVICE_ID_EFFICEON	1614,62113
#define PCI_VENDOR_ID_ROCKWELL	1616,62153
#define PCI_VENDOR_ID_ITE	1618,62193
#define PCI_DEVICE_ID_ITE_8211	1619,62227
#define PCI_DEVICE_ID_ITE_8212	1620,62266
#define PCI_DEVICE_ID_ITE_8872	1621,62305
#define PCI_DEVICE_ID_ITE_IT8330G_0	1622,62344
#define PCI_DEVICE_ID_ESS_ESS0100	1625,62417
#define PCI_VENDOR_ID_ALTEON	1627,62459
#define PCI_SUBVENDOR_ID_CONNECT_TECH	1630,62498
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_232	1631,62545
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_232	1632,62599
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_232	1633,62653
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485	1634,62707
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485_4_4	1635,62761
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_485	1636,62818
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_485_2_2	1637,62872
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_485	1638,62929
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485_2_6	1639,62983
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH081101V1	1640,63040
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH041101V1	1641,63096
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_20MHZ	1642,63152
#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_PTM	1643,63208
#define PCI_SUBDEVICE_ID_CONNECT_TECH_NT960PCI	1644,63262
#define PCI_SUBDEVICE_ID_CONNECT_TECH_TITAN_2	1645,63317
#define PCI_SUBDEVICE_ID_CONNECT_TECH_TITAN_4	1646,63371
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_232	1647,63425
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_232	1648,63485
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8_232	1649,63545
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_1_1	1650,63605
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_2	1651,63663
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_4	1652,63721
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2	1653,63779
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4	1654,63835
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8	1655,63891
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_485	1656,63947
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_485	1657,64007
#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8_485	1658,64067
#define PCI_VENDOR_ID_NVIDIA_SGS	1661,64129
#define PCI_DEVICE_ID_NVIDIA_SGS_RIVA128 1662,64169
#define PCI_SUBVENDOR_ID_CHASE_PCIFAST	1664,64218
#define PCI_SUBDEVICE_ID_CHASE_PCIFAST4	1665,64265
#define PCI_SUBDEVICE_ID_CHASE_PCIFAST8	1666,64313
#define PCI_SUBDEVICE_ID_CHASE_PCIFAST16	1667,64361
#define PCI_SUBDEVICE_ID_CHASE_PCIFAST16FMC	1668,64409
#define PCI_SUBVENDOR_ID_CHASE_PCIRAS	1669,64460
#define PCI_SUBDEVICE_ID_CHASE_PCIRAS4	1670,64506
#define PCI_SUBDEVICE_ID_CHASE_PCIRAS8	1671,64553
#define PCI_VENDOR_ID_AUREAL	1673,64601
#define PCI_DEVICE_ID_AUREAL_VORTEX_1	1674,64638
#define PCI_DEVICE_ID_AUREAL_VORTEX_2	1675,64683
#define PCI_DEVICE_ID_AUREAL_ADVANTAGE	1676,64728
#define PCI_VENDOR_ID_ELECTRONICDESIGNGMBH 1678,64775
#define PCI_DEVICE_ID_LML_33R10	1679,64825
#define PCI_VENDOR_ID_SIIG	1682,64867
#define PCI_SUBVENDOR_ID_SIIG	1683,64902
#define PCI_DEVICE_ID_SIIG_1S_10x_550	1684,64940
#define PCI_DEVICE_ID_SIIG_1S_10x_650	1685,64985
#define PCI_DEVICE_ID_SIIG_1S_10x_850	1686,65030
#define PCI_DEVICE_ID_SIIG_1S1P_10x_550	1687,65075
#define PCI_DEVICE_ID_SIIG_1S1P_10x_650	1688,65122
#define PCI_DEVICE_ID_SIIG_1S1P_10x_850	1689,65169
#define PCI_DEVICE_ID_SIIG_1P_10x	1690,65216
#define PCI_DEVICE_ID_SIIG_2P_10x	1691,65257
#define PCI_DEVICE_ID_SIIG_2S_10x_550	1692,65298
#define PCI_DEVICE_ID_SIIG_2S_10x_650	1693,65343
#define PCI_DEVICE_ID_SIIG_2S_10x_850	1694,65388
#define PCI_DEVICE_ID_SIIG_2S1P_10x_550	1695,65433
#define PCI_DEVICE_ID_SIIG_2S1P_10x_650	1696,65480
#define PCI_DEVICE_ID_SIIG_2S1P_10x_850	1697,65527
#define PCI_DEVICE_ID_SIIG_4S_10x_550	1698,65574
#define PCI_DEVICE_ID_SIIG_4S_10x_650	1699,65619
#define PCI_DEVICE_ID_SIIG_4S_10x_850	1700,65664
#define PCI_DEVICE_ID_SIIG_1S_20x_550	1701,65709
#define PCI_DEVICE_ID_SIIG_1S_20x_650	1702,65754
#define PCI_DEVICE_ID_SIIG_1S_20x_850	1703,65799
#define PCI_DEVICE_ID_SIIG_1P_20x	1704,65844
#define PCI_DEVICE_ID_SIIG_2P_20x	1705,65885
#define PCI_DEVICE_ID_SIIG_2S_20x_550	1706,65926
#define PCI_DEVICE_ID_SIIG_2S_20x_650	1707,65971
#define PCI_DEVICE_ID_SIIG_2S_20x_850	1708,66016
#define PCI_DEVICE_ID_SIIG_2P1S_20x_550	1709,66061
#define PCI_DEVICE_ID_SIIG_2P1S_20x_650	1710,66108
#define PCI_DEVICE_ID_SIIG_2P1S_20x_850	1711,66155
#define PCI_DEVICE_ID_SIIG_1S1P_20x_550	1712,66202
#define PCI_DEVICE_ID_SIIG_1S1P_20x_650	1713,66249
#define PCI_DEVICE_ID_SIIG_1S1P_20x_850	1714,66296
#define PCI_DEVICE_ID_SIIG_4S_20x_550	1715,66343
#define PCI_DEVICE_ID_SIIG_4S_20x_650	1716,66388
#define PCI_DEVICE_ID_SIIG_4S_20x_850	1717,66433
#define PCI_DEVICE_ID_SIIG_2S1P_20x_550	1718,66478
#define PCI_DEVICE_ID_SIIG_2S1P_20x_650	1719,66525
#define PCI_DEVICE_ID_SIIG_2S1P_20x_850	1720,66572
#define PCI_DEVICE_ID_SIIG_8S_20x_550	1721,66619
#define PCI_DEVICE_ID_SIIG_8S_20x_650	1722,66664
#define PCI_DEVICE_ID_SIIG_8S_20x_850	1723,66709
#define PCI_SUBDEVICE_ID_SIIG_QUARTET_SERIAL	1724,66754
#define PCI_VENDOR_ID_RADISYS	1726,66807
#define PCI_VENDOR_ID_DOMEX	1728,66846
#define PCI_DEVICE_ID_DOMEX_DMX3191D	1729,66882
#define PCI_VENDOR_ID_INTASHIELD	1731,66927
#define PCI_DEVICE_ID_INTASHIELD_IS200	1732,66967
#define PCI_VENDOR_ID_QUATECH	1734,67014
#define PCI_DEVICE_ID_QUATECH_QSC100	1735,67052
#define PCI_DEVICE_ID_QUATECH_DSC100	1736,67096
#define PCI_DEVICE_ID_QUATECH_ESC100D	1737,67140
#define PCI_DEVICE_ID_QUATECH_ESC100M	1738,67185
#define PCI_VENDOR_ID_SEALEVEL	1740,67231
#define PCI_DEVICE_ID_SEALEVEL_U530	1741,67270
#define PCI_DEVICE_ID_SEALEVEL_UCOMM2	1742,67313
#define PCI_DEVICE_ID_SEALEVEL_UCOMM422	1743,67358
#define PCI_DEVICE_ID_SEALEVEL_UCOMM232	1744,67405
#define PCI_DEVICE_ID_SEALEVEL_COMM4	1745,67452
#define PCI_DEVICE_ID_SEALEVEL_COMM8	1746,67496
#define PCI_DEVICE_ID_SEALEVEL_UCOMM8	1747,67540
#define PCI_VENDOR_ID_HYPERCOPE	1749,67586
#define PCI_DEVICE_ID_HYPERCOPE_PLX	1750,67626
#define PCI_SUBDEVICE_ID_HYPERCOPE_OLD_ERGO	1751,67669
#define PCI_SUBDEVICE_ID_HYPERCOPE_ERGO	1752,67720
#define PCI_SUBDEVICE_ID_HYPERCOPE_METRO	1753,67768
#define PCI_SUBDEVICE_ID_HYPERCOPE_CHAMP2	1754,67816
#define PCI_VENDOR_ID_KAWASAKI	1756,67866
#define PCI_DEVICE_ID_MCHIP_KL5A72002	1757,67905
#define PCI_VENDOR_ID_CNET	1759,67951
#define PCI_DEVICE_ID_CNET_GIGACARD	1760,67986
#define PCI_VENDOR_ID_LMC	1762,68030
#define PCI_DEVICE_ID_LMC_HSSI	1763,68064
#define PCI_DEVICE_ID_LMC_DS3	1764,68103
#define PCI_DEVICE_ID_LMC_SSI	1765,68141
#define PCI_DEVICE_ID_LMC_T1	1766,68179
#define PCI_VENDOR_ID_NETGEAR	1769,68218
#define PCI_DEVICE_ID_NETGEAR_GA620	1770,68256
#define PCI_VENDOR_ID_APPLICOM	1772,68300
#define PCI_DEVICE_ID_APPLICOM_PCIGENERIC 1773,68339
#define PCI_DEVICE_ID_APPLICOM_PCI2000IBS_CAN 1774,68388
#define PCI_DEVICE_ID_APPLICOM_PCI2000PFB 1775,68441
#define PCI_VENDOR_ID_MOXA	1777,68491
#define PCI_DEVICE_ID_MOXA_RC7000	1778,68526
#define PCI_DEVICE_ID_MOXA_CP102	1779,68567
#define PCI_DEVICE_ID_MOXA_CP102UL	1780,68607
#define PCI_DEVICE_ID_MOXA_CP102U	1781,68649
#define PCI_DEVICE_ID_MOXA_C104	1782,68690
#define PCI_DEVICE_ID_MOXA_CP104U	1783,68730
#define PCI_DEVICE_ID_MOXA_CP104JU	1784,68771
#define PCI_DEVICE_ID_MOXA_CT114	1785,68813
#define PCI_DEVICE_ID_MOXA_CP114	1786,68853
#define PCI_DEVICE_ID_MOXA_CP118U	1787,68893
#define PCI_DEVICE_ID_MOXA_CP132	1788,68934
#define PCI_DEVICE_ID_MOXA_CP132U	1789,68974
#define PCI_DEVICE_ID_MOXA_CP134U	1790,69015
#define PCI_DEVICE_ID_MOXA_C168	1791,69056
#define PCI_DEVICE_ID_MOXA_CP168U	1792,69096
#define PCI_VENDOR_ID_CCD	1794,69138
#define PCI_DEVICE_ID_CCD_2BD0	1795,69172
#define PCI_DEVICE_ID_CCD_B000	1796,69211
#define PCI_DEVICE_ID_CCD_B006	1797,69250
#define PCI_DEVICE_ID_CCD_B007	1798,69289
#define PCI_DEVICE_ID_CCD_B008	1799,69328
#define PCI_DEVICE_ID_CCD_B009	1800,69367
#define PCI_DEVICE_ID_CCD_B00A	1801,69406
#define PCI_DEVICE_ID_CCD_B00B	1802,69445
#define PCI_DEVICE_ID_CCD_B00C	1803,69484
#define PCI_DEVICE_ID_CCD_B100	1804,69523
#define PCI_DEVICE_ID_CCD_B700	1805,69562
#define PCI_DEVICE_ID_CCD_B701	1806,69601
#define PCI_VENDOR_ID_EXAR	1808,69641
#define PCI_DEVICE_ID_EXAR_XR17C152	1809,69676
#define PCI_DEVICE_ID_EXAR_XR17C154	1810,69719
#define PCI_DEVICE_ID_EXAR_XR17C158	1811,69762
#define PCI_VENDOR_ID_MICROGATE	1813,69806
#define PCI_DEVICE_ID_MICROGATE_USC	1814,69846
#define PCI_DEVICE_ID_MICROGATE_SCA	1815,69889
#define PCI_VENDOR_ID_3WARE	1817,69933
#define PCI_DEVICE_ID_3WARE_1000	1818,69969
#define PCI_DEVICE_ID_3WARE_7000	1819,70009
#define PCI_DEVICE_ID_3WARE_9000	1820,70049
#define PCI_VENDOR_ID_IOMEGA	1822,70090
#define PCI_DEVICE_ID_IOMEGA_BUZ	1823,70127
#define PCI_VENDOR_ID_ABOCOM	1825,70168
#define PCI_DEVICE_ID_ABOCOM_2BD1 1826,70205
#define PCI_VENDOR_ID_CMEDIA	1828,70253
#define PCI_DEVICE_ID_CMEDIA_CM8338A	1829,70290
#define PCI_DEVICE_ID_CMEDIA_CM8338B	1830,70334
#define PCI_DEVICE_ID_CMEDIA_CM8738	1831,70378
#define PCI_DEVICE_ID_CMEDIA_CM8738B	1832,70421
#define PCI_VENDOR_ID_LAVA	1834,70466
#define PCI_DEVICE_ID_LAVA_DSERIAL	1835,70501
#define PCI_DEVICE_ID_LAVA_QUATRO_A	1836,70558
#define PCI_DEVICE_ID_LAVA_QUATRO_B	1837,70632
#define PCI_DEVICE_ID_LAVA_OCTO_A	1838,70706
#define PCI_DEVICE_ID_LAVA_OCTO_B	1839,70779
#define PCI_DEVICE_ID_LAVA_PORT_PLUS	1840,70852
#define PCI_DEVICE_ID_LAVA_QUAD_A	1841,70911
#define PCI_DEVICE_ID_LAVA_QUAD_B	1842,70983
#define PCI_DEVICE_ID_LAVA_SSERIAL	1843,71055
#define PCI_DEVICE_ID_LAVA_PORT_650	1844,71112
#define PCI_DEVICE_ID_LAVA_PARALLEL	1845,71170
#define PCI_DEVICE_ID_LAVA_DUAL_PAR_A	1846,71213
#define PCI_DEVICE_ID_LAVA_DUAL_PAR_B	1847,71290
#define PCI_DEVICE_ID_LAVA_BOCA_IOPPAR	1848,71367
#define PCI_VENDOR_ID_TIMEDIA	1850,71414
#define PCI_DEVICE_ID_TIMEDIA_1889	1851,71452
#define PCI_VENDOR_ID_ICE	1853,71495
#define PCI_DEVICE_ID_ICE_1712	1854,71529
#define PCI_DEVICE_ID_VT1724	1855,71568
#define PCI_VENDOR_ID_OXSEMI	1857,71606
#define PCI_DEVICE_ID_OXSEMI_12PCI840	1858,71643
#define PCI_DEVICE_ID_OXSEMI_16PCI954	1859,71688
#define PCI_DEVICE_ID_OXSEMI_16PCI95N	1860,71733
#define PCI_DEVICE_ID_OXSEMI_16PCI954PP	1861,71778
#define PCI_DEVICE_ID_OXSEMI_16PCI952	1862,71825
#define PCI_VENDOR_ID_SAMSUNG	1864,71871
#define PCI_VENDOR_ID_MYRICOM	1866,71910
#define PCI_VENDOR_ID_TITAN	1868,71949
#define PCI_DEVICE_ID_TITAN_010L	1869,71985
#define PCI_DEVICE_ID_TITAN_100L	1870,72025
#define PCI_DEVICE_ID_TITAN_110L	1871,72065
#define PCI_DEVICE_ID_TITAN_200L	1872,72105
#define PCI_DEVICE_ID_TITAN_210L	1873,72145
#define PCI_DEVICE_ID_TITAN_400L	1874,72185
#define PCI_DEVICE_ID_TITAN_800L	1875,72225
#define PCI_DEVICE_ID_TITAN_100	1876,72265
#define PCI_DEVICE_ID_TITAN_200	1877,72305
#define PCI_DEVICE_ID_TITAN_400	1878,72345
#define PCI_DEVICE_ID_TITAN_800B	1879,72385
#define PCI_VENDOR_ID_PANACOM	1881,72426
#define PCI_DEVICE_ID_PANACOM_QUADMODEM	1882,72464
#define PCI_DEVICE_ID_PANACOM_DUALMODEM	1883,72511
#define PCI_VENDOR_ID_SIPACKETS	1885,72559
#define PCI_DEVICE_ID_SP1011	1886,72599
#define PCI_VENDOR_ID_AFAVLAB	1888,72637
#define PCI_DEVICE_ID_AFAVLAB_P028	1889,72675
#define PCI_DEVICE_ID_AFAVLAB_P030	1890,72717
#define PCI_SUBDEVICE_ID_AFAVLAB_P061	1891,72759
#define PCI_VENDOR_ID_BROADCOM	1893,72806
#define PCI_DEVICE_ID_TIGON3_5752	1894,72845
#define PCI_DEVICE_ID_TIGON3_5752M	1895,72886
#define PCI_DEVICE_ID_TIGON3_5700	1896,72928
#define PCI_DEVICE_ID_TIGON3_5701	1897,72969
#define PCI_DEVICE_ID_TIGON3_5702	1898,73010
#define PCI_DEVICE_ID_TIGON3_5703	1899,73051
#define PCI_DEVICE_ID_TIGON3_5704	1900,73092
#define PCI_DEVICE_ID_TIGON3_5704S_2	1901,73133
#define PCI_DEVICE_ID_NX2_5706	1902,73177
#define PCI_DEVICE_ID_NX2_5708	1903,73216
#define PCI_DEVICE_ID_TIGON3_5702FE	1904,73255
#define PCI_DEVICE_ID_TIGON3_5705	1905,73298
#define PCI_DEVICE_ID_TIGON3_5705_2	1906,73339
#define PCI_DEVICE_ID_TIGON3_5720	1907,73382
#define PCI_DEVICE_ID_TIGON3_5721	1908,73423
#define PCI_DEVICE_ID_TIGON3_5722	1909,73464
#define PCI_DEVICE_ID_TIGON3_5705M	1910,73505
#define PCI_DEVICE_ID_TIGON3_5705M_2	1911,73547
#define PCI_DEVICE_ID_TIGON3_5714	1912,73591
#define PCI_DEVICE_ID_TIGON3_5714S	1913,73632
#define PCI_DEVICE_ID_TIGON3_5780	1914,73674
#define PCI_DEVICE_ID_TIGON3_5780S	1915,73715
#define PCI_DEVICE_ID_TIGON3_5705F	1916,73757
#define PCI_DEVICE_ID_TIGON3_5754M	1917,73799
#define PCI_DEVICE_ID_TIGON3_5755M	1918,73841
#define PCI_DEVICE_ID_TIGON3_5756	1919,73883
#define PCI_DEVICE_ID_TIGON3_5750	1920,73924
#define PCI_DEVICE_ID_TIGON3_5751	1921,73965
#define PCI_DEVICE_ID_TIGON3_5715	1922,74006
#define PCI_DEVICE_ID_TIGON3_5715S	1923,74047
#define PCI_DEVICE_ID_TIGON3_5754	1924,74089
#define PCI_DEVICE_ID_TIGON3_5755	1925,74130
#define PCI_DEVICE_ID_TIGON3_5750M	1926,74171
#define PCI_DEVICE_ID_TIGON3_5751M	1927,74213
#define PCI_DEVICE_ID_TIGON3_5751F	1928,74255
#define PCI_DEVICE_ID_TIGON3_5787M	1929,74297
#define PCI_DEVICE_ID_TIGON3_5782	1930,74339
#define PCI_DEVICE_ID_TIGON3_5786	1931,74380
#define PCI_DEVICE_ID_TIGON3_5787	1932,74421
#define PCI_DEVICE_ID_TIGON3_5788	1933,74462
#define PCI_DEVICE_ID_TIGON3_5789	1934,74503
#define PCI_DEVICE_ID_TIGON3_5702X	1935,74544
#define PCI_DEVICE_ID_TIGON3_5703X	1936,74586
#define PCI_DEVICE_ID_TIGON3_5704S	1937,74628
#define PCI_DEVICE_ID_NX2_5706S	1938,74670
#define PCI_DEVICE_ID_NX2_5708S	1939,74710
#define PCI_DEVICE_ID_TIGON3_5702A3	1940,74750
#define PCI_DEVICE_ID_TIGON3_5703A3	1941,74793
#define PCI_DEVICE_ID_TIGON3_5781	1942,74836
#define PCI_DEVICE_ID_TIGON3_5753	1943,74877
#define PCI_DEVICE_ID_TIGON3_5753M	1944,74918
#define PCI_DEVICE_ID_TIGON3_5753F	1945,74960
#define PCI_DEVICE_ID_TIGON3_5901	1946,75002
#define PCI_DEVICE_ID_BCM4401B1	1947,75043
#define PCI_DEVICE_ID_TIGON3_5901_2	1948,75083
#define PCI_DEVICE_ID_TIGON3_5906	1949,75126
#define PCI_DEVICE_ID_TIGON3_5906M	1950,75167
#define PCI_DEVICE_ID_BCM4401	1951,75209
#define PCI_DEVICE_ID_BCM4401B0	1952,75247
#define PCI_VENDOR_ID_TOPIC	1954,75288
#define PCI_DEVICE_ID_TOPIC_TP560	1955,75324
#define PCI_VENDOR_ID_ENE	1957,75366
#define PCI_DEVICE_ID_ENE_1211	1958,75400
#define PCI_DEVICE_ID_ENE_1225	1959,75439
#define PCI_DEVICE_ID_ENE_1410	1960,75478
#define PCI_DEVICE_ID_ENE_710	1961,75517
#define PCI_DEVICE_ID_ENE_712	1962,75555
#define PCI_DEVICE_ID_ENE_1420	1963,75593
#define PCI_DEVICE_ID_ENE_720	1964,75632
#define PCI_DEVICE_ID_ENE_722	1965,75670
#define PCI_VENDOR_ID_CHELSIO	1967,75709
#define PCI_VENDOR_ID_SYBA	1970,75749
#define PCI_DEVICE_ID_SYBA_2P_EPP	1971,75784
#define PCI_DEVICE_ID_SYBA_1P_ECP	1972,75825
#define PCI_VENDOR_ID_MORETON	1974,75867
#define PCI_DEVICE_ID_RASTEL_2PORT	1975,75905
#define PCI_VENDOR_ID_ZOLTRIX	1977,75948
#define PCI_DEVICE_ID_ZOLTRIX_2BD0	1978,75986
#define PCI_VENDOR_ID_MELLANOX	1980,76030
#define PCI_DEVICE_ID_MELLANOX_TAVOR	1981,76069
#define PCI_DEVICE_ID_MELLANOX_TAVOR_BRIDGE	1982,76113
#define PCI_DEVICE_ID_MELLANOX_ARBEL_COMPAT 1983,76164
#define PCI_DEVICE_ID_MELLANOX_ARBEL	1984,76215
#define PCI_DEVICE_ID_MELLANOX_SINAI_OLD 1985,76259
#define PCI_DEVICE_ID_MELLANOX_SINAI	1986,76307
#define PCI_VENDOR_ID_PDC	1988,76352
#define PCI_VENDOR_ID_FARSITE 1991,76388
#define PCI_DEVICE_ID_FARSITE_T2P 1992,76435
#define PCI_DEVICE_ID_FARSITE_T4P 1993,76482
#define PCI_DEVICE_ID_FARSITE_T1U 1994,76529
#define PCI_DEVICE_ID_FARSITE_T2U 1995,76576
#define PCI_DEVICE_ID_FARSITE_T4U 1996,76623
#define PCI_DEVICE_ID_FARSITE_TE1 1997,76670
#define PCI_DEVICE_ID_FARSITE_TE1C 1998,76717
#define PCI_VENDOR_ID_SIBYTE	2000,76765
#define PCI_DEVICE_ID_BCM1250_PCI	2001,76802
#define PCI_DEVICE_ID_BCM1250_HT	2002,76843
#define PCI_VENDOR_ID_NETCELL	2004,76884
#define PCI_DEVICE_ID_REVOLUTION	2005,76922
#define PCI_VENDOR_ID_VITESSE	2007,76963
#define PCI_DEVICE_ID_VITESSE_VSC7174	2008,77001
#define PCI_VENDOR_ID_LINKSYS	2010,77047
#define PCI_DEVICE_ID_LINKSYS_EG1064	2011,77085
#define PCI_VENDOR_ID_ALTIMA	2013,77130
#define PCI_DEVICE_ID_ALTIMA_AC1000	2014,77167
#define PCI_DEVICE_ID_ALTIMA_AC1001	2015,77210
#define PCI_DEVICE_ID_ALTIMA_AC9100	2016,77253
#define PCI_DEVICE_ID_ALTIMA_AC1003	2017,77296
#define PCI_VENDOR_ID_ARECA	2019,77340
#define PCI_DEVICE_ID_ARECA_1110	2020,77376
#define PCI_DEVICE_ID_ARECA_1120	2021,77416
#define PCI_DEVICE_ID_ARECA_1130	2022,77456
#define PCI_DEVICE_ID_ARECA_1160	2023,77496
#define PCI_DEVICE_ID_ARECA_1170	2024,77536
#define PCI_DEVICE_ID_ARECA_1210	2025,77576
#define PCI_DEVICE_ID_ARECA_1220	2026,77616
#define PCI_DEVICE_ID_ARECA_1230	2027,77656
#define PCI_DEVICE_ID_ARECA_1260	2028,77696
#define PCI_DEVICE_ID_ARECA_1270	2029,77736
#define PCI_DEVICE_ID_ARECA_1280	2030,77776
#define PCI_DEVICE_ID_ARECA_1380	2031,77816
#define PCI_DEVICE_ID_ARECA_1381	2032,77856
#define PCI_DEVICE_ID_ARECA_1680	2033,77896
#define PCI_DEVICE_ID_ARECA_1681	2034,77936
#define PCI_VENDOR_ID_S2IO	2036,77977
#define	PCI_DEVICE_ID_S2IO_WIN	2037,78012
#define	PCI_DEVICE_ID_S2IO_UNI	2038,78051
#define PCI_DEVICE_ID_HERC_WIN	2039,78090
#define PCI_DEVICE_ID_HERC_UNI	2040,78129
#define PCI_VENDOR_ID_SITECOM	2043,78170
#define PCI_DEVICE_ID_SITECOM_DC105V2	2044,78208
#define PCI_VENDOR_ID_TOPSPIN	2046,78254
#define PCI_VENDOR_ID_TDI 2048,78293
#define PCI_DEVICE_ID_TDI_EHCI 2049,78340
#define PCI_VENDOR_ID_JMICRON	2051,78388
#define PCI_DEVICE_ID_JMICRON_JMB360	2052,78426
#define PCI_DEVICE_ID_JMICRON_JMB361	2053,78470
#define PCI_DEVICE_ID_JMICRON_JMB363	2054,78514
#define PCI_DEVICE_ID_JMICRON_JMB365	2055,78558
#define PCI_DEVICE_ID_JMICRON_JMB366	2056,78602
#define PCI_DEVICE_ID_JMICRON_JMB368	2057,78646
#define PCI_VENDOR_ID_TEKRAM	2059,78691
#define PCI_DEVICE_ID_TEKRAM_DC290	2060,78728
#define PCI_VENDOR_ID_HINT 2062,78771
#define PCI_DEVICE_ID_HINT_VXPROII_IDE 2063,78817
#define PCI_VENDOR_ID_3DLABS	2065,78864
#define PCI_DEVICE_ID_3DLABS_PERMEDIA2	2066,78901
#define PCI_DEVICE_ID_3DLABS_PERMEDIA2V	2067,78947
#define PCI_VENDOR_ID_AKS	2070,78996
#define PCI_DEVICE_ID_AKS_ALADDINCARD	2071,79030
#define PCI_VENDOR_ID_S3	2075,79078
#define PCI_DEVICE_ID_S3_TRIO	2076,79111
#define PCI_DEVICE_ID_S3_868	2077,79149
#define PCI_DEVICE_ID_S3_968	2078,79186
#define PCI_DEVICE_ID_S3_SAVAGE4	2079,79223
#define PCI_DEVICE_ID_S3_PROSAVAGE8	2080,79263
#define PCI_DEVICE_ID_S3_SONICVIBES	2081,79306
#define PCI_VENDOR_ID_DUNORD	2083,79350
#define PCI_DEVICE_ID_DUNORD_I3000	2084,79387
#define PCI_VENDOR_ID_DCI	2087,79431
#define PCI_DEVICE_ID_DCI_PCCOM4	2088,79465
#define PCI_DEVICE_ID_DCI_PCCOM8	2089,79505
#define PCI_DEVICE_ID_DCI_PCCOM2	2090,79545
#define PCI_VENDOR_ID_INTEL	2092,79586
#define PCI_DEVICE_ID_INTEL_EESSC	2093,79622
#define PCI_DEVICE_ID_INTEL_PXHD_0	2094,79663
#define PCI_DEVICE_ID_INTEL_PXHD_1	2095,79705
#define PCI_DEVICE_ID_INTEL_PXH_0	2096,79747
#define PCI_DEVICE_ID_INTEL_PXH_1	2097,79788
#define PCI_DEVICE_ID_INTEL_PXHV	2098,79829
#define PCI_DEVICE_ID_INTEL_82375	2099,79869
#define PCI_DEVICE_ID_INTEL_82424	2100,79910
#define PCI_DEVICE_ID_INTEL_82378	2101,79951
#define PCI_DEVICE_ID_INTEL_I960	2102,79992
#define PCI_DEVICE_ID_INTEL_I960RM	2103,80032
#define PCI_DEVICE_ID_INTEL_82815_MC	2104,80074
#define PCI_DEVICE_ID_INTEL_82815_CGC	2105,80118
#define PCI_DEVICE_ID_INTEL_82092AA_0	2106,80163
#define PCI_DEVICE_ID_INTEL_7505_0	2107,80208
#define PCI_DEVICE_ID_INTEL_7205_0	2108,80252
#define PCI_DEVICE_ID_INTEL_82437	2109,80294
#define PCI_DEVICE_ID_INTEL_82371FB_0	2110,80335
#define PCI_DEVICE_ID_INTEL_82371FB_1	2111,80380
#define PCI_DEVICE_ID_INTEL_82371MX	2112,80425
#define PCI_DEVICE_ID_INTEL_82441	2113,80468
#define PCI_DEVICE_ID_INTEL_82380FB	2114,80509
#define PCI_DEVICE_ID_INTEL_82439	2115,80552
#define PCI_DEVICE_ID_INTEL_80960_RP	2116,80593
#define PCI_DEVICE_ID_INTEL_82840_HB	2117,80637
#define PCI_DEVICE_ID_INTEL_82845_HB	2118,80681
#define PCI_DEVICE_ID_INTEL_IOAT	2119,80725
#define PCI_DEVICE_ID_INTEL_82801AA_0	2120,80765
#define PCI_DEVICE_ID_INTEL_82801AA_1	2121,80810
#define PCI_DEVICE_ID_INTEL_82801AA_3	2122,80855
#define PCI_DEVICE_ID_INTEL_82801AA_5	2123,80900
#define PCI_DEVICE_ID_INTEL_82801AA_6	2124,80945
#define PCI_DEVICE_ID_INTEL_82801AA_8	2125,80990
#define PCI_DEVICE_ID_INTEL_82801AB_0	2126,81035
#define PCI_DEVICE_ID_INTEL_82801AB_1	2127,81080
#define PCI_DEVICE_ID_INTEL_82801AB_3	2128,81125
#define PCI_DEVICE_ID_INTEL_82801AB_5	2129,81170
#define PCI_DEVICE_ID_INTEL_82801AB_6	2130,81215
#define PCI_DEVICE_ID_INTEL_82801AB_8	2131,81260
#define PCI_DEVICE_ID_INTEL_82801BA_0	2132,81305
#define PCI_DEVICE_ID_INTEL_82801BA_2	2133,81350
#define PCI_DEVICE_ID_INTEL_82801BA_4	2134,81395
#define PCI_DEVICE_ID_INTEL_82801BA_6	2135,81440
#define PCI_DEVICE_ID_INTEL_82801BA_8	2136,81485
#define PCI_DEVICE_ID_INTEL_82801BA_9	2137,81530
#define PCI_DEVICE_ID_INTEL_82801BA_10	2138,81575
#define PCI_DEVICE_ID_INTEL_82801BA_11	2139,81621
#define PCI_DEVICE_ID_INTEL_82801E_0	2140,81667
#define PCI_DEVICE_ID_INTEL_82801E_11	2141,81711
#define PCI_DEVICE_ID_INTEL_82801CA_0	2142,81756
#define PCI_DEVICE_ID_INTEL_82801CA_3	2143,81801
#define PCI_DEVICE_ID_INTEL_82801CA_5	2144,81846
#define PCI_DEVICE_ID_INTEL_82801CA_6	2145,81891
#define PCI_DEVICE_ID_INTEL_82801CA_10	2146,81936
#define PCI_DEVICE_ID_INTEL_82801CA_11	2147,81982
#define PCI_DEVICE_ID_INTEL_82801CA_12	2148,82028
#define PCI_DEVICE_ID_INTEL_82801DB_0	2149,82074
#define PCI_DEVICE_ID_INTEL_82801DB_1	2150,82119
#define PCI_DEVICE_ID_INTEL_82801DB_3	2151,82164
#define PCI_DEVICE_ID_INTEL_82801DB_5	2152,82209
#define PCI_DEVICE_ID_INTEL_82801DB_6	2153,82254
#define PCI_DEVICE_ID_INTEL_82801DB_9	2154,82299
#define PCI_DEVICE_ID_INTEL_82801DB_10	2155,82344
#define PCI_DEVICE_ID_INTEL_82801DB_11	2156,82390
#define PCI_DEVICE_ID_INTEL_82801DB_12 2157,82436
#define PCI_DEVICE_ID_INTEL_82801EB_0	2158,82483
#define PCI_DEVICE_ID_INTEL_82801EB_1	2159,82528
#define PCI_DEVICE_ID_INTEL_82801EB_3	2160,82573
#define PCI_DEVICE_ID_INTEL_82801EB_5	2161,82618
#define PCI_DEVICE_ID_INTEL_82801EB_6	2162,82663
#define PCI_DEVICE_ID_INTEL_82801EB_11	2163,82708
#define PCI_DEVICE_ID_INTEL_82801EB_13	2164,82754
#define PCI_DEVICE_ID_INTEL_ESB_1	2165,82800
#define PCI_DEVICE_ID_INTEL_ESB_2	2166,82841
#define PCI_DEVICE_ID_INTEL_ESB_4	2167,82882
#define PCI_DEVICE_ID_INTEL_ESB_5	2168,82923
#define PCI_DEVICE_ID_INTEL_ESB_9	2169,82964
#define PCI_DEVICE_ID_INTEL_82820_HB	2170,83005
#define PCI_DEVICE_ID_INTEL_82820_UP_HB	2171,83049
#define PCI_DEVICE_ID_INTEL_82850_HB	2172,83096
#define PCI_DEVICE_ID_INTEL_82860_HB	2173,83140
#define PCI_DEVICE_ID_INTEL_E7501_MCH	2174,83184
#define PCI_DEVICE_ID_INTEL_82845G_HB	2175,83229
#define PCI_DEVICE_ID_INTEL_82845G_IG	2176,83274
#define PCI_DEVICE_ID_INTEL_82865_HB	2177,83319
#define PCI_DEVICE_ID_INTEL_82865_IG	2178,83363
#define PCI_DEVICE_ID_INTEL_82875_HB	2179,83407
#define PCI_DEVICE_ID_INTEL_82915G_HB	2180,83451
#define PCI_DEVICE_ID_INTEL_82915G_IG	2181,83496
#define PCI_DEVICE_ID_INTEL_82915GM_HB	2182,83541
#define PCI_DEVICE_ID_INTEL_82915GM_IG	2183,83587
#define PCI_DEVICE_ID_INTEL_82945G_HB	2184,83633
#define PCI_DEVICE_ID_INTEL_82945G_IG	2185,83678
#define PCI_DEVICE_ID_INTEL_82945GM_HB	2186,83723
#define PCI_DEVICE_ID_INTEL_82945GM_IG	2187,83769
#define PCI_DEVICE_ID_INTEL_ICH6_0	2188,83815
#define PCI_DEVICE_ID_INTEL_ICH6_1	2189,83857
#define PCI_DEVICE_ID_INTEL_ICH6_2	2190,83899
#define PCI_DEVICE_ID_INTEL_ICH6_16	2191,83941
#define PCI_DEVICE_ID_INTEL_ICH6_17	2192,83984
#define PCI_DEVICE_ID_INTEL_ICH6_18	2193,84027
#define PCI_DEVICE_ID_INTEL_ICH6_19	2194,84070
#define PCI_DEVICE_ID_INTEL_ESB2_0	2195,84113
#define PCI_DEVICE_ID_INTEL_ESB2_14	2196,84155
#define PCI_DEVICE_ID_INTEL_ESB2_17	2197,84198
#define PCI_DEVICE_ID_INTEL_ESB2_18	2198,84241
#define PCI_DEVICE_ID_INTEL_ICH7_0	2199,84284
#define PCI_DEVICE_ID_INTEL_ICH7_1	2200,84326
#define PCI_DEVICE_ID_INTEL_ICH7_30	2201,84368
#define PCI_DEVICE_ID_INTEL_ICH7_31	2202,84411
#define PCI_DEVICE_ID_INTEL_ICH7_17	2203,84454
#define PCI_DEVICE_ID_INTEL_ICH7_19	2204,84497
#define PCI_DEVICE_ID_INTEL_ICH7_20	2205,84540
#define PCI_DEVICE_ID_INTEL_ICH7_21	2206,84583
#define PCI_DEVICE_ID_INTEL_ICH8_0	2207,84626
#define PCI_DEVICE_ID_INTEL_ICH8_1	2208,84668
#define PCI_DEVICE_ID_INTEL_ICH8_2	2209,84710
#define PCI_DEVICE_ID_INTEL_ICH8_3	2210,84752
#define PCI_DEVICE_ID_INTEL_ICH8_4	2211,84794
#define PCI_DEVICE_ID_INTEL_ICH8_5	2212,84836
#define PCI_DEVICE_ID_INTEL_ICH8_6	2213,84878
#define PCI_DEVICE_ID_INTEL_82855PM_HB	2214,84920
#define PCI_DEVICE_ID_INTEL_82830_HB	2215,84966
#define PCI_DEVICE_ID_INTEL_82830_CGC	2216,85010
#define PCI_DEVICE_ID_INTEL_82855GM_HB	2217,85055
#define PCI_DEVICE_ID_INTEL_82855GM_IG	2218,85101
#define PCI_DEVICE_ID_INTEL_E7520_MCH	2219,85147
#define PCI_DEVICE_ID_INTEL_E7320_MCH	2220,85192
#define PCI_DEVICE_ID_INTEL_MCH_PA	2221,85237
#define PCI_DEVICE_ID_INTEL_MCH_PA1	2222,85279
#define PCI_DEVICE_ID_INTEL_MCH_PB	2223,85322
#define PCI_DEVICE_ID_INTEL_MCH_PB1	2224,85364
#define PCI_DEVICE_ID_INTEL_MCH_PC	2225,85407
#define PCI_DEVICE_ID_INTEL_MCH_PC1	2226,85449
#define PCI_DEVICE_ID_INTEL_E7525_MCH	2227,85492
#define PCI_DEVICE_ID_INTEL_82371SB_0	2228,85537
#define PCI_DEVICE_ID_INTEL_82371SB_1	2229,85582
#define PCI_DEVICE_ID_INTEL_82371SB_2	2230,85627
#define PCI_DEVICE_ID_INTEL_82437VX	2231,85672
#define PCI_DEVICE_ID_INTEL_82439TX	2232,85715
#define PCI_DEVICE_ID_INTEL_82371AB_0	2233,85758
#define PCI_DEVICE_ID_INTEL_82371AB	2234,85803
#define PCI_DEVICE_ID_INTEL_82371AB_2	2235,85846
#define PCI_DEVICE_ID_INTEL_82371AB_3	2236,85891
#define PCI_DEVICE_ID_INTEL_82810_MC1	2237,85936
#define PCI_DEVICE_ID_INTEL_82810_IG1	2238,85981
#define PCI_DEVICE_ID_INTEL_82810_MC3	2239,86026
#define PCI_DEVICE_ID_INTEL_82810_IG3	2240,86071
#define PCI_DEVICE_ID_INTEL_82810E_MC	2241,86116
#define PCI_DEVICE_ID_INTEL_82810E_IG	2242,86161
#define PCI_DEVICE_ID_INTEL_82443LX_0	2243,86206
#define PCI_DEVICE_ID_INTEL_82443LX_1	2244,86251
#define PCI_DEVICE_ID_INTEL_82443BX_0	2245,86296
#define PCI_DEVICE_ID_INTEL_82443BX_1	2246,86341
#define PCI_DEVICE_ID_INTEL_82443BX_2	2247,86386
#define PCI_DEVICE_ID_INTEL_440MX	2248,86431
#define PCI_DEVICE_ID_INTEL_440MX_6	2249,86472
#define PCI_DEVICE_ID_INTEL_82443MX_0	2250,86515
#define PCI_DEVICE_ID_INTEL_82443MX_1	2251,86560
#define PCI_DEVICE_ID_INTEL_82443MX_3	2252,86605
#define PCI_DEVICE_ID_INTEL_82443GX_0	2253,86650
#define PCI_DEVICE_ID_INTEL_82443GX_2	2254,86695
#define PCI_DEVICE_ID_INTEL_82372FB_1	2255,86740
#define PCI_DEVICE_ID_INTEL_82454GX	2256,86785
#define PCI_DEVICE_ID_INTEL_82450GX	2257,86828
#define PCI_DEVICE_ID_INTEL_82451NX	2258,86871
#define PCI_DEVICE_ID_INTEL_82454NX 2259,86914
#define PCI_DEVICE_ID_INTEL_84460GX	2260,86961
#define PCI_DEVICE_ID_INTEL_IXP4XX	2261,87004
#define PCI_DEVICE_ID_INTEL_IXP2800	2262,87046
#define PCI_DEVICE_ID_INTEL_S21152BB	2263,87089
#define PCI_VENDOR_ID_SCALEMP	2265,87134
#define PCI_DEVICE_ID_SCALEMP_VSMP_CTL	2266,87172
#define PCI_VENDOR_ID_COMPUTONE	2268,87219
#define PCI_DEVICE_ID_COMPUTONE_IP2EX	2269,87259
#define PCI_DEVICE_ID_COMPUTONE_PG	2270,87304
#define PCI_SUBVENDOR_ID_COMPUTONE	2271,87346
#define PCI_SUBDEVICE_ID_COMPUTONE_PG4	2272,87388
#define PCI_SUBDEVICE_ID_COMPUTONE_PG8	2273,87434
#define PCI_SUBDEVICE_ID_COMPUTONE_PG6	2274,87480
#define PCI_VENDOR_ID_KTI	2276,87527
#define PCI_VENDOR_ID_ADAPTEC	2278,87562
#define PCI_DEVICE_ID_ADAPTEC_7810	2279,87600
#define PCI_DEVICE_ID_ADAPTEC_7821	2280,87642
#define PCI_DEVICE_ID_ADAPTEC_38602	2281,87684
#define PCI_DEVICE_ID_ADAPTEC_7850	2282,87727
#define PCI_DEVICE_ID_ADAPTEC_7855	2283,87769
#define PCI_DEVICE_ID_ADAPTEC_3860	2284,87811
#define PCI_DEVICE_ID_ADAPTEC_1480A	2285,87853
#define PCI_DEVICE_ID_ADAPTEC_7860	2286,87896
#define PCI_DEVICE_ID_ADAPTEC_7861	2287,87938
#define PCI_DEVICE_ID_ADAPTEC_7870	2288,87980
#define PCI_DEVICE_ID_ADAPTEC_7871	2289,88022
#define PCI_DEVICE_ID_ADAPTEC_7872	2290,88064
#define PCI_DEVICE_ID_ADAPTEC_7873	2291,88106
#define PCI_DEVICE_ID_ADAPTEC_7874	2292,88148
#define PCI_DEVICE_ID_ADAPTEC_7895	2293,88190
#define PCI_DEVICE_ID_ADAPTEC_7880	2294,88232
#define PCI_DEVICE_ID_ADAPTEC_7881	2295,88274
#define PCI_DEVICE_ID_ADAPTEC_7882	2296,88316
#define PCI_DEVICE_ID_ADAPTEC_7883	2297,88358
#define PCI_DEVICE_ID_ADAPTEC_7884	2298,88400
#define PCI_DEVICE_ID_ADAPTEC_7885	2299,88442
#define PCI_DEVICE_ID_ADAPTEC_7886	2300,88484
#define PCI_DEVICE_ID_ADAPTEC_7887	2301,88526
#define PCI_DEVICE_ID_ADAPTEC_7888	2302,88568
#define PCI_VENDOR_ID_ADAPTEC2	2304,88611
#define PCI_DEVICE_ID_ADAPTEC2_2940U2	2305,88650
#define PCI_DEVICE_ID_ADAPTEC2_2930U2	2306,88695
#define PCI_DEVICE_ID_ADAPTEC2_7890B	2307,88740
#define PCI_DEVICE_ID_ADAPTEC2_7890	2308,88784
#define PCI_DEVICE_ID_ADAPTEC2_3940U2	2309,88827
#define PCI_DEVICE_ID_ADAPTEC2_3950U2D	2310,88872
#define PCI_DEVICE_ID_ADAPTEC2_7896	2311,88918
#define PCI_DEVICE_ID_ADAPTEC2_7892A	2312,88961
#define PCI_DEVICE_ID_ADAPTEC2_7892B	2313,89005
#define PCI_DEVICE_ID_ADAPTEC2_7892D	2314,89049
#define PCI_DEVICE_ID_ADAPTEC2_7892P	2315,89093
#define PCI_DEVICE_ID_ADAPTEC2_7899A	2316,89137
#define PCI_DEVICE_ID_ADAPTEC2_7899B	2317,89181
#define PCI_DEVICE_ID_ADAPTEC2_7899D	2318,89225
#define PCI_DEVICE_ID_ADAPTEC2_7899P	2319,89269
#define PCI_DEVICE_ID_ADAPTEC2_OBSIDIAN 2320,89313
#define PCI_DEVICE_ID_ADAPTEC2_SCAMP	2321,89362
#define PCI_VENDOR_ID_HOLTEK	2324,89408
#define PCI_DEVICE_ID_HOLTEK_6565	2325,89445
#define PCI_VENDOR_ID_NETMOS	2327,89487
#define PCI_DEVICE_ID_NETMOS_9705	2328,89524
#define PCI_DEVICE_ID_NETMOS_9715	2329,89565
#define PCI_DEVICE_ID_NETMOS_9735	2330,89606
#define PCI_DEVICE_ID_NETMOS_9745	2331,89647
#define PCI_DEVICE_ID_NETMOS_9755	2332,89688
#define PCI_DEVICE_ID_NETMOS_9805	2333,89729
#define PCI_DEVICE_ID_NETMOS_9815	2334,89770
#define PCI_DEVICE_ID_NETMOS_9835	2335,89811
#define PCI_DEVICE_ID_NETMOS_9845	2336,89852
#define PCI_DEVICE_ID_NETMOS_9855	2337,89893
#define PCI_SUBVENDOR_ID_EXSYS	2339,89935
#define PCI_SUBDEVICE_ID_EXSYS_4014	2340,89974
#define PCI_SUBDEVICE_ID_EXSYS_4055	2341,90017
#define PCI_VENDOR_ID_TIGERJET	2343,90061
#define PCI_DEVICE_ID_TIGERJET_300	2344,90100
#define PCI_DEVICE_ID_TIGERJET_100	2345,90142
#define PCI_VENDOR_ID_TTTECH	2347,90185
#define PCI_DEVICE_ID_TTTECH_MC322	2348,90222
#define PCI_VENDOR_ID_XILINX_RME	2350,90265
#define PCI_DEVICE_ID_RME_DIGI32	2351,90305
#define PCI_DEVICE_ID_RME_DIGI32_PRO	2352,90345
#define PCI_DEVICE_ID_RME_DIGI32_8	2353,90389
#define PCI_VENDOR_ID_QUICKNET	2355,90432
#define PCI_DEVICE_ID_QUICKNET_XJ	2356,90471

xen/include/asm-ia64/linux/wait.h,2547
#define _LINUX_WAIT_H2,22
#define WNOHANG	4,45
#define WUNTRACED	5,73
#define WSTOPPED	6,102
#define WEXITED	7,129
#define WCONTINUED	8,157
#define WNOWAIT	9,187
#define __WNOTHREAD	11,253
#define __WALL	12,344
#define __WCLONE	13,418
#define P_ALL	16,519
#define P_PID	17,536
#define P_PGID	18,553
typedef struct __wait_queue wait_queue_t;29,745
typedef int (*wait_queue_func_t)wait_queue_func_t30,787
struct __wait_queue 33,961
	unsigned int flags;34,983
#define WQ_FLAG_EXCLUSIVE	35,1004
	void *private;private36,1035
	wait_queue_func_t func;37,1051
	struct list_head task_list;38,1076
struct wait_bit_key 41,1109
	void *flags;flags42,1131
	int bit_nr;43,1145
struct wait_bit_queue 46,1162
	struct wait_bit_key key;47,1186
	wait_queue_t wait;48,1212
struct __wait_queue_head 51,1236
	spinlock_t lock;52,1263
	struct list_head task_list;53,1281
typedef struct __wait_queue_head wait_queue_head_t;55,1313
#define __WAITQUEUE_INITIALIZER(62,1436
#define DECLARE_WAITQUEUE(67,1579
#define __WAIT_QUEUE_HEAD_INITIALIZER(70,1679
#define DECLARE_WAIT_QUEUE_HEAD(74,1823
#define __WAIT_BIT_KEY_INITIALIZER(77,1926
static inline void init_waitqueue_head(80,2013
static inline void init_waitqueue_entry(86,2138
static inline void init_waitqueue_func_entry(93,2289
static inline int waitqueue_active(101,2437
#define is_sync_wait(113,2843
static inline void __add_wait_queue(119,3159
static inline void __add_wait_queue_tail(127,3327
static inline void __remove_wait_queue(133,3474
#define wake_up(150,4386
#define wake_up_nr(151,4472
#define wake_up_all(152,4565
#define wake_up_interruptible(153,4655
#define wake_up_interruptible_nr(154,4730
#define wake_up_interruptible_all(155,4813
#define	wake_up_locked(156,4892
#define wake_up_interruptible_sync(157,4984
#define __wait_event(159,5067
#define wait_event(184,5796
#define __wait_event_timeout(191,5943
#define wait_event_timeout(222,6941
#define __wait_event_interruptible(230,7136
#define wait_event_interruptible(263,8150
#define __wait_event_interruptible_timeout(271,8341
#define wait_event_interruptible_timeout(308,9562
#define __wait_event_interruptible_exclusive(316,9781
#define wait_event_interruptible_exclusive(335,10234
static inline void add_wait_queue_exclusive_locked(346,10516
static inline void remove_wait_queue_locked(356,10767
#define DEFINE_WAIT(385,11921
#define DEFINE_WAIT_BIT(392,12106
#define init_wait(403,12404
static inline int wait_on_bit(424,13234
static inline int wait_on_bit_lock(448,14267

xen/include/asm-ia64/linux/thread_info.h,817
#define _LINUX_THREAD_INFO_H8,214
struct restart_block 13,282
	long (*fn)fn14,305
	unsigned long arg0,15,342
	unsigned long arg0, arg1,15,342
	unsigned long arg0, arg1, arg2,15,342
	unsigned long arg0, arg1, arg2, arg3;15,342
static inline void set_thread_flag(30,612
static inline void clear_thread_flag(35,708
static inline int test_and_set_thread_flag(40,808
static inline int test_and_clear_thread_flag(45,928
static inline int test_thread_flag(50,1052
static inline void set_ti_thread_flag(55,1156
static inline void clear_ti_thread_flag(60,1260
static inline int test_and_set_ti_thread_flag(65,1368
static inline int test_and_clear_ti_thread_flag(70,1496
static inline int test_ti_thread_flag(75,1628
static inline void set_need_resched(80,1740
static inline void clear_need_resched(85,1823

xen/include/asm-ia64/linux/linkage.h,405
#define _LINUX_LINKAGE_H2,25
#define CPP_ASMLINKAGE 8,122
#define CPP_ASMLINKAGE10,162
#define asmlinkage 14,212
# define prevent_tail_call(18,280
#define __ALIGN	22,353
#define __ALIGN_STR	23,384
#define ALIGN 28,449
#define ALIGN_STR 29,471
#define ENTRY(31,502
#define NORET_TYPE 38,569
#define ATTRIB_NORET 39,596
#define NORET_AND 40,644
#define FASTCALL(43,694
#define fastcall44,716

xen/include/asm-ia64/linux/initrd.h,26
#define INITRD_MINOR 2,1

xen/include/asm-ia64/linux/bcd.h,124
#define _BCD_H11,293
#define BCD2BIN(13,309
#define BIN2BCD(14,363
#define BCD_TO_BIN(17,437
#define BIN_TO_BCD(18,482

xen/include/asm-ia64/linux/preempt.h,490
#define __LINUX_PREEMPT_H2,26
# define add_preempt_count(16,387
# define sub_preempt_count(17,462
#define inc_preempt_count(20,545
#define dec_preempt_count(21,594
#define preempt_count(23,644
#define preempt_disable(29,772
#define preempt_enable_no_resched(35,858
#define preempt_check_resched(41,954
#define preempt_enable(47,1085
#define preempt_disable(55,1199
#define preempt_enable_no_resched(56,1243
#define preempt_enable(57,1296
#define preempt_check_resched(58,1339

xen/include/asm-ia64/linux/timex.h,3099
#define _LINUX_TIMEX_H54,2286
#define SHIFT_KG 74,2887
#define SHIFT_KF 75,2934
#define SHIFT_KH 76,2990
#define MAXTC 77,3045
#define SHIFT_SCALE 93,3739
#define SHIFT_UPDATE 94,3789
#define SHIFT_USEC 95,3861
#define FINENSEC 96,3921
#define MAXPHASE 98,3993
#define MAXFREQ 99,4052
#define MAXTIME 100,4122
#define MINSEC 101,4194
#define MAXSEC 102,4265
#define	NTP_PHASE_LIMIT	103,4336
#define PPS_AVG 125,5247
#define PPS_SHIFT 126,5303
#define PPS_SHIFTMAX 127,5364
#define PPS_VALID 128,5428
#define MAXGLITCH 129,5485
struct timex 135,5639
	unsigned int modes;136,5654
	long offset;137,5695
	long freq;138,5735
	long maxerror;139,5784
	long esterror;140,5828
	int status;141,5874
	long constant;142,5915
	long precision;143,5956
	long tolerance;144,6015
	struct timeval time;147,6095
	long tick;148,6135
	long ppsfreq;150,6192
	long jitter;151,6255
	int shift;152,6307
	long stabil;153,6373
	long jitcnt;154,6436
	long calcnt;155,6494
	long errcnt;156,6552
	long stbcnt;157,6607
	int 159,6669
	int  :32; int 159,6669
	int  :32; int  :32; int 159,6669
	int  :32; int  :32; int  :32; int 159,6669
	int 160,6710
	int  :32; int 160,6710
	int  :32; int  :32; int 160,6710
	int  :32; int  :32; int  :32; int 160,6710
	int 161,6751
	int  :32; int 161,6751
	int  :32; int  :32; int 161,6751
	int  :32; int  :32; int  :32; int 161,6751
#define ADJ_OFFSET	167,6830
#define ADJ_FREQUENCY	168,6875
#define ADJ_MAXERROR	169,6928
#define ADJ_ESTERROR	170,6982
#define ADJ_STATUS	171,7038
#define ADJ_TIMECONST	172,7084
#define ADJ_TICK	173,7138
#define ADJ_OFFSET_SINGLESHOT	174,7180
#define MOD_OFFSET	177,7281
#define MOD_FREQUENCY	178,7311
#define MOD_MAXERROR	179,7347
#define MOD_ESTERROR	180,7381
#define MOD_STATUS	181,7415
#define MOD_TIMECONST	182,7445
#define MOD_CLKB	183,7481
#define MOD_CLKA	184,7507
#define STA_PLL	190,7611
#define STA_PPSFREQ	191,7665
#define STA_PPSTIME	192,7730
#define STA_FLL	193,7795
#define STA_INS	195,7858
#define STA_DEL	196,7905
#define STA_UNSYNC	197,7952
#define STA_FREQHOLD	198,8010
#define STA_PPSSIGNAL	200,8065
#define STA_PPSJITTER	201,8124
#define STA_PPSWANDER	202,8191
#define STA_PPSERROR	203,8258
#define STA_CLOCKERR	205,8327
#define STA_RONLY 207,8388
#define TIME_OK	213,8548
#define TIME_INS	214,8608
#define TIME_DEL	215,8652
#define TIME_OOP	216,8696
#define TIME_WAIT	217,8745
#define TIME_ERROR	218,8796
#define TIME_BAD	219,8846
#define TIME_SOURCE_CPU 265,10630
#define TIME_SOURCE_MMIO64 266,10656
#define TIME_SOURCE_MMIO32 267,10685
#define TIME_SOURCE_FUNCTION 268,10714
struct time_interpolator 286,11626
	u16 source;287,11653
	u8 shift;288,11692
	u8 jitter;290,11817
	u32 nsec_per_cyc;291,11872
	void *addr;addr292,11934
	u64 mask;293,11986
	unsigned long offset;294,12040
	u64 last_counter;295,12113
	u64 last_cycle;296,12192
	u64 frequency;297,12263
	long drift;298,12314
	unsigned long skips;299,12370
	unsigned long ns_skipped;300,12413
	struct time_interpolator *next;next301,12466
time_interpolator_reset(312,12801

xen/include/asm-ia64/linux/ioport.h,2445
#define _LINUX_IOPORT_H9,160
struct resource 17,299
	resource_size_t start;18,317
	resource_size_t end;19,341
	const char *name;name20,363
	unsigned long flags;21,382
	struct resource *parent,parent22,404
	struct resource *parent, *sibling,sibling22,404
	struct resource *parent, *sibling, *child;child22,404
struct resource_list 25,452
	struct resource_list *next;next26,475
	struct resource *res;res27,504
	struct pci_dev *dev;dev28,527
#define IORESOURCE_BITS	34,602
#define IORESOURCE_IO	36,663
#define IORESOURCE_MEM	37,717
#define IORESOURCE_IRQ	38,752
#define IORESOURCE_DMA	39,787
#define IORESOURCE_PREFETCH	41,823
#define IORESOURCE_READONLY	42,884
#define IORESOURCE_CACHEABLE	43,923
#define IORESOURCE_RANGELENGTH	44,963
#define IORESOURCE_SHADOWABLE	45,1005
#define IORESOURCE_BUS_HAS_VGA	46,1046
#define IORESOURCE_DISABLED	48,1089
#define IORESOURCE_UNSET	49,1128
#define IORESOURCE_AUTO	50,1164
#define IORESOURCE_BUSY	51,1200
#define IORESOURCE_IRQ_HIGHEDGE	54,1330
#define IORESOURCE_IRQ_LOWEDGE	55,1370
#define IORESOURCE_IRQ_HIGHLEVEL	56,1409
#define IORESOURCE_IRQ_LOWLEVEL	57,1449
#define IORESOURCE_IRQ_SHAREABLE	58,1489
#define IORESOURCE_DMA_TYPE_MASK	61,1580
#define IORESOURCE_DMA_8BIT	62,1620
#define IORESOURCE_DMA_8AND16BIT	63,1656
#define IORESOURCE_DMA_16BIT	64,1696
#define IORESOURCE_DMA_MASTER	66,1734
#define IORESOURCE_DMA_BYTE	67,1772
#define IORESOURCE_DMA_WORD	68,1808
#define IORESOURCE_DMA_SPEED_MASK	70,1845
#define IORESOURCE_DMA_COMPATIBLE	71,1886
#define IORESOURCE_DMA_TYPEA	72,1927
#define IORESOURCE_DMA_TYPEB	73,1964
#define IORESOURCE_DMA_TYPEF	74,2001
#define IORESOURCE_MEM_WRITEABLE	77,2096
#define IORESOURCE_MEM_CACHEABLE	78,2167
#define IORESOURCE_MEM_RANGELENGTH	79,2239
#define IORESOURCE_MEM_TYPE_MASK	80,2315
#define IORESOURCE_MEM_8BIT	81,2355
#define IORESOURCE_MEM_16BIT	82,2391
#define IORESOURCE_MEM_8AND16BIT	83,2428
#define IORESOURCE_MEM_32BIT	84,2468
#define IORESOURCE_MEM_SHADOWABLE	85,2505
#define IORESOURCE_MEM_EXPANSIONROM	86,2579
#define IORESOURCE_ROM_ENABLE	89,2668
#define IORESOURCE_ROM_SHADOW	90,2759
#define IORESOURCE_ROM_COPY	91,2825
#define request_region(114,3907
#define request_mem_region(115,4001
#define rename_region(116,4098
#define release_region(123,4342
#define check_mem_region(124,4423
#define release_mem_region(125,4503
static inline int __deprecated check_region(131,4756

xen/include/asm-ia64/linux/byteorder/generic.h,1423
#define _LINUX_BYTEORDER_GENERIC_H2,35
#define cpu_to_le64 87,3126
#define le64_to_cpu 88,3160
#define cpu_to_le32 89,3194
#define le32_to_cpu 90,3228
#define cpu_to_le16 91,3262
#define le16_to_cpu 92,3296
#define cpu_to_be64 93,3330
#define be64_to_cpu 94,3364
#define cpu_to_be32 95,3398
#define be32_to_cpu 96,3432
#define cpu_to_be16 97,3466
#define be16_to_cpu 98,3500
#define cpu_to_le64p 99,3534
#define le64_to_cpup 100,3570
#define cpu_to_le32p 101,3606
#define le32_to_cpup 102,3642
#define cpu_to_le16p 103,3678
#define le16_to_cpup 104,3714
#define cpu_to_be64p 105,3750
#define be64_to_cpup 106,3786
#define cpu_to_be32p 107,3822
#define be32_to_cpup 108,3858
#define cpu_to_be16p 109,3894
#define be16_to_cpup 110,3930
#define cpu_to_le64s 111,3966
#define le64_to_cpus 112,4002
#define cpu_to_le32s 113,4038
#define le32_to_cpus 114,4074
#define cpu_to_le16s 115,4110
#define le16_to_cpus 116,4146
#define cpu_to_be64s 117,4182
#define be64_to_cpus 118,4218
#define cpu_to_be32s 119,4254
#define be32_to_cpus 120,4290
#define cpu_to_be16s 121,4326
#define be16_to_cpus 122,4362
#undef ntohl141,4972
#undef ntohs142,4985
#undef htonl143,4998
#undef htons144,5011
#define ___htonl(157,5311
#define ___htons(158,5348
#define ___ntohl(159,5385
#define ___ntohs(160,5422
#define htonl(162,5460
#define ntohl(163,5489
#define htons(164,5518
#define ntohs(165,5547

xen/include/asm-ia64/linux/byteorder/swab.h,1397
#define _LINUX_BYTEORDER_SWAB_H2,32
#define ___swab16(23,634
#define ___swab32(31,791
#define ___swab64(41,1062
#define ___constant_swab16(55,1672
#define ___constant_swab32(59,1802
#define ___constant_swab64(65,2042
#  define __arch__swab16(80,2719
#  define __arch__swab32(83,2821
#  define __arch__swab64(86,2923
#  define __arch__swab16p(90,3027
#  define __arch__swab32p(93,3108
#  define __arch__swab64p(96,3189
#  define __arch__swab16s(100,3271
#  define __arch__swab32s(103,3377
#  define __arch__swab64s(106,3483
#  define __swab16(114,3666
#  define __swab32(118,3765
#  define __swab64(122,3864
#  define __swab16(127,3969
#  define __swab32(128,4004
#  define __swab64(129,4039
static __inline__ __attribute_const__ __u16 __fswab16(133,4098
static __inline__ __u16 __swab16p(137,4192
static __inline__ void __swab16s(141,4274
static __inline__ __attribute_const__ __u32 __fswab32(146,4349
static __inline__ __u32 __swab32p(150,4443
static __inline__ void __swab32s(154,4525
static __inline__ __attribute_const__ __u64 __fswab64(160,4629
static __inline__ __u64 __swab64p(170,4897
static __inline__ void __swab64s(174,4979
#define swab16 181,5113
#define swab32 182,5137
#define swab64 183,5161
#define swab16p 184,5185
#define swab32p 185,5211
#define swab64p 186,5237
#define swab16s 187,5263
#define swab32s 188,5289
#define swab64s 189,5315

xen/include/asm-ia64/linux/byteorder/little_endian.h,2014
#define _LINUX_BYTEORDER_LITTLE_ENDIAN_H2,41
#define __LITTLE_ENDIAN 5,107
#define __LITTLE_ENDIAN_BITFIELD8,176
#define __constant_htonl(14,277
#define __constant_ntohl(15,347
#define __constant_htons(16,415
#define __constant_ntohs(17,485
#define __constant_cpu_to_le64(18,553
#define __constant_le64_to_cpu(19,616
#define __constant_cpu_to_le32(20,679
#define __constant_le32_to_cpu(21,742
#define __constant_cpu_to_le16(22,805
#define __constant_le16_to_cpu(23,868
#define __constant_cpu_to_be64(24,931
#define __constant_be64_to_cpu(25,1007
#define __constant_cpu_to_be32(26,1088
#define __constant_be32_to_cpu(27,1164
#define __constant_cpu_to_be16(28,1245
#define __constant_be16_to_cpu(29,1321
#define __cpu_to_le64(30,1402
#define __le64_to_cpu(31,1456
#define __cpu_to_le32(32,1510
#define __le32_to_cpu(33,1564
#define __cpu_to_le16(34,1618
#define __le16_to_cpu(35,1672
#define __cpu_to_be64(36,1726
#define __be64_to_cpu(37,1783
#define __cpu_to_be32(38,1845
#define __be32_to_cpu(39,1902
#define __cpu_to_be16(40,1964
#define __be16_to_cpu(41,2021
static inline __le64 __cpu_to_le64p(43,2084
static inline __u64 __le64_to_cpup(47,2168
static inline __le32 __cpu_to_le32p(51,2251
static inline __u32 __le32_to_cpup(55,2335
static inline __le16 __cpu_to_le16p(59,2418
static inline __u16 __le16_to_cpup(63,2502
static inline __be64 __cpu_to_be64p(67,2585
static inline __u64 __be64_to_cpup(71,2679
static inline __be32 __cpu_to_be32p(75,2766
static inline __u32 __be32_to_cpup(79,2860
static inline __be16 __cpu_to_be16p(83,2947
static inline __u16 __be16_to_cpup(87,3041
#define __cpu_to_le64s(91,3128
#define __le64_to_cpus(92,3170
#define __cpu_to_le32s(93,3212
#define __le32_to_cpus(94,3254
#define __cpu_to_le16s(95,3296
#define __le16_to_cpus(96,3338
#define __cpu_to_be64s(97,3380
#define __be64_to_cpus(98,3421
#define __cpu_to_be32s(99,3462
#define __be32_to_cpus(100,3503
#define __cpu_to_be16s(101,3544
#define __be16_to_cpus(102,3585

xen/include/asm-ia64/linux/notifier.h,1005
#define _LINUX_NOTIFIER_H11,346
struct notifier_block14,398
	int (*notifier_call)notifier_call16,422
	struct notifier_block *next;next17,497
	int priority;18,527
#define NOTIFY_DONE	28,838
#define NOTIFY_OK	29,884
#define NOTIFY_STOP_MASK	30,926
#define NOTIFY_BAD	31,984
#define NOTIFY_STOP	35,1124
#define NETDEV_UP	46,1574
#define NETDEV_DOWN	47,1645
#define NETDEV_REBOOT	48,1672
#define NETDEV_CHANGE	52,1862
#define NETDEV_REGISTER 53,1924
#define NETDEV_UNREGISTER	54,1955
#define NETDEV_CHANGEMTU	55,1988
#define NETDEV_CHANGEADDR	56,2020
#define NETDEV_GOING_DOWN	57,2053
#define NETDEV_CHANGENAME	58,2086
#define NETDEV_FEAT_CHANGE	59,2119
#define SYS_DOWN	61,2154
#define SYS_RESTART	62,2206
#define SYS_HALT	63,2235
#define SYS_POWER_OFF	64,2287
#define NETLINK_URELEASE	66,2350
#define CPU_ONLINE	68,2421
#define CPU_UP_PREPARE	69,2476
#define CPU_UP_CANCELED	70,2539
#define CPU_DOWN_PREPARE	71,2607
#define CPU_DOWN_FAILED	72,2672
#define CPU_DEAD	73,2741

xen/include/asm-ia64/linux/completion.h,404
#define __LINUX_COMPLETION_H2,29
struct completion 13,222
	unsigned int done;14,242
	wait_queue_head_t wait;15,262
#define COMPLETION_INITIALIZER(18,291
#define COMPLETION_INITIALIZER_ONSTACK(21,382
#define DECLARE_COMPLETION(24,467
# define DECLARE_COMPLETION_ONSTACK(33,744
# define DECLARE_COMPLETION_ONSTACK(36,857
static inline void init_completion(39,932
#define INIT_COMPLETION(55,1531

xen/include/asm-ia64/linux/mod_devicetable.h,5566
#define LINUX_MOD_DEVICETABLE_H8,176
typedef unsigned long kernel_ulong_t;12,252
#define PCI_ANY_ID 15,298
struct pci_device_id 17,323
	__u32 vendor,18,346
	__u32 vendor, device;18,346
	__u32 subvendor,19,410
	__u32 subvendor, subdevice;19,410
	kernel_ulong_t driver_data;21,539
#define IEEE1394_MATCH_VENDOR_ID	25,606
#define IEEE1394_MATCH_MODEL_ID	26,646
#define IEEE1394_MATCH_SPECIFIER_ID	27,686
#define IEEE1394_MATCH_VERSION	28,729
struct ieee1394_device_id 30,769
	__u32 match_flags;31,797
	__u32 vendor_id;32,817
	__u32 model_id;33,835
	__u32 specifier_id;34,852
	__u32 version;35,873
	kernel_ulong_t driver_data36,889
struct usb_device_id 98,4015
	__u16		match_flags;100,4076
	__u16		idVendor;103,4159
	__u16		idProduct;104,4177
	__u16		bcdDevice_lo;105,4196
	__u16		bcdDevice_hi;106,4218
	__u8		bDeviceClass;109,4278
	__u8		bDeviceSubClass;110,4299
	__u8		bDeviceProtocol;111,4323
	__u8		bInterfaceClass;114,4388
	__u8		bInterfaceSubClass;115,4412
	__u8		bInterfaceProtocol;116,4439
	kernel_ulong_t	driver_info;119,4494
#define USB_DEVICE_ID_MATCH_VENDOR	123,4590
#define USB_DEVICE_ID_MATCH_PRODUCT	124,4633
#define USB_DEVICE_ID_MATCH_DEV_LO	125,4677
#define USB_DEVICE_ID_MATCH_DEV_HI	126,4720
#define USB_DEVICE_ID_MATCH_DEV_CLASS	127,4763
#define USB_DEVICE_ID_MATCH_DEV_SUBCLASS	128,4809
#define USB_DEVICE_ID_MATCH_DEV_PROTOCOL	129,4857
#define USB_DEVICE_ID_MATCH_INT_CLASS	130,4905
#define USB_DEVICE_ID_MATCH_INT_SUBCLASS	131,4951
#define USB_DEVICE_ID_MATCH_INT_PROTOCOL	132,4999
struct ccw_device_id 135,5071
	__u16	match_flags;136,5094
	__u16	cu_type;138,5151
	__u16	dev_type;139,5195
	__u8	cu_model;140,5240
	__u8	dev_model;141,5284
	kernel_ulong_t driver_info;143,5330
#define CCW_DEVICE_ID_MATCH_CU_TYPE	146,5363
#define CCW_DEVICE_ID_MATCH_CU_MODEL	147,5405
#define CCW_DEVICE_ID_MATCH_DEVICE_TYPE	148,5448
#define CCW_DEVICE_ID_MATCH_DEVICE_MODEL	149,5494
struct ap_device_id 152,5567
	__u16 match_flags;153,5589
	__u8 dev_type;154,5645
	__u8 pad1;155,5680
	__u32 pad2;156,5692
	kernel_ulong_t driver_info;157,5705
#define AP_DEVICE_ID_MATCH_DEVICE_TYPE	160,5738
#define PNP_ID_LEN	163,5785
#define PNP_MAX_DEVICES	164,5806
struct pnp_device_id 166,5833
	__u8 id[id167,5856
	kernel_ulong_t driver_data;168,5878
struct pnp_card_device_id 171,5911
	__u8 id[id172,5939
	kernel_ulong_t driver_data;173,5961
		__u8 id[id175,6000
	} devs[devs176,6023
#define SERIO_ANY	180,6054
struct serio_device_id 182,6078
	__u8 type;183,6103
	__u8 extra;184,6115
	__u8 id;185,6128
	__u8 proto;186,6138
struct of_device_id192,6199
	char	name[name194,6221
	char	type[type195,6237
	char	compatible[compatible196,6253
	void	*data;data198,6294
	kernel_ulong_t data;200,6313
struct vio_device_id 205,6356
	char type[type206,6379
	char compat[compat207,6395
struct pcmcia_device_id 212,6431
	__u16		match_flags;213,6457
	__u16		manf_id;215,6479
	__u16 		card_id;216,6496
	__u8  		func_id;218,6515
	__u8  		function;221,6573
	__u8  		device_no;224,6634
	__u32 		prod_id_hash[prod_id_hash226,6655
	const char *	prod_id[prod_id231,6783
	kernel_ulong_t	prod_id[prod_id233,6815
	kernel_ulong_t	driver_info;238,6929
	char *		cisfile;240,6976
	kernel_ulong_t	cisfile;242,7000
#define PCMCIA_DEV_ID_MATCH_MANF_ID	246,7036
#define PCMCIA_DEV_ID_MATCH_CARD_ID	247,7079
#define PCMCIA_DEV_ID_MATCH_FUNC_ID	248,7122
#define PCMCIA_DEV_ID_MATCH_FUNCTION	249,7165
#define PCMCIA_DEV_ID_MATCH_PROD_ID1	250,7209
#define PCMCIA_DEV_ID_MATCH_PROD_ID2	251,7253
#define PCMCIA_DEV_ID_MATCH_PROD_ID3	252,7297
#define PCMCIA_DEV_ID_MATCH_PROD_ID4	253,7341
#define PCMCIA_DEV_ID_MATCH_DEVICE_NO	254,7385
#define PCMCIA_DEV_ID_MATCH_FAKE_CIS	255,7430
#define PCMCIA_DEV_ID_MATCH_ANONYMOUS	256,7474
struct i2c_device_id 259,7530
	__u16 id;260,7553
#define INPUT_DEVICE_ID_EV_MAX	264,7580
#define INPUT_DEVICE_ID_KEY_MAX	265,7617
#define INPUT_DEVICE_ID_REL_MAX	266,7656
#define INPUT_DEVICE_ID_ABS_MAX	267,7694
#define INPUT_DEVICE_ID_MSC_MAX	268,7732
#define INPUT_DEVICE_ID_LED_MAX	269,7770
#define INPUT_DEVICE_ID_SND_MAX	270,7808
#define INPUT_DEVICE_ID_FF_MAX	271,7846
#define INPUT_DEVICE_ID_SW_MAX	272,7883
#define INPUT_DEVICE_ID_MATCH_BUS	274,7921
#define INPUT_DEVICE_ID_MATCH_VENDOR	275,7957
#define INPUT_DEVICE_ID_MATCH_PRODUCT	276,7996
#define INPUT_DEVICE_ID_MATCH_VERSION	277,8036
#define INPUT_DEVICE_ID_MATCH_EVBIT	279,8077
#define INPUT_DEVICE_ID_MATCH_KEYBIT	280,8120
#define INPUT_DEVICE_ID_MATCH_RELBIT	281,8164
#define INPUT_DEVICE_ID_MATCH_ABSBIT	282,8208
#define INPUT_DEVICE_ID_MATCH_MSCIT	283,8252
#define INPUT_DEVICE_ID_MATCH_LEDBIT	284,8295
#define INPUT_DEVICE_ID_MATCH_SNDBIT	285,8339
#define INPUT_DEVICE_ID_MATCH_FFBIT	286,8383
#define INPUT_DEVICE_ID_MATCH_SWBIT	287,8426
struct input_device_id 289,8470
	kernel_ulong_t flags;291,8496
	__u16 bustype;293,8520
	__u16 vendor;294,8536
	__u16 product;295,8551
	__u16 version;296,8567
	kernel_ulong_t evbit[evbit298,8584
	kernel_ulong_t keybit[keybit299,8651
	kernel_ulong_t relbit[relbit300,8720
	kernel_ulong_t absbit[absbit301,8789
	kernel_ulong_t mscbit[mscbit302,8858
	kernel_ulong_t ledbit[ledbit303,8927
	kernel_ulong_t sndbit[sndbit304,8996
	kernel_ulong_t ffbit[ffbit305,9065
	kernel_ulong_t swbit[swbit306,9132
	kernel_ulong_t driver_info;308,9200
#define EISA_SIG_LEN 313,9245
struct eisa_device_id 316,9328
	char          sig[sig317,9352
	kernel_ulong_t driver_data;318,9386
#define EISA_DEVICE_MODALIAS_FMT 321,9419

xen/include/asm-ia64/linux/stddef.h,160
#define _LINUX_STDDEF_H2,24
#undef NULL6,78
#define NULL 8,115
#define NULL 10,136
#undef offsetof13,169
#define offsetof(15,212
#define offsetof(17,281

xen/include/asm-ia64/linux/seqlock.h,1048
#define __LINUX_SEQLOCK_H2,26
	unsigned sequence;34,1051
	spinlock_t lock;35,1071
} seqlock_t;36,1089
#define SEQLOCK_UNLOCKED 42,1212
#define seqlock_init(43,1263
static inline void write_seqlock(50,1509
static inline void write_sequnlock(57,1618
static inline int write_tryseqlock(64,1728
static inline unsigned read_seqbegin(76,1950
static inline int read_seqretry(91,2328
typedef struct seqcount 105,2663
	unsigned sequence;106,2689
} seqcount_t;107,2709
#define SEQCNT_ZERO 109,2724
#define seqcount_init(110,2750
static inline unsigned read_seqcount_begin(113,2889
static inline int read_seqcount_retry(125,3202
static inline void write_seqcount_begin(136,3425
static inline void write_seqcount_end(142,3513
#define write_seqlock_irqsave(151,3666
#define write_seqlock_irq(153,3776
#define write_seqlock_bh(155,3877
#define write_sequnlock_irqrestore(158,3985
#define write_sequnlock_irq(160,4104
#define write_sequnlock_bh(162,4204
#define read_seqbegin_irqsave(165,4303
#define read_seqretry_irqrestore(168,4405

xen/include/asm-ia64/linux/bitops.h,500
#define _LINUX_BITOPS_H2,24
static inline int generic_ffs(11,248
static __inline__ int generic_fls(44,587
static __inline__ int get_bitmask_order(79,1049
static inline unsigned int generic_hweight32(92,1316
static inline unsigned int generic_hweight16(101,1703
static inline unsigned int generic_hweight8(109,1995
static inline unsigned long generic_hweight64(116,2220
static inline unsigned long hweight_long(132,2868
static inline __u32 rol32(143,3099
static inline __u32 ror32(154,3311

xen/include/asm-ia64/linux/sysfs.h,1831
#define _SYSFS_H_11,249
struct attribute 19,353
	const char		* name;20,372
	struct module 		* owner;21,393
	mode_t			mode;22,419
struct attribute_group 25,439
	const char		* name;26,464
	struct attribute	** attrs;27,485
#define __ATTR(37,629
#define __ATTR_RO(43,802
#define __ATTR_NULL 48,938
#define attr_name(50,988
struct bin_attribute 54,1056
	struct attribute	attr;55,1079
	size_t			size;56,1103
	void			*private;private57,1119
	ssize_t (*read)read58,1137
	ssize_t (*write)write59,1197
	int (*mmap)mmap60,1258
struct sysfs_ops 64,1356
	ssize_t	(*show)show65,1375
	ssize_t	(*store)store66,1438
struct sysfs_dirent 69,1519
	atomic_t		s_count;70,1541
	struct list_head	s_sibling;71,1561
	struct list_head	s_children;72,1590
	void 			* s_element;73,1620
	int			s_type;74,1642
	umode_t			s_mode;75,1657
	struct dentry		* s_dentry;76,1676
	struct iattr		* s_iattr;77,1704
	atomic_t		s_event;78,1730
#define SYSFS_ROOT	81,1754
#define SYSFS_DIR	82,1781
#define SYSFS_KOBJ_ATTR 83,1807
#define SYSFS_KOBJ_BIN_ATTR	84,1839
#define SYSFS_KOBJ_LINK 85,1874
#define SYSFS_NOT_PINNED	86,1906
static inline int sysfs_create_dir(130,3211
static inline void sysfs_remove_dir(135,3282
static inline int sysfs_rename_dir(140,3346
static inline int sysfs_create_file(145,3439
static inline int sysfs_update_file(150,3539
static inline int sysfs_chmod_file(154,3638
static inline void sysfs_remove_file(159,3748
static inline int sysfs_create_link(164,3841
static inline void sysfs_remove_link(169,3949
static inline int sysfs_create_bin_file(175,4034
static inline int sysfs_remove_bin_file(180,4136
static inline int sysfs_create_group(185,4238
static inline void sysfs_remove_group(190,4344
static inline void sysfs_notify(195,4444
static inline int __must_check sysfs_init(199,4524

xen/include/asm-ia64/linux/time.h,1427
#define _LINUX_TIME_H2,22
#define _STRUCT_TIMESPEC11,149
struct timespec 12,174
	time_t	tv_sec;13,192
	long	tv_nsec;14,223
struct timeval 18,290
	time_t		tv_sec;19,307
	suseconds_t	tv_usec;20,339
struct timezone 23,384
	int	tz_minuteswest;24,402
	int	tz_dsttime;25,455
#define USEC_PER_SEC 32,598
#define NSEC_PER_SEC 36,659
#define NSEC_PER_USEC 40,724
static __inline__ int timespec_equal(43,762
mktime 64,1629
static inline unsigned long get_seconds(85,2199
#define CURRENT_TIME 92,2317
#define CURRENT_TIME_SEC 93,2362
set_normalized_timespec 110,3161
#define NFDBITS	126,3423
#define FD_SETSIZE	128,3452
#define FD_SET(129,3485
#define FD_CLR(130,3531
#define FD_ISSET(131,3577
#define FD_ZERO(132,3627
#define	ITIMER_REAL	138,3754
#define	ITIMER_VIRTUAL	139,3776
#define	ITIMER_PROF	140,3801
struct  itimerspec 142,3824
        struct  timespec it_interval;143,3845
        struct  timespec it_value;144,3905
struct	itimerval 147,3973
	struct	timeval it_interval;148,3992
	struct	timeval it_value;149,4042
#define CLOCK_REALTIME	156,4172
#define CLOCK_MONOTONIC	157,4200
#define CLOCK_PROCESS_CPUTIME_ID 158,4228
#define CLOCK_THREAD_CPUTIME_ID	159,4263
#define CLOCK_REALTIME_HR	160,4298
#define CLOCK_MONOTONIC_HR	161,4327
#define CLOCK_SGI_CYCLE 168,4406
#define MAX_CLOCKS 169,4433
#define CLOCKS_MASK 170,4455
#define CLOCKS_MONO 172,4575
#define TIMER_ABSTIME 178,4702

xen/include/asm-ia64/linux/hash.h,189
#define _LINUX_HASH_H2,22
#define GOLDEN_RATIO_PRIME 18,656
#define GOLDEN_RATIO_PRIME 21,773
static inline unsigned long hash_long(26,887
static inline unsigned long hash_ptr(54,1449

xen/include/asm-ia64/linux/pm.h,2962
#define _LINUX_PM_H22,834
typedef int __bitwise pm_request_t;34,1066
#define PM_SUSPEND	36,1103
#define PM_RESUME	37,1167
typedef int __bitwise pm_dev_t;43,1287
#define PM_UNKNOWN_DEV	45,1320
#define PM_SYS_DEV	46,1380
#define PM_PCI_DEV	47,1468
#define PM_USB_DEV	48,1527
#define PM_SCSI_DEV	49,1586
#define PM_ISA_DEV	50,1647
#define	PM_MTD_DEV	51,1706
	PM_SYS_UNKNOWN 58,1836
	PM_SYS_UNKNOWN = 0x00000000,x0000000058,1836
	PM_SYS_KBC 59,1880
	PM_SYS_KBC =	 0x41d00303,x41d0030359,1880
	PM_SYS_COM 60,1933
	PM_SYS_COM =	 0x41d00500,x41d0050060,1933
	PM_SYS_IRDA 61,1978
	PM_SYS_IRDA =	 0x41d00510,x41d0051061,1978
	PM_SYS_FDC 62,2028
	PM_SYS_FDC =	 0x41d00700,x41d0070062,2028
	PM_SYS_VGA 63,2079
	PM_SYS_VGA =	 0x41d00900,x41d0090063,2079
	PM_SYS_PCMCIA 64,2127
	PM_SYS_PCMCIA =	 0x41d00e00,x41d00e0064,2127
#define PM_PCI_ID(70,2213
typedef int (*pm_callback)pm_callback77,2330
struct pm_dev82,2447
	pm_dev_t	 type;84,2463
	unsigned long	 id;85,2480
	pm_callback	 callback;86,2500
	void		*data;data87,2524
	unsigned long	 flags;89,2539
	unsigned long	 state;90,2562
	unsigned long	 prev_state;91,2585
	struct list_head entry;93,2614
typedef int __bitwise suspend_state_t;105,2871
#define PM_SUSPEND_ON	107,2911
#define PM_SUSPEND_STANDBY	108,2964
#define PM_SUSPEND_MEM	109,3021
#define PM_SUSPEND_DISK	110,3075
#define PM_SUSPEND_MAX	111,3130
typedef int __bitwise suspend_disk_method_t;113,3185
#define	PM_DISK_FIRMWARE	115,3231
#define	PM_DISK_PLATFORM	116,3292
#define	PM_DISK_SHUTDOWN	117,3353
#define	PM_DISK_REBOOT	118,3414
#define	PM_DISK_TEST	119,3474
#define	PM_DISK_TESTPROC	120,3532
#define	PM_DISK_MAX	121,3593
struct pm_ops 123,3651
	suspend_disk_method_t pm_disk_mode;124,3667
	int (*valid)valid125,3704
	int (*prepare)prepare126,3742
	int (*enter)enter127,3782
	int (*finish)finish128,3820
typedef struct pm_message 142,4033
	int event;143,4061
} pm_message_t;144,4073
#define PM_EVENT_ON 195,6568
#define PM_EVENT_FREEZE 196,6590
#define PM_EVENT_SUSPEND 197,6616
#define PM_EVENT_PRETHAW 198,6643
#define PMSG_FREEZE	200,6671
#define PMSG_PRETHAW	201,6742
#define PMSG_SUSPEND	202,6815
#define PMSG_ON	203,6888
struct dev_pm_info 205,6953
	pm_message_t		power_state;206,6974
	unsigned		can_wakeup:can_wakeup207,7002
	unsigned		should_wakeup:should_wakeup209,7044
	pm_message_t		prev_state;210,7072
	void			* saved_state;211,7099
	struct device		* pm_parent;212,7122
	struct list_head	entry;213,7151
#define device_set_wakeup_enable(229,7550
#define device_may_wakeup(231,7634
#define suspend_report_result(238,7915
static inline int device_suspend(245,8066
#define device_set_wakeup_enable(250,8135
#define device_may_wakeup(251,8190
static inline int dpm_runtime_suspend(253,8228
static inline void dpm_runtime_resume(258,8323
#define suspend_report_result(262,8387
#define device_can_wakeup(269,8579
#define device_init_wakeup(271,8639

xen/include/asm-ia64/linux/percpu.h,384
#define __LINUX_PERCPU_H2,25
#define PERCPU_ENOUGH_ROOM 11,342
#define get_cpu_var(15,408
#define put_cpu_var(16,482
struct percpu_data 20,544
	void *ptrs[ptrs21,565
	void *blkp;blkp22,587
#define per_cpu_ptr(30,811
#define per_cpu_ptr(41,1161
static inline void *__alloc_percpu(__alloc_percpu43,1198
static inline void free_percpu(50,1351
#define alloc_percpu(58,1499

xen/include/asm-ia64/linux/klist.h,454
#define _LINUX_KLIST_H13,240
struct klist 21,390
	spinlock_t		k_lock;22,405
	struct list_head	k_list;23,426
	void			(*get)get24,452
	void			(*put)put25,489
struct klist_node 32,651
	struct klist		* n_klist;33,671
	struct list_head	n_node;34,697
	struct kref		n_ref;35,723
	struct completion	n_removed;36,744
struct klist_iter 48,1070
	struct klist		* i_klist;49,1090
	struct list_head	* i_head;50,1116
	struct klist_node	* i_cur;51,1144

xen/include/asm-ia64/linux/kref.h,71
#define _KREF_H_16,394
struct kref 23,481
	atomic_t refcount;24,495

xen/include/asm-ia64/linux/pci_regs.h,14829
#define LINUX_PCI_REGS_H23,563
#define PCI_VENDOR_ID	29,728
#define PCI_DEVICE_ID	30,770
#define PCI_COMMAND	31,812
#define  PCI_COMMAND_IO	32,852
#define  PCI_COMMAND_MEMORY	33,916
#define  PCI_COMMAND_MASTER	34,986
#define  PCI_COMMAND_SPECIAL	35,1045
#define  PCI_COMMAND_INVALIDATE	36,1118
#define  PCI_COMMAND_VGA_PALETTE 37,1193
#define  PCI_COMMAND_PARITY	38,1261
#define  PCI_COMMAND_WAIT 39,1323
#define  PCI_COMMAND_SERR	40,1390
#define  PCI_COMMAND_FAST_BACK	41,1440
#define  PCI_COMMAND_INTX_DISABLE 42,1510
#define PCI_STATUS	44,1580
#define  PCI_STATUS_CAP_LIST	45,1619
#define  PCI_STATUS_66MHZ	46,1683
#define  PCI_STATUS_UDF	47,1747
#define  PCI_STATUS_FAST_BACK	48,1826
#define  PCI_STATUS_PARITY	49,1892
#define  PCI_STATUS_DEVSEL_MASK	50,1953
#define  PCI_STATUS_DEVSEL_FAST	51,2011
#define  PCI_STATUS_DEVSEL_MEDIUM	52,2050
#define  PCI_STATUS_DEVSEL_SLOW	53,2090
#define  PCI_STATUS_SIG_TARGET_ABORT	54,2129
#define  PCI_STATUS_REC_TARGET_ABORT	55,2198
#define  PCI_STATUS_REC_MASTER_ABORT	56,2264
#define  PCI_STATUS_SIG_SYSTEM_ERROR	57,2334
#define  PCI_STATUS_DETECTED_PARITY	58,2407
#define PCI_CLASS_REVISION	60,2477
#define PCI_REVISION_ID	61,2554
#define PCI_CLASS_PROG	62,2602
#define PCI_CLASS_DEVICE	63,2670
#define PCI_CACHE_LINE_SIZE	65,2720
#define PCI_LATENCY_TIMER	66,2766
#define PCI_HEADER_TYPE	67,2810
#define  PCI_HEADER_TYPE_NORMAL	68,2853
#define  PCI_HEADER_TYPE_BRIDGE	69,2888
#define  PCI_HEADER_TYPE_CARDBUS	70,2923
#define PCI_BIST	72,2959
#define  PCI_BIST_CODE_MASK	73,2995
#define  PCI_BIST_START	74,3048
#define  PCI_BIST_CAPABLE	75,3116
#define PCI_BASE_ADDRESS_0	83,3376
#define PCI_BASE_ADDRESS_1	84,3422
#define PCI_BASE_ADDRESS_2	85,3485
#define PCI_BASE_ADDRESS_3	86,3546
#define PCI_BASE_ADDRESS_4	87,3592
#define PCI_BASE_ADDRESS_5	88,3638
#define  PCI_BASE_ADDRESS_SPACE	89,3684
#define  PCI_BASE_ADDRESS_SPACE_IO	90,3748
#define  PCI_BASE_ADDRESS_SPACE_MEMORY	91,3788
#define  PCI_BASE_ADDRESS_MEM_TYPE_MASK	92,3832
#define  PCI_BASE_ADDRESS_MEM_TYPE_32	93,3877
#define  PCI_BASE_ADDRESS_MEM_TYPE_1M	94,3941
#define  PCI_BASE_ADDRESS_MEM_TYPE_64	95,4010
#define  PCI_BASE_ADDRESS_MEM_PREFETCH	96,4074
#define  PCI_BASE_ADDRESS_MEM_MASK	97,4138
#define  PCI_BASE_ADDRESS_IO_MASK	98,4183
#define PCI_CARDBUS_CIS	102,4310
#define PCI_SUBSYSTEM_VENDOR_ID	103,4340
#define PCI_SUBSYSTEM_ID	104,4377
#define PCI_ROM_ADDRESS	105,4407
#define  PCI_ROM_ADDRESS_ENABLE	106,4483
#define PCI_ROM_ADDRESS_MASK	107,4520
#define PCI_CAPABILITY_LIST	109,4561
#define PCI_INTERRUPT_LINE	112,4668
#define PCI_INTERRUPT_PIN	113,4713
#define PCI_MIN_GNT	114,4757
#define PCI_MAX_LAT	115,4796
#define PCI_PRIMARY_BUS	118,4877
#define PCI_SECONDARY_BUS	119,4932
#define PCI_SUBORDINATE_BUS	120,4990
#define PCI_SEC_LATENCY_TIMER	121,5066
#define PCI_IO_BASE	122,5145
#define PCI_IO_LIMIT	123,5205
#define  PCI_IO_RANGE_TYPE_MASK	124,5232
#define  PCI_IO_RANGE_TYPE_16	125,5295
#define  PCI_IO_RANGE_TYPE_32	126,5330
#define  PCI_IO_RANGE_MASK	127,5365
#define PCI_SEC_STATUS	128,5402
#define PCI_MEMORY_BASE	129,5481
#define PCI_MEMORY_LIMIT	130,5537
#define  PCI_MEMORY_RANGE_TYPE_MASK 131,5567
#define  PCI_MEMORY_RANGE_MASK	132,5610
#define PCI_PREF_MEMORY_BASE	133,5651
#define PCI_PREF_MEMORY_LIMIT	134,5724
#define  PCI_PREF_RANGE_TYPE_MASK 135,5759
#define  PCI_PREF_RANGE_TYPE_32	136,5800
#define  PCI_PREF_RANGE_TYPE_64	137,5837
#define  PCI_PREF_RANGE_MASK	138,5874
#define PCI_PREF_BASE_UPPER32	139,5913
#define PCI_PREF_LIMIT_UPPER32	140,5994
#define PCI_IO_BASE_UPPER16	141,6030
#define PCI_IO_LIMIT_UPPER16	142,6097
#define PCI_ROM_ADDRESS1	145,6190
#define PCI_BRIDGE_CONTROL	147,6307
#define  PCI_BRIDGE_CTL_PARITY	148,6339
#define  PCI_BRIDGE_CTL_SERR	149,6428
#define  PCI_BRIDGE_CTL_NO_ISA	150,6497
#define  PCI_BRIDGE_CTL_VGA	151,6569
#define  PCI_BRIDGE_CTL_MASTER_ABORT	152,6630
#define  PCI_BRIDGE_CTL_BUS_RESET	153,6700
#define  PCI_BRIDGE_CTL_FAST_BACK	154,6765
#define PCI_CB_CAPABILITY_LIST	157,6895
#define PCI_CB_SEC_STATUS	159,6951
#define PCI_CB_PRIMARY_BUS	160,7005
#define PCI_CB_CARD_BUS	161,7058
#define PCI_CB_SUBORDINATE_BUS	162,7113
#define PCI_CB_LATENCY_TIMER	163,7178
#define PCI_CB_MEMORY_BASE_0	164,7240
#define PCI_CB_MEMORY_LIMIT_0	165,7274
#define PCI_CB_MEMORY_BASE_1	166,7309
#define PCI_CB_MEMORY_LIMIT_1	167,7343
#define PCI_CB_IO_BASE_0	168,7378
#define PCI_CB_IO_BASE_0_HI	169,7408
#define PCI_CB_IO_LIMIT_0	170,7441
#define PCI_CB_IO_LIMIT_0_HI	171,7472
#define PCI_CB_IO_BASE_1	172,7506
#define PCI_CB_IO_BASE_1_HI	173,7536
#define PCI_CB_IO_LIMIT_1	174,7569
#define PCI_CB_IO_LIMIT_1_HI	175,7600
#define  PCI_CB_IO_RANGE_MASK	176,7634
#define PCI_CB_BRIDGE_CONTROL	178,7714
#define  PCI_CB_BRIDGE_CTL_PARITY	179,7749
#define  PCI_CB_BRIDGE_CTL_SERR	180,7838
#define  PCI_CB_BRIDGE_CTL_ISA	181,7876
#define  PCI_CB_BRIDGE_CTL_VGA	182,7913
#define  PCI_CB_BRIDGE_CTL_MASTER_ABORT	183,7950
#define  PCI_CB_BRIDGE_CTL_CB_RESET	184,7995
#define  PCI_CB_BRIDGE_CTL_16BIT_INT	185,8056
#define  PCI_CB_BRIDGE_CTL_PREFETCH_MEM0 186,8138
#define  PCI_CB_BRIDGE_CTL_PREFETCH_MEM1 187,8231
#define  PCI_CB_BRIDGE_CTL_POST_WRITES	188,8278
#define PCI_CB_SUBSYSTEM_VENDOR_ID	189,8323
#define PCI_CB_SUBSYSTEM_ID	190,8363
#define PCI_CB_LEGACY_MODE_BASE	191,8397
#define PCI_CAP_LIST_ID	196,8538
#define  PCI_CAP_ID_PM	197,8585
#define  PCI_CAP_ID_AGP	198,8637
#define  PCI_CAP_ID_VPD	199,8699
#define  PCI_CAP_ID_SLOTID	200,8754
#define  PCI_CAP_ID_MSI	201,8812
#define  PCI_CAP_ID_CHSWP	202,8877
#define  PCI_CAP_ID_PCIX	203,8933
#define  PCI_CAP_ID_HT	204,8975
#define  PCI_CAP_ID_VNDR	205,9025
#define  PCI_CAP_ID_SHPC 206,9088
#define  PCI_CAP_ID_EXP 207,9158
#define  PCI_CAP_ID_MSIX	208,9206
#define PCI_CAP_LIST_NEXT	209,9248
#define PCI_CAP_FLAGS	210,9310
#define PCI_CAP_SIZEOF	211,9376
#define PCI_PM_PMC	215,9437
#define  PCI_PM_CAP_VER_MASK	216,9490
#define  PCI_PM_CAP_PME_CLOCK	217,9540
#define  PCI_PM_CAP_RESERVED 218,9602
#define  PCI_PM_CAP_DSI	219,9663
#define  PCI_PM_CAP_AUX_POWER	220,9732
#define  PCI_PM_CAP_D1	221,9805
#define  PCI_PM_CAP_D2	222,9865
#define  PCI_PM_CAP_PME	223,9925
#define  PCI_PM_CAP_PME_MASK	224,9981
#define  PCI_PM_CAP_PME_D0	225,10056
#define  PCI_PM_CAP_PME_D1	226,10109
#define  PCI_PM_CAP_PME_D2	227,10162
#define  PCI_PM_CAP_PME_D3	228,10215
#define  PCI_PM_CAP_PME_D3cold	229,10274
#define PCI_PM_CTRL	230,10338
#define  PCI_PM_CTRL_STATE_MASK	231,10398
#define  PCI_PM_CTRL_NO_SOFT_RESET	232,10474
#define  PCI_PM_CTRL_PME_ENABLE	233,10545
#define  PCI_PM_CTRL_DATA_SEL_MASK	234,10605
#define  PCI_PM_CTRL_DATA_SCALE_MASK	235,10670
#define  PCI_PM_CTRL_PME_STATUS	236,10736
#define PCI_PM_PPB_EXTENSIONS	237,10796
#define  PCI_PM_PPB_B2_B3	238,10862
#define  PCI_PM_BPCC_ENABLE	239,10929
#define PCI_PM_DATA_REGISTER	240,11004
#define PCI_PM_SIZEOF	241,11046
#define PCI_AGP_VERSION	245,11093
#define PCI_AGP_RFU	246,11145
#define PCI_AGP_STATUS	247,11199
#define  PCI_AGP_STATUS_RQ_MASK	248,11247
#define  PCI_AGP_STATUS_SBA	249,11327
#define  PCI_AGP_STATUS_64BIT	250,11398
#define  PCI_AGP_STATUS_FW	251,11469
#define  PCI_AGP_STATUS_RATE4	252,11532
#define  PCI_AGP_STATUS_RATE2	253,11602
#define  PCI_AGP_STATUS_RATE1	254,11672
#define PCI_AGP_COMMAND	255,11742
#define  PCI_AGP_COMMAND_RQ_MASK 256,11792
#define  PCI_AGP_COMMAND_SBA	257,11878
#define  PCI_AGP_COMMAND_AGP	258,11948
#define  PCI_AGP_COMMAND_64BIT	259,12027
#define  PCI_AGP_COMMAND_FW	260,12109
#define  PCI_AGP_COMMAND_RATE4	261,12170
#define  PCI_AGP_COMMAND_RATE2	262,12226
#define  PCI_AGP_COMMAND_RATE1	263,12282
#define PCI_AGP_SIZEOF	264,12338
#define PCI_VPD_ADDR	268,12392
#define  PCI_VPD_ADDR_MASK	269,12451
#define  PCI_VPD_ADDR_F	270,12504
#define PCI_VPD_DATA	271,12574
#define PCI_SID_ESR	275,12662
#define  PCI_SID_ESR_NSLOTS	276,12715
#define  PCI_SID_ESR_FIC	277,12790
#define PCI_SID_CHASSIS_NR	278,12848
#define PCI_MSI_FLAGS	282,12945
#define  PCI_MSI_FLAGS_64BIT	283,12990
#define  PCI_MSI_FLAGS_QSIZE	284,13055
#define  PCI_MSI_FLAGS_QMASK	285,13125
#define  PCI_MSI_FLAGS_ENABLE	286,13194
#define  PCI_MSI_FLAGS_MASKBIT	287,13255
#define PCI_MSI_RFU	288,13323
#define PCI_MSI_ADDRESS_LO	289,13377
#define PCI_MSI_ADDRESS_HI	290,13426
#define PCI_MSI_DATA_32	291,13504
#define PCI_MSI_DATA_64	292,13572
#define PCI_MSI_MASK_BIT	293,13641
#define PCI_CHSWP_CSR	297,13730
#define  PCI_CHSWP_DHA	298,13789
#define  PCI_CHSWP_EIM	299,13842
#define  PCI_CHSWP_PIE	300,13895
#define  PCI_CHSWP_LOO	301,13956
#define  PCI_CHSWP_PI	302,14004
#define  PCI_CHSWP_EXT	303,14060
#define  PCI_CHSWP_INS	304,14121
#define PCI_X_CMD	308,14205
#define  PCI_X_CMD_DPERR_E	309,14249
#define  PCI_X_CMD_ERO	310,14323
#define  PCI_X_CMD_MAX_READ	311,14384
#define  PCI_X_CMD_MAX_SPLIT	312,14452
#define  PCI_X_CMD_VERSION(313,14529
#define PCI_X_STATUS	314,14592
#define  PCI_X_STATUS_DEVFN	315,14641
#define  PCI_X_STATUS_BUS	316,14702
#define  PCI_X_STATUS_64BIT	317,14762
#define  PCI_X_STATUS_133MHZ	318,14821
#define  PCI_X_STATUS_SPL_DISC	319,14883
#define  PCI_X_STATUS_UNX_SPL	320,14958
#define  PCI_X_STATUS_COMPLEX	321,15033
#define  PCI_X_STATUS_MAX_READ	322,15098
#define  PCI_X_STATUS_MAX_SPLIT	323,15177
#define  PCI_X_STATUS_MAX_CUM	324,15270
#define  PCI_X_STATUS_SPL_ERR	325,15351
#define  PCI_X_STATUS_266MHZ	326,15430
#define  PCI_X_STATUS_533MHZ	327,15492
#define PCI_EXP_FLAGS	331,15595
#define PCI_EXP_FLAGS_VERS	332,15648
#define PCI_EXP_FLAGS_TYPE	333,15707
#define  PCI_EXP_TYPE_ENDPOINT	334,15764
#define  PCI_EXP_TYPE_LEG_END	335,15822
#define  PCI_EXP_TYPE_ROOT_PORT 336,15878
#define  PCI_EXP_TYPE_UPSTREAM	337,15930
#define  PCI_EXP_TYPE_DOWNSTREAM 338,15985
#define  PCI_EXP_TYPE_PCI_BRIDGE 339,16044
#define PCI_EXP_FLAGS_SLOT	340,16104
#define PCI_EXP_FLAGS_IRQ	341,16161
#define PCI_EXP_DEVCAP	342,16225
#define  PCI_EXP_DEVCAP_PAYLOAD	343,16277
#define  PCI_EXP_DEVCAP_PHANTOM	344,16337
#define  PCI_EXP_DEVCAP_EXT_TAG	345,16398
#define  PCI_EXP_DEVCAP_L0S	346,16455
#define  PCI_EXP_DEVCAP_L1	347,16518
#define  PCI_EXP_DEVCAP_ATN_BUT	348,16579
#define  PCI_EXP_DEVCAP_ATN_IND	349,16649
#define  PCI_EXP_DEVCAP_PWR_IND	350,16722
#define  PCI_EXP_DEVCAP_PWR_VAL	351,16791
#define  PCI_EXP_DEVCAP_PWR_SCL	352,16862
#define PCI_EXP_DEVCTL	353,16933
#define  PCI_EXP_DEVCTL_CERE	354,16980
#define  PCI_EXP_DEVCTL_NFERE	355,17054
#define  PCI_EXP_DEVCTL_FERE	356,17130
#define  PCI_EXP_DEVCTL_URRE	357,17201
#define  PCI_EXP_DEVCTL_RELAX_EN 358,17277
#define  PCI_EXP_DEVCTL_PAYLOAD	359,17347
#define  PCI_EXP_DEVCTL_EXT_TAG	360,17409
#define  PCI_EXP_DEVCTL_PHANTOM	361,17480
#define  PCI_EXP_DEVCTL_AUX_PME	362,17550
#define  PCI_EXP_DEVCTL_NOSNOOP_EN 363,17621
#define  PCI_EXP_DEVCTL_READRQ	364,17686
#define PCI_EXP_DEVSTA	365,17752
#define  PCI_EXP_DEVSTA_CED	366,17799
#define  PCI_EXP_DEVSTA_NFED	367,17865
#define  PCI_EXP_DEVSTA_FED	368,17930
#define  PCI_EXP_DEVSTA_URD	369,17990
#define  PCI_EXP_DEVSTA_AUXPD	370,18058
#define  PCI_EXP_DEVSTA_TRPND	371,18118
#define PCI_EXP_LNKCAP	372,18180
#define PCI_EXP_LNKCTL	373,18231
#define  PCI_EXP_LNKCTL_CLKREQ_EN 374,18277
#define PCI_EXP_LNKSTA	375,18337
#define PCI_EXP_SLTCAP	376,18382
#define PCI_EXP_SLTCTL	377,18433
#define PCI_EXP_SLTSTA	378,18479
#define PCI_EXP_RTCTL	379,18524
#define  PCI_EXP_RTCTL_SECEE	380,18569
#define  PCI_EXP_RTCTL_SENFEE	381,18643
#define  PCI_EXP_RTCTL_SEFEE	382,18716
#define  PCI_EXP_RTCTL_PMEIE	383,18784
#define  PCI_EXP_RTCTL_CRSSVE	384,18845
#define PCI_EXP_RTCAP	385,18917
#define PCI_EXP_RTSTA	386,18967
#define PCI_EXT_CAP_ID(389,19064
#define PCI_EXT_CAP_VER(390,19118
#define PCI_EXT_CAP_NEXT(391,19174
#define PCI_EXT_CAP_ID_ERR	393,19233
#define PCI_EXT_CAP_ID_VC	394,19262
#define PCI_EXT_CAP_ID_DSN	395,19290
#define PCI_EXT_CAP_ID_PWR	396,19319
#define PCI_ERR_UNCOR_STATUS	399,19380
#define  PCI_ERR_UNC_TRAIN	400,19444
#define  PCI_ERR_UNC_DLP	401,19497
#define  PCI_ERR_UNC_POISON_TLP	402,19558
#define  PCI_ERR_UNC_FCP	403,19620
#define  PCI_ERR_UNC_COMP_TIME	404,19684
#define  PCI_ERR_UNC_COMP_ABORT	405,19751
#define  PCI_ERR_UNC_UNX_COMP	406,19816
#define  PCI_ERR_UNC_RX_OVER	407,19885
#define  PCI_ERR_UNC_MALF_TLP	408,19949
#define  PCI_ERR_UNC_ECRC	409,20010
#define  PCI_ERR_UNC_UNSUP	410,20071
#define PCI_ERR_UNCOR_MASK	411,20135
#define PCI_ERR_UNCOR_SEVER	413,20221
#define PCI_ERR_COR_STATUS	415,20313
#define  PCI_ERR_COR_RCVR	416,20374
#define  PCI_ERR_COR_BAD_TLP	417,20439
#define  PCI_ERR_COR_BAD_DLLP	418,20500
#define  PCI_ERR_COR_REP_ROLL	419,20563
#define  PCI_ERR_COR_REP_TIMER	420,20630
#define PCI_ERR_COR_MASK	421,20699
#define PCI_ERR_CAP	423,20782
#define  PCI_ERR_CAP_FEP(424,20840
#define  PCI_ERR_CAP_ECRC_GENC	425,20905
#define  PCI_ERR_CAP_ECRC_GENE	426,20977
#define  PCI_ERR_CAP_ECRC_CHKC	427,21048
#define  PCI_ERR_CAP_ECRC_CHKE	428,21115
#define PCI_ERR_HEADER_LOG	429,21181
#define PCI_ERR_ROOT_COMMAND	430,21248
#define PCI_ERR_ROOT_CMD_COR_EN	432,21344
#define PCI_ERR_ROOT_CMD_NONFATAL_EN	434,21425
#define PCI_ERR_ROOT_CMD_FATAL_EN	436,21506
#define PCI_ERR_ROOT_STATUS	437,21551
#define PCI_ERR_ROOT_COR_RCV	438,21582
#define PCI_ERR_ROOT_MULTI_COR_RCV	440,21675
#define PCI_ERR_ROOT_UNCOR_RCV	442,21755
#define PCI_ERR_ROOT_MULTI_UNCOR_RCV	444,21838
#define PCI_ERR_ROOT_FIRST_FATAL	445,21886
#define PCI_ERR_ROOT_NONFATAL_RCV	446,21948
#define PCI_ERR_ROOT_FATAL_RCV	447,22018
#define PCI_ERR_ROOT_COR_SRC	448,22082
#define PCI_ERR_ROOT_SRC	449,22114
#define PCI_VC_PORT_REG1	452,22165
#define PCI_VC_PORT_REG2	453,22192
#define PCI_VC_PORT_CTRL	454,22219
#define PCI_VC_PORT_STATUS	455,22247
#define PCI_VC_RES_CAP	456,22277
#define PCI_VC_RES_CTRL	457,22304
#define PCI_VC_RES_STATUS	458,22332
#define PCI_PWR_DSR	461,22384
#define PCI_PWR_DATA	462,22434
#define  PCI_PWR_DATA_BASE(463,22478
#define  PCI_PWR_DATA_SCALE(464,22542
#define  PCI_PWR_DATA_PM_SUB(465,22610
#define  PCI_PWR_DATA_PM_STATE(466,22681
#define  PCI_PWR_DATA_TYPE(467,22748
#define  PCI_PWR_DATA_RAIL(468,22809
#define PCI_PWR_CAP	469,22876
#define  PCI_PWR_CAP_BUDGET(470,22917
#define HT_CAPTYPE_SLAVE	473,23033
#define HT_CAPTYPE_HOST	474,23102
#define HT_CAPTYPE_IRQ	475,23172
#define HT_CAPTYPE_REMAPPING_40	476,23225
#define HT_CAPTYPE_REMAPPING_64 477,23293
#define HT_CAPTYPE_UNITID_CLUMP	478,23361
#define HT_CAPTYPE_EXTCONF	479,23421
#define HT_CAPTYPE_MSI_MAPPING	480,23495
#define HT_CAPTYPE_DIRECT_ROUTE	481,23560
#define HT_CAPTYPE_VCSET	482,23632
#define HT_CAPTYPE_ERROR_RETRY	483,23698
#define HT_CAPTYPE_GEN3	484,23769
#define HT_CAPTYPE_PM	485,23847

xen/include/asm-ia64/linux/jiffies.h,1586
#define _LINUX_JIFFIES_H2,25
#define div_long_long_rem(12,239
# define SHIFT_HZ	28,798
# define SHIFT_HZ	30,844
# define SHIFT_HZ	32,890
# define SHIFT_HZ	34,937
# define SHIFT_HZ	36,985
# define SHIFT_HZ	38,1033
# define SHIFT_HZ	40,1082
#define LATCH 46,1194
#define SH_DIV(57,1706
#define ACTHZ 61,1929
#define TICK_NSEC 64,2051
#define TICK_USEC 67,2180
#define TICK_USEC_TO_NSEC(71,2378
#define __jiffy_data 77,2696
static inline u64 get_jiffies_64(90,3077
#define time_after(109,3646
#define time_before(113,3774
#define time_after_eq(115,3816
#define time_before_eq(119,3947
#define INITIAL_JIFFIES 125,4102
#define MAX_JIFFY_OFFSET 139,4529
#define SEC_JIFFIE_SC 212,7925
#undef SEC_JIFFIE_SC214,8042
#define SEC_JIFFIE_SC 215,8063
#define NSEC_JIFFIE_SC 217,8108
#define USEC_JIFFIE_SC 218,8152
#define SEC_CONVERSION 219,8196
#define NSEC_CONVERSION 222,8343
#define USEC_CONVERSION 224,8488
#define USEC_ROUND 234,8969
# define MAX_SEC_IN_JIFFIES 241,9263
# define MAX_SEC_IN_JIFFIES 244,9412
static inline unsigned int jiffies_to_msecs(255,9669
static inline unsigned int jiffies_to_usecs(266,9910
static inline unsigned long msecs_to_jiffies(277,10175
static inline unsigned long usecs_to_jiffies(290,10496
timespec_to_jiffies(315,11318
jiffies_to_timespec(331,11686
timeval_to_jiffies(354,12543
jiffies_to_timeval(369,12905
static inline clock_t jiffies_to_clock_t(383,13262
static inline unsigned long clock_t_to_jiffies(394,13495
static inline u64 jiffies_64_to_clock_t(414,13881
static inline u64 nsec_to_clock_t(430,14225

xen/include/asm-ia64/linux/asm/current.h,57
#define _ASM_IA64_CURRENT_H2,28
#define current	15,278

xen/include/asm-ia64/linux/asm/delay.h,193
#define _ASM_IA64_DELAY_H2,26
ia64_set_itm 24,616
ia64_get_itm 31,739
ia64_set_itv 41,884
ia64_get_itv 48,1007
ia64_set_itc 54,1094
ia64_get_itc 61,1217
__delay 79,1549
udelay 88,1674

xen/include/asm-ia64/linux/asm/thread_info.h,1429
#define _ASM_IA64_THREAD_INFO_H6,129
#define PREEMPT_ACTIVE_BIT 12,239
#define PREEMPT_ACTIVE	13,269
struct thread_info 22,565
	struct task_struct *task;task23,586
	struct exec_domain *exec_domain;exec_domain24,671
	__u32 flags;25,727
	__u32 cpu;26,779
	mm_segment_t addr_limit;27,811
	int preempt_count;28,874
	struct restart_block restart_block;29,953
		int signo;31,1000
		int code;32,1013
		void __user *addr;addr33,1025
		unsigned long start_time;34,1046
		pid_t pid;35,1074
	} sigdelayed;36,1087
#define THREAD_SIZE	39,1151
#define INIT_THREAD_INFO(41,1192
#define current_thread_info(55,1507
#define alloc_thread_info(56,1598
#define free_thread_info(57,1688
#define __HAVE_ARCH_TASK_STRUCT_ALLOCATOR59,1732
#define alloc_task_struct(60,1774
#define free_task_struct(61,1868
#define TIF_NOTIFY_RESUME	71,2202
#define TIF_SIGPENDING	72,2270
#define TIF_NEED_RESCHED	73,2317
#define TIF_SYSCALL_TRACE	74,2373
#define TIF_SYSCALL_AUDIT	75,2428
#define TIF_SIGDELAYED	76,2486
#define TIF_POLLING_NRFLAG	77,2563
#define TIF_MEMDIE	78,2647
#define _TIF_SYSCALL_TRACE	80,2671
#define _TIF_SYSCALL_AUDIT	81,2723
#define _TIF_SYSCALL_TRACEAUDIT	82,2775
#define _TIF_NOTIFY_RESUME	83,2847
#define _TIF_SIGPENDING	84,2899
#define _TIF_NEED_RESCHED	85,2946
#define _TIF_SIGDELAYED	86,2996
#define _TIF_POLLING_NRFLAG	87,3042
#define TIF_ALLWORK_MASK	90,3136
#define TIF_WORK_MASK	92,3346

xen/include/asm-ia64/linux/asm/linkage.h,54
#define __ASM_LINKAGE_H2,24
#define asmlinkage 4,49

xen/include/asm-ia64/linux/asm/fpswa.h,1057
#define _ASM_IA64_FPSWA_H2,26
	unsigned long fp_lp[fp_lp14,296
} fp_state_low_preserved_t;15,323
	unsigned long fp_lv[fp_lv19,390
} fp_state_low_volatile_t;20,420
	unsigned long fp_hp[fp_hp24,486
} fp_state_high_preserved_t;25,516
	unsigned long fp_hv[fp_hv29,584
} fp_state_high_volatile_t;30,614
	unsigned long			bitmask_low64;37,762
	unsigned long			bitmask_high64;38,794
	fp_state_low_preserved_t	*fp_state_low_preserved;fp_state_low_preserved39,827
	fp_state_low_volatile_t		*fp_state_low_volatile;fp_state_low_volatile40,878
	fp_state_high_preserved_t	*fp_state_high_preserved;fp_state_high_preserved41,928
	fp_state_high_volatile_t	*fp_state_high_volatile;fp_state_high_volatile42,981
} fp_state_t;43,1032
	unsigned long status;46,1064
	unsigned long err0;47,1087
	unsigned long err1;48,1108
	unsigned long err2;49,1129
} fpswa_ret_t;50,1150
typedef fpswa_ret_t (*efi_fpswa_t)efi_fpswa_t57,1330
	unsigned int	 revision;66,1718
	unsigned int	 reserved;67,1743
	efi_fpswa_t	 fpswa;68,1768
} fpswa_interface_t;69,1789

xen/include/asm-ia64/linux/asm/string.h,137
#define _ASM_IA64_STRING_H2,27
#define __HAVE_ARCH_STRLEN	14,325
#define __HAVE_ARCH_MEMSET	15,387
#define __HAVE_ARCH_MEMCPY	16,449

xen/include/asm-ia64/linux/asm/machvec_init.h,63
#define MACHVEC_HELPER(26,933
#define MACHVEC_DEFINE(30,1092

xen/include/asm-ia64/linux/asm/timex.h,123
#define _ASM_IA64_TIMEX_H2,26
typedef unsigned long cycles_t;16,354
#define CLOCK_TICK_RATE	29,1098
get_cycles 32,1163

xen/include/asm-ia64/linux/asm/mca.h,2136
#define _ASM_IA64_MCA_H12,314
#define IA64_MCA_STACK_SIZE	14,339
#define IA64_MCA_RENDEZ_TIMEOUT	26,553
typedef struct ia64_fptr 28,640
	unsigned long fp;29,667
	unsigned long gp;30,686
} ia64_fptr_t;31,705
typedef union cmcv_reg_u 33,721
	u64	cmcv_regval;34,748
		u64	cmcr_vector	36,776
		u64	cmcr_reserved1	37,800
		u64	cmcr_ignored1	38,827
		u64	cmcr_reserved2	39,853
		u64	cmcr_mask	40,880
		u64	cmcr_ignored2	41,902
	} cmcv_reg_s;42,929
} cmcv_reg_t;44,945
#define cmcv_mask	46,960
#define cmcv_vector	47,1000
	IA64_MCA_RENDEZ_CHECKIN_NOTDONE	50,1052
	IA64_MCA_RENDEZ_CHECKIN_NOTDONE	=	0x0,x050,1052
	IA64_MCA_RENDEZ_CHECKIN_DONE	51,1092
	IA64_MCA_RENDEZ_CHECKIN_DONE	=	0x1x151,1092
typedef struct ia64_mc_info_s 55,1186
	u64		imi_mca_handler;56,1218
	size_t		imi_mca_handler_size;57,1241
	u64		imi_monarch_init_handler;58,1272
	size_t		imi_monarch_init_handler_size;59,1304
	u64		imi_slave_init_handler;60,1344
	size_t		imi_slave_init_handler_size;61,1374
	u8		imi_rendez_checkin[imi_rendez_checkin62,1412
} ia64_mc_info_t;64,1447
typedef struct ia64_mca_sal_to_os_state_s 66,1466
	u64		imsto_os_gp;67,1510
	u64		imsto_pal_proc;68,1573
	u64		imsto_sal_proc;69,1639
	u64		imsto_sal_gp;70,1705
	u64		imsto_rendez_state;71,1757
	u64		imsto_sal_check_ra;72,1814
	u64		pal_min_state;75,1942
	u64		proc_state_param;76,1986
} ia64_mca_sal_to_os_state_t;77,2056
	IA64_MCA_CORRECTED	80,2094
	IA64_MCA_CORRECTED	=	0x0,x080,2094
	IA64_MCA_WARM_BOOT	81,2162
	IA64_MCA_COLD_BOOT	82,2232
	IA64_MCA_HALT	83,2302
	IA64_MCA_SAME_CONTEXT	87,2367
	IA64_MCA_SAME_CONTEXT	=	0x0,x087,2367
	IA64_MCA_NEW_CONTEXT	88,2433
typedef struct ia64_mca_os_to_sal_state_s 91,2499
	u64		imots_os_status;92,2543
	u64		imots_sal_gp;95,2652
	u64		imots_context;96,2704
	u64		*imots_new_min_state;imots_new_min_state98,2796
	u64		imots_sal_check_ra;102,2939
} ia64_mca_os_to_sal_state_t;105,3067
struct ia64_mca_cpu 109,3170
	u64 stack[stack110,3192
	u64 proc_state_dump[proc_state_dump111,3250
	u64 stackframe[stackframe112,3277
	u64 rbstore[rbstore113,3298
	u64 init_stack[init_stack114,3364

xen/include/asm-ia64/linux/asm/machvec_hpsim.h,134
#define _ASM_IA64_MACHVEC_HPSIM_h2,34
#define platform_name	14,353
#define platform_setup	15,384
#define platform_irq_init	16,420

xen/include/asm-ia64/linux/asm/asmmacro.h,698
#define _ASM_IA64_ASMMACRO_H2,29
#define ENTRY(11,195
#define ENTRY_MIN_ALIGN(16,262
#define GLOBAL_ENTRY(21,338
#define END(25,403
#define ASM_UNW_PRLG_RP	33,524
#define ASM_UNW_PRLG_PFS	34,554
#define ASM_UNW_PRLG_PSP	35,584
#define ASM_UNW_PRLG_PR	36,614
#define ASM_UNW_PRLG_GRSAVE(37,644
# define EX(46,830
# define EXCLR(49,902
#define	LOAD_PHYSICAL(62,1361
#define DO_MCKINLEY_E9_WORKAROUND70,1639
# define FSYS_RETURN	76,1800
# define FSYS_RETURN	89,2065
# define TEXT_ALIGN(98,2331
# define TEXT_ALIGN(100,2369
# define dv_serialize_data	104,2432
# define dv_serialize_instruction	105,2476
# define dv_serialize_data107,2539
# define dv_serialize_instruction108,2566

xen/include/asm-ia64/linux/asm/cacheflush.h,495
#define _ASM_IA64_CACHEFLUSH_H2,31
#define flush_cache_all(19,368
#define flush_cache_mm(20,413
#define flush_cache_range(21,459
#define flush_cache_page(22,519
#define flush_icache_page(23,579
#define flush_cache_vmap(24,633
#define flush_cache_vunmap(25,688
#define flush_dcache_page(27,746
#define flush_dcache_mmap_lock(32,848
#define flush_dcache_mmap_unlock(33,906
#define flush_icache_user_range(37,1040
#define copy_to_user_page(43,1276
#define copy_from_user_page(47,1434

xen/include/asm-ia64/linux/asm/irq.h,130
#define _ASM_IA64_IRQ_H2,24
#define NR_VECTORS	14,366
#define NR_IRQS	15,389
irq_canonicalize 18,433
#define move_irq(36,940

xen/include/asm-ia64/linux/asm/nodedata.h,236
#define _ASM_IA64_NODEDATA_H12,429
struct ia64_node_data 27,687
	short			active_cpu_count;28,711
	short			node;29,738
	struct pglist_data	*pg_data_ptrs[pg_data_ptrs30,753
#define local_node_data	37,884
#define NODE_DATA(48,1295

xen/include/asm-ia64/linux/asm/unistd.h,8699
#define _ASM_IA64_UNISTD_H2,27
#define __BREAK_SYSCALL	13,233
#define __NR_ni_syscall	15,281
#define __NR_exit	16,312
#define __NR_read	17,337
#define __NR_write	18,362
#define __NR_open	19,388
#define __NR_close	20,413
#define __NR_creat	21,439
#define __NR_link	22,465
#define __NR_unlink	23,490
#define __NR_execve	24,517
#define __NR_chdir	25,544
#define __NR_fchdir	26,570
#define __NR_utimes	27,597
#define __NR_mknod	28,624
#define __NR_chmod	29,650
#define __NR_chown	30,676
#define __NR_lseek	31,702
#define __NR_getpid	32,728
#define __NR_getppid	33,755
#define __NR_mount	34,783
#define __NR_umount	35,809
#define __NR_setuid	36,836
#define __NR_getuid	37,863
#define __NR_geteuid	38,890
#define __NR_ptrace	39,918
#define __NR_access	40,945
#define __NR_sync	41,972
#define __NR_fsync	42,997
#define __NR_fdatasync	43,1023
#define __NR_kill	44,1053
#define __NR_rename	45,1078
#define __NR_mkdir	46,1105
#define __NR_rmdir	47,1131
#define __NR_dup	48,1157
#define __NR_pipe	49,1181
#define __NR_times	50,1206
#define __NR_brk	51,1232
#define __NR_setgid	52,1256
#define __NR_getgid	53,1283
#define __NR_getegid	54,1310
#define __NR_acct	55,1338
#define __NR_ioctl	56,1363
#define __NR_fcntl	57,1389
#define __NR_umask	58,1415
#define __NR_chroot	59,1441
#define __NR_ustat	60,1468
#define __NR_dup2	61,1494
#define __NR_setreuid	62,1519
#define __NR_setregid	63,1548
#define __NR_getresuid	64,1577
#define __NR_setresuid	65,1607
#define __NR_getresgid	66,1637
#define __NR_setresgid	67,1667
#define __NR_getgroups	68,1697
#define __NR_setgroups	69,1727
#define __NR_getpgid	70,1757
#define __NR_setpgid	71,1785
#define __NR_setsid	72,1813
#define __NR_getsid	73,1840
#define __NR_sethostname	74,1867
#define __NR_setrlimit	75,1898
#define __NR_getrlimit	76,1928
#define __NR_getrusage	77,1958
#define __NR_gettimeofday	78,1988
#define __NR_settimeofday	79,2020
#define __NR_select	80,2052
#define __NR_poll	81,2079
#define __NR_symlink	82,2104
#define __NR_readlink	83,2132
#define __NR_uselib	84,2161
#define __NR_swapon	85,2188
#define __NR_swapoff	86,2215
#define __NR_reboot	87,2243
#define __NR_truncate	88,2270
#define __NR_ftruncate	89,2299
#define __NR_fchmod	90,2329
#define __NR_fchown	91,2356
#define __NR_getpriority	92,2383
#define __NR_setpriority	93,2414
#define __NR_statfs	94,2445
#define __NR_fstatfs	95,2472
#define __NR_gettid	96,2500
#define __NR_semget	97,2527
#define __NR_semop	98,2554
#define __NR_semctl	99,2580
#define __NR_msgget	100,2607
#define __NR_msgsnd	101,2634
#define __NR_msgrcv	102,2661
#define __NR_msgctl	103,2688
#define __NR_shmget	104,2715
#define __NR_shmat	105,2742
#define __NR_shmdt	106,2768
#define __NR_shmctl	107,2794
#define __NR_syslog	109,2864
#define __NR_setitimer	110,2891
#define __NR_getitimer	111,2921
#define __NR_vhangup	115,3040
#define __NR_lchown	116,3068
#define __NR_remap_file_pages	117,3095
#define __NR_wait4	118,3131
#define __NR_sysinfo	119,3157
#define __NR_clone	120,3185
#define __NR_setdomainname	121,3211
#define __NR_uname	122,3244
#define __NR_adjtimex	123,3270
#define __NR_init_module	125,3333
#define __NR_delete_module	126,3364
#define __NR_quotactl	129,3466
#define __NR_bdflush	130,3495
#define __NR_sysfs	131,3523
#define __NR_personality	132,3549
#define __NR_afs_syscall	133,3580
#define __NR_setfsuid	134,3611
#define __NR_setfsgid	135,3640
#define __NR_getdents	136,3669
#define __NR_flock	137,3698
#define __NR_readv	138,3724
#define __NR_writev	139,3750
#define __NR_pread64	140,3777
#define __NR_pwrite64	141,3805
#define __NR__sysctl	142,3834
#define __NR_mmap	143,3862
#define __NR_munmap	144,3887
#define __NR_mlock	145,3914
#define __NR_mlockall	146,3940
#define __NR_mprotect	147,3969
#define __NR_mremap	148,3998
#define __NR_msync	149,4025
#define __NR_munlock	150,4051
#define __NR_munlockall	151,4079
#define __NR_sched_getparam	152,4110
#define __NR_sched_setparam	153,4144
#define __NR_sched_getscheduler	154,4178
#define __NR_sched_setscheduler	155,4216
#define __NR_sched_yield	156,4254
#define __NR_sched_get_priority_max	157,4285
#define __NR_sched_get_priority_min	158,4326
#define __NR_sched_rr_get_interval	159,4367
#define __NR_nanosleep	160,4407
#define __NR_nfsservctl	161,4437
#define __NR_prctl	162,4468
#define __NR_mmap2	164,4571
#define __NR_pciconfig_read	165,4597
#define __NR_pciconfig_write	166,4631
#define __NR_perfmonctl	167,4666
#define __NR_sigaltstack	168,4697
#define __NR_rt_sigaction	169,4728
#define __NR_rt_sigpending	170,4760
#define __NR_rt_sigprocmask	171,4793
#define __NR_rt_sigqueueinfo	172,4827
#define __NR_rt_sigreturn	173,4862
#define __NR_rt_sigsuspend	174,4894
#define __NR_rt_sigtimedwait	175,4927
#define __NR_getcwd	176,4962
#define __NR_capget	177,4989
#define __NR_capset	178,5016
#define __NR_sendfile	179,5043
#define __NR_getpmsg	180,5072
#define __NR_putpmsg	181,5100
#define __NR_socket	182,5128
#define __NR_bind	183,5155
#define __NR_connect	184,5180
#define __NR_listen	185,5208
#define __NR_accept	186,5235
#define __NR_getsockname	187,5262
#define __NR_getpeername	188,5293
#define __NR_socketpair	189,5324
#define __NR_send	190,5355
#define __NR_sendto	191,5380
#define __NR_recv	192,5407
#define __NR_recvfrom	193,5432
#define __NR_shutdown	194,5461
#define __NR_setsockopt	195,5490
#define __NR_getsockopt	196,5521
#define __NR_sendmsg	197,5552
#define __NR_recvmsg	198,5580
#define __NR_pivot_root	199,5608
#define __NR_mincore	200,5639
#define __NR_madvise	201,5667
#define __NR_stat	202,5695
#define __NR_lstat	203,5720
#define __NR_fstat	204,5746
#define __NR_clone2	205,5772
#define __NR_getdents64	206,5799
#define __NR_getunwind	207,5830
#define __NR_readahead	208,5860
#define __NR_setxattr	209,5890
#define __NR_lsetxattr	210,5919
#define __NR_fsetxattr	211,5949
#define __NR_getxattr	212,5979
#define __NR_lgetxattr	213,6008
#define __NR_fgetxattr	214,6038
#define __NR_listxattr	215,6068
#define __NR_llistxattr	216,6098
#define __NR_flistxattr	217,6129
#define __NR_removexattr	218,6160
#define __NR_lremovexattr	219,6191
#define __NR_fremovexattr	220,6223
#define __NR_tkill	221,6255
#define __NR_futex	222,6281
#define __NR_sched_setaffinity	223,6307
#define __NR_sched_getaffinity	224,6344
#define __NR_set_tid_address	225,6381
#define __NR_fadvise64	226,6416
#define __NR_tgkill	227,6446
#define __NR_exit_group	228,6473
#define __NR_lookup_dcookie	229,6504
#define __NR_io_setup	230,6538
#define __NR_io_destroy	231,6567
#define __NR_io_getevents	232,6598
#define __NR_io_submit	233,6630
#define __NR_io_cancel	234,6660
#define __NR_epoll_create	235,6690
#define __NR_epoll_ctl	236,6722
#define __NR_epoll_wait	237,6752
#define __NR_restart_syscall	238,6783
#define __NR_semtimedop	239,6818
#define __NR_timer_create	240,6849
#define __NR_timer_settime	241,6881
#define __NR_timer_gettime	242,6914
#define __NR_timer_getoverrun	243,6947
#define __NR_timer_delete	244,6983
#define __NR_clock_settime	245,7015
#define __NR_clock_gettime	246,7048
#define __NR_clock_getres	247,7081
#define __NR_clock_nanosleep	248,7113
#define __NR_fstatfs64	249,7148
#define __NR_statfs64	250,7178
#define __NR_mbind	251,7207
#define __NR_get_mempolicy	252,7233
#define __NR_set_mempolicy	253,7266
#define __NR_mq_open	254,7299
#define __NR_mq_unlink	255,7327
#define __NR_mq_timedsend	256,7357
#define __NR_mq_timedreceive	257,7389
#define __NR_mq_notify	258,7424
#define __NR_mq_getsetattr	259,7454
#define __NR_kexec_load	260,7487
#define __NR_vserver	261,7518
#define __NR_waitid	262,7546
#define __NR_add_key	263,7573
#define __NR_request_key	264,7601
#define __NR_keyctl	265,7632
#define __NR_ioprio_set	266,7659
#define __NR_ioprio_get	267,7690
#define __NR_set_zone_reclaim	268,7721
#define __NR_inotify_init	269,7757
#define __NR_inotify_add_watch	270,7789
#define __NR_inotify_rm_watch	271,7826
#define NR_syscalls	277,7909
#define __ARCH_WANT_SYS_RT_SIGACTION279,7966
# define __ARCH_WANT_SYS_FADVISE64282,8031
# define __ARCH_WANT_SYS_GETPGRP283,8066
# define __ARCH_WANT_SYS_LLSEEK284,8099
# define __ARCH_WANT_SYS_NICE285,8131
# define __ARCH_WANT_SYS_OLD_GETRLIMIT286,8161
# define __ARCH_WANT_SYS_OLDUMOUNT287,8200
# define __ARCH_WANT_SYS_SIGPENDING288,8235
# define __ARCH_WANT_SYS_SIGPROCMASK289,8271
# define __ARCH_WANT_COMPAT_SYS_TIME290,8308
open 311,8778
dup 317,8885
close 323,8943
lseek 329,9006
_exit 335,9104
#define exit(340,9145
write 343,9190
read 349,9290
setsid 356,9383
waitpid 362,9444
#define cond_syscall(401,10739

xen/include/asm-ia64/linux/asm/intrinsics.h,488
#define _ASM_IA64_INTRINSICS_H2,31
#define IA64_FETCHADD(29,651
#define ia64_fetchadd(45,1055
#define ia64_fetch_and_add(71,2060
#define __xchg(79,2319
#define xchg(105,2937
#define __HAVE_ARCH_CMPXCHG 114,3235
#define ia64_cmpxchg(122,3442
#define cmpxchg_acq(157,4493
#define cmpxchg_rel(158,4573
#define cmpxchg(161,4700
# define CMPXCHG_BUGCHECK_DECL	164,4780
# define CMPXCHG_BUGCHECK(165,4846
# define CMPXCHG_BUGCHECK_DECL176,5211
# define CMPXCHG_BUGCHECK(177,5242

xen/include/asm-ia64/linux/asm/bitops.h,1280
#define _ASM_IA64_BITOPS_H2,27
set_bit 35,1065
__set_bit 60,1669
#define smp_mb__before_clear_bit(68,1813
#define smp_mb__after_clear_bit(69,1857
clear_bit 82,2338
__clear_bit 101,2716
change_bit 118,3159
__change_bit 143,3777
test_and_set_bit 157,4110
__test_and_set_bit 183,4762
test_and_clear_bit 202,5182
__test_and_clear_bit(228,5848
test_and_change_bit 247,6266
__test_and_change_bit 267,6645
test_bit 278,6846
ffz 291,7245
__ffs 306,7522
ia64_fls 321,7817
fls 335,8075
#define ffs(355,8535
hweight64 362,8696
#define hweight32(369,8794
#define hweight16(370,8860
#define hweight8(371,8922
#define find_next_zero_bit(380,9196
#define find_next_bit(382,9295
#define find_first_zero_bit(388,9449
#define find_first_bit(390,9528
#define __clear_bit(394,9616
#define ext2_set_bit	396,9668
#define ext2_set_bit_atomic(397,9708
#define ext2_clear_bit	398,9765
#define ext2_clear_bit_atomic(399,9809
#define ext2_test_bit	400,9870
#define ext2_find_first_zero_bit	401,9903
#define ext2_find_next_zero_bit	402,9956
#define minix_test_and_set_bit(405,10059
#define minix_set_bit(406,10126
#define minix_test_and_clear_bit(407,10176
#define minix_test_bit(408,10246
#define minix_find_first_zero_bit(409,10298
sched_find_first_bit 412,10393

xen/include/asm-ia64/linux/asm/numnodes.h,114
#define _ASM_MAX_NUMNODES_H2,28
#define NODES_SHIFT	6,98
#define NODES_SHIFT	9,212
#define NODES_SHIFT	12,321

xen/include/asm-ia64/linux/asm/checksum.h,53
#define _ASM_IA64_CHECKSUM_H2,29
csum_fold 69,1945

xen/include/asm-ia64/linux/asm/break.h,173
#define _ASM_IA64_BREAK_H2,26
#define __IA64_BREAK_KDB	14,241
#define __IA64_BREAK_KPROBE	15,275
#define __IA64_BREAK_JPROBE	16,312
#define __IA64_BREAK_SYSCALL	21,387

xen/include/asm-ia64/linux/asm/unaligned.h,35
#define _ASM_IA64_UNALIGNED_H2,30

xen/include/asm-ia64/linux/asm/param.h,236
#define _ASM_IA64_PARAM_H2,26
#define EXEC_PAGESIZE	13,231
# define NOGROUP	16,276
#define MAXHOSTNAMELEN	19,306
#  define HZ	28,611
#  define HZ	30,636
# define USER_HZ	32,667
# define CLOCKS_PER_SEC	33,687
# define HZ 39,915

xen/include/asm-ia64/linux/asm/fpu.h,848
#define _ASM_IA64_FPU_H2,24
#define FPSR_TRAP_VD	12,222
#define FPSR_TRAP_DD	13,283
#define FPSR_TRAP_ZD	14,342
#define FPSR_TRAP_OD	15,404
#define FPSR_TRAP_UD	16,463
#define FPSR_TRAP_ID	17,523
#define FPSR_S0(18,581
#define FPSR_S1(19,612
#define FPSR_S2(20,643
#define FPSR_S3(21,683
#define FPSF_FTZ	24,768
#define FPSF_WRE	25,815
#define FPSF_PC(26,870
#define FPSF_RC(27,932
#define FPSF_TD	28,993
#define FPSF_V	31,1082
#define FPSF_D	32,1138
#define FPSF_Z	33,1202
#define FPSF_O	34,1259
#define FPSF_U	35,1313
#define FPSF_I	36,1368
#define FPRC_NEAREST	39,1462
#define FPRC_NEGINF	40,1487
#define FPRC_POSINF	41,1511
#define FPRC_TRUNC	42,1535
#define FPSF_DEFAULT	44,1559
#define FPSR_DEFAULT	48,1723
struct ia64_fpreg 57,2032
		unsigned long bits[bits59,2061
		long double __dummy;60,2086
	} u;61,2139

xen/include/asm-ia64/linux/asm/byteorder.h,231
#define _ASM_IA64_BYTEORDER_H2,30
__ia64_swab64 14,281
__ia64_swab32 23,425
__ia64_swab16(29,530
#define __arch__swab64(34,590
#define __arch__swab32(35,633
#define __arch__swab16(36,676
#define __BYTEORDER_HAS_U64__38,720

xen/include/asm-ia64/linux/asm/setup.h,60
#define __IA64_SETUP_H2,23
#define COMMAND_LINE_SIZE	4,47

xen/include/asm-ia64/linux/asm/hdreg.h,77
#define __ASM_IA64_HDREG_H10,181
typedef unsigned short ide_ioreg_t;12,209

xen/include/asm-ia64/linux/asm/rse.h,167
#define _ASM_IA64_RSE_H2,24
ia64_rse_slot_num 15,423
ia64_rse_is_rnat_slot 24,608
ia64_rse_rnat_addr 34,825
ia64_rse_num_regs 45,1166
ia64_rse_skip_regs 57,1472

xen/include/asm-ia64/linux/asm/dma.h,92
#define _ASM_IA64_DMA_H2,24
# define isa_dma_bridge_buggy 18,313
#define free_dma(21,356

xen/include/asm-ia64/linux/asm/unwind.h,2705
#define _ASM_IA64_UNWIND_H2,27
enum unw_application_register 19,609
	UNW_AR_BSP,20,641
	UNW_AR_BSPSTORE,21,654
	UNW_AR_PFS,22,672
	UNW_AR_RNAT,23,685
	UNW_AR_UNAT,24,699
	UNW_AR_LC,25,713
	UNW_AR_EC,26,725
	UNW_AR_FPSR,27,737
	UNW_AR_RSC,28,751
	UNW_AR_CCV,29,764
	UNW_AR_CSD,30,777
	UNW_AR_SSD31,790
struct unw_stack 39,889
	unsigned long limit;40,908
	unsigned long top;41,930
#define UNW_FLAG_INTERRUPT_FRAME	44,954
struct unw_frame_info 51,1173
	struct unw_stack regstk;52,1197
	struct unw_stack memstk;53,1223
	unsigned int flags;54,1249
	short hint;55,1270
	short prev_script;56,1283
	unsigned long bsp;59,1331
	unsigned long sp;60,1386
	unsigned long psp;61,1432
	unsigned long ip;62,1477
	unsigned long pr;63,1529
	unsigned long *cfm_loc;cfm_loc64,1580
	unsigned long pt;65,1640
	struct task_struct *task;task67,1691
	struct switch_stack *sw;sw68,1718
	unsigned long *bsp_loc;bsp_loc71,1769
	unsigned long *bspstore_loc;bspstore_loc72,1828
	unsigned long *pfs_loc;pfs_loc73,1858
	unsigned long *rnat_loc;rnat_loc74,1883
	unsigned long *rp_loc;rp_loc75,1909
	unsigned long *pri_unat_loc;pri_unat_loc76,1933
	unsigned long *unat_loc;unat_loc77,1963
	unsigned long *pr_loc;pr_loc78,1989
	unsigned long *lc_loc;lc_loc79,2013
	unsigned long *fpsr_loc;fpsr_loc80,2037
	struct unw_ireg 81,2063
		unsigned long *loc;loc82,2082
		struct unw_ireg_nat 83,2104
			long type 84,2128
			signed long off 85,2172
		} nat;86,2231
	} r4,87,2240
	} r4, r5,87,2240
	} r4, r5, r6,87,2240
	} r4, r5, r6, r7;87,2240
	unsigned long *b1_loc,b1_loc88,2259
	unsigned long *b1_loc, *b2_loc,b2_loc88,2259
	unsigned long *b1_loc, *b2_loc, *b3_loc,b3_loc88,2259
	unsigned long *b1_loc, *b2_loc, *b3_loc, *b4_loc,b4_loc88,2259
	unsigned long *b1_loc, *b2_loc, *b3_loc, *b4_loc, *b5_loc;b5_loc88,2259
	struct ia64_fpreg *f2_loc,f2_loc89,2319
	struct ia64_fpreg *f2_loc, *f3_loc,f3_loc89,2319
	struct ia64_fpreg *f2_loc, *f3_loc, *f4_loc,f4_loc89,2319
	struct ia64_fpreg *f2_loc, *f3_loc, *f4_loc, *f5_loc,f5_loc89,2319
	struct ia64_fpreg *f2_loc, *f3_loc, *f4_loc, *f5_loc, *fr_loc[fr_loc89,2319
struct unw_table_entry 96,2434
	u64 start_offset;97,2459
	u64 end_offset;98,2478
	u64 info_offset;99,2495
#define unw_is_intr_frame(145,3898
unw_get_ip 148,3999
unw_get_sp 155,4116
unw_get_psp 162,4233
unw_get_bsp 169,4352
unw_get_cfm 176,4471
unw_set_cfm 183,4595
unw_get_rp 190,4715
unw_set_gr 205,5269
unw_set_br 211,5406
unw_set_fr 217,5527
unw_set_ar 223,5652
unw_set_pr 229,5773
#define unw_get_gr(234,5866
#define unw_get_br(235,5923
#define unw_get_fr(236,5972
#define unw_get_ar(237,6021
#define unw_get_pr(238,6070

xen/include/asm-ia64/linux/asm/sn/pcibus_provider_defs.h,1052
#define _ASM_IA64_SN_PCI_PCIBUS_PROVIDER_H9,310
#define PCIIO_ASIC_TYPE_UNKNOWN	16,487
#define PCIIO_ASIC_TYPE_PPB	17,521
#define PCIIO_ASIC_TYPE_PIC	18,551
#define PCIIO_ASIC_TYPE_TIOCP	19,581
#define PCIIO_ASIC_TYPE_TIOCA	20,613
#define PCIIO_ASIC_TYPE_TIOCE	21,645
#define PCIIO_ASIC_MAX_TYPES	23,678
struct pcibus_bussoft 31,886
	u32		bs_asic_type;32,910
	u32		bs_xid;33,949
	u32		bs_persist_busnum;34,981
	u32		bs_persist_segment;35,1034
	u64		bs_legacy_io;36,1081
	u64		bs_legacy_mem;37,1126
	u64		bs_base;38,1173
	struct xwidget_info	*bs_xwidget_info;bs_xwidget_info39,1206
struct sn_pcibus_provider 47,1306
	dma_addr_t	(*dma_map)dma_map48,1334
	dma_addr_t	(*dma_map_consistent)dma_map_consistent49,1410
	void		(*dma_unmap)dma_unmap50,1497
	void *		(*bus_fixup)bus_fixup51,1553
 	void		(*force_interrupt)force_interrupt52,1626
 	void		(*target_interrupt)target_interrupt53,1676
#define SN_DMA_ADDRTYPE(62,1882
#define     SN_DMA_ADDR_PHYS	63,1921
#define     SN_DMA_ADDR_XIO	64,1985
#define SN_DMA_MSI	65,2044

xen/include/asm-ia64/linux/asm/sn/xbow.h,5188
#define _ASM_IA64_SN_XTALK_XBOW_H10,301
#define XBOW_PORT_8	12,336
#define XBOW_PORT_C	13,360
#define XBOW_PORT_F	14,384
#define MAX_XBOW_PORTS	16,409
#define BASE_XBOW_PORT	17,469
#define	XBOW_CREDIT	19,532
#define MAX_XBOW_NAME 21,555
} xb_linkregs_t;46,1164
#define xb_wid_id 54,1371
#define xb_wid_stat 55,1406
#define xb_wid_err_upper 56,1447
#define xb_wid_err_lower 57,1500
#define xb_wid_control	58,1553
#define xb_wid_req_timeout 59,1597
#define xb_wid_int_upper 60,1649
#define xb_wid_int_lower 61,1706
#define xb_wid_err_cmdword 62,1763
#define xb_wid_llp 63,1816
#define xb_wid_stat_clr 64,1857
} xbow_t;109,3132
#define xb_link(111,3143
#define XB_FLAGS_EXISTS	113,3203
#define XB_FLAGS_MASTER	114,3252
#define XB_FLAGS_SLAVE	115,3281
#define XB_FLAGS_GBR	116,3309
#define XB_FLAGS_16BIT	117,3335
#define XB_FLAGS_8BIT	118,3363
#define XBOW_WIDGET_IS_VALID(121,3463
#define XBOW_ARB_IS_UPPER(124,3626
#define XBOW_ARB_IS_LOWER(125,3705
#define XBOW_ARB_OFF(128,3846
#define	XBOW_WID_ID	130,3913
#define	XBOW_WID_STAT	131,3944
#define	XBOW_WID_ERR_UPPER	132,3981
#define	XBOW_WID_ERR_LOWER	133,4030
#define	XBOW_WID_CONTROL	134,4079
#define	XBOW_WID_REQ_TO	135,4119
#define	XBOW_WID_INT_UPPER	136,4163
#define	XBOW_WID_INT_LOWER	137,4216
#define	XBOW_WID_ERR_CMDWORD	138,4269
#define	XBOW_WID_LLP	139,4318
#define	XBOW_WID_STAT_CLR	140,4355
#define XBOW_WID_ARB_RELOAD 141,4395
#define XBOW_WID_PERF_CTR_A 142,4429
#define XBOW_WID_PERF_CTR_B 143,4463
#define XBOW_WID_NIC 144,4497
#define XBOW_W0_RST_FNC	147,4545
#define	XBOW_L8_RST_FNC	148,4579
#define	XBOW_L9_RST_FNC	149,4613
#define	XBOW_LA_RST_FNC	150,4647
#define	XBOW_LB_RST_FNC	151,4681
#define	XBOW_LC_RST_FNC	152,4715
#define	XBOW_LD_RST_FNC	153,4749
#define	XBOW_LE_RST_FNC	154,4783
#define	XBOW_LF_RST_FNC	155,4817
#define XBOW_RESET_FENCE(156,4851
#define XBOW_LOCK	159,4984
#define XBOW_LOCK_CLR	160,5012
#define	XBOW_WID_UNDEF	165,5189
#define	XB_LINK_BASE	168,5284
#define	XB_LINK_OFFSET	169,5312
#define	XB_LINK_REG_BASE(170,5341
#define	XB_LINK_IBUF_FLUSH(172,5433
#define	XB_LINK_CTRL(173,5491
#define	XB_LINK_STATUS(174,5544
#define	XB_LINK_ARB_UPPER(175,5599
#define	XB_LINK_ARB_LOWER(176,5657
#define	XB_LINK_STATUS_CLR(177,5715
#define	XB_LINK_RESET(178,5774
#define	XB_LINK_AUX_STATUS(179,5828
#define	XB_CTRL_LINKALIVE_IE	182,5910
#define	XB_CTRL_PERF_CTR_MODE_MSK	184,6003
#define	XB_CTRL_IBUF_LEVEL_MSK	185,6072
#define	XB_CTRL_8BIT_MODE	187,6157
#define XB_CTRL_BAD_LLP_PKT	189,6238
#define XB_CTRL_WIDGET_CR_MSK	191,6315
#define XB_CTRL_WIDGET_CR_SHFT	193,6396
#define XB_CTRL_ILLEGAL_DST_IE	195,6472
#define XB_CTRL_OALLOC_IBUF_IE	197,6549
#define XB_CTRL_BNDWDTH_ALLOC_IE	200,6664
#define XB_CTRL_RCV_CNT_OFLOW_IE	201,6730
#define XB_CTRL_XMT_CNT_OFLOW_IE	202,6799
#define XB_CTRL_XMT_MAX_RTRY_IE	203,6868
#define XB_CTRL_RCV_IE	204,6937
#define XB_CTRL_XMT_RTRY_IE	205,6987
#define	XB_CTRL_MAXREQ_TOUT_IE	207,7077
#define	XB_CTRL_SRC_TOUT_IE	209,7160
#define	XB_STAT_LINKALIVE	212,7243
#define	XB_STAT_MULTI_ERR	214,7320
#define	XB_STAT_ILLEGAL_DST_ERR	215,7376
#define	XB_STAT_OALLOC_IBUF_ERR	216,7432
#define	XB_STAT_BNDWDTH_ALLOC_ID_MSK	217,7488
#define	XB_STAT_RCV_CNT_OFLOW_ERR	218,7555
#define	XB_STAT_XMT_CNT_OFLOW_ERR	219,7614
#define	XB_STAT_XMT_MAX_RTRY_ERR	220,7673
#define	XB_STAT_RCV_ERR	221,7730
#define	XB_STAT_XMT_RTRY_ERR	222,7771
#define	XB_STAT_MAXREQ_TOUT_ERR	224,7850
#define	XB_STAT_SRC_TOUT_ERR	225,7906
#define	XB_AUX_STAT_RCV_CNT	228,7982
#define	XB_AUX_STAT_XMT_CNT	229,8021
#define	XB_AUX_STAT_TOUT_DST	230,8060
#define	XB_AUX_LINKFAIL_RST_BAD	231,8100
#define	XB_AUX_STAT_PRESENT	232,8143
#define	XB_AUX_STAT_PORT_WIDTH	233,8182
#define	XB_ARB_GBR_MSK	240,8398
#define	XB_ARB_RR_MSK	241,8427
#define	XB_ARB_GBR_SHFT(242,8454
#define	XB_ARB_RR_SHFT(243,8499
#define	XB_ARB_GBR_CNT(244,8547
#define	XB_ARB_RR_CNT(245,8624
#define	XB_WID_STAT_LINK_INTR_SHFT	248,8719
#define	XB_WID_STAT_LINK_INTR_MASK	249,8759
#define	XB_WID_STAT_LINK_INTR(250,8831
#define	XB_WID_STAT_WIDGET0_INTR	252,8915
#define XB_WID_STAT_SRCID_MASK	253,8959
#define	XB_WID_STAT_REG_ACC_ERR	254,9021
#define XB_WID_STAT_RECV_TOUT	255,9065
#define XB_WID_STAT_ARB_TOUT	256,9126
#define	XB_WID_STAT_XTALK_ERR	257,9186
#define XB_WID_STAT_DST_TOUT	258,9228
#define	XB_WID_STAT_MULTI_ERR	259,9288
#define XB_WID_STAT_SRCID_SHFT	261,9331
#define XB_WID_CTRL_REG_ACC_IE	264,9389
#define XB_WID_CTRL_RECV_TOUT	265,9445
#define XB_WID_CTRL_ARB_TOUT	266,9498
#define XB_WID_CTRL_XTALK_IE	267,9549
#define XBOW_WIDGET_PART_NUM	273,9735
#define XXBOW_WIDGET_PART_NUM	274,9784
#define	XBOW_WIDGET_MFGR_NUM	275,9836
#define	XXBOW_WIDGET_MFGR_NUM	276,9869
#define PXBOW_WIDGET_PART_NUM 277,9903
#define	XBOW_REV_1_0	279,9954
#define	XBOW_REV_1_1	280,10006
#define XBOW_REV_1_2	281,10058
#define XBOW_REV_1_3	282,10110
#define XBOW_REV_2_0	283,10162
#define XXBOW_PART_REV_1_0	285,10215
#define XXBOW_PART_REV_2_0	286,10279
#define	XBOW_WID_ARB_RELOAD_INT	289,10370
#define IS_XBRIDGE_XBOW(291,10434
#define IS_PIC_XBOW(295,10568
#define XBOW_WAR_ENABLED(299,10698

xen/include/asm-ia64/linux/asm/sn/sn_feature_sets.h,275
#define _ASM_IA64_SN_FEATURE_SETS_H2,36
#define MAX_PROM_FEATURE_SETS	18,471
#define PRF_PAL_CACHE_FLUSH_SAFE	31,832
#define PRF_DEVICE_FLUSH_LIST	32,867
#define PRF_HOTPLUG_SUPPORT	33,900
#define  OSF_MCA_SLV_TO_OS_INIT_SLV	48,1337
#define  OSF_FEAT_LOG_SBES	49,1375

xen/include/asm-ia64/linux/asm/sn/simulator.h,201
#define _ASM_IA64_SN_SIMULATOR_H9,285
#define SNMAGIC 12,320
#define IS_MEDUSA(13,356
#define SIMULATOR_SLEEP(15,452
#define IS_RUNNING_ON_SIMULATOR(16,500
#define IS_RUNNING_ON_FAKE_PROM(17,549

xen/include/asm-ia64/linux/asm/sn/sn_cpuid.h,423
#define _ASM_IA64_SN_SN_CPUID_H12,292
#define get_node_number(83,2855
#define get_nasid(94,3086
#define get_subnode(95,3157
#define get_slice(96,3232
#define get_cnode(97,3303
#define get_sapicid(98,3374
#define cpuid_to_nasid(104,3532
#define cpuid_to_subnode(105,3601
#define cpuid_to_slice(106,3674
#define cnodeid_to_nasid(118,3961
#define nasid_to_cnodeid(123,4086
#define partition_coherence_id(129,4255

xen/include/asm-ia64/linux/asm/sn/leds.h,204
#define _ASM_IA64_SN_LEDS_H8,279
#define LED0	14,388
#define LED_CPU_SHIFT	15,442
#define LED_CPU_HEARTBEAT	17,468
#define LED_CPU_ACTIVITY	18,499
#define LED_ALWAYS_SET	19,529
set_led_bits(26,642

xen/include/asm-ia64/linux/asm/sn/geo.h,2200
#define _ASM_IA64_SN_GEO_H10,295
#define GEOID_SIZE	18,527
#define MAX_SLOTS	21,633
#define MAX_SLABS	22,678
typedef unsigned char	geo_type_t;24,722
typedef struct geo_common_s 27,798
    moduleid_t	module;28,828
    geo_type_t	type;29,893
    slabid_t	slab:slab30,963
    slotid_t	slot:slot31,1024
} geo_common_t;32,1088
typedef struct geo_node_s 35,1162
    geo_common_t	common;36,1190
} geo_node_t;37,1250
typedef struct geo_rtr_s 39,1265
    geo_common_t	common;40,1292
} geo_rtr_t;41,1352
typedef struct geo_iocntl_s 43,1366
    geo_common_t	common;44,1396
} geo_iocntl_t;45,1456
typedef struct geo_pcicard_s 47,1473
    geo_iocntl_t	common;48,1504
    char		bus;49,1529
    char		slot;50,1568
} geo_pcicard_t;51,1606
typedef struct geo_cpu_s 54,1654
    geo_node_t	node;55,1681
    char	slice;56,1702
} geo_cpu_t;57,1747
typedef struct geo_mem_s 59,1761
    geo_node_t	node;60,1788
    char	membus;61,1809
    char	memslot;62,1860
} geo_mem_t;63,1911
typedef union geoid_u 66,1926
    geo_common_t	common;67,1950
    geo_node_t		node;68,1975
    geo_iocntl_t	iocntl;69,1997
    geo_pcicard_t	pcicard;70,2022
    geo_rtr_t		rtr;71,2049
    geo_cpu_t		cpu;72,2069
    geo_mem_t		mem;73,2089
    char		padsize[padsize74,2109
} geoid_t;75,2140
#define GEO_MAX_LEN	80,2180
#define GEO_TYPE_INVALID	84,2325
#define GEO_TYPE_MODULE	85,2352
#define GEO_TYPE_NODE	86,2379
#define GEO_TYPE_RTR	87,2404
#define GEO_TYPE_IOCNTL	88,2428
#define GEO_TYPE_IOCARD	89,2455
#define GEO_TYPE_CPU	90,2482
#define GEO_TYPE_MEM	91,2506
#define GEO_TYPE_MAX	92,2530
#define GEO_COMPT_MODULE	95,2617
#define GEO_COMPT_SLAB	96,2644
#define GEO_COMPT_IOBUS	97,2670
#define GEO_COMPT_IOSLOT	98,2697
#define GEO_COMPT_CPU	99,2724
#define GEO_COMPT_MEMBUS	100,2749
#define GEO_COMPT_MEMSLOT	101,2776
#define GEO_INVALID_STR	103,2805
#define INVALID_NASID 105,2843
#define INVALID_CNODEID 106,2889
#define INVALID_PNODEID 107,2937
#define INVALID_SLAB 108,2985
#define INVALID_SLOT 109,3030
#define INVALID_MODULE 110,3075
static inline slabid_t geo_slab(112,3125
static inline slotid_t geo_slot(118,3251
static inline moduleid_t geo_module(124,3377

xen/include/asm-ia64/linux/asm/sn/klconfig.h,3173
#define _ASM_IA64_SN_KLCONFIG_H12,385
typedef s32 klconf_off_t;20,598
typedef struct kl_config_hdr 25,679
	char		pad[pad26,710
	klconf_off_t	ch_board_info;27,726
	char		pad0[pad028,785
} kl_config_hdr_t;29,802
#define NODE_OFFSET_TO_LBOARD(32,823
#define KLCLASS_MASK	131,5566
#define KLCLASS_NONE	132,5595
#define KLCLASS_NODE	133,5621
#define KLCLASS_CPU	134,5691
#define KLCLASS_IO	135,5725
#define KLCLASS_ROUTER	137,5846
#define KLCLASS_MIDPLANE 138,5905
#define KLCLASS_IOBRICK	140,6062
#define KLCLASS_MAX	141,6111
#define KLCLASS(143,6175
#define KLTYPE_MASK	150,6242
#define KLTYPE(151,6267
#define KLTYPE_SNIA	153,6313
#define KLTYPE_TIO	154,6353
#define KLTYPE_ROUTER 156,6393
#define KLTYPE_META_ROUTER 157,6442
#define KLTYPE_REPEATER_ROUTER 158,6492
#define KLTYPE_IOBRICK_XBOW	160,6547
#define KLTYPE_IOBRICK	162,6601
#define KLTYPE_NBRICK	163,6649
#define KLTYPE_PXBRICK	164,6696
#define KLTYPE_IXBRICK	165,6744
#define KLTYPE_CGBRICK	166,6792
#define KLTYPE_OPUSBRICK	167,6840
#define KLTYPE_SABRICK 168,6889
#define KLTYPE_IABRICK	169,6945
#define KLTYPE_PABRICK 170,6993
#define KLTYPE_GABRICK	171,7049
#define MAX_COMPTS_PER_BRD 178,7128
typedef struct lboard_s 180,7159
	klconf_off_t 	brd_next_any;181,7185
	unsigned char 	struct_type;182,7235
	unsigned char 	brd_type;183,7310
	unsigned char 	brd_sversion;184,7361
        unsigned char 	brd_brevision;185,7427
        unsigned char 	brd_promver;186,7489
 	unsigned char 	brd_flags;187,7563
	unsigned char 	brd_slot;188,7626
	unsigned short	brd_debugsw;189,7678
	geoid_t		brd_geoid;190,7733
	partid_t 	brd_partition;191,7769
        unsigned short 	brd_diagval;192,7821
        unsigned short 	brd_diagparm;193,7886
        unsigned char 	brd_inventory;194,7955
        unsigned char 	brd_numcompts;195,8020
        nic_t         	brd_nic;196,8088
	nasid_t		brd_nasid;197,8149
	klconf_off_t 	brd_compts[brd_compts198,8200
	klconf_off_t 	brd_errinfo;199,8276
	struct lboard_s *brd_parent;brd_parent200,8341
	char            pad0[pad0201,8407
	unsigned char	brd_confidence;202,8433
	nasid_t		brd_owner;203,8505
	unsigned char 	brd_nic_flags;204,8559
	char		pad1[pad1205,8621
	char		brd_name[brd_name206,8663
	nasid_t		brd_next_same_host;207,8684
	klconf_off_t	brd_next_same;208,8750
} lboard_t;209,8815
typedef struct klinfo_s 216,8911
        unsigned char   struct_type;217,8973
        unsigned char   struct_version;218,9045
        unsigned char   flags;219,9120
        unsigned char   revision;220,9190
        unsigned short  diagval;221,9257
        unsigned short  diagparm;222,9327
        unsigned char   inventory;223,9396
        unsigned short  partid;224,9470
	nic_t 		nic;225,9531
        unsigned char   physid;226,9589
        unsigned int    virtid;227,9662
	unsigned char	widid;228,9739
	nasid_t		nasid;229,9803
	char		pad1;230,9863
	char		pad2;231,9904
	void		*data;data232,9945
        klconf_off_t	errinfo;233,9959
        unsigned short  pad3;234,10030
        unsigned short  pad4;235,10108
} klinfo_t 236,10164
static inline lboard_t *find_lboard_next(find_lboard_next239,10179

xen/include/asm-ia64/linux/asm/sn/l1.h,1255
#define _ASM_IA64_SN_L1_H10,292
#define L1_BRICKTYPE_PX 13,351
#define L1_BRICKTYPE_PE 14,407
#define L1_BRICKTYPE_N_p0 15,463
#define L1_BRICKTYPE_IP45 16,519
#define L1_BRICKTYPE_IP41 17,575
#define L1_BRICKTYPE_TWISTER 18,631
#define L1_BRICKTYPE_IX 19,707
#define L1_BRICKTYPE_IP34 20,763
#define L1_BRICKTYPE_GA	21,819
#define L1_BRICKTYPE_C 22,868
#define L1_BRICKTYPE_OPUS_TIO	23,924
#define L1_BRICKTYPE_I 24,968
#define L1_BRICKTYPE_N 25,1024
#define L1_BRICKTYPE_OPUS 26,1080
#define L1_BRICKTYPE_P 27,1126
#define L1_BRICKTYPE_R 28,1182
#define L1_BRICKTYPE_CHI_CG 29,1238
#define L1_BRICKTYPE_X 30,1294
#define L1_BRICKTYPE_X2 31,1350
#define L1_BRICKTYPE_SA	32,1406
#define L1_BRICKTYPE_PA	33,1455
#define L1_BRICKTYPE_IA	34,1504
#define L1_BRICKTYPE_ATHENA	35,1553
#define L1_BRICKTYPE_DAYTONA	36,1605
#define L1_BRICKTYPE_1932	37,1658
#define L1_BRICKTYPE_191010	38,1698
#define L1_BOARDTYPE_IP69 41,1773
#define L1_BOARDTYPE_IP63 42,1830
#define L1_BOARDTYPE_BASEIO 43,1887
#define L1_BOARDTYPE_PCIE2SLOT 44,1944
#define L1_BOARDTYPE_PCIX3SLOT 45,2001
#define L1_BOARDTYPE_PCIXPCIE4SLOT 46,2058
#define L1_BOARDTYPE_ABACUS 47,2115
#define L1_BOARDTYPE_DAYTONA 48,2172
#define L1_BOARDTYPE_INVAL 49,2229

xen/include/asm-ia64/linux/asm/sn/pda.h,724
#define _ASM_IA64_SN_PDA_H9,294
typedef struct pda_s 25,615
	volatile short	*led_address;led_address30,672
	u8		led_state;31,702
	u8		hb_state;32,718
	unsigned int	hb_count;33,772
	unsigned int	idle_flag;35,797
	volatile unsigned long *bedrock_rev_id;bedrock_rev_id37,824
	volatile unsigned long *pio_write_status_addr;pio_write_status_addr38,865
	unsigned long pio_write_status_val;39,913
	volatile unsigned long *pio_shub_war_cam_addr;pio_shub_war_cam_addr40,950
	unsigned long	sn_in_service_ivecs[sn_in_service_ivecs42,999
	int		sn_lb_int_war_ticks;43,1038
	int		sn_last_irq;44,1065
	int		sn_first_irq;45,1084
} pda_t;46,1104
#define CACHE_ALIGN(49,1115
#define pda	65,1882
#define pdacpu(67,1930

xen/include/asm-ia64/linux/asm/sn/shubio.h,53625
#define _ASM_IA64_SN_SHUBIO_H10,298
#define HUB_WIDGET_ID_MAX	12,329
#define IIO_NUM_ITTES	13,359
#define HUB_NUM_BIG_WINDOW	14,384
#define		IIO_WID	16,432
#define		IIO_WSTAT	19,588
#define		IIO_WCR	20,649
#define		IIO_ILAPR	21,719
#define		IIO_ILAPO	22,792
#define		IIO_IOWA	23,865
#define		IIO_IIWA	24,927
#define		IIO_IIDEM	25,988
#define		IIO_ILCSR	26,1054
#define		IIO_ILLR	27,1126
#define		IIO_IIDSR	28,1185
#define		IIO_IGFX0	30,1248
#define		IIO_IGFX1	31,1315
#define		IIO_ISCR0	33,1383
#define		IIO_ISCR1	34,1442
#define		IIO_ITTE1	36,1502
#define		IIO_ITTE2	37,1568
#define		IIO_ITTE3	38,1634
#define		IIO_ITTE4	39,1700
#define		IIO_ITTE5	40,1766
#define		IIO_ITTE6	41,1832
#define		IIO_ITTE7	42,1898
#define		IIO_IPRB0	44,1965
#define		IIO_IPRB8	45,2019
#define		IIO_IPRB9	46,2073
#define		IIO_IPRBA	47,2127
#define		IIO_IPRBB	48,2181
#define		IIO_IPRBC	49,2235
#define		IIO_IPRBD	50,2289
#define		IIO_IPRBE	51,2343
#define		IIO_IPRBF	52,2397
#define		IIO_IXCC	54,2452
#define		IIO_IMEM	55,2522
#define		IIO_IXTT	56,2586
#define		IIO_IECLR	57,2653
#define		IIO_IBCR	58,2714
#define		IIO_IXSM	60,2775
#define		IIO_IXSS	61,2841
#define		IIO_ILCT	63,2909
#define		IIO_IIEPH1 65,2969
#define		IIO_IIEPH2 66,3048
#define		IIO_ISLAPR 68,3128
#define		IIO_ISLAPO 69,3206
#define		IIO_IWI	71,3286
#define		IIO_IWEL	72,3352
#define		IIO_IWC	73,3418
#define		IIO_IWS	74,3482
#define		IIO_IWEIM	75,3545
#define		IIO_IPCA	77,3627
#define		IIO_IPRTE0_A	79,3686
#define		IIO_IPRTE1_A	80,3768
#define		IIO_IPRTE2_A	81,3850
#define		IIO_IPRTE3_A	82,3932
#define		IIO_IPRTE4_A	83,4014
#define		IIO_IPRTE5_A	84,4096
#define		IIO_IPRTE6_A	85,4178
#define		IIO_IPRTE7_A	86,4260
#define		IIO_IPRTE0_B	88,4343
#define		IIO_IPRTE1_B	89,4425
#define		IIO_IPRTE2_B	90,4507
#define		IIO_IPRTE3_B	91,4589
#define		IIO_IPRTE4_B	92,4671
#define		IIO_IPRTE5_B	93,4753
#define		IIO_IPRTE6_B	94,4835
#define		IIO_IPRTE7_B	95,4917
#define		IIO_IPDR	97,5000
#define		IIO_ICDR	98,5065
#define		IIO_IFDR	99,5136
#define		IIO_IIAP	100,5199
#define		IIO_ICMR	101,5265
#define		IIO_ICCR	102,5328
#define		IIO_ICTO	103,5388
#define		IIO_ICTP	104,5441
#define		IIO_ICRB0_A	106,5503
#define		IIO_ICRB0_B	107,5559
#define		IIO_ICRB0_C	108,5615
#define		IIO_ICRB0_D	109,5671
#define		IIO_ICRB0_E	110,5727
#define		IIO_ICRB1_A	112,5784
#define		IIO_ICRB1_B	113,5840
#define		IIO_ICRB1_C	114,5896
#define		IIO_ICRB1_D	115,5952
#define		IIO_ICRB1_E	116,6008
#define		IIO_ICRB2_A	118,6065
#define		IIO_ICRB2_B	119,6121
#define		IIO_ICRB2_C	120,6177
#define		IIO_ICRB2_D	121,6233
#define		IIO_ICRB2_E	122,6289
#define		IIO_ICRB3_A	124,6346
#define		IIO_ICRB3_B	125,6402
#define		IIO_ICRB3_C	126,6458
#define		IIO_ICRB3_D	127,6514
#define		IIO_ICRB3_E	128,6570
#define		IIO_ICRB4_A	130,6627
#define		IIO_ICRB4_B	131,6683
#define		IIO_ICRB4_C	132,6739
#define		IIO_ICRB4_D	133,6795
#define		IIO_ICRB4_E	134,6851
#define		IIO_ICRB5_A	136,6908
#define		IIO_ICRB5_B	137,6964
#define		IIO_ICRB5_C	138,7020
#define		IIO_ICRB5_D	139,7076
#define		IIO_ICRB5_E	140,7132
#define		IIO_ICRB6_A	142,7189
#define		IIO_ICRB6_B	143,7245
#define		IIO_ICRB6_C	144,7301
#define		IIO_ICRB6_D	145,7357
#define		IIO_ICRB6_E	146,7413
#define		IIO_ICRB7_A	148,7470
#define		IIO_ICRB7_B	149,7526
#define		IIO_ICRB7_C	150,7582
#define		IIO_ICRB7_D	151,7638
#define		IIO_ICRB7_E	152,7694
#define		IIO_ICRB8_A	154,7751
#define		IIO_ICRB8_B	155,7807
#define		IIO_ICRB8_C	156,7863
#define		IIO_ICRB8_D	157,7919
#define		IIO_ICRB8_E	158,7975
#define		IIO_ICRB9_A	160,8032
#define		IIO_ICRB9_B	161,8088
#define		IIO_ICRB9_C	162,8144
#define		IIO_ICRB9_D	163,8200
#define		IIO_ICRB9_E	164,8256
#define		IIO_ICRBA_A	166,8313
#define		IIO_ICRBA_B	167,8369
#define		IIO_ICRBA_C	168,8425
#define		IIO_ICRBA_D	169,8481
#define		IIO_ICRBA_E	170,8537
#define		IIO_ICRBB_A	172,8594
#define		IIO_ICRBB_B	173,8650
#define		IIO_ICRBB_C	174,8706
#define		IIO_ICRBB_D	175,8762
#define		IIO_ICRBB_E	176,8818
#define		IIO_ICRBC_A	178,8875
#define		IIO_ICRBC_B	179,8931
#define		IIO_ICRBC_C	180,8987
#define		IIO_ICRBC_D	181,9043
#define		IIO_ICRBC_E	182,9099
#define		IIO_ICRBD_A	184,9156
#define		IIO_ICRBD_B	185,9212
#define		IIO_ICRBD_C	186,9268
#define		IIO_ICRBD_D	187,9324
#define		IIO_ICRBD_E	188,9380
#define		IIO_ICRBE_A	190,9437
#define		IIO_ICRBE_B	191,9493
#define		IIO_ICRBE_C	192,9549
#define		IIO_ICRBE_D	193,9605
#define		IIO_ICRBE_E	194,9661
#define		IIO_ICSML	196,9718
#define		IIO_ICSMM	197,9783
#define		IIO_ICSMH	198,9851
#define		IIO_IDBSS	200,9918
#define		IIO_IBLS0	202,9980
#define		IIO_IBSA0	203,10040
#define		IIO_IBDA0	204,10101
#define		IIO_IBCT0	205,10167
#define		IIO_IBNA0	206,10231
#define		IIO_IBIA0	207,10298
#define		IIO_IBLS1	208,10362
#define		IIO_IBSA1	209,10422
#define		IIO_IBDA1	210,10483
#define		IIO_IBCT1	211,10549
#define		IIO_IBNA1	212,10613
#define		IIO_IBIA1	213,10680
#define		IIO_IPCR	215,10745
#define		IIO_IPPR	216,10804
typedef union ii_wid_u 229,11486
	u64 ii_wid_regval;230,11511
		u64 w_rsvd_1:w_rsvd_1232,11541
		u64 w_mfg_num:w_mfg_num233,11559
		u64 w_part_num:w_part_num234,11579
		u64 w_rev_num:w_rev_num235,11600
		u64 w_rsvd:w_rsvd236,11619
	} ii_wid_fld_s;237,11636
} ii_wid_u_t;238,11653
typedef union ii_wstat_u 248,12066
	u64 ii_wstat_regval;249,12093
		u64 w_pending:w_pending251,12125
		u64 w_xt_crd_to:w_xt_crd_to252,12144
		u64 w_xt_tail_to:w_xt_tail_to253,12165
		u64 w_rsvd_3:w_rsvd_3254,12187
		u64 w_tx_mx_rty:w_tx_mx_rty255,12205
		u64 w_rsvd_2:w_rsvd_2256,12226
		u64 w_llp_tx_cnt:w_llp_tx_cnt257,12244
		u64 w_rsvd_1:w_rsvd_1258,12266
		u64 w_crazy:w_crazy259,12284
		u64 w_rsvd:w_rsvd260,12301
	} ii_wstat_fld_s;261,12318
} ii_wstat_u_t;262,12337
typedef union ii_wcr_u 271,12678
	u64 ii_wcr_regval;272,12703
		u64 w_wid:w_wid274,12733
		u64 w_tag:w_tag275,12748
		u64 w_rsvd_1:w_rsvd_1276,12763
		u64 w_dst_crd:w_dst_crd277,12781
		u64 w_f_bad_pkt:w_f_bad_pkt278,12800
		u64 w_dir_con:w_dir_con279,12821
		u64 w_e_thresh:w_e_thresh280,12840
		u64 w_rsvd:w_rsvd281,12860
	} ii_wcr_fld_s;282,12877
} ii_wcr_u_t;283,12894
typedef union ii_ilapr_u 312,14713
	u64 ii_ilapr_regval;313,14740
		u64 i_region:i_region315,14772
	} ii_ilapr_fld_s;316,14791
} ii_ilapr_u_t;317,14810
typedef union ii_ilapo_u 332,15595
	u64 ii_ilapo_regval;333,15622
		u64 i_io_ovrride:i_io_ovrride335,15654
	} ii_ilapo_fld_s;336,15677
} ii_ilapo_u_t;337,15696
typedef union ii_iowa_u 346,16037
	u64 ii_iowa_regval;347,16063
		u64 i_w0_oac:i_w0_oac349,16094
		u64 i_rsvd_1:i_rsvd_1350,16112
		u64 i_wx_oac:i_wx_oac351,16130
		u64 i_rsvd:i_rsvd352,16148
	} ii_iowa_fld_s;353,16165
} ii_iowa_u_t;354,16183
typedef union ii_iiwa_u 365,16610
	u64 ii_iiwa_regval;366,16636
		u64 i_w0_iac:i_w0_iac368,16667
		u64 i_rsvd_1:i_rsvd_1369,16685
		u64 i_wx_iac:i_wx_iac370,16703
		u64 i_rsvd:i_rsvd371,16721
	} ii_iiwa_fld_s;372,16738
} ii_iiwa_u_t;373,16756
typedef union ii_iidem_u 394,17984
	u64 ii_iidem_regval;395,18011
		u64 i_w8_dxs:i_w8_dxs397,18043
		u64 i_w9_dxs:i_w9_dxs398,18061
		u64 i_wa_dxs:i_wa_dxs399,18079
		u64 i_wb_dxs:i_wb_dxs400,18097
		u64 i_wc_dxs:i_wc_dxs401,18115
		u64 i_wd_dxs:i_wd_dxs402,18133
		u64 i_we_dxs:i_we_dxs403,18151
		u64 i_wf_dxs:i_wf_dxs404,18169
	} ii_iidem_fld_s;405,18187
} ii_iidem_u_t;406,18206
typedef union ii_ilcsr_u 415,18547
	u64 ii_ilcsr_regval;416,18574
		u64 i_nullto:i_nullto418,18606
		u64 i_rsvd_4:i_rsvd_4419,18624
		u64 i_wrmrst:i_wrmrst420,18642
		u64 i_rsvd_3:i_rsvd_3421,18660
		u64 i_llp_en:i_llp_en422,18678
		u64 i_bm8:i_bm8423,18696
		u64 i_llp_stat:i_llp_stat424,18711
		u64 i_remote_power:i_remote_power425,18731
		u64 i_rsvd_2:i_rsvd_2426,18755
		u64 i_maxrtry:i_maxrtry427,18773
		u64 i_d_avail_sel:i_d_avail_sel428,18793
		u64 i_rsvd_1:i_rsvd_1429,18816
		u64 i_maxbrst:i_maxbrst430,18834
		u64 i_rsvd:i_rsvd431,18854
	} ii_ilcsr_fld_s;433,18872
} ii_ilcsr_u_t;434,18891
typedef union ii_illr_u 443,19176
	u64 ii_illr_regval;444,19202
		u64 i_sn_cnt:i_sn_cnt446,19233
		u64 i_cb_cnt:i_cb_cnt447,19252
		u64 i_rsvd:i_rsvd448,19271
	} ii_illr_fld_s;449,19288
} ii_illr_u_t;450,19306
typedef union ii_iidsr_u 466,20164
	u64 ii_iidsr_regval;467,20191
		u64 i_level:i_level469,20223
		u64 i_pi_id:i_pi_id470,20240
		u64 i_node:i_node471,20257
		u64 i_rsvd_3:i_rsvd_3472,20274
		u64 i_enable:i_enable473,20292
		u64 i_rsvd_2:i_rsvd_2474,20310
		u64 i_int_sent:i_int_sent475,20328
		u64 i_rsvd_1:i_rsvd_1476,20348
		u64 i_pi0_forward_int:i_pi0_forward_int477,20366
		u64 i_pi1_forward_int:i_pi1_forward_int478,20393
		u64 i_rsvd:i_rsvd479,20420
	} ii_iidsr_fld_s;480,20437
} ii_iidsr_u_t;481,20456
typedef union ii_igfx0_u 494,21093
	u64 ii_igfx0_regval;495,21120
		u64 i_w_num:i_w_num497,21152
		u64 i_pi_id:i_pi_id498,21169
		u64 i_n_num:i_n_num499,21186
		u64 i_p_num:i_p_num500,21204
		u64 i_rsvd:i_rsvd501,21221
	} ii_igfx0_fld_s;502,21238
} ii_igfx0_u_t;503,21257
typedef union ii_igfx1_u 516,21894
	u64 ii_igfx1_regval;517,21921
		u64 i_w_num:i_w_num519,21953
		u64 i_pi_id:i_pi_id520,21970
		u64 i_n_num:i_n_num521,21987
		u64 i_p_num:i_p_num522,22005
		u64 i_rsvd:i_rsvd523,22022
	} ii_igfx1_fld_s;524,22039
} ii_igfx1_u_t;525,22058
typedef union ii_iscr0_u 534,22399
	u64 ii_iscr0_regval;535,22426
		u64 i_scratch:i_scratch537,22458
	} ii_iscr0_fld_s;538,22478
} ii_iscr0_u_t;539,22497
typedef union ii_iscr1_u 548,22838
	u64 ii_iscr1_regval;549,22865
		u64 i_scratch:i_scratch551,22897
	} ii_iscr1_fld_s;552,22917
} ii_iscr1_u_t;553,22936
typedef union ii_itte1_u 582,24758
	u64 ii_itte1_regval;583,24785
		u64 i_offset:i_offset585,24817
		u64 i_rsvd_1:i_rsvd_1586,24835
		u64 i_w_num:i_w_num587,24853
		u64 i_iosp:i_iosp588,24870
		u64 i_rsvd:i_rsvd589,24886
	} ii_itte1_fld_s;590,24903
} ii_itte1_u_t;591,24922
typedef union ii_itte2_u 620,26743
	u64 ii_itte2_regval;621,26770
		u64 i_offset:i_offset623,26802
		u64 i_rsvd_1:i_rsvd_1624,26820
		u64 i_w_num:i_w_num625,26838
		u64 i_iosp:i_iosp626,26855
		u64 i_rsvd:i_rsvd627,26871
	} ii_itte2_fld_s;628,26888
} ii_itte2_u_t;629,26907
typedef union ii_itte3_u 658,28728
	u64 ii_itte3_regval;659,28755
		u64 i_offset:i_offset661,28787
		u64 i_rsvd_1:i_rsvd_1662,28805
		u64 i_w_num:i_w_num663,28823
		u64 i_iosp:i_iosp664,28840
		u64 i_rsvd:i_rsvd665,28856
	} ii_itte3_fld_s;666,28873
} ii_itte3_u_t;667,28892
typedef union ii_itte4_u 696,30713
	u64 ii_itte4_regval;697,30740
		u64 i_offset:i_offset699,30772
		u64 i_rsvd_1:i_rsvd_1700,30790
		u64 i_w_num:i_w_num701,30808
		u64 i_iosp:i_iosp702,30825
		u64 i_rsvd:i_rsvd703,30841
	} ii_itte4_fld_s;704,30858
} ii_itte4_u_t;705,30877
typedef union ii_itte5_u 734,32698
	u64 ii_itte5_regval;735,32725
		u64 i_offset:i_offset737,32757
		u64 i_rsvd_1:i_rsvd_1738,32775
		u64 i_w_num:i_w_num739,32793
		u64 i_iosp:i_iosp740,32810
		u64 i_rsvd:i_rsvd741,32826
	} ii_itte5_fld_s;742,32843
} ii_itte5_u_t;743,32862
typedef union ii_itte6_u 772,34683
	u64 ii_itte6_regval;773,34710
		u64 i_offset:i_offset775,34742
		u64 i_rsvd_1:i_rsvd_1776,34760
		u64 i_w_num:i_w_num777,34778
		u64 i_iosp:i_iosp778,34795
		u64 i_rsvd:i_rsvd779,34811
	} ii_itte6_fld_s;780,34828
} ii_itte6_u_t;781,34847
typedef union ii_itte7_u 810,36668
	u64 ii_itte7_regval;811,36695
		u64 i_offset:i_offset813,36727
		u64 i_rsvd_1:i_rsvd_1814,36745
		u64 i_w_num:i_w_num815,36763
		u64 i_iosp:i_iosp816,36780
		u64 i_rsvd:i_rsvd817,36796
	} ii_itte7_fld_s;818,36813
} ii_itte7_u_t;819,36832
typedef union ii_iprb0_u 845,38375
	u64 ii_iprb0_regval;846,38402
		u64 i_c:i_c848,38434
		u64 i_na:i_na849,38447
		u64 i_rsvd_2:i_rsvd_2850,38462
		u64 i_nb:i_nb851,38480
		u64 i_rsvd_1:i_rsvd_1852,38495
		u64 i_m:i_m853,38513
		u64 i_f:i_f854,38526
		u64 i_of_cnt:i_of_cnt855,38539
		u64 i_error:i_error856,38557
		u64 i_rd_to:i_rd_to857,38574
		u64 i_spur_wr:i_spur_wr858,38591
		u64 i_spur_rd:i_spur_rd859,38610
		u64 i_rsvd:i_rsvd860,38629
		u64 i_mult_err:i_mult_err861,38646
	} ii_iprb0_fld_s;862,38666
} ii_iprb0_u_t;863,38685
typedef union ii_iprb8_u 889,40228
	u64 ii_iprb8_regval;890,40255
		u64 i_c:i_c892,40287
		u64 i_na:i_na893,40300
		u64 i_rsvd_2:i_rsvd_2894,40315
		u64 i_nb:i_nb895,40333
		u64 i_rsvd_1:i_rsvd_1896,40348
		u64 i_m:i_m897,40366
		u64 i_f:i_f898,40379
		u64 i_of_cnt:i_of_cnt899,40392
		u64 i_error:i_error900,40410
		u64 i_rd_to:i_rd_to901,40427
		u64 i_spur_wr:i_spur_wr902,40444
		u64 i_spur_rd:i_spur_rd903,40463
		u64 i_rsvd:i_rsvd904,40482
		u64 i_mult_err:i_mult_err905,40499
	} ii_iprb8_fld_s;906,40519
} ii_iprb8_u_t;907,40538
typedef union ii_iprb9_u 933,42081
	u64 ii_iprb9_regval;934,42108
		u64 i_c:i_c936,42140
		u64 i_na:i_na937,42153
		u64 i_rsvd_2:i_rsvd_2938,42168
		u64 i_nb:i_nb939,42186
		u64 i_rsvd_1:i_rsvd_1940,42201
		u64 i_m:i_m941,42219
		u64 i_f:i_f942,42232
		u64 i_of_cnt:i_of_cnt943,42245
		u64 i_error:i_error944,42263
		u64 i_rd_to:i_rd_to945,42280
		u64 i_spur_wr:i_spur_wr946,42297
		u64 i_spur_rd:i_spur_rd947,42316
		u64 i_rsvd:i_rsvd948,42335
		u64 i_mult_err:i_mult_err949,42352
	} ii_iprb9_fld_s;950,42372
} ii_iprb9_u_t;951,42391
typedef union ii_iprba_u 977,43926
	u64 ii_iprba_regval;978,43953
		u64 i_c:i_c980,43985
		u64 i_na:i_na981,43998
		u64 i_rsvd_2:i_rsvd_2982,44013
		u64 i_nb:i_nb983,44031
		u64 i_rsvd_1:i_rsvd_1984,44046
		u64 i_m:i_m985,44064
		u64 i_f:i_f986,44077
		u64 i_of_cnt:i_of_cnt987,44090
		u64 i_error:i_error988,44108
		u64 i_rd_to:i_rd_to989,44125
		u64 i_spur_wr:i_spur_wr990,44142
		u64 i_spur_rd:i_spur_rd991,44161
		u64 i_rsvd:i_rsvd992,44180
		u64 i_mult_err:i_mult_err993,44197
	} ii_iprba_fld_s;994,44217
} ii_iprba_u_t;995,44236
typedef union ii_iprbb_u 1021,45779
	u64 ii_iprbb_regval;1022,45806
		u64 i_c:i_c1024,45838
		u64 i_na:i_na1025,45851
		u64 i_rsvd_2:i_rsvd_21026,45866
		u64 i_nb:i_nb1027,45884
		u64 i_rsvd_1:i_rsvd_11028,45899
		u64 i_m:i_m1029,45917
		u64 i_f:i_f1030,45930
		u64 i_of_cnt:i_of_cnt1031,45943
		u64 i_error:i_error1032,45961
		u64 i_rd_to:i_rd_to1033,45978
		u64 i_spur_wr:i_spur_wr1034,45995
		u64 i_spur_rd:i_spur_rd1035,46014
		u64 i_rsvd:i_rsvd1036,46033
		u64 i_mult_err:i_mult_err1037,46050
	} ii_iprbb_fld_s;1038,46070
} ii_iprbb_u_t;1039,46089
typedef union ii_iprbc_u 1065,47632
	u64 ii_iprbc_regval;1066,47659
		u64 i_c:i_c1068,47691
		u64 i_na:i_na1069,47704
		u64 i_rsvd_2:i_rsvd_21070,47719
		u64 i_nb:i_nb1071,47737
		u64 i_rsvd_1:i_rsvd_11072,47752
		u64 i_m:i_m1073,47770
		u64 i_f:i_f1074,47783
		u64 i_of_cnt:i_of_cnt1075,47796
		u64 i_error:i_error1076,47814
		u64 i_rd_to:i_rd_to1077,47831
		u64 i_spur_wr:i_spur_wr1078,47848
		u64 i_spur_rd:i_spur_rd1079,47867
		u64 i_rsvd:i_rsvd1080,47886
		u64 i_mult_err:i_mult_err1081,47903
	} ii_iprbc_fld_s;1082,47923
} ii_iprbc_u_t;1083,47942
typedef union ii_iprbd_u 1109,49485
	u64 ii_iprbd_regval;1110,49512
		u64 i_c:i_c1112,49544
		u64 i_na:i_na1113,49557
		u64 i_rsvd_2:i_rsvd_21114,49572
		u64 i_nb:i_nb1115,49590
		u64 i_rsvd_1:i_rsvd_11116,49605
		u64 i_m:i_m1117,49623
		u64 i_f:i_f1118,49636
		u64 i_of_cnt:i_of_cnt1119,49649
		u64 i_error:i_error1120,49667
		u64 i_rd_to:i_rd_to1121,49684
		u64 i_spur_wr:i_spur_wr1122,49701
		u64 i_spur_rd:i_spur_rd1123,49720
		u64 i_rsvd:i_rsvd1124,49739
		u64 i_mult_err:i_mult_err1125,49756
	} ii_iprbd_fld_s;1126,49776
} ii_iprbd_u_t;1127,49795
typedef union ii_iprbe_u 1153,51338
	u64 ii_iprbe_regval;1154,51365
		u64 i_c:i_c1156,51397
		u64 i_na:i_na1157,51410
		u64 i_rsvd_2:i_rsvd_21158,51425
		u64 i_nb:i_nb1159,51443
		u64 i_rsvd_1:i_rsvd_11160,51458
		u64 i_m:i_m1161,51476
		u64 i_f:i_f1162,51489
		u64 i_of_cnt:i_of_cnt1163,51502
		u64 i_error:i_error1164,51520
		u64 i_rd_to:i_rd_to1165,51537
		u64 i_spur_wr:i_spur_wr1166,51554
		u64 i_spur_rd:i_spur_rd1167,51573
		u64 i_rsvd:i_rsvd1168,51592
		u64 i_mult_err:i_mult_err1169,51609
	} ii_iprbe_fld_s;1170,51629
} ii_iprbe_u_t;1171,51648
typedef union ii_iprbf_u 1197,53191
	u64 ii_iprbf_regval;1198,53218
		u64 i_c:i_c1200,53250
		u64 i_na:i_na1201,53263
		u64 i_rsvd_2:i_rsvd_21202,53278
		u64 i_nb:i_nb1203,53296
		u64 i_rsvd_1:i_rsvd_11204,53311
		u64 i_m:i_m1205,53329
		u64 i_f:i_f1206,53342
		u64 i_of_cnt:i_of_cnt1207,53355
		u64 i_error:i_error1208,53373
		u64 i_rd_to:i_rd_to1209,53390
		u64 i_spur_wr:i_spur_wr1210,53407
		u64 i_spur_rd:i_spur_rd1211,53426
		u64 i_rsvd:i_rsvd1212,53445
		u64 i_mult_err:i_mult_err1213,53462
	} ii_iprbe_fld_s;1214,53482
} ii_iprbf_u_t;1215,53501
typedef union ii_ixcc_u 1234,54582
	u64 ii_ixcc_regval;1235,54608
		u64 i_time_out:i_time_out1237,54639
		u64 i_rsvd:i_rsvd1238,54660
	} ii_ixcc_fld_s;1239,54677
} ii_ixcc_u_t;1240,54695
typedef union ii_imem_u 1258,55701
	u64 ii_imem_regval;1259,55727
		u64 i_w0_esd:i_w0_esd1261,55758
		u64 i_rsvd_3:i_rsvd_31262,55776
		u64 i_b0_esd:i_b0_esd1263,55794
		u64 i_rsvd_2:i_rsvd_21264,55812
		u64 i_b1_esd:i_b1_esd1265,55830
		u64 i_rsvd_1:i_rsvd_11266,55848
		u64 i_clr_precise:i_clr_precise1267,55866
		u64 i_rsvd:i_rsvd1268,55889
	} ii_imem_fld_s;1269,55906
} ii_imem_u_t;1270,55924
typedef union ii_ixtt_u 1296,57522
	u64 ii_ixtt_regval;1297,57548
		u64 i_tail_to:i_tail_to1299,57579
		u64 i_rsvd_1:i_rsvd_11300,57599
		u64 i_rrsp_ps:i_rrsp_ps1301,57617
		u64 i_rrsp_to:i_rrsp_to1302,57637
		u64 i_rsvd:i_rsvd1303,57656
	} ii_ixtt_fld_s;1304,57672
} ii_ixtt_u_t;1305,57690
typedef union ii_ieclr_u 1318,58326
	u64 ii_ieclr_regval;1319,58353
		u64 i_e_prb_0:i_e_prb_01321,58385
		u64 i_rsvd:i_rsvd1322,58404
		u64 i_e_prb_8:i_e_prb_81323,58420
		u64 i_e_prb_9:i_e_prb_91324,58439
		u64 i_e_prb_a:i_e_prb_a1325,58458
		u64 i_e_prb_b:i_e_prb_b1326,58477
		u64 i_e_prb_c:i_e_prb_c1327,58496
		u64 i_e_prb_d:i_e_prb_d1328,58515
		u64 i_e_prb_e:i_e_prb_e1329,58534
		u64 i_e_prb_f:i_e_prb_f1330,58553
		u64 i_e_crazy:i_e_crazy1331,58572
		u64 i_e_bte_0:i_e_bte_01332,58591
		u64 i_e_bte_1:i_e_bte_11333,58610
		u64 i_reserved_1:i_reserved_11334,58629
		u64 i_spur_rd_hdr:i_spur_rd_hdr1335,58652
		u64 i_cam_intr_to:i_cam_intr_to1336,58675
		u64 i_cam_overflow:i_cam_overflow1337,58698
		u64 i_cam_read_miss:i_cam_read_miss1338,58722
		u64 i_ioq_rep_underflow:i_ioq_rep_underflow1339,58747
		u64 i_ioq_req_underflow:i_ioq_req_underflow1340,58776
		u64 i_ioq_rep_overflow:i_ioq_rep_overflow1341,58805
		u64 i_ioq_req_overflow:i_ioq_req_overflow1342,58833
		u64 i_iiq_rep_overflow:i_iiq_rep_overflow1343,58861
		u64 i_iiq_req_overflow:i_iiq_req_overflow1344,58889
		u64 i_ii_xn_rep_cred_overflow:i_ii_xn_rep_cred_overflow1345,58917
		u64 i_ii_xn_req_cred_overflow:i_ii_xn_req_cred_overflow1346,58952
		u64 i_ii_xn_invalid_cmd:i_ii_xn_invalid_cmd1347,58987
		u64 i_xn_ii_invalid_cmd:i_xn_ii_invalid_cmd1348,59016
		u64 i_reserved_2:i_reserved_21349,59045
	} ii_ieclr_fld_s;1350,59068
} ii_ieclr_u_t;1351,59087
typedef union ii_ibcr_u 1362,59576
	u64 ii_ibcr_regval;1363,59602
		u64 i_count:i_count1365,59633
		u64 i_rsvd_1:i_rsvd_11366,59650
		u64 i_soft_reset:i_soft_reset1367,59668
		u64 i_rsvd:i_rsvd1368,59690
	} ii_ibcr_fld_s;1369,59707
} ii_ibcr_u_t;1370,59725
typedef union ii_ixsm_u 1401,61693
	u64 ii_ixsm_regval;1402,61719
		u64 i_byte_en:i_byte_en1404,61750
		u64 i_reserved:i_reserved1405,61770
		u64 i_tag:i_tag1406,61790
		u64 i_alt_pactyp:i_alt_pactyp1407,61805
		u64 i_bo:i_bo1408,61827
		u64 i_error:i_error1409,61841
		u64 i_vbpm:i_vbpm1410,61858
		u64 i_gbr:i_gbr1411,61874
		u64 i_ds:i_ds1412,61889
		u64 i_ct:i_ct1413,61903
		u64 i_tnum:i_tnum1414,61917
		u64 i_pactyp:i_pactyp1415,61933
		u64 i_sidn:i_sidn1416,61951
		u64 i_didn:i_didn1417,61967
	} ii_ixsm_fld_s;1418,61983
} ii_ixsm_u_t;1419,62001
typedef union ii_ixss_u 1428,62341
	u64 ii_ixss_regval;1429,62367
		u64 i_sideband:i_sideband1431,62398
		u64 i_rsvd:i_rsvd1432,62418
		u64 i_valid:i_valid1433,62435
	} ii_ixss_fld_s;1434,62452
} ii_ixss_u_t;1435,62470
typedef union ii_ilct_u 1449,63180
	u64 ii_ilct_regval;1450,63206
		u64 i_test_seed:i_test_seed1452,63237
		u64 i_test_mask:i_test_mask1453,63259
		u64 i_test_data:i_test_data1454,63280
		u64 i_test_valid:i_test_valid1455,63302
		u64 i_test_cberr:i_test_cberr1456,63324
		u64 i_test_flit:i_test_flit1457,63346
		u64 i_test_clear:i_test_clear1458,63367
		u64 i_test_err_capture:i_test_err_capture1459,63389
		u64 i_rsvd:i_rsvd1460,63417
	} ii_ilct_fld_s;1461,63433
} ii_ilct_u_t;1462,63451
typedef union ii_iieph1_u 1484,64753
	u64 ii_iieph1_regval;1485,64781
		u64 i_command:i_command1487,64814
		u64 i_rsvd_5:i_rsvd_51488,64833
		u64 i_suppl:i_suppl1489,64851
		u64 i_rsvd_4:i_rsvd_41490,64869
		u64 i_source:i_source1491,64887
		u64 i_rsvd_3:i_rsvd_31492,64906
		u64 i_err_type:i_err_type1493,64924
		u64 i_rsvd_2:i_rsvd_21494,64944
		u64 i_overrun:i_overrun1495,64962
		u64 i_rsvd_1:i_rsvd_11496,64981
		u64 i_valid:i_valid1497,64999
		u64 i_rsvd:i_rsvd1498,65016
	} ii_iieph1_fld_s;1499,65033
} ii_iieph1_u_t;1500,65053
typedef union ii_iieph2_u 1513,65691
	u64 ii_iieph2_regval;1514,65719
		u64 i_rsvd_0:i_rsvd_01516,65752
		u64 i_address:i_address1517,65770
		u64 i_rsvd_1:i_rsvd_11518,65790
		u64 i_tail:i_tail1519,65809
		u64 i_rsvd:i_rsvd1520,65825
	} ii_iieph2_fld_s;1521,65841
} ii_iieph2_u_t;1522,65861
typedef union ii_islapr_u 1534,66257
	u64 ii_islapr_regval;1535,66285
		u64 i_region:i_region1537,66318
	} ii_islapr_fld_s;1538,66337
} ii_islapr_u_t;1539,66357
typedef union ii_islapo_u 1549,66740
	u64 ii_islapo_regval;1550,66768
		u64 i_io_sbx_ovrride:i_io_sbx_ovrride1552,66801
		u64 i_rsvd:i_rsvd1553,66828
	} ii_islapo_fld_s;1554,66844
} ii_islapo_u_t;1555,66864
typedef union ii_iwi_u 1565,67254
	u64 ii_iwi_regval;1566,67279
		u64 i_prescale:i_prescale1568,67309
		u64 i_rsvd:i_rsvd1569,67330
		u64 i_timeout:i_timeout1570,67346
		u64 i_rsvd1:i_rsvd11571,67365
		u64 i_intrpt_retry_period:i_intrpt_retry_period1572,67382
		u64 i_rsvd2:i_rsvd21573,67413
	} ii_iwi_fld_s;1574,67430
} ii_iwi_u_t;1575,67447
typedef union ii_iwel_u 1584,67760
	u64 ii_iwel_regval;1585,67786
		u64 i_intr_timed_out:i_intr_timed_out1587,67817
		u64 i_rsvd:i_rsvd1588,67843
		u64 i_cam_overflow:i_cam_overflow1589,67859
		u64 i_cam_read_miss:i_cam_read_miss1590,67883
		u64 i_rsvd1:i_rsvd11591,67908
		u64 i_ioq_rep_underflow:i_ioq_rep_underflow1592,67925
		u64 i_ioq_req_underflow:i_ioq_req_underflow1593,67954
		u64 i_ioq_rep_overflow:i_ioq_rep_overflow1594,67983
		u64 i_ioq_req_overflow:i_ioq_req_overflow1595,68011
		u64 i_iiq_rep_overflow:i_iiq_rep_overflow1596,68039
		u64 i_iiq_req_overflow:i_iiq_req_overflow1597,68067
		u64 i_rsvd2:i_rsvd21598,68095
		u64 i_ii_xn_rep_cred_over_under:i_ii_xn_rep_cred_over_under1599,68112
		u64 i_ii_xn_req_cred_over_under:i_ii_xn_req_cred_over_under1600,68149
		u64 i_rsvd3:i_rsvd31601,68186
		u64 i_ii_xn_invalid_cmd:i_ii_xn_invalid_cmd1602,68203
		u64 i_xn_ii_invalid_cmd:i_xn_ii_invalid_cmd1603,68232
		u64 i_rsvd4:i_rsvd41604,68261
	} ii_iwel_fld_s;1605,68279
} ii_iwel_u_t;1606,68297
typedef union ii_iwc_u 1614,68526
	u64 ii_iwc_regval;1615,68551
		u64 i_dma_byte_swap:i_dma_byte_swap1617,68581
		u64 i_rsvd:i_rsvd1618,68606
		u64 i_cam_read_lines_reset:i_cam_read_lines_reset1619,68622
		u64 i_rsvd1:i_rsvd11620,68654
		u64 i_ii_xn_cred_over_under_log:i_ii_xn_cred_over_under_log1621,68671
		u64 i_rsvd2:i_rsvd21622,68708
		u64 i_xn_rep_iq_depth:i_xn_rep_iq_depth1623,68726
		u64 i_rsvd3:i_rsvd31624,68753
		u64 i_xn_req_iq_depth:i_xn_req_iq_depth1625,68770
		u64 i_rsvd4:i_rsvd41626,68797
		u64 i_iiq_depth:i_iiq_depth1627,68814
		u64 i_rsvd5:i_rsvd51628,68835
		u64 i_force_rep_cred:i_force_rep_cred1629,68853
		u64 i_force_req_cred:i_force_req_cred1630,68879
	} ii_iwc_fld_s;1631,68905
} ii_iwc_u_t;1632,68922
typedef union ii_iws_u 1640,69151
	u64 ii_iws_regval;1641,69176
		u64 i_xn_rep_iq_credits:i_xn_rep_iq_credits1643,69206
		u64 i_rsvd:i_rsvd1644,69235
		u64 i_xn_req_iq_credits:i_xn_req_iq_credits1645,69251
		u64 i_rsvd1:i_rsvd11646,69280
	} ii_iws_fld_s;1647,69298
} ii_iws_u_t;1648,69315
typedef union ii_iweim_u 1656,69551
	u64 ii_iweim_regval;1657,69578
		u64 i_intr_timed_out:i_intr_timed_out1659,69610
		u64 i_rsvd:i_rsvd1660,69636
		u64 i_cam_overflow:i_cam_overflow1661,69652
		u64 i_cam_read_miss:i_cam_read_miss1662,69676
		u64 i_rsvd1:i_rsvd11663,69701
		u64 i_ioq_rep_underflow:i_ioq_rep_underflow1664,69718
		u64 i_ioq_req_underflow:i_ioq_req_underflow1665,69747
		u64 i_ioq_rep_overflow:i_ioq_rep_overflow1666,69776
		u64 i_ioq_req_overflow:i_ioq_req_overflow1667,69804
		u64 i_iiq_rep_overflow:i_iiq_rep_overflow1668,69832
		u64 i_iiq_req_overflow:i_iiq_req_overflow1669,69860
		u64 i_rsvd2:i_rsvd21670,69888
		u64 i_ii_xn_rep_cred_overflow:i_ii_xn_rep_cred_overflow1671,69905
		u64 i_ii_xn_req_cred_overflow:i_ii_xn_req_cred_overflow1672,69940
		u64 i_rsvd3:i_rsvd31673,69975
		u64 i_ii_xn_invalid_cmd:i_ii_xn_invalid_cmd1674,69992
		u64 i_xn_ii_invalid_cmd:i_xn_ii_invalid_cmd1675,70021
		u64 i_rsvd4:i_rsvd41676,70050
	} ii_iweim_fld_s;1677,70068
} ii_iweim_u_t;1678,70087
typedef union ii_ipca_u 1690,70650
	u64 ii_ipca_regval;1691,70676
		u64 i_wid:i_wid1693,70707
		u64 i_adjust:i_adjust1694,70722
		u64 i_rsvd_1:i_rsvd_11695,70740
		u64 i_field:i_field1696,70758
		u64 i_rsvd:i_rsvd1697,70775
	} ii_ipca_fld_s;1698,70792
} ii_ipca_u_t;1699,70810
typedef union ii_iprte0a_u 1711,71372
	u64 ii_iprte0a_regval;1712,71401
		u64 i_rsvd_1:i_rsvd_11714,71435
		u64 i_widget:i_widget1715,71454
		u64 i_to_cnt:i_to_cnt1716,71472
		u64 i_vld:i_vld1717,71490
	} ii_iprte0a_fld_s;1718,71505
} ii_iprte0a_u_t;1719,71526
typedef union ii_iprte1a_u 1731,72091
	u64 ii_iprte1a_regval;1732,72120
		u64 i_rsvd_1:i_rsvd_11734,72154
		u64 i_widget:i_widget1735,72173
		u64 i_to_cnt:i_to_cnt1736,72191
		u64 i_vld:i_vld1737,72209
	} ii_iprte1a_fld_s;1738,72224
} ii_iprte1a_u_t;1739,72245
typedef union ii_iprte2a_u 1751,72810
	u64 ii_iprte2a_regval;1752,72839
		u64 i_rsvd_1:i_rsvd_11754,72873
		u64 i_widget:i_widget1755,72892
		u64 i_to_cnt:i_to_cnt1756,72910
		u64 i_vld:i_vld1757,72928
	} ii_iprte2a_fld_s;1758,72943
} ii_iprte2a_u_t;1759,72964
typedef union ii_iprte3a_u 1771,73529
	u64 ii_iprte3a_regval;1772,73558
		u64 i_rsvd_1:i_rsvd_11774,73592
		u64 i_widget:i_widget1775,73611
		u64 i_to_cnt:i_to_cnt1776,73629
		u64 i_vld:i_vld1777,73647
	} ii_iprte3a_fld_s;1778,73662
} ii_iprte3a_u_t;1779,73683
typedef union ii_iprte4a_u 1791,74248
	u64 ii_iprte4a_regval;1792,74277
		u64 i_rsvd_1:i_rsvd_11794,74311
		u64 i_widget:i_widget1795,74330
		u64 i_to_cnt:i_to_cnt1796,74348
		u64 i_vld:i_vld1797,74366
	} ii_iprte4a_fld_s;1798,74381
} ii_iprte4a_u_t;1799,74402
typedef union ii_iprte5a_u 1811,74967
	u64 ii_iprte5a_regval;1812,74996
		u64 i_rsvd_1:i_rsvd_11814,75030
		u64 i_widget:i_widget1815,75049
		u64 i_to_cnt:i_to_cnt1816,75067
		u64 i_vld:i_vld1817,75085
	} ii_iprte5a_fld_s;1818,75100
} ii_iprte5a_u_t;1819,75121
typedef union ii_iprte6a_u 1831,75686
	u64 ii_iprte6a_regval;1832,75715
		u64 i_rsvd_1:i_rsvd_11834,75749
		u64 i_widget:i_widget1835,75768
		u64 i_to_cnt:i_to_cnt1836,75786
		u64 i_vld:i_vld1837,75804
	} ii_iprte6a_fld_s;1838,75819
} ii_iprte6a_u_t;1839,75840
typedef union ii_iprte7a_u 1851,76405
	u64 ii_iprte7a_regval;1852,76434
		u64 i_rsvd_1:i_rsvd_11854,76468
		u64 i_widget:i_widget1855,76487
		u64 i_to_cnt:i_to_cnt1856,76505
		u64 i_vld:i_vld1857,76523
	} ii_iprtea7_fld_s;1858,76538
} ii_iprte7a_u_t;1859,76559
typedef union ii_iprte0b_u 1871,77124
	u64 ii_iprte0b_regval;1872,77153
		u64 i_rsvd_1:i_rsvd_11874,77187
		u64 i_address:i_address1875,77205
		u64 i_init:i_init1876,77225
		u64 i_source:i_source1877,77241
	} ii_iprte0b_fld_s;1878,77260
} ii_iprte0b_u_t;1879,77281
typedef union ii_iprte1b_u 1891,77846
	u64 ii_iprte1b_regval;1892,77875
		u64 i_rsvd_1:i_rsvd_11894,77909
		u64 i_address:i_address1895,77927
		u64 i_init:i_init1896,77947
		u64 i_source:i_source1897,77963
	} ii_iprte1b_fld_s;1898,77982
} ii_iprte1b_u_t;1899,78003
typedef union ii_iprte2b_u 1911,78568
	u64 ii_iprte2b_regval;1912,78597
		u64 i_rsvd_1:i_rsvd_11914,78631
		u64 i_address:i_address1915,78649
		u64 i_init:i_init1916,78669
		u64 i_source:i_source1917,78685
	} ii_iprte2b_fld_s;1918,78704
} ii_iprte2b_u_t;1919,78725
typedef union ii_iprte3b_u 1931,79290
	u64 ii_iprte3b_regval;1932,79319
		u64 i_rsvd_1:i_rsvd_11934,79353
		u64 i_address:i_address1935,79371
		u64 i_init:i_init1936,79391
		u64 i_source:i_source1937,79407
	} ii_iprte3b_fld_s;1938,79426
} ii_iprte3b_u_t;1939,79447
typedef union ii_iprte4b_u 1951,80012
	u64 ii_iprte4b_regval;1952,80041
		u64 i_rsvd_1:i_rsvd_11954,80075
		u64 i_address:i_address1955,80093
		u64 i_init:i_init1956,80113
		u64 i_source:i_source1957,80129
	} ii_iprte4b_fld_s;1958,80148
} ii_iprte4b_u_t;1959,80169
typedef union ii_iprte5b_u 1971,80734
	u64 ii_iprte5b_regval;1972,80763
		u64 i_rsvd_1:i_rsvd_11974,80797
		u64 i_address:i_address1975,80815
		u64 i_init:i_init1976,80835
		u64 i_source:i_source1977,80851
	} ii_iprte5b_fld_s;1978,80870
} ii_iprte5b_u_t;1979,80891
typedef union ii_iprte6b_u 1991,81456
	u64 ii_iprte6b_regval;1992,81485
		u64 i_rsvd_1:i_rsvd_11994,81519
		u64 i_address:i_address1995,81537
		u64 i_init:i_init1996,81557
		u64 i_source:i_source1997,81573
	} ii_iprte6b_fld_s;1999,81593
} ii_iprte6b_u_t;2000,81614
typedef union ii_iprte7b_u 2012,82179
	u64 ii_iprte7b_regval;2013,82208
		u64 i_rsvd_1:i_rsvd_12015,82242
		u64 i_address:i_address2016,82260
		u64 i_init:i_init2017,82280
		u64 i_source:i_source2018,82296
	} ii_iprte7b_fld_s;2019,82315
} ii_iprte7b_u_t;2020,82336
typedef union ii_ipdr_u 2040,83493
	u64 ii_ipdr_regval;2041,83519
		u64 i_te:i_te2043,83550
		u64 i_rsvd_1:i_rsvd_12044,83564
		u64 i_pnd:i_pnd2045,83582
		u64 i_init_rpcnt:i_init_rpcnt2046,83597
		u64 i_rsvd:i_rsvd2047,83619
	} ii_ipdr_fld_s;2048,83636
} ii_ipdr_u_t;2049,83654
typedef union ii_icdr_u 2068,84734
	u64 ii_icdr_regval;2069,84760
		u64 i_crb_num:i_crb_num2071,84791
		u64 i_pnd:i_pnd2072,84810
		u64 i_rsvd:i_rsvd2073,84825
	} ii_icdr_fld_s;2074,84842
} ii_icdr_u_t;2075,84860
typedef union ii_ifdr_u 2094,85940
	u64 ii_ifdr_regval;2095,85966
		u64 i_ioq_max_rq:i_ioq_max_rq2097,85997
		u64 i_set_ioq_rq:i_set_ioq_rq2098,86019
		u64 i_ioq_max_rp:i_ioq_max_rp2099,86041
		u64 i_set_ioq_rp:i_set_ioq_rp2100,86063
		u64 i_rsvd:i_rsvd2101,86085
	} ii_ifdr_fld_s;2102,86102
} ii_ifdr_u_t;2103,86120
typedef union ii_iiap_u 2116,86756
	u64 ii_iiap_regval;2117,86782
		u64 i_rq_mls:i_rq_mls2119,86813
		u64 i_rsvd_1:i_rsvd_12120,86831
		u64 i_rp_mls:i_rp_mls2121,86849
		u64 i_rsvd:i_rsvd2122,86867
	} ii_iiap_fld_s;2123,86884
} ii_iiap_u_t;2124,86902
typedef union ii_icmr_u 2135,87390
	u64 ii_icmr_regval;2136,87416
		u64 i_sp_msg:i_sp_msg2138,87447
		u64 i_rd_hdr:i_rd_hdr2139,87465
		u64 i_rsvd_4:i_rsvd_42140,87483
		u64 i_c_cnt:i_c_cnt2141,87501
		u64 i_rsvd_3:i_rsvd_32142,87518
		u64 i_clr_rqpd:i_clr_rqpd2143,87536
		u64 i_clr_rppd:i_clr_rppd2144,87556
		u64 i_rsvd_2:i_rsvd_22145,87576
		u64 i_fc_cnt:i_fc_cnt2146,87594
		u64 i_crb_vld:i_crb_vld2147,87612
		u64 i_crb_mark:i_crb_mark2148,87632
		u64 i_rsvd_1:i_rsvd_12149,87653
		u64 i_precise:i_precise2150,87671
		u64 i_rsvd:i_rsvd2151,87690
	} ii_icmr_fld_s;2152,87707
} ii_icmr_u_t;2153,87725
typedef union ii_iccr_u 2163,88139
	u64 ii_iccr_regval;2164,88165
		u64 i_crb_num:i_crb_num2166,88196
		u64 i_rsvd_1:i_rsvd_12167,88215
		u64 i_cmd:i_cmd2168,88233
		u64 i_pending:i_pending2169,88248
		u64 i_rsvd:i_rsvd2170,88267
	} ii_iccr_fld_s;2171,88284
} ii_iccr_u_t;2172,88302
typedef union ii_icto_u 2180,88568
	u64 ii_icto_regval;2181,88594
		u64 i_timeout:i_timeout2183,88625
		u64 i_rsvd:i_rsvd2184,88644
	} ii_icto_fld_s;2185,88661
} ii_icto_u_t;2186,88679
typedef union ii_ictp_u 2199,89315
	u64 ii_ictp_regval;2200,89341
		u64 i_prescale:i_prescale2202,89372
		u64 i_rsvd:i_rsvd2203,89393
	} ii_ictp_fld_s;2204,89410
} ii_ictp_u_t;2205,89428
typedef union ii_icrb0_a_u 2230,90929
	u64 ii_icrb0_a_regval;2231,90958
		u64 ia_iow:ia_iow2233,90992
		u64 ia_vld:ia_vld2234,91008
		u64 ia_addr:ia_addr2235,91024
		u64 ia_tnum:ia_tnum2236,91042
		u64 ia_sidn:ia_sidn2237,91059
		u64 ia_rsvd:ia_rsvd2238,91076
	} ii_icrb0_a_fld_s;2239,91093
} ii_icrb0_a_u_t;2240,91114
typedef union ii_icrb0_b_u 2251,91605
	u64 ii_icrb0_b_regval;2252,91634
		u64 ib_xt_err:ib_xt_err2254,91668
		u64 ib_mark:ib_mark2255,91687
		u64 ib_ln_uce:ib_ln_uce2256,91704
		u64 ib_errcode:ib_errcode2257,91723
		u64 ib_error:ib_error2258,91743
		u64 ib_stall__bte_1:ib_stall__bte_12259,91761
		u64 ib_stall__bte_0:ib_stall__bte_02260,91786
		u64 ib_stall__intr:ib_stall__intr2261,91811
		u64 ib_stall_ib:ib_stall_ib2262,91835
		u64 ib_intvn:ib_intvn2263,91856
		u64 ib_wb:ib_wb2264,91874
		u64 ib_hold:ib_hold2265,91889
		u64 ib_ack:ib_ack2266,91906
		u64 ib_resp:ib_resp2267,91922
		u64 ib_ack_cnt:ib_ack_cnt2268,91939
		u64 ib_rsvd:ib_rsvd2269,91960
		u64 ib_exc:ib_exc2270,91977
		u64 ib_init:ib_init2271,91993
		u64 ib_imsg:ib_imsg2272,92010
		u64 ib_imsgtype:ib_imsgtype2273,92027
		u64 ib_use_old:ib_use_old2274,92048
		u64 ib_rsvd_1:ib_rsvd_12275,92068
	} ii_icrb0_b_fld_s;2276,92088
} ii_icrb0_b_u_t;2277,92109
typedef union ii_icrb0_c_u 2288,92600
	u64 ii_icrb0_c_regval;2289,92629
		u64 ic_source:ic_source2291,92663
		u64 ic_size:ic_size2292,92683
		u64 ic_ct:ic_ct2293,92700
		u64 ic_bte_num:ic_bte_num2294,92715
		u64 ic_gbr:ic_gbr2295,92735
		u64 ic_resprqd:ic_resprqd2296,92751
		u64 ic_bo:ic_bo2297,92771
		u64 ic_suppl:ic_suppl2298,92786
		u64 ic_rsvd:ic_rsvd2299,92805
	} ii_icrb0_c_fld_s;2300,92823
} ii_icrb0_c_u_t;2301,92844
typedef union ii_icrb0_d_u 2312,93335
	u64 ii_icrb0_d_regval;2313,93364
		u64 id_pa_be:id_pa_be2315,93398
		u64 id_bte_op:id_bte_op2316,93417
		u64 id_pr_psc:id_pr_psc2317,93436
		u64 id_pr_cnt:id_pr_cnt2318,93455
		u64 id_sleep:id_sleep2319,93474
		u64 id_rsvd:id_rsvd2320,93492
	} ii_icrb0_d_fld_s;2321,93510
} ii_icrb0_d_u_t;2322,93531
typedef union ii_icrb0_e_u 2333,94022
	u64 ii_icrb0_e_regval;2334,94051
		u64 ie_timeout:ie_timeout2336,94085
		u64 ie_context:ie_context2337,94105
		u64 ie_rsvd:ie_rsvd2338,94126
		u64 ie_tvld:ie_tvld2339,94143
		u64 ie_cvld:ie_cvld2340,94160
		u64 ie_rsvd_0:ie_rsvd_02341,94177
	} ii_icrb0_e_fld_s;2342,94197
} ii_icrb0_e_u_t;2343,94218
typedef union ii_icsml_u 2353,94635
	u64 ii_icsml_regval;2354,94662
		u64 i_tt_addr:i_tt_addr2356,94694
		u64 i_newsuppl_ex:i_newsuppl_ex2357,94714
		u64 i_reserved:i_reserved2358,94738
		u64 i_overflow:i_overflow2359,94758
	} ii_icsml_fld_s;2360,94778
} ii_icsml_u_t;2361,94797
typedef union ii_icsmm_u 2371,95212
	u64 ii_icsmm_regval;2372,95239
		u64 i_tt_ack_cnt:i_tt_ack_cnt2374,95271
		u64 i_reserved:i_reserved2375,95294
	} ii_icsmm_fld_s;2376,95315
} ii_icsmm_u_t;2377,95334
typedef union ii_icsmh_u 2387,95749
	u64 ii_icsmh_regval;2388,95776
		u64 i_tt_vld:i_tt_vld2390,95808
		u64 i_xerr:i_xerr2391,95826
		u64 i_ft_cwact_o:i_ft_cwact_o2392,95842
		u64 i_ft_wact_o:i_ft_wact_o2393,95864
		u64 i_ft_active_o:i_ft_active_o2394,95885
		u64 i_sync:i_sync2395,95908
		u64 i_mnusg:i_mnusg2396,95924
		u64 i_mnusz:i_mnusz2397,95941
		u64 i_plusz:i_plusz2398,95958
		u64 i_plusg:i_plusg2399,95975
		u64 i_tt_exc:i_tt_exc2400,95992
		u64 i_tt_wb:i_tt_wb2401,96010
		u64 i_tt_hold:i_tt_hold2402,96027
		u64 i_tt_ack:i_tt_ack2403,96046
		u64 i_tt_resp:i_tt_resp2404,96064
		u64 i_tt_intvn:i_tt_intvn2405,96083
		u64 i_g_stall_bte1:i_g_stall_bte12406,96103
		u64 i_g_stall_bte0:i_g_stall_bte02407,96127
		u64 i_g_stall_il:i_g_stall_il2408,96151
		u64 i_g_stall_ib:i_g_stall_ib2409,96173
		u64 i_tt_imsg:i_tt_imsg2410,96195
		u64 i_tt_imsgtype:i_tt_imsgtype2411,96214
		u64 i_tt_use_old:i_tt_use_old2412,96237
		u64 i_tt_respreqd:i_tt_respreqd2413,96259
		u64 i_tt_bte_num:i_tt_bte_num2414,96282
		u64 i_cbn:i_cbn2415,96304
		u64 i_match:i_match2416,96319
		u64 i_rpcnt_lt_34:i_rpcnt_lt_342417,96336
		u64 i_rpcnt_ge_34:i_rpcnt_ge_342418,96359
		u64 i_rpcnt_lt_18:i_rpcnt_lt_182419,96382
		u64 i_rpcnt_ge_18:i_rpcnt_ge_182420,96405
		u64 i_rpcnt_lt_2:i_rpcnt_lt_22421,96428
		u64 i_rpcnt_ge_2:i_rpcnt_ge_22422,96450
		u64 i_rqcnt_lt_18:i_rqcnt_lt_182423,96472
		u64 i_rqcnt_ge_18:i_rqcnt_ge_182424,96495
		u64 i_rqcnt_lt_2:i_rqcnt_lt_22425,96518
		u64 i_rqcnt_ge_2:i_rqcnt_ge_22426,96540
		u64 i_tt_device:i_tt_device2427,96562
		u64 i_tt_init:i_tt_init2428,96583
		u64 i_reserved:i_reserved2429,96602
	} ii_icsmh_fld_s;2430,96622
} ii_icsmh_u_t;2431,96641
typedef union ii_idbss_u 2441,97056
	u64 ii_idbss_regval;2442,97083
		u64 i_iioclk_core_submenu:i_iioclk_core_submenu2444,97115
		u64 i_rsvd:i_rsvd2445,97146
		u64 i_fsbclk_wrapper_submenu:i_fsbclk_wrapper_submenu2446,97162
		u64 i_rsvd_1:i_rsvd_12447,97196
		u64 i_iioclk_menu:i_iioclk_menu2448,97214
		u64 i_rsvd_2:i_rsvd_22449,97237
	} ii_idbss_fld_s;2450,97256
} ii_idbss_u_t;2451,97275
typedef union ii_ibls0_u 2468,98208
	u64 ii_ibls0_regval;2469,98235
		u64 i_length:i_length2471,98267
		u64 i_error:i_error2472,98286
		u64 i_rsvd_1:i_rsvd_12473,98303
		u64 i_busy:i_busy2474,98321
		u64 i_rsvd:i_rsvd2475,98337
	} ii_ibls0_fld_s;2476,98354
} ii_ibls0_u_t;2477,98373
typedef union ii_ibsa0_u 2489,98936
	u64 ii_ibsa0_regval;2490,98963
		u64 i_rsvd_1:i_rsvd_12492,98995
		u64 i_addr:i_addr2493,99013
		u64 i_rsvd:i_rsvd2494,99030
	} ii_ibsa0_fld_s;2495,99047
} ii_ibsa0_u_t;2496,99066
typedef union ii_ibda0_u 2508,99629
	u64 ii_ibda0_regval;2509,99656
		u64 i_rsvd_1:i_rsvd_12511,99688
		u64 i_addr:i_addr2512,99706
		u64 i_rsvd:i_rsvd2513,99723
	} ii_ibda0_fld_s;2514,99740
} ii_ibda0_u_t;2515,99759
typedef union ii_ibct0_u 2529,100470
	u64 ii_ibct0_regval;2530,100497
		u64 i_zerofill:i_zerofill2532,100529
		u64 i_rsvd_2:i_rsvd_22533,100549
		u64 i_notify:i_notify2534,100567
		u64 i_rsvd_1:i_rsvd_12535,100585
		u64 i_poison:i_poison2536,100603
		u64 i_rsvd:i_rsvd2537,100621
	} ii_ibct0_fld_s;2538,100638
} ii_ibct0_u_t;2539,100657
typedef union ii_ibna0_u 2548,100998
	u64 ii_ibna0_regval;2549,101025
		u64 i_rsvd_1:i_rsvd_12551,101057
		u64 i_addr:i_addr2552,101075
		u64 i_rsvd:i_rsvd2553,101092
	} ii_ibna0_fld_s;2554,101109
} ii_ibna0_u_t;2555,101128
typedef union ii_ibia0_u 2565,101487
	u64 ii_ibia0_regval;2566,101514
		u64 i_rsvd_2:i_rsvd_22568,101546
		u64 i_node_id:i_node_id2569,101564
		u64 i_rsvd_1:i_rsvd_12570,101584
		u64 i_level:i_level2571,101602
		u64 i_rsvd:i_rsvd2572,101619
	} ii_ibia0_fld_s;2573,101636
} ii_ibia0_u_t;2574,101655
typedef union ii_ibls1_u 2591,102588
	u64 ii_ibls1_regval;2592,102615
		u64 i_length:i_length2594,102647
		u64 i_error:i_error2595,102666
		u64 i_rsvd_1:i_rsvd_12596,102683
		u64 i_busy:i_busy2597,102701
		u64 i_rsvd:i_rsvd2598,102717
	} ii_ibls1_fld_s;2599,102734
} ii_ibls1_u_t;2600,102753
typedef union ii_ibsa1_u 2612,103316
	u64 ii_ibsa1_regval;2613,103343
		u64 i_rsvd_1:i_rsvd_12615,103375
		u64 i_addr:i_addr2616,103393
		u64 i_rsvd:i_rsvd2617,103410
	} ii_ibsa1_fld_s;2618,103427
} ii_ibsa1_u_t;2619,103446
typedef union ii_ibda1_u 2631,104009
	u64 ii_ibda1_regval;2632,104036
		u64 i_rsvd_1:i_rsvd_12634,104068
		u64 i_addr:i_addr2635,104086
		u64 i_rsvd:i_rsvd2636,104103
	} ii_ibda1_fld_s;2637,104120
} ii_ibda1_u_t;2638,104139
typedef union ii_ibct1_u 2652,104850
	u64 ii_ibct1_regval;2653,104877
		u64 i_zerofill:i_zerofill2655,104909
		u64 i_rsvd_2:i_rsvd_22656,104929
		u64 i_notify:i_notify2657,104947
		u64 i_rsvd_1:i_rsvd_12658,104965
		u64 i_poison:i_poison2659,104983
		u64 i_rsvd:i_rsvd2660,105001
	} ii_ibct1_fld_s;2661,105018
} ii_ibct1_u_t;2662,105037
typedef union ii_ibna1_u 2671,105378
	u64 ii_ibna1_regval;2672,105405
		u64 i_rsvd_1:i_rsvd_12674,105437
		u64 i_addr:i_addr2675,105455
		u64 i_rsvd:i_rsvd2676,105472
	} ii_ibna1_fld_s;2677,105489
} ii_ibna1_u_t;2678,105508
typedef union ii_ibia1_u 2688,105867
	u64 ii_ibia1_regval;2689,105894
		u64 i_pi_id:i_pi_id2691,105926
		u64 i_node_id:i_node_id2692,105943
		u64 i_rsvd_1:i_rsvd_12693,105962
		u64 i_level:i_level2694,105980
		u64 i_rsvd:i_rsvd2695,105997
	} ii_ibia1_fld_s;2696,106014
} ii_ibia1_u_t;2697,106033
typedef union ii_ipcr_u 2714,106966
	u64 ii_ipcr_regval;2715,106992
		u64 i_ippr0_c:i_ippr0_c2717,107023
		u64 i_ippr1_c:i_ippr1_c2718,107042
		u64 i_icct:i_icct2719,107061
		u64 i_rsvd:i_rsvd2720,107077
	} ii_ipcr_fld_s;2721,107094
} ii_ipcr_u_t;2722,107112
typedef union ii_ippr_u 2730,107317
	u64 ii_ippr_regval;2731,107343
		u64 i_ippr0:i_ippr02733,107374
		u64 i_ippr1:i_ippr12734,107392
	} ii_ippr_fld_s;2735,107410
} ii_ippr_u_t;2736,107428
#define IIO_WIDGET 2821,110257
#define IIO_WIDGET_STAT 2822,110326
#define IIO_WIDGET_CTRL 2823,110397
#define IIO_PROTECT 2824,110468
#define IIO_PROTECT_OVRRD 2825,110540
#define IIO_OUTWIDGET_ACCESS 2826,110608
#define IIO_INWIDGET_ACCESS 2827,110678
#define IIO_INDEV_ERR_MASK 2828,110747
#define IIO_LLP_CSR 2829,110821
#define IIO_LLP_LOG 2830,110892
#define IIO_XTALKCC_TOUT 2831,110947
#define IIO_XTALKTT_TOUT 2832,111021
#define IIO_IO_ERR_CLR 2833,111087
#define IIO_IGFX_0 2834,111150
#define IIO_IGFX_1 2835,111181
#define IIO_IBCT_0	2836,111212
#define IIO_IBCT_1	2837,111242
#define IIO_IBLS_0	2838,111272
#define IIO_IBLS_1	2839,111302
#define IIO_IBSA_0	2840,111332
#define IIO_IBSA_1	2841,111362
#define IIO_IBDA_0	2842,111392
#define IIO_IBDA_1	2843,111422
#define IIO_IBNA_0	2844,111452
#define IIO_IBNA_1	2845,111482
#define IIO_IBIA_0	2846,111512
#define IIO_IBIA_1	2847,111542
#define IIO_IOPRB_0	2848,111572
#define IIO_PRTE_A(2850,111604
#define IIO_PRTE_B(2851,111656
#define IIO_NUM_PRTES	2852,111708
#define IIO_WIDPRTE_A(2853,111773
#define IIO_WIDPRTE_B(2854,111852
#define IIO_NUM_IPRBS 2856,111932
#define IIO_LLP_CSR_IS_UP	2858,111959
#define IIO_LLP_CSR_LLP_STAT_MASK 2859,111997
#define IIO_LLP_CSR_LLP_STAT_SHFT 2860,112048
#define IIO_LLP_CB_MAX 2862,112092
#define IIO_LLP_SN_MAX 2863,112166
#define IIO_PROTECT_OVRRD_KEY 2866,112278
#define IIO_BTE_STAT_0 2869,112375
#define IIO_BTE_SRC_0 2870,112449
#define IIO_BTE_DEST_0 2871,112525
#define IIO_BTE_CTRL_0 2872,112599
#define IIO_BTE_NOTIFY_0 2873,112677
#define IIO_BTE_INT_0 2874,112750
#define IIO_BTE_OFF_0 2875,112820
#define IIO_BTE_OFF_1 2876,112889
#define BTEOFF_STAT 2879,113010
#define BTEOFF_SRC 2880,113044
#define BTEOFF_DEST 2881,113102
#define BTEOFF_CTRL 2882,113161
#define BTEOFF_NOTIFY 2883,113220
#define BTEOFF_INT 2884,113281
#define IIO_BASE_BTE0 2887,113371
#define IIO_BASE_BTE1 2888,113406
#define IIO_IOPRB(2896,113612
#define IIO_IGFX_W_NUM_BITS	2901,113808
#define IIO_IGFX_W_NUM_MASK	2902,113869
#define IIO_IGFX_W_NUM_SHIFT	2903,113926
#define IIO_IGFX_PI_NUM_BITS	2904,113957
#define IIO_IGFX_PI_NUM_MASK	2905,114015
#define IIO_IGFX_PI_NUM_SHIFT	2906,114074
#define IIO_IGFX_N_NUM_BITS	2907,114106
#define IIO_IGFX_N_NUM_MASK	2908,114165
#define IIO_IGFX_N_NUM_SHIFT	2909,114222
#define IIO_IGFX_P_NUM_BITS	2910,114253
#define IIO_IGFX_P_NUM_MASK	2911,114317
#define IIO_IGFX_P_NUM_SHIFT	2912,114374
#define IIO_IGFX_INIT(2913,114406
#define IIO_SCRATCH_REG0 2920,114759
#define IIO_SCRATCH_REG1 2921,114801
#define IIO_SCRATCH_MASK 2922,114843
#define IIO_SCRATCH_BIT0_0 2924,114897
#define IIO_SCRATCH_BIT0_1 2925,114950
#define IIO_SCRATCH_BIT0_2 2926,115003
#define IIO_SCRATCH_BIT0_3 2927,115056
#define IIO_SCRATCH_BIT0_4 2928,115109
#define IIO_SCRATCH_BIT0_5 2929,115162
#define IIO_SCRATCH_BIT0_6 2930,115215
#define IIO_SCRATCH_BIT0_7 2931,115268
#define IIO_SCRATCH_BIT0_8 2932,115321
#define IIO_SCRATCH_BIT0_9 2933,115374
#define IIO_SCRATCH_BIT0_A 2934,115427
#define IIO_SCRATCH_BIT1_0 2936,115481
#define IIO_SCRATCH_BIT1_1 2937,115534
#define IIO_NUM_ITTES 2939,115622
#define IIO_IMEM_W0ESD 2944,115750
#define IIO_IMEM_B0ESD	2945,115818
#define IIO_IMEM_B1ESD	2946,115887
#define HUB_NUM_BIG_WINDOW	2953,116119
#define SWIN0_BIGWIN 2958,116242
#define ILCSR_WARM_RESET 2960,116294
#define IIO_NUM_CRBS 2967,116483
#define IIO_NUM_PC_CRBS 2968,116539
#define IIO_ICRB_OFFSET 2969,116608
#define IIO_ICRB_0 2970,116642
#define IIO_ICRB_ADDR_SHFT	2971,116686
#define IIO_ICRB_A(2976,116823
#define IIO_ICRB_B(2977,116897
#define IIO_ICRB_C(2978,116972
#define IIO_ICRB_D(2979,117047
#define IIO_ICRB_E(2980,117122
#define TNUM_TO_WIDGET_DEV(2982,117198
#define IIO_ICRB_ECODE_DERR 2987,117282
#define IIO_ICRB_ECODE_PERR 2988,117356
#define IIO_ICRB_ECODE_WERR 2989,117422
#define IIO_ICRB_ECODE_AERR 2991,117527
#define IIO_ICRB_ECODE_PWERR 2992,117601
#define IIO_ICRB_ECODE_PRERR 2993,117664
#define IIO_ICRB_ECODE_TOUT 2994,117727
#define IIO_ICRB_ECODE_XTERR 2995,117799
#define IIO_ICRB_IMSGT_XTALK 3000,117909
#define IIO_ICRB_IMSGT_BTE 3001,117978
#define IIO_ICRB_IMSGT_SN1NET 3002,118047
#define IIO_ICRB_IMSGT_CRB 3003,118117
#define IIO_ICRB_INIT_XTALK 3008,118227
#define IIO_ICRB_INIT_BTE0 3009,118296
#define IIO_ICRB_INIT_SN1NET 3010,118367
#define IIO_ICRB_INIT_CRB 3011,118438
#define IIO_ICRB_INIT_BTE1 3012,118509
#define		   HUBII_XBOW_CREDIT 3020,118756
#define		   HUBII_XBOW_REV2_CREDIT 3021,118794
#define HUB_CREDIT 3027,118950
#define IIO_PRB_MULTI_ERR	3032,119002
#define IIO_PRB_SPUR_RD	3033,119040
#define IIO_PRB_SPUR_WR	3034,119077
#define IIO_PRB_RD_TO	3035,119114
#define IIO_PRB_ERROR	3036,119149
#define IIO_ICMR_CRB_VLD_SHFT 3051,119580
#define IIO_ICMR_CRB_VLD_MASK	3052,119615
#define IIO_ICMR_FC_CNT_SHFT 3054,119682
#define IIO_ICMR_FC_CNT_MASK	3055,119717
#define IIO_ICMR_C_CNT_SHFT 3057,119777
#define IIO_ICMR_C_CNT_MASK	3058,119811
#define IIO_ICMR_PRECISE	3060,119869
#define IIO_ICMR_CLR_RPPD	3061,119906
#define IIO_ICMR_CLR_RQPD	3062,119944
#define IIO_IPDR_PND 3068,120105
#define IIO_ICDR_PND 3073,120204
#define IBLS_BUSY	3078,120313
#define IBLS_ERROR_SHFT	3079,120346
#define IBLS_ERROR	3080,120374
#define IBLS_LENGTH_MASK	3081,120421
#define IBCT_POISON	3086,120536
#define IBCT_NOTIFY	3087,120570
#define IBCT_ZFIL_MODE	3088,120604
#define IIEPH1_VALID	3093,120709
#define IIEPH1_OVERRUN	3094,120743
#define IIEPH1_ERR_TYPE_SHFT	3095,120779
#define IIEPH1_ERR_TYPE_MASK	3096,120811
#define IIEPH1_SOURCE_SHFT	3097,120844
#define IIEPH1_SOURCE_MASK	3098,120874
#define IIEPH1_SUPPL_SHFT	3099,120904
#define IIEPH1_SUPPL_MASK	3100,120932
#define IIEPH1_CMD_SHFT	3101,120961
#define IIEPH1_CMD_MASK	3102,120988
#define IIEPH2_TAIL	3104,121016
#define IIEPH2_ADDRESS_SHFT	3105,121049
#define IIEPH2_ADDRESS_MASK	3106,121079
#define IIEPH1_ERR_SHORT_REQ	3108,121111
#define IIEPH1_ERR_SHORT_REPLY	3109,121142
#define IIEPH1_ERR_LONG_REQ	3110,121175
#define IIEPH1_ERR_LONG_REPLY	3111,121205
#define IECLR_PI1_FWD_INT	3116,121294
#define IECLR_PI0_FWD_INT	3117,121369
#define IECLR_SPUR_RD_HDR	3118,121444
#define IECLR_BTE1	3119,121516
#define IECLR_BTE0	3120,121572
#define IECLR_CRAZY	3121,121628
#define IECLR_PRB_F	3122,121696
#define IECLR_PRB_E	3123,121762
#define IECLR_PRB_D	3124,121828
#define IECLR_PRB_C	3125,121894
#define IECLR_PRB_B	3126,121960
#define IECLR_PRB_A	3127,122026
#define IECLR_PRB_9	3128,122092
#define IECLR_PRB_8	3129,122157
#define IECLR_PRB_0	3130,122222
#define	IIO_ICCR_PENDING	3135,122341
#define	IIO_ICCR_CMD_MASK	3136,122374
#define	IIO_ICCR_CMD_SHFT	3137,122405
#define	IIO_ICCR_CMD_NOP	3138,122433
#define	IIO_ICCR_CMD_WAKE	3139,122474
#define	IIO_ICCR_CMD_TIMEOUT	3140,122545
#define	IIO_ICCR_CMD_EJECT	3141,122618
#define	IIO_ICCR_CMD_FLUSH	3144,122716
typedef ii_icrb0_a_u_t icrba_t;3175,123826
#define a_sidn	3176,123858
#define a_tnum	3177,123899
#define a_addr 3178,123940
#define a_valid 3179,123989
#define a_iow 3180,124037
#define a_regvalue	3181,124085
typedef ii_icrb0_b_u_t icrbb_t;3183,124123
#define b_use_old 3184,124155
#define b_imsgtype 3185,124207
#define b_imsg 3186,124260
#define b_initiator 3187,124309
#define b_exc 3188,124358
#define b_ackcnt 3189,124406
#define b_resp 3190,124458
#define b_ack 3191,124507
#define b_hold 3192,124555
#define b_wb 3193,124604
#define b_intvn 3194,124651
#define b_stall_ib 3195,124701
#define b_stall_int 3196,124754
#define b_stall_bte_0 3197,124810
#define b_stall_bte_1 3198,124867
#define b_error 3199,124924
#define b_ecode 3200,124974
#define b_lnetuce 3201,125026
#define b_mark 3202,125077
#define b_xerr 3203,125126
#define b_regvalue	3204,125177
typedef ii_icrb0_c_u_t icrbc_t;3206,125215
#define c_suppl 3207,125247
#define c_barrop 3208,125297
#define c_doresp 3209,125344
#define c_gbr 3210,125396
#define c_btenum 3211,125444
#define c_cohtrans 3212,125496
#define c_xtsize 3213,125543
#define c_source 3214,125592
#define c_regvalue	3215,125643
typedef ii_icrb0_d_u_t icrbd_t;3217,125681
#define d_sleep 3218,125713
#define d_pricnt 3219,125763
#define d_pripsc 3220,125814
#define d_bteop 3221,125865
#define d_bteaddr 3222,125916
#define d_benable 3223,125997
#define d_regvalue	3224,126078
typedef ii_icrb0_e_u_t icrbe_t;3226,126116
#define icrbe_ctxtvld 3227,126148
#define icrbe_toutvld 3228,126197
#define icrbe_context 3229,126246
#define icrbe_timeout 3230,126298
#define e_regvalue	3231,126350
#define HUB_NUM_WIDGET 3234,126430
#define HUB_WIDGET_ID_MIN 3235,126464
#define HUB_WIDGET_ID_MAX 3236,126500
#define HUB_WIDGET_PART_NUM 3238,126537
#define MAX_HUBS_PER_XBOW 3239,126576
#define iprb_t 3242,126665
#define iprb_regval 3243,126702
#define iprb_mult_err	3244,126742
#define iprb_spur_rd	3245,126790
#define iprb_spur_wr	3246,126836
#define iprb_rd_to	3247,126882
#define iprb_ovflow 3248,126924
#define iprb_error 3249,126972
#define iprb_ff 3250,127019
#define iprb_mode 3251,127062
#define iprb_bnakctr 3252,127105
#define iprb_anakctr 3253,127149
#define iprb_xtalkctr 3254,127193
#define LNK_STAT_WORKING 3256,127237
#define IIO_WSTAT_ECRAZY	3258,127296
#define IIO_WSTAT_TXRETRY	3259,127355
#define IIO_WSTAT_TXRETRY_MASK 3260,127420
#define IIO_WSTAT_TXRETRY_SHFT 3261,127481
#define IIO_WSTAT_TXRETRY_CNT(3262,127516
#define IO_PERF_SETS	3267,127699
#define IIO_IIWA_WIDGET(3270,127776
#define IIO_IOWA_WIDGET(3272,127877
#define IIO_IIDEM_WIDGETDEV_MASK(3278,128080
#define IIO_IIDSR_SENT_SHIFT 3281,128199
#define IIO_IIDSR_SENT_MASK 3282,128234
#define IIO_IIDSR_ENB_SHIFT 3283,128277
#define IIO_IIDSR_ENB_MASK 3284,128312
#define IIO_IIDSR_NODE_SHIFT 3285,128355
#define IIO_IIDSR_NODE_MASK 3286,128389
#define IIO_IIDSR_PI_ID_SHIFT 3287,128432
#define IIO_IIDSR_PI_ID_MASK 3288,128466
#define IIO_IIDSR_LVL_SHIFT 3289,128509
#define IIO_IIDSR_LVL_MASK 3290,128543
#define IXTT_RRSP_TO_SHFT	3293,128638
#define IXTT_RRSP_TO_MASK	3294,128695
#define IXTT_RRSP_PS_SHFT	3295,128752
#define IXTT_RRSP_PS_MASK	3296,128815
#define IXTT_TAIL_TO_SHFT	3297,128876
#define IXTT_TAIL_TO_MASK	3298,128941
typedef union hubii_wcr_u 3304,129078
	u64 wcr_reg_value;3305,129106
		u64 wcr_widget_id:wcr_widget_id3307,129136
		 wcr_tag_mode:wcr_tag_mode3308,129185
		 wcr_rsvd1:wcr_rsvd13309,129219
		 wcr_xbar_crd:wcr_xbar_crd3310,129250
		 wcr_f_bad_pkt:wcr_f_bad_pkt3311,129295
		 wcr_dir_con:wcr_dir_con3312,129346
		 wcr_e_thresh:wcr_e_thresh3313,129392
		 wcr_rsvd:wcr_rsvd3314,129438
	} wcr_fields_s;3315,129467
} hubii_wcr_t;3316,129484
#define iwcr_dir_con 3318,129500
typedef union io_perf_sel 3326,129721
	u64 perf_sel_reg;3327,129749
		u64 perf_ippr0:perf_ippr03329,129778
		u64 perf_ippr0:4, perf_ippr1:perf_ippr13329,129778
		u64 perf_ippr0:4, perf_ippr1:4, perf_icct:perf_icct3329,129778
		u64 perf_ippr0:4, perf_ippr1:4, perf_icct:8, perf_rsvd:perf_rsvd3329,129778
	} perf_sel_bits;3330,129839
} io_perf_sel_t;3331,129857
typedef union io_perf_cnt 3336,130007
	u64 perf_cnt;3337,130035
		u64 perf_cnt:perf_cnt3339,130060
		u64 perf_cnt:20, perf_rsvd2:perf_rsvd23339,130060
		u64 perf_cnt:20, perf_rsvd2:12, perf_rsvd1:perf_rsvd13339,130060
	} perf_cnt_bits;3340,130109
} io_perf_cnt_t;3342,130128
typedef union iprte_a 3344,130146
	u64 entry;3345,130170
		u64 i_rsvd_1:i_rsvd_13347,130192
		u64 i_addr:i_addr3348,130210
		u64 i_init:i_init3349,130227
		u64 i_source:i_source3350,130243
		u64 i_rsvd:i_rsvd3351,130261
		u64 i_widget:i_widget3352,130277
		u64 i_to_cnt:i_to_cnt3353,130295
		u64 i_vld:i_vld3354,130313
	} iprte_fields;3355,130328
} iprte_a_t;3356,130345

xen/include/asm-ia64/linux/asm/sn/xwidgetdev.h,1362
#define _ASM_IA64_SN_XTALK_XWIDGET_H9,301
#define WIDGET_REV_NUM 12,355
#define WIDGET_PART_NUM 13,406
#define WIDGET_MFG_NUM 14,457
#define WIDGET_REV_NUM_SHFT 15,508
#define WIDGET_PART_NUM_SHFT 16,551
#define WIDGET_MFG_NUM_SHFT 17,594
#define XWIDGET_PART_NUM(19,637
#define XWIDGET_REV_NUM(20,729
#define XWIDGET_MFG_NUM(21,818
#define XWIDGET_PART_REV_NUM(22,907
#define XWIDGET_PART_REV_NUM_REV(24,1052
struct widget_cfg{widget_cfg27,1148
	u32	w_id;28,1167
	u32	w_pad_0;29,1189
	u32	w_status;30,1214
	u32	w_pad_1;31,1240
	u32	w_err_upper_addr;32,1265
	u32	w_pad_2;33,1299
	u32	w_err_lower_addr;34,1324
	u32	w_pad_3;35,1358
	u32	w_control;36,1383
	u32	w_pad_4;37,1410
	u32	w_req_timeout;38,1435
	u32	w_pad_5;39,1466
	u32	w_intdest_upper_addr;40,1491
	u32	w_pad_6;41,1529
	u32	w_intdest_lower_addr;42,1554
	u32	w_pad_7;43,1592
	u32	w_err_cmd_word;44,1617
	u32	w_pad_8;45,1649
	u32	w_llp_cfg;46,1674
	u32	w_pad_9;47,1701
	u32	w_tflush;48,1726
	u32	w_pad_10;49,1752
struct xwidget_hwid{xwidget_hwid55,1868
	int		mfg_num;56,1889
	int		rev_num;57,1904
	int		part_num;58,1919
struct xwidget_info{xwidget_info61,1939
	struct xwidget_hwid	xwi_hwid;63,1961
	char			xwi_masterxid;64,2020
	void			*xwi_hubinfo;xwi_hubinfo65,2074
	u64			*xwi_hub_provider;xwi_hub_provider66,2134
	void			*xwi_vertex;xwi_vertex67,2190

xen/include/asm-ia64/linux/asm/sn/tiocp.h,5091
#define _ASM_IA64_SN_PCI_TIOCP_H9,287
#define TIOCP_HOST_INTR_ADDR 11,321
#define TIOCP_PCI64_CMDTYPE_MEM 12,382
#define TIOCP_PCI64_CMDTYPE_MSI 13,437
struct tiocp{tiocp20,735
    u64		cp_id;25,865
    u64		cp_stat;26,899
    u64		cp_err_upper;27,934
    u64		cp_err_lower;28,974
    #define cp_err 29,1014
    u64		cp_control;30,1046
    u64		cp_req_timeout;31,1084
    u64		cp_intr_upper;32,1126
    u64		cp_intr_lower;33,1167
    #define cp_intr 34,1208
    u64		cp_err_cmdword;35,1242
    u64		_pad_000048;36,1284
    u64		cp_tflush;37,1323
    u64		cp_aux_err;40,1422
    u64		cp_resp_upper;41,1460
    u64		cp_resp_lower;42,1501
    #define cp_resp 43,1542
    u64		cp_tst_pin_ctrl;44,1576
    u64		cp_addr_lkerr;45,1618
    u64		cp_dir_map;48,1701
    u64		_pad_000088;49,1739
    u64		cp_map_fault;52,1816
    u64		_pad_000098;53,1856
    u64		cp_arb;56,1939
    u64		_pad_0000A8;57,1974
    u64		cp_ate_parity_err;60,2081
    u64		_pad_0000B8;61,2125
    u64		cp_bus_timeout;64,2204
    u64		cp_pci_cfg;65,2246
    u64		cp_pci_err_upper;66,2284
    u64		cp_pci_err_lower;67,2327
    #define cp_pci_err 68,2370
    u64		_pad_0000E0[_pad_0000E069,2410
    u64		cp_int_status;72,2500
    u64		cp_int_enable;73,2541
    u64		cp_int_rst_stat;74,2582
    u64		cp_int_mode;75,2624
    u64		cp_int_device;76,2663
    u64		cp_int_host_err;77,2704
    u64		cp_int_addr[cp_int_addr78,2746
    u64		cp_err_int_view;79,2795
    u64		cp_mult_int;80,2837
    u64		cp_force_always[cp_force_always81,2876
    u64		cp_force_pin[cp_force_pin82,2928
    u64		cp_device[cp_device85,3016
    u64		_pad_000220[_pad_00022086,3063
    u64		cp_wr_req_buf[cp_wr_req_buf87,3112
    u64		_pad_000260[_pad_00026088,3162
    u64		cp_rrb_map[cp_rrb_map89,3211
    #define cp_even_resp 90,3259
    #define cp_odd_resp 91,3315
    u64		cp_resp_status;92,3371
    u64		cp_resp_clear;93,3413
    u64		_pad_0002A0[_pad_0002A095,3455
	u64	upper;99,3579
	u64	lower;100,3616
    } cp_buf_addr_match[cp_buf_addr_match101,3653
	u64	flush_w_touch;105,3769
	u64	flush_wo_touch;106,3814
	u64	inflight;107,3860
	u64	prefetch;108,3900
	u64	total_pci_retry;109,3940
	u64	max_pci_retry;110,3986
	u64	max_latency;111,4031
	u64	clear_all;112,4074
    } cp_buf_count[cp_buf_count113,4115
    u64		cp_pcix_bus_err_addr;117,4187
    u64		cp_pcix_bus_err_attr;118,4234
    u64		cp_pcix_bus_err_data;119,4281
    u64		cp_pcix_pio_split_addr;120,4328
    u64		cp_pcix_pio_split_attr;121,4377
    u64		cp_pcix_dma_req_err_attr;122,4426
    u64		cp_pcix_dma_req_err_addr;123,4476
    u64		cp_pcix_timeout;124,4526
    u64		_pad_000640[_pad_000640126,4569
    u64		cp_ct_debug_ctl;129,4667
    u64		cp_br_debug_ctl;130,4709
    u64		cp_mux3_debug_ctl;131,4751
    u64		cp_mux4_debug_ctl;132,4795
    u64		cp_mux5_debug_ctl;133,4839
    u64		cp_mux6_debug_ctl;134,4883
    u64		cp_mux7_debug_ctl;135,4927
    u64		_pad_000738[_pad_000738137,4972
	u64	cp_buf_addr;141,5091
	u64	cp_buf_attr;142,5134
    } cp_pcix_read_buf_64[cp_pcix_read_buf_64143,5177
	u64	cp_buf_addr;146,5222
	u64	cp_buf_attr;147,5265
	u64	cp_buf_valid;148,5308
	u64	__pad1;149,5352
    } cp_pcix_write_buf_64[cp_pcix_write_buf_64150,5391
    char	_pad_000c00[_pad_000c00154,5487
    u64		cp_int_ate_ram[cp_int_ate_ram157,5604
    char	_pad_012000[_pad_012000159,5661
    u64		cp_int_ate_ram_mp[cp_int_ate_ram_mp162,5779
    char	_pad_016000[_pad_016000164,5838
    u64		cp_wr_req_lower[cp_wr_req_lower167,5934
    u64		cp_wr_req_upper[cp_wr_req_upper168,5990
    u64		cp_wr_req_parity[cp_wr_req_parity169,6046
    char	_pad_019800[_pad_019800171,6104
    u64		cp_rd_resp_lower[cp_rd_resp_lower174,6200
    u64		cp_rd_resp_upper[cp_rd_resp_upper175,6257
    u64		cp_rd_resp_parity[cp_rd_resp_parity176,6314
    char	_pad_01F000[_pad_01F000178,6373
    char	_pad_020000[_pad_020000181,6496
	u8	c[c185,6614
	u16	s[s186,6659
	u32	l[l187,6705
	u64	d[d188,6751
	    u8	c[c190,6806
	    u16	s[s191,6828
	    u32	l[l192,6851
	    u64	d[d193,6874
	} f[f194,6897
    } cp_type0_cfg_dev[cp_type0_cfg_dev195,6906
	u8	c[c199,7035
	u16	s[s200,7080
	u32	l[l201,7126
	u64	d[d202,7172
	    u8	c[c204,7227
	    u16	s[s205,7249
	    u32	l[l206,7272
	    u64	d[d207,7295
	} f[f208,7318
    } cp_type1_cfg;209,7327
    char		_pad_029000[_pad_029000211,7376
	u8	c[c215,7494
	u16	s[s216,7508
	u32	l[l217,7523
	u64	d[d218,7538
    } cp_pci_iack;219,7553
    char		_pad_030007[_pad_030007221,7601
	u8	c[c225,7706
	u16	s[s226,7720
	u32	l[l227,7735
	u64	d[d228,7750
    } cp_pcix_cycle;229,7765
    char		_pad_040007[_pad_040007231,7815
	u8	c[c235,7923
	u16	s[s236,7944
	u32	l[l237,7966
	u64	d[d238,7988
    } cp_devio_raw[cp_devio_raw239,8010
    #define cp_devio(241,8062
    char		_pad_800000[_pad_800000243,8122
	u8	c[c247,8239
	u16	s[s248,8260
	u32	l[l249,8282
	u64	d[d250,8304
    } cp_devio_raw_flush[cp_devio_raw_flush251,8326
    #define cp_devio_flush(253,8383

xen/include/asm-ia64/linux/asm/sn/sn_sal.h,6140
#define _ASM_IA64_SN_SN_SAL_H2,30
#define  SN_SAL_POD_MODE 23,549
#define  SN_SAL_SYSTEM_RESET 24,611
#define  SN_SAL_PROBE 25,673
#define  SN_SAL_GET_MASTER_NASID 26,735
#define	 SN_SAL_GET_KLCONFIG_ADDR	27,797
#define  SN_SAL_LOG_CE	28,846
#define  SN_SAL_REGISTER_CE	29,886
#define  SN_SAL_GET_PARTITION_ADDR	30,930
#define  SN_SAL_XP_ADDR_REGION	31,980
#define  SN_SAL_NO_FAULT_ZONE_VIRTUAL	32,1027
#define  SN_SAL_NO_FAULT_ZONE_PHYSICAL	33,1080
#define  SN_SAL_PRINT_ERROR	34,1134
#define  SN_SAL_SET_ERROR_HANDLING_FEATURES	35,1178
#define  SN_SAL_GET_FIT_COMPT	36,1249
#define  SN_SAL_GET_SAPIC_INFO 37,1308
#define  SN_SAL_GET_SN_INFO 38,1370
#define  SN_SAL_CONSOLE_PUTC 39,1432
#define  SN_SAL_CONSOLE_GETC 40,1494
#define  SN_SAL_CONSOLE_PUTS 41,1556
#define  SN_SAL_CONSOLE_GETS 42,1618
#define  SN_SAL_CONSOLE_GETS_TIMEOUT 43,1680
#define  SN_SAL_CONSOLE_POLL 44,1742
#define  SN_SAL_CONSOLE_INTR 45,1804
#define  SN_SAL_CONSOLE_PUTB	46,1866
#define  SN_SAL_CONSOLE_XMIT_CHARS	47,1911
#define  SN_SAL_CONSOLE_READC	48,1961
#define  SN_SAL_SYSCTL_OP	49,2007
#define  SN_SAL_SYSCTL_MODID_GET	50,2049
#define  SN_SAL_SYSCTL_GET 51,2104
#define  SN_SAL_SYSCTL_IOBRICK_MODULE_GET 52,2166
#define  SN_SAL_SYSCTL_IO_PORTSPEED_GET 53,2228
#define  SN_SAL_SYSCTL_SLAB_GET 54,2290
#define  SN_SAL_BUS_CONFIG	55,2352
#define  SN_SAL_SYS_SERIAL_GET	56,2398
#define  SN_SAL_PARTITION_SERIAL_GET	57,2445
#define  SN_SAL_SYSCTL_PARTITION_GET 58,2497
#define  SN_SAL_SYSTEM_POWER_DOWN	59,2559
#define  SN_SAL_GET_MASTER_BASEIO_NASID	60,2608
#define  SN_SAL_COHERENCE 61,2663
#define  SN_SAL_MEMPROTECT 62,2725
#define  SN_SAL_SYSCTL_FRU_CAPTURE	63,2787
#define  SN_SAL_SYSCTL_IOBRICK_PCI_OP	65,2838
#define	 SN_SAL_IROUTER_OP	66,2904
#define  SN_SAL_SYSCTL_EVENT 67,2947
#define  SN_SAL_IOIF_INTERRUPT	68,3009
#define  SN_SAL_HWPERF_OP	69,3056
#define  SN_SAL_IOIF_ERROR_INTERRUPT	70,3108
#define  SN_SAL_IOIF_PCI_SAFE	71,3160
#define  SN_SAL_IOIF_SLOT_ENABLE	72,3206
#define  SN_SAL_IOIF_SLOT_DISABLE	73,3254
#define  SN_SAL_IOIF_GET_HUBDEV_INFO	74,3303
#define  SN_SAL_IOIF_GET_PCIBUS_INFO	75,3355
#define  SN_SAL_IOIF_GET_PCIDEV_INFO	76,3407
#define  SN_SAL_IOIF_GET_WIDGET_DMAFLUSH_LIST	77,3459
#define  SN_SAL_IOIF_GET_DEVICE_DMAFLUSH_LIST	78,3533
#define SN_SAL_IOIF_INIT	80,3594
#define SN_SAL_HUB_ERROR_INTERRUPT	81,3635
#define SN_SAL_BTE_RECOVER	82,3685
#define SN_SAL_RESERVED_DO_NOT_USE	83,3728
#define SN_SAL_IOIF_GET_PCI_TOPOLOGY	84,3778
#define  SN_SAL_GET_PROM_FEATURE_SET	86,3831
#define  SN_SAL_SET_OS_FEATURE_SET	87,3883
#define  SN_SAL_INJECT_ERROR	88,3933
#define  SN_SAL_SET_CPU_NUMBER	89,3978
#define  SN_SAL_KERNEL_LAUNCH_EVENT	91,4026
#define SAL_CONSOLE_INTR_OFF 99,4173
#define SAL_CONSOLE_INTR_ON 100,4242
#define SAL_CONSOLE_INTR_STATUS 101,4310
#define SAL_CONSOLE_INTR_XMIT	103,4433
#define SAL_CONSOLE_INTR_RECV	104,4488
#define SAL_INTR_ALLOC	107,4568
#define SAL_INTR_FREE	108,4594
#define SAL_SYSCTL_OP_IOBOARD	114,4702
#define SAL_SYSCTL_OP_TIO_JLCK_RST 115,4768
#define SAL_IROUTER_OPEN	120,4911
#define SAL_IROUTER_CLOSE	121,4962
#define SAL_IROUTER_SEND	122,5015
#define SAL_IROUTER_RECV	123,5079
#define SAL_IROUTER_INTR_STATUS	124,5146
#define SAL_IROUTER_INTR_ON	127,5250
#define SAL_IROUTER_INTR_OFF	128,5306
#define SAL_IROUTER_INIT	129,5364
#define SAL_IROUTER_INTR_XMIT	132,5458
#define SAL_IROUTER_INTR_RECV	133,5510
#define SAL_ERR_FEAT_MCA_SLV_TO_OS_INIT_SLV	138,5597
#define SAL_ERR_FEAT_LOG_SBES	139,5657
#define SAL_ERR_FEAT_MFR_OVERRIDE	140,5705
#define SAL_ERR_FEAT_SBE_THRESHOLD	141,5744
#define SALRET_MORE_PASSES	146,5818
#define SALRET_OK	147,5847
#define SALRET_NOT_IMPLEMENTED	148,5868
#define SALRET_INVALID_ARG	149,5904
#define SALRET_ERROR	150,5936
#define SN_SAL_FAKE_PROM	152,5964
sn_sal_rev(164,6327
ia64_sn_get_console_nasid(176,6586
ia64_sn_get_master_baseio_nasid(198,7032
ia64_sn_get_klconfig_addr(216,7403
ia64_sn_console_getc(232,7757
ia64_sn_console_readc(254,8249
ia64_sn_console_putc(272,8591
ia64_sn_console_putb(289,8913
ia64_sn_plat_specific_err_print(309,9300
ia64_sn_plat_cpei_handler(326,9664
ia64_sn_plat_set_error_handling_features(343,9976
ia64_sn_console_check(362,10338
ia64_sn_console_intr_status(382,10708
ia64_sn_console_intr_enable(405,11112
ia64_sn_console_intr_disable(422,11447
ia64_sn_console_xmit_chars(439,11791
ia64_sn_sysctl_iobrick_module_get(462,12186
ia64_sn_pod_mode(486,12774
ia64_sn_probe_mem(514,13609
ia64_sn_sys_serial_get(545,14162
sn_system_serial_number(556,14444
ia64_sn_partition_serial_get(571,14851
sn_partition_serial_number_val(582,15107
ia64_sn_sysctl_partition_get(594,15460
sn_partition_reserved_page_pa(621,16415
sn_register_xp_addr_region(648,17376
sn_register_nofault_code(666,18026
sn_change_coherence(695,18998
sn_change_memprotect(709,19462
#define SN_MEMPROT_ACCESS_CLASS_0	717,19705
#define SN_MEMPROT_ACCESS_CLASS_1	718,19749
#define SN_MEMPROT_ACCESS_CLASS_2	719,19793
#define SN_MEMPROT_ACCESS_CLASS_3	720,19837
#define SN_MEMPROT_ACCESS_CLASS_6	721,19881
#define SN_MEMPROT_ACCESS_CLASS_7	722,19925
ia64_sn_power_down(728,20023
ia64_sn_fru_capture(744,20442
ia64_sn_sysctl_iobrick_pci_op(758,20765
ia64_sn_irtr_open(778,21308
ia64_sn_irtr_close(790,21586
ia64_sn_irtr_recv(807,22206
ia64_sn_irtr_send(825,22822
ia64_sn_irtr_intr(841,23328
ia64_sn_irtr_intr_enable(854,23680
ia64_sn_irtr_intr_disable(867,24049
ia64_sn_sysctl_event_init(880,24399
ia64_sn_sysctl_tio_clock_reset(893,24735
ia64_sn_sysctl_ioboard_get(910,25085
ia64_sn_get_fit_compt(946,26144
ia64_sn_irtr_init(963,26689
ia64_sn_get_sapic_info(983,27130
ia64_sn_get_sn_info(1030,28443
#define SH_SHUB_ID_NODES_PER_BIT_MASK 1044,28945
#define SH_SHUB_ID_NODES_PER_BIT_SHFT 1045,29004
ia64_sn_hwperf_op(1079,30238
ia64_sn_ioif_get_pci_topology(1091,30538
ia64_sn_bte_recovery(1102,30790
ia64_sn_is_fake_prom(1114,31045
ia64_sn_get_prom_feature_set(1122,31210
ia64_sn_set_os_feature(1134,31477
sn_inject_error(1143,31660
ia64_sn_set_cpu_number(1153,31896
ia64_sn_kernel_launch_event(1161,32066

xen/include/asm-ia64/linux/asm/sn/module.h,1714
#define _ASM_IA64_SN_MODULE_H9,297
#define MODULE_FORMAT_BRIEF	12,367
#define MODULE_FORMAT_LONG	13,397
#define MODULE_FORMAT_LCD	14,426
#define MODULE_BTYPE_MASK	28,713
#define MODULE_BTYPE_SHFT	29,746
#define MODULE_GET_BTYPE(30,774
#define MODULE_BT_TO_CHAR(31,853
#define MODULE_GET_BTCHAR(32,896
#define MODULE_RACK_MASK	37,1011
#define MODULE_RACK_SHFT	38,1047
#define MODULE_GET_RACK(39,1075
#define MODULE_BPOS_MASK	44,1200
#define MODULE_BPOS_SHFT	45,1232
#define MODULE_GET_BPOS(46,1259
#define RACK_CLASS_DVDR 56,1575
#define RACK_GROUP_DVDR 57,1611
#define RACK_NUM_DVDR 58,1646
#define RACK_CREATE_RACKID(60,1681
#define RACK_GET_CLASS(63,1811
#define RACK_GET_GROUP(64,1876
#define RACK_GET_NUM(66,1998
#define RACK_GROUP_BITS(77,2431
#define RACK_NUM_BITS(78,2492
#define RACK_CLASS_MASK(80,2554
#define RACK_CLASS_SHFT(81,2591
#define RACK_ADD_CLASS(82,2625
#define RACK_GROUP_SHFT(85,2728
#define RACK_GROUP_MASK(86,2778
#define RACK_ADD_GROUP(88,2888
#define RACK_NUM_SHFT(91,2991
#define RACK_NUM_MASK(92,3025
#define RACK_ADD_NUM(94,3131
#define MAX_BRICK_TYPES 101,3270
#define MODULE_CBRICK 105,3371
#define MODULE_RBRICK 106,3405
#define MODULE_IBRICK 107,3439
#define MODULE_KBRICK 108,3473
#define MODULE_XBRICK 109,3507
#define MODULE_DBRICK 110,3541
#define MODULE_PBRICK 111,3575
#define MODULE_NBRICK 112,3609
#define MODULE_PEBRICK 113,3643
#define MODULE_PXBRICK 114,3677
#define MODULE_IXBRICK 115,3711
#define MODULE_CGBRICK	116,3746
#define MODULE_OPUSBRICK 117,3773
#define MODULE_SABRICK	118,3808
#define MODULE_IABRICK	119,3859
#define MODULE_PABRICK	120,3886
#define MODULE_GABRICK	121,3913
#define MODULE_OPUS_TIO	122,3940

xen/include/asm-ia64/linux/asm/sn/shub_mmr.h,7778
#define _ASM_IA64_SN_SHUB_MMR_H11,291
#define SH1_IPI_INT	17,624
#define SH2_IPI_INT	18,682
#define SH_IPI_INT_TYPE_SHFT	22,891
#define SH_IPI_INT_TYPE_MASK	23,925
#define SH_IPI_INT_AGT_SHFT	27,1142
#define SH_IPI_INT_AGT_MASK	28,1175
#define SH_IPI_INT_PID_SHFT 32,1390
#define SH_IPI_INT_PID_MASK	33,1442
#define SH_IPI_INT_BASE_SHFT	37,1658
#define SH_IPI_INT_BASE_MASK 38,1693
#define SH_IPI_INT_IDX_SHFT	42,1911
#define SH_IPI_INT_IDX_MASK	43,1945
#define SH_IPI_INT_SEND_SHFT	47,2161
#define SH_IPI_INT_SEND_MASK	48,2196
#define SH1_EVENT_OCCURRED	54,2563
#define SH1_EVENT_OCCURRED_ALIAS	55,2627
#define SH2_EVENT_OCCURRED	56,2696
#define SH2_EVENT_OCCURRED_ALIAS 57,2760
#define SH1_PI_CAM_CONTROL	63,3131
#define SH1_SHUB_ID	69,3496
#define SH1_SHUB_ID_REVISION_SHFT	70,3554
#define SH1_SHUB_ID_REVISION_MASK	71,3593
#define SH1_RTC	77,3964
#define SH2_RTC	78,4019
#define SH_RTC_MASK	79,4074
#define SH1_PIO_WRITE_STATUS_0	85,4433
#define SH1_PIO_WRITE_STATUS_1	86,4501
#define SH2_PIO_WRITE_STATUS_0	87,4569
#define SH2_PIO_WRITE_STATUS_1	88,4637
#define SH2_PIO_WRITE_STATUS_2	89,4705
#define SH2_PIO_WRITE_STATUS_3	90,4773
#define SH_PIO_WRITE_STATUS_WRITE_DEADLOCK_SHFT	94,4992
#define SH_PIO_WRITE_STATUS_WRITE_DEADLOCK_MASK 95,5043
#define SH_PIO_WRITE_STATUS_PENDING_WRITE_COUNT_SHFT	100,5285
#define SH_PIO_WRITE_STATUS_PENDING_WRITE_COUNT_MASK 101,5341
#define SH1_PIO_WRITE_STATUS_0_ALIAS	107,5663
#define SH2_PIO_WRITE_STATUS_0_ALIAS	108,5736
#define SH_EVENT_OCCURRED_UART_INT_SHFT	116,6260
#define SH_EVENT_OCCURRED_UART_INT_MASK	117,6305
#define SH_EVENT_OCCURRED_IPI_INT_SHFT	121,6532
#define SH_EVENT_OCCURRED_IPI_INT_MASK	122,6576
#define SH_EVENT_OCCURRED_II_INT0_SHFT	126,6802
#define SH_EVENT_OCCURRED_II_INT0_MASK	127,6846
#define SH_EVENT_OCCURRED_II_INT1_SHFT	131,7072
#define SH_EVENT_OCCURRED_II_INT1_MASK	132,7116
#define SH2_EVENT_OCCURRED_EXTIO_INT2_SHFT	136,7342
#define SH2_EVENT_OCCURRED_EXTIO_INT2_MASK 137,7389
#define SH2_EVENT_OCCURRED_EXTIO_INT3_SHFT	141,7619
#define SH2_EVENT_OCCURRED_EXTIO_INT3_MASK 142,7666
#define SH_ALL_INT_MASK 144,7746
#define SH1_REAL_JUNK_BUS_LED0	154,8252
#define SH1_REAL_JUNK_BUS_LED1	155,8299
#define SH1_REAL_JUNK_BUS_LED2	156,8346
#define SH1_REAL_JUNK_BUS_LED3	157,8393
#define SH2_REAL_JUNK_BUS_LED0	159,8441
#define SH2_REAL_JUNK_BUS_LED1	160,8487
#define SH2_REAL_JUNK_BUS_LED2	161,8533
#define SH2_REAL_JUNK_BUS_LED3	162,8579
#define SH1_PTC_0	168,8926
#define SH1_PTC_0_A_SHFT	172,9133
#define SH1_PTC_0_PS_SHFT	176,9314
#define SH1_PTC_0_RID_SHFT	180,9496
#define SH1_PTC_0_START_SHFT	184,9679
#define SH1_PTC_1	190,10015
#define SH1_PTC_1_START_SHFT	194,10222
#define SH2_PTC	200,10558
#define SH2_PTC_A_SHFT	204,10764
#define SH2_PTC_PS_SHFT	208,10944
#define SH2_PTC_RID_SHFT	212,11123
#define SH2_PTC_START_SHFT	216,11304
#define SH2_PTC_ADDR_SHFT	220,11488
#define SH2_PTC_ADDR_MASK	221,11519
#define SH1_RTC1_INT_CONFIG	228,11884
#define SH2_RTC1_INT_CONFIG	229,11949
#define SH_RTC1_INT_CONFIG_MASK	230,12014
#define SH_RTC1_INT_CONFIG_INIT	231,12083
#define SH_RTC1_INT_CONFIG_TYPE_SHFT	235,12303
#define SH_RTC1_INT_CONFIG_TYPE_MASK	236,12344
#define SH_RTC1_INT_CONFIG_AGT_SHFT	240,12568
#define SH_RTC1_INT_CONFIG_AGT_MASK	241,12608
#define SH_RTC1_INT_CONFIG_PID_SHFT	245,12830
#define SH_RTC1_INT_CONFIG_PID_MASK	246,12870
#define SH_RTC1_INT_CONFIG_BASE_SHFT	250,13093
#define SH_RTC1_INT_CONFIG_BASE_MASK	251,13135
#define SH_RTC1_INT_CONFIG_IDX_SHFT	255,13359
#define SH_RTC1_INT_CONFIG_IDX_MASK	256,13400
#define SH1_RTC1_INT_ENABLE	263,13774
#define SH2_RTC1_INT_ENABLE	264,13839
#define SH_RTC1_INT_ENABLE_MASK	265,13904
#define SH_RTC1_INT_ENABLE_INIT	266,13973
#define SH_RTC1_INT_ENABLE_RTC1_ENABLE_SHFT	270,14193
#define SH_RTC1_INT_ENABLE_RTC1_ENABLE_MASK 271,14240
#define SH1_RTC2_INT_CONFIG	279,14629
#define SH2_RTC2_INT_CONFIG	280,14694
#define SH_RTC2_INT_CONFIG_MASK	281,14759
#define SH_RTC2_INT_CONFIG_INIT	282,14828
#define SH_RTC2_INT_CONFIG_TYPE_SHFT	286,15048
#define SH_RTC2_INT_CONFIG_TYPE_MASK	287,15089
#define SH_RTC2_INT_CONFIG_AGT_SHFT	291,15313
#define SH_RTC2_INT_CONFIG_AGT_MASK	292,15353
#define SH_RTC2_INT_CONFIG_PID_SHFT	296,15575
#define SH_RTC2_INT_CONFIG_PID_MASK	297,15615
#define SH_RTC2_INT_CONFIG_BASE_SHFT	301,15838
#define SH_RTC2_INT_CONFIG_BASE_MASK	302,15880
#define SH_RTC2_INT_CONFIG_IDX_SHFT	306,16104
#define SH_RTC2_INT_CONFIG_IDX_MASK	307,16145
#define SH1_RTC2_INT_ENABLE	314,16519
#define SH2_RTC2_INT_ENABLE	315,16584
#define SH_RTC2_INT_ENABLE_MASK	316,16649
#define SH_RTC2_INT_ENABLE_INIT	317,16718
#define SH_RTC2_INT_ENABLE_RTC2_ENABLE_SHFT	321,16938
#define SH_RTC2_INT_ENABLE_RTC2_ENABLE_MASK 322,16985
#define SH1_RTC3_INT_CONFIG	330,17374
#define SH2_RTC3_INT_CONFIG	331,17439
#define SH_RTC3_INT_CONFIG_MASK	332,17504
#define SH_RTC3_INT_CONFIG_INIT	333,17573
#define SH_RTC3_INT_CONFIG_TYPE_SHFT	337,17793
#define SH_RTC3_INT_CONFIG_TYPE_MASK	338,17834
#define SH_RTC3_INT_CONFIG_AGT_SHFT	342,18058
#define SH_RTC3_INT_CONFIG_AGT_MASK	343,18098
#define SH_RTC3_INT_CONFIG_PID_SHFT	347,18320
#define SH_RTC3_INT_CONFIG_PID_MASK	348,18360
#define SH_RTC3_INT_CONFIG_BASE_SHFT	352,18583
#define SH_RTC3_INT_CONFIG_BASE_MASK	353,18625
#define SH_RTC3_INT_CONFIG_IDX_SHFT	357,18849
#define SH_RTC3_INT_CONFIG_IDX_MASK	358,18890
#define SH1_RTC3_INT_ENABLE	365,19264
#define SH2_RTC3_INT_ENABLE	366,19329
#define SH_RTC3_INT_ENABLE_MASK	367,19394
#define SH_RTC3_INT_ENABLE_INIT	368,19463
#define SH_RTC3_INT_ENABLE_RTC3_ENABLE_SHFT	372,19683
#define SH_RTC3_INT_ENABLE_RTC3_ENABLE_MASK 373,19730
#define SH_EVENT_OCCURRED_RTC1_INT_SHFT	378,19968
#define SH_EVENT_OCCURRED_RTC1_INT_MASK	379,20013
#define SH_EVENT_OCCURRED_RTC2_INT_SHFT	383,20240
#define SH_EVENT_OCCURRED_RTC2_INT_MASK	384,20285
#define SH_EVENT_OCCURRED_RTC3_INT_SHFT	388,20512
#define SH_EVENT_OCCURRED_RTC3_INT_MASK	389,20557
#define SH1_IPI_ACCESS	396,20935
#define SH2_IPI_ACCESS0	397,20996
#define SH2_IPI_ACCESS1	398,21058
#define SH2_IPI_ACCESS2	399,21120
#define SH2_IPI_ACCESS3	400,21182
#define SH1_INT_CMPB	407,21546
#define SH2_INT_CMPB	408,21605
#define SH_INT_CMPB_MASK	409,21664
#define SH_INT_CMPB_INIT	410,21726
#define SH_INT_CMPB_REAL_TIME_CMPB_SHFT	414,21939
#define SH_INT_CMPB_REAL_TIME_CMPB_MASK	415,21983
#define SH1_INT_CMPC	422,22361
#define SH2_INT_CMPC	423,22420
#define SH_INT_CMPC_MASK	424,22479
#define SH_INT_CMPC_INIT	425,22541
#define SH_INT_CMPC_REAL_TIME_CMPC_SHFT	429,22754
#define SH_INT_CMPC_REAL_TIME_CMPC_MASK	430,22798
#define SH1_INT_CMPD	437,23176
#define SH2_INT_CMPD	438,23235
#define SH_INT_CMPD_MASK	439,23294
#define SH_INT_CMPD_INIT	440,23356
#define SH_INT_CMPD_REAL_TIME_CMPD_SHFT	444,23569
#define SH_INT_CMPD_REAL_TIME_CMPD_MASK	445,23613
#define SH1_MD_DQLP_MMR_DIR_PRIVEC0	451,23990
#define SH1_MD_DQRP_MMR_DIR_PRIVEC0	457,24363
#define shubmmr(467,25036
#define SH_REAL_JUNK_BUS_LED0	469,25095
#define SH_IPI_INT	470,25157
#define SH_EVENT_OCCURRED	471,25198
#define SH_EVENT_OCCURRED_ALIAS	472,25252
#define SH_RTC	473,25318
#define SH_RTC1_INT_CONFIG	474,25352
#define SH_RTC1_INT_ENABLE	475,25408
#define SH_RTC2_INT_CONFIG	476,25464
#define SH_RTC2_INT_ENABLE	477,25520
#define SH_RTC3_INT_CONFIG	478,25576
#define SH_RTC3_INT_ENABLE	479,25632
#define SH_INT_CMPB	480,25688
#define SH_INT_CMPC	481,25731
#define SH_INT_CMPD	482,25774
#define SH2_BT_ENG_CSR_0	489,26143
#define SH2_BT_ENG_SRC_ADDR_0	490,26205
#define SH2_BT_ENG_DEST_ADDR_0	491,26272
#define SH2_BT_ENG_NOTIF_ADDR_0	492,26340
#define SH2_BT_ENG_CSR_1	498,26654
#define SH2_BT_ENG_CSR_2	499,26716
#define SH2_BT_ENG_CSR_3	500,26778

xen/include/asm-ia64/linux/asm/sn/pic.h,4119
#define _ASM_IA64_SN_PCI_PIC_H9,298
#define PIC_ATE_TARGETID_SHFT 58,2411
#define PIC_HOST_INTR_ADDR 59,2453
#define PIC_PCI64_ATTR_TARG_SHFT 60,2514
struct pic 72,2964
    u64		p_wid_id;77,3087
    u64		p_wid_stat;78,3123
    u64		p_wid_err_upper;79,3161
    u64		p_wid_err_lower;80,3203
    #define p_wid_err 81,3245
    u64		p_wid_control;82,3283
    u64		p_wid_req_timeout;83,3324
    u64		p_wid_int_upper;84,3368
    u64		p_wid_int_lower;85,3410
    #define p_wid_int 86,3452
    u64		p_wid_err_cmdword;87,3490
    u64		p_wid_llp;88,3534
    u64		p_wid_tflush;89,3571
    u64		p_wid_aux_err;92,3680
    u64		p_wid_resp_upper;93,3721
    u64		p_wid_resp_lower;94,3764
    #define p_wid_resp 95,3807
    u64		p_wid_tst_pin_ctrl;96,3847
    u64		p_wid_addr_lkerr;97,3892
    u64		p_dir_map;100,3977
    u64		_pad_000088;101,4014
    u64		p_map_fault;104,4091
    u64		_pad_000098;105,4130
    u64		p_arb;108,4213
    u64		_pad_0000A8;109,4247
    u64		p_ate_parity_err;112,4354
    u64		_pad_0000B8;113,4397
    u64		p_bus_timeout;116,4476
    u64		p_pci_cfg;117,4517
    u64		p_pci_err_upper;118,4554
    u64		p_pci_err_lower;119,4596
    #define p_pci_err 120,4638
    u64		_pad_0000E0[_pad_0000E0121,4676
    u64		p_int_status;124,4766
    u64		p_int_enable;125,4806
    u64		p_int_rst_stat;126,4846
    u64		p_int_mode;127,4888
    u64		p_int_device;128,4926
    u64		p_int_host_err;129,4966
    u64		p_int_addr[p_int_addr130,5008
    u64		p_err_int_view;131,5056
    u64		p_mult_int;132,5098
    u64		p_force_always[p_force_always133,5136
    u64		p_force_pin[p_force_pin134,5187
    u64		p_device[p_device137,5275
    u64		_pad_000220[_pad_000220138,5321
    u64		p_wr_req_buf[p_wr_req_buf139,5370
    u64		_pad_000260[_pad_000260140,5419
    u64		p_rrb_map[p_rrb_map141,5468
    #define p_even_resp 142,5515
    #define p_odd_resp 143,5569
    u64		p_resp_status;144,5623
    u64		p_resp_clear;145,5664
    u64		_pad_0002A0[_pad_0002A0147,5705
	u64	upper;151,5829
	u64	lower;152,5866
    } p_buf_addr_match[p_buf_addr_match153,5903
	u64	flush_w_touch;157,6018
	u64	flush_wo_touch;158,6063
	u64	inflight;159,6109
	u64	prefetch;160,6149
	u64	total_pci_retry;161,6189
	u64	max_pci_retry;162,6235
	u64	max_latency;163,6280
	u64	clear_all;164,6323
    } p_buf_count[p_buf_count165,6364
    u64		p_pcix_bus_err_addr;169,6435
    u64		p_pcix_bus_err_attr;170,6481
    u64		p_pcix_bus_err_data;171,6527
    u64		p_pcix_pio_split_addr;172,6573
    u64		p_pcix_pio_split_attr;173,6621
    u64		p_pcix_dma_req_err_attr;174,6669
    u64		p_pcix_dma_req_err_addr;175,6718
    u64		p_pcix_timeout;176,6767
    u64		_pad_000640[_pad_000640178,6810
	u64	p_buf_addr;182,6930
	u64	p_buf_attr;183,6972
    } p_pcix_read_buf_64[p_pcix_read_buf_64184,7014
	u64	p_buf_addr;187,7058
	u64	p_buf_attr;188,7100
	u64	p_buf_valid;189,7142
	u64	__pad1;190,7185
    } p_pcix_write_buf_64[p_pcix_write_buf_64191,7224
    char		_pad_000c00[_pad_000c00195,7319
    u64		p_int_ate_ram[p_int_ate_ram198,7437
    u64		p_int_ate_ram_mp[p_int_ate_ram_mp201,7568
    char		_pad_014000[_pad_014000203,7627
    u64		p_wr_req_lower[p_wr_req_lower206,7722
    u64		p_wr_req_upper[p_wr_req_upper207,7777
    u64		p_wr_req_parity[p_wr_req_parity208,7832
    char		_pad_019800[_pad_019800210,7889
	u8		c[c214,8008
	u16	s[s215,8054
	u32	l[l216,8100
	u64	d[d217,8146
	    u8	c[c219,8201
	    u16	s[s220,8223
	    u32	l[l221,8246
	    u64	d[d222,8269
	} f[f223,8292
    } p_type0_cfg_dev[p_type0_cfg_dev224,8301
	u8		c[c228,8429
	u16	s[s229,8475
	u32	l[l230,8521
	u64	d[d231,8567
	    u8	c[c233,8622
	    u16	s[s234,8644
	    u32	l[l235,8667
	    u64	d[d236,8690
	} f[f237,8713
    } p_type1_cfg;238,8722
    char		_pad_029000[_pad_029000240,8770
	u8		c[c244,8888
	u16	s[s245,8903
	u32	l[l246,8918
	u64	d[d247,8933
    } p_pci_iack;248,8948
    char		_pad_030007[_pad_030007250,8995
	u8		c[c254,9100
	u16	s[s255,9115
	u32	l[l256,9130
	u64	d[d257,9145
    } p_pcix_cycle;258,9160

xen/include/asm-ia64/linux/asm/ioctl.h,832
#define _ASM_IA64_IOCTL_H2,26
#define _IOC_NRBITS	29,1032
#define _IOC_TYPEBITS	30,1054
#define _IOC_SIZEBITS	31,1078
#define _IOC_DIRBITS	32,1103
#define _IOC_NRMASK	34,1127
#define _IOC_TYPEMASK	35,1170
#define _IOC_SIZEMASK	36,1217
#define _IOC_DIRMASK	37,1264
#define _IOC_NRSHIFT	39,1310
#define _IOC_TYPESHIFT	40,1333
#define _IOC_SIZESHIFT	41,1383
#define _IOC_DIRSHIFT	42,1437
#define _IOC_NONE	47,1517
#define _IOC_WRITE	48,1538
#define _IOC_READ	49,1560
#define _IOC(51,1582
#define _IO(58,1771
#define _IOR(59,1823
#define _IOW(60,1891
#define _IOWR(61,1960
#define _IOC_DIR(64,2078
#define _IOC_TYPE(65,2141
#define _IOC_NR(66,2207
#define _IOC_SIZE(67,2267
#define IOC_IN	71,2379
#define IOC_OUT	72,2425
#define IOC_INOUT	73,2471
#define IOCSIZE_MASK	74,2531
#define IOCSIZE_SHIFT	75,2586

xen/include/asm-ia64/linux/asm/patch.h,31
#define _ASM_IA64_PATCH_H2,26

xen/include/asm-ia64/linux/asm/topology.h,284
#define _ASM_IA64_TOPOLOGY_H14,398
#define cpu_to_node(24,575
#define node_to_cpumask(29,681
#define parent_node(36,896
#define node_to_first_cpu(41,990
#define pcibus_to_node(46,1104
#define SD_CPU_INIT 50,1194
#define SD_NODE_INIT 76,1873
#define SD_ALLNODES_INIT 102,2594

xen/include/asm-ia64/linux/kmalloc_sizes.h,13
	CACHE(2,24

xen/include/asm-ia64/linux/topology.h,385
#define _LINUX_TOPOLOGY_H28,964
#define node_has_online_mem(37,1148
#define nr_cpus_node(41,1214
#define for_each_node_with_cpus(49,1374
#define LOCAL_DISTANCE	55,1555
#define REMOTE_DISTANCE	56,1582
#define node_distance(57,1610
#define PENALTY_FOR_NODE_WITH_CPUS	60,1735
#define ARCH_HAS_SCHED_WAKE_IDLE78,2417
#define SD_SIBLING_INIT 81,2511
#define SD_CPU_INIT 112,3260

xen/include/asm-ia64/vmx_vpd.h,1786
#define _ASM_IA64_VMX_VPD_H_23,928
#define IVT_DEBUG_MAX 33,1225
#define VPD_SHIFT	45,1436
#define VPD_SIZE	46,1457
struct ivt_debug{ivt_debug49,1509
    unsigned long iip;50,1527
    unsigned long ipsr;51,1550
    unsigned long ifa;52,1574
    unsigned long vector;53,1597
struct arch_vmx_struct 57,1634
    vtime_t	    vtm;59,1680
    unsigned long   vrr[vrr60,1701
    unsigned long   psbits[psbits63,1820
    unsigned long   vkr[vkr64,1851
    unsigned long   cr_iipa;65,1879
    unsigned long   cr_isr;66,1930
    unsigned long   cause;67,1981
    unsigned long   opcode;68,2008
    unsigned long   mpta;69,2036
    unsigned long   xen_port;70,2062
    unsigned char   flags;71,2092
    unsigned char   xtp;72,2119
    unsigned char   pal_init_pending;73,2144
    unsigned char   mmu_mode;74,2182
    unsigned long  ivt_current;76,2274
    struct ivt_debug ivt_debug[ivt_debug77,2306
    unsigned long sioemu_info_gpa;80,2391
    struct sioemu_callback_info *sioemu_info_mva;sioemu_info_mva81,2426
#define VMX_DOMAIN(84,2480
#define ARCH_VMX_DOMAIN 86,2528
static inline void vmx_vpd_pin(92,2731
static inline void vmx_vpd_unpin(99,2851
#define VPD_VAC_START_OFFSET	109,3018
#define VPD_VDC_START_OFFSET	110,3050
#define VPD_VHPI_START_OFFSET	111,3082
#define VPD_VGR_START_OFFSET	112,3117
#define VPD_VBGR_START_OFFSET	113,3152
#define VPD_VNAT_START_OFFSET	114,3188
#define VPD_VBNAT_START_OFFSET	115,3224
#define VPD_VCPUID_START_OFFSET	116,3261
#define VPD_VPSR_START_OFFSET	117,3299
#define VPD_VPR_START_OFFSET	118,3335
#define VPD_VRSE_CFLE_START_OFFSET	119,3370
#define VPD_VCR_START_OFFSET	120,3410
#define VPD_VTPR_START_OFFSET	121,3445
#define VPD_VRR_START_OFFSET	122,3481
#define VPD_VMM_VAIL_START_OFFSET	123,3516

xen/include/asm-ia64/config.h,3285
#define _IA64_CONFIG_H_2,24
#undef DEBUG_PFMON4,49
#define	CONFIG_IA64_GENERIC9,148
#define CONFIG_HZ	10,176
#define	CONFIG_IA64_L1_CACHE_SHIFT 12,198
#define	CONFIG_IA64_PAGE_SIZE_16KB	14,272
#define	CONFIG_IA64_GRANULE_16MB15,330
#define	CONFIG_VIRTUAL_FRAME_TABLE18,427
#define CONFIG_EFI20,463
#define CONFIG_EFI_PCDP21,482
#define CONFIG_SERIAL_SGI_L1_CONSOLE22,506
#define CONFIG_XEN_SMP24,544
#define CONFIG_SMP 27,590
#define CONFIG_HOTPLUG_CPU 28,611
#define NR_CPUS 30,661
#define NR_CPUS 32,697
#define MAX_VIRT_CPUS 34,723
#define MAX_HVM_VCPUS 35,766
#define CONFIG_NUMA36,802
#define CONFIG_ACPI_NUMA37,822
#define NODES_SHIFT 38,847
#define NR_NODE_MEMBLKS 39,899
#undef CONFIG_SMP41,973
#define NR_CPUS 42,991
#define CONFIG_NR_CPUS 44,1016
#define CONFIG_IOSAPIC46,1048
#define supervisor_mode_kernel 47,1071
#define PADDR_BITS	49,1107
#define CONFIG_PRIVOP_ADDRS53,1197
#define PRIVOP_COUNT_NADDRS 54,1225
#define CONFIG_VGA 57,1264
#define NR_hypercalls 60,1287
#define CONFIG_CPL0_EMUL	63,1373
typedef int pid_t;69,1531
typedef unsigned long paddr_t;72,1586
#define INVALID_PADDR 73,1617
#define ALIGN(75,1677
#define FASTCALL(79,1760
#define fastcall	80,1819
#define watchdog_disable(82,1844
#define watchdog_enable(83,1881
#define CLEAR_BITMAP(85,1954
#define __force103,2393
#define __chk_user_ptr(104,2409
#define __deprecated113,2680
#define	ELFSIZE	120,2881
#define CMPXCHG_BUGCHECK(125,3018
#define CMPXCHG_BUGCHECK_DECL126,3046
#define	get_cpu(129,3108
#define put_cpu(130,3145
#define put_cpu_no_resched(131,3178
#define smp_num_siblings 137,3342
#undef free_task_struct141,3432
#undef alloc_task_struct142,3456
#define get_thread_info(143,3481
#define task_t	146,3578
#define task_struct 149,3657
#define __cacheline_aligned_in_smp153,3725
#define __cacheline_aligned_in_smp 155,3766
#define ____cacheline_aligned 158,3829
#define ____cacheline_aligned_in_smp160,3924
#define ____cacheline_aligned_in_smp 162,3967
#define CONFIG_PERFMON165,4034
#define find_first_set_bit(185,4721
#define	OPT_CONSOLE_STR 188,4820
#define __nocast190,4852
#define _atomic_set(193,4934
#define _atomic_read(194,4981
#define atomic_compareandswap(195,5019
#define kmalloc(198,5194
#define kfree(199,5235
#define kzalloc(200,5263
#define kcalloc(208,5449
#define alloc_bootmem_node(209,5507
#define	nop(212,5592
#define preempt_enable(215,5706
#define preempt_disable(216,5748
typedef s64 time_t;219,5830
typedef s64 suseconds_t;220,5850
typedef long clock_t;223,5914
#define typecheck(226,5989
#define	TIME_SOURCE_CPU 234,6161
#define softirq_pending(237,6211
#define	SA_SHIRQ	240,6327
#define	SA_INTERRUPT	241,6355
struct screen_info 246,6482
#define seq_printf(247,6506
#define CONFIG_SHADOW	250,6616
#define __XEN_IA64_CONFIG_H__260,6837
#undef CONFIG_X86262,6868
#define CONFIG_MCKINLEY264,6887
#undef CONFIG_X86_LOCAL_APIC266,6912
#undef CONFIG_X86_IO_APIC267,6941
#undef CONFIG_X86_L1_CACHE_SHIFT268,6967
#define CONFIG_ACPI 272,7077
#define CONFIG_ACPI_BOOT 273,7099
#define CONFIG_XEN_ATTENTION_KEY 276,7136
#define HAVE_SERIALIZE_DIRECTIVE282,7319
#undef CONFIG_PRIVIFY285,7420
#define CONFIG_XENCOMM_MARK_DIRTY 287,7443
#define ARCH_CRASH_SAVE_VMCOREINFO289,7480

xen/include/asm-ia64/ia64_int.h,1783
#define _ASM_IA64_INT_H2,24
#define	IA64_VHPT_TRANS_VECTOR	6,70
#define IA64_INST_TLB_VECTOR	7,110
#define IA64_DATA_TLB_VECTOR	8,148
#define IA64_ALT_INST_TLB_VECTOR	9,186
#define IA64_ALT_DATA_TLB_VECTOR	10,227
#define IA64_DATA_NESTED_TLB_VECTOR	11,268
#define IA64_INST_KEY_MISS_VECTOR	12,312
#define IA64_DATA_KEY_MISS_VECTOR	13,354
#define IA64_DIRTY_BIT_VECTOR	14,396
#define IA64_INST_ACCESS_BIT_VECTOR	15,435
#define IA64_DATA_ACCESS_BIT_VECTOR	16,479
#define IA64_BREAK_VECTOR	17,523
#define IA64_EXTINT_VECTOR	18,558
#define IA64_PAGE_NOT_PRESENT_VECTOR	19,594
#define IA64_KEY_PERMISSION_VECTOR	20,639
#define IA64_INST_ACCESS_RIGHTS_VECTOR	21,682
#define IA64_DATA_ACCESS_RIGHTS_VECTOR	22,729
#define IA64_GENEX_VECTOR	23,776
#define IA64_DISABLED_FPREG_VECTOR	24,811
#define IA64_NAT_CONSUMPTION_VECTOR	25,854
#define IA64_SPECULATION_VECTOR	26,898
#define IA64_DEBUG_VECTOR	27,952
#define IA64_UNALIGNED_REF_VECTOR	28,987
#define IA64_UNSUPPORTED_DATA_REF_VECTOR	29,1029
#define IA64_FP_FAULT_VECTOR	30,1077
#define IA64_FP_TRAP_VECTOR	31,1115
#define IA64_LOWERPRIV_TRANSFER_TRAP_VECTOR	32,1152
#define IA64_TAKEN_BRANCH_TRAP_VECTOR	33,1203
#define IA64_SINGLE_STEP_TRAP_VECTOR	34,1249
#define	IA64_NO_FAULT	36,1295
#define IA64_FAULT	37,1325
#define	IA64_RFI_IN_PROGRESS	38,1360
#define IA64_RETRY	41,1488
#define IA64_FORCED_IFA 42,1518
#define IA64_USE_TLB	43,1557
#define	IA64_ILLOP_FAULT	44,1586
#define	IA64_PRIVOP_FAULT	45,1638
#define	IA64_PRIVREG_FAULT	46,1691
#define	IA64_RSVDREG_FAULT	47,1745
#define	IA64_DISIST_FAULT	48,1799
#define	IA64_ILLDEP_FAULT	49,1852
#define	IA64_DTLB_FAULT	50,1905
#define IA64_VHPT_FAULT 51,1953
typedef unsigned long IA64FAULT;53,2039
typedef unsigned long IA64INTVECTOR;54,2072

xen/include/asm-ia64/mm.h,5397
#define __ASM_IA64_MM_H__7,192
typedef unsigned long page_flags_t;29,557
#define PFN_ORDER(38,822
#define PRtype_info 40,870
#undef page_list_entry49,1123
struct page_list_entry50,1146
    u32 next,52,1171
    u32 next, prev;52,1171
typedef u32 __ia64_domain_t;57,1235
typedef unsigned long __ia64_domain_t;59,1270
struct page_info62,1317
    struct page_list_entry list;65,1400
    unsigned long count_info;68,1498
            unsigned long type_info;76,1749
            __ia64_domain_t _domain;78,1852
        } inuse;79,1910
            u32 order;84,2094
            bool_t need_tlbflush;86,2190
        } free;87,2224
    } u;89,2241
    u32 tlbflush_timestamp;92,2329
#define set_page_count(95,2361
#define PG_shift(101,2536
#define PG_mask(102,2584
#define PGT_none 105,2691
#define PGT_l1_page_table 106,2766
#define PGT_l2_page_table 107,2839
#define PGT_l3_page_table 108,2912
#define PGT_l4_page_table 109,2985
#define PGT_writable_page 112,3142
#define PGT_type_mask 113,3211
#define _PGT_pinned 116,3332
#define PGT_pinned 117,3370
#define _PGT_validated 119,3475
#define PGT_validated 120,3513
#define PGT_count_width 123,3610
#define PGT_count_mask 124,3648
#define _PGC_allocated 127,3758
#define PGC_allocated 128,3796
# define _PGC_xen_heap 130,3861
# define PGC_xen_heap 131,3899
#define _PGC_broken 136,4060
#define PGC_broken 137,4098
#define PGC_state 140,4216
#define PGC_state_inuse 141,4256
#define PGC_state_offlining 142,4296
#define PGC_state_offlined 143,4338
#define PGC_state_free 144,4379
#define page_state_is(145,4419
#define PGC_count_width 148,4541
#define PGC_count_mask 149,4579
#define is_xen_heap_page(153,4715
#define is_xen_heap_mfn(154,4783
#define is_xen_fixed_mfn(156,4926
#define page_get_owner(160,5099
#define page_set_owner(163,5314
#define page_get_owner(166,5451
#define page_set_owner(167,5524
#define XENSHARE_writable 170,5609
#define XENSHARE_readonly 171,5637
static inline void put_page(188,6271
static inline struct domain *page_get_owner_and_reference(page_get_owner_and_reference203,6621
static inline int get_page(229,7474
static inline void put_page_and_type(253,8195
static inline int get_page_and_type(260,8307
#define	set_machinetophys(275,8655
#define memguard_init(283,8920
#define memguard_guard_stack(284,8964
#define memguard_guard_range(285,9013
#define memguard_unguard_range(286,9062
struct vm_area_struct 303,9687
	struct mm_struct * vm_mm;304,9711
	unsigned long vm_start;305,9776
	unsigned long vm_end;306,9840
	struct vm_area_struct *vm_next;vm_next310,9989
	pgprot_t vm_page_prot;312,10023
	unsigned long vm_flags;313,10086
	struct rb_node vm_rb;316,10152
			struct list_head list;327,10491
			void *parent;parent328,10517
			struct vm_area_struct *head;head329,10574
		} vm_set;330,10606
		struct prio_tree_node prio_tree_node;332,10619
	} shared;333,10659
	struct list_head anon_vma_node;341,10949
	struct anon_vma *anon_vma;anon_vma342,11017
	struct vm_operations_struct * vm_ops;345,11133
	unsigned long vm_pgoff;348,11217
	struct file * vm_file;350,11323
	void * vm_private_data;351,11384
	struct mempolicy *vm_policy;vm_policy354,11460
#define VM_READ	361,11558
#define VM_WRITE	362,11615
#define VM_EXEC	363,11643
#define VM_SHARED	364,11671
#define VM_MAYREAD	366,11701
#define VM_MAYWRITE	367,11763
#define VM_MAYEXEC	368,11794
#define VM_MAYSHARE	369,11824
#define VM_GROWSDOWN	371,11856
#define VM_GROWSUP	372,11922
#define VM_SHM	373,11952
#define VM_DENYWRITE	374,12020
#define VM_EXECUTABLE	376,12087
#define VM_LOCKED	377,12120
#define VM_IO 378,12149
#define VM_SEQ_READ	381,12253
#define VM_RAND_READ	382,12324
#define VM_DONTCOPY	384,12405
#define VM_DONTEXPAND	385,12476
#define VM_RESERVED	386,12543
#define VM_ACCOUNT	387,12609
#define VM_HUGETLB	388,12670
#define VM_NONLINEAR	389,12723
#define VM_STACK_DEFAULT_FLAGS 392,12856
#define VM_STACK_FLAGS	396,12945
#define VM_STACK_FLAGS	398,13025
#define NODEZONE_SHIFT 408,13423
#define NODEZONE(409,13507
static inline unsigned long page_zonenum(411,13568
static inline unsigned long page_to_nid(415,13705
static inline struct zone *page_zone(page_zone423,13879
static inline void set_page_zone(428,13996
static inline void *lowmem_page_address(lowmem_page_address439,14300
#define HASHED_PAGE_VIRTUAL445,14475
#define page_address(449,14542
#define set_page_address(450,14587
#define page_address_init(454,14690
#define page_address(464,14985
#define set_page_address(465,15038
#define page_address_init(466,15095
kernel_map_pages(472,15199
#define expose_p2m_init(513,18143
#define dom0vp_expose_p2m(514,18192
#define foreign_p2m_init(515,18293
#define foreign_p2m_destroy(516,18338
#define dom0vp_expose_foreign_p2m(517,18386
#define dom0vp_unexpose_foreign_p2m(518,18473
#define __dom0vp_add_memdesc(519,18547
#define dom0vp_get_memmap(520,18611
#define machine_to_phys_mapping	533,19163
#define INVALID_M2P_ENTRY 535,19206
#define VALID_M2P(536,19246
#define SHARED_M2P(537,19301
#define set_gpfn_from_mfn(539,19337
#define get_gpfn_from_mfn(540,19414
#define mfn_to_gmfn(546,19630
#define gmfn_to_mfn(549,19691
#define __gpfn_invalid(552,19764
#define __gmfn_valid(555,19872
#define __gpa_to_mpa(557,19930
#define __mpa_to_gpa(560,20040
#define domain_clamp_alloc_bitsize(575,20565

xen/include/asm-ia64/vmx_pal_vsa.h,348
#define _PAL_VSA_H_24,863
#define PAL_VPS_RESUME_NORMAL 42,1320
#define PAL_VPS_RESUME_HANDLER 43,1367
#define PAL_VPS_SYNC_READ 44,1414
#define PAL_VPS_SYNC_WRITE 45,1457
#define PAL_VPS_SET_PENDING_INTERRUPT 46,1500
#define PAL_VPS_THASH 47,1551
#define PAL_VPS_TTAG 48,1594
#define PAL_VPS_RESTORE 49,1637
#define PAL_VPS_SAVE 50,1680

xen/include/asm-ia64/linux-null/asm/nmi.h,114
#define __IA64_NMI_H__2,23
#define register_guest_nmi_callback(4,47
#define unregister_guest_nmi_callback(5,97

xen/include/asm-ia64/tlbflush.h,61
#define __FLUSHTLB_H__2,23
#define tlbflush_filter(47,1418

xen/include/asm-ia64/xenkregs.h,1608
#define _ASM_IA64_XENKREGS_H2,29
#define IA64_TR_MAPPED_REGS	7,92
#define IA64_TR_SHARED_INFO	8,151
#define IA64_TR_VHPT	9,217
#define IA64_TR_VPD	11,259
#define IA64_DTR_GUEST_KERNEL 13,299
#define IA64_ITR_GUEST_KERNEL 14,333
#define IA64_PSR_VM_BIT	16,405
#define IA64_PSR_VM	17,433
#define IA64_DEFAULT_DCR_BITS	19,488
#define	DELIVER_PSR_SET	24,726
#define	DELIVER_PSR_CLR	28,847
#define IA64_PSR_CPL1	36,1203
#define IA64_PSR_CPL0	37,1261
#define IA64_IFS_V_BIT	40,1354
#define IA64_IFS_V	41,1381
#define IA64_ISR_NI_BIT	44,1471
#define IA64_PTA_VE_BIT 47,1549
#define IA64_PTA_SIZE_BIT 48,1575
#define IA64_PTA_SIZE_LEN 49,1603
#define IA64_PTA_VF_BIT 50,1631
#define IA64_PTA_BASE_BIT 51,1657
#define IA64_PTA_VE 53,1687
#define IA64_PTA_SIZE 54,1745
#define IA64_PTA_VF 56,1838
#define IA64_PTA_BASE 57,1896
#define	IA64_ITIR_PS	60,2009
#define	IA64_ITIR_PS_LEN	61,2033
#define	IA64_ITIR_PS_MASK	62,2060
#define	IA64_ITIR_KEY	64,2155
#define	IA64_ITIR_KEY_LEN	65,2180
#define	IA64_ITIR_KEY_MASK	66,2209
#define	IA64_ITIR_PS_KEY(68,2306
#define IA64_RR_PS	72,2434
#define IA64_RR_PS_LEN	73,2456
#define IA64_RR_RID	74,2482
#define IA64_RR_RID_LEN	75,2505
#define IA64_RR_RID_MASK	76,2533
#define	IA64_PKR_V	80,2664
#define	IA64_PKR_WD	81,2686
#define	IA64_PKR_RD	82,2709
#define	IA64_PKR_XD	83,2732
#define	IA64_PKR_MBZ0	84,2755
#define	IA64_PKR_KEY	85,2780
#define	IA64_PKR_KEY_LEN	86,2804
#define	IA64_PKR_MBZ1	87,2832
#define	IA64_PKR_VALID	89,2859
#define	IA64_PKR_KEY_MASK	90,2901
#define	XEN_IA64_NPKRS	93,2996
#define XEN_IA64_PKR_VAL	96,3111

xen/include/asm-ia64/bug.h,143
#define __IA64_BUG_H__2,23
#define BUG(4,47
#define WARN(5,87
#define dump_execution_state(7,130
#define vcpu_show_execution_state(13,425

xen/include/asm-ia64/shadow.h,169
#define _XEN_SHADOW_H24,973
#define shadow_drop_references(32,1091
#define shadow_mode_translate(37,1246
shadow_mode_enabled(49,1751
shadow_mark_page_dirty(55,1854

xen/include/asm-ia64/iocap.h,119
#define __IA64_IOCAP_H__8,179
#define ioports_access_permitted(15,404
#define multipage_allocation_permitted(18,520

xen/include/asm-ia64/vmx_vcpu_save.h,44
#define __ASM_IA64_VMX_VCPU_SAVE_H__23,977

xen/include/asm-ia64/hypercall.h,39
#define __ASM_IA64_HYPERCALL_H__6,142

xen/include/asm-ia64/grant_table.h,901
#define __ASM_GRANT_TABLE_H__6,149
#define INITIAL_NR_GRANT_FRAMES 8,180
#define IA64_SHARED_INFO_PADDR	24,790
#define IA64_XMAPPEDREGS_BASE_PADDR 26,877
#define IA64_XMAPPEDREGS_PADDR(27,953
#define IA64_GRANT_TABLE_PADDR 32,1180
#define gnttab_shared_maddr(34,1245
#define gnttab_shared_page(35,1323
#define gnttab_status_maddr(37,1401
#define gnttab_status_mfn(38,1475
#define gnttab_status_page(39,1561
#define ia64_gnttab_create_shared_page(41,1635
#define gnttab_create_shared_page(54,2282
#define ia64_gnttab_create_status_page(62,2695
#define gnttab_create_status_page(70,3157
#define gnttab_shared_gmfn(78,3570
#define gnttab_status_gmfn(80,3675
#define gnttab_mark_dirty(83,3780
static inline void gnttab_clear_flag(85,3823
#define gnttab_host_mapping_get_page_type(90,3921
#define gnttab_release_host_mappings(93,4019
static inline int replace_grant_supported(95,4067

xen/include/asm-ia64/virt_event.h,2597
#define __VIRT_EVENT_H__2,25
#define EVENT_MOV_TO_AR	27,957
#define EVENT_MOV_TO_AR_IMM	28,986
#define EVENT_MOV_FROM_AR	29,1018
#define EVENT_MOV_TO_CR	30,1048
#define EVENT_MOV_FROM_CR	31,1077
#define EVENT_MOV_TO_PSR	32,1107
#define EVENT_MOV_FROM_PSR	33,1136
#define EVENT_ITC_D	34,1167
#define EVENT_ITC_I	35,1192
#define EVENT_MOV_TO_RR	36,1217
#define EVENT_MOV_TO_DBR	37,1247
#define EVENT_MOV_TO_IBR	38,1277
#define EVENT_MOV_TO_PKR	39,1307
#define EVENT_MOV_TO_PMC	40,1337
#define EVENT_MOV_TO_PMD	41,1367
#define EVENT_ITR_D	42,1397
#define EVENT_ITR_I	43,1423
#define EVENT_MOV_FROM_RR	44,1449
#define EVENT_MOV_FROM_DBR	45,1480
#define EVENT_MOV_FROM_IBR	46,1512
#define EVENT_MOV_FROM_PKR	47,1544
#define EVENT_MOV_FROM_PMC	48,1576
#define EVENT_MOV_FROM_CPUID	49,1608
#define EVENT_SSM	50,1642
#define EVENT_RSM	51,1666
#define EVENT_PTC_L	52,1690
#define EVENT_PTC_G	53,1716
#define EVENT_PTC_GA	54,1742
#define EVENT_PTR_D	55,1769
#define EVENT_PTR_I	56,1795
#define EVENT_THASH	57,1821
#define EVENT_TTAG	58,1847
#define EVENT_TPA	59,1872
#define EVENT_TAK	60,1896
#define EVENT_PTC_E	61,1920
#define EVENT_COVER	62,1946
#define EVENT_RFI	63,1972
#define EVENT_BSW_0	64,1996
#define EVENT_BSW_1	65,2022
#define EVENT_VMSW	66,2048
#define EVENT_MOV_TO_AR	70,2095
#define EVENT_MOV_TO_AR_IMM	71,2124
#define EVENT_MOV_FROM_AR	72,2156
#define EVENT_MOV_TO_CR	73,2186
#define EVENT_MOV_FROM_CR	74,2215
#define EVENT_MOV_TO_PSR	75,2245
#define EVENT_MOV_FROM_PSR	76,2274
#define EVENT_ITC_D	77,2305
#define EVENT_ITC_I	78,2330
#define EVENT_MOV_TO_RR	79,2355
#define EVENT_MOV_TO_DBR	80,2385
#define EVENT_MOV_TO_IBR	81,2415
#define EVENT_MOV_TO_PKR	82,2445
#define EVENT_MOV_TO_PMC	83,2475
#define EVENT_MOV_TO_PMD	84,2505
#define EVENT_ITR_D	85,2535
#define EVENT_ITR_I	86,2561
#define EVENT_MOV_FROM_RR	87,2587
#define EVENT_MOV_FROM_DBR	88,2618
#define EVENT_MOV_FROM_IBR	89,2650
#define EVENT_MOV_FROM_PKR	90,2682
#define EVENT_MOV_FROM_PMC	91,2714
#define EVENT_MOV_FROM_PMD	92,2746
#define EVENT_MOV_FROM_CPUID	93,2778
#define EVENT_SSM	94,2812
#define EVENT_RSM	95,2836
#define EVENT_PTC_L	96,2860
#define EVENT_PTC_G	97,2886
#define EVENT_PTC_GA	98,2912
#define EVENT_PTR_D	99,2939
#define EVENT_PTR_I	100,2965
#define EVENT_THASH	101,2991
#define EVENT_TTAG	102,3017
#define EVENT_TPA	103,3042
#define EVENT_TAK	104,3066
#define EVENT_PTC_E	105,3090
#define EVENT_COVER	106,3116
#define EVENT_RFI	107,3142
#define EVENT_BSW_0	108,3166
#define EVENT_BSW_1	109,3192
#define EVENT_VMSW	110,3218

xen/include/asm-ia64/xensystem.h,525
#define _ASM_IA64_XENSYSTEM_H2,30
#define HYPERVISOR_VIRT_START	19,481
#define __IA64_UNCACHED_OFFSET	20,531
#define DEFAULT_SHAREDINFO_ADDR	21,584
#define PERCPU_ADDR	22,636
#define VIRT_FRAME_TABLE_ADDR	24,737
#define VIRT_FRAME_TABLE_END	25,787
#define HYPERVISOR_VIRT_END	27,843
#define PAGE_OFFSET	29,892
#define XEN_VIRT_UC_BIT	31,951
#define KERNEL_START	33,980
#define GATE_ADDR	34,1022
#define __IA64_EFI_UNCACHED_OFFSET	39,1229
#define __IA64_EFI_CACHED_OFFSET	40,1285
#define IS_VMM_ADDRESS(42,1340

xen/include/asm-ia64/xentypes.h,266
#define _ASM_IA64_XENTYPES_H2,29
typedef unsigned long ssize_t;5,80
typedef unsigned long size_t;6,111
typedef long long loff_t;7,141
typedef char bool_t;9,168
#define test_and_set_bool(10,189
#define test_and_clear_bool(11,234
#define BYTES_PER_LONG 13,280

xen/include/asm-ia64/vmx_mm_def.h,2787
#define _MM_DEF_H_22,880
#define ARCH_PAGE_SHIFT 28,991
#define ARCH_PAGE_SIZE 29,1020
#define MAX_PHYS_ADDR_BITS 30,1069
#define GUEST_IMPL_VA_MSB 31,1100
#define PMASK(32,1131
#define PSIZE(33,1175
#define POFFSET(35,1257
#define PPN_2_PA(36,1313
#define CLEARLSB(37,1353
#define PAGEALIGN(38,1427
#define TLB_AR_R 40,1471
#define TLB_AR_RX 41,1497
#define TLB_AR_RW 42,1523
#define TLB_AR_RWX 43,1549
#define TLB_AR_R_RW 44,1575
#define TLB_AR_RX_RWX 45,1601
#define TLB_AR_RWX_RW 46,1631
#define TLB_AR_XP 47,1661
#define IA64_ISR_CODE_MASK0 49,1688
#define IA64_UNIMPL_DADDR_FAULT 50,1724
#define IA64_UNIMPL_IADDR_TRAP 51,1765
#define IA64_RESERVED_REG_FAULT 52,1806
#define IA64_REG_NAT_CONSUMPTION_FAULT 53,1847
#define IA64_NAT_CONSUMPTION_FAULT 54,1892
#define IA64_PRIV_OP_FAULT 55,1933
#define DEFER_NONE 57,1971
#define DEFER_ALWAYS 58,1997
#define DEFER_DM 59,2029
#define DEFER_DP 60,2077
#define DEFER_DK 61,2125
#define DEFER_DX 62,2174
#define DEFER_DR 63,2223
#define DEFER_DA 64,2272
#define DEFER_DD 65,2321
#define ACCESS_RIGHT(67,2371
#define ACCESS_READ 69,2426
#define ACCESS_WRITE 70,2454
#define ACCESS_EXECUTE 71,2486
#define ACCESS_XP0 72,2518
#define ACCESS_XP1 73,2546
#define ACCESS_XP2 74,2575
#define ACCESS_FETCHADD 75,2604
#define ACCESS_XCHG 76,2637
#define ACCESS_CMPXCHG 77,2666
#define ACCESS_SIZE_1 79,2701
#define ACCESS_SIZE_2 80,2738
#define ACCESS_SIZE_4 81,2774
#define ACCESS_SIZE_8 82,2810
#define ACCESS_SIZE_10 83,2846
#define ACCESS_SIZE_16 84,2883
#define STLB_TC 86,2921
#define STLB_TR 87,2947
#define IA64_RR_SHIFT 89,2974
#define PHYS_PAGE_SHIFT 91,3006
#define STLB_SZ_SHIFT 93,3045
#define STLB_SIZE 94,3088
#define STLB_PPS_SHIFT 95,3133
#define STLB_PPS 96,3164
#define GUEST_TRNUM 97,3210
#define VA_MATTR_WB 100,3286
#define VA_MATTR_UC 101,3314
#define VA_MATTR_UCE 102,3342
#define VA_MATTR_WC 103,3374
#define VA_MATTR_NATPAGE 104,3402
#define VRN_MASK 106,3435
#define PTA_BASE_MASK 107,3478
#define PTA_BASE_SHIFT 108,3522
#define VHPT_OFFSET_MASK 109,3553
#define BITS_SHIFT_256MB 111,3589
#define SIZE_256MB 112,3620
#define TLB_GR_RV_BITS 113,3668
#define HPA_MAPPING_ATTRIBUTE 114,3719
#define VPN_2_VRN(115,3786
typedef enum { INSTRUCTION,118,3871
typedef enum { INSTRUCTION, DATA,118,3871
typedef enum { INSTRUCTION, DATA, REGISTER 118,3871
typedef enum { INSTRUCTION, DATA, REGISTER } miss_type;118,3871
typedef enum { DATA_REF,121,3976
typedef enum { DATA_REF, NA_REF,121,3976
typedef enum { DATA_REF, NA_REF, INST_REF,121,3976
typedef enum { DATA_REF, NA_REF, INST_REF, RSE_REF 121,3976
typedef enum { DATA_REF, NA_REF, INST_REF, RSE_REF } vhpt_ref_t;121,3976
bits_v(124,4069
#define bits(132,4282
#define clearbits(147,4922

xen/include/asm-ia64/perfc_defn.h,81
PERFCOUNTER(3,58
#define PERFPRIVOPADDR(99,4583
#undef PERFPRIVOPADDR110,4973

xen/include/asm-ia64/hardirq.h,128
#define __IA64__HARDIRQ__H__2,29
#define __ARCH_IRQ_STAT	4,59
#define HARDIRQ_BITS	5,85
#define local_softirq_pending(9,160

xen/include/asm-ia64/debugger.h,481
#define __ASM_DEBUGGER_H__23,912
#define CDB_BREAK_NUM	35,1285
show_execution_state(49,1544
static inline int debugger_trap_fatal(60,1819
#define ____debugger_trap_immediate(67,1966
#define __debugger_trap_immediate(68,2045
#define debugger_trap_immediate(69,2113
#define smp_send_stop(73,2235
static inline int debugger_trap_fatal(77,2287
#define debugger_trap_immediate(83,2398
static inline int debugger_event(86,2451
static inline int debugger_kernel_event(99,2763

xen/include/asm-ia64/msi.h,656
#define __ASM_MSI_H2,20
#define MSI_ADDRESS_HEADER	7,79
#define MSI_ADDRESS_HEADER_SHIFT	8,113
#define MSI_ADDRESS_HEADER_MASK	9,149
#define MSI_ADDRESS_DEST_ID_MASK	10,191
#define MSI_TARGET_CPU_MASK	11,235
#define MSI_TARGET_CPU_SHIFT	12,269
#define MSI_DELIVERY_MODE	13,301
#define MSI_LEVEL_MODE	14,330
#define MSI_TRIGGER_MODE	15,382
#define MSI_PHYSICAL_MODE	16,438
#define MSI_LOGICAL_MODE	17,467
#define MSI_REDIRECTION_HINT_MODE	18,495
#define MSI_DATA_VECTOR_SHIFT	20,532
#define  MSI_DATA_VECTOR_MASK	21,565
#define	 MSI_DATA_VECTOR(22,607
struct msi_msg 24,693
	u32	address_lo;25,710
	u32	address_hi;26,768
	u32	data;27,827

xen/include/asm-ia64/vhpt.h,599
#define ASM_VHPT_H2,19
# define	VHPT_SIZE_LOG2	6,140
#define	VHPT_NUM_ENTRIES	9,252
#define	VLE_PGFLAGS_OFFSET	12,357
#define	VLE_ITIR_OFFSET	13,387
#define	VLE_TITAG_OFFSET	14,415
#define	VLE_CCHAIN_OFFSET	15,444
struct vhpt_lf_entry 27,760
    unsigned long page_flags;28,783
    unsigned long itir;29,813
    unsigned long ti_tag;30,837
    unsigned long CChain;31,863
#define INVALID_TI_TAG 34,893
#define domain_set_vhpt_size(61,1754
#define pervcpu_vhpt_alloc(62,1819
#define pervcpu_vhpt_free(63,1871
vcpu_vhpt_maddr(67,1972
vcpu_pta(83,2319
canonicalize_vhpt_size(94,2584

xen/include/asm-ia64/softirq.h,131
#define __ASM_SOFTIRQ_H__2,26
#define CMC_DISABLE_SOFTIRQ 4,53
#define CMC_ENABLE_SOFTIRQ 5,109
#define NR_ARCH_SOFTIRQS 7,166

xen/include/asm-ia64/kexec.h,30
#define __IA64_KEXEC_H__2,25

xen/include/asm-ia64/vmx_vcpu.h,3145
#define _XEN_IA64_VMX_VCPU_H24,936
#define VRN_SHIFT	35,1159
#define VRN0	36,1180
#define VRN1	37,1200
#define VRN2	38,1220
#define VRN3	39,1240
#define VRN4	40,1260
#define VRN5	41,1280
#define VRN6	42,1300
#define VRN7	43,1320
#define VLSAPIC_INSVC(45,1355
#define VMX(47,1411
#define VMM_RR_SHIFT	49,1453
#define VMM_RR_MASK	50,1477
static inline u64 vmx_vcpu_get_itm(119,5032
static inline u64 vmx_vcpu_get_iva(124,5117
static inline u64 vmx_vcpu_get_pta(129,5202
static inline u64 vmx_vcpu_get_lid(134,5287
static inline u64 vmx_vcpu_get_ivr(139,5372
static inline u64 vmx_vcpu_get_tpr(144,5463
static inline u64 vmx_vcpu_get_eoi(149,5548
static inline u64 vmx_vcpu_get_irr0(154,5649
static inline u64 vmx_vcpu_get_irr1(159,5738
static inline u64 vmx_vcpu_get_irr2(164,5827
static inline u64 vmx_vcpu_get_irr3(169,5916
static inline u64 vmx_vcpu_get_itv(174,6005
static inline u64 vmx_vcpu_get_pmv(179,6090
static inline u64 vmx_vcpu_get_cmcv(184,6175
static inline u64 vmx_vcpu_get_lrr0(189,6262
static inline u64 vmx_vcpu_get_lrr1(194,6349
static inline IA64FAULT vmx_vcpu_set_itm(199,6436
static inline IA64FAULT vmx_vcpu_set_iva(205,6552
static inline IA64FAULT vmx_vcpu_set_pta(211,6667
static inline IA64FAULT vmx_vcpu_set_lid(217,6782
static inline IA64FAULT vmx_vcpu_set_eoi(224,6954
static inline IA64FAULT vmx_vcpu_set_itv(230,7069
static inline IA64FAULT vmx_vcpu_set_pmv(237,7186
static inline IA64FAULT vmx_vcpu_set_cmcv(243,7301
static inline IA64FAULT vmx_vcpu_set_lrr0(249,7418
static inline IA64FAULT vmx_vcpu_set_lrr1(255,7535
static inline IA64FAULT vmx_vcpu_set_itc(264,7858
static inline u64 vmx_vcpu_get_itc(270,7974
static inline u64 vmx_vcpu_get_cpuid(287,8407
static inline IA64FAULT vmx_vcpu_set_dbr(298,8730
static inline IA64FAULT vmx_vcpu_set_ibr(303,8852
static inline IA64FAULT vmx_vcpu_get_dbr(308,8974
static inline IA64FAULT vmx_vcpu_get_ibr(313,9099
static inline IA64FAULT vmx_vcpu_set_pmc(321,9427
static inline IA64FAULT vmx_vcpu_set_pmd(329,9672
static inline u64 vmx_vcpu_get_pmc(337,9917
static inline u64 vmx_vcpu_get_pmd(343,10074
static inline IA64FAULT vmx_vcpu_bsw0(353,10435
static inline IA64FAULT vmx_vcpu_bsw1(360,10550
#define redistribute_rid(369,10717
static inline unsigned long vrrtomrr(371,10824
static inline thash_cb_t *vmx_vcpu_get_vtlb(vmx_vcpu_get_vtlb388,11226
static inline thash_cb_t *vcpu_get_vhpt(vcpu_get_vhpt393,11314
set_ifa_itir_iha 411,11762
dtlb_fault 439,12297
itlb_fault 452,12583
nested_dtlb 465,12869
alt_dtlb 476,13085
alt_itlb 488,13325
_vhpt_fault(499,13530
ivhpt_fault 512,13819
dvhpt_fault 523,13997
_general_exception 533,14132
illegal_op 544,14343
illegal_dep 555,14521
rsv_reg_field 566,14705
privilege_op 577,14888
unimpl_daddr 588,15074
privilege_reg 604,15365
_nat_consumption_fault(616,15542
ir_nat_page_consumption 634,15942
inat_page_consumption 646,16215
rnat_consumption 657,16441
dnat_page_consumption 668,16647
__page_not_present(678,16812
data_page_not_present(686,17010
inst_page_not_present(692,17111
data_access_rights(702,17262
unimpl_iaddr_trap 715,17589

xen/include/asm-ia64/event.h,425
#define __ASM_EVENT_H__10,226
static inline void vcpu_kick(15,298
static inline void vcpu_mark_events_pending(35,1002
#define event_pending(42,1228
static inline int local_events_need_delivery(46,1372
static inline int local_event_delivery_is_enabled(51,1463
static inline void local_event_delivery_disable(56,1576
static inline void local_event_delivery_enable(61,1683
static inline int arch_virq_is_global(66,1789

xen/include/asm-ia64/vmx_phy_mode.h,248
#define _PHY_MODE_H_22,832
#define PHY_PAGE_WB 76,2919
#define VMX_MMU_MODE(90,3608
#define is_virtual_mode(91,3666
#define VMX_MMU_VIRTUAL 95,3759
#define VMX_MMU_PHY_D 96,3825
#define VMX_MMU_PHY_DT 97,3889
#define PAL_INIT_ENTRY 99,3959

xen/include/asm-ia64/regionreg.h,922
#define _REGIONREG_H_3,23
#define XEN_DEFAULT_RID 5,46
#define IA64_MIN_IMPL_RID_MSB 6,80
#define _REGION_ID(7,115
#define _REGION_PAGE_SIZE(8,193
#define _REGION_HW_WALKER(9,270
#define _MAKE_RR(10,347
typedef union ia64_rr 13,495
        unsigned long  ve 15,532
        unsigned long  reserved0 16,595
        unsigned long  ps 17,650
        unsigned long  rid 18,710
        unsigned long  reserved1 19,766
    unsigned long rrval;21,828
} ia64_rr;22,853
#define RR_TO_VE(27,897
#define RR_VE(28,957
#define RR_VE_MASK 29,1017
#define RR_VE_SHIFT 30,1061
#define RR_TO_PS(31,1087
#define RR_PS(32,1147
#define RR_PS_MASK 33,1207
#define RR_PS_SHIFT 34,1251
#define RR_TO_RID(35,1277
#define RR_RID(36,1337
#define RR_RID_MASK 37,1397
vmMangleRID(61,2419
    union bits64 63,2455
        unsigned char bytes[bytes64,2474
        unsigned long uint;65,2506
#define vmUnmangleRID(79,2764

xen/include/asm-ia64/viosapic.h,700
#define __ASM_IA64_VMX_VIOSAPIC_H__27,986
#define VIOSAPIC_REG_SELECT 36,1248
#define VIOSAPIC_WINDOW 37,1283
#define VIOSAPIC_EOI 38,1318
#define VIOSAPIC_VERSION 40,1354
#define VIOSAPIC_DEST_SHIFT 42,1389
#define VIOSAPIC_VERSION_ID 45,1424
#define VIOSAPIC_DEFAULT_BASE_ADDRESS 47,1482
#define VIOSAPIC_MEM_LENGTH 48,1532
#define domain_viosapic(50,1578
#define viosapic_domain(51,1638
#define vcpu_viosapic(53,1768
struct viosapic 55,1835
    uint64_t irr;56,1853
    uint64_t isr;57,1871
    uint32_t ioregsel;58,1930
    spinlock_t lock;59,1953
    struct vcpu * lowest_vcpu;60,1974
    uint64_t base_address;61,2005
    union vioapic_redir_entry redirtbl[redirtbl62,2032

xen/include/asm-ia64/dom_fw_common.h,1529
#define __ASM_IA64_DOM_FW_COMMON_H__22,958
typedef struct domain domain_t;28,1078
typedef struct xc_dom_image domain_t;33,1182
#define XENLOG_INFO 35,1221
#define XENLOG_WARNING	36,1253
#define XENLOG_GUEST	37,1287
#define printk(38,1311
#define BUG_ON(40,1364
#define BUILD_BUG_ON(41,1395
#define sort(44,1503
#define ONE_MB 49,1612
#define FW_VENDOR 50,1648
#define NFUNCPTRS 52,1736
#define NUM_EFI_SYS_TABLES 53,1771
struct fw_tables 55,1806
    efi_system_table_t                  efi_systab;56,1825
    efi_runtime_services_t              efi_runtime;57,1877
    efi_config_table_t                  efi_tables[efi_tables58,1930
    struct ia64_sal_systab              sal_systab;60,2003
    struct ia64_sal_desc_entry_point    sal_ed;61,2055
    struct ia64_sal_desc_ap_wakeup      sal_wakeup;62,2103
    fpswa_interface_t                   fpswa_inf;65,2231
    unsigned long                       func_ptrs[func_ptrs66,2282
    struct xen_sal_data                 sal_data;67,2346
    unsigned char                       fw_vendor[fw_vendor68,2396
    unsigned long                       fw_tables_size;74,2621
    unsigned long                       fw_end_paddr;75,2677
    unsigned long                       fw_tables_end_paddr;76,2734
    unsigned long                       num_mds;77,2795
    efi_memory_desc_t                   efi_memmap[efi_memmap79,2845
#define FW_FIELD_MPA(81,2903
#define XEN_IA64_MEMMAP_INFO_NUM_PAGES(102,3808
#define XEN_IA64_MEMMAP_INFO_PFN(103,3874

xen/include/asm-ia64/vcpumask.h,584
#define __XEN_VCPUMASK_H2,25
typedef struct { DECLARE_BITMAP(6,92
typedef struct { DECLARE_BITMAP(bits, MAX_VIRT_CPUS); } vcpumask_t;6,92
#define vcpu_set(8,161
static inline void __vcpu_set(9,216
#define vcpus_clear(13,318
static inline void __vcpus_clear(14,380
#define vcpu_isset(19,545
#define first_vcpu(21,615
static inline int __first_vcpu(22,675
#define next_vcpu(27,811
static inline int __next_vcpu(28,877
#define for_each_vcpu_mask(34,1045
#define for_each_vcpu_mask(39,1265
#define vcpumask_scnprintf(42,1368
static inline int __vcpumask_scnprintf(44,1478

xen/include/asm-ia64/uaccess.h,1252
#define _ASM_IA64_UACCESS_H2,28
#define __access_ok(45,1723
#define access_ok(46,1790
#define array_access_ok(47,1840
#define put_user(57,2189
#define get_user(58,2290
#define __put_user(65,2560
#define __get_user(66,2655
#define __put_user_unaligned(70,2780
#define __get_user_unaligned(88,3486
  struct __large_struct 105,4163
  struct __large_struct { unsigned long buf[buf105,4163
# define __m(106,4216
# define __get_user_size(111,4407
# define __put_user_size(128,5076
# define RELOC_TYPE	139,5503
# define __get_user_size(140,5538
# define __put_user_size(146,5761
#define __do_get_user(160,6239
#define __get_user_nocheck(178,6990
#define __get_user_check(179,7073
#define __do_put_user(187,7386
#define __put_user_nocheck(205,8101
#define __put_user_check(206,8184
__copy_to_user 215,8459
__copy_from_user 221,8617
#define __copy_to_user_inatomic	226,8749
#define __copy_from_user_inatomic	227,8797
#define copy_to_user(228,8848
#define copy_from_user(239,9162
#define __copy_in_user(251,9516
copy_in_user 254,9618
#define ARCH_HAS_SORT_EXTABLE261,9792
#define ARCH_HAS_SEARCH_EXTABLE262,9822
struct exception_table_entry 264,9855
	int addr;265,9886
	int cont;266,9955
ia64_done_with_exception 273,10251

xen/include/asm-ia64/time.h,26
#define _ASM_TIME_H_2,21

xen/include/asm-ia64/vcpu.h,2096
#define _XEN_IA64_VCPU_H2,25
typedef struct vcpu VCPU;16,345
typedef struct cpu_user_regs REGS;17,371
#define VCPU(22,511
#define PSCB(23,555
#define PSCBX(24,587
#define FP_PSR(25,622
#define SPURIOUS_VECTOR 27,660
static inline IA64FAULT vcpu_get_dcr(60,2114
static inline IA64FAULT vcpu_get_iva(66,2230
static inline IA64FAULT vcpu_get_pta(76,2427
static inline IA64FAULT vcpu_get_ipsr(82,2543
static inline IA64FAULT vcpu_get_isr(88,2661
static inline IA64FAULT vcpu_get_iip(94,2777
static inline IA64FAULT vcpu_get_ifa(100,2893
static inline unsigned long vcpu_get_rr_ps(107,3067
static inline unsigned long vcpu_get_rr_rid(115,3208
static inline unsigned long vcpu_get_itir_on_fault(123,3351
static inline IA64FAULT vcpu_get_itir(133,3550
static inline IA64FAULT vcpu_get_iipa(140,3684
static inline IA64FAULT vcpu_get_ifs(147,3818
static inline IA64FAULT vcpu_get_iim(153,3934
static inline IA64FAULT vcpu_get_iha(160,4066
static inline IA64FAULT vcpu_set_dcr(167,4238
static inline IA64FAULT vcpu_set_iva(173,4349
static inline IA64FAULT vcpu_set_pta(183,4539
static inline IA64FAULT vcpu_set_ipsr(193,4791
static inline IA64FAULT vcpu_set_isr(199,4904
static inline IA64FAULT vcpu_set_iip(205,5015
static inline IA64FAULT vcpu_increment_iip(211,5126
static inline IA64FAULT vcpu_decrement_iip(218,5268
static inline IA64FAULT vcpu_set_ifa(232,5527
static inline IA64FAULT vcpu_set_itir(238,5638
static inline IA64FAULT vcpu_set_iipa(244,5751
static inline IA64FAULT vcpu_set_ifs(250,5864
static inline IA64FAULT vcpu_set_iim(256,5975
static inline IA64FAULT vcpu_set_iha(262,6086
static inline int vcpu_pkr_in_use(319,8846
static inline void vcpu_pkr_use_set(323,8953
static inline void vcpu_pkr_use_unset(327,9054
static inline void vcpu_purge_tr_entry(335,9356
static inline u64 itir_ps(385,11772
static inline u64 itir_mask(390,11843
static inline s64 vcpu_get_next_timer_ns(395,11927
static inline u64 vcpu_pl_adjust(410,12268
#define verbose(420,12485
#define vcpu_quick_region_check(423,12605
#define vcpu_quick_region_set(425,12722

xen/include/asm-ia64/guest_access.h,38
#define __ASM_GUEST_ACCESS_H__23,895

xen/include/asm-ia64/init.h,29
#define _XEN_ASM_INIT_H2,24

xen/include/asm-ia64/xenprocessor.h,3911
#define _ASM_IA64_XENPROCESSOR_H2,33
#define ia64_is_local_fpu_owner(15,288
struct ia64_psr 18,397
	__u64 reserved0 19,415
	__u64 be 20,437
	__u64 up 21,452
	__u64 ac 22,467
	__u64 mfl 23,482
	__u64 mfh 24,498
	__u64 reserved1 25,514
	__u64 ic 26,536
	__u64 i 27,551
	__u64 pk 28,565
	__u64 reserved2 29,580
	__u64 dt 30,602
	__u64 dfl 31,617
	__u64 dfh 32,633
	__u64 sp 33,649
	__u64 pp 34,664
	__u64 di 35,679
	__u64 si 36,694
	__u64 db 37,709
	__u64 lp 38,724
	__u64 tb 39,739
	__u64 rt 40,754
	__u64 reserved3 41,769
	__u64 cpl 42,791
	__u64 is 43,807
	__u64 mc 44,822
	__u64 it 45,837
	__u64 id 46,852
	__u64 da 47,867
	__u64 dd 48,882
	__u64 ss 49,897
	__u64 ri 50,912
	__u64 ed 51,927
	__u64 bn 52,942
	__u64 ia 53,957
	__u64 vm 54,972
	__u64 reserved5 55,987
    __u64 val;60,1105
    	__u64 reserved0 62,1132
	__u64 be 63,1158
    	__u64 up 64,1173
    	__u64 ac 65,1192
    	__u64 mfl 66,1211
    	__u64 mfh 67,1231
    	__u64 reserved1 68,1251
    	__u64 ic 69,1277
    	__u64 i 70,1296
    	__u64 pk 71,1314
    	__u64 reserved2 72,1333
    	__u64 dt 73,1359
    	__u64 dfl 74,1378
    	__u64 dfh 75,1398
    	__u64 sp 76,1418
    	__u64 pp 77,1437
    	__u64 di 78,1456
	__u64 si 79,1475
    	__u64 db 80,1490
    	__u64 lp 81,1509
    	__u64 tb 82,1528
    	__u64 rt 83,1547
    	__u64 reserved3 84,1566
    	__u64 cpl 85,1592
    	__u64 is 86,1612
    	__u64 mc 87,1631
    	__u64 it 88,1650
    	__u64 id 89,1669
    	__u64 da 90,1688
    	__u64 dd 91,1707
    	__u64 ss 92,1726
    	__u64 ri 93,1745
    	__u64 ed 94,1764
    	__u64 bn 95,1783
    	__u64 reserved4 96,1802
}   IA64_PSR;98,1836
    __u64 val;101,1867
        __u64 code 103,1895
        __u64 vector 104,1920
        __u64 reserved1 105,1946
        __u64 x 106,1975
        __u64 w 107,1996
        __u64 r 108,2017
        __u64 na 109,2038
        __u64 sp 110,2060
        __u64 rs 111,2082
        __u64 ir 112,2104
        __u64 ni 113,2126
        __u64 so 114,2148
        __u64 ei 115,2170
        __u64 ed 116,2192
        __u64 reserved2 117,2214
}   ISR;119,2251
    __u64 val;123,2278
        __u64 ve 125,2306
        __u64 reserved0 126,2328
        __u64 size 127,2357
        __u64 vf 128,2381
        __u64 reserved1 129,2403
        __u64 base 130,2432
}   PTA;132,2464
    __u64 val;135,2490
        __u64  rv 137,2518
        __u64  eid 138,2543
        __u64  id 139,2567
        __u64  ig 140,2591
} LID;142,2623
    __u64 val;145,2646
        __u64 rv 147,2674
        __u64 ir 148,2697
        __u64 eid 149,2720
        __u64 id 150,2743
        __u64 ib_base 151,2766
} ipi_a_t;153,2801
    __u64 val;156,2828
        __u64 vector 158,2856
        __u64 dm 159,2882
        __u64 ig 160,2905
} ipi_d_t;162,2936
    __u64 val;165,2964
        __u64 ig0 167,2992
        __u64 mic 168,3015
        __u64 rsv 169,3038
        __u64 mmi 170,3061
        __u64 ig1 171,3084
} tpr_t;173,3115
    IA64_CPUID,177,3161
    IA64_DBR,178,3194
    IA64_IBR,179,3225
    IA64_PKR,180,3256
    IA64_PMC,181,3287
    IA64_PMD,182,3318
    IA64_RR 183,3349
    IA64_INST_TPA=188,3413
    IA64_INST_TAK189,3434
#define MASK(197,3540
		__u64 kr0;210,3953
		__u64 kr1;211,3966
		__u64 kr2;212,3979
		__u64 kr3;213,3992
		__u64 kr4;214,4005
		__u64 kr5;215,4018
		__u64 kr6;216,4031
		__u64 kr7;217,4044
	__u64 _kr[_kr219,4061
} cpu_kr_ia64_t;220,4076
        u64 rv3 226,4164
        u64 ps 227,4194
        u64 key 228,4224
        u64 rv4 229,4255
        u64 __rv3 232,4307
        u64 rid 234,4373
        u64 __rv4 235,4406
    u64 itir;237,4446
} ia64_itir_t;238,4460
	u64 val;241,4492
		u64 v 243,4512
		u64 wd 244,4526
		u64 rd 245,4540
		u64 xd 246,4554
		u64 reserved1 247,4568
		u64 key 248,4589
		u64 reserved2 249,4605
} ia64_pkr_t;251,4631

xen/include/asm-ia64/xengcc_intrin.h,368
#define _ASM_IA64_XENGCC_INTRIN_H2,34
#define ia64_flushrs(6,106
#define ia64_loadrs(8,168
#define ia64_get_rsc(10,228
#define ia64_set_rsc(17,471
#define ia64_get_bspstore(20,582
#define ia64_set_bspstore(27,814
#define ia64_get_rnat(30,935
#define ia64_set_rnat(37,1158
#define ia64_ttag(40,1271
#define ia64_get_dcr(47,1446
#define ia64_set_dcr(54,1704

xen/include/asm-ia64/xenoprof.h,365
#define __ASM_XENOPROF_H__25,1015
static inline int xenoprof_arch_ibs_counter(37,1417
#define ibs_caps	42,1562
static inline int xenoprof_backtrace_supported(47,1694
static inline void xenoprof_backtrace(51,1765
#define xenoprof_shared_gmfn(58,1953
ring(67,2404
#define ring_0(71,2497
#define ring_1(72,2536
#define ring_2(73,2575
#define ring_3(74,2614

xen/include/asm-ia64/tlb.h,714
#define XEN_ASM_IA64_TLB_H2,27
#define NITRS	4,55
#define NDTRS	5,72
union pte_flags 7,90
	    unsigned long p 9,121
	    unsigned long 10,156
	    unsigned long ma 11,191
	    unsigned long a 12,228
	    unsigned long d 13,263
	    unsigned long pl 14,298
	    unsigned long ar 15,335
	    unsigned long ppn 16,373
	    unsigned long 17,412
	    unsigned long ed 18,451
    unsigned long val;20,494
    volatile union pte_flags pte;24,538
            unsigned long 27,601
            unsigned long ps 28,645
            unsigned long key 29,689
            unsigned long 30,734
        unsigned long itir;32,791
    unsigned long vadr;35,827
    unsigned long rid;36,851
} TR_ENTRY;37,874

xen/include/asm-ia64/elf.h,736
#define __IA64_ELF_H__2,23
    unsigned long r1;5,64
    unsigned long r2;6,86
    unsigned long r13;7,108
    unsigned long cr_iip;8,131
    unsigned long ar_rsc;9,157
    unsigned long r30;10,183
    unsigned long ar_bspstore;11,206
    unsigned long ar_rnat;12,237
    unsigned long ar_ccv;13,264
    unsigned long ar_unat;14,290
    unsigned long ar_pfs;15,317
    unsigned long r31;16,343
    unsigned long ar_csd;17,366
    unsigned long ar_ssd;18,392
} ELF_Gregset;19,418
#define ELF_NGREG	31,733
#define ALIGN_UP(34,826
typedef unsigned long elf_greg_t;36,900
typedef elf_greg_t elf_gregset_t[elf_gregset_t37,934
typedef elf_gregset_t crash_xen_core_t;38,979
static inline void elf_core_save_regs(42,1099

xen/include/asm-ia64/flushtlb.h,275
#define __ASM_FLUSHTLB_H__25,991
#define tlbflush_current_time(32,1119
tlbflush_update_time(38,1266
NEED_FLUSH(52,1633
#define tlbflush_current_time(73,2429
#define tlbflush_clock_inc_and_return(74,2481
#define tlbflush_update_time(75,2533
#define NEED_FLUSH(76,2613

xen/include/asm-ia64/perfc.h,117
#define __ASM_PERFC_H__2,24
static inline void arch_perfc_reset(7,101
static inline void arch_perfc_gather(12,172

xen/include/asm-ia64/xenia64regs.h,871
#define _ASM_IA64_XENIA64REGS_H2,32
#define IA64_REG_CR_DCR 4,65
#define IA64_REG_CR_ITM 5,93
#define IA64_REG_CR_IVA 6,121
#define IA64_REG_CR_PTA 7,149
#define IA64_REG_CR_IPSR 8,177
#define IA64_REG_CR_ISR 9,206
#define IA64_REG_CR_IIP 10,235
#define IA64_REG_CR_IFA 11,264
#define IA64_REG_CR_ITIR 12,293
#define IA64_REG_CR_IIPA 13,322
#define IA64_REG_CR_IFS 14,351
#define IA64_REG_CR_IIM 15,380
#define IA64_REG_CR_IHA 16,409
#define IA64_REG_CR_LID 17,438
#define IA64_REG_CR_IVR 18,467
#define IA64_REG_CR_TPR 19,496
#define IA64_REG_CR_EOI 20,525
#define IA64_REG_CR_IRR0 21,554
#define IA64_REG_CR_IRR1 22,583
#define IA64_REG_CR_IRR2 23,612
#define IA64_REG_CR_IRR3 24,641
#define IA64_REG_CR_ITV 25,670
#define IA64_REG_CR_PMV 26,699
#define IA64_REG_CR_CMCV 27,728
#define IA64_REG_CR_LRR0 28,757
#define IA64_REG_CR_LRR1 29,786

xen/include/asm-ia64/vmmu.h,1928
#define XEN_TLBthash_H24,941
#define     MAX_CCN_DEPTH 26,965
#define     DEFAULT_VTLB_SZ 27,1033
#define     DEFAULT_VHPT_SZ 28,1105
#define     VTLB(29,1175
#define     VHPT(30,1225
    ISIDE_TLB=43,1477
    DSIDE_TLB=44,1494
#define VTLB_PTE_P_BIT 48,1540
#define VTLB_PTE_P 49,1570
#define ITIR_RV_MASK 51,1620
#define PAGE_FLAGS_RV_MASK 52,1678
#define PAGE_FLAGS_AR_PL_MASK 53,1750
typedef struct thash_data 56,1828
            u64 p 59,1885
            u64 rv1 60,1917
            u64 ma 61,1949
            u64 a 62,1983
            u64 d 63,2015
            u64 pl 64,2047
            u64 ar 65,2081
            u64 ppn 66,2116
            u64 rv2 67,2152
            u64 ed 68,2188
            u64 ig1 69,2221
        u64 page_flags;71,2268
            u64 rv3 76,2371
            u64 ps 77,2405
            u64 key 78,2439
            u64 rv4 79,2474
        u64 itir;81,2521
            u64 ig2 85,2593
            u64 vpn 86,2629
            u64 vrn 87,2666
        u64 vadr;89,2714
        u64 ifa;90,2732
            u64 tag 92,2785
            u64 ti 93,2821
        u64  etag;95,2890
        struct thash_data *next;next98,2958
        u64  rid;99,2991
} thash_data_t;102,3065
#define INVALIDATE_VHPT_HEADER(104,3082
#define INVALIDATE_TLB_HEADER(110,3275
#define INVALIDATE_HASH_HEADER(112,3343
#define INVALID_VHPT(114,3417
#define INVALID_TLB(115,3463
#define INVALID_TR(116,3509
#define INVALID_ENTRY(117,3554
static inline u64 thash_translate(119,3615
typedef struct thash_cb 125,3782
    thash_data_t    *hash;hash127,3841
    u64     hash_sz;128,3912
    void    *cch_buf;cch_buf129,3963
    u64     cch_sz;130,4027
    u64     cch_free_idx;131,4078
    thash_data_t *cch_freelist;cch_freelist132,4130
    PTA     pta;133,4162
} thash_cb_t;134,4179
static inline void machine_tlb_purge(208,6850
static inline void vmx_vcpu_set_tr 213,6936

xen/include/asm-ia64/xenmca.h,343
#define _ASM_IA64_XENMCA_H9,172
typedef struct sal_queue_entry_t 15,268
	int cpuid;16,303
	int sal_info_type;17,315
	unsigned int vector;18,335
	unsigned int virq;19,357
	unsigned int length;20,377
	struct list_head list;21,399
} sal_queue_entry_t;22,423
struct ia64_mca_tlb_info 26,482
	u64 cr_lid;27,509
	u64 percpu_paddr;28,522

xen/include/asm-ia64/privop_stat.h,497
#define _XEN_IA64_PRIVOP_STAT_H2,32
#define PERFCOUNTER(12,242
#define PERFCOUNTER_ARRAY(13,273
#define PERFSTATUS(15,317
#define PERFSTATUS_ARRAY(16,347
#define PERFPRIVOPADDR(18,390
enum privop_inst 20,440
#undef PERFCOUNTER24,491
#undef PERFCOUNTER_ARRAY25,510
#undef PERFSTATUS27,536
#undef PERFSTATUS_ARRAY28,554
#undef PERFPRIVOPADDR30,579
#define	PRIVOP_COUNT_ADDR(32,602
#define PRIVOP_COUNT_ADDR(36,757
#define gather_privop_addrs(37,804
#define reset_privop_addrs(38,850

xen/include/asm-ia64/dom_fw.h,3335
#define __IA64_XEN_HYPERCALL_DEFAULT	8,129
#define __IA64_XEN_HYPERCALL_DEFAULT_STR	9,174
#define FW_BASE_PADDR	13,319
#define FW_END_PADDR_MIN	15,419
#define	FW_HYPERCALL_BASE_PADDR 26,786
#define	FW_HYPERCALL_END_PADDR 27,827
#define	FW_HYPERCALL_PADDR(28,868
#define FW_ACPI_BASE_PADDR	31,1005
#define FW_ACPI_END_PADDR	32,1041
#define FW_TABLES_BASE_PADDR	35,1154
#define FW_TABLES_END_PADDR_MIN	36,1192
#define FW_HYPERCALL_NUM_MASK_HIGH	41,1342
#define FW_HYPERCALL_NUM_MASK_LOW	42,1385
#define FW_HYPERCALL_XEN	45,1460
#define FW_HYPERCALL_XEN_FAST	49,1579
#define FW_HYPERCALL_PAL_CALL_INDEX	68,2375
#define FW_HYPERCALL_PAL_CALL_PADDR	69,2418
#define FW_HYPERCALL_PAL_CALL	70,2502
#define FW_HYPERCALL_PAL_CALL_ASM	71,2542
#define FW_HYPERCALL_SAL_CALL_INDEX	85,3095
#define FW_HYPERCALL_SAL_CALL_PADDR	86,3138
#define FW_HYPERCALL_SAL_CALL	87,3222
#define FW_HYPERCALL_SAL_RETURN_INDEX	90,3288
#define FW_HYPERCALL_SAL_RETURN_PADDR	91,3333
#define FW_HYPERCALL_SAL_RETURN	92,3421
#define FW_HYPERCALL_EFI_GET_TIME_INDEX	118,4641
#define FW_HYPERCALL_EFI_SET_TIME_INDEX	119,4690
#define FW_HYPERCALL_EFI_GET_WAKEUP_TIME_INDEX	120,4739
#define FW_HYPERCALL_EFI_SET_WAKEUP_TIME_INDEX	121,4794
#define FW_HYPERCALL_EFI_SET_VIRTUAL_ADDRESS_MAP_INDEX	122,4849
#define FW_HYPERCALL_EFI_GET_VARIABLE_INDEX	123,4911
#define FW_HYPERCALL_EFI_GET_NEXT_VARIABLE_INDEX	124,4963
#define FW_HYPERCALL_EFI_SET_VARIABLE_INDEX	125,5019
#define FW_HYPERCALL_EFI_GET_NEXT_HIGH_MONO_COUNT_INDEX	126,5071
#define FW_HYPERCALL_EFI_RESET_SYSTEM_INDEX	127,5134
#define FW_HYPERCALL_EFI_CALL	130,5221
#define FW_HYPERCALL_EFI_GET_TIME	131,5262
#define FW_HYPERCALL_EFI_SET_TIME	132,5306
#define FW_HYPERCALL_EFI_GET_WAKEUP_TIME	133,5350
#define FW_HYPERCALL_EFI_SET_WAKEUP_TIME	134,5400
#define FW_HYPERCALL_EFI_SET_VIRTUAL_ADDRESS_MAP	135,5450
#define FW_HYPERCALL_EFI_GET_VARIABLE	136,5507
#define FW_HYPERCALL_EFI_GET_NEXT_VARIABLE	137,5555
#define FW_HYPERCALL_EFI_SET_VARIABLE	138,5607
#define FW_HYPERCALL_EFI_GET_NEXT_HIGH_MONO_COUNT	139,5655
#define FW_HYPERCALL_EFI_RESET_SYSTEM	140,5713
#define FW_HYPERCALL_EFI_GET_TIME_PADDR	144,5859
#define FW_HYPERCALL_EFI_SET_TIME_PADDR	145,5953
#define FW_HYPERCALL_EFI_GET_WAKEUP_TIME_PADDR	146,6047
#define FW_HYPERCALL_EFI_SET_WAKEUP_TIME_PADDR	147,6154
#define FW_HYPERCALL_EFI_SET_VIRTUAL_ADDRESS_MAP_PADDR	148,6261
#define FW_HYPERCALL_EFI_GET_VARIABLE_PADDR	149,6383
#define FW_HYPERCALL_EFI_GET_NEXT_VARIABLE_PADDR	150,6484
#define FW_HYPERCALL_EFI_SET_VARIABLE_PADDR	151,6594
#define FW_HYPERCALL_EFI_GET_NEXT_HIGH_MONO_COUNT_PADDR	152,6695
#define FW_HYPERCALL_EFI_RESET_SYSTEM_PADDR	153,6819
#define FW_HYPERCALL_IPI	160,7127
#define FW_HYPERCALL_FPSWA_ENTRY_INDEX	171,7465
#define FW_HYPERCALL_FPSWA_PATCH_INDEX	172,7513
#define FW_HYPERCALL_FPSWA_ENTRY_PADDR	173,7561
#define FW_HYPERCALL_FPSWA_PATCH_PADDR	174,7653
#define FW_HYPERCALL_FPSWA_BASE	175,7745
#define FW_HYPERCALL_FPSWA_BROKEN	176,7788
#define FW_HYPERCALL_FPSWA	177,7832
#define FW_HYPERCALL_FPSWA_STR	178,7870
#define FW_HYPERCALL_SET_SHARED_INFO_VA	181,7962
#define FW_HYPERCALL_SIOEMU	184,8067
#define FW_HYPERCALL_FIRST_ARCH	191,8315
#define XEN_SAL_BOOT_RENDEZ_VEC	194,8411
#define EFI_MEMDESC_VERSION	196,8449
#define SAL_XEN_SAL_RETURN	199,8509

xen/include/asm-ia64/vlsapic.h,614
#define _LSAPIC_H24,815
#define SAPIC_DELIV_SHIFT 30,905
#define SAPIC_FIXED 31,938
#define SAPIC_LOWEST_PRIORITY 32,973
#define SAPIC_PMI 33,1008
#define SAPIC_NMI 34,1043
#define SAPIC_INIT 35,1078
#define SAPIC_EXTINT 36,1113
#define SAPIC_POLARITY_SHIFT 41,1177
#define SAPIC_POL_HIGH 42,1211
#define SAPIC_POL_LOW 43,1244
#define SAPIC_TRIGGER_SHIFT 48,1300
#define SAPIC_EDGE 49,1334
#define SAPIC_LEVEL 50,1367
#define PIB_LOW_HALF(55,1425
#define PIB_OFST_INTA 56,1476
#define PIB_OFST_XTP 57,1516
#define SAPIC_MASK_SHIFT 62,1575
#define SAPIC_MASK 63,1609
#define VLSAPIC_XTP(65,1665

xen/include/asm-ia64/privop.h,32
#define _XEN_IA64_PRIVOP_H2,27

xen/include/asm-ia64/dom_fw_domu.h,42
#define __ASM_IA64_DOM_FW_DOMU_H__22,956

xen/include/asm-ia64/shared.h,34
#define __XEN_ASM_SHARED_H__2,29

xen/include/asm-ia64/linux-xen/asm-generic/pgtable-nopud.h,791
#define _PGTABLE_NOPUD_H2,25
#define __PAGETABLE_PUD_FOLDED6,73
typedef struct { pgd_t pgd;13,276
typedef struct { pgd_t pgd; } pud_t;13,276
#define PUD_SHIFT	15,314
#define PTRS_PER_PUD	16,344
#define PUD_SIZE 17,367
#define PUD_MASK 18,405
static inline int pgd_none(25,612
static inline int pgd_bad(26,665
static inline int pgd_present(27,717
static inline void pgd_clear(28,772
#define pud_ERROR(29,817
#define pgd_populate(31,867
#define set_pgd(36,1054
static inline pud_t * pud_offset(39,1148
pud_offset(45,1280
#define pud_val(51,1379
#define __pud(52,1420
#define pgd_page(54,1465
#define pgd_page_kernel(55,1517
#define pud_alloc_one(61,1715
#define pud_free(62,1756
#define __pud_free_tlb(63,1796
#undef  pud_addr_end65,1847
#define pud_addr_end(66,1868

xen/include/asm-ia64/linux-xen/linux/interrupt.h,2189
#define _LINUX_INTERRUPT_H3,45
typedef void irqreturn_t;31,744
#define IRQ_NONE32,770
#define IRQ_HANDLED33,787
#define IRQ_RETVAL(34,807
typedef int irqreturn_t;36,835
#define IRQ_NONE	37,860
#define IRQ_HANDLED	38,881
#define IRQ_RETVAL(39,905
struct irqaction 43,958
	irqreturn_t (*handler)handler44,977
	unsigned long flags;45,1033
	cpumask_t mask;46,1055
	const char *name;name47,1072
	void *dev_id;dev_id48,1091
	struct irqaction *next;next49,1106
	int irq;50,1131
	struct proc_dir_entry *dir;dir51,1141
static inline void __deprecated cli(72,1731
static inline void __deprecated sti(76,1799
static inline void __deprecated save_flags(80,1866
#define save_flags(84,1954
static inline void __deprecated restore_flags(85,1992
static inline void __deprecated save_and_cli(90,2083
#define save_and_cli(94,2171
#define local_bh_disable(99,2276
#define __local_bh_enable(101,2370
	HI_SOFTIRQ=116,2793
	TIMER_SOFTIRQ,117,2808
	NET_TX_SOFTIRQ,118,2824
	NET_RX_SOFTIRQ,119,2841
	SCSI_SOFTIRQ,120,2858
	TASKLET_SOFTIRQ121,2873
struct softirq_action129,3015
	void	(*action)action131,3039
	void	*data;data132,3081
#define __raise_softirq_irqoff(140,3269
struct tasklet_struct168,4331
	struct tasklet_struct *next;next170,4355
	unsigned long state;171,4385
	atomic_t count;172,4407
	void (*func)func173,4424
	unsigned long data;174,4454
#define DECLARE_TASKLET(177,4479
#define DECLARE_TASKLET_DISABLED(180,4593
	TASKLET_STATE_SCHED,186,4724
	TASKLET_STATE_RUN	187,4787
static inline int tasklet_trylock(191,4864
static inline void tasklet_unlock(196,4988
static inline void tasklet_unlock_wait(202,5127
#define tasklet_trylock(207,5267
#define tasklet_unlock_wait(208,5296
#define tasklet_unlock(209,5344
static inline void tasklet_schedule(214,5464
static inline void tasklet_hi_schedule(222,5684
static inline void tasklet_disable_nosync(229,5839
static inline void tasklet_disable(235,5965
static inline void tasklet_enable(242,6095
static inline void tasklet_hi_enable(248,6214
static inline unsigned long probe_irq_on(289,7810
static inline int probe_irq_off(293,7872
static inline unsigned int probe_irq_mask(297,7938

xen/include/asm-ia64/linux-xen/linux/efi.h,7848
#define _LINUX_EFI_H2,21
#define EFI_SUCCESS	30,696
#define EFI_LOAD_ERROR 31,719
#define EFI_INVALID_PARAMETER	32,785
#define EFI_UNSUPPORTED	33,849
#define EFI_BAD_BUFFER_SIZE 34,908
#define EFI_BUFFER_TOO_SMALL	35,974
#define EFI_NOT_FOUND	36,1037
typedef unsigned long efi_status_t;38,1095
typedef u8 efi_bool_t;39,1131
typedef u16 efi_char16_t;40,1154
	u8 b[b44,1224
} efi_guid_t;45,1235
#define EFI_GUID(47,1250
	u64 signature;58,1568
	u32 revision;59,1584
	u32 headersize;60,1599
	u32 crc32;61,1616
	u32 reserved;62,1628
} efi_table_hdr_t;63,1643
#define EFI_RESERVED_TYPE	70,1717
#define EFI_LOADER_CODE	71,1747
#define EFI_LOADER_DATA	72,1776
#define EFI_BOOT_SERVICES_CODE	73,1805
#define EFI_BOOT_SERVICES_DATA	74,1840
#define EFI_RUNTIME_SERVICES_CODE	75,1875
#define EFI_RUNTIME_SERVICES_DATA	76,1912
#define EFI_CONVENTIONAL_MEMORY	77,1949
#define EFI_UNUSABLE_MEMORY	78,1985
#define EFI_ACPI_RECLAIM_MEMORY	79,2017
#define EFI_ACPI_MEMORY_NVS	80,2053
#define EFI_MEMORY_MAPPED_IO	81,2085
#define EFI_MEMORY_MAPPED_IO_PORT_SPACE	82,2118
#define EFI_PAL_CODE	83,2161
#define EFI_MAX_MEMORY_TYPE	84,2187
#define EFI_MEMORY_UC	87,2244
#define EFI_MEMORY_WC	88,2311
#define EFI_MEMORY_WT	89,2386
#define EFI_MEMORY_WB	90,2458
#define EFI_MEMORY_WP	91,2527
#define EFI_MEMORY_RP	92,2599
#define EFI_MEMORY_XP	93,2670
#define EFI_MEMORY_RUNTIME	94,2744
#define EFI_MEMORY_DESCRIPTOR_VERSION	95,2837
#define EFI_PAGE_SHIFT	97,2878
	u32 type;100,2923
	u32 pad;101,2934
	u64 phys_addr;102,2944
	u64 virt_addr;103,2960
	u64 num_pages;104,2976
	u64 attribute;105,2992
} efi_memory_desc_t;106,3008
typedef int (*efi_freemem_callback_t)efi_freemem_callback_t108,3030
#define EFI_TIME_ADJUST_DAYLIGHT 113,3168
#define EFI_TIME_IN_DAYLIGHT 114,3205
#define EFI_UNSPECIFIED_TIMEZONE 115,3242
	u16 year;118,3300
	u8 month;119,3311
	u8 day;120,3322
	u8 hour;121,3331
	u8 minute;122,3341
	u8 second;123,3353
	u8 pad1;124,3365
	u32 nanosecond;125,3375
	s16 timezone;126,3392
	u8 daylight;127,3407
	u8 pad2;128,3421
} efi_time_t;129,3431
	u32 resolution;132,3463
	u32 accuracy;133,3480
	u8 sets_to_zero;134,3495
} efi_time_cap_t;135,3513
#define EFI_RESET_COLD 140,3580
#define EFI_RESET_WARM 141,3605
#define EFI_RESET_SHUTDOWN 142,3630
#define EFI_RUNTIME_SERVICES_SIGNATURE 147,3697
#define EFI_RUNTIME_SERVICES_REVISION 148,3764
	efi_table_hdr_t hdr;151,3832
	unsigned long get_time;152,3854
	unsigned long set_time;153,3879
	unsigned long get_wakeup_time;154,3904
	unsigned long set_wakeup_time;155,3936
	unsigned long set_virtual_address_map;156,3968
	unsigned long convert_pointer;157,4008
	unsigned long get_variable;158,4040
	unsigned long get_next_variable;159,4069
	unsigned long set_variable;160,4103
	unsigned long get_next_high_mono_count;161,4132
	unsigned long reset_system;162,4173
} efi_runtime_services_t;163,4202
typedef efi_status_t efi_get_time_t 165,4229
typedef efi_status_t efi_set_time_t 166,4303
typedef efi_status_t efi_get_wakeup_time_t 167,4357
typedef efi_status_t efi_set_wakeup_time_t 169,4469
typedef efi_status_t efi_get_variable_t 170,4550
typedef efi_status_t efi_get_next_variable_t 172,4687
typedef efi_status_t efi_set_variable_t 174,4811
typedef efi_status_t efi_get_next_high_mono_count_t 177,4964
typedef void efi_reset_system_t 178,5030
typedef efi_status_t efi_set_virtual_address_map_t 180,5151
#define NULL_GUID 188,5397
#define MPS_TABLE_GUID 191,5510
#define ACPI_TABLE_GUID 194,5630
#define ACPI_20_TABLE_GUID 197,5751
#define SMBIOS_TABLE_GUID 200,5875
#define SAL_SYSTEM_TABLE_GUID 203,5998
#define HCDP_TABLE_GUID	206,6125
#define UGA_IO_PROTOCOL_GUID 209,6244
#define EFI_GLOBAL_VARIABLE_GUID 212,6366
	efi_guid_t guid;216,6511
	unsigned long table;217,6529
} efi_config_table_t;218,6551
#define EFI_SYSTEM_TABLE_SIGNATURE 220,6574
	efi_table_hdr_t hdr;223,6656
	unsigned long fw_vendor;224,6678
	u32 fw_revision;225,6748
	unsigned long con_in_handle;226,6766
	unsigned long con_in;227,6796
	unsigned long con_out_handle;228,6819
	unsigned long con_out;229,6850
	unsigned long stderr_handle;230,6874
	unsigned long stderr;231,6904
	efi_runtime_services_t *runtime;runtime232,6927
	unsigned long boottime;233,6961
	unsigned long nr_tables;234,6986
	unsigned long tables;235,7012
} efi_system_table_t;236,7035
struct efi_memory_map 238,7058
	void *phys_map;phys_map240,7094
	void *map;map241,7111
	efi_memory_desc_t *phys_map;phys_map243,7129
	efi_memory_desc_t *map;map244,7159
	void *map_end;map_end246,7191
	int nr_map;247,7207
	unsigned long desc_version;248,7220
	unsigned long desc_size;249,7249
#define EFI_INVALID_TABLE_ADDR	252,7279
extern struct efi 257,7384
	efi_system_table_t *systab;systab258,7404
	unsigned long mps;259,7456
	unsigned long acpi;260,7493
	unsigned long acpi20;261,7549
	unsigned long smbios;262,7602
	unsigned long sal_systab;263,7646
	unsigned long boot_info;264,7696
	unsigned long hcdp;265,7744
	unsigned long uga;266,7783
	efi_get_time_t *get_time;get_time267,7820
	efi_set_time_t *set_time;set_time268,7847
	efi_get_wakeup_time_t *get_wakeup_time;get_wakeup_time269,7874
	efi_set_wakeup_time_t *set_wakeup_time;set_wakeup_time270,7915
	efi_get_variable_t *get_variable;get_variable271,7956
	efi_get_next_variable_t *get_next_variable;get_next_variable272,7991
	efi_set_variable_t *set_variable;set_variable273,8036
	efi_get_next_high_mono_count_t *get_next_high_mono_count;get_next_high_mono_count274,8071
	efi_reset_system_t *reset_system;reset_system275,8130
	efi_set_virtual_address_map_t *set_virtual_address_map;set_virtual_address_map276,8165
} efi;277,8222
efi_guidcmp 280,8248
efi_guid_unparse(286,8374
static inline int efi_range_is_wc(332,10158
#  define efi_enabled 357,10731
# define efi_enabled 360,10769
#define EFI_VARIABLE_NON_VOLATILE 366,10830
#define EFI_VARIABLE_BOOTSERVICE_ACCESS 367,10889
#define EFI_VARIABLE_RUNTIME_ACCESS 368,10948
#define EFI_DEV_HW	373,11046
#define  EFI_DEV_PCI	374,11072
#define  EFI_DEV_PCCARD	375,11099
#define  EFI_DEV_MEM_MAPPED	376,11129
#define  EFI_DEV_VENDOR	377,11162
#define  EFI_DEV_CONTROLLER	378,11192
#define EFI_DEV_ACPI	379,11225
#define   EFI_DEV_BASIC_ACPI	380,11253
#define   EFI_DEV_EXPANDED_ACPI	381,11287
#define EFI_DEV_MSG	382,11324
#define   EFI_DEV_MSG_ATAPI	383,11351
#define   EFI_DEV_MSG_SCSI	384,11384
#define   EFI_DEV_MSG_FC	385,11416
#define   EFI_DEV_MSG_1394	386,11446
#define   EFI_DEV_MSG_USB	387,11478
#define   EFI_DEV_MSG_USB_CLASS	388,11509
#define   EFI_DEV_MSG_I20	389,11546
#define   EFI_DEV_MSG_MAC	390,11577
#define   EFI_DEV_MSG_IPV4	391,11608
#define   EFI_DEV_MSG_IPV6	392,11640
#define   EFI_DEV_MSG_INFINIBAND	393,11672
#define   EFI_DEV_MSG_UART	394,11709
#define   EFI_DEV_MSG_VENDOR	395,11741
#define EFI_DEV_MEDIA	396,11775
#define   EFI_DEV_MEDIA_HARD_DRIVE	397,11804
#define   EFI_DEV_MEDIA_CDROM	398,11843
#define   EFI_DEV_MEDIA_VENDOR	399,11878
#define   EFI_DEV_MEDIA_FILE	400,11914
#define   EFI_DEV_MEDIA_PROTOCOL	401,11948
#define EFI_DEV_BIOS_BOOT	402,11985
#define EFI_DEV_END_PATH	403,12017
#define EFI_DEV_END_PATH2	404,12048
#define   EFI_DEV_END_INSTANCE	405,12080
#define   EFI_DEV_END_ENTIRE	406,12118
struct efi_generic_dev_path 408,12155
	u8 type;409,12185
	u8 sub_type;410,12195
	u16 length;411,12209
#define XEN_EFI_RR_ENTER(476,14688
#define XEN_EFI_RR_LEAVE(490,15204
#define XEN_EFI_RR_ENTER(502,15584
#define XEN_EFI_RR_LEAVE(503,15654
#define XEN_EFI_RR_DECLARE(506,15723
#define XEN_EFI_VM_MANGLE_RRVAL(515,15989
#define XEN_EFI_REGION6 521,16163
#define XEN_EFI_REGION7 522,16206
#define _XEN_EFI_RR6 523,16249
#define _XEN_EFI_RR7 526,16376
#define XEN_EFI_RR6 529,16503
#define XEN_EFI_RR7 530,16561

xen/include/asm-ia64/linux-xen/linux/oprofile.h,278
#define OPROFILE_H14,249
struct oprofile_operations 26,468
	int (*create_files)create_files29,579
	int (*setup)setup31,699
	void (*shutdown)shutdown33,774
	int (*start)start35,835
	void (*stop)stop37,891
	void (*backtrace)backtrace39,957
	char * cpu_type;41,1060

xen/include/asm-ia64/linux-xen/linux/hardirq.h,990
#define LINUX_HARDIRQ_H2,24
#define PREEMPT_BITS	26,706
#define SOFTIRQ_BITS	27,729
#define HARDIRQ_BITS	30,774
#define PREEMPT_SHIFT	40,1018
#define SOFTIRQ_SHIFT	41,1042
#define HARDIRQ_SHIFT	42,1095
#define __IRQ_MASK(44,1149
#define PREEMPT_MASK	46,1189
#define SOFTIRQ_MASK	47,1254
#define HARDIRQ_MASK	48,1319
#define PREEMPT_OFFSET	50,1385
#define SOFTIRQ_OFFSET	51,1431
#define HARDIRQ_OFFSET	52,1477
#define hardirq_count(60,1644
#define softirq_count(61,1701
#define irq_count(62,1758
#define in_irq(68,1949
#define in_softirq(69,1985
#define in_interrupt(70,2025
# define in_atomic(73,2124
# define in_atomic(75,2208
# define preemptible(79,2302
# define IRQ_EXIT_OFFSET 80,2368
# define preemptible(82,2418
# define IRQ_EXIT_OFFSET 83,2443
# define synchronize_irq(89,2562
#define nmi_enter(92,2610
#define nmi_exit(93,2643
static inline void account_user_vtime(96,2733
static inline void account_system_vtime(100,2801
#define irq_enter(105,2878

xen/include/asm-ia64/linux-xen/linux/gfp.h,1179
#define __LINUX_GFP_H2,22
#define __GFP_DMA	19,343
#define __GFP_HIGHMEM	20,367
#define __GFP_WAIT	33,789
#define __GFP_HIGH	34,845
#define __GFP_IO	35,907
#define __GFP_FS	36,959
#define __GFP_COLD	37,1019
#define __GFP_NOWARN	38,1076
#define __GFP_REPEAT	39,1151
#define __GFP_NOFAIL	40,1219
#define __GFP_NORETRY	41,1282
#define __GFP_NO_GROW	42,1344
#define __GFP_COMP	43,1400
#define __GFP_ZERO	44,1460
#define __GFP_NOMEMALLOC 45,1523
#define __GFP_NORECLAIM 46,1592
#define __GFP_BITS_SHIFT 48,1673
#define __GFP_BITS_MASK 49,1734
#define GFP_LEVEL_MASK 52,1859
#define GFP_ATOMIC	57,2065
#define GFP_NOIO	58,2097
#define GFP_NOFS	59,2127
#define GFP_KERNEL	60,2168
#define GFP_USER	61,2222
#define GFP_HIGHUSER	62,2274
#define GFP_DMA	67,2474
static inline void arch_free_page(87,3078
static inline struct page *alloc_pages_node(alloc_pages_node93,3248
alloc_pages(107,3654
#define alloc_pages(117,3940
#define alloc_page_vma(119,4031
#define alloc_page(121,4107
#define __get_free_page(126,4344
#define __get_dma_pages(129,4414
#define __free_page(137,4770
#define free_page(138,4820
static inline void drain_remote_pages(145,4967

xen/include/asm-ia64/linux-xen/linux/linux-pci.h,11237
#define LINUX_PCI_H18,405
#define PCI_DEVFN(39,811
#define PCI_SLOT(40,883
#define PCI_FUNC(41,932
#define PCIIOC_BASE	45,1024
#define PCIIOC_CONTROLLER	46,1080
#define PCIIOC_MMAP_IS_IO	47,1164
#define PCIIOC_MMAP_IS_MEM	48,1246
#define PCIIOC_WRITE_COMBINE	49,1329
enum pci_mmap_state 63,1678
	pci_mmap_io,64,1700
	pci_mmap_mem65,1714
#define PCI_DMA_BIDIRECTIONAL	69,1798
#define PCI_DMA_TODEVICE	70,1830
#define PCI_DMA_FROMDEVICE	71,1857
#define PCI_DMA_NONE	72,1886
#define DEVICE_COUNT_COMPATIBLE	74,1911
#define DEVICE_COUNT_RESOURCE	75,1945
typedef int __bitwise pci_power_t;77,1979
#define PCI_D0	79,2015
#define PCI_D1	80,2057
#define PCI_D2	81,2099
#define PCI_D3hot	82,2141
#define PCI_D3cold	83,2185
#define PCI_UNKNOWN	84,2230
#define PCI_POWER_ERROR	85,2276
typedef unsigned int __bitwise pci_channel_state_t;91,2529
enum pci_channel_state 93,2582
	pci_channel_io_normal 95,2645
	pci_channel_io_normal = (__force 95,2645
	pci_channel_io_normal = (__force pci_channel_state_t)95,2645
	pci_channel_io_frozen 98,2737
	pci_channel_io_frozen = (__force 98,2737
	pci_channel_io_frozen = (__force pci_channel_state_t)98,2737
	pci_channel_io_perm_failure 101,2820
	pci_channel_io_perm_failure = (__force 101,2820
	pci_channel_io_perm_failure = (__force pci_channel_state_t)101,2820
typedef unsigned short __bitwise pci_bus_flags_t;104,2888
enum pci_bus_flags 105,2938
	PCI_BUS_FLAGS_NO_MSI 106,2959
	PCI_BUS_FLAGS_NO_MSI = (__force 106,2959
	PCI_BUS_FLAGS_NO_MSI = (__force pci_bus_flags_t)106,2959
struct pci_cap_saved_state 109,3016
	struct hlist_node next;110,3045
	char cap_nr;111,3070
	u32 data[data112,3084
struct sn_pci_dev 119,3178
struct pci_dev 121,3204
	struct list_head global_list;123,3228
	struct list_head bus_list;124,3297
	struct pci_bus	*bus;bus125,3352
	struct pci_bus	*subordinate;subordinate126,3403
	void		*sysdata;sysdata128,3467
	struct proc_dir_entry *procent;procent129,3522
	unsigned int	devfn;131,3592
	unsigned short	vendor;132,3652
	unsigned short	device;133,3676
	unsigned short	subsystem_vendor;134,3700
	unsigned short	subsystem_device;135,3734
	u8		hdr_type;137,3824
	u8		rom_base_reg;138,3887
	u8		pin;139,3951
	struct pci_driver *driver;driver141,4008
	u64		dma_mask;142,4081
	pci_power_t     current_state;148,4313
	pci_channel_state_t error_state;152,4469
	struct	device	dev;153,4536
	unsigned short vendor_compatible[vendor_compatible156,4632
	unsigned short device_compatible[device_compatible157,4692
	int		cfg_size;159,4753
	unsigned int	irq;165,4946
	struct resource resource[resource166,4965
	unsigned int	transparent:transparent169,5108
	unsigned int	multifunction:multifunction170,5166
	unsigned int	is_enabled:is_enabled172,5266
	unsigned int	is_busmaster:is_busmaster173,5334
	unsigned int	no_msi:no_msi174,5390
	unsigned int	no_d1d2:no_d1d2175,5443
	unsigned int	block_ucfg_access:block_ucfg_access176,5496
	unsigned int	broken_parity_status:broken_parity_status177,5578
	unsigned int 	msi_enabled:msi_enabled178,5661
	unsigned int	msix_enabled:msix_enabled179,5691
	u32		saved_config_space[saved_config_space181,5722
	struct hlist_head saved_cap_space;182,5793
	struct bin_attribute *rom_attr;rom_attr183,5829
	int rom_attr_enabled;184,5909
	struct bin_attribute *res_attr[res_attr185,5986
#define pci_dev_g(189,6089
#define pci_dev_b(190,6153
#define	to_pci_dev(191,6214
#define for_each_pci_dev(192,6273
static inline struct pci_cap_saved_state *pci_find_saved_cap(pci_find_saved_cap194,6366
static inline void pci_add_saved_cap(207,6653
static inline void pci_remove_saved_cap(213,6818
#define PCI_ROM_RESOURCE	227,7115
#define PCI_BRIDGE_RESOURCES	228,7142
#define PCI_NUM_RESOURCES	229,7173
#define PCI_BUS_NUM_RESOURCES	232,7233
#define PCI_REGION_FLAG_MASK	235,7273
struct pci_bus 237,7373
	struct list_head node;238,7390
	struct pci_bus	*parent;parent239,7443
	struct list_head children;240,7503
	struct list_head devices;241,7557
	struct sn_pci_dev	*self;self243,7629
	struct pci_dev	*self;self245,7699
	struct resource	*resource[resource247,7768
	struct pci_ops	*ops;ops250,7864
	void		*sysdata;sysdata251,7924
	struct proc_dir_entry *procdir;procdir252,7979
	unsigned char	number;254,8052
	unsigned char	primary;255,8093
	unsigned char	secondary;256,8148
	unsigned char	subordinate;257,8207
	char		name[name259,8274
	unsigned short  bridge_ctl;261,8292
	pci_bus_flags_t bus_flags;262,8361
	struct device		*bridge;bridge263,8421
	struct class_device	class_dev;264,8446
	struct bin_attribute	*legacy_io;legacy_io265,8478
	struct bin_attribute	*legacy_mem;legacy_mem266,8542
#define pci_bus_b(269,8598
#define to_pci_bus(270,8655
#define PCIBIOS_SUCCESSFUL	275,8783
#define PCIBIOS_FUNC_NOT_SUPPORTED	276,8816
#define PCIBIOS_BAD_VENDOR_ID	277,8856
#define PCIBIOS_DEVICE_NOT_FOUND	278,8892
#define PCIBIOS_BAD_REGISTER_NUMBER	279,8930
#define PCIBIOS_SET_FAILED	280,8971
#define PCIBIOS_BUFFER_TOO_SMALL	281,9004
struct pci_ops 285,9092
	int (*read)read286,9109
	int (*write)write287,9195
struct pci_raw_ops 290,9285
	int (*read)read291,9306
	int (*write)write293,9413
struct pci_bus_region 299,9566
	unsigned long start;300,9590
	unsigned long end;301,9612
struct pci_dynids 304,9636
	spinlock_t lock;305,9656
	struct list_head list;306,9712
	unsigned int use_driver_data:use_driver_data307,9772
typedef unsigned int __bitwise pci_ers_result_t;317,10172
enum pci_ers_result 319,10222
	PCI_ERS_RESULT_NONE 321,10297
	PCI_ERS_RESULT_NONE = (__force 321,10297
	PCI_ERS_RESULT_NONE = (__force pci_ers_result_t)321,10297
	PCI_ERS_RESULT_CAN_RECOVER 324,10403
	PCI_ERS_RESULT_CAN_RECOVER = (__force 324,10403
	PCI_ERS_RESULT_CAN_RECOVER = (__force pci_ers_result_t)324,10403
	PCI_ERS_RESULT_NEED_RESET 327,10509
	PCI_ERS_RESULT_NEED_RESET = (__force 327,10509
	PCI_ERS_RESULT_NEED_RESET = (__force pci_ers_result_t)327,10509
	PCI_ERS_RESULT_DISCONNECT 330,10623
	PCI_ERS_RESULT_DISCONNECT = (__force 330,10623
	PCI_ERS_RESULT_DISCONNECT = (__force pci_ers_result_t)330,10623
	PCI_ERS_RESULT_RECOVERED 333,10739
	PCI_ERS_RESULT_RECOVERED = (__force 333,10739
	PCI_ERS_RESULT_RECOVERED = (__force pci_ers_result_t)333,10739
struct pci_error_handlers337,10837
	pci_ers_result_t (*error_detected)error_detected340,10910
	pci_ers_result_t (*mmio_enabled)mmio_enabled344,11067
	pci_ers_result_t (*link_reset)link_reset347,11163
	pci_ers_result_t (*slot_reset)slot_reset350,11249
	void (*resume)resume353,11354
struct pci_driver 359,11494
	struct list_head node;360,11514
	char *name;name361,11538
	const struct pci_device_id *id_table;id_table362,11551
	int  (*probe)probe363,11636
	void (*remove)remove364,11733
	int  (*suspend)suspend365,11833
	int  (*suspend_late)suspend_late366,11916
	int  (*resume_early)resume_early367,11981
	int  (*resume)resume368,12026
	int  (*enable_wake)enable_wake369,12103
	void (*shutdown)shutdown370,12204
	struct pci_error_handlers *err_handler;err_handler372,12246
	struct device_driver	driver;373,12287
	struct pci_dynids dynids;374,12317
	int multithread_probe;376,12345
#define	to_pci_driver(379,12373
#define PCI_DEVICE(390,12742
#define PCI_DEVICE_CLASS(403,13240
#define pci_module_init	412,13551
static inline struct pci_bus *pci_scan_bus(pci_scan_bus438,14578
static inline int pci_read_config_byte(494,17663
static inline int pci_read_config_word(498,17816
static inline int pci_read_config_dword(502,17970
static inline int pci_write_config_byte(506,18126
static inline int pci_write_config_word(510,18280
static inline int pci_write_config_dword(514,18435
#define HAVE_PCI_SET_MWI523,18810
#define HAVE_PCI_REQ_REGIONS	556,20457
static inline int __must_check pci_register_driver(574,21217
#define	pci_pool 595,22068
#define pci_pool_create(596,22094
#define	pci_pool_destroy(598,22218
#define	pci_pool_alloc(599,22272
#define	pci_pool_free(600,22352
enum pci_dma_burst_strategy 602,22427
	PCI_DMA_BURST_INFINITY,603,22457
	PCI_DMA_BURST_BOUNDARY,605,22555
	PCI_DMA_BURST_MULTIPLE,607,22648
struct msix_entry 615,22847
	u16 	vector;616,22867
	u16	entry;617,22925
static inline void pci_scan_msi_device(622,23011
static inline int pci_enable_msi(623,23074
static inline void pci_disable_msi(624,23141
static inline int pci_enable_msix(625,23200
static inline void pci_disable_msix(627,23307
static inline void msi_remove_pci_irq_vectors(628,23367
static inline int pci_domain_nr(654,24295
static inline int pci_proc_domain(655,24362
#define _PCI_NOP(668,24624
#define _PCI_NOP_ALL(671,24773
_PCI_NOP_ALL(674,24880
static inline struct pci_dev *pci_find_slot(pci_find_slot680,25058
static inline struct pci_dev *pci_get_device(pci_get_device683,25158
static inline struct pci_dev *pci_get_device_reverse(pci_get_device_reverse687,25289
static inline struct pci_dev *pci_get_subsys pci_get_subsys691,25428
static inline struct pci_dev *pci_get_class(pci_get_class695,25604
#define pci_dev_present(698,25708
#define pci_dev_put(699,25741
static inline void pci_set_master(701,25784
static inline int pci_enable_device(702,25843
static inline void pci_disable_device(703,25917
static inline int pci_set_dma_mask(704,25980
static inline int pci_assign_resource(705,26063
static inline int __pci_register_driver(706,26147
static inline int pci_register_driver(707,26246
static inline void pci_unregister_driver(708,26321
static inline int pci_find_capability 709,26390
static inline int pci_find_next_capability 710,26472
static inline int pci_find_ext_capability 711,26569
static inline const struct pci_device_id *pci_match_device(pci_match_device712,26655
static inline int pci_save_state(715,26832
static inline int pci_restore_state(716,26900
static inline int pci_set_power_state(717,26971
static inline pci_power_t pci_choose_state(718,27063
static inline int pci_enable_wake(719,27166
#define	isa_bridge	721,27267
#define pci_dma_burst_advice(723,27312
static inline void pci_block_user_cfg_access(725,27392
static inline void pci_unblock_user_cfg_access(726,27462
#define pci_resource_start(738,27763
#define pci_resource_end(739,27832
#define pci_resource_flags(740,27899
#define pci_resource_len(741,27968
static inline void *pci_get_drvdata pci_get_drvdata753,28411
static inline void pci_set_drvdata 758,28512
static inline char *pci_name(pci_name766,28748
static inline void pci_resource_to_user(776,28965
struct pci_fixup 793,29504
	u16 vendor,794,29523
	u16 vendor, device;794,29523
	void (*hook)hook795,29588
enum pci_fixup_pass 798,29628
	pci_fixup_early,799,29650
	pci_fixup_header,800,29694
	pci_fixup_final,801,29754
	pci_fixup_enable,802,29807
#define DECLARE_PCI_FIXUP_SECTION(806,29904
#define DECLARE_PCI_FIXUP_EARLY(809,30116
#define DECLARE_PCI_FIXUP_HEADER(812,30270
#define DECLARE_PCI_FIXUP_FINAL(815,30426
#define DECLARE_PCI_FIXUP_ENABLE(818,30580
#define PCIPCI_FAIL	827,30845
#define PCIPCI_TRITON	828,30889
#define PCIPCI_NATOMA	829,30914
#define PCIPCI_VIAETBF	830,30939
#define PCIPCI_VSFX	831,30965
#define PCIPCI_ALIMAGIK	832,30989
#define PCIAGP_FAIL	833,31048

xen/include/asm-ia64/linux-xen/linux/kobject.h,3041
#define _KOBJECT_H_16,386
#define KOBJ_NAME_LEN	31,680
#define UEVENT_HELPER_PATH_LEN	32,707
typedef int __bitwise kobject_action_t;41,1004
enum kobject_action 42,1044
	KOBJ_ADD	43,1066
	KOBJ_ADD	= (__force 43,1066
	KOBJ_ADD	= (__force kobject_action_t)43,1066
	KOBJ_ADD	= (__force kobject_action_t) 0x01,x0143,1066
	KOBJ_REMOVE	44,1135
	KOBJ_REMOVE	= (__force 44,1135
	KOBJ_REMOVE	= (__force kobject_action_t)44,1135
	KOBJ_REMOVE	= (__force kobject_action_t) 0x02,x0244,1135
	KOBJ_CHANGE	45,1207
	KOBJ_CHANGE	= (__force 45,1207
	KOBJ_CHANGE	= (__force kobject_action_t)45,1207
	KOBJ_CHANGE	= (__force kobject_action_t) 0x03,x0345,1207
	KOBJ_MOUNT	46,1281
	KOBJ_MOUNT	= (__force 46,1281
	KOBJ_MOUNT	= (__force kobject_action_t)46,1281
	KOBJ_MOUNT	= (__force kobject_action_t) 0x04,x0446,1281
	KOBJ_UMOUNT	47,1373
	KOBJ_UMOUNT	= (__force 47,1373
	KOBJ_UMOUNT	= (__force kobject_action_t)47,1373
	KOBJ_UMOUNT	= (__force kobject_action_t) 0x05,x0547,1373
	KOBJ_OFFLINE	48,1467
	KOBJ_OFFLINE	= (__force 48,1467
	KOBJ_OFFLINE	= (__force kobject_action_t)48,1467
	KOBJ_OFFLINE	= (__force kobject_action_t) 0x06,x0648,1467
	KOBJ_ONLINE	49,1537
	KOBJ_ONLINE	= (__force 49,1537
	KOBJ_ONLINE	= (__force kobject_action_t)49,1537
	KOBJ_ONLINE	= (__force kobject_action_t) 0x07,x0749,1537
struct kobject 52,1609
	const char		* k_name;53,1626
	char			name[name54,1649
	struct kref		kref;55,1678
	struct list_head	entry;56,1698
	struct kobject		* parent;57,1723
	struct kset		* kset;58,1750
	struct kobj_type	* ktype;59,1772
	struct dentry		* dentry;60,1799
	wait_queue_head_t	poll;61,1825
extern int kobject_set_name(64,1854
static inline const char * kobject_name(67,1958
struct kobj_type 90,2667
	void (*release)release91,2686
	struct sysfs_ops	* sysfs_ops;92,2722
	struct attribute	** default_attrs;93,2753
struct kset_uevent_ops 114,3446
	int (*filter)filter115,3471
	const char *(*name)name116,3528
	int (*uevent)uevent117,3591
struct kset 121,3713
	struct subsystem	* subsys;122,3727
	struct kobj_type	* ktype;123,3755
	struct list_head	list;124,3782
	spinlock_t		list_lock;125,3806
	struct kobject		kobj;126,3830
	struct kset_uevent_ops	* uevent_ops;127,3853
static inline struct kset * to_kset(136,4090
static inline struct kset * kset_get(141,4213
static inline void kset_put(146,4323
static inline struct kobj_type * get_ktype(151,4397
#define set_kset_name(166,4713
struct subsystem 170,4779
	struct kset		kset;171,4798
	struct rw_semaphore	rwsem;173,4830
#define decl_subsys(177,4869
#define decl_subsys_name(185,5068
#define kobj_set_kset_s(214,5906
#define kset_set_kset_s(228,6324
#define subsys_set_kset(241,6712
static inline struct subsystem * subsys_get(248,6967
static inline void subsys_put(253,7113
struct subsys_attribute 258,7191
	struct attribute attr;260,7229
	ssize_t (*show)show262,7260
	ssize_t (*store)store263,7306
int add_uevent_var(272,7570
static inline void kobject_uevent(277,7755
static inline int add_uevent_var(279,7844

xen/include/asm-ia64/linux-xen/linux/device.h,5178
#define _DEVICE_H_12,242
#define DEVICE_NAME_SIZE	25,517
#define DEVICE_NAME_HALF	26,545
#define DEVICE_ID_SIZE	27,627
#define BUS_ID_SIZE	28,654
struct bus_type 36,764
	const char		* name;37,782
	struct subsystem	subsys;39,804
	struct kset		drivers;40,830
	struct kset		devices;41,853
	struct klist		klist_devices;42,876
	struct klist		klist_drivers;43,906
	struct bus_attribute	* bus_attrs;45,937
	struct device_attribute	* dev_attrs;46,972
	struct driver_attribute	* drv_attrs;47,1010
	int		(*match)match49,1049
	int		(*uevent)uevent50,1114
	int		(*probe)probe52,1215
	int		(*remove)remove53,1252
	void		(*shutdown)shutdown54,1290
	int (*suspend)suspend56,1332
	int (*suspend_late)suspend_late57,1390
	int (*resume_early)resume_early58,1453
	int (*resume)resume59,1496
struct bus_attribute 80,2210
	struct attribute	attr;82,2245
	ssize_t (*show)show84,2276
	ssize_t (*store)store85,2325
#define BUS_ATTR(88,2399
struct device_driver 95,2680
	const char		* name;96,2703
	struct bus_type		* bus;97,2724
	struct completion	unloaded;99,2750
	struct kobject		kobj;100,2779
	struct klist		klist_devices;101,2802
	struct klist_node	knode_bus;102,2832
	struct module		* owner;104,2863
	int	(*probe)probe106,2889
	int	(*remove)remove107,2926
	void	(*shutdown)shutdown108,2964
	int	(*suspend)suspend109,3005
	int	(*resume)resume110,3064
	unsigned int multithread_probe:multithread_probe112,3103
struct driver_attribute 126,3571
	struct attribute	attr;128,3609
	ssize_t (*show)show130,3640
	ssize_t (*store)store131,3694
#define DRIVER_ATTR(134,3773
	const char		* name;152,4426
	struct module		* owner;153,4447
	struct subsystem	subsys;155,4473
	struct list_head	children;156,4499
	struct list_head	devices;157,4527
	struct list_head	interfaces;158,4554
	spinlock_t		sem;160,4595
	struct semaphore	sem;162,4619
	struct kobject		*virtual_dir;virtual_dir165,4701
	struct class_attribute		* class_attrs;167,4733
	struct class_device_attribute	* class_dev_attrs;168,4773
	struct device_attribute		* dev_attrs;169,4823
	int	(*uevent)uevent171,4863
	int	(*dev_uevent)dev_uevent173,4969
	void	(*release)release176,5072
	void	(*class_release)class_release177,5116
	void	(*dev_release)dev_release178,5161
	int	(*suspend)suspend180,5204
	int	(*resume)resume181,5258
struct class_attribute 188,5399
	struct attribute	attr;190,5436
	ssize_t (*show)show192,5467
	ssize_t (*store)store193,5513
#define CLASS_ATTR(196,5584
struct class_device_attribute 203,5888
	struct attribute	attr;205,5932
	ssize_t (*show)show207,5963
	ssize_t (*store)store208,6016
#define CLASS_DEVICE_ATTR(211,6094
struct class_device 243,7831
	struct list_head	node;244,7853
	struct kobject		kobj;246,7878
	dev_t			devt;248,7940
	struct class_device_attribute *devt_attr;devt_attr249,7993
	struct class_device_attribute uevent_attr;250,8036
	struct device		* dev;251,8080
	void			* class_data;252,8142
	struct class_device	*parent;parent253,8190
	struct attribute_group  ** groups;254,8271
	void	(*release)release256,8330
	int	(*uevent)uevent257,8374
	char	class_id[class_id259,8480
class_get_devdata 263,8561
class_set_devdata 269,8655
struct class_interface 293,9552
	struct list_head	node;294,9577
	int (*add)add297,9625
	void (*remove)remove298,9688
	int (*add_dev)add_dev299,9755
	void (*remove_dev)remove_dev300,9817
extern struct class_device *class_device_create(class_device_create308,10150
struct device_attribute 317,10483
	struct attribute	attr;318,10509
	ssize_t (*show)show319,10533
	ssize_t (*store)store321,10616
#define DEVICE_ATTR(325,10725
struct device 335,11239
	struct klist		klist_children;336,11255
	struct klist_node	knode_parent;337,11286
	struct klist_node	knode_driver;338,11347
	struct klist_node	knode_bus;339,11380
	struct device 	* parent;340,11410
	struct kobject kobj;342,11437
	char	bus_id[bus_id343,11459
	unsigned		is_registered:is_registered344,11515
	struct device_attribute uevent_attr;345,11543
	struct device_attribute *devt_attr;devt_attr346,11581
	spinlock_t		sem;349,11630
	struct semaphore	sem;351,11654
	struct bus_type	* bus;356,11751
	struct device_driver *driver;driver357,11807
	void		*driver_data;driver_data359,11891
	void		*platform_data;platform_data360,11945
	void		*firmware_data;firmware_data362,12035
	struct dev_pm_info	power;364,12142
	u64		*dma_mask;dma_mask366,12170
	u64		coherent_dma_mask;367,12223
	struct list_head	dma_pools;373,12432
	struct dma_coherent_mem	*dma_mem;dma_mem375,12491
	struct list_head	node;379,12613
	dev_t			devt;381,12675
	struct attribute_group	**groups;groups382,12728
	void	(*release)release384,12785
dev_get_drvdata 388,12849
dev_set_drvdata 394,12936
static inline int device_is_registered(399,13016
extern struct device *device_create(device_create429,14073
#define dev_printk(465,15188
#define dev_dbg(469,15333
#define dev_dbg(472,15427
#define dev_err(475,15502
#define dev_info(477,15588
#define dev_warn(479,15676
#define dev_notice(481,15767
#define MODULE_ALIAS_CHARDEV(485,15904
#define MODULE_ALIAS_CHARDEV_MAJOR(487,16019

xen/include/asm-ia64/linux-xen/asm/atomic.h,1589
#define _ASM_IA64_ATOMIC_H2,27
typedef struct { volatile __s32 counter;23,575
typedef struct { volatile __s32 counter; } atomic_t;23,575
typedef struct { volatile __s64 counter;24,628
typedef struct { volatile __s64 counter; } atomic64_t;24,628
#define ATOMIC_INIT(27,696
#define ATOMIC64_INIT(28,741
#define ATOMIC_INIT(30,795
#define ATOMIC64_INIT(31,827
#define atomic_read(34,868
#define atomic64_read(35,907
#define atomic_set(37,948
#define atomic64_set(38,996
ia64_atomic_add 41,1068
ia64_atomic64_add 55,1324
ia64_atomic_sub 69,1588
ia64_atomic64_sub 83,1844
#define atomic_add_return(96,2086
#define atomic64_add_return(108,2535
atomic_add_negative 125,3096
atomic64_add_negative 131,3201
#define atomic_sub_return(136,3292
#define atomic64_sub_return(148,3745
#define atomic_dec_return(160,4201
#define atomic_inc_return(161,4257
#define atomic64_dec_return(162,4313
#define atomic64_inc_return(163,4373
#define atomic_sub_and_test(165,4434
#define atomic_dec_and_test(166,4502
#define atomic_inc_and_test(167,4567
#define atomic64_sub_and_test(168,4632
#define atomic64_dec_and_test(169,4704
#define atomic64_inc_and_test(170,4772
#define atomic_add(172,4841
#define atomic_sub(173,4895
#define atomic_inc(174,4949
#define atomic_dec(175,4992
#define atomic64_add(177,5036
#define atomic64_sub(178,5093
#define atomic64_inc(179,5150
#define atomic64_dec(180,5197
#define smp_mb__before_atomic_dec(183,5293
#define smp_mb__after_atomic_dec(184,5339
#define smp_mb__before_atomic_inc(185,5384
#define smp_mb__after_atomic_inc(186,5430

xen/include/asm-ia64/linux-xen/asm/machvec.h,8813
#define _ASM_IA64_MACHVEC_H11,330
typedef void ia64_mv_setup_t 24,538
typedef void ia64_mv_cpu_init_t 25,578
typedef void ia64_mv_irq_init_t 26,618
typedef void ia64_mv_send_ipi_t 27,658
typedef void ia64_mv_timer_interrupt_t 28,712
typedef void ia64_mv_global_tlb_purge_t 29,784
typedef void ia64_mv_tlb_migrate_finish_t 30,871
typedef unsigned int ia64_mv_local_vector_to_irq 31,935
typedef char *ia64_mv_pci_get_legacy_mem_t ia64_mv_pci_get_legacy_mem_t32,990
typedef int ia64_mv_pci_legacy_read_t 33,1053
typedef int ia64_mv_pci_legacy_write_t 35,1151
typedef void ia64_mv_kernel_launch_event_t(37,1243
typedef void ia64_mv_dma_init 40,1323
typedef void *ia64_mv_dma_alloc_coherent ia64_mv_dma_alloc_coherent41,1361
typedef void ia64_mv_dma_free_coherent 42,1448
typedef dma_addr_t ia64_mv_dma_map_single 43,1534
typedef void ia64_mv_dma_unmap_single 44,1616
typedef int ia64_mv_dma_map_sg 45,1698
typedef void ia64_mv_dma_unmap_sg 46,1780
typedef void ia64_mv_dma_sync_single_for_cpu 47,1865
typedef void ia64_mv_dma_sync_sg_for_cpu 48,1954
typedef void ia64_mv_dma_sync_single_for_device 49,2046
typedef void ia64_mv_dma_sync_sg_for_device 50,2138
typedef int ia64_mv_dma_mapping_error 51,2233
typedef int ia64_mv_dma_supported 52,2294
typedef unsigned int ia64_mv_inb_t 63,2778
typedef unsigned int ia64_mv_inw_t 64,2830
typedef unsigned int ia64_mv_inl_t 65,2882
typedef void ia64_mv_outb_t 66,2934
typedef void ia64_mv_outw_t 67,2994
typedef void ia64_mv_outl_t 68,3055
typedef void ia64_mv_mmiowb_t 69,3114
typedef unsigned char ia64_mv_readb_t 70,3152
typedef unsigned short ia64_mv_readw_t 71,3223
typedef unsigned int ia64_mv_readl_t 72,3295
typedef unsigned long ia64_mv_readq_t 73,3365
typedef unsigned char ia64_mv_readb_relaxed_t 74,3436
typedef unsigned short ia64_mv_readw_relaxed_t 75,3515
typedef unsigned int ia64_mv_readl_relaxed_t 76,3595
typedef unsigned long ia64_mv_readq_relaxed_t 77,3673
machvec_noop 80,3772
machvec_noop_mm 85,3816
machvec_noop_dma_alloc_coherent 96,4024
machvec_noop_dma_free_coherent 104,4230
machvec_noop_dma_map_single 111,4426
machvec_noop_dma_unmap_single 119,4622
machvec_noop_dma_map_sg 126,4804
machvec_noop_dma_unmap_sg 134,4994
machvec_noop_dma_sync_single_for_cpu 141,5177
#define machvec_noop_dma_sync_single_for_device	147,5355
machvec_noop_dma_sync_sg_for_cpu 151,5464
#define machvec_noop_dma_sync_sg_for_device	158,5676
machvec_noop_dma_mapping_error 162,5776
machvec_noop_dma_supported 169,5900
machvec_noop_pci_get_legacy_mem 176,6031
machvec_noop_pci_legacy_read 183,6156
machvec_noop_pci_legacy_write 190,6307
typedef int ia64_mv_fw_init_t 196,6440
machvec_noop_platform_fw_init 199,6524
#  define platform_name	227,7408
#  define platform_setup	228,7446
#  define platform_cpu_init	229,7485
#  define platform_irq_init	230,7530
#  define platform_send_ipi	231,7575
#  define platform_timer_interrupt	232,7620
#  define platform_global_tlb_purge	233,7679
#  define platform_tlb_migrate_finish	234,7740
#  define platform_dma_init	235,7805
#  define platform_dma_alloc_coherent	236,7851
#  define platform_dma_free_coherent	237,7916
#  define platform_dma_map_single	238,7979
#  define platform_dma_unmap_single	239,8036
#  define platform_dma_map_sg	240,8097
#  define platform_dma_unmap_sg	241,8147
#  define platform_dma_sync_single_for_cpu 242,8201
#  define platform_dma_sync_sg_for_cpu	243,8276
#  define platform_dma_sync_single_for_device 244,8343
#  define platform_dma_sync_sg_for_device 245,8424
#  define platform_dma_mapping_error	246,8497
#  define platform_dma_supported	247,8561
#  define platform_local_vector_to_irq	248,8616
#  define platform_pci_get_legacy_mem	249,8683
#  define platform_pci_legacy_read	250,8748
#  define platform_pci_legacy_write	251,8807
#  define platform_inb	252,8868
#  define platform_inw	253,8904
#  define platform_inl	254,8940
#  define platform_outb	255,8976
#  define platform_outw	256,9014
#  define platform_outl	257,9052
#  define platform_mmiowb	258,9090
#  define platform_readb 259,9131
#  define platform_readw 260,9177
#  define platform_readl 261,9223
#  define platform_readq 262,9269
#  define platform_readb_relaxed 263,9315
#  define platform_readw_relaxed 264,9377
#  define platform_readl_relaxed 265,9439
#  define platform_readq_relaxed 266,9501
#  define platform_kernel_launch_event 267,9563
#  define platform_fw_init 269,9642
struct ia64_machine_vector 278,9910
	const char *name;name279,9939
	ia64_mv_setup_t *setup;setup280,9958
	ia64_mv_cpu_init_t *cpu_init;cpu_init281,9983
	ia64_mv_irq_init_t *irq_init;irq_init282,10014
	ia64_mv_send_ipi_t *send_ipi;send_ipi283,10045
	ia64_mv_timer_interrupt_t *timer_interrupt;timer_interrupt284,10076
	ia64_mv_global_tlb_purge_t *global_tlb_purge;global_tlb_purge285,10121
	ia64_mv_tlb_migrate_finish_t *tlb_migrate_finish;tlb_migrate_finish286,10168
	ia64_mv_dma_init *dma_init;dma_init287,10219
	ia64_mv_dma_alloc_coherent *dma_alloc_coherent;dma_alloc_coherent288,10248
	ia64_mv_dma_free_coherent *dma_free_coherent;dma_free_coherent289,10297
	ia64_mv_dma_map_single *dma_map_single;dma_map_single290,10344
	ia64_mv_dma_unmap_single *dma_unmap_single;dma_unmap_single291,10385
	ia64_mv_dma_map_sg *dma_map_sg;dma_map_sg292,10430
	ia64_mv_dma_unmap_sg *dma_unmap_sg;dma_unmap_sg293,10463
	ia64_mv_dma_sync_single_for_cpu *dma_sync_single_for_cpu;dma_sync_single_for_cpu294,10500
	ia64_mv_dma_sync_sg_for_cpu *dma_sync_sg_for_cpu;dma_sync_sg_for_cpu295,10559
	ia64_mv_dma_sync_single_for_device *dma_sync_single_for_device;dma_sync_single_for_device296,10610
	ia64_mv_dma_sync_sg_for_device *dma_sync_sg_for_device;dma_sync_sg_for_device297,10675
	ia64_mv_dma_mapping_error *dma_mapping_error;dma_mapping_error298,10732
	ia64_mv_dma_supported *dma_supported;dma_supported299,10779
	ia64_mv_local_vector_to_irq *local_vector_to_irq;local_vector_to_irq300,10818
	ia64_mv_pci_get_legacy_mem_t *pci_get_legacy_mem;pci_get_legacy_mem301,10869
	ia64_mv_pci_legacy_read_t *pci_legacy_read;pci_legacy_read302,10920
	ia64_mv_pci_legacy_write_t *pci_legacy_write;pci_legacy_write303,10965
	ia64_mv_inb_t *inb;inb304,11012
	ia64_mv_inw_t *inw;inw305,11033
	ia64_mv_inl_t *inl;inl306,11054
	ia64_mv_outb_t *outb;outb307,11075
	ia64_mv_outw_t *outw;outw308,11098
	ia64_mv_outl_t *outl;outl309,11121
	ia64_mv_mmiowb_t *mmiowb;mmiowb310,11144
	ia64_mv_readb_t *readb;readb311,11171
	ia64_mv_readw_t *readw;readw312,11196
	ia64_mv_readl_t *readl;readl313,11221
	ia64_mv_readq_t *readq;readq314,11246
	ia64_mv_readb_relaxed_t *readb_relaxed;readb_relaxed315,11271
	ia64_mv_readw_relaxed_t *readw_relaxed;readw_relaxed316,11312
	ia64_mv_readl_relaxed_t *readl_relaxed;readl_relaxed317,11353
	ia64_mv_readq_relaxed_t *readq_relaxed;readq_relaxed318,11394
	ia64_mv_kernel_launch_event_t *kernel_launch_event;kernel_launch_event319,11435
	ia64_mv_fw_init_t *fw_init;fw_init321,11499
#define MACHVEC_INIT(326,11621
#define MACHVEC_INIT(372,12817
# define platform_setup	447,15160
# define platform_cpu_init	450,15233
# define platform_irq_init	453,15307
# define platform_send_ipi	457,15382
# define platform_timer_interrupt 460,15501
# define platform_global_tlb_purge	463,15601
# define platform_tlb_migrate_finish	466,15738
# define platform_kernel_launch_event	469,15835
# define platform_dma_init	472,15919
# define platform_dma_alloc_coherent	475,16003
# define platform_dma_free_coherent	478,16105
# define platform_dma_map_single	481,16202
# define platform_dma_unmap_single	484,16295
# define platform_dma_map_sg	487,16386
# define platform_dma_unmap_sg	490,16468
# define platform_dma_sync_single_for_cpu	493,16565
# define platform_dma_sync_sg_for_cpu	496,16679
# define platform_dma_sync_single_for_device	499,16793
# define platform_dma_sync_sg_for_device	502,16916
# define platform_dma_mapping_error	505,17026
# define  platform_dma_supported	508,17127
# define platform_local_vector_to_irq	511,17226
# define platform_pci_get_legacy_mem	514,17334
# define platform_pci_legacy_read	517,17435
# define platform_pci_legacy_write	520,17531
# define platform_inb	523,17616
# define platform_inw	526,17678
# define platform_inl	529,17740
# define platform_outb	532,17803
# define platform_outw	535,17868
# define platform_outl	538,17933
# define platform_mmiowb	541,18000
# define platform_readb	544,18069
# define platform_readw	547,18137
# define platform_readl	550,18205
# define platform_readq	553,18273
# define platform_readb_relaxed	556,18349
# define platform_readw_relaxed	559,18440
# define platform_readl_relaxed	562,18531
# define platform_readq_relaxed	565,18622
# define platform_fw_init	569,18718

xen/include/asm-ia64/linux-xen/asm/page.h,2832
#define _ASM_IA64_PAGE_H2,25
#define RGN_SHIFT	16,321
#define RGN_BASE(17,342
#define RGN_BITS	18,379
#define RGN_HPAGE	19,409
# define REGION_HPAGE	21,468
# define PAGE_SHIFT	29,611
# define PAGE_SHIFT	31,675
# define PAGE_SHIFT	33,740
# define PAGE_SHIFT	35,805
#define PAGE_SIZE	40,873
#define PAGE_MASK	41,927
#define PAGE_ALIGN(42,965
#define PERCPU_PAGE_SHIFT	44,1030
#define PERCPU_PAGE_SIZE	45,1101
#define RGN_MAP_LIMIT	47,1169
# define REGION_HPAGE	50,1290
# define REGION_SHIFT	51,1369
# define HPAGE_REGION_BASE	52,1395
# define HPAGE_SHIFT	53,1453
# define HPAGE_SHIFT_DEFAULT	54,1487
# define HPAGE_SIZE	55,1572
# define HPAGE_MASK	56,1629
# define HAVE_ARCH_HUGETLB_UNMAPPED_AREA58,1671
# define ARCH_HAS_HUGEPAGE_ONLY_RANGE59,1712
# define __pa(63,1804
# define __va(64,1842
#  define STRICT_MM_TYPECHECKS67,1923
#define clear_user_page(76,2177
#define copy_user_page(82,2299
#define alloc_zeroed_user_highpage(89,2442
#define __HAVE_ARCH_ALLOC_ZEROED_USER_HIGHPAGE98,2649
#define virt_addr_valid(100,2697
# define ia64_mfn_valid(106,2861
# define mfn_valid(110,2928
# define page_to_mfn(111,2998
# define mfn_to_page(112,3060
# define mfn_valid(116,3174
# define page_to_mfn(117,3246
# define mfn_to_page(118,3309
#define page_to_maddr(121,3362
#define virt_to_page(122,3424
typedef union ia64_va 125,3499
		unsigned long off 127,3533
		unsigned long reg 128,3586
	} f;129,3633
	unsigned long l;130,3639
	void *p;p131,3657
} ia64_va;132,3667
#define __pa(141,3911
#define __va(142,3983
#define REGION_NUMBER(145,4074
#define REGION_OFFSET(146,4144
#define REGION_SIZE	148,4215
#define REGION_KERNEL	149,4253
# define htlbpage_to_page(152,4306
# define HUGETLB_PAGE_ORDER	154,4436
# define is_hugepage_only_range(155,4491
get_order 162,4698
  typedef struct { unsigned long pte;181,5033
  typedef struct { unsigned long pte; } pte_t;181,5033
  typedef struct { unsigned long pmd;182,5080
  typedef struct { unsigned long pmd; } pmd_t;182,5080
  typedef struct { unsigned long pgd;183,5127
  typedef struct { unsigned long pgd; } pgd_t;183,5127
  typedef struct { unsigned long pgprot;184,5174
  typedef struct { unsigned long pgprot; } pgprot_t;184,5174
# define pte_val(186,5228
# define pmd_val(187,5258
# define pgd_val(188,5288
# define pgprot_val(189,5318
# define __pte(191,5355
# define __pgprot(192,5392
    typedef unsigned long pte_t;199,5554
    typedef unsigned long pmd_t;200,5587
    typedef unsigned long pgd_t;201,5620
    typedef unsigned long pgprot_t;202,5653
# define pte_val(205,5698
# define pmd_val(206,5722
# define pgd_val(207,5746
# define pgprot_val(208,5770
# define __pte(210,5798
# define __pgd(211,5820
# define __pgprot(212,5842
#define PAGE_OFFSET	216,5915
#define VM_DATA_DEFAULT_FLAGS	218,5974

xen/include/asm-ia64/linux-xen/asm/pci.h,1638
#define _ASM_IA64_PCI_H2,24
#define pcibios_assign_all_busses(21,467
#define pcibios_scan_all_fns(22,509
#define PCIBIOS_MIN_IO	24,547
#define PCIBIOS_MIN_MEM	25,578
#define PCI_DMA_BUS_IS_PHYS	44,1451
pcibios_set_master 47,1535
pcibios_penalize_isa_irq 53,1647
#define HAVE_ARCH_PCI_MWI 58,1745
#define DECLARE_PCI_UNMAP_ADDR(64,1915
#define DECLARE_PCI_UNMAP_LEN(66,1982
#define pci_unmap_addr(68,2042
#define pci_unmap_addr_set(70,2105
#define pci_unmap_len(72,2186
#define pci_unmap_len_set(74,2246
#define pci_dac_dma_supported(78,2384
#define pci_dac_page_to_dma(79,2434
#define pci_dac_dma_to_page(80,2518
#define pci_dac_dma_to_offset(81,2599
#define pci_dac_dma_sync_single_for_cpu(82,2669
#define pci_dac_dma_sync_single_for_device(83,2748
#define sg_dma_len(85,2837
#define sg_dma_address(86,2880
static inline void pci_dma_burst_advice(89,2946
#define HAVE_PCI_MMAP107,3356
#define HAVE_PCI_LEGACY110,3515
#define pci_get_legacy_mem 123,3989
#define pci_legacy_read 124,4044
#define pci_legacy_write 125,4093
struct pci_window 127,4145
	struct resource resource;128,4165
	u64 offset;129,4192
struct pci_controller 132,4209
	void *acpi_handle;acpi_handle133,4233
	void *iommu;iommu134,4253
	int segment;135,4267
	int node;136,4281
	unsigned int windows;138,4353
	struct pci_window *window;window139,4376
	void *platform_data;platform_data141,4405
#define PCI_CONTROLLER(144,4431
#define pci_domain_nr(145,4506
static inline int pci_proc_domain(149,4611
static inline void pcibios_add_platform_entries(154,4706
pcibios_select_root(166,5052
#define pcibios_scan_all_fns(179,5295

xen/include/asm-ia64/linux-xen/asm/perfmon.h,5200
#define _ASM_IA64_PERFMON_H7,137
#define pt_regs 12,217
#define PFM_WRITE_PMCS	20,339
#define PFM_WRITE_PMDS	21,368
#define PFM_READ_PMDS	22,397
#define PFM_STOP	23,425
#define PFM_START	24,448
#define PFM_ENABLE	25,472
#define PFM_DISABLE	26,512
#define PFM_CREATE_CONTEXT	27,553
#define PFM_DESTROY_CONTEXT	28,585
#define PFM_RESTART	29,645
#define PFM_PROTECT_CONTEXT	30,671
#define PFM_GET_FEATURES	31,719
#define PFM_DEBUG	32,749
#define PFM_UNPROTECT_CONTEXT	33,773
#define PFM_GET_PMC_RESET_VAL	34,823
#define PFM_LOAD_CONTEXT	35,858
#define PFM_UNLOAD_CONTEXT	36,888
#define PFM_WRITE_IBRS	41,1000
#define PFM_WRITE_DBRS	42,1029
#define PFM_FL_NOTIFY_BLOCK 47,1083
#define PFM_FL_SYSTEM_WIDE	48,1166
#define PFM_FL_OVFL_NO_MSG	49,1234
#define PFM_SETFL_EXCL_IDLE 54,1353
#define PFM_REGFL_OVFL_NOTIFY	59,1473
#define PFM_REGFL_RANDOM	60,1543
#define PFM_REG_RETFL_NOTAVAIL	68,1822
#define PFM_REG_RETFL_EINVAL	69,1918
#define PFM_REG_RETFL_MASK	70,1996
#define PFM_REG_HAS_ERROR(72,2070
typedef unsigned char pfm_uuid_t[pfm_uuid_t74,2140
	pfm_uuid_t     ctx_smpl_buf_id;80,2294
	unsigned long  ctx_flags;81,2373
	unsigned short ctx_nextra_sets;82,2421
	unsigned short ctx_reserved1;83,2507
	int	       ctx_fd;84,2560
	void	       *ctx_smpl_vaddr;ctx_smpl_vaddr85,2634
	unsigned long  ctx_reserved2[ctx_reserved286,2727
} pfarg_context_t;87,2782
	unsigned int	reg_num;93,2879
	unsigned short	reg_set;94,2926
	unsigned short	reg_reserved1;95,2988
	unsigned long	reg_value;97,3044
	unsigned long	reg_flags;98,3101
	unsigned long	reg_long_reset;100,3177
	unsigned long	reg_short_reset;101,3258
	unsigned long	reg_reset_pmds[reg_reset_pmds103,3328
	unsigned long	reg_random_seed;104,3410
	unsigned long	reg_random_mask;105,3488
	unsigned long   reg_last_reset_val;106,3563
	unsigned long	reg_smpl_pmds[reg_smpl_pmds108,3635
	unsigned long	reg_smpl_eventid;109,3718
	unsigned long   reg_reserved2[reg_reserved2111,3792
} pfarg_reg_t;112,3850
	unsigned int	dbreg_num;115,3883
	unsigned short	dbreg_set;116,3936
	unsigned short	dbreg_reserved1;117,3998
	unsigned long	dbreg_value;118,4052
	unsigned long	dbreg_flags;119,4112
	unsigned long	dbreg_reserved2[dbreg_reserved2120,4167
} pfarg_dbreg_t;121,4223
	unsigned int	ft_version;124,4258
	unsigned int	ft_reserved;125,4327
	unsigned long	reserved[reserved126,4384
} pfarg_features_t;127,4433
	pid_t		load_pid;130,4471
	unsigned short	load_set;131,4531
	unsigned short	load_reserved1;132,4590
	unsigned long	load_reserved2[load_reserved2133,4646
} pfarg_load_t;134,4701
	int		msg_type;137,4735
	int		msg_ctx_fd;138,4781
	unsigned long	msg_ovfl_pmds[msg_ovfl_pmds139,4829
	unsigned short  msg_active_set;140,4890
	unsigned short  msg_reserved1;141,4965
	unsigned int    msg_reserved2;142,5019
	unsigned long	msg_tstamp;143,5073
} pfm_ovfl_msg_t;144,5129
	int		msg_type;147,5165
	int		msg_ctx_fd;148,5211
	unsigned long	msg_tstamp;149,5259
} pfm_end_msg_t;150,5309
	int		msg_type;153,5344
	int		msg_ctx_fd;154,5387
	unsigned long	msg_tstamp;155,5446
} pfm_gen_msg_t;156,5496
#define PFM_MSG_OVFL	158,5514
#define PFM_MSG_END	159,5564
	pfm_ovfl_msg_t	pfm_ovfl_msg;162,5650
	pfm_end_msg_t	pfm_end_msg;163,5680
	pfm_gen_msg_t	pfm_gen_msg;164,5708
} pfm_msg_t;165,5736
#define PFM_VERSION_MAJ	170,5847
#define PFM_VERSION_MIN	171,5876
#define PFM_VERSION	172,5905
#define PFM_VERSION_MAJOR(173,5987
#define PFM_VERSION_MINOR(174,6038
#define PMU_FIRST_COUNTER	180,6133
#define PMU_MAX_PMCS	181,6200
#define PMU_MAX_PMDS	182,6276
	void (*handler)handler189,6452
} pfm_intr_handler_desc_t;190,6512
#define PFM_PMD_SHORT_RESET	210,7233
#define PFM_PMD_LONG_RESET	211,7263
	unsigned int val;214,7309
		unsigned int notify_user:notify_user216,7338
		unsigned int reset_ovfl_pmds:reset_ovfl_pmds217,7406
		unsigned int block_task:block_task218,7468
		unsigned int mask_monitoring:mask_monitoring219,7539
		unsigned int reserved:reserved220,7606
	} bits;221,7655
} pfm_ovfl_ctrl_t;222,7664
	unsigned char	ovfl_pmd;225,7701
	unsigned char   ovfl_notify;226,7759
	unsigned short  active_set;227,7843
	pfm_ovfl_ctrl_t ovfl_ctrl;228,7925
	unsigned long   pmd_last_reset;230,8005
	unsigned long	smpl_pmds[smpl_pmds231,8077
	unsigned long   smpl_pmds_values[smpl_pmds_values232,8159
	unsigned long   pmd_value;233,8252
	unsigned long	pmd_eventid;234,8320
} pfm_ovfl_arg_t;235,8384
	char		*fmt_name;fmt_name239,8421
	pfm_uuid_t	fmt_uuid;240,8439
	size_t		fmt_arg_size;241,8461
	unsigned long	fmt_flags;242,8484
	int		(*fmt_validate)fmt_validate244,8511
	int		(*fmt_getsize)fmt_getsize245,8600
	int 		(*fmt_init)fmt_init246,8709
	int		(*fmt_handler)fmt_handler247,8806
	int		(*fmt_restart)fmt_restart248,8929
	int		(*fmt_restart_active)fmt_restart_active249,9033
	int		(*fmt_exit)fmt_exit250,9144
	struct list_head fmt_list;252,9223
} pfm_buffer_fmt_t;253,9251
#define PFM_CPUINFO_SYST_WIDE	269,9937
#define PFM_CPUINFO_DCR_PP	270,10013
#define PFM_CPUINFO_EXCL_IDLE	271,10093
	int	debug;277,10262
	int	debug_ovfl;278,10314
	int	fastctxsw;279,10382
	int	expert_mode;280,10438
} pfm_sysctl_t;281,10489

xen/include/asm-ia64/linux-xen/asm/smp.h,812
#define _ASM_IA64_SMP_H11,306
ia64_get_lid 26,608
			unsigned long reserved 30,650
			unsigned long eid 31,682
			unsigned long id 32,708
			unsigned long ignored 33,733
		} f;34,764
		unsigned long bits;35,771
#define XTP_OFFSET	44,902
#define SMP_IRQ_REDIRECTION	46,932
#define SMP_IPI_REDIRECTION	47,969
#define raw_smp_processor_id(50,1018
#define raw_smp_processor_id(52,1076
extern struct smp_boot_data 55,1144
	int cpu_count;56,1174
	int cpu_phys_id[cpu_phys_id57,1190
} smp_boot_data __initdata;58,1217
#define cpu_is_offline(63,1322
#define cpu_physical_id(73,1642
cpu_logical_id 82,1872
min_xtp 100,2187
normal_xtp 107,2332
max_xtp 114,2480
#define hard_smp_processor_id(120,2610
extern void cpu_die 123,2692
#define cpu_logical_id(143,3305
#define cpu_physical_id(144,3334

xen/include/asm-ia64/linux-xen/asm/pgtable.h,7124
#define _ASM_IA64_PGTABLE_H2,28
#define IA64_MAX_PHYS_BITS	30,654
#define _PAGE_P_BIT	38,962
#define _PAGE_A_BIT	39,985
#define _PAGE_D_BIT	40,1008
#define _PAGE_P	42,1032
#define _PAGE_MA_WB	43,1092
#define _PAGE_RV1_BIT	45,1170
#define _PAGE_RV2_BIT	46,1195
#define _PAGE_RV1	47,1221
#define _PAGE_RV2	48,1291
#define _PAGE_MA_ST	50,1363
#define _PAGE_MA_UC	52,1438
#define _PAGE_MA_UCE	53,1506
#define _PAGE_MA_WC	54,1568
#define _PAGE_MA_NAT	55,1641
#define _PAGE_MA_MASK	56,1703
#define _PAGE_PL_0	57,1738
#define _PAGE_PL_1	58,1801
#define _PAGE_PL_2	59,1864
#define _PAGE_PL_3	60,1927
#define _PAGE_PL_MASK	61,1988
#define _PAGE_AR_R	62,2021
#define _PAGE_AR_RX	63,2067
#define _PAGE_AR_RW	64,2119
#define _PAGE_AR_RWX	65,2169
#define _PAGE_AR_R_RW	66,2229
#define _PAGE_AR_RX_RWX	67,2288
#define _PAGE_AR_RWX_RW	68,2362
#define _PAGE_AR_X_RX	69,2437
#define _PAGE_AR_MASK	70,2505
#define _PAGE_AR_SHIFT	71,2538
#define _PAGE_A	72,2564
#define _PAGE_D	73,2625
#define _PAGE_PPN_MASK	74,2683
#define _PAGE_ED	75,2763
#define _PAGE_VIRT_D	77,2838
#define _PAGE_PROTNONE	78,2905
#define _PAGE_PL_PRIV	79,2931
#define _PAGE_TLB_TRACKING_BIT 82,3012
#define _PAGE_TLB_INSERTED_BIT 83,3055
#define _PAGE_TLB_INSERTED_MANY_BIT 84,3098
#define _PAGE_TLB_TRACKING 86,3142
#define _PAGE_TLB_INSERTED 87,3214
#define _PAGE_TLB_INSERTED_MANY 88,3286
#define _PAGE_TLB_TRACK_MASK 89,3363
#define pte_tlb_tracking(93,3560
#define pte_tlb_inserted(95,3642
#define pte_tlb_inserted_many(97,3724
#define _PAGE_PGC_ALLOCATED_BIT	101,3852
#define _PAGE_PGC_ALLOCATED	102,3908
#define _PAGE_IO_BIT	104,3979
#define _PAGE_IO	105,4004
#define _PAGE_PROTNONE	108,4060
#define _PAGE_FILE	112,4170
#define _PFN_MASK	114,4241
#define _PAGE_CHG_MASK	116,4374
#define _PAGE_SIZE_4K	118,4468
#define _PAGE_SIZE_8K	119,4493
#define _PAGE_SIZE_16K	120,4518
#define _PAGE_SIZE_64K	121,4544
#define _PAGE_SIZE_256K	122,4570
#define _PAGE_SIZE_1M	123,4597
#define _PAGE_SIZE_4M	124,4622
#define _PAGE_SIZE_16M	125,4647
#define _PAGE_SIZE_64M	126,4673
#define _PAGE_SIZE_256M	127,4699
#define _PAGE_SIZE_1G	128,4726
#define _PAGE_SIZE_4G	129,4751
#define __ACCESS_BITS	131,4777
#define __DIRTY_BITS_NO_ED	132,4843
#define __DIRTY_BITS	133,4912
#define PGDIR_SHIFT	140,5078
#define PGDIR_SIZE	141,5131
#define PGDIR_MASK	142,5181
#define PTRS_PER_PGD	143,5219
#define USER_PTRS_PER_PGD	144,5265
#define FIRST_USER_ADDRESS	145,5345
#define PMD_SHIFT	153,5501
#define PMD_SIZE	154,5549
#define PMD_MASK	155,5585
#define PTRS_PER_PMD	156,5618
#define PTRS_PER_PTE	161,5703
#define PAGE_NONE	168,5926
#define PAGE_SHARED	169,5979
#define PAGE_READONLY	170,6050
#define PAGE_COPY	171,6122
#define PAGE_COPY_EXEC	172,6190
#define PAGE_GATE	173,6264
#define PAGE_KERNEL	174,6335
#define PAGE_KERNELRX	175,6407
#define __P000	193,7012
#define __P001	194,7037
#define __P010	195,7066
#define __P011	196,7142
#define __P100	197,7183
#define __P101	198,7251
#define __P110	199,7317
#define __P111	200,7347
#define __S000	202,7378
#define __S001	203,7403
#define __S010	204,7432
#define __S011	205,7507
#define __S100	206,7534
#define __S101	207,7602
#define __S110	208,7668
#define __S111	209,7735
#define pgd_ERROR(211,7803
#define pmd_ERROR(212,7891
#define pte_ERROR(213,7979
ia64_phys_addr_valid 223,8248
#define kern_addr_valid(241,8977
#define set_pte(253,9254
#define set_pte_at(254,9305
set_pte_rel(257,9396
#define RGN_SIZE	269,9616
#define RGN_KERNEL	270,9645
#define VMALLOC_START	272,9667
# define VMALLOC_END_INIT	274,9741
# define VMALLOC_END	275,9820
# define VMALLOC_END	278,9896
#define	kc_vaddr_to_offset(282,10001
#define	kc_offset_to_vaddr(283,10060
#define pfn_pte(289,10239
#define pte_pfn(293,10387
#define mk_pte(295,10455
#define mk_pte_phys(298,10603
#define pte_modify(301,10718
#define page_pte_prot(304,10840
#define page_pte(305,10892
#define pte_none(307,10951
#define pte_present(308,10992
#define pte_clear(309,11062
#define pte_page(311,11189
#define pmd_none(313,11271
#define pmd_bad(314,11311
#define pmd_present(315,11372
#define pmd_clear(316,11420
#define pmd_page_kernel(317,11471
#define pmd_page(318,11550
#define pud_none(320,11618
#define pud_bad(321,11658
#define pud_present(322,11719
#define pud_clear(323,11767
#define pud_page(325,11819
#define pte_user(330,11975
#define pte_read(331,12045
#define pte_write(332,12125
#define pte_exec(333,12223
#define pte_dirty(334,12282
#define pte_young(335,12338
#define pte_file(336,12394
#define pte_pgc_allocated(338,12463
#define pte_mem(339,12538
#define pte_wrprotect(345,12723
#define pte_mkwrite(346,12787
#define pte_mkexec(347,12848
#define pte_mkold(348,12909
#define pte_mkyoung(349,12966
#define pte_mkclean(350,13023
#define pte_mkdirty(351,13081
#define pte_mkhuge(352,13138
#define pgprot_noncached(359,13417
#define pgprot_writecombine(369,13926
pgd_index 372,14049
pgd_offset 387,14438
#define pgd_offset_k(394,14657
#define pgd_offset_gate(400,14899
#define pmd_offset(404,15018
#define pmd_offset(407,15132
#define pte_index(415,15419
#define pte_offset_kernel(417,15503
#define pte_offset_kernel(419,15599
#define pte_offset_map(421,15705
#define pte_offset_map_nested(422,15767
#define pte_unmap(423,15833
#define pte_unmap_nested(424,15875
ptep_test_and_clear_young 430,16008
ptep_test_and_clear_dirty 446,16351
ptep_get_and_clear(464,16716
ptep_xchg(482,17078
ptep_cmpxchg_rel(495,17330
ptep_set_wrprotect(513,17707
pte_same 529,18074
#define update_mmu_cache(534,18141
#define __swp_type(559,18973
#define __swp_offset(560,19028
#define __swp_entry(561,19084
#define __pte_to_swp_entry(562,19176
#define __swp_entry_to_pte(563,19242
#define PTE_FILE_MAX_BITS	565,19296
#define pte_to_pgoff(566,19326
#define pgoff_to_pte(567,19380
#define io_remap_page_range(570,19473
#define io_remap_pfn_range(573,19601
#define MK_IOSPACE_PFN(576,19708
#define GET_IOSPACE(577,19749
#define GET_PFN(578,19777
#define ZERO_PAGE(587,20040
#define HAVE_ARCH_UNMAPPED_AREA591,20174
#define HUGETLB_PGDIR_SHIFT	594,20234
#define HUGETLB_PGDIR_SIZE	595,20295
#define HUGETLB_PGDIR_MASK	596,20360
#define __HAVE_ARCH_PTEP_SET_ACCESS_FLAGS609,20839
# define ptep_set_access_flags(633,21913
# define ptep_set_access_flags(641,22155
#   define __HAVE_ARCH_MEMMAP_INIT647,22405
# define IA64_GRANULE_SHIFT	659,22831
# define IA64_GRANULE_SHIFT	661,22914
#define IA64_GRANULE_SIZE	663,22964
#define KERNEL_TR_PAGE_SHIFT	667,23099
#define KERNEL_TR_PAGE_SIZE	668,23143
#define pgtable_cache_init(673,23245
#define FIXADDR_USER_START	676,23383
# define FIXADDR_USER_END	678,23445
# define FIXADDR_USER_END	680,23503
#define __HAVE_ARCH_PTEP_TEST_AND_CLEAR_YOUNG683,23570
#define __HAVE_ARCH_PTEP_TEST_AND_CLEAR_DIRTY684,23616
#define __HAVE_ARCH_PTEP_GET_AND_CLEAR685,23662
#define __HAVE_ARCH_PTEP_SET_WRPROTECT686,23701
#define __HAVE_ARCH_PTE_SAME687,23740
#define __HAVE_ARCH_PGD_OFFSET_GATE688,23769
#define __HAVE_ARCH_LAZY_MMU_PROT_UPDATE689,23805

xen/include/asm-ia64/linux-xen/asm/pal.h,21861
#define _ASM_IA64_PAL_H2,24
#define PAL_CACHE_FLUSH	32,1253
#define PAL_CACHE_INFO	33,1302
#define PAL_CACHE_INIT	34,1362
#define PAL_CACHE_SUMMARY	35,1415
#define PAL_MEM_ATTRIB	36,1480
#define PAL_PTCE_INFO	37,1545
#define PAL_VM_INFO	38,1591
#define PAL_VM_SUMMARY	39,1661
#define PAL_BUS_GET_FEATURES	40,1733
#define PAL_BUS_SET_FEATURES	41,1819
#define PAL_DEBUG_INFO	42,1884
#define PAL_FIXED_ADDR	43,1947
#define PAL_FREQ_BASE	44,2033
#define PAL_FREQ_RATIOS	45,2096
#define PAL_PERF_MON_INFO	46,2172
#define PAL_PLATFORM_ADDR	47,2239
#define PAL_PROC_GET_FEATURES	48,2327
#define PAL_PROC_SET_FEATURES	49,2413
#define PAL_RSE_INFO	50,2499
#define PAL_VERSION	51,2553
#define PAL_MC_CLEAR_LOG	52,2610
#define PAL_MC_DRAIN	53,2673
#define PAL_MC_EXPECTED	54,2750
#define PAL_MC_DYNAMIC_STATE	55,2817
#define PAL_MC_ERROR_INFO	56,2883
#define PAL_MC_RESUME	57,2958
#define PAL_MC_REGISTER_MEM	58,3020
#define PAL_HALT	59,3110
#define PAL_HALT_LIGHT	60,3168
#define PAL_COPY_INFO	61,3237
#define PAL_CACHE_LINE_INIT	62,3305
#define PAL_PMI_ENTRYPOINT	63,3373
#define PAL_ENTER_IA_32_ENV	64,3461
#define PAL_VM_PAGE_SIZE	65,3529
#define PAL_MEM_FOR_TEST	67,3604
#define PAL_CACHE_PROT_INFO	68,3690
#define PAL_REGISTER_INFO	69,3757
#define PAL_SHUTDOWN	70,3829
#define PAL_PREFETCH_VISIBILITY	71,3891
#define PAL_LOGICAL_TO_PHYSICAL 72,3966
#define PAL_CACHE_SHARED_INFO	73,4068
#define PAL_GET_HW_POLICY	74,4165
#define PAL_SET_HW_POLICY	75,4245
#define PAL_COPY_PAL	77,4326
#define PAL_HALT_INFO	78,4394
#define PAL_TEST_PROC	79,4474
#define PAL_CACHE_READ	80,4540
#define PAL_CACHE_WRITE	81,4626
#define PAL_VM_TR_READ	82,4714
#define PAL_GET_PSTATE	83,4786
#define PAL_SET_PSTATE	84,4844
#define PAL_BRAND_INFO	85,4894
#define PAL_GET_PSTATE_TYPE_LASTSET	87,4960
#define PAL_GET_PSTATE_TYPE_AVGANDRESET	88,4998
#define PAL_GET_PSTATE_TYPE_AVGNORESET	89,5040
#define PAL_GET_PSTATE_TYPE_INSTANT	90,5081
typedef s64				pal_status_t;106,5389
#define PAL_STATUS_SUCCESS	108,5419
#define PAL_STATUS_UNIMPLEMENTED	109,5464
#define PAL_STATUS_EINVAL	110,5532
#define PAL_STATUS_ERROR	111,5587
#define PAL_STATUS_CACHE_INIT_FAIL	112,5630
#define PAL_STATUS_REQUIRES_MEMORY	117,5810
typedef u64				pal_cache_level_t;120,5934
#define PAL_CACHE_LEVEL_L0	121,5968
#define PAL_CACHE_LEVEL_L1	122,6007
#define PAL_CACHE_LEVEL_L2	123,6046
typedef u64				pal_cache_type_t;128,6154
#define PAL_CACHE_TYPE_INSTRUCTION	129,6187
#define PAL_CACHE_TYPE_DATA	130,6248
#define PAL_CACHE_TYPE_INSTRUCTION_DATA	131,6307
#define PAL_CACHE_TYPE_COHERENT	133,6390
#define PAL_CACHE_FLUSH_INVALIDATE	137,6464
#define PAL_CACHE_FLUSH_CHK_INTRS	138,6530
typedef int				pal_cache_line_size_t;141,6654
typedef u64				pal_cache_line_state_t;144,6726
#define PAL_CACHE_LINE_STATE_INVALID	145,6765
#define PAL_CACHE_LINE_STATE_SHARED	146,6818
#define PAL_CACHE_LINE_STATE_EXCLUSIVE	147,6869
#define PAL_CACHE_LINE_STATE_MODIFIED	148,6926
typedef struct pal_freq_ratio 150,6982
	u32 den,151,7014
	u32 den, num;151,7014
} itc_ratio, proc_ratio;152,7060
typedef	union  pal_cache_config_info_1_s 154,7086
		u64		u	156,7139
				at	157,7178
				reserved	158,7215
				associativity	159,7252
				line_size	160,7299
				stride	161,7340
				store_latency	162,7376
				load_latency	163,7423
				store_hints	164,7469
				load_hints	165,7513
	} pcci1_bits;166,7556
	u64			pcci1_data;167,7571
} pal_cache_config_info_1_t;168,7590
typedef	union  pal_cache_config_info_2_s 170,7620
		u32		cache_size;172,7673
		u32		alias_boundary	175,7719
				tag_ls_bit	179,7831
				tag_ms_bit	180,7874
				reserved	181,7917
	} pcci2_bits;182,7956
	u64			pcci2_data;183,7971
} pal_cache_config_info_2_t;184,7990
typedef struct pal_cache_config_info_s 187,8021
	pal_status_t			pcci_status;188,8062
	pal_cache_config_info_1_t	pcci_info_1;189,8091
	pal_cache_config_info_2_t	pcci_info_2;190,8131
	u64				pcci_reserved;191,8171
} pal_cache_config_info_t;192,8194
#define pcci_ld_hints	194,8222
#define pcci_st_hints	195,8279
#define pcci_ld_latency	196,8337
#define pcci_st_latency	197,8398
#define pcci_stride	198,8460
#define pcci_line_size	199,8511
#define pcci_assoc	200,8568
#define pcci_cache_attr	201,8625
#define pcci_unified	202,8676
#define pcci_tag_msb	203,8723
#define pcci_tag_lsb	204,8779
#define pcci_alias_boundary	205,8835
#define pcci_cache_size	206,8901
#define PAL_CACHE_ATTR_WT	212,9007
#define PAL_CACHE_ATTR_WB	213,9062
#define PAL_CACHE_ATTR_WT_OR_WB	214,9114
#define PAL_CACHE_HINT_TEMP_1	222,9288
#define PAL_CACHE_HINT_NTEMP_1	223,9344
#define PAL_CACHE_HINT_NTEMP_ALL	224,9405
typedef union pal_cache_protection_element_u 227,9517
	u32			pcpi_data;228,9564
		u32		data_bits	230,9592
				tagprot_lsb	234,9694
				tagprot_msb	235,9732
				prot_bits	239,9854
				method	240,9900
				t_d	241,9941
	} pcp_info;246,10083
} pal_cache_protection_element_t;247,10096
#define pcpi_cache_prot_part	249,10131
#define pcpi_prot_method	250,10173
#define pcpi_prot_bits	251,10214
#define pcpi_tagprot_msb	252,10257
#define pcpi_tagprot_lsb	253,10303
#define pcpi_data_bits	254,10349
#define PAL_CACHE_PROT_PART_DATA	257,10430
#define PAL_CACHE_PROT_PART_TAG	258,10488
#define PAL_CACHE_PROT_PART_TAG_DATA	259,10545
#define PAL_CACHE_PROT_PART_DATA_TAG	262,10653
#define PAL_CACHE_PROT_PART_MAX	265,10762
typedef struct pal_cache_protection_info_s 268,10799
	pal_status_t			pcpi_status;269,10844
	pal_cache_protection_element_t	pcp_info[pcp_info270,10873
} pal_cache_protection_info_t;271,10940
#define PAL_CACHE_PROT_METHOD_NONE	275,11023
#define PAL_CACHE_PROT_METHOD_ODD_PARITY	276,11081
#define PAL_CACHE_PROT_METHOD_EVEN_PARITY	277,11141
#define PAL_CACHE_PROT_METHOD_ECC	278,11203
typedef union pal_cache_line_id_u 282,11322
	u64			pclid_data;283,11358
		u64		cache_type	285,11387
				level	286,11431
				way	290,11523
				part	292,11572
				reserved	295,11635
	} pclid_info_read;296,11677
		u64		cache_type	298,11707
				level	299,11751
				way	303,11843
				part	305,11892
				mesi	308,11955
				start	311,12017
				length	314,12085
				trigger	317,12148
	} pclid_info_write;322,12253
} pal_cache_line_id_u_t;323,12274
#define pclid_read_part	325,12300
#define pclid_read_way	326,12346
#define pclid_read_level	327,12390
#define pclid_read_cache_type	328,12437
#define pclid_write_trigger	330,12495
#define pclid_write_length	331,12548
#define pclid_write_start	332,12599
#define pclid_write_mesi	333,12648
#define pclid_write_part	334,12695
#define pclid_write_way	335,12742
#define pclid_write_level	336,12788
#define pclid_write_cache_type	337,12837
#define PAL_CACHE_LINE_ID_PART_DATA	340,12939
#define PAL_CACHE_LINE_ID_PART_TAG	341,12989
#define PAL_CACHE_LINE_ID_PART_DATA_PROT	342,13037
#define PAL_CACHE_LINE_ID_PART_TAG_PROT	343,13102
#define PAL_CACHE_LINE_ID_PART_DATA_TAG_PROT	344,13166
typedef struct pal_cache_line_info_s 347,13257
	pal_status_t		pcli_status;348,13296
	u64			pcli_data;351,13397
	u64			pcli_data_len;352,13459
	pal_cache_line_state_t	pcli_cache_line_state;353,13508
} pal_cache_line_info_t;355,13573
typedef u64					pal_mc_pending_events_t;361,13667
#define PAL_MC_PENDING_MCA	363,13709
#define PAL_MC_PENDING_INIT	364,13747
typedef u64					pal_mc_info_index_t;367,13816
#define PAL_MC_INFO_PROCESSOR	369,13854
#define PAL_MC_INFO_CACHE_CHECK	370,13904
#define PAL_MC_INFO_TLB_CHECK	371,13958
#define PAL_MC_INFO_BUS_CHECK	372,14008
#define PAL_MC_INFO_REQ_ADDR	373,14058
#define PAL_MC_INFO_RESP_ADDR	374,14115
#define PAL_MC_INFO_TARGET_ADDR	375,14173
#define PAL_MC_INFO_IMPL_DEP	376,14230
#define PAL_TLB_CHECK_OP_PURGE	380,14313
typedef struct pal_process_state_info_s 382,14349
	u64		reserved1	383,14391
			rz	384,14412
			ra	389,14499
			me	392,14567
			mn	396,14636
			sy	401,14730
			co	406,14792
			ci	407,14822
			us	408,14852
			hd	413,14916
			tl	421,15083
			mi	430,15299
			pi	433,15383
			pm	434,15429
			dy	436,15476
			in	441,15542
			rs	442,15577
			cm	443,15605
			ex	444,15636
			cr	445,15669
			pc	446,15705
			dr	447,15740
			tr	448,15775
			rr	451,15832
			ar	452,15868
			br	453,15901
			pr	454,15937
			fp	458,15998
			b1	459,16034
			b0	463,16124
			gr	467,16215
			dsize	471,16306
			se	476,16402
			reserved2	478,16470
			cc	479,16489
			tc	480,16519
			bc	481,16547
			rc	482,16575
			uc	483,16613
} pal_processor_state_info_t;485,16644
typedef struct pal_cache_check_info_s 487,16675
	u64		op	488,16715
			level	493,16825
			reserved1	494,16858
			dl	495,16876
			tl	498,16945
			dc	501,17013
			ic	502,17049
			mesi	503,17085
			mv	504,17122
			way	505,17151
			wiv	508,17218
			reserved2	509,17253
			dp	510,17271
			reserved3	511,17310
			index	513,17329
			reserved4	514,17368
			is	516,17387
			iv	517,17433
			pl	518,17479
			pv	519,17513
			mcc	520,17559
			tv	521,17602
			rq	524,17670
			rp	527,17744
			pi	530,17818
} pal_cache_check_info_t;533,17899
typedef struct pal_tlb_check_info_s 535,17926
	u64		tr_slot	537,17965
			trv	540,18040
			reserved1	541,18082
			level	542,18100
			reserved2	543,18154
			dtr	544,18172
			itr	545,18207
			dtc	546,18242
			itc	547,18277
			op	548,18313
			reserved3	549,18347
			is	551,18367
			iv	552,18413
			pl	553,18459
			pv	554,18493
			mcc	555,18539
			tv	556,18582
			rq	559,18650
			rp	562,18724
			pi	565,18798
} pal_tlb_check_info_t;568,18879
typedef struct pal_bus_check_info_s 570,18904
	u64		size	571,18942
			ib	572,18978
			eb	573,19015
			cc	574,19052
			type	578,19139
			sev	579,19175
			hier	580,19212
			dp	581,19252
			bsi	582,19291
			reserved2	585,19348
			is	587,19368
			iv	588,19414
			pl	589,19460
			pv	590,19494
			mcc	591,19540
			tv	592,19583
			rq	595,19651
			rp	598,19725
			pi	601,19799
} pal_bus_check_info_t;604,19880
typedef struct pal_reg_file_check_info_s 606,19905
	u64		id	607,19948
			op	608,19994
			reg_num	613,20104
			rnv	614,20143
			reserved2	615,20176
			is	617,20196
			iv	618,20242
			pl	619,20288
			pv	620,20322
			mcc	621,20368
			reserved3	622,20411
			pi	623,20429
} pal_reg_file_check_info_t;626,20510
typedef struct pal_uarch_check_info_s 628,20540
	u64		sid	629,20580
			level	630,20627
			array_id	631,20665
			op	632,20709
			way	637,20810
			wv	638,20846
			xv	639,20874
			reserved1	640,20904
			index	641,20922
			reserved2	644,21008
			is	646,21028
			iv	647,21074
			pl	648,21120
			pv	649,21154
			mcc	650,21200
			tv	651,21243
			rq	654,21311
			rp	657,21385
			pi	660,21459
} pal_uarch_check_info_t;663,21540
typedef union pal_mc_error_info_u 665,21567
	u64				pmei_data;666,21603
	pal_processor_state_info_t	pme_processor;667,21622
	pal_cache_check_info_t		pme_cache;668,21665
	pal_tlb_check_info_t		pme_tlb;669,21701
	pal_bus_check_info_t		pme_bus;670,21733
	pal_reg_file_check_info_t	pme_reg_file;671,21765
	pal_uarch_check_info_t		pme_uarch;672,21806
} pal_mc_error_info_t;673,21842
#define pmci_proc_unknown_check	675,21866
#define pmci_proc_bus_check	676,21917
#define pmci_proc_tlb_check	677,21964
#define pmci_proc_cache_check	678,22011
#define pmci_proc_dynamic_state_size	679,22060
#define pmci_proc_gpr_valid	680,22118
#define pmci_proc_preserved_bank0_gpr_valid	681,22165
#define pmci_proc_preserved_bank1_gpr_valid	682,22226
#define pmci_proc_fp_valid	683,22287
#define pmci_proc_predicate_regs_valid	684,22333
#define pmci_proc_branch_regs_valid	685,22390
#define pmci_proc_app_regs_valid	686,22444
#define pmci_proc_region_regs_valid	687,22495
#define pmci_proc_translation_regs_valid	688,22549
#define pmci_proc_debug_regs_valid	689,22607
#define pmci_proc_perf_counters_valid	690,22660
#define pmci_proc_control_regs_valid	691,22716
#define pmci_proc_machine_check_expected	692,22771
#define pmci_proc_machine_check_corrected	693,22829
#define pmci_proc_rse_valid	694,22888
#define pmci_proc_machine_check_or_init	695,22935
#define pmci_proc_dynamic_state_valid	696,22993
#define pmci_proc_operation	697,23049
#define pmci_proc_trap_lost	698,23096
#define pmci_proc_hardware_damage	699,23143
#define pmci_proc_uncontained_storage_damage	700,23195
#define pmci_proc_machine_check_isolated	701,23257
#define pmci_proc_continuable	702,23315
#define pmci_proc_storage_intergrity_synced	703,23364
#define pmci_proc_min_state_save_area_regd	704,23425
#define	pmci_proc_distinct_multiple_errors	705,23485
#define pmci_proc_pal_attempted_rendezvous	706,23545
#define pmci_proc_pal_rendezvous_complete	707,23605
#define pmci_cache_level	710,23666
#define pmci_cache_line_state	711,23709
#define pmci_cache_line_state_valid	712,23756
#define pmci_cache_line_index	713,23806
#define pmci_cache_instr_cache_fail	714,23854
#define pmci_cache_data_cache_fail	715,23904
#define pmci_cache_line_tag_fail	716,23953
#define pmci_cache_line_data_fail	717,24000
#define pmci_cache_operation	718,24048
#define pmci_cache_way_valid	719,24092
#define pmci_cache_target_address_valid	720,24136
#define pmci_cache_way	721,24190
#define pmci_cache_mc	722,24230
#define pmci_tlb_instr_translation_cache_fail	724,24269
#define pmci_tlb_data_translation_cache_fail	725,24327
#define pmci_tlb_instr_translation_reg_fail	726,24384
#define pmci_tlb_data_translation_reg_fail	727,24440
#define pmci_tlb_translation_reg_slot	728,24495
#define pmci_tlb_mc	729,24550
#define pmci_bus_status_info	731,24585
#define pmci_bus_req_address_valid	732,24628
#define pmci_bus_resp_address_valid	733,24675
#define pmci_bus_target_address_valid	734,24723
#define pmci_bus_error_severity	735,24773
#define pmci_bus_transaction_type	736,24819
#define pmci_bus_cache_cache_transfer	737,24867
#define pmci_bus_transaction_size	738,24917
#define pmci_bus_internal_error	739,24965
#define pmci_bus_external_error	740,25010
#define pmci_bus_mc	741,25055
typedef struct pal_min_state_area_s 749,25240
	u64	pmsa_nat_bits;750,25278
	u64	pmsa_gr[pmsa_gr751,25329
	u64	pmsa_bank0_gr[pmsa_bank0_gr752,25369
	u64	pmsa_bank1_gr[pmsa_bank1_gr753,25415
	u64	pmsa_pr;754,25461
	u64	pmsa_br0;755,25505
	u64	pmsa_rsc;756,25548
	u64	pmsa_iip;757,25581
	u64	pmsa_ipsr;758,25614
	u64	pmsa_ifs;759,25649
	u64	pmsa_xip;760,25682
	u64	pmsa_xpsr;761,25721
	u64	pmsa_xfs;762,25761
	u64	pmsa_br1;763,25800
	u64	pmsa_reserved[pmsa_reserved764,25843
} pal_min_state_area_t;765,25912
struct ia64_pal_retval 768,25938
	s64 status;776,26241
	u64 v0;777,26254
	u64 v1;778,26263
	u64 v2;779,26272
#define PAL_CALL(795,26927
#define PAL_CALL_STK(805,27233
#define PAL_CALL_PHYS(815,27543
#define PAL_CALL_PHYS_STK(825,27865
typedef int (*ia64_pal_handler)ia64_pal_handler835,28191
typedef union pal_bus_features_u 863,29136
	u64	pal_bus_features_val;864,29171
		u64	pbf_reserved1	866,29208
		u64	pbf_req_bus_parking	867,29237
		u64	pbf_bus_lock_mask	868,29270
		u64	pbf_enable_half_xfer_rate	869,29301
		u64	pbf_reserved2	870,29339
		u64	pbf_enable_shared_line_replace	871,29368
		u64	pbf_enable_exclusive_line_replace	872,29411
		u64	pbf_disable_xaction_queueing	873,29456
		u64	pbf_disable_resp_err_check	874,29497
		u64	pbf_disable_berr_check	875,29536
		u64	pbf_disable_bus_req_internal_err_signal	876,29572
		u64	pbf_disable_bus_req_berr_signal	877,29623
		u64	pbf_disable_bus_init_event_check	878,29667
		u64	pbf_disable_bus_init_event_signal	879,29711
		u64	pbf_disable_bus_addr_err_check	880,29756
		u64	pbf_disable_bus_addr_err_signal	881,29799
		u64	pbf_disable_bus_data_err_check	882,29843
	} pal_bus_features_s;883,29886
} pal_bus_features_u_t;884,29909
ia64_pal_bus_get_features 890,30063
ia64_pal_bus_set_features 907,30620
ia64_pal_cache_config_info 916,30882
ia64_pal_cache_prot_info 934,31379
ia64_pal_cache_flush 957,32132
ia64_pal_cache_init 970,32463
ia64_pal_cache_line_init 982,32817
ia64_pal_cache_read 992,33096
ia64_pal_cache_summary 1002,33416
ia64_pal_cache_write 1015,33768
ia64_pal_copy_info 1026,34102
ia64_pal_copy_pal 1040,34498
ia64_pal_debug_info 1051,34849
ia64_pal_enter_ia32_env 1066,35181
ia64_pal_fixed_addr 1076,35458
ia64_pal_freq_base 1087,35749
ia64_pal_freq_ratios 1101,36090
ia64_pal_get_hw_policy 1119,36559
ia64_pal_halt 1138,37077
typedef union pal_power_mgmt_info_u 1145,37209
	u64			ppmi_data;1146,37247
	       u64		exit_latency	1148,37275
				entry_latency	1149,37308
				power_consumption	1150,37333
				im	1151,37361
				co	1152,37375
				reserved	1153,37389
	} pal_power_mgmt_info_s;1154,37408
} pal_power_mgmt_info_u_t;1155,37434
ia64_pal_halt_info 1159,37563
ia64_pal_get_pstate 1168,37804
ia64_pal_set_pstate 1178,38035
ia64_pal_get_brand_info 1187,38241
ia64_pal_halt_light 1198,38565
ia64_pal_mc_clear_log 1210,38954
ia64_pal_mc_drain 1223,39308
ia64_pal_mc_dynamic_state 1232,39502
ia64_pal_mc_error_info 1245,39796
ia64_pal_mc_expected 1260,40228
ia64_pal_mc_register_mem 1274,40604
ia64_pal_mc_resume 1285,40891
ia64_pal_mem_attrib 1294,41132
ia64_pal_mem_for_test 1307,41458
typedef union pal_perf_mon_info_u 1318,41702
	u64			  ppmi_data;1319,41738
	       u64		generic	1321,41768
				width	1322,41795
				cycles	1323,41811
				retired	1324,41828
				reserved	1325,41846
	} pal_perf_mon_info_s;1326,41865
} pal_perf_mon_info_u_t;1327,41889
ia64_pal_perf_mon_info 1333,42075
ia64_pal_platform_addr 1346,42430
ia64_pal_pmi_entrypoint 1355,42660
ia64_pal_proc_get_features 1365,42933
ia64_pal_proc_set_features 1381,43340
typedef struct ia64_ptce_info_s 1392,43606
	u64		base;1393,43640
	u32		count[count1394,43652
	u32		stride[stride1395,43668
} ia64_ptce_info_t;1396,43685
ia64_get_ptce 1402,43832
ia64_pal_register_info 1422,44288
typedef union pal_hints_u 1433,44560
	u64			ph_data;1434,44588
	       u64		si	1436,44614
				li	1437,44636
				reserved	1438,44649
	} pal_hints_s;1439,44668
} pal_hints_u_t;1440,44684
ia64_pal_rse_info 1446,44817
ia64_pal_set_hw_policy 1461,45165
ia64_pal_shutdown 1473,45520
ia64_pal_test_proc 1482,45714
typedef union  pal_version_u 1491,45976
	u64	pal_version_val;1492,46007
		u64	pv_pal_b_rev	1494,46039
		u64	pv_pal_b_model	1495,46064
		u64	pv_reserved1	1496,46091
		u64	pv_pal_vendor	1497,46116
		u64	pv_pal_a_rev	1498,46142
		u64	pv_pal_a_model	1499,46167
		u64	pv_reserved2	1500,46194
	} pal_version_s;1501,46220
} pal_version_u_t;1502,46238
ia64_pal_version 1512,46546
typedef union pal_tc_info_u 1525,46870
	u64			pti_val;1526,46900
	       u64		num_sets	1528,46926
				associativity	1529,46953
				num_entries	1530,46976
				pf	1531,46998
				unified	1532,47011
				reduce_tr	1533,47029
				reserved	1534,47048
	} pal_tc_info_s;1535,47067
} pal_tc_info_u_t;1536,47085
#define tc_reduce_tr	1538,47105
#define tc_unified	1539,47151
#define tc_pf	1540,47193
#define tc_num_entries	1541,47226
#define tc_associativity	1542,47276
#define tc_num_sets	1543,47329
ia64_pal_vm_info 1550,47496
ia64_pal_vm_page_size 1565,47901
typedef union pal_vm_info_1_u 1576,48130
	u64			pvi1_val;1577,48162
		u64		vw	1579,48189
				phys_add_size	1580,48205
				key_size	1581,48228
				max_pkr	1582,48246
				hash_tag_id	1583,48264
				max_dtr_entry	1584,48285
				max_itr_entry	1585,48308
				max_unique_tcs	1586,48331
				num_tc_levels	1587,48355
	} pal_vm_info_1_s;1588,48378
} pal_vm_info_1_u_t;1589,48398
#define PAL_MAX_PURGES	1591,48420
typedef union pal_vm_info_2_u 1593,48487
	u64			pvi2_val;1594,48519
		u64		impl_va_msb	1596,48546
				rid_size	1597,48570
				max_purges	1598,48588
				reserved	1599,48609
	} pal_vm_info_2_s;1600,48628
} pal_vm_info_2_u_t;1601,48648
ia64_pal_vm_summary 1607,48796
typedef union pal_itr_valid_u 1618,49073
	u64			piv_val;1619,49105
	       u64		access_rights_valid	1621,49131
				priv_level_valid	1622,49169
				dirty_bit_valid	1623,49195
				mem_attr_valid	1624,49221
				reserved	1625,49246
	} pal_tr_valid_s;1626,49266
} pal_tr_valid_u_t;1627,49285
ia64_pal_tr_read 1631,49358
#define PAL_VISIBILITY_VIRTUAL	1643,49685
#define PAL_VISIBILITY_PHYSICAL	1644,49719
#define PAL_VISIBILITY_OK	1649,49802
#define PAL_VISIBILITY_OK_REMOTE_NEEDED	1650,49831
#define PAL_VISIBILITY_INVAL_ARG	1651,49873
#define PAL_VISIBILITY_ERROR	1652,49909
ia64_pal_prefetch_visibility 1655,49961
typedef union pal_log_overview_u 1663,50200
		u64	num_log	1665,50245
			tpc	1668,50334
			reserved3	1669,50369
			cpp	1670,50401
			reserved2	1671,50439
			ppid	1672,50471
			reserved1	1673,50512
	} overview_bits;1674,50544
	u64 overview_data;1675,50562
} pal_log_overview_t;1676,50582
typedef union pal_proc_n_log_info1_u{pal_proc_n_log_info1_u1678,50605
		u64	tid	1680,50653
			reserved2	1681,50685
			cid	1682,50718
			reserved1	1683,50745
	} ppli1_bits;1684,50778
	u64	ppli1_data;1685,50793
} pal_proc_n_log_info1_t;1686,50810
typedef union pal_proc_n_log_info2_u 1688,50837
		u64	la	1690,50886
			reserved	1691,50923
	} ppli2_bits;1692,50955
	u64	ppli2_data;1693,50970
} pal_proc_n_log_info2_t;1694,50987
typedef struct pal_logical_to_physical_s1696,51014
	pal_log_overview_t overview;1698,51057
	pal_proc_n_log_info1_t ppli1;1699,51087
	pal_proc_n_log_info2_t ppli2;1700,51118
} pal_logical_to_physical_t;1701,51149
#define overview_num_log	1703,51179
#define overview_tpc	1704,51235
#define overview_cpp	1705,51284
#define overview_ppid	1706,51333
#define log1_tid	1707,51384
#define log1_cid	1708,51423
#define log2_la	1709,51462
ia64_pal_logical_to_phys(1713,51584
typedef struct pal_cache_shared_info_s1729,51951
	u64 num_shared;1731,51992
	pal_proc_n_log_info1_t ppli1;1732,52009
	pal_proc_n_log_info2_t ppli2;1733,52040
} pal_cache_shared_info_t;1734,52071
ia64_pal_cache_shared_info(1738,52182

xen/include/asm-ia64/linux-xen/asm/spinlock.h,768
#define _ASM_IA64_SPINLOCK_H2,29
#define DEBUG_SPINLOCK20,425
	volatile unsigned int lock;23,466
} raw_spinlock_t;24,495
#define _RAW_SPIN_LOCK_UNLOCKED	26,514
#define _raw_spin_is_locked(28,574
#define _raw_spin_unlock(29,622
#define _raw_spin_trylock(30,693
	volatile unsigned int read_counter	33,777
	volatile unsigned int write_lock	34,819
} raw_rwlock_t;35,859
#define _RAW_RW_LOCK_UNLOCKED 36,875
#define _raw_read_lock(38,934
#define _raw_read_unlock(49,1279
#define _raw_write_lock(56,1457
#define _raw_write_trylock(71,1920
#define _raw_write_lock(85,2279
#define _raw_write_trylock(96,2632
#define _raw_read_trylock(106,2883
#define _raw_write_unlock(108,2947
#define _raw_rw_is_locked(114,3109
#define _raw_rw_is_write_locked(115,3157

xen/include/asm-ia64/linux-xen/asm/pgalloc.h,1051
#define _ASM_IA64_PGALLOC_H2,28
#define pgtable_quicklist 27,644
#define pgtable_quicklist_size 29,759
static inline long pgtable_quicklist_total_size(31,836
static inline void *pgtable_quicklist_alloc(pgtable_quicklist_alloc42,1032
static inline void pgtable_quicklist_free(62,1414
# define pgd_cmpxchg_rel(84,1930
static inline pgd_t *pgd_alloc(pgd_alloc90,2063
static inline void pgd_free(96,2168
static inline void pgd_free(101,2249
pud_populate(108,2367
pud_cmpxchg_rel(115,2502
static inline pmd_t *pmd_alloc_one(pmd_alloc_one132,2898
static inline void pmd_free(138,3027
static inline void pmd_free(143,3108
#define __pmd_free_tlb(149,3207
pmd_populate(153,3286
pmd_populate_kernel(160,3432
pmd_cmpxchg_kernel_rel(167,3574
static inline struct page *pte_alloc_one(pte_alloc_one185,3973
static inline pte_t *pte_alloc_one_kernel(pte_alloc_one_kernel192,4123
static inline void pte_free(199,4266
static inline void pte_free_kernel(204,4361
static inline void pte_free_kernel(209,4449
#define __pte_free_tlb(216,4567

xen/include/asm-ia64/linux-xen/asm/cache.h,356
#define _ASM_IA64_CACHE_H2,26
#define L1_CACHE_SHIFT	12,217
#define L1_CACHE_BYTES	13,268
#define L1_CACHE_SHIFT_MAX 15,315
# define SMP_CACHE_SHIFT	18,398
# define SMP_CACHE_BYTES	19,438
# define SMP_CACHE_SHIFT	22,502
# define SMP_CACHE_BYTES	23,542
# define SMP_CACHE_SHIFT	30,753
# define SMP_CACHE_BYTES	31,780
#define __read_mostly 35,829

xen/include/asm-ia64/linux-xen/asm/numa.h,353
#define _ASM_IA64_NUMA_H12,324
struct node_memblk_s 46,1086
	unsigned long start_paddr;47,1109
	unsigned long size;48,1137
	int nid;49,1158
	int bank;50,1215
struct node_cpuid_s 53,1265
	u16	phys_id;54,1287
	int	nid;55,1321
#define node_distance(78,1903
#define local_nodeid 82,2030
#define paddr_to_nid(86,2116
#define phys_to_nid(91,2183

xen/include/asm-ia64/linux-xen/asm/ptrace.h,4767
#define _ASM_IA64_PTRACE_H2,27
# define KERNEL_STACK_SIZE_ORDER	67,2053
# define KERNEL_STACK_SIZE_ORDER	69,2130
# define KERNEL_STACK_SIZE_ORDER	71,2208
# define KERNEL_STACK_SIZE_ORDER	73,2250
#define IA64_RBS_OFFSET	76,2294
#define IA64_STK_OFFSET	77,2374
#define KERNEL_STACK_SIZE	79,2444
#define pt_regs 102,2974
struct pt_regs 105,3012
	unsigned long b6;107,3083
	unsigned long b7;108,3117
	unsigned long ar_csd;110,3152
	unsigned long ar_ssd;111,3220
	unsigned long r8;113,3294
	unsigned long r9;114,3354
	unsigned long r10;115,3414
	unsigned long r11;116,3475
	unsigned long cr_ipsr;118,3537
	unsigned long cr_iip;119,3591
	unsigned long cr_ifs;124,3768
	unsigned long ar_unat;126,3792
	unsigned long ar_pfs;127,3867
	unsigned long ar_rsc;128,3918
	unsigned long ar_rnat;130,4026
	unsigned long ar_bspstore;131,4065
	unsigned long pr;133,4113
	unsigned long b0;134,4175
	unsigned long loadrs;135,4221
	unsigned long r1;137,4282
	unsigned long r12;138,4323
	unsigned long r13;139,4390
	unsigned long ar_fpsr;141,4433
	unsigned long r15;142,4498
	unsigned long r14;146,4599
	unsigned long r2;147,4634
	unsigned long r3;148,4668
	unsigned long r16;151,4758
	unsigned long r17;152,4793
	unsigned long r18;153,4828
	unsigned long r19;154,4863
	unsigned long r20;155,4898
	unsigned long r21;156,4933
	unsigned long r22;157,4968
	unsigned long r23;158,5003
	unsigned long r24;159,5038
	unsigned long r25;160,5073
	unsigned long r26;161,5108
	unsigned long r27;162,5143
	unsigned long r28;163,5178
	unsigned long r29;164,5213
	unsigned long r30;165,5248
	unsigned long r31;166,5283
	unsigned long ar_ccv;168,5319
	struct ia64_fpreg f6;173,5456
	struct ia64_fpreg f7;174,5494
	struct ia64_fpreg f8;175,5532
	struct ia64_fpreg f9;176,5570
	struct ia64_fpreg f10;177,5608
	struct ia64_fpreg f11;178,5647
	unsigned long r4;180,5697
	unsigned long r5;181,5733
	unsigned long r6;182,5769
	unsigned long r7;183,5805
	unsigned long eml_unat;184,5841
	unsigned long pad0;185,5904
static inline struct cpu_user_regs *vcpu_regs(vcpu_regs196,6164
#define return_reg(201,6305
struct switch_stack 213,6636
	unsigned long caller_unat;214,6658
	unsigned long ar_fpsr;215,6733
	struct ia64_fpreg f2;217,6796
	struct ia64_fpreg f3;218,6836
	struct ia64_fpreg f4;219,6876
	struct ia64_fpreg f5;220,6916
	struct ia64_fpreg f12;222,6957
	struct ia64_fpreg f13;223,7021
	struct ia64_fpreg f14;224,7085
	struct ia64_fpreg f15;225,7149
	struct ia64_fpreg f16;226,7213
	struct ia64_fpreg f17;227,7254
	struct ia64_fpreg f18;228,7295
	struct ia64_fpreg f19;229,7336
	struct ia64_fpreg f20;230,7377
	struct ia64_fpreg f21;231,7418
	struct ia64_fpreg f22;232,7459
	struct ia64_fpreg f23;233,7500
	struct ia64_fpreg f24;234,7541
	struct ia64_fpreg f25;235,7582
	struct ia64_fpreg f26;236,7623
	struct ia64_fpreg f27;237,7664
	struct ia64_fpreg f28;238,7705
	struct ia64_fpreg f29;239,7746
	struct ia64_fpreg f30;240,7787
	struct ia64_fpreg f31;241,7828
	unsigned long r4;243,7870
	unsigned long r5;244,7906
	unsigned long r6;245,7942
	unsigned long r7;246,7978
	unsigned long b0;248,8015
	unsigned long b1;249,8088
	unsigned long b2;250,8107
	unsigned long b3;251,8126
	unsigned long b4;252,8145
	unsigned long b5;253,8164
	unsigned long ar_pfs;255,8184
	unsigned long ar_lc;256,8238
	unsigned long ar_unat;257,8292
	unsigned long ar_rnat;258,8342
	unsigned long ar_bspstore;259,8401
	unsigned long pr;260,8462
# define instruction_pointer(269,8747
#define profile_pc(273,8930
# define ia64_task_regs(280,9143
# define ia64_psr(281,9231
# define guest_mode(283,9307
# define guest_kernel_mode(284,9379
# define vmx_guest_kernel_mode(285,9454
# define regs_increment_iip(286,9518
# define user_mode(296,9755
# define user_stack(298,9839
# define fsys_mode(299,9933
# define force_successful_syscall_return(318,10899
struct pt_all_user_regs 347,12319
	unsigned long nat;348,12345
	unsigned long cr_iip;349,12365
	unsigned long cfm;350,12388
	unsigned long cr_ipsr;351,12408
	unsigned long pr;352,12432
	unsigned long gr[gr354,12452
	unsigned long br[br355,12475
	unsigned long ar[ar356,12497
	struct ia64_fpreg fr[fr357,12521
#define PT_AUR_RSC	363,12646
#define PT_AUR_BSP	364,12668
#define PT_AUR_BSPSTORE	365,12690
#define PT_AUR_RNAT	366,12717
#define PT_AUR_CCV	367,12740
#define PT_AUR_UNAT	368,12762
#define PT_AUR_FPSR	369,12785
#define PT_AUR_PFS	370,12808
#define PT_AUR_LC	371,12830
#define PT_AUR_EC	372,12851
#define PTRACE_SINGLEBLOCK	378,13018
#define PTRACE_OLD_GETSIGINFO	379,13089
#define PTRACE_OLD_SETSIGINFO	380,13181
#define PTRACE_GETREGS	381,13273
#define PTRACE_SETREGS	382,13355
#define PTRACE_OLDSETOPTIONS	384,13438

xen/include/asm-ia64/linux-xen/asm/gcc_intrin.h,3106
#define _ASM_IA64_GCC_INTRIN_H2,31
#define ASM_SUPPORTED12,304
#define ia64_barrier(16,394
#define ia64_stop(18,447
#define ia64_invala_gr(20,490
#define ia64_invala_fr(22,567
register unsigned long ia64_r13 asm 27,737
#define ia64_setreg(29,802
#define ia64_getreg(58,1734
#define ia64_hint_pause 93,2825
#define ia64_hint(95,2852
#define ia64_mux1_brcst 106,3069
#define ia64_mux1_mix 107,3095
#define ia64_mux1_shuf 108,3121
#define ia64_mux1_alt 109,3147
#define ia64_mux1_rev 110,3173
#define ia64_mux1(112,3200
# define ia64_popcnt(137,3977
# define ia64_popcnt(139,4031
#define ia64_getf_exp(148,4211
#define ia64_shrp(157,4389
#define ia64_ldfs(164,4588
#define ia64_ldfd(170,4739
#define ia64_ldfe(176,4890
#define ia64_ldf8(182,5041
#define ia64_ldf_fill(188,5192
#define ia64_stfs(194,5350
#define ia64_stfd(200,5516
#define ia64_stfe(206,5682
#define ia64_stf8(212,5848
#define ia64_stf_spill(218,6014
#define ia64_fetchadd4_acq(224,6192
#define ia64_fetchadd4_rel(235,6452
#define ia64_fetchadd8_acq(245,6700
#define ia64_fetchadd8_rel(256,6960
#define ia64_xchg1(266,7208
#define ia64_xchg2(274,7425
#define ia64_xchg4(282,7636
#define ia64_xchg8(290,7847
#define ia64_cmpxchg1_acq(298,8058
#define ia64_cmpxchg1_rel(307,8359
#define ia64_cmpxchg2_acq(316,8660
#define ia64_cmpxchg2_rel(325,8961
#define ia64_cmpxchg4_acq(335,9275
#define ia64_cmpxchg4_rel(344,9576
#define ia64_cmpxchg8_acq(353,9877
#define ia64_cmpxchg8_rel(362,10178
#define ia64_mf(372,10492
#define ia64_mfa(373,10543
#define ia64_invala(375,10598
#define ia64_thash(377,10658
#define ia64_srlz_i(384,10835
#define ia64_srlz_d(385,10900
# define ia64_dv_serialize_data(388,10996
# define ia64_dv_serialize_instruction(389,11065
# define ia64_dv_serialize_data(391,11153
# define ia64_dv_serialize_instruction(392,11187
#define ia64_nop(395,11236
#define ia64_itci(397,11290
#define ia64_itcd(399,11367
#define ia64_itri(402,11445
#define ia64_itrd(405,11562
#define ia64_tpa(408,11679
#define __ia64_set_dbr(415,11845
#define ia64_set_ibr(418,11956
#define ia64_set_pkr(421,12065
#define ia64_set_pmc(424,12174
#define ia64_set_pmd(427,12283
#define ia64_set_rr(430,12392
#define ia64_get_cpuid(433,12501
#define __ia64_get_dbr(440,12694
#define ia64_get_ibr(447,12879
#define ia64_get_pkr(454,13062
#define ia64_get_pmc(461,13245
#define ia64_get_pmd(469,13429
#define ia64_get_rr(476,13612
#define ia64_fc(483,13794
#define ia64_sync_i(486,13865
#define ia64_ssm(488,13928
#define ia64_rsm(489,14000
#define ia64_sum(490,14072
#define ia64_rum(491,14144
#define ia64_ptce(493,14217
#define ia64_ptcga(495,14281
#define ia64_ptcl(501,14452
#define ia64_ptri(507,14621
#define ia64_ptrd(510,14724
#define ia64_lfhint_none 515,14889
#define ia64_lfhint_nt1 516,14918
#define ia64_lfhint_nt2 517,14947
#define ia64_lfhint_nta 518,14976
#define ia64_lfetch(520,15006
#define ia64_lfetch_excl(538,15622
#define ia64_lfetch_fault(556,16271
#define ia64_lfetch_fault_excl(574,16929
#define ia64_intrin_local_irq_restore(592,17606

xen/include/asm-ia64/linux-xen/asm/perfmon_default_smpl.h,1356
#define __PERFMON_DEFAULT_SMPL_H__ 9,242
#define PFM_DEFAULT_SMPL_UUID 11,280
	unsigned long buf_size;18,496
	unsigned int  flags;19,556
	unsigned int  res1;20,607
	unsigned long reserved[reserved21,650
} pfm_default_smpl_arg_t;22,699
	pfarg_context_t		ctx_arg;29,836
	pfm_default_smpl_arg_t	buf_arg;30,863
} pfm_default_smpl_ctx_arg_t;31,896
	unsigned long	hdr_count;38,1079
	unsigned long	hdr_cur_offs;39,1135
	unsigned long	hdr_reserved2;40,1205
	unsigned long	hdr_overflows;42,1267
	unsigned long   hdr_buf_size;43,1341
	unsigned int	hdr_version;45,1409
	unsigned int	hdr_reserved1;46,1488
	unsigned long	hdr_reserved[hdr_reserved47,1539
} pfm_default_smpl_hdr_t;48,1593
        int             pid;62,2100
        unsigned char   reserved1[reserved163,2193
        unsigned char   ovfl_pmd;64,2271
        unsigned long   last_reset_val;66,2350
        unsigned long   ip;67,2436
        unsigned long   tstamp;68,2533
        unsigned short  cpu;70,2631
        unsigned short  set;71,2719
        int    		tgid;72,2814
} pfm_default_smpl_entry_t;73,2902
#define PFM_DEFAULT_MAX_PMDS	75,2931
#define PFM_DEFAULT_MAX_ENTRY_SIZE	76,3036
#define PFM_DEFAULT_SMPL_MIN_BUF_SIZE	77,3151
#define PFM_DEFAULT_SMPL_VERSION_MAJ	79,3250
#define PFM_DEFAULT_SMPL_VERSION_MIN	80,3290
#define PFM_DEFAULT_SMPL_VERSION	81,3330

xen/include/asm-ia64/linux-xen/asm/hw_irq.h,1358
#define _ASM_IA64_HW_IRQ_H2,27
typedef u8 ia64_vector;18,331
#define IA64_MIN_VECTORED_IRQ	33,599
#define IA64_MAX_VECTORED_IRQ	34,634
#define IA64_NUM_VECTORS	35,669
#define AUTO_ASSIGN_IRQ	37,700
#define IA64_SPURIOUS_INT_VECTOR	39,732
#define IA64_CPEP_VECTOR	44,848
#define IA64_CMCP_VECTOR	45,925
#define IA64_CPE_VECTOR	46,1001
#define IA64_CMC_VECTOR	47,1080
#define IA64_FIRST_DEVICE_VECTOR	51,1220
#define IA64_LAST_DEVICE_VECTOR	52,1258
#define IA64_NUM_DEVICE_VECTORS	53,1296
#define IA64_MCA_RENDEZ_VECTOR	55,1387
#define IA64_PERFMON_VECTOR	56,1451
#define IA64_TIMER_VECTOR	57,1527
#define	IA64_MCA_WAKEUP_VECTOR	58,1611
#define IA64_IPI_RESCHEDULE	59,1694
#define IA64_IPI_VECTOR	60,1749
#define IA64_IRQ_REDIRECTED	64,1861
#define IA64_IPI_DEFAULT_BASE_ADDR	68,1953
        IA64_IPI_DM_INT 72,2053
        IA64_IPI_DM_INT =       0x0,x072,2053
        IA64_IPI_DM_PMI 73,2126
        IA64_IPI_DM_PMI =       0x2,x273,2126
        IA64_IPI_DM_NMI 74,2183
        IA64_IPI_DM_NMI =       0x4,x474,2183
        IA64_IPI_DM_INIT 75,2252
        IA64_IPI_DM_INIT =      0x5,x575,2252
        IA64_IPI_DM_EXTINT 76,2321
        IA64_IPI_DM_EXTINT =    0x7,x776,2321
#define isa_irq_to_vector(80,2445
hw_resend_irq 94,3010
__ia64_local_vector_to_irq 107,3297
irq_descp 125,4063
local_vector_to_irq 136,4329

xen/include/asm-ia64/linux-xen/asm/kregs.h,3917
#define _ASM_IA64_KREGS_H2,26
#define IA64_KR_IO_BASE	15,264
#define IA64_KR_TSSD	16,328
#define IA64_KR_PER_CPU_DATA	17,391
#define IA64_KR_CURRENT_STACK	18,457
#define IA64_KR_FPU_OWNER	19,541
#define IA64_KR_CURRENT	20,617
#define IA64_KR_PT_BASE	21,680
#define _IA64_KR_PASTE(23,756
#define _IA64_KR_PREFIX(24,789
#define IA64_KR(25,840
#define IA64_TR_KERNEL	30,923
#define IA64_TR_PALCODE	31,999
#define IA64_TR_PERCPU_DATA	32,1070
#define IA64_TR_CURRENT_STACK	33,1124
#define IA64_PSR_BE_BIT	36,1247
#define IA64_PSR_UP_BIT	37,1274
#define IA64_PSR_AC_BIT	38,1301
#define IA64_PSR_MFL_BIT	39,1328
#define IA64_PSR_MFH_BIT	40,1355
#define IA64_PSR_IC_BIT	41,1382
#define IA64_PSR_I_BIT	42,1410
#define IA64_PSR_PK_BIT	43,1437
#define IA64_PSR_DT_BIT	44,1465
#define IA64_PSR_DFL_BIT	45,1493
#define IA64_PSR_DFH_BIT	46,1521
#define IA64_PSR_SP_BIT	47,1549
#define IA64_PSR_PP_BIT	48,1577
#define IA64_PSR_DI_BIT	49,1605
#define IA64_PSR_SI_BIT	50,1633
#define IA64_PSR_DB_BIT	51,1661
#define IA64_PSR_LP_BIT	52,1689
#define IA64_PSR_TB_BIT	53,1717
#define IA64_PSR_RT_BIT	54,1745
#define IA64_PSR_CPL0_BIT	56,1843
#define IA64_PSR_CPL1_BIT	57,1872
#define IA64_PSR_IS_BIT	58,1901
#define IA64_PSR_MC_BIT	59,1929
#define IA64_PSR_IT_BIT	60,1957
#define IA64_PSR_ID_BIT	61,1985
#define IA64_PSR_DA_BIT	62,2013
#define IA64_PSR_DD_BIT	63,2041
#define IA64_PSR_SS_BIT	64,2069
#define IA64_PSR_RI_BIT	65,2097
#define IA64_PSR_ED_BIT	66,2125
#define IA64_PSR_BN_BIT	67,2153
#define IA64_PSR_IA_BIT	68,2181
#define IA64_PSR_BITS_TO_CLEAR	73,2398
#define IA64_PSR_BITS_TO_SET	76,2603
#define IA64_PSR_BE	78,2662
#define IA64_PSR_UP	79,2716
#define IA64_PSR_AC	80,2770
#define IA64_PSR_MFL	81,2824
#define IA64_PSR_MFH	82,2880
#define IA64_PSR_IC	83,2936
#define IA64_PSR_I	84,2990
#define IA64_PSR_PK	85,3042
#define IA64_PSR_DT	86,3096
#define IA64_PSR_DFL	87,3150
#define IA64_PSR_DFH	88,3206
#define IA64_PSR_SP	89,3262
#define IA64_PSR_PP	90,3316
#define IA64_PSR_DI	91,3370
#define IA64_PSR_SI	92,3424
#define IA64_PSR_DB	93,3478
#define IA64_PSR_LP	94,3532
#define IA64_PSR_TB	95,3586
#define IA64_PSR_RT	96,3640
#define IA64_PSR_CPL	98,3764
#define IA64_PSR_IS	99,3821
#define IA64_PSR_MC	100,3875
#define IA64_PSR_IT	101,3929
#define IA64_PSR_ID	102,3983
#define IA64_PSR_DA	103,4037
#define IA64_PSR_DD	104,4091
#define IA64_PSR_SS	105,4145
#define IA64_PSR_RI	106,4199
#define IA64_PSR_ED	107,4253
#define IA64_PSR_BN	108,4307
#define IA64_PSR_IA	109,4361
#define IA64_PSR_UM	112,4438
#define IA64_DCR_PP_BIT	115,4562
#define IA64_DCR_BE_BIT	116,4635
#define IA64_DCR_LC_BIT	117,4688
#define IA64_DCR_DM_BIT	118,4745
#define IA64_DCR_DP_BIT	119,4801
#define IA64_DCR_DK_BIT	120,4865
#define IA64_DCR_DX_BIT	121,4921
#define IA64_DCR_DR_BIT	122,4983
#define IA64_DCR_DA_BIT	123,5043
#define IA64_DCR_DD_BIT	124,5101
#define IA64_DCR_PP	126,5155
#define IA64_DCR_BE	127,5209
#define IA64_DCR_LC	128,5263
#define IA64_DCR_DM	129,5317
#define IA64_DCR_DP	130,5371
#define IA64_DCR_DK	131,5425
#define IA64_DCR_DX	132,5479
#define IA64_DCR_DR	133,5533
#define IA64_DCR_DA	134,5587
#define IA64_DCR_DD	135,5641
#define IA64_ISR_X_BIT	138,5728
#define IA64_ISR_W_BIT	139,5776
#define IA64_ISR_R_BIT	140,5822
#define IA64_ISR_NA_BIT	141,5867
#define IA64_ISR_SP_BIT	142,5912
#define IA64_ISR_RS_BIT	143,5973
#define IA64_ISR_IR_BIT	144,6042
#define IA64_ISR_CODE_MASK	145,6109
#define IA64_ISR_X	147,6141
#define IA64_ISR_W	148,6193
#define IA64_ISR_R	149,6245
#define IA64_ISR_NA	150,6297
#define IA64_ISR_SP	151,6351
#define IA64_ISR_RS	152,6405
#define IA64_ISR_IR	153,6459
#define IA64_ISR_CODE_TPA	156,6563
#define IA64_ISR_CODE_FC	157,6591
#define IA64_ISR_CODE_PROBE	158,6618
#define IA64_ISR_CODE_TAK	159,6648
#define IA64_ISR_CODE_LFETCH	160,6676
#define IA64_ISR_CODE_PROBEF	161,6707

xen/include/asm-ia64/linux-xen/asm/sections.h,34
#define _ASM_IA64_SECTIONS_H2,29

xen/include/asm-ia64/linux-xen/asm/meminit.h,375
#define meminit_h2,18
#define IA64_MAX_RSVD_REGIONS 31,619
#define IA64_MAX_RSVD_REGIONS 33,657
struct rsvd_region 36,697
	unsigned long start;37,718
	unsigned long end;38,786
#define GRANULEROUNDDOWN(53,1269
#define GRANULEROUNDUP(54,1328
#define ORDERROUNDDOWN(55,1407
# define call_pernode_memory(60,1591
#define IGNORE_PFN0	63,1669
# define LARGE_GAP	66,1790

xen/include/asm-ia64/linux-xen/asm/sal.h,14741
#define _ASM_IA64_SAL_H2,24
#define IA64_SAL_PLATFORM_FEATURE_BUS_LOCK_BIT	26,975
#define IA64_SAL_PLATFORM_FEATURE_IRQ_REDIR_HINT_BIT	27,1025
#define IA64_SAL_PLATFORM_FEATURE_IPI_REDIR_HINT_BIT	28,1080
#define IA64_SAL_PLATFORM_FEATURE_ITC_DRIFT_BIT	29,1135
#define IA64_SAL_PLATFORM_FEATURE_BUS_LOCK	31,1188
#define IA64_SAL_PLATFORM_FEATURE_IRQ_REDIR_HINT 32,1277
#define IA64_SAL_PLATFORM_FEATURE_IPI_REDIR_HINT 33,1376
#define IA64_SAL_PLATFORM_FEATURE_ITC_DRIFT	34,1475
#define __SAL_CALL(49,1812
# define SAL_CALL(52,1913
# define SAL_CALL_NOLOCK(65,2379
# define SAL_CALL_REENTRANT(78,2817
#define SAL_SET_VECTORS	90,3190
#define SAL_GET_STATE_INFO	91,3227
#define SAL_GET_STATE_INFO_SIZE	92,3266
#define SAL_CLEAR_STATE_INFO	93,3310
#define SAL_MC_RENDEZ	94,3351
#define SAL_MC_SET_PARAMS	95,3386
#define SAL_REGISTER_PHYSICAL_ADDR	96,3424
#define SAL_CACHE_FLUSH	98,3471
#define SAL_CACHE_INIT	99,3508
#define SAL_PCI_CONFIG_READ	100,3544
#define SAL_PCI_CONFIG_WRITE	101,3584
#define SAL_FREQ_BASE	102,3625
#define SAL_PHYSICAL_ID_INFO	103,3660
#define SAL_UPDATE_PAL	105,3702
struct ia64_sal_retval 107,3739
	s64 status;115,4042
	u64 v0;116,4055
	u64 v1;117,4064
	u64 v2;118,4073
typedef struct ia64_sal_retval (*ia64_sal_handler)ia64_sal_handler121,4086
	SAL_FREQ_BASE_PLATFORM 124,4157
	SAL_FREQ_BASE_INTERVAL_TIMER 125,4186
	SAL_FREQ_BASE_REALTIME_CLOCK 126,4221
struct ia64_sal_systab 135,4465
	u8 signature[signature136,4490
	u32 size;137,4531
	u8 sal_rev_minor;138,4577
	u8 sal_rev_major;139,4596
	u16 entry_count;140,4615
	u8 checksum;141,4672
	u8 reserved1[reserved1142,4686
	u8 sal_a_rev_minor;143,4704
	u8 sal_a_rev_major;144,4725
	u8 sal_b_rev_minor;145,4746
	u8 sal_b_rev_major;146,4767
	u8 oem_id[oem_id148,4879
	u8 product_id[product_id149,4895
	u8 reserved2[reserved2150,4939
enum sal_systab_entry_type 153,4961
	SAL_DESC_ENTRY_POINT 154,4990
	SAL_DESC_MEMORY 155,5017
	SAL_DESC_PLATFORM_FEATURE 156,5039
	SAL_DESC_TR 157,5071
	SAL_DESC_PTC 158,5089
	SAL_DESC_AP_WAKEUP 159,5108
#define SAL_DESC_SIZE(171,5212
typedef struct ia64_sal_desc_entry_point 173,5285
	u8 type;174,5328
	u8 reserved1[reserved1175,5338
	u64 pal_proc;176,5356
	u64 sal_proc;177,5371
	u64 gp;178,5386
	u8 reserved2[reserved2179,5395
}ia64_sal_desc_entry_point_t;ia64_sal_desc_entry_point_t180,5414
typedef struct ia64_sal_desc_memory 182,5445
	u8 type;183,5483
	u8 used_by_sal;184,5493
	u8 mem_attr;185,5544
	u8 access_rights;186,5598
	u8 mem_attr_mask;187,5651
	u8 reserved1;188,5712
	u8 mem_type;189,5727
	u8 mem_usage;190,5760
	u64 addr;191,5795
	u32 length;192,5840
	u32 reserved2;193,5890
	u8 oem_reserved[oem_reserved194,5906
} ia64_sal_desc_memory_t;195,5927
typedef struct ia64_sal_desc_platform_feature 197,5954
	u8 type;198,6002
	u8 feature_mask;199,6012
	u8 reserved1[reserved1200,6030
} ia64_sal_desc_platform_feature_t;201,6049
typedef struct ia64_sal_desc_tr 203,6086
	u8 type;204,6120
	u8 tr_type;205,6130
	u8 regnum;206,6178
	u8 reserved1[reserved1207,6225
	u64 addr;208,6243
	u64 page_size;209,6293
	u8 reserved2[reserved2210,6334
} ia64_sal_desc_tr_t;211,6352
typedef struct ia64_sal_desc_ptc 213,6375
	u8 type;214,6410
	u8 reserved1[reserved1215,6420
	u32 num_domains;216,6438
	u64 domain_info;217,6485
} ia64_sal_desc_ptc_t;218,6547
typedef struct ia64_sal_ptc_domain_info 220,6571
	u64 proc_count;221,6613
	u64 proc_list;222,6668
} ia64_sal_ptc_domain_info_t;223,6721
typedef struct ia64_sal_ptc_domain_proc_entry 225,6752
	u64 id 226,6800
	u64 eid 227,6837
} ia64_sal_ptc_domain_proc_entry_t;228,6875
#define IA64_SAL_AP_EXTERNAL_INT 231,6913
typedef struct ia64_sal_desc_ap_wakeup 233,6949
	u8 type;234,6990
	u8 mechanism;235,7000
	u8 reserved1[reserved1236,7046
	u64 vector;237,7064
} ia64_sal_desc_ap_wakeup_t 238,7120
#define SAL_VERSION_CODE(245,7379
	SAL_INFO_TYPE_MCA 252,7621
        SAL_INFO_TYPE_INIT 253,7685
        SAL_INFO_TYPE_CMC 254,7741
        SAL_INFO_TYPE_CPE 255,7816
	SAL_MC_PARAM_RENDEZ_INT 260,7952
	SAL_MC_PARAM_RENDEZ_WAKEUP 261,8012
	SAL_MC_PARAM_CPE_INT	262,8058
	SAL_MC_PARAM_MECHANISM_INT 267,8175
	SAL_MC_PARAM_MECHANISM_MEM 268,8228
	SAL_VECTOR_OS_MCA	273,8383
	SAL_VECTOR_OS_INIT	274,8409
	SAL_VECTOR_OS_BOOT_RENDEZ 275,8436
#define	SAL_MC_PARAM_RZ_ALWAYS	279,8535
#define	SAL_MC_PARAM_BINIT_ESCALATE	280,8571
#define SAL_PROC_DEV_ERR_SECT_GUID 287,8722
#define SAL_PLAT_MEM_DEV_ERR_SECT_GUID 289,8848
#define SAL_PLAT_SEL_DEV_ERR_SECT_GUID 291,8978
#define SAL_PLAT_PCI_BUS_ERR_SECT_GUID 293,9108
#define SAL_PLAT_SMBIOS_DEV_ERR_SECT_GUID 295,9238
#define SAL_PLAT_PCI_COMP_ERR_SECT_GUID 297,9371
#define SAL_PLAT_SPECIFIC_ERR_SECT_GUID 299,9502
#define SAL_PLAT_HOST_CTLR_ERR_SECT_GUID 301,9633
#define SAL_PLAT_BUS_ERR_SECT_GUID 303,9765
#define MAX_CACHE_ERRORS	306,9892
#define MAX_TLB_ERRORS	307,9919
#define MAX_BUS_ERRORS	308,9945
typedef struct sal_log_revision 311,10044
	u8 minor;312,10078
	u8 major;313,10108
} sal_log_revision_t;314,10138
typedef struct sal_log_timestamp 317,10234
	u8 slh_second;318,10269
	u8 slh_minute;319,10307
	u8 slh_hour;320,10345
	u8 slh_reserved;321,10379
	u8 slh_day;322,10397
	u8 slh_month;323,10429
	u8 slh_year;324,10465
	u8 slh_century;325,10500
} sal_log_timestamp_t;326,10550
typedef struct sal_log_record_header 329,10624
	u64 id;330,10663
	sal_log_revision_t revision;331,10716
	u16 severity;332,10787
	u32 len;333,10825
	sal_log_timestamp_t timestamp;334,10877
	efi_guid_t platform_guid;335,10925
} sal_log_record_header_t;336,10981
#define sal_log_severity_recoverable	338,11009
#define sal_log_severity_fatal	339,11048
#define sal_log_severity_corrected	340,11082
typedef struct sal_log_sec_header 343,11170
    efi_guid_t guid;344,11206
    sal_log_revision_t revision;345,11253
    u16 reserved;346,11328
    u32 len;347,11346
} sal_log_section_hdr_t;348,11383
typedef struct sal_log_mod_error_info 350,11409
		u64 check_info 352,11459
		    requestor_identifier 353,11494
		    responder_identifier 354,11529
		    target_identifier 355,11564
		    precise_ip 356,11599
		    reserved 357,11634
	} valid;358,11670
	u64 check_info;359,11680
	u64 requestor_identifier;360,11697
	u64 responder_identifier;361,11724
	u64 target_identifier;362,11751
	u64 precise_ip;363,11775
} sal_log_mod_error_info_t;364,11792
typedef struct sal_processor_static_info 366,11821
		u64 minstate 368,11874
		    br 369,11901
		    cr 370,11928
		    ar 371,11955
		    rr 372,11982
		    fr 373,12009
		    reserved 374,12036
	} valid;375,12064
	pal_min_state_area_t min_state_area;376,12074
	u64 br[br377,12112
	u64 cr[cr378,12124
	u64 ar[ar379,12138
	u64 rr[rr380,12152
	struct ia64_fpreg __attribute__ ((packed)) fr[fr381,12164
} sal_processor_static_info_t;382,12217
struct sal_cpuid_info 384,12249
	u64 regs[regs385,12273
	u64 reserved;386,12287
typedef struct sal_log_processor_info 389,12306
	sal_log_section_hdr_t header;390,12346
		u64 proc_error_map 392,12387
		    proc_state_param 393,12418
		    proc_cr_lid 394,12449
		    psi_static_struct 395,12480
		    num_cache_check 396,12511
		    num_tlb_check 397,12542
		    num_bus_check 398,12573
		    num_reg_file_check 399,12604
		    num_ms_check 400,12635
		    cpuid_info 401,12666
		    reserved1 402,12697
	} valid;403,12729
	u64 proc_error_map;404,12739
	u64 proc_state_parameter;405,12760
	u64 proc_cr_lid;406,12787
	sal_log_mod_error_info_t info[info411,12916
} sal_log_processor_info_t;423,13481
#define SAL_LPI_PSI_INFO(426,13605
typedef struct sal_log_mem_dev_err_info 437,14034
	sal_log_section_hdr_t header;438,14076
		u64 error_status 440,14117
		    physical_addr 441,14144
		    addr_mask 442,14171
		    node 443,14198
		    card 444,14225
		    module 445,14252
		    bank 446,14279
		    device 447,14306
		    row 448,14333
		    column 449,14360
		    bit_position 450,14387
		    requestor_id 451,14414
		    responder_id 452,14441
		    target_id 453,14468
		    bus_spec_data 454,14495
		    oem_id 455,14522
		    oem_data 456,14549
		    reserved 457,14576
	} valid;458,14604
	u64 error_status;459,14614
	u64 physical_addr;460,14633
	u64 addr_mask;461,14653
	u16 node;462,14669
	u16 card;463,14680
	u16 module;464,14691
	u16 bank;465,14704
	u16 device;466,14715
	u16 row;467,14728
	u16 column;468,14738
	u16 bit_position;469,14751
	u64 requestor_id;470,14770
	u64 responder_id;471,14789
	u64 target_id;472,14808
	u64 bus_spec_data;473,14824
	u8 oem_id[oem_id474,14844
	u8 oem_data[oem_data475,14860
} sal_log_mem_dev_err_info_t;476,14906
typedef struct sal_log_sel_dev_err_info 478,14937
	sal_log_section_hdr_t header;479,14979
		u64 record_id 481,15020
		    record_type 482,15047
		    generator_id 483,15074
		    evm_rev 484,15101
		    sensor_type 485,15128
		    sensor_num 486,15155
		    event_dir 487,15182
		    event_data1 488,15209
		    event_data2 489,15236
		    event_data3 490,15263
		    reserved 491,15290
	} valid;492,15318
	u16 record_id;493,15328
	u8 record_type;494,15344
	u8 timestamp[timestamp495,15361
	u16 generator_id;496,15379
	u8 evm_rev;497,15398
	u8 sensor_type;498,15411
	u8 sensor_num;499,15428
	u8 event_dir;500,15444
	u8 event_data1;501,15459
	u8 event_data2;502,15476
	u8 event_data3;503,15493
} sal_log_sel_dev_err_info_t;504,15510
typedef struct sal_log_pci_bus_err_info 506,15541
	sal_log_section_hdr_t header;507,15583
		u64 err_status 509,15624
		    err_type 510,15651
		    bus_id 511,15678
		    bus_address 512,15705
		    bus_data 513,15732
		    bus_cmd 514,15759
		    requestor_id 515,15786
		    responder_id 516,15813
		    target_id 517,15840
		    oem_data 518,15867
		    reserved 519,15894
	} valid;520,15922
	u64 err_status;521,15932
	u16 err_type;522,15949
	u16 bus_id;523,15964
	u32 reserved;524,15977
	u64 bus_address;525,15992
	u64 bus_data;526,16010
	u64 bus_cmd;527,16025
	u64 requestor_id;528,16039
	u64 responder_id;529,16058
	u64 target_id;530,16077
	u8 oem_data[oem_data531,16093
} sal_log_pci_bus_err_info_t;532,16139
typedef struct sal_log_smbios_dev_err_info 534,16170
	sal_log_section_hdr_t header;535,16215
		u64 event_type 537,16256
		    length 538,16283
		    time_stamp 539,16310
		    data 540,16337
		    reserved1 541,16364
	} valid;542,16392
	u8 event_type;543,16402
	u8 length;544,16418
	u8 time_stamp[time_stamp545,16430
	u8 data[data546,16449
} sal_log_smbios_dev_err_info_t;547,16518
typedef struct sal_log_pci_comp_err_info 549,16552
	sal_log_section_hdr_t header;550,16595
		u64 err_status 552,16636
		    comp_info 553,16663
		    num_mem_regs 554,16690
		    num_io_regs 555,16717
		    reg_data_pairs 556,16744
		    oem_data 557,16771
		    reserved 558,16798
	} valid;559,16826
	u64 err_status;560,16836
		u16 vendor_id;562,16863
		u16 device_id;563,16880
		u8 class_code[class_code564,16897
		u8 func_num;565,16917
		u8 dev_num;566,16932
		u8 bus_num;567,16946
		u8 seg_num;568,16960
		u8 reserved[reserved569,16974
	} comp_info;570,16992
	u32 num_mem_regs;571,17006
	u32 num_io_regs;572,17025
	u64 reg_data_pairs[reg_data_pairs573,17043
	u8 oem_data[oem_data579,17311
} sal_log_pci_comp_err_info_t;580,17357
typedef struct sal_log_plat_specific_err_info 582,17389
	sal_log_section_hdr_t header;583,17437
		u64 err_status 585,17478
		    guid 586,17505
		    oem_data 587,17532
		    reserved 588,17559
	} valid;589,17587
	u64 err_status;590,17597
	efi_guid_t guid;591,17614
	u8 oem_data[oem_data592,17632
} sal_log_plat_specific_err_info_t;593,17696
typedef struct sal_log_host_ctlr_err_info 595,17733
	sal_log_section_hdr_t header;596,17777
		u64 err_status 598,17818
		    requestor_id 599,17845
		    responder_id 600,17872
		    target_id 601,17899
		    bus_spec_data 602,17926
		    oem_data 603,17953
		    reserved 604,17980
	} valid;605,18008
	u64 err_status;606,18018
	u64 requestor_id;607,18035
	u64 responder_id;608,18054
	u64 target_id;609,18073
	u64 bus_spec_data;610,18089
	u8 oem_data[oem_data611,18109
} sal_log_host_ctlr_err_info_t;612,18159
typedef struct sal_log_plat_bus_err_info 614,18192
	sal_log_section_hdr_t header;615,18235
		u64 err_status 617,18276
		    requestor_id 618,18303
		    responder_id 619,18330
		    target_id 620,18357
		    bus_spec_data 621,18384
		    oem_data 622,18411
		    reserved 623,18438
	} valid;624,18466
	u64 err_status;625,18476
	u64 requestor_id;626,18493
	u64 responder_id;627,18512
	u64 target_id;628,18531
	u64 bus_spec_data;629,18547
	u8 oem_data[oem_data630,18567
} sal_log_plat_bus_err_info_t;631,18617
typedef union sal_log_platform_err_info 634,18696
	sal_log_mem_dev_err_info_t mem_dev_err;635,18738
	sal_log_sel_dev_err_info_t sel_dev_err;636,18779
	sal_log_pci_bus_err_info_t pci_bus_err;637,18820
	sal_log_smbios_dev_err_info_t smbios_dev_err;638,18861
	sal_log_pci_comp_err_info_t pci_comp_err;639,18908
	sal_log_plat_specific_err_info_t plat_specific_err;640,18951
	sal_log_host_ctlr_err_info_t host_ctlr_err;641,19004
	sal_log_plat_bus_err_info_t plat_bus_err;642,19049
} sal_log_platform_err_info_t;643,19092
typedef struct err_rec 646,19206
	sal_log_record_header_t sal_elog_header;647,19231
	sal_log_processor_info_t proc_err;648,19273
	sal_log_platform_err_info_t plat_err;649,19309
	u8 oem_data_pad[oem_data_pad650,19348
} ia64_err_rec_t;651,19372
ia64_sal_freq_base 658,19507
ia64_sal_cache_init 673,19933
ia64_sal_clear_state_info 685,20238
ia64_sal_get_state_info 698,20604
ia64_sal_get_state_info_size 714,21010
ia64_sal_mc_rendez 730,21483
ia64_sal_mc_set_params 745,22004
ia64_sal_pci_config_read 755,22304
ia64_sal_pci_config_write 766,22607
ia64_sal_register_physical_addr 779,22971
ia64_sal_set_vectors 793,23446
ia64_sal_update_pal 807,23863
ia64_sal_physical_id_info(822,24331
struct sal_ret_values 835,24629
	long r8;836,24653
	long r8; long r9;836,24653
	long r8; long r9; long r10;836,24653
	long r8; long r9; long r10; long r11;836,24653
#define IA64_SAL_OEMFUNC_MIN	839,24696
#define IA64_SAL_OEMFUNC_MAX	840,24737
struct sal_to_os_boot 855,25326
	u64 rr[rr856,25350
	u64	br[br857,25386
	u64 gr1;858,25451
	u64 gr12;859,25475
	u64 gr13;860,25500
	u64 fpsr;861,25536
	u64	pfs;862,25547
	u64 rnat;863,25557
	u64 unat;864,25568
	u64 bspstore;865,25579
	u64 dcr;866,25594
	u64 iva;867,25636
	u64 pta;868,25646
	u64 itv;869,25656
	u64 pmv;870,25666
	u64 cmcv;871,25676
	u64 lrr[lrr872,25687
	u64 gr[gr873,25700
	u64 pr;874,25712
	u64 lc;875,25749
	struct ia64_fpreg fp[fp876,25777

xen/include/asm-ia64/linux-xen/asm/machvec_dig.h,817
#define _ASM_IA64_MACHVEC_DIG_h2,32
#define platform_name	13,305
#define platform_setup	19,433
#define platform_dma_init	21,472
#define platform_dma_alloc_coherent	22,513
#define platform_dma_free_coherent	23,582
#define platform_dma_map_single	24,649
#define platform_dma_unmap_single	25,711
#define platform_dma_map_sg	26,776
#define platform_dma_unmap_sg	27,830
#define platform_dma_sync_single_for_cpu	28,888
#define platform_dma_sync_sg_for_cpu	30,969
#define platform_dma_sync_single_for_device	32,1043
#define platform_dma_sync_sg_for_device	34,1130
#define platform_dma_mapping_error	36,1210
#define platform_dma_supported	37,1277
#define platform_pci_get_legacy_mem	39,1338
#define platform_pci_legacy_read	40,1407
#define platform_pci_legacy_write	41,1470
#define platform_setup	43,1541

xen/include/asm-ia64/linux-xen/asm/machvec_hpzx1.h,1426
#define _ASM_IA64_MACHVEC_HPZX1_h2,34
#define platform_name	21,702
#define platform_setup	25,824
#define platform_irq_init	26,862
#define platform_dma_init	28,906
#define platform_dma_alloc_coherent	29,947
#define platform_dma_free_coherent	30,1016
#define platform_dma_map_single	31,1083
#define platform_dma_unmap_single	32,1145
#define platform_dma_map_sg	33,1210
#define platform_dma_unmap_sg	34,1264
#define platform_dma_sync_single_for_cpu	35,1322
#define platform_dma_sync_sg_for_cpu	37,1403
#define platform_dma_sync_single_for_device	39,1477
#define platform_dma_sync_sg_for_device	41,1564
#define platform_dma_mapping_error	43,1644
#define platform_dma_supported	44,1711
#define platform_pci_get_legacy_mem	46,1772
#define platform_pci_legacy_read	47,1841
#define platform_pci_legacy_write	48,1904
#define platform_setup	50,1975
#define platform_dma_init	51,2011
#define platform_dma_alloc_coherent	52,2052
#define platform_dma_free_coherent	53,2108
#define platform_dma_map_single	54,2162
#define platform_dma_unmap_single	55,2211
#define platform_dma_map_sg	56,2263
#define platform_dma_unmap_sg	57,2304
#define platform_dma_sync_single_for_cpu	58,2349
#define platform_dma_sync_sg_for_cpu	59,2414
#define platform_dma_sync_single_for_device	60,2472
#define platform_dma_sync_sg_for_device	61,2540
#define platform_dma_supported	62,2601
#define platform_dma_mapping_error	63,2652

xen/include/asm-ia64/linux-xen/asm/mca_asm.h,847
#define _ASM_IA64_MCA_ASM_H13,415
#define PSR_IC	15,444
#define PSR_I	16,463
#define	PSR_DT	17,481
#define PSR_RT	18,500
#define PSR_MC	19,519
#define PSR_IT	20,538
#define PSR_BN	21,557
#define INST_VA_TO_PA(30,826
#define INST_VA_TO_PA(33,895
#define DATA_VA_TO_PA(42,1196
#define DATA_PA_TO_VA(51,1472
#define DATA_PA_TO_VA(55,1576
#define SET_PER_CPU_DATA(74,1984
#define GET_THIS_PADDR(88,2434
#define GET_THIS_PADDR(92,2557
#define  PHYSICAL_MODE_ENTER(121,3654
#define VIRTUAL_MODE_ENTER(202,5799
#define VIRTUAL_MODE_ENTER(254,6913
#define  rse_rsc_offset	326,8522
#define  rse_pfs_offset	327,8549
#define  rse_ifs_offset	328,8596
#define  rse_bspstore_offset	329,8643
#define  rse_rnat_offset	330,8694
#define  rse_ndirty_offset	331,8746
#define rse_switch_context(346,9263
#define rse_return_context(378,10274

xen/include/asm-ia64/linux-xen/asm/io.h,3902
#define _ASM_IA64_IO_H2,23
#define __SLOW_DOWN_IO	23,880
#define SLOW_DOWN_IO	24,920
#define __IA64_UNCACHED_OFFSET	29,1003
#define IO_SPACE_LIMIT	37,1333
#define MAX_IO_SPACES_BITS	39,1379
#define MAX_IO_SPACES	40,1409
#define IO_SPACE_BITS	41,1461
#define IO_SPACE_SIZE	42,1488
#define IO_SPACE_NR(44,1536
#define IO_SPACE_BASE(45,1589
#define IO_SPACE_PORT(46,1646
#define IO_SPACE_SPARSE_ENCODING(48,1707
#define IO_SPACE_SPARSE_DECODING(52,1836
#define IO_SPACE_SPARSE_PORTS_PER_PAGE	53,1913
struct io_space 56,1987
	unsigned long mmio_base;57,2005
	int sparse;58,2056
#define PIO_OFFSET	74,2514
#define PIO_MASK	75,2580
#define PIO_RESERVED	76,2615
#define HAVE_ARCH_PIO_SIZE77,2660
virt_to_maddr 91,2925
maddr_to_virt 98,3043
#define ARCH_HAS_VALID_PHYS_ADDR_RANGE104,3129
#define bus_to_virt	111,3396
#define virt_to_bus	112,3430
#define page_to_bus	113,3464
#define __ia64_mf_a(121,3620
static inline void ___ia64_mmiowb(132,3978
__ia64_mk_io_addr 138,4056
#define __ia64_inb	153,4350
#define __ia64_inw	154,4381
#define __ia64_inl	155,4412
#define __ia64_outb	156,4443
#define __ia64_outw	157,4476
#define __ia64_outl	158,4509
#define __ia64_readb	159,4542
#define __ia64_readw	160,4577
#define __ia64_readl	161,4612
#define __ia64_readq	162,4647
#define __ia64_readb_relaxed	163,4682
#define __ia64_readw_relaxed	164,4725
#define __ia64_readl_relaxed	165,4768
#define __ia64_readq_relaxed	166,4811
#define __ia64_writeb	167,4854
#define __ia64_writew	168,4891
#define __ia64_writel	169,4928
#define __ia64_writeq	170,4965
#define __ia64_mmiowb	171,5002
___ia64_inb 182,5492
___ia64_inw 193,5678
___ia64_inl 204,5866
___ia64_outb 215,6042
___ia64_outw 224,6207
___ia64_outl 233,6374
__insb 242,6537
__insw 251,6695
__insl 260,6854
__outsb 269,7011
__outsw 278,7182
__outsl 287,7354
#define __inb	300,7709
#define __inw	301,7737
#define __inl	302,7765
#define __outb	303,7793
#define __outw	304,7823
#define __outl	305,7853
#define __mmiowb	306,7883
#define inb(308,7917
#define inw(309,7942
#define inl(310,7967
#define insb(311,7992
#define insw(312,8026
#define insl(313,8060
#define outb(314,8094
#define outw(315,8124
#define outl(316,8154
#define outsb(317,8184
#define outsw(318,8220
#define outsl(319,8256
#define mmiowb(320,8292
___ia64_readb 331,8687
___ia64_readw 337,8820
___ia64_readl 343,8952
___ia64_readq 349,9084
__writeb 355,9208
__writew 361,9339
__writel 367,9472
__writeq 373,9601
#define __readb	378,9713
#define __readw	379,9745
#define __readl	380,9777
#define __readq	381,9809
#define __readb_relaxed	382,9841
#define __readw_relaxed	383,9888
#define __readl_relaxed	384,9935
#define __readq_relaxed	385,9982
#define readb(387,10030
#define readw(388,10060
#define readl(389,10090
#define readq(390,10120
#define readb_relaxed(391,10150
#define readw_relaxed(392,10196
#define readl_relaxed(393,10242
#define readq_relaxed(394,10288
#define __raw_readb	395,10334
#define __raw_readw	396,10360
#define __raw_readl	397,10386
#define __raw_readq	398,10412
#define __raw_readb_relaxed	399,10438
#define __raw_readw_relaxed	400,10480
#define __raw_readl_relaxed	401,10522
#define __raw_readq_relaxed	402,10564
#define writeb(403,10606
#define writew(404,10645
#define writel(405,10684
#define writeq(406,10723
#define __raw_writeb	407,10762
#define __raw_writew	408,10790
#define __raw_writel	409,10818
#define __raw_writeq	410,10846
# define inb_p	413,10889
# define inw_p	416,10930
# define inl_p	419,10971
# define outb_p	423,11014
# define outw_p	426,11058
# define outl_p	429,11102
ioremap 439,11382
iounmap 445,11519
#define ioremap_nocache(449,11562
#define dma_cache_inv(460,11898
#define dma_cache_wback(461,11963
#define dma_cache_wback_inv(462,12028
#define BIO_VMERGE_BOUNDARY	475,12577
#define BIO_VMERGE_BOUNDARY	487,13016

xen/include/asm-ia64/linux-xen/asm/ia64regs.h,2337
#define _ASM_IA64_IA64REGS_H8,172
#define _IA64_REG_IP	19,395
#define _IA64_REG_PSR	20,440
#define _IA64_REG_PSR_L	21,468
#define _IA64_REG_GP	25,532
#define _IA64_REG_R8	26,568
#define _IA64_REG_R9	27,604
#define _IA64_REG_SP	28,640
#define _IA64_REG_TP	29,677
#define _IA64_REG_AR_KR0	33,744
#define _IA64_REG_AR_KR1	34,774
#define _IA64_REG_AR_KR2	35,804
#define _IA64_REG_AR_KR3	36,834
#define _IA64_REG_AR_KR4	37,864
#define _IA64_REG_AR_KR5	38,894
#define _IA64_REG_AR_KR6	39,924
#define _IA64_REG_AR_KR7	40,954
#define _IA64_REG_AR_RSC	41,984
#define _IA64_REG_AR_BSP	42,1014
#define _IA64_REG_AR_BSPSTORE	43,1044
#define _IA64_REG_AR_RNAT	44,1079
#define _IA64_REG_AR_FCR	45,1110
#define _IA64_REG_AR_EFLAG	46,1140
#define _IA64_REG_AR_CSD	47,1172
#define _IA64_REG_AR_SSD	48,1202
#define _IA64_REG_AR_CFLAG	49,1232
#define _IA64_REG_AR_FSR	50,1264
#define _IA64_REG_AR_FIR	51,1294
#define _IA64_REG_AR_FDR	52,1324
#define _IA64_REG_AR_CCV	53,1354
#define _IA64_REG_AR_UNAT	54,1384
#define _IA64_REG_AR_FPSR	55,1415
#define _IA64_REG_AR_ITC	56,1446
#define _IA64_REG_AR_PFS	57,1476
#define _IA64_REG_AR_LC	58,1506
#define _IA64_REG_AR_EC	59,1536
#define _IA64_REG_CR_DCR	63,1592
#define _IA64_REG_CR_ITM	64,1622
#define _IA64_REG_CR_IVA	65,1652
#define _IA64_REG_CR_PTA	66,1682
#define _IA64_REG_CR_IPSR	67,1712
#define _IA64_REG_CR_ISR	68,1743
#define _IA64_REG_CR_IIP	69,1773
#define _IA64_REG_CR_IFA	70,1803
#define _IA64_REG_CR_ITIR	71,1833
#define _IA64_REG_CR_IIPA	72,1864
#define _IA64_REG_CR_IFS	73,1895
#define _IA64_REG_CR_IIM	74,1925
#define _IA64_REG_CR_IHA	75,1955
#define _IA64_REG_CR_LID	76,1985
#define _IA64_REG_CR_IVR	77,2015
#define _IA64_REG_CR_TPR	78,2063
#define _IA64_REG_CR_EOI	79,2093
#define _IA64_REG_CR_IRR0	80,2123
#define _IA64_REG_CR_IRR1	81,2172
#define _IA64_REG_CR_IRR2	82,2221
#define _IA64_REG_CR_IRR3	83,2270
#define _IA64_REG_CR_ITV	84,2319
#define _IA64_REG_CR_PMV	85,2349
#define _IA64_REG_CR_CMCV	86,2379
#define _IA64_REG_CR_LRR0	87,2410
#define _IA64_REG_CR_LRR1	88,2441
#define _IA64_REG_INDR_CPUID	92,2531
#define _IA64_REG_INDR_DBR	93,2586
#define _IA64_REG_INDR_IBR	94,2618
#define _IA64_REG_INDR_PKR	95,2650
#define _IA64_REG_INDR_PMC	96,2682
#define _IA64_REG_INDR_PMD	97,2714
#define _IA64_REG_INDR_RR	98,2746

xen/include/asm-ia64/linux-xen/asm/system.h,2228
#define _ASM_IA64_SYSTEM_H2,27
#define GATE_ADDR	25,661
#define KERNEL_START	30,836
#define PERCPU_ADDR	31,895
struct pci_vector_struct 39,1018
	__u16 segment;40,1045
	__u16 bus;41,1086
	__u32 pci_id;42,1119
	__u8 pin;43,1204
	__u32 irq;44,1258
extern struct ia64_boot_param 47,1293
	__u64 command_line;48,1325
	__u64 efi_systab;49,1396
	__u64 efi_memmap;50,1459
	__u64 efi_memmap_size;51,1520
	__u64 efi_memdesc_size;52,1574
	__u32 efi_memdesc_version;53,1643
		__u16 num_cols;55,1713
		__u16 num_rows;56,1780
		__u16 orig_x;57,1844
		__u16 orig_y;58,1886
	} console_info;59,1928
	__u64 fpswa;60,1945
	__u64 initrd_start;61,2006
	__u64 initrd_size;62,2027
       __u64 domain_start;64,2077
       __u64 domain_size;65,2164
} *ia64_boot_param;ia64_boot_param67,2229
#define mb(91,3259
#define rmb(92,3282
#define wmb(93,3301
#define read_barrier_depends(94,3320
# define smp_mb(97,3386
# define smp_rmb(98,3409
# define smp_wmb(99,3434
# define smp_read_barrier_depends(100,3459
# define smp_mb(102,3524
# define smp_rmb(103,3552
# define smp_wmb(104,3581
# define smp_read_barrier_depends(105,3610
#define set_mb(113,3840
#define set_wmb(114,3907
#define safe_halt(116,3976
#define __local_irq_save(132,4530
#define __local_irq_disable(140,4689
#define __local_irq_restore(146,4794
# define __save_ip(152,4941
# define local_irq_save(154,5004
# define local_irq_disable(164,5199
# define local_irq_restore(166,5282
# define local_irq_save(177,5569
# define local_irq_disable(178,5616
# define local_irq_restore(179,5667
#define local_irq_enable(182,5757
#define local_save_flags(183,5840
#define irqs_disabled(185,5930
#define local_irq_is_enabled(193,6097
#define ia64_platform_is(195,6207
# define IS_IA32_PROCESS(200,6319
# define IS_IA32_PROCESS(202,6382
static inline void ia32_save_state(204,6436
static inline void ia32_load_state(205,6520
# define PERFMON_IS_SYSWIDE(227,7302
# define PERFMON_IS_SYSWIDE(229,7375
#define IA64_HAS_EXTRA_STATE(232,7417
#define __switch_to(236,7592
# define switch_to(252,8305
# define switch_to(261,8648
#define __ARCH_WANT_UNLOCKED_CTXSW288,9504
#define ia64_platform_is(290,9540
#define arch_align_stack(294,9628

xen/include/asm-ia64/linux-xen/asm/types.h,1004
#define _ASM_IA64_TYPES_H2,26
# define __IA64_UL(17,524
# define __IA64_UL_CONST(18,551
#  define BITS_PER_LONG 21,601
# define __IA64_UL(25,643
# define __IA64_UL_CONST(26,687
typedef unsigned int umode_t;28,722
typedef __signed__ char __s8;35,872
typedef unsigned char __u8;36,902
typedef __signed__ short __s16;38,931
typedef unsigned short __u16;39,963
typedef __signed__ int __s32;41,994
typedef unsigned int __u32;42,1024
typedef __signed__ long __s64;44,1053
typedef unsigned long __u64;45,1084
typedef __s8 s8;52,1213
typedef __u8 u8;53,1230
typedef __s16 s16;55,1248
typedef __u16 u16;56,1267
typedef __s32 s32;58,1287
typedef __u32 u32;59,1306
typedef __s64 s64;61,1326
typedef __u64 u64;62,1345
#define BITS_PER_LONG 64,1365
typedef u64 dma_addr_t;68,1443
typedef unsigned short kmem_bufctl_t;70,1468
typedef unsigned int gfp_t;79,1619
typedef u64 resource_size_t;80,1647
typedef u32 dev_t;81,1676
typedef unsigned int mode_t;82,1695
#define THIS_MODULE	83,1724

xen/include/asm-ia64/linux-xen/asm/sn/arch.h,497
#define _ASM_IA64_SN_ARCH_H12,374
#define MAX_TIO_NODES	36,1248
#define MAX_COMPACT_NODES	37,1284
#define MAX_NUMALINK_NODES	47,1638
struct sn_hub_info_s 54,1896
	u8 shub2;55,1919
	u8 nasid_shift;56,1930
	u8 as_shift;57,1947
	u8 shub_1_1_found;58,1961
	u16 nasid_bitmask;59,1981
#define sn_hub_info 62,2058
#define is_shub2(64,2123
#define is_shub1(65,2163
#define is_shub2(67,2214
#define is_shub1(68,2235
#define enable_shub_wars_1_1(74,2332
#define sn_cnodeid_to_nasid	82,2552

xen/include/asm-ia64/linux-xen/asm/sn/nodepda.h,617
#define _ASM_IA64_SN_NODEPDA_H9,298
struct phys_cpuid 34,878
	short			nasid;35,898
	char			subnode;36,914
	char			slice;37,931
struct nodepda_s 40,950
	void 		*pdinfo;pdinfo41,969
	struct bteinfo_s	bte_if[bte_if47,1102
	struct timer_list	bte_recovery_timer;48,1171
	spinlock_t		bte_recovery_lock;49,1210
	struct nodepda_s	*pernode_pdaindr[pernode_pdaindr55,1313
	struct phys_cpuid	phys_cpuid[phys_cpuid60,1436
	spinlock_t		ptc_lock ____cacheline_aligned_in_smp;61,1476
typedef struct nodepda_s nodepda_t;64,1532
#define sn_nodepda	78,2016
#define	NODEPDA(79,2066
#define is_headless_node(85,2228

xen/include/asm-ia64/linux-xen/asm/sn/rw_mmr.h,36
#define _ASM_IA64_SN_RW_MMR_H9,285

xen/include/asm-ia64/linux-xen/asm/sn/intr.h,1139
#define _ASM_IA64_SN_INTR_H10,296
#define SGI_UART_VECTOR	19,429
#define SGI_XPC_ACTIVATE	22,531
#define SGI_II_ERROR	23,561
#define SGI_XBOW_ERROR	24,588
#define SGI_PCIASIC_ERROR	25,617
#define SGI_ACPI_SCI_INT	26,648
#define SGI_TIOCA_ERROR	27,678
#define SGI_TIO_ERROR	28,708
#define SGI_TIOCX_ERROR	29,736
#define SGI_MMTIMER_VECTOR	30,766
#define SGI_XPC_NOTIFY	31,798
#define IA64_SN2_FIRST_DEVICE_VECTOR	33,828
#define IA64_SN2_LAST_DEVICE_VECTOR	34,870
#define SN2_IRQ_RESERVED	36,912
#define SN2_IRQ_CONNECTED	37,941
#define SN2_IRQ_SHARED	38,971
struct sn_irq_info 41,1026
	struct sn_irq_info *irq_next;irq_next42,1047
	short		irq_nasid;43,1110
	int		irq_slice;44,1161
	int		irq_cpuid;45,1210
	int		irq_irq;46,1259
	int		irq_int_bit;47,1295
	u64	irq_xtalkaddr;49,1365
	int		irq_bridge_type;50,1417
	void	       *irq_bridge;irq_bridge51,1471
	void	       *irq_pciioinfo;irq_pciioinfo52,1529
	int		irq_last_intr;53,1590
	int		irq_cookie;54,1643
	int		irq_flags;55,1687
	int		irq_share_cnt;56,1716
	struct list_head	list;57,1769
	struct rcu_head		rcu;59,1839
#define CPU_VECTOR_TO_IRQ(71,2230

xen/include/asm-ia64/linux-xen/asm/sn/io.h,994
#define _ASM_SN_IO_H10,277
extern void * sn_io_addr(14,355
#define __sn_mf_a(19,527
#define sn_dma_flush(25,655
#define __sn_inb 30,752
#define __sn_inw 31,779
#define __sn_inl 32,806
#define __sn_outb 33,833
#define __sn_outw 34,862
#define __sn_outl 35,891
#define __sn_readb 36,920
#define __sn_readw 37,951
#define __sn_readl 38,982
#define __sn_readq 39,1013
#define __sn_readb_relaxed 40,1044
#define __sn_readw_relaxed 41,1091
#define __sn_readl_relaxed 42,1138
#define __sn_readq_relaxed 43,1185
#define __sn_setq_relaxed(49,1315
#define __sn_clrq_relaxed(51,1406
___sn_inw 78,2024
___sn_inl 92,2263
___sn_outb 106,2490
___sn_outw 117,2666
___sn_outl 128,2844
___sn_readb 148,3298
___sn_readw 159,3519
___sn_readl 170,3740
___sn_readq 181,3958
sn_inb_fast 201,4469
sn_inw_fast 212,4651
sn_inl_fast 223,4836
___sn_readb_relaxed 234,5016
___sn_readw_relaxed 240,5155
___sn_readl_relaxed 246,5293
___sn_readq_relaxed 252,5431
sn_pci_set_vchan(260,5577

xen/include/asm-ia64/linux-xen/asm/sn/pcibr_provider.h,1972
#define _ASM_IA64_SN_PCI_PCIBR_PROVIDER_H9,306
#define PV907516 19,509
#define BUSTYPE_MASK 21,588
#define IS_PCIX(24,671
#define IS_PCI_BRIDGE_ASIC(25,734
#define IS_PIC_SOFT(27,848
#define PCIBR_BRIDGETYPE_UNKNOWN 33,1002
#define PCIBR_BRIDGETYPE_PIC 34,1044
#define PCIBR_BRIDGETYPE_TIOCP 35,1086
#define PCI64_ATTR_PREF 40,1174
#define PCI64_ATTR_PREC 41,1227
#define PCI64_ATTR_VIRTUAL 42,1280
#define PCI64_ATTR_BAR 43,1333
#define PCI64_ATTR_SWAP 44,1386
#define PCI64_ATTR_VIRTUAL1 45,1439
#define PCI32_LOCAL_BASE 47,1493
#define PCI32_MAPPED_BASE 48,1535
#define PCI32_DIRECT_BASE 49,1586
#define IS_PCI32_MAPPED(51,1638
#define IS_PCI32_DIRECT(53,1785
#define PCI32_ATE_V 59,1916
#define PCI32_ATE_CO 60,1967
#define PCI32_ATE_PREC 61,2018
#define PCI32_ATE_MSI 62,2069
#define PCI32_ATE_PREF 63,2120
#define PCI32_ATE_BAR 64,2171
#define PCI32_ATE_ADDR_SHFT 65,2222
#define MINIMAL_ATES_REQUIRED(67,2266
#define MINIMAL_ATE_FLAG(70,2367
#define ATE_SWAPSHIFT 74,2505
#define ATE_SWAP_ON(75,2548
#define ATE_SWAP_OFF(76,2618
#define IOPFNSHIFT 82,2736
#define IOPFNSHIFT 84,2815
#define IOPGSIZE 87,2897
#define IOPG(88,2955
#define IOPGOFF(89,3015
#define PCIBR_DEV_SWAP_DIR 91,3077
#define PCIBR_CTRL_PAGE_SIZE 92,3130
struct ate_resource{ate_resource97,3208
	u64 *ate;ate98,3229
	u64 num_ate;99,3240
	u64 lowest_free_index;100,3254
struct pcibus_info 103,3282
	struct pcibus_bussoft	pbi_buscommon;104,3303
	u32                pbi_moduleid;105,3363
	short                   pbi_bridge_type;106,3397
	short                   pbi_bridge_mode;107,3439
	struct ate_resource     pbi_int_ate_resource;109,3482
	u64                pbi_int_ate_size;110,3529
	u64                pbi_dir_xbase;112,3568
	char                    pbi_hub_xid;113,3603
	u64                pbi_devreg[pbi_devreg115,3642
	u32		pbi_valid_devices;117,3678
	u32		pbi_enabled_devices;118,3703
	spinlock_t              pbi_lock;120,3731

xen/include/asm-ia64/linux-xen/asm/sn/pcidev.h,1078
#define _ASM_IA64_SN_PCI_PCIDEV_H9,301
struct sn_pci_controller 23,667
	struct pci_controller pci_controller;24,694
	struct list_head pcidev_info;25,733
#define SN_PCI_CONTROLLER(28,768
#define SN_PCIDEV_INFO(30,844
#define SN_PCIBUS_BUSSOFT_INFO(32,897
#define SN_PCIBUS_BUSSOFT(39,1181
#define SN_PCIBUS_BUSSOFT_INFO(42,1297
#define SN_PCIDEV_BUSSOFT(50,1618
#define SN_PCIDEV_BUSPROVIDER(53,1722
#define PCIIO_BUS_NONE	56,1805
#define PCIIO_SLOT_NONE 57,1860
#define PCIIO_FUNC_NONE 58,1888
#define PCIIO_VENDOR_ID_NONE	59,1916
struct pcidev_info 61,1951
	u64		pdi_pio_mapped_addr[pdi_pio_mapped_addr62,1972
	u64		pdi_slot_host_handle;63,2026
	struct pcibus_bussoft	*pdi_pcibus_info;pdi_pcibus_info65,2088
	struct pcidev_info	*pdi_host_pcidev_info;pdi_host_pcidev_info66,2158
	struct pci_dev		*pdi_linux_pcidev;pdi_linux_pcidev67,2227
	struct sn_irq_info	*pdi_sn_irq_info;pdi_sn_irq_info69,2285
	struct sn_pcibus_provider *pdi_provider;pdi_provider70,2323
	struct pci_dev 		*host_pci_dev;host_pci_dev71,2382
	struct list_head	pdi_list;72,2436

xen/include/asm-ia64/linux-xen/asm/sn/types.h,450
#define _ASM_IA64_SN_TYPES_H10,327
typedef unsigned long 	cpuid_t;14,383
typedef signed short	nasid_t;15,415
typedef signed char	partid_t;16,479
typedef unsigned int    moduleid_t;17,533
typedef unsigned int    cmoduleid_t;18,611
typedef unsigned char	slotid_t;19,687
typedef unsigned char	slabid_t;20,752
typedef u64 nic_t;21,814
typedef unsigned long iopaddr_t;22,833
typedef unsigned long paddr_t;24,878
typedef short cnodeid_t;26,916

xen/include/asm-ia64/linux-xen/asm/sn/addrs.h,3190
#define _ASM_IA64_SN_ADDRS_H10,294
#define NASID_BITMASK	61,1744
#define NASID_SHIFT	62,1796
#define AS_SHIFT	63,1844
#define AS_BITMASK	64,1886
#define NASID_MASK 66,1913
#define AS_MASK	67,1981
#define AS_GET_VAL	73,2094
#define AS_AMO_VAL	74,2118
#define AS_CAC_VAL	75,2142
#define AS_GET_SPACE	76,2166
#define AS_AMO_SPACE	77,2213
#define AS_CAC_SPACE	78,2260
#define SH1_LOCAL_MMR_OFFSET	84,2361
#define SH2_LOCAL_MMR_OFFSET	85,2405
#define LOCAL_MMR_OFFSET	86,2449
#define LOCAL_MMR_SPACE	87,2533
#define LOCAL_PHYS_MMR_SPACE	88,2602
#define SH1_GLOBAL_MMR_OFFSET	90,2673
#define SH2_GLOBAL_MMR_OFFSET	91,2718
#define GLOBAL_MMR_OFFSET	92,2763
#define GLOBAL_MMR_SPACE	93,2850
#define GLOBAL_PHYS_MMR_SPACE	98,2955
#define TO_PHYS_MASK	104,3063
#define NASID_SPACE(110,3146
#define REMOTE_ADDR(111,3196
#define NODE_OFFSET(112,3244
#define NODE_ADDRSPACE_SIZE 113,3302
#define NASID_GET(114,3352
#define LOCAL_MMR_ADDR(115,3425
#define GLOBAL_MMR_ADDR(116,3475
#define GLOBAL_MMR_PHYS_ADDR(117,3542
#define GLOBAL_CAC_ADDR(118,3619
#define CHANGE_NASID(119,3678
#define IS_TIO_NASID(120,3758
#define BWIN_TOP	124,3852
#define CAC_BASE	129,3926
#define AMO_BASE	130,3973
#define AMO_PHYS_BASE	131,4031
#define GET_BASE	132,4091
#define TO_PHYS(137,4208
#define TO_CAC(138,4249
#define TO_AMO(140,4339
#define TO_GET(141,4386
#define TO_AMO(143,4439
#define TO_GET(144,4474
#define SH1_TIO_PHYS_TO_DMA(155,4929
#define SH2_NETWORK_BANK_OFFSET(158,5019
#define SH2_NETWORK_BANK_SELECT(161,5128
#define SH2_NETWORK_ADDRESS(165,5289
#define SH2_TIO_PHYS_TO_DMA(168,5388
#define PHYS_TO_TIODMA(171,5492
#define PHYS_TO_DMA(174,5590
#define IS_AMO_ADDRESS(181,5717
#define IS_AMO_PHYS_ADDRESS(182,5791
#define BWIN_SIZE_BITS	190,6035
#define TIO_BWIN_SIZE_BITS	191,6091
#define NODE_SWIN_BASE(192,6148
#define TIO_SWIN_BASE(194,6256
#define NODE_IO_BASE(196,6350
#define TIO_IO_BASE(197,6412
#define BWIN_SIZE	198,6494
#define NODE_BWIN_BASE0(199,6538
#define NODE_BWIN_BASE(200,6596
#define RAW_NODE_SWIN_BASE(201,6679
#define BWIN_WIDGET_MASK	202,6762
#define BWIN_WINDOWNUM(203,6792
#define SH1_IS_BIG_WINDOW_ADDR(204,6864
#define TIO_BWIN_WINDOW_SELECT_MASK	206,6916
#define TIO_BWIN_WINDOWNUM(207,6956
#define TIO_HWIN_SHIFT_BITS	209,7048
#define TIO_HWIN(210,7080
#define SWIN_SIZE_BITS	218,7302
#define	SWIN_WIDGET_MASK	219,7330
#define TIO_SWIN_SIZE_BITS	221,7361
#define TIO_SWIN_SIZE	222,7392
#define TIO_SWIN_WIDGET_MASK	223,7444
#define	SWIN_WIDGETNUM(231,7659
#define TIO_SWIN_WIDGETNUM(232,7732
#define SH1_TIO_IOSPACE_ADDR(250,8458
#define SH1_REMOTE_BWIN_MMR(253,8521
#define SH1_REMOTE_SWIN_MMR(256,8583
#define SH1_REMOTE_MMR(259,8665
#define SH2_TIO_IOSPACE_ADDR(264,8830
#define SH2_REMOTE_MMR(267,8945
#define TIO_IOSPACE_ADDR(272,9070
#define SH_REMOTE_MMR(276,9193
#define REMOTE_HUB_ADDR(279,9286
#define HUB_L(284,9427
#define	HUB_S(285,9476
#define REMOTE_HUB_L(287,9534
#define REMOTE_HUB_S(288,9595
#define CTALK_NASID_SHFT	293,9702
#define CTALK_NASID_MASK	294,9731
#define CTALK_CID_SHFT	295,9789
#define CTALK_CID_MASK	296,9817
#define CTALK_NODE_OFFSET	297,9869

xen/include/asm-ia64/linux-xen/asm/sn/hubdev.h,1652
#define _ASM_IA64_SN_XTALK_HUBDEV_H9,303
#define HUB_WIDGET_ID_MAX 17,427
#define DEV_PER_WIDGET 18,457
#define IIO_ITTE_WIDGET_BITS 19,488
#define IIO_ITTE_WIDGET_MASK 20,555
#define IIO_ITTE_WIDGET_SHIFT 21,617
#define IIO_ITTE_WIDGET(23,652
#define SWIN0_BIGWIN 29,820
#define IIO_NUM_ITTES 30,871
#define HUB_NUM_BIG_WINDOW 31,897
struct sn_flush_device_common 36,1088
	int sfdl_bus;37,1120
	int sfdl_slot;38,1135
	int sfdl_pin;39,1151
	struct common_bar_list 40,1166
		unsigned long start;41,1192
		unsigned long end;42,1215
	} sfdl_bar_list[sfdl_bar_list43,1236
	unsigned long sfdl_force_int_addr;44,1257
	unsigned long sfdl_flush_value;45,1293
	volatile unsigned long *sfdl_flush_addr;sfdl_flush_addr46,1326
	u32 sfdl_persistent_busnum;47,1368
	u32 sfdl_persistent_segment;48,1397
	struct pcibus_info *sfdl_pcibus_info;sfdl_pcibus_info49,1427
struct sn_flush_device_kernel 53,1531
	spinlock_t sfdl_flush_lock;54,1563
	struct sn_flush_device_common *common;common55,1592
struct sn_flush_device_war 62,1859
	struct sn_flush_device_common common;63,1888
	u32 filler;64,1927
struct sn_flush_nasid_entry 70,2086
	struct sn_flush_device_kernel **widget_p;widget_p71,2117
	u64 iio_itte[iio_itte72,2191
struct hubdev_info 75,2213
	geoid_t				hdi_geoid;76,2234
	short				hdi_nasid;77,2257
	short				hdi_peer_nasid;78,2278
	struct sn_flush_nasid_entry	hdi_flush_nasid_list;80,2331
	struct xwidget_info		hdi_xwidget_info[hdi_xwidget_info81,2382
	void				*hdi_nodepda;hdi_nodepda84,2447
	void				*hdi_node_vertex;hdi_node_vertex85,2470
	u32				max_segment_number;86,2497
	u32				max_pcibus_number;87,2525

xen/include/asm-ia64/linux-xen/asm/iosapic.h,1960
#define __ASM_IA64_IOSAPIC_H2,29
#define	IOSAPIC_REG_SELECT	4,59
#define	IOSAPIC_WINDOW	5,90
#define	IOSAPIC_EOI	6,119
#define	IOSAPIC_VERSION	8,146
#define	IOSAPIC_RTE_LOW(13,210
#define	IOSAPIC_RTE_HIGH(14,248
#define	IOSAPIC_DEST_SHIFT	16,288
#define	IOSAPIC_DELIVERY_SHIFT	21,344
#define	IOSAPIC_FIXED	22,378
#define	IOSAPIC_LOWEST_PRIORITY	23,406
#define	IOSAPIC_PMI	24,442
#define	IOSAPIC_NMI	25,468
#define	IOSAPIC_INIT	26,494
#define	IOSAPIC_EXTINT	27,521
#define	IOSAPIC_POLARITY_SHIFT	32,580
#define	IOSAPIC_POL_HIGH	33,615
#define	IOSAPIC_POL_LOW	34,643
#define	IOSAPIC_TRIGGER_SHIFT	39,694
#define	IOSAPIC_EDGE	40,728
#define	IOSAPIC_LEVEL	41,753
#define	IOSAPIC_MASK_SHIFT	47,800
#define	IOSAPIC_MASK	48,831
#define NR_IOSAPICS	54,924
struct iosapic 57,962
	char __iomem    *addr;addr58,979
	unsigned int    gsi_base;59,1038
	unsigned short  num_rte;60,1108
	int     rtes_inuse;61,1173
	unsigned int    id;62,1233
	unsigned short  node;64,1290
static inline int find_iosapic_by_addr(70,1417
static inline unsigned int iosapic_read(84,1616
static inline void iosapic_write(96,1946
static inline void iosapic_eoi(109,2290
#define iosapic_remove(125,2759
#define iosapic_system_init(147,3592
#define iosapic_init(148,3652
#define iosapic_remove(149,3704
#define iosapic_register_intr(150,3750
#define iosapic_unregister_intr(151,3809
#define iosapic_override_isa_irq(152,3866
#define iosapic_register_platform_intr(153,3946
#define move_irq(158,4056
#undef nop161,4088
struct rte_entry 164,4107
	u32	vector	167,4148
		delivery_mode	168,4166
		dest_mode	169,4187
		delivery_status	170,4231
		polarity	171,4254
		__reserved0	172,4270
		trigger	173,4289
		mask	174,4305
		__reserved1	175,4318
	} lo;176,4338
	u32	__reserved2	178,4355
		eid	179,4378
		id	180,4390
	} hi;181,4401
	u32 val;182,4408
#define IOSAPIC_RTEINDEX(186,4429
#define IO_APIC_BASE(194,4652
#define IO_APIC_ID(195,4720

xen/include/asm-ia64/linux-xen/asm/percpu.h,579
#define _ASM_IA64_PERCPU_H2,27
#define PERCPU_ENOUGH_ROOM 9,153
# define THIS_CPU(12,218
# define __SMALL_ADDR_AREA	20,431
# define __SMALL_ADDR_AREA22,503
#define DECLARE_PER_CPU(25,538
#define __DEFINE_PER_CPU(29,692
#define per_cpu(44,1190
#define __get_cpu_var(45,1271
#define per_cpu_addr(47,1382
#define per_cpu(59,1744
#define __get_cpu_var(60,1806
#define per_cpu_init(61,1850
static inline void *per_cpu_allocate(per_cpu_allocate63,1910
#define EXPORT_PER_CPU_SYMBOL(72,2057
#define EXPORT_PER_CPU_SYMBOL_GPL(73,2123
#define __ia64_per_cpu_var(81,2486

xen/include/asm-ia64/linux-xen/asm/processor.h,5395
#define _ASM_IA64_PROCESSOR_H2,30
#define ARCH_HAS_SCHED_DOMAIN24,704
#define IA64_NUM_DBG_REGS	26,735
#define IA64_NUM_PMC_REGS	37,1064
#define IA64_NUM_PMD_REGS	38,1093
#define IA64_NUM_PMC_REGS	40,1128
#define IA64_NUM_PMD_REGS	41,1157
#define DEFAULT_MAP_BASE	44,1194
#define DEFAULT_TASK_SIZE	45,1255
#define TASK_SIZE	53,1549
#define TASK_UNMAPPED_BASE	59,1696
#define IA64_THREAD_FPH_VALID	61,1751
#define IA64_THREAD_DBG_VALID	62,1840
#define IA64_THREAD_PM_VALID	63,1919
#define IA64_THREAD_UAC_NOPRINT	64,2003
#define IA64_THREAD_UAC_SIGBUS	65,2090
#define IA64_THREAD_FPEMU_NOPRINT 67,2220
#define IA64_THREAD_FPEMU_SIGFPE 68,2307
#define IA64_THREAD_UAC_SHIFT	70,2399
#define IA64_THREAD_UAC_MASK	71,2431
#define IA64_THREAD_FPEMU_SHIFT	72,2511
#define IA64_THREAD_FPEMU_MASK	73,2545
#define IA64_NSEC_PER_CYC_SHIFT	81,2916
struct ia64_psr 105,3411
	__u64 reserved0 106,3429
	__u64 be 107,3451
	__u64 up 108,3466
	__u64 ac 109,3481
	__u64 mfl 110,3496
	__u64 mfh 111,3512
	__u64 reserved1 112,3528
	__u64 ic 113,3550
	__u64 i 114,3565
	__u64 pk 115,3579
	__u64 reserved2 116,3594
	__u64 dt 117,3616
	__u64 dfl 118,3631
	__u64 dfh 119,3647
	__u64 sp 120,3663
	__u64 pp 121,3678
	__u64 di 122,3693
	__u64 si 123,3708
	__u64 db 124,3723
	__u64 lp 125,3738
	__u64 tb 126,3753
	__u64 rt 127,3768
	__u64 reserved3 128,3783
	__u64 cpl 129,3805
	__u64 is 130,3821
	__u64 mc 131,3836
	__u64 it 132,3851
	__u64 id 133,3866
	__u64 da 134,3881
	__u64 dd 135,3896
	__u64 ss 136,3911
	__u64 ri 137,3926
	__u64 ed 138,3941
	__u64 bn 139,3956
	__u64 reserved4 140,3971
struct cpuinfo_ia64 148,4105
	__u32 softirq_pending;149,4127
	__u64 itm_delta;150,4151
	__u64 itm_next;151,4213
	__u64 nsec_per_cyc;152,4290
	__u64 unimpl_va_mask;153,4364
	__u64 unimpl_pa_mask;154,4447
	__u64 itc_freq;155,4531
	__u64 proc_freq;156,4580
	__u64 cyc_per_usec;157,4627
	__u64 ptce_base;158,4671
	__u32 ptce_count[ptce_count159,4689
	__u32 ptce_stride[ptce_stride160,4711
	struct task_struct *ksoftirqd;ksoftirqd161,4734
	__u64 loops_per_jiffy;164,4826
	int cpu;165,4850
	__u32 socket_id;166,4860
	__u16 core_id;167,4913
	__u16 thread_id;168,4944
	__u16 num_log;169,4978
	__u8  cores_per_socket;171,5088
	__u8  threads_per_core;172,5146
	__u64 ppn;176,5236
	__u64 features;177,5248
	__u8 number;178,5265
	__u8 revision;179,5279
	__u8 model;180,5295
	__u8 family;181,5308
	__u8 archrev;182,5322
	char vendor[vendor183,5337
	struct ia64_node_data *node_data;node_data186,5375
#define local_cpu_data	199,5797
#define cpu_data(200,5853
#define cpu_to_core(203,5921
#define cpu_to_socket(204,5974
#define cpu_to_core(206,6035
#define cpu_to_socket(207,6065
	unsigned long seg;214,6223
} mm_segment_t;215,6243
#define SET_UNALIGN_CTL(217,6260
#define GET_UNALIGN_CTL(223,6486
#define SET_FPEMU_CTL(229,6669
#define GET_FPEMU_CTL(235,6899
struct desc_struct 242,7111
	unsigned int a,243,7132
	unsigned int a, b;243,7132
#define desc_empty(246,7156
#define desc_equal(247,7209
#define GDT_ENTRY_TLS_ENTRIES	249,7302
#define GDT_ENTRY_TLS_MIN	250,7334
#define GDT_ENTRY_TLS_MAX 251,7362
#define TLS_SIZE 253,7438
struct thread_struct 258,7518
	__u32 flags;259,7541
	__u8 on_ustack;261,7693
	__u8 pad[pad262,7744
	__u64 ksp;263,7758
	__u64 map_base;264,7799
	__u64 task_size;265,7861
	__u64 rbs_bot;266,7906
	int last_fph_cpu;267,7959
	__u64 eflag;270,8056
	__u64 fsr;271,8094
	__u64 fcr;272,8142
	__u64 fir;273,8191
	__u64 fdr;274,8238
	__u64 old_k1;275,8283
	__u64 old_iob;276,8325
	struct partial_page_list *ppl;ppl277,8366
	struct desc_struct tls_array[tls_array279,8483
# define INIT_THREAD_IA32	281,8538
# define INIT_THREAD_IA32290,8737
	__u64 pmcs[pmcs293,8818
	__u64 pmds[pmds294,8850
	void *pfm_context;pfm_context295,8882
	unsigned long pfm_needs_checking;296,8946
# define INIT_THREAD_PM	297,9035
# define INIT_THREAD_PM302,9177
	__u64 dbr[dbr305,9220
	__u64 ibr[ibr306,9251
	struct ia64_fpreg fph[fph308,9289
#define INIT_THREAD 312,9362
#define start_thread(327,9722
#define release_thread(359,10933
#define prepare_to_copy(362,11028
#define KSTK_EIP(384,11890
#define KSTK_ESP(391,12075
#define ia64_get_kr(396,12206
#define ia64_set_kr(414,12848
#define ia64_is_local_fpu_owner(439,13713
#define ia64_set_local_fpu_owner(451,14126
#define ia64_drop_fpu(458,14443
#define ia64_fph_enable(474,14963
#define ia64_fph_disable(475,15045
ia64_init_fpu 479,15175
ia64_save_fpu 487,15308
ia64_load_fpu 495,15464
ia64_clear_ic 502,15592
ia64_set_psr 516,15791
ia64_itr 528,15994
ia64_itc 547,16419
ia64_itc 560,16770
ia64_ptr 579,17245
ia64_set_iva 589,17539
ia64_set_pta 597,17711
ia64_eoi 605,17848
#define cpu_relax(611,17920
ia64_get_irr(614,17986
ia64_set_lrr0 631,18386
ia64_set_lrr1 638,18498
ia64_unat_pos 650,18731
ia64_set_unat 660,18956
thread_saved_pc 673,19295
#define current_text_addr(688,19566
ia64_get_ivr 692,19681
ia64_get_pta 704,19878
ia64_set_dbr 715,20028
ia64_get_dbr 724,20171
ia64_rotr 736,20335
#define ia64_rotl(741,20405
ia64_imva 748,20599
#define ARCH_HAS_PREFETCH755,20699
#define ARCH_HAS_PREFETCHW756,20725
#define ARCH_HAS_SPINLOCK_PREFETCH757,20752
#define PREFETCH_STRIDE	758,20787
prefetch 761,20848
prefetchw 767,20933
#define spin_lock_prefetch(772,21004
ia64_get_cpl(778,21135

xen/include/asm-ia64/linux-xen/asm/machvec_sn2.h,2567
#define _ASM_IA64_MACHVEC_SN2_H29,1255
#define platform_name	86,3475
#define platform_setup	87,3505
#define platform_cpu_init	88,3539
#define platform_irq_init	89,3578
#define platform_send_ipi	90,3617
#define platform_timer_interrupt	92,3669
#define platform_global_tlb_purge 94,3728
#define platform_tlb_migrate_finish	96,3801
#define platform_pci_fixup	98,3866
#define platform_inb	99,3907
#define platform_inw	100,3939
#define platform_inl	101,3971
#define platform_outb	102,4003
#define platform_outw	103,4037
#define platform_outl	104,4071
#define platform_mmiowb	105,4105
#define platform_readb	106,4143
#define platform_readw	107,4179
#define platform_readl	108,4215
#define platform_readq	109,4251
#define platform_readb_relaxed	110,4287
#define platform_readw_relaxed	111,4338
#define platform_readl_relaxed	112,4389
#define platform_readq_relaxed	113,4440
#define platform_local_vector_to_irq	114,4491
#define platform_pci_get_legacy_mem	116,4562
#define platform_pci_legacy_read	117,4630
#define platform_pci_legacy_write	118,4692
#define platform_pci_get_legacy_mem	120,4762
#define platform_pci_legacy_read	121,4820
#define platform_pci_legacy_write	122,4872
#define platform_dma_init	124,4933
#define platform_dma_alloc_coherent	126,4984
#define platform_dma_free_coherent	127,5052
#define platform_dma_map_single	128,5118
#define platform_dma_unmap_single	129,5179
#define platform_dma_map_sg	130,5243
#define platform_dma_unmap_sg	131,5296
#define platform_dma_sync_single_for_cpu	132,5353
#define platform_dma_sync_sg_for_cpu	134,5434
#define platform_dma_sync_single_for_device	136,5508
#define platform_dma_sync_sg_for_device	138,5595
#define platform_dma_mapping_error	139,5671
#define platform_dma_supported	140,5737
#define platform_dma_alloc_coherent	142,5802
#define platform_dma_free_coherent	143,5860
#define platform_dma_map_single	144,5916
#define platform_dma_unmap_single	145,5967
#define platform_dma_map_sg	146,6021
#define platform_dma_unmap_sg	147,6064
#define platform_dma_sync_single_for_cpu 148,6111
#define platform_dma_sync_sg_for_cpu	149,6179
#define platform_dma_sync_single_for_device 150,6239
#define platform_dma_sync_sg_for_device	151,6313
#define platform_dma_mapping_error	152,6379
#define platform_dma_supported	153,6436
#define platform_migrate	154,6485
#define platform_setup_msi_irq	159,6564
#define platform_teardown_msi_irq	160,6613
#define platform_setup_msi_irq	162,6673
#define platform_teardown_msi_irq	163,6738
#define platform_fw_init	168,6834

xen/include/asm-ia64/linux-xen/asm/acpi.h,1034
#define _ASM_ACPI_H29,1177
#define COMPILER_DEPENDENT_INT64	44,1418
#define COMPILER_DEPENDENT_UINT64	45,1456
#define ACPI_SYSTEM_XFACE55,1795
#define ACPI_EXTERNAL_XFACE56,1821
#define ACPI_INTERNAL_XFACE57,1849
#define ACPI_INTERNAL_VAR_XFACE58,1877
#define ACPI_ASM_MACROS62,1928
#define BREAKPOINT363,1952
#define ACPI_DISABLE_IRQS(64,1972
#define ACPI_ENABLE_IRQS(65,2020
#define ACPI_FLUSH_CPU_CACHE(66,2067
ia64_acpi_acquire_global_lock 69,2117
ia64_acpi_release_global_lock 81,2397
#define ACPI_ACQUIRE_GLOBAL_LOCK(92,2619
#define ACPI_RELEASE_GLOBAL_LOCK(95,2730
#define acpi_disabled 98,2841
#define acpi_noirq 99,2899
#define acpi_pci_disabled 100,2954
#define acpi_strict 101,3020
#define acpi_processor_cstate_check(102,3081
static inline void disable_acpi(103,3156
#define additional_cpus 126,3905
#define MAX_PXM_DOMAINS 131,3986
#define MAX_PXM_DOMAINS 133,4029
#define acpi_unlazy_tlb(139,4184
#define for_each_possible_early_cpu(143,4277
static inline void per_cpu_scan_finalize(146,4372

xen/include/asm-ia64/hvm/support.h,139
#define __ASM_IA64_HVM_SUPPORT_H__24,950
static inline int hvm_girq_dest_2_vcpu_id(28,1013
static inline void hvm_migrate_pirqs(35,1178

xen/include/asm-ia64/hvm/iommu.h,235
#define __ASM_IA64_HVM_IOMMU_H__2,33
#define iommu_get_ops(14,315
#define iommu_hardware_setup(15,358
static inline int domain_irq_to_vector(17,411
static inline void ack_APIC_irq(22,498
static inline void pci_cleanup_msi(27,556

xen/include/asm-ia64/hvm/irq.h,926
#define __ASM_IA64_HVM_IRQ_H__23,890
#define VIOAPIC_NUM_PINS 27,944
struct hvm_hw_pci_irqs 31,1000
        DECLARE_BITMAP(37,1142
        uint64_t pad[pad38,1175
struct hvm_irq 42,1211
    struct hvm_hw_pci_irqs pci_intx;47,1333
    uint32_t callback_via_asserted;50,1445
            HVMIRQ_callback_none,53,1508
            HVMIRQ_callback_gsi,54,1542
            HVMIRQ_callback_pci_intx55,1575
        } callback_via_type;56,1612
        uint32_t gsi;59,1660
        struct { uint8_t dev,60,1682
        struct { uint8_t dev, intx;60,1682
        struct { uint8_t dev, intx; } pci;60,1682
    } callback_via;61,1725
    u8 gsi_assert_count[gsi_assert_count73,2154
    u8 round_robin_prev_vcpu;83,2456
    struct hvm_irq_dpci *dpci;dpci85,2487
#define hvm_pci_intx_gsi(88,2522
#define hvm_pci_intx_link(90,2614
#define IA64_INVALID_VECTOR	93,2681
static inline unsigned int irq_to_vector(94,2735

xen/include/asm-ia64/hvm/vacpi.h,244
#define __ASM_IA64_HVM_VACPI_H__22,831
#define IS_ACPI_ADDR(27,963
#define FREQUENCE_PMTIMER 29,1041
struct vacpi 31,1118
	struct vacpi_regs regs;32,1133
	s_time_t last_gtime;33,1158
	struct timer timer;34,1180
	spinlock_t lock;35,1201

xen/include/asm-ia64/hvm/vlapic.h,39
#define __ASM_IA64_HVM_VLAPIC_H__2,34

xen/include/asm-ia64/offsets.h,30
#define __IA64_OFFSETS_H3,72

xen/include/asm-ia64/sioemu.h,31
#define __ASM_SIOEMU_H_23,901

xen/include/asm-ia64/vmx_platform.h,741
#define __ASM_IA64_VMX_PLATFORM_H__20,791
struct vmx_ioreq_page 29,989
    spinlock_t          lock;30,1013
    struct page_info   *page;page31,1043
    void               *va;va32,1073
typedef struct virtual_platform_def 37,1219
    struct vmx_ioreq_page       ioreq;38,1257
    struct vmx_ioreq_page       buf_ioreq;39,1296
    struct vmx_ioreq_page       buf_pioreq;40,1339
    unsigned long               pib_base;41,1383
    unsigned long               params[params42,1425
    struct viosapic             viosapic;44,1509
    struct vacpi                vacpi;45,1551
    struct hvm_irq              irq;47,1617
    struct hvm_iommu            hvm_iommu;48,1654
} vir_plat_t;49,1697
static inline int __fls(51,1712

xen/include/asm-ia64/dom_fw_utils.h,47
#define __ASM_XEN_IA64_DOM_FW_UTILS_H__22,961

xen/include/asm-ia64/p2m_entry.h,285
#define __ASM_P2M_ENTRY_H__24,965
struct p2m_entry 28,1020
#define P2M_PTE_ALWAYS_RETRY	29,1039
    volatile pte_t*     ptep;30,1091
    pte_t               used;31,1121
p2m_entry_set(35,1174
p2m_entry_set_retry(42,1319
p2m_entry_retry(48,1427
#define p2m_get_hostp2m(66,1912

xen/include/asm-ia64/bundle.h,21659
#define _XEN_IA64_BUNDLE_H2,27
typedef unsigned long IA64_INST;4,55
typedef union U_IA64_BUNDLE 6,89
    unsigned long i64[i647,119
    struct { unsigned long 8,145
    struct { unsigned long template:5,slot0:slot08,145
    struct { unsigned long template:5,slot0:41,slot1a:slot1a8,145
    struct { unsigned long template:5,slot0:41,slot1a:18,slot1b:slot1b8,145
    struct { unsigned long template:5,slot0:41,slot1a:18,slot1b:23,slot2:slot28,145
} IA64_BUNDLE;12,396
typedef enum E_IA64_SLOT_TYPE 14,412
typedef enum E_IA64_SLOT_TYPE { I,14,412
typedef enum E_IA64_SLOT_TYPE { I, M,14,412
typedef enum E_IA64_SLOT_TYPE { I, M, F,14,412
typedef enum E_IA64_SLOT_TYPE { I, M, F, B,14,412
typedef enum E_IA64_SLOT_TYPE { I, M, F, B, L,14,412
typedef enum E_IA64_SLOT_TYPE { I, M, F, B, L, ILLEGAL 14,412
typedef enum E_IA64_SLOT_TYPE { I, M, F, B, L, ILLEGAL } IA64_SLOT_TYPE;14,412
typedef union U_INST64_A5 16,486
    IA64_INST inst;17,514
    struct { unsigned long qp:qp18,534
    struct { unsigned long qp:6, r1:r118,534
    struct { unsigned long qp:6, r1:7, imm7b:imm7b18,534
    struct { unsigned long qp:6, r1:7, imm7b:7, r3:r318,534
    struct { unsigned long qp:6, r1:7, imm7b:7, r3:2, imm5c:imm5c18,534
    struct { unsigned long qp:6, r1:7, imm7b:7, r3:2, imm5c:5, imm9d:imm9d18,534
    struct { unsigned long qp:6, r1:7, imm7b:7, r3:2, imm5c:5, imm9d:9, s:s18,534
    struct { unsigned long qp:6, r1:7, imm7b:7, r3:2, imm5c:5, imm9d:9, s:1, major:major18,534
} INST64_A5;19,623
typedef union U_INST64_B4 21,637
    IA64_INST inst;22,665
    struct { unsigned long qp:qp23,685
    struct { unsigned long qp:6, btype:btype23,685
    struct { unsigned long qp:6, btype:3, un3:un323,685
    struct { unsigned long qp:6, btype:3, un3:3, p:p23,685
    struct { unsigned long qp:6, btype:3, un3:3, p:1, b2:b223,685
    struct { unsigned long qp:6, btype:3, un3:3, p:1, b2:3, un11:un1123,685
    struct { unsigned long qp:6, btype:3, un3:3, p:1, b2:3, un11:11, x6:x623,685
    struct { unsigned long qp:6, btype:3, un3:3, p:1, b2:3, un11:11, x6:6, wh:wh23,685
    struct { unsigned long qp:6, btype:3, un3:3, p:1, b2:3, un11:11, x6:6, wh:2, d:d23,685
    struct { unsigned long qp:6, btype:3, un3:3, p:1, b2:3, un11:11, x6:6, wh:2, d:1, un1:un123,685
    struct { unsigned long qp:6, btype:3, un3:3, p:1, b2:3, un11:11, x6:6, wh:2, d:1, un1:1, major:major23,685
} INST64_B4;24,790
typedef union U_INST64_B8 26,804
    IA64_INST inst;27,832
    struct { unsigned long qp:qp28,852
    struct { unsigned long qp:6, un21:un2128,852
    struct { unsigned long qp:6, un21:21, x6:x628,852
    struct { unsigned long qp:6, un21:21, x6:6, un4:un428,852
    struct { unsigned long qp:6, un21:21, x6:6, un4:4, major:major28,852
} INST64_B8;29,919
typedef union U_INST64_B9 31,933
    IA64_INST inst;32,961
    struct { unsigned long qp:qp33,981
    struct { unsigned long qp:6, imm20:imm2033,981
    struct { unsigned long qp:6, imm20:20, :1, x6:x633,981
    struct { unsigned long qp:6, imm20:20, :1, x6:6, :3, i:i33,981
    struct { unsigned long qp:6, imm20:20, :1, x6:6, :3, i:1, major:major33,981
} INST64_B9;34,1055
typedef union U_INST64_I18 36,1069
    IA64_INST inst;37,1098
    struct { unsigned long qp:qp38,1118
    struct { unsigned long qp:6, imm20:imm2038,1118
    struct { unsigned long qp:6, imm20:20, y:y38,1118
    struct { unsigned long qp:6, imm20:20, y:1, x6:x638,1118
    struct { unsigned long qp:6, imm20:20, y:1, x6:6, x3:x338,1118
    struct { unsigned long qp:6, imm20:20, y:1, x6:6, x3:3, i:i38,1118
    struct { unsigned long qp:6, imm20:20, y:1, x6:6, x3:3, i:1, major:major38,1118
} INST64_I18;39,1195
typedef union U_INST64_I19 41,1210
    IA64_INST inst;42,1239
    struct { unsigned long qp:qp43,1259
    struct { unsigned long qp:6, imm20:imm2043,1259
    struct { unsigned long qp:6, imm20:20, :1, x6:x643,1259
    struct { unsigned long qp:6, imm20:20, :1, x6:6, x3:x343,1259
    struct { unsigned long qp:6, imm20:20, :1, x6:6, x3:3, i:i43,1259
    struct { unsigned long qp:6, imm20:20, :1, x6:6, x3:3, i:1, major:major43,1259
} INST64_I19;44,1335
typedef union U_INST64_I26 46,1350
    IA64_INST inst;47,1379
    struct { unsigned long qp:qp48,1399
    struct { unsigned long qp:6, :7, r2:r248,1399
    struct { unsigned long qp:6, :7, r2:7, ar3:ar348,1399
    struct { unsigned long qp:6, :7, r2:7, ar3:7, x6:x648,1399
    struct { unsigned long qp:6, :7, r2:7, ar3:7, x6:6, x3:x348,1399
    struct { unsigned long qp:6, :7, r2:7, ar3:7, x6:6, x3:3, :1, major:major48,1399
} INST64_I26;49,1476
typedef union U_INST64_I27 51,1491
    IA64_INST inst;52,1520
    struct { unsigned long qp:qp53,1540
    struct { unsigned long qp:6, :7, imm:imm53,1540
    struct { unsigned long qp:6, :7, imm:7, ar3:ar353,1540
    struct { unsigned long qp:6, :7, imm:7, ar3:7, x6:x653,1540
    struct { unsigned long qp:6, :7, imm:7, ar3:7, x6:6, x3:x353,1540
    struct { unsigned long qp:6, :7, imm:7, ar3:7, x6:6, x3:3, s:s53,1540
    struct { unsigned long qp:6, :7, imm:7, ar3:7, x6:6, x3:3, s:1, major:major53,1540
} INST64_I27;54,1619
typedef union U_INST64_I28 56,1634
    IA64_INST inst;57,1695
    struct { unsigned long qp:qp58,1715
    struct { unsigned long qp:6, r1:r158,1715
    struct { unsigned long qp:6, r1:7, :7, ar3:ar358,1715
    struct { unsigned long qp:6, r1:7, :7, ar3:7, x6:x658,1715
    struct { unsigned long qp:6, r1:7, :7, ar3:7, x6:6, x3:x358,1715
    struct { unsigned long qp:6, r1:7, :7, ar3:7, x6:6, x3:3, :1, major:major58,1715
} INST64_I28;59,1792
typedef union U_INST64_M28 61,1807
    IA64_INST inst;62,1836
    struct { unsigned long qp:qp63,1856
    struct { unsigned long qp:6, :14, r3:r363,1856
    struct { unsigned long qp:6, :14, r3:7, x6:x663,1856
    struct { unsigned long qp:6, :14, r3:7, x6:6, x3:x363,1856
    struct { unsigned long qp:6, :14, r3:7, x6:6, x3:3, x:x63,1856
    struct { unsigned long qp:6, :14, r3:7, x6:6, x3:3, x:1, major:major63,1856
} INST64_M28;64,1928
typedef union U_INST64_M29 66,1943
    IA64_INST inst;67,1972
    struct { unsigned long qp:qp68,1992
    struct { unsigned long qp:6, :7, r2:r268,1992
    struct { unsigned long qp:6, :7, r2:7, ar3:ar368,1992
    struct { unsigned long qp:6, :7, r2:7, ar3:7, x6:x668,1992
    struct { unsigned long qp:6, :7, r2:7, ar3:7, x6:6, x3:x368,1992
    struct { unsigned long qp:6, :7, r2:7, ar3:7, x6:6, x3:3, :1, major:major68,1992
} INST64_M29;69,2069
typedef union U_INST64_M30 71,2084
    IA64_INST inst;72,2113
    struct { unsigned long qp:qp73,2133
    struct { unsigned long qp:6, :7, imm:imm73,2133
    struct { unsigned long qp:6, :7, imm:7, ar3:ar373,2133
    struct { unsigned long qp:6, :7, imm:7, ar3:7,x4:x473,2133
    struct { unsigned long qp:6, :7, imm:7, ar3:7,x4:4,x2:x273,2133
    struct { unsigned long qp:6, :7, imm:7, ar3:7,x4:4,x2:2,x3:x373,2133
    struct { unsigned long qp:6, :7, imm:7, ar3:7,x4:4,x2:2,x3:3,s:s73,2133
    struct { unsigned long qp:6, :7, imm:7, ar3:7,x4:4,x2:2,x3:3,s:1,major:major73,2133
} INST64_M30;74,2213
typedef union U_INST64_M31 76,2228
    IA64_INST inst;77,2257
    struct { unsigned long qp:qp78,2277
    struct { unsigned long qp:6, r1:r178,2277
    struct { unsigned long qp:6, r1:7, :7, ar3:ar378,2277
    struct { unsigned long qp:6, r1:7, :7, ar3:7, x6:x678,2277
    struct { unsigned long qp:6, r1:7, :7, ar3:7, x6:6, x3:x378,2277
    struct { unsigned long qp:6, r1:7, :7, ar3:7, x6:6, x3:3, :1, major:major78,2277
} INST64_M31;79,2354
typedef union U_INST64_M32 81,2369
    IA64_INST inst;82,2398
    struct { unsigned long qp:qp83,2418
    struct { unsigned long qp:6, :7, r2:r283,2418
    struct { unsigned long qp:6, :7, r2:7, cr3:cr383,2418
    struct { unsigned long qp:6, :7, r2:7, cr3:7, x6:x683,2418
    struct { unsigned long qp:6, :7, r2:7, cr3:7, x6:6, x3:x383,2418
    struct { unsigned long qp:6, :7, r2:7, cr3:7, x6:6, x3:3, :1, major:major83,2418
} INST64_M32;84,2495
typedef union U_INST64_M33 86,2510
    IA64_INST inst;87,2539
    struct { unsigned long qp:qp88,2559
    struct { unsigned long qp:6, r1:r188,2559
    struct { unsigned long qp:6, r1:7, :7, cr3:cr388,2559
    struct { unsigned long qp:6, r1:7, :7, cr3:7, x6:x688,2559
    struct { unsigned long qp:6, r1:7, :7, cr3:7, x6:6, x3:x388,2559
    struct { unsigned long qp:6, r1:7, :7, cr3:7, x6:6, x3:3, :1, major:major88,2559
} INST64_M33;89,2637
typedef union U_INST64_M35 91,2652
    IA64_INST inst;92,2681
    struct { unsigned long qp:qp93,2701
    struct { unsigned long qp:6, :7, r2:r293,2701
    struct { unsigned long qp:6, :7, r2:7, :7, x6:x693,2701
    struct { unsigned long qp:6, :7, r2:7, :7, x6:6, x3:x393,2701
    struct { unsigned long qp:6, :7, r2:7, :7, x6:6, x3:3, :1, major:major93,2701
} INST64_M35;95,2780
typedef union U_INST64_M36 97,2795
    IA64_INST inst;98,2824
    struct { unsigned long qp:qp99,2844
    struct { unsigned long qp:6, r1:r199,2844
    struct { unsigned long qp:6, r1:7, :14, x6:x699,2844
    struct { unsigned long qp:6, r1:7, :14, x6:6, x3:x399,2844
    struct { unsigned long qp:6, r1:7, :14, x6:6, x3:3, :1, major:major99,2844
} INST64_M36;100,2917
typedef union U_INST64_M37 102,2932
    IA64_INST inst;103,2961
    struct { unsigned long qp:qp104,2981
    struct { unsigned long qp:6, imm20a:imm20a104,2981
    struct { unsigned long qp:6, imm20a:20,:1, x4:x4104,2981
    struct { unsigned long qp:6, imm20a:20,:1, x4:4,x2:x2104,2981
    struct { unsigned long qp:6, imm20a:20,:1, x4:4,x2:2,x3:x3104,2981
    struct { unsigned long qp:6, imm20a:20,:1, x4:4,x2:2,x3:3, i:i104,2981
    struct { unsigned long qp:6, imm20a:20,:1, x4:4,x2:2,x3:3, i:1, major:major104,2981
} INST64_M37;105,3061
typedef union U_INST64_M41 107,3076
    IA64_INST inst;108,3105
    struct { unsigned long qp:qp109,3125
    struct { unsigned long qp:6, :7, r2:r2109,3125
    struct { unsigned long qp:6, :7, r2:7, :7, x6:x6109,3125
    struct { unsigned long qp:6, :7, r2:7, :7, x6:6, x3:x3109,3125
    struct { unsigned long qp:6, :7, r2:7, :7, x6:6, x3:3, :1, major:major109,3125
} INST64_M41;110,3201
typedef union U_INST64_M42 112,3216
    IA64_INST inst;113,3245
    struct { unsigned long qp:qp114,3265
    struct { unsigned long qp:6, :7, r2:r2114,3265
    struct { unsigned long qp:6, :7, r2:7, r3:r3114,3265
    struct { unsigned long qp:6, :7, r2:7, r3:7, x6:x6114,3265
    struct { unsigned long qp:6, :7, r2:7, r3:7, x6:6, x3:x3114,3265
    struct { unsigned long qp:6, :7, r2:7, r3:7, x6:6, x3:3, :1, major:major114,3265
} INST64_M42;115,3342
typedef union U_INST64_M43 117,3357
    IA64_INST inst;118,3386
    struct { unsigned long qp:qp119,3406
    struct { unsigned long qp:6, r1:r1119,3406
    struct { unsigned long qp:6, r1:7, :7, r3:r3119,3406
    struct { unsigned long qp:6, r1:7, :7, r3:7, x6:x6119,3406
    struct { unsigned long qp:6, r1:7, :7, r3:7, x6:6, x3:x3119,3406
    struct { unsigned long qp:6, r1:7, :7, r3:7, x6:6, x3:3, :1, major:major119,3406
} INST64_M43;120,3483
typedef union U_INST64_M44 122,3498
    IA64_INST inst;123,3527
    struct { unsigned long qp:qp124,3547
    struct { unsigned long qp:6, imm:imm124,3547
    struct { unsigned long qp:6, imm:21, x4:x4124,3547
    struct { unsigned long qp:6, imm:21, x4:4, i2:i2124,3547
    struct { unsigned long qp:6, imm:21, x4:4, i2:2, x3:x3124,3547
    struct { unsigned long qp:6, imm:21, x4:4, i2:2, x3:3, i:i124,3547
    struct { unsigned long qp:6, imm:21, x4:4, i2:2, x3:3, i:1, major:major124,3547
} INST64_M44;125,3623
typedef union U_INST64_M45 127,3638
    IA64_INST inst;128,3667
    struct { unsigned long qp:qp129,3687
    struct { unsigned long qp:6, :7, r2:r2129,3687
    struct { unsigned long qp:6, :7, r2:7, r3:r3129,3687
    struct { unsigned long qp:6, :7, r2:7, r3:7, x6:x6129,3687
    struct { unsigned long qp:6, :7, r2:7, r3:7, x6:6, x3:x3129,3687
    struct { unsigned long qp:6, :7, r2:7, r3:7, x6:6, x3:3, :1, major:major129,3687
} INST64_M45;130,3764
typedef union U_INST64_M46 132,3779
    IA64_INST inst;133,3808
    struct { unsigned long qp:qp134,3828
    struct { unsigned long qp:6, r1:r1134,3828
    struct { unsigned long qp:6, r1:7, un7:un7134,3828
    struct { unsigned long qp:6, r1:7, un7:7, r3:r3134,3828
    struct { unsigned long qp:6, r1:7, un7:7, r3:7, x6:x6134,3828
    struct { unsigned long qp:6, r1:7, un7:7, r3:7, x6:6, x3:x3134,3828
    struct { unsigned long qp:6, r1:7, un7:7, r3:7, x6:6, x3:3, un1:un1134,3828
    struct { unsigned long qp:6, r1:7, un7:7, r3:7, x6:6, x3:3, un1:1, major:major134,3828
} INST64_M46;135,3911
typedef union U_INST64_M47 137,3926
    IA64_INST inst;138,3955
    struct { unsigned long qp:qp139,3975
    struct { unsigned long qp:6, un14:un14139,3975
    struct { unsigned long qp:6, un14:14, r3:r3139,3975
    struct { unsigned long qp:6, un14:14, r3:7, x6:x6139,3975
    struct { unsigned long qp:6, un14:14, r3:7, x6:6, x3:x3139,3975
    struct { unsigned long qp:6, un14:14, r3:7, x6:6, x3:3, un1:un1139,3975
    struct { unsigned long qp:6, un14:14, r3:7, x6:6, x3:3, un1:1, major:major139,3975
} INST64_M47;140,4054
typedef union U_INST64_M1{U_INST64_M1142,4069
    IA64_INST inst;143,4096
    struct { unsigned long qp:qp144,4116
    struct { unsigned long qp:6, r1:r1144,4116
    struct { unsigned long qp:6, r1:7, un7:un7144,4116
    struct { unsigned long qp:6, r1:7, un7:7, r3:r3144,4116
    struct { unsigned long qp:6, r1:7, un7:7, r3:7, x:x144,4116
    struct { unsigned long qp:6, r1:7, un7:7, r3:7, x:1, hint:hint144,4116
    struct { unsigned long qp:6, r1:7, un7:7, r3:7, x:1, hint:2, x6:x6144,4116
    struct { unsigned long qp:6, r1:7, un7:7, r3:7, x:1, hint:2, x6:6, m:m144,4116
    struct { unsigned long qp:6, r1:7, un7:7, r3:7, x:1, hint:2, x6:6, m:1, major:major144,4116
} INST64_M1;145,4204
typedef union U_INST64_M2{U_INST64_M2147,4218
    IA64_INST inst;148,4245
    struct { unsigned long qp:qp149,4265
    struct { unsigned long qp:6, r1:r1149,4265
    struct { unsigned long qp:6, r1:7, r2:r2149,4265
    struct { unsigned long qp:6, r1:7, r2:7, r3:r3149,4265
    struct { unsigned long qp:6, r1:7, r2:7, r3:7, x:x149,4265
    struct { unsigned long qp:6, r1:7, r2:7, r3:7, x:1, hint:hint149,4265
    struct { unsigned long qp:6, r1:7, r2:7, r3:7, x:1, hint:2, x6:x6149,4265
    struct { unsigned long qp:6, r1:7, r2:7, r3:7, x:1, hint:2, x6:6, m:m149,4265
    struct { unsigned long qp:6, r1:7, r2:7, r3:7, x:1, hint:2, x6:6, m:1, major:major149,4265
} INST64_M2;150,4352
typedef union U_INST64_M3{U_INST64_M3152,4366
    IA64_INST inst;153,4393
    struct { unsigned long qp:qp154,4413
    struct { unsigned long qp:6, r1:r1154,4413
    struct { unsigned long qp:6, r1:7, imm7:imm7154,4413
    struct { unsigned long qp:6, r1:7, imm7:7, r3:r3154,4413
    struct { unsigned long qp:6, r1:7, imm7:7, r3:7, i:i154,4413
    struct { unsigned long qp:6, r1:7, imm7:7, r3:7, i:1, hint:hint154,4413
    struct { unsigned long qp:6, r1:7, imm7:7, r3:7, i:1, hint:2, x6:x6154,4413
    struct { unsigned long qp:6, r1:7, imm7:7, r3:7, i:1, hint:2, x6:6, s:s154,4413
    struct { unsigned long qp:6, r1:7, imm7:7, r3:7, i:1, hint:2, x6:6, s:1, major:major154,4413
} INST64_M3;155,4502
typedef union U_INST64_M4 157,4516
    IA64_INST inst;158,4544
    struct { unsigned long qp:qp159,4564
    struct { unsigned long qp:6, un7:un7159,4564
    struct { unsigned long qp:6, un7:7, r2:r2159,4564
    struct { unsigned long qp:6, un7:7, r2:7, r3:r3159,4564
    struct { unsigned long qp:6, un7:7, r2:7, r3:7, x:x159,4564
    struct { unsigned long qp:6, un7:7, r2:7, r3:7, x:1, hint:hint159,4564
    struct { unsigned long qp:6, un7:7, r2:7, r3:7, x:1, hint:2, x6:x6159,4564
    struct { unsigned long qp:6, un7:7, r2:7, r3:7, x:1, hint:2, x6:6, m:m159,4564
    struct { unsigned long qp:6, un7:7, r2:7, r3:7, x:1, hint:2, x6:6, m:1, major:major159,4564
} INST64_M4;160,4652
typedef union U_INST64_M5 162,4666
    IA64_INST inst;163,4694
    struct { unsigned long qp:qp164,4714
    struct { unsigned long qp:6, imm7:imm7164,4714
    struct { unsigned long qp:6, imm7:7, r2:r2164,4714
    struct { unsigned long qp:6, imm7:7, r2:7, r3:r3164,4714
    struct { unsigned long qp:6, imm7:7, r2:7, r3:7, i:i164,4714
    struct { unsigned long qp:6, imm7:7, r2:7, r3:7, i:1, hint:hint164,4714
    struct { unsigned long qp:6, imm7:7, r2:7, r3:7, i:1, hint:2, x6:x6164,4714
    struct { unsigned long qp:6, imm7:7, r2:7, r3:7, i:1, hint:2, x6:6, s:s164,4714
    struct { unsigned long qp:6, imm7:7, r2:7, r3:7, i:1, hint:2, x6:6, s:1, major:major164,4714
} INST64_M5;165,4803
typedef union U_INST64_M6 167,4817
    IA64_INST inst;168,4845
    struct { unsigned long qp:qp169,4865
    struct { unsigned long qp:6, f1:f1169,4865
    struct { unsigned long qp:6, f1:7, un7:un7169,4865
    struct { unsigned long qp:6, f1:7, un7:7, r3:r3169,4865
    struct { unsigned long qp:6, f1:7, un7:7, r3:7, x:x169,4865
    struct { unsigned long qp:6, f1:7, un7:7, r3:7, x:1, hint:hint169,4865
    struct { unsigned long qp:6, f1:7, un7:7, r3:7, x:1, hint:2, x6:x6169,4865
    struct { unsigned long qp:6, f1:7, un7:7, r3:7, x:1, hint:2, x6:6, m:m169,4865
    struct { unsigned long qp:6, f1:7, un7:7, r3:7, x:1, hint:2, x6:6, m:1, major:major169,4865
} INST64_M6;170,4953
typedef union U_INST64_M9 172,4967
    IA64_INST inst;173,4995
    struct { unsigned long qp:qp174,5015
    struct { unsigned long qp:6, :7, f2:f2174,5015
    struct { unsigned long qp:6, :7, f2:7, r3:r3174,5015
    struct { unsigned long qp:6, :7, f2:7, r3:7, x:x174,5015
    struct { unsigned long qp:6, :7, f2:7, r3:7, x:1, hint:hint174,5015
    struct { unsigned long qp:6, :7, f2:7, r3:7, x:1, hint:2, x6:x6174,5015
    struct { unsigned long qp:6, :7, f2:7, r3:7, x:1, hint:2, x6:6, m:m174,5015
    struct { unsigned long qp:6, :7, f2:7, r3:7, x:1, hint:2, x6:6, m:1, major:major174,5015
} INST64_M9;175,5100
typedef union U_INST64_M10 177,5114
    IA64_INST inst;178,5143
    struct { unsigned long qp:qp179,5163
    struct { unsigned long qp:6, imm7:imm7179,5163
    struct { unsigned long qp:6, imm7:7, f2:f2179,5163
    struct { unsigned long qp:6, imm7:7, f2:7, r3:r3179,5163
    struct { unsigned long qp:6, imm7:7, f2:7, r3:7, i:i179,5163
    struct { unsigned long qp:6, imm7:7, f2:7, r3:7, i:1, hint:hint179,5163
    struct { unsigned long qp:6, imm7:7, f2:7, r3:7, i:1, hint:2, x6:x6179,5163
    struct { unsigned long qp:6, imm7:7, f2:7, r3:7, i:1, hint:2, x6:6, s:s179,5163
    struct { unsigned long qp:6, imm7:7, f2:7, r3:7, i:1, hint:2, x6:6, s:1, major:major179,5163
} INST64_M10;180,5252
typedef union U_INST64_M12 182,5267
    IA64_INST inst;183,5296
    struct { unsigned long qp:qp184,5316
    struct { unsigned long qp:6, f1:f1184,5316
    struct { unsigned long qp:6, f1:7, f2:f2184,5316
    struct { unsigned long qp:6, f1:7, f2:7, r3:r3184,5316
    struct { unsigned long qp:6, f1:7, f2:7, r3:7, x:x184,5316
    struct { unsigned long qp:6, f1:7, f2:7, r3:7, x:1, hint:hint184,5316
    struct { unsigned long qp:6, f1:7, f2:7, r3:7, x:1, hint:2, x6:x6184,5316
    struct { unsigned long qp:6, f1:7, f2:7, r3:7, x:1, hint:2, x6:6, m:m184,5316
    struct { unsigned long qp:6, f1:7, f2:7, r3:7, x:1, hint:2, x6:6, m:1, major:major184,5316
} INST64_M12;185,5403
typedef union U_INST64_M15 187,5422
    IA64_INST inst;188,5451
    struct { unsigned long qp:qp189,5471
    struct { unsigned long qp:6, :7, imm7:imm7189,5471
    struct { unsigned long qp:6, :7, imm7:7, r3:r3189,5471
    struct { unsigned long qp:6, :7, imm7:7, r3:7, i:i189,5471
    struct { unsigned long qp:6, :7, imm7:7, r3:7, i:1, hint:hint189,5471
    struct { unsigned long qp:6, :7, imm7:7, r3:7, i:1, hint:2, x6:x6189,5471
    struct { unsigned long qp:6, :7, imm7:7, r3:7, i:1, hint:2, x6:6, s:s189,5471
    struct { unsigned long qp:6, :7, imm7:7, r3:7, i:1, hint:2, x6:6, s:1, major:major189,5471
} INST64_M15;190,5558
typedef union U_INST64 192,5573
    IA64_INST inst;193,5598
    struct { unsigned long 194,5618
    struct { unsigned long :37, major:major194,5618
    struct { unsigned long :37, major:4; } generic;194,5618
    INST64_A5 A5;195,5670
    INST64_B4 B4;196,5727
    INST64_B8 B8;197,5784
    INST64_B9 B9;198,5819
    INST64_I18 I18;199,5848
    INST64_I19 I19;200,5919
    INST64_I26 I26;201,5978
    INST64_I27 I27;202,6029
    INST64_I28 I28;203,6081
    INST64_M1  M1;204,6125
    INST64_M2  M2;205,6158
    INST64_M3  M3;206,6177
    INST64_M4  M4;207,6196
    INST64_M5  M5;208,6229
    INST64_M6  M6;209,6248
    INST64_M9  M9;210,6292
    INST64_M10 M10;211,6336
    INST64_M12 M12;212,6381
    INST64_M15 M15;213,6434
    INST64_M28 M28;214,6477
    INST64_M29 M29;215,6530
    INST64_M30 M30;216,6581
    INST64_M31 M31;217,6633
    INST64_M32 M32;218,6677
    INST64_M33 M33;219,6714
    INST64_M35 M35;220,6749
    INST64_M36 M36;221,6783
    INST64_M37 M37;222,6819
    INST64_M41 M41;223,6850
    INST64_M42 M42;224,6898
    INST64_M43 M43;225,6964
    INST64_M44 M44;226,7009
    INST64_M45 M45;227,7054
    INST64_M46 M46;228,7095
    INST64_M47 M47;229,7147
} INST64;230,7194
#define MASK_41 237,7374

xen/include/asm-ia64/vmx_pal.h,814
#define _ASM_IA64_VT_PAL_H2,27
#define		PAL_VP_CREATE 29,1116
#define		PAL_VP_ENV_INFO 33,1263
#define		PAL_VP_EXIT_ENV 35,1372
#define		PAL_VP_INIT_ENV 37,1477
#define		PAL_VP_REGISTER 39,1583
#define		PAL_VP_RESUME 41,1687
#define		PAL_VP_RESTORE 43,1749
#define		PAL_VP_SUSPEND 45,1858
#define		PAL_VP_SAVE	47,1921
#define		PAL_VP_TERMINATE 51,2051
ia64_pal_vp_env_info(55,2177
ia64_pal_vp_exit_env(65,2401
#define	VP_INITIALIZE	73,2581
#define	VP_FR_PMC	74,2607
#define	VP_OPCODE	75,2632
#define	VP_CAUSE	76,2657
#define	VP_FW_ACC	77,2681
#define	VP_INIT_ENV_INITALIZE 79,2753
#define	VP_INIT_ENV 81,2886
ia64_pal_vp_init_env 84,2965
ia64_pal_vp_create 95,3235
ia64_pal_vp_restore 104,3454
ia64_pal_vp_save 112,3647
#define PAL_PROC_VM_BIT	120,3897
#define PAL_PROC_VMSW_BIT	121,3934

xen/include/asm-ia64/mmu_context.h,266
#define __ASM_MMU_CONTEXT_H2,28
#define IA64_REGION_ID_KERNEL 5,114
#define XEN_IA64_REGION_ID_EFI 6,146
#define ia64_rid(7,179
struct ia64_ctx 10,258
	spinlock_t lock;11,276
	unsigned int next;12,294
	unsigned int limit;13,347
	unsigned int max_ctx;14,420

xen/include/asm-ia64/xenpage.h,959
#define _ASM_IA64_XENPAGE_H2,28
#define IA64_MAX_PHYS_BITS	5,130
# define mfn_valid(10,320
# define mfn_valid(12,397
# define page_to_mfn(14,449
# define mfn_to_page(15,519
#define __virt_to_maddr(29,870
#define virt_to_maddr(37,1108
#define page_to_maddr(40,1173
#define virt_to_page(41,1235
#define page_to_virt(43,1314
#define maddr_to_page(44,1378
#define virt_to_mfn(47,1521
#define mfn_to_virt(48,1580
#define pfn_to_paddr(51,1696
#define paddr_to_pfn(52,1753
typedef union xen_va 54,1817
		unsigned long off 56,1850
		unsigned long reg 57,1876
	} f;58,1901
	unsigned long l;59,1907
	void *p;p60,1925
} xen_va;61,1935
static inline int get_order_from_bytes(63,1946
static inline int get_order_from_pages(72,2129
static inline int get_order_from_shift(81,2311
#define virt_to_xenva(89,2485
static inline u64 pa_clear_uc(93,2633
#define __pa(98,2709
#define __va(99,2745
#define __va_ul(102,2886
#define __va_efi(104,2961

xen/include/asm-ia64/multicall.h,83
#define __ASM_IA64_MULTICALL_H__2,33
static inline void do_multicall_call(16,321

xen/include/asm-ia64/tlb_track.h,1626
#define __TLB_TRACK_H__24,961
struct tlb_track_entry 36,1199
    struct list_head   list;37,1224
    volatile pte_t*     ptep;39,1254
    pte_t               pte_val;42,1360
    unsigned long       vaddr;51,1960
    unsigned long       rid;52,2019
    cpumask_t           pcpu_dirty_mask;54,2067
    vcpumask_t          vcpu_dirty_mask;55,2108
#define TLB_TRACK_CNT_FORCE_MANY 58,2178
    unsigned long       cnt;59,2242
struct tlb_track 63,2282
#define TLB_TRACK_LIMIT_ENTRIES 67,2404
    spinlock_t                  free_list_lock;70,2543
    struct list_head            free_list;71,2591
    unsigned int                limit;72,2634
    unsigned int                num_entries;73,2673
    unsigned int                num_free;74,2718
    struct page_list_head       page_list;75,2760
    spinlock_t                  hash_lock;78,2834
    unsigned int                hash_size;79,2877
    unsigned int                hash_shift;80,2920
    unsigned int                hash_mask;81,2964
    struct list_head*           hash;82,3007
vcpu_tlb_track_insert_or_dirty(95,3402
enum TLB_TRACK_RET 114,3884
    TLB_TRACK_NOT_TRACKED,115,3905
    TLB_TRACK_NOT_FOUND,116,3932
    TLB_TRACK_FOUND,117,3957
    TLB_TRACK_MANY,118,3978
    TLB_TRACK_AGAIN,119,3998
typedef enum TLB_TRACK_RET TLB_TRACK_RET_T;121,4022
#define tlb_track_entry_printf(131,4391
#define tlb_track_create(135,4533
#define tlb_track_destroy(136,4598
#define tlb_track_free_entry(137,4663
#define vcpu_tlb_track_insert_or_dirty(138,4728
#define tlb_track_search_and_remove(140,4859
#define tlb_track_entry_printf(142,4998

xen/include/asm-ia64/vtm.h,567
#define _VTM_H_24,894
#define MAX_JUMP_STEP 29,958
#define MIN_GUEST_RUNNING_TIME 30,1022
#define ITV_VECTOR_MASK 31,1092
typedef struct vtime 33,1128
    	long        vtm_offset;34,1151
    	uint64_t    vtm_local_drift;35,1217
	uint64_t    last_itc;36,1251
    	uint64_t    pending;37,1274
    	uint64_t    cfg_max_jump;47,1676
    	uint64_t    cfg_min_grun;48,1749
    	struct timer	vtm_timer;50,1888
    	uint64_t    guest_running_time;54,1949
} vtime_t;60,2171
#define  ITV_VECTOR(62,2183
#define  ITV_IRQ_MASK(63,2222
#define	 VTM_FIRED(65,2265

xen/include/public/callback.h,900
#define __XEN_PUBLIC_CALLBACK_H__28,1291
#define CALLBACKTYPE_event 40,1607
#define CALLBACKTYPE_failsafe 43,1726
#define CALLBACKTYPE_syscall 46,1845
#define CALLBACKTYPE_sysenter_deprecated 52,2043
#define CALLBACKTYPE_nmi 55,2127
#define CALLBACKTYPE_sysenter 65,2573
#define CALLBACKTYPE_syscall32 71,2747
#define _CALLBACKF_mask_events 77,2939
#define CALLBACKF_mask_events 78,2984
#define CALLBACKOP_register 83,3090
struct callback_register 84,3135
    uint16_t type;85,3162
    uint16_t flags;86,3181
    xen_callback_t address;87,3201
typedef struct callback_register callback_register_t;89,3232
#define CALLBACKOP_unregister 98,3485
struct callback_unregister 99,3530
    uint16_t type;100,3559
    uint16_t _unused;101,3578
typedef struct callback_unregister callback_unregister_t;103,3603
#undef CALLBACKTYPE_sysenter107,3753
#define CALLBACKTYPE_sysenter 108,3782

xen/include/public/trace.h,5093
#define __XEN_PUBLIC_TRACE_H__27,1305
#define TRACE_EXTRA_MAX 29,1337
#define TRACE_EXTRA_SHIFT 30,1366
#define TRC_CLS_SHIFT 33,1416
#define TRC_GEN 34,1441
#define TRC_SCHED 35,1507
#define TRC_DOM0OP 36,1573
#define TRC_HVM 37,1639
#define TRC_MEM 38,1705
#define TRC_PV 39,1771
#define TRC_SHADOW 40,1837
#define TRC_PM 41,1903
#define TRC_GUEST 42,1971
#define TRC_ALL 43,2037
#define TRC_HD_TO_EVENT(44,2069
#define TRC_HD_CYCLE_FLAG 45,2113
#define TRC_HD_INCLUDES_CYCLE_COUNT(46,2149
#define TRC_HD_EXTRA(47,2222
#define TRC_SUBCLS_SHIFT 50,2316
#define TRC_HVM_ENTRYEXIT 53,2376
#define TRC_HVM_HANDLER 54,2447
#define TRC_SCHED_MIN 56,2519
#define TRC_SCHED_CLASS 57,2588
#define TRC_SCHED_VERBOSE 58,2657
#define TRC_LOST_RECORDS 61,2760
#define TRC_TRACE_WRAP_BUFFER 62,2806
#define TRC_TRACE_CPU_CHANGE 63,2851
#define TRC_TRACE_IRQ 64,2897
#define TRC_SCHED_RUNSTATE_CHANGE 66,2944
#define TRC_SCHED_CONTINUE_RUNNING 67,3000
#define TRC_SCHED_DOM_ADD 68,3056
#define TRC_SCHED_DOM_REM 69,3114
#define TRC_SCHED_SLEEP 70,3172
#define TRC_SCHED_WAKE 71,3230
#define TRC_SCHED_YIELD 72,3288
#define TRC_SCHED_BLOCK 73,3346
#define TRC_SCHED_SHUTDOWN 74,3404
#define TRC_SCHED_CTL 75,3462
#define TRC_SCHED_ADJDOM 76,3520
#define TRC_SCHED_SWITCH 77,3578
#define TRC_SCHED_S_TIMER_FN 78,3636
#define TRC_SCHED_T_TIMER_FN 79,3694
#define TRC_SCHED_DOM_TIMER_FN 80,3752
#define TRC_SCHED_SWITCH_INFPREV 81,3810
#define TRC_SCHED_SWITCH_INFNEXT 82,3868
#define TRC_SCHED_SHUTDOWN_CODE 83,3926
#define TRC_MEM_PAGE_GRANT_MAP 85,3985
#define TRC_MEM_PAGE_GRANT_UNMAP 86,4035
#define TRC_MEM_PAGE_GRANT_TRANSFER 87,4085
#define TRC_MEM_SET_P2M_ENTRY 88,4135
#define TRC_MEM_DECREASE_RESERVATION 89,4185
#define TRC_MEM_POD_POPULATE 90,4236
#define TRC_MEM_POD_ZERO_RECLAIM 91,4287
#define TRC_MEM_POD_SUPERPAGE_SPLINTER 92,4338
#define TRC_PV_HYPERCALL 95,4394
#define TRC_PV_TRAP 96,4445
#define TRC_PV_PAGE_FAULT 97,4496
#define TRC_PV_FORCED_INVALID_OP 98,4547
#define TRC_PV_EMULATE_PRIVOP 99,4598
#define TRC_PV_EMULATE_4GB 100,4649
#define TRC_PV_MATH_STATE_RESTORE 101,4700
#define TRC_PV_PAGING_FIXUP 102,4751
#define TRC_PV_GDT_LDT_MAPPING_FAULT 103,4802
#define TRC_PV_PTWR_EMULATION 104,4853
#define TRC_PV_PTWR_EMULATION_PAE 105,4904
#define TRC_64_FLAG 107,5016
#define TRC_SHADOW_NOT_SHADOW 109,5060
#define TRC_SHADOW_FAST_PROPAGATE 110,5124
#define TRC_SHADOW_FAST_MMIO 111,5188
#define TRC_SHADOW_FALSE_FAST_PATH 112,5252
#define TRC_SHADOW_MMIO 113,5316
#define TRC_SHADOW_FIXUP 114,5380
#define TRC_SHADOW_DOMF_DYING 115,5444
#define TRC_SHADOW_EMULATE 116,5508
#define TRC_SHADOW_EMULATE_UNSHADOW_USER 117,5572
#define TRC_SHADOW_EMULATE_UNSHADOW_EVTINJ 118,5636
#define TRC_SHADOW_EMULATE_UNSHADOW_UNHANDLED 119,5700
#define TRC_SHADOW_WRMAP_BF 120,5764
#define TRC_SHADOW_PREALLOC_UNPIN 121,5828
#define TRC_SHADOW_RESYNC_FULL 122,5892
#define TRC_SHADOW_RESYNC_ONLY 123,5956
#define TRC_HVM_VMENTRY 126,6053
#define TRC_HVM_VMEXIT 127,6112
#define TRC_HVM_VMEXIT64 128,6171
#define TRC_HVM_PF_XEN 129,6244
#define TRC_HVM_PF_XEN64 130,6301
#define TRC_HVM_PF_INJECT 131,6372
#define TRC_HVM_PF_INJECT64 132,6429
#define TRC_HVM_INJ_EXC 133,6500
#define TRC_HVM_INJ_VIRQ 134,6557
#define TRC_HVM_REINJ_VIRQ 135,6614
#define TRC_HVM_IO_READ 136,6671
#define TRC_HVM_IO_WRITE 137,6728
#define TRC_HVM_CR_READ 138,6785
#define TRC_HVM_CR_READ64 139,6842
#define TRC_HVM_CR_WRITE 140,6913
#define TRC_HVM_CR_WRITE64 141,6970
#define TRC_HVM_DR_READ 142,7041
#define TRC_HVM_DR_WRITE 143,7098
#define TRC_HVM_MSR_READ 144,7155
#define TRC_HVM_MSR_WRITE 145,7212
#define TRC_HVM_CPUID 146,7269
#define TRC_HVM_INTR 147,7326
#define TRC_HVM_NMI 148,7383
#define TRC_HVM_SMI 149,7440
#define TRC_HVM_VMMCALL 150,7497
#define TRC_HVM_HLT 151,7554
#define TRC_HVM_INVLPG 152,7611
#define TRC_HVM_INVLPG64 153,7668
#define TRC_HVM_MCE 154,7739
#define TRC_HVM_IOPORT_READ 155,7796
#define TRC_HVM_IOMEM_READ 156,7853
#define TRC_HVM_CLTS 157,7910
#define TRC_HVM_LMSW 158,7967
#define TRC_HVM_LMSW64 159,8024
#define TRC_HVM_RDTSC 160,8095
#define TRC_HVM_INTR_WINDOW 161,8152
#define TRC_HVM_NPF 162,8209
#define TRC_HVM_IOPORT_WRITE 164,8267
#define TRC_HVM_IOMEM_WRITE 165,8325
#define TRC_PM_FREQ 168,8428
#define TRC_PM_IDLE 169,8494
#define TRC_PM_FREQ_CHANGE 172,8594
#define TRC_PM_IDLE_ENTRY 173,8647
#define TRC_PM_IDLE_EXIT 174,8700
struct t_rec 177,8816
    uint32_t event:event178,8831
    uint32_t extra_u32:extra_u32179,8854
    uint32_t cycles_included:cycles_included180,8934
            uint32_t cycles_lo,183,9028
            uint32_t cycles_lo, cycles_hi;183,9028
            uint32_t extra_u32[extra_u32184,9101
        } cycles;185,9167
            uint32_t extra_u32[extra_u32187,9202
        } nocycles;188,9268
    } u;189,9288
struct t_buf 196,9436
    uint32_t cons;205,9787
    uint32_t prod;206,9867
struct t_info 214,10257
    uint16_t tbuf_size;215,10273
    uint16_t mfn_offset[mfn_offset216,10338

xen/include/public/event_channel.h,3448
#define __XEN_PUBLIC_EVENT_CHANNEL_H__28,1301
typedef uint32_t evtchn_port_t;39,1564
#define EVTCHNOP_alloc_unbound 50,1979
struct evtchn_alloc_unbound 51,2015
    domid_t dom,53,2069
    domid_t dom, remote_dom;53,2069
    evtchn_port_t port;55,2123
typedef struct evtchn_alloc_unbound evtchn_alloc_unbound_t;57,2150
#define EVTCHNOP_bind_interdomain 68,2622
struct evtchn_bind_interdomain 69,2658
    domid_t remote_dom;71,2716
    evtchn_port_t remote_port;72,2740
    evtchn_port_t local_port;74,2797
typedef struct evtchn_bind_interdomain evtchn_bind_interdomain_t;76,2830
#define EVTCHNOP_bind_virq 90,3422
struct evtchn_bind_virq 91,3458
    uint32_t virq;93,3509
    uint32_t vcpu;94,3528
    evtchn_port_t port;96,3573
typedef struct evtchn_bind_virq evtchn_bind_virq_t;98,3600
#define EVTCHNOP_bind_pirq 106,3884
struct evtchn_bind_pirq 107,3920
    uint32_t pirq;109,3971
#define BIND_PIRQ__WILL_SHARE 110,3990
    uint32_t flags;111,4022
    evtchn_port_t port;113,4087
typedef struct evtchn_bind_pirq evtchn_bind_pirq_t;115,4114
#define EVTCHNOP_bind_ipi 123,4358
struct evtchn_bind_ipi 124,4394
    uint32_t vcpu;125,4419
    evtchn_port_t port;127,4464
typedef struct evtchn_bind_ipi evtchn_bind_ipi_t;129,4491
#define EVTCHNOP_close 136,4740
struct evtchn_close 137,4776
    evtchn_port_t port;139,4823
typedef struct evtchn_close evtchn_close_t;141,4850
#define EVTCHNOP_send 147,5002
struct evtchn_send 148,5038
    evtchn_port_t port;150,5084
typedef struct evtchn_send evtchn_send_t;152,5111
#define EVTCHNOP_status 162,5458
struct evtchn_status 163,5494
    domid_t  dom;165,5541
    evtchn_port_t port;166,5559
#define EVTCHNSTAT_closed 168,5608
#define EVTCHNSTAT_unbound 169,5688
#define EVTCHNSTAT_interdomain 170,5768
#define EVTCHNSTAT_pirq 171,5848
#define EVTCHNSTAT_virq 172,5928
#define EVTCHNSTAT_ipi 173,6008
    uint32_t status;174,6088
    uint32_t vcpu;175,6109
            domid_t dom;178,6218
        } unbound;179,6243
            domid_t dom;181,6304
            evtchn_port_t port;182,6329
        } interdomain;183,6361
        uint32_t pirq;184,6413
        uint32_t virq;185,6470
    } u;186,6527
typedef struct evtchn_status evtchn_status_t;188,6539
#define EVTCHNOP_bind_vcpu 202,7120
struct evtchn_bind_vcpu 203,7156
    evtchn_port_t port;205,7207
    uint32_t vcpu;206,7231
typedef struct evtchn_bind_vcpu evtchn_bind_vcpu_t;208,7253
#define EVTCHNOP_unmask 214,7457
struct evtchn_unmask 215,7493
    evtchn_port_t port;217,7541
typedef struct evtchn_unmask evtchn_unmask_t;219,7568
#define EVTCHNOP_reset 227,7835
struct evtchn_reset 228,7871
    domid_t dom;230,7918
typedef struct evtchn_reset evtchn_reset_t;232,7938
struct evtchn_op 238,8110
    uint32_t cmd;239,8129
        struct evtchn_alloc_unbound    alloc_unbound;241,8176
        struct evtchn_bind_interdomain bind_interdomain;242,8230
        struct evtchn_bind_virq        bind_virq;243,8287
        struct evtchn_bind_pirq        bind_pirq;244,8337
        struct evtchn_bind_ipi         bind_ipi;245,8387
        struct evtchn_close            close;246,8436
        struct evtchn_send             send;247,8482
        struct evtchn_status           status;248,8527
        struct evtchn_bind_vcpu        bind_vcpu;249,8574
        struct evtchn_unmask           unmask;250,8624
    } u;251,8671
typedef struct evtchn_op evtchn_op_t;253,8683

xen/include/public/memory.h,2783
#define __XEN_PUBLIC_MEMORY_H__28,1307
#define XENMEM_increase_reservation 37,1547
#define XENMEM_decrease_reservation 38,1585
#define XENMEM_populate_physmap 39,1623
#define XENMEMF_address_bits(48,1974
#define XENMEMF_get_address_bits(49,2014
#define XENMEMF_node(51,2098
#define XENMEMF_get_node(52,2143
#define XENMEMF_populate_on_demand 54,2261
#define XENMEMF_exact_node_request 56,2366
#define XENMEMF_exact_node(57,2410
struct xen_memory_reservation 60,2495
    XEN_GUEST_HANDLE(72,2951
typedef struct xen_memory_reservation xen_memory_reservation_t;91,3440
#define XENMEM_exchange 101,3904
struct xen_memory_exchange 102,3943
    struct xen_memory_reservation in;107,4112
    struct xen_memory_reservation out;119,4576
    xen_ulong_t nr_exchanged;132,5177
typedef struct xen_memory_exchange xen_memory_exchange_t;134,5210
#define XENMEM_maximum_ram_page 142,5480
#define XENMEM_current_reservation 149,5697
#define XENMEM_maximum_reservation 150,5735
#define XENMEM_maximum_gpfn 155,5857
#define XENMEM_machphys_mfn_list 163,6120
struct xen_machphys_mfn_list 164,6158
    unsigned int max_extents;169,6338
    XEN_GUEST_HANDLE(176,6603
typedef struct xen_machphys_mfn_list xen_machphys_mfn_list_t;184,6848
#define XENMEM_machphys_mapping 193,7239
struct xen_machphys_mapping 194,7278
    xen_ulong_t v_start,195,7308
    xen_ulong_t v_start, v_end;195,7308
    xen_ulong_t max_mfn;196,7381
typedef struct xen_machphys_mapping xen_machphys_mapping_t;198,7457
#define XENMEM_add_to_physmap 206,7724
struct xen_add_to_physmap 207,7761
    domid_t domid;209,7839
#define XENMAPSPACE_shared_info 212,7891
#define XENMAPSPACE_grant_table 213,7948
#define XENMAPSPACE_gmfn 214,8005
    unsigned int space;215,8050
#define XENMAPIDX_grant_table_status 217,8075
    xen_ulong_t idx;220,8167
    xen_pfn_t     gpfn;223,8249
typedef struct xen_add_to_physmap xen_add_to_physmap_t;225,8276
#define XENMEM_memory_map 236,8605
struct xen_memory_map 237,8643
    unsigned int nr_entries;243,8830
    XEN_GUEST_HANDLE(249,8984
typedef struct xen_memory_map xen_memory_map_t;251,9022
#define XENMEM_machine_memory_map 259,9249
#define XENMEM_set_memory_map 266,9428
struct xen_foreign_memory_map 267,9467
    domid_t domid;268,9499
    struct xen_memory_map map;269,9518
typedef struct xen_foreign_memory_map xen_foreign_memory_map_t;271,9552
#define XENMEM_set_pod_target 274,9668
#define XENMEM_get_pod_target 275,9707
struct xen_pod_target 276,9746
    uint64_t target_pages;278,9783
    uint64_t tot_pages;280,9824
    uint64_t pod_cache_pages;281,9848
    uint64_t pod_entries;282,9878
    domid_t domid;284,9917
typedef struct xen_pod_target xen_pod_target_t;286,9939
#define XENMEM_get_sharing_freed_pages 292,10077

xen/include/public/dom0_ops.h,1970
#define __XEN_PUBLIC_DOM0_OPS_H__29,1344
#define DOM0_INTERFACE_VERSION 38,1525
#define DOM0_SETTIME 40,1581
#define dom0_settime 41,1625
#define dom0_settime_t 42,1669
#define DOM0_ADD_MEMTYPE 44,1716
#define dom0_add_memtype 45,1764
#define dom0_add_memtype_t 46,1812
#define DOM0_DEL_MEMTYPE 48,1863
#define dom0_del_memtype 49,1911
#define dom0_del_memtype_t 50,1959
#define DOM0_READ_MEMTYPE 52,2010
#define dom0_read_memtype 53,2059
#define dom0_read_memtype_t 54,2108
#define DOM0_MICROCODE 56,2160
#define dom0_microcode 57,2213
#define dom0_microcode_t 58,2266
#define DOM0_PLATFORM_QUIRK 60,2322
#define dom0_platform_quirk 61,2373
#define dom0_platform_quirk_t 62,2424
typedef uint64_t cpumap_t;64,2478
#define DOM0_MSR 67,2575
struct dom0_msr 68,2611
    uint32_t write;70,2653
    cpumap_t cpu_mask;71,2673
    uint32_t msr;72,2696
    uint32_t in1;73,2714
    uint32_t in2;74,2732
    uint32_t out1;76,2775
    uint32_t out2;77,2794
typedef struct dom0_msr dom0_msr_t;79,2816
#define DOM0_PHYSICAL_MEMORY_MAP 83,2959
struct dom0_memory_map_entry 84,2995
    uint64_t start,85,3026
    uint64_t start, end;85,3026
    uint32_t flags;86,3051
    uint8_t  is_ram;87,3086
typedef struct dom0_memory_map_entry dom0_memory_map_entry_t;89,3110
struct dom0_op 92,3223
    uint32_t cmd;93,3240
    uint32_t interface_version;94,3258
        struct dom0_msr               msr;96,3331
        struct dom0_settime           settime;97,3374
        struct dom0_add_memtype       add_memtype;98,3421
        struct dom0_del_memtype       del_memtype;99,3472
        struct dom0_read_memtype      read_memtype;100,3523
        struct dom0_microcode         microcode;101,3575
        struct dom0_platform_quirk    platform_quirk;102,3624
        struct dom0_memory_map_entry  physical_memory_map;103,3678
        uint8_t                       pad[pad104,3737
    } u;105,3785
typedef struct dom0_op dom0_op_t;107,3797

xen/include/public/xen.h,9165
#define __XEN_PUBLIC_XEN_H__28,1270
#define __HYPERVISOR_set_trap_table 58,1926
#define __HYPERVISOR_mmu_update 59,1971
#define __HYPERVISOR_set_gdt 60,2016
#define __HYPERVISOR_stack_switch 61,2061
#define __HYPERVISOR_set_callbacks 62,2106
#define __HYPERVISOR_fpu_taskswitch 63,2151
#define __HYPERVISOR_sched_op_compat 64,2196
#define __HYPERVISOR_platform_op 65,2271
#define __HYPERVISOR_set_debugreg 66,2316
#define __HYPERVISOR_get_debugreg 67,2361
#define __HYPERVISOR_update_descriptor 68,2406
#define __HYPERVISOR_memory_op 69,2451
#define __HYPERVISOR_multicall 70,2496
#define __HYPERVISOR_update_va_mapping 71,2541
#define __HYPERVISOR_set_timer_op 72,2586
#define __HYPERVISOR_event_channel_op_compat 73,2631
#define __HYPERVISOR_xen_version 74,2709
#define __HYPERVISOR_console_io 75,2754
#define __HYPERVISOR_physdev_op_compat 76,2799
#define __HYPERVISOR_grant_table_op 77,2874
#define __HYPERVISOR_vm_assist 78,2919
#define __HYPERVISOR_update_va_mapping_otherdomain 79,2964
#define __HYPERVISOR_iret 80,3018
#define __HYPERVISOR_vcpu_op 81,3078
#define __HYPERVISOR_set_segment_base 82,3123
#define __HYPERVISOR_mmuext_op 83,3186
#define __HYPERVISOR_xsm_op 84,3231
#define __HYPERVISOR_nmi_op 85,3276
#define __HYPERVISOR_sched_op 86,3321
#define __HYPERVISOR_callback_op 87,3366
#define __HYPERVISOR_xenoprof_op 88,3411
#define __HYPERVISOR_event_channel_op 89,3456
#define __HYPERVISOR_physdev_op 90,3501
#define __HYPERVISOR_hvm_op 91,3546
#define __HYPERVISOR_sysctl 92,3591
#define __HYPERVISOR_domctl 93,3636
#define __HYPERVISOR_kexec_op 94,3681
#define __HYPERVISOR_tmem_op 95,3726
#define __HYPERVISOR_arch_0 98,3823
#define __HYPERVISOR_arch_1 99,3868
#define __HYPERVISOR_arch_2 100,3913
#define __HYPERVISOR_arch_3 101,3958
#define __HYPERVISOR_arch_4 102,4003
#define __HYPERVISOR_arch_5 103,4048
#define __HYPERVISOR_arch_6 104,4093
#define __HYPERVISOR_arch_7 105,4138
#undef __HYPERVISOR_sched_op113,4318
#define __HYPERVISOR_sched_op 114,4347
#undef __HYPERVISOR_event_channel_op119,4530
#define __HYPERVISOR_event_channel_op 120,4567
#undef __HYPERVISOR_physdev_op121,4642
#define __HYPERVISOR_physdev_op 122,4673
#define __HYPERVISOR_dom0_op 127,4845
#define VIRQ_TIMER 140,5289
#define VIRQ_DEBUG 141,5369
#define VIRQ_CONSOLE 142,5449
#define VIRQ_DOM_EXC 143,5529
#define VIRQ_TBUF 144,5609
#define VIRQ_DEBUGGER 145,5689
#define VIRQ_XENOPROF 146,5769
#define VIRQ_CON_RING 147,5849
#define VIRQ_PCPU_STATE 148,5929
#define VIRQ_MEM_EVENT 149,6009
#define VIRQ_ARCH_0 152,6136
#define VIRQ_ARCH_1 153,6162
#define VIRQ_ARCH_2 154,6188
#define VIRQ_ARCH_3 155,6214
#define VIRQ_ARCH_4 156,6240
#define VIRQ_ARCH_5 157,6266
#define VIRQ_ARCH_6 158,6292
#define VIRQ_ARCH_7 159,6318
#define NR_VIRQS 161,6345
#define MMU_NORMAL_PT_UPDATE 199,8135
#define MMU_MACHPHYS_UPDATE 200,8215
#define MMU_PT_UPDATE_PRESERVE_AD 201,8295
#define MMUEXT_PIN_L1_TABLE 261,10272
#define MMUEXT_PIN_L2_TABLE 262,10307
#define MMUEXT_PIN_L3_TABLE 263,10342
#define MMUEXT_PIN_L4_TABLE 264,10377
#define MMUEXT_UNPIN_TABLE 265,10412
#define MMUEXT_NEW_BASEPTR 266,10447
#define MMUEXT_TLB_FLUSH_LOCAL 267,10482
#define MMUEXT_INVLPG_LOCAL 268,10517
#define MMUEXT_TLB_FLUSH_MULTI 269,10552
#define MMUEXT_INVLPG_MULTI 270,10587
#define MMUEXT_TLB_FLUSH_ALL 271,10622
#define MMUEXT_INVLPG_ALL 272,10657
#define MMUEXT_FLUSH_CACHE 273,10692
#define MMUEXT_SET_LDT 274,10727
#define MMUEXT_NEW_USER_BASEPTR 275,10762
#define MMUEXT_CLEAR_PAGE 276,10797
#define MMUEXT_COPY_PAGE 277,10832
#define MMUEXT_FLUSH_CACHE_GLOBAL 278,10867
#define MMUEXT_MARK_SUPER 279,10904
#define MMUEXT_UNMARK_SUPER 280,10939
struct mmuext_op 283,10996
    unsigned int cmd;284,11015
        xen_pfn_t     mfn;288,11157
        unsigned long linear_addr;290,11232
    } arg1;291,11267
        unsigned int nr_ents;294,11313
        XEN_GUEST_HANDLE(297,11431
typedef struct mmuext_op mmuext_op_t;305,11587
#define UVMF_NONE 312,11893
#define UVMF_TLB_FLUSH 313,11962
#define UVMF_INVLPG 314,12031
#define UVMF_FLUSHTYPE_MASK 315,12100
#define UVMF_MULTI 316,12141
#define UVMF_LOCAL 317,12210
#define UVMF_ALL 318,12279
#define CONSOLEIO_write 323,12396
#define CONSOLEIO_read 324,12430
#define VMASST_CMD_enable 329,12511
#define VMASST_CMD_disable 330,12554
#define VMASST_TYPE_4gb_segments 333,12653
#define VMASST_TYPE_4gb_segments_notify 336,12768
#define VMASST_TYPE_writable_pagetables 343,12990
#define VMASST_TYPE_pae_extended_cr3 346,13081
#define MAX_VMASST_TYPE 348,13125
typedef uint16_t domid_t;352,13191
#define DOMID_FIRST_RESERVED 355,13296
#define DOMID_SELF 358,13402
#define DOMID_IO 369,13903
#define DOMID_XEN 377,14176
#define DOMID_COW 381,14264
#define DOMID_INVALID 384,14360
#define DOMID_IDLE 387,14412
struct mmu_update 393,14577
    uint64_t ptr;394,14597
    uint64_t val;395,14651
typedef struct mmu_update mmu_update_t;397,14708
struct multicall_entry 404,14915
    unsigned long op,405,14940
    unsigned long op, result;405,14940
    unsigned long args[args406,14970
typedef struct multicall_entry multicall_entry_t;408,15000
#define NR_EVENT_CHANNELS 415,15199
struct vcpu_time_info 417,15279
    uint32_t version;427,15818
    uint32_t pad0;428,15840
    uint64_t tsc_timestamp;429,15859
    uint64_t system_time;430,15929
    uint32_t tsc_to_system_mul;438,16225
    int8_t   tsc_shift;439,16257
    int8_t   pad1[pad1440,16281
typedef struct vcpu_time_info vcpu_time_info_t;442,16321
struct vcpu_info 444,16370
    uint8_t evtchn_upcall_pending;470,17942
    uint8_t evtchn_upcall_mask;471,17977
    unsigned long evtchn_pending_sel;472,18009
    struct arch_vcpu_info arch;473,18047
    struct vcpu_time_info time;474,18079
typedef struct vcpu_info vcpu_info_t;477,18151
struct shared_info 488,18514
    struct vcpu_info vcpu_info[vcpu_info489,18535
    unsigned long evtchn_pending[evtchn_pending522,20425
    unsigned long evtchn_mask[evtchn_mask523,20486
    uint32_t wc_version;529,20702
    uint32_t wc_sec;530,20777
    uint32_t wc_nsec;531,20847
    struct arch_shared_info arch;533,20918
typedef struct shared_info shared_info_t;537,20972
#define MAX_GUEST_CMDLINE 564,22362
struct start_info 565,22393
    char magic[magic567,22490
    unsigned long nr_pages;568,22567
    unsigned long shared_info;569,22644
    uint32_t flags;570,22721
    xen_pfn_t store_mfn;571,22798
    uint32_t store_evtchn;572,22875
            xen_pfn_t mfn;575,22981
            uint32_t  evtchn;576,23058
        } domU;577,23135
            uint32_t info_off;579,23168
            uint32_t info_size;580,23245
        } dom0;581,23322
    } console;582,23338
    unsigned long pt_base;584,23430
    unsigned long nr_pt_frames;585,23507
    unsigned long mfn_list;586,23584
    unsigned long mod_start;587,23661
    unsigned long mod_len;590,23892
    int8_t cmd_line[cmd_line591,23969
    unsigned long first_p2m_pfn;593,24086
    unsigned long nr_p2m_frames;594,24163
typedef struct start_info start_info_t;596,24243
#define console_mfn 600,24386
#define console_evtchn 601,24426
#define SIF_PRIVILEGED 605,24544
#define SIF_INITDOMAIN 606,24610
#define SIF_MULTIBOOT_MOD 607,24686
#define SIF_MOD_START_PFN 608,24759
#define SIF_PM_MASK 609,24819
struct xen_multiboot_mod_list625,25548
    uint32_t mod_start;628,25626
    uint32_t mod_end;630,25707
    uint32_t cmdline;632,25779
    uint32_t pad;634,25832
typedef struct dom0_vga_console_info 637,25854
    uint8_t video_type;638,25893
#define XEN_VGATYPE_TEXT_MODE_3 639,25944
#define XEN_VGATYPE_VESA_LFB 640,25981
            uint16_t font_height;645,26090
            uint16_t cursor_x,647,26173
            uint16_t cursor_x, cursor_y;647,26173
            uint16_t rows,649,26287
            uint16_t rows, columns;649,26287
        } text_mode_3;650,26323
            uint16_t width,654,26411
            uint16_t width, height;654,26411
            uint16_t bytes_per_line;656,26486
            uint16_t bits_per_pixel;658,26557
            uint32_t lfb_base;660,26663
            uint32_t lfb_size;661,26694
            uint8_t  red_pos,663,26794
            uint8_t  red_pos, red_size;663,26794
            uint8_t  green_pos,664,26834
            uint8_t  green_pos, green_size;664,26834
            uint8_t  blue_pos,665,26878
            uint8_t  blue_pos, blue_size;665,26878
            uint8_t  rsvd_pos,666,26920
            uint8_t  rsvd_pos, rsvd_size;666,26920
            uint32_t gbl_caps;669,27077
            uint16_t mode_attrs;671,27177
        } vesa_lfb;673,27217
    } u;674,27237
} dom0_vga_console_info_t;675,27246
#define xen_vga_console_info 676,27273
#define xen_vga_console_info_t 677,27324
typedef uint8_t xen_domain_handle_t[xen_domain_handle_t679,27380
#define __mk_unsigned_long(682,27481
#define mk_unsigned_long(683,27519
#define mk_unsigned_long(693,27842
#define uint64_aligned_t 701,28034
#define XEN_GUEST_HANDLE_64(704,28103
struct xenctl_cpumap 708,28189
    XEN_GUEST_HANDLE_64(709,28212

xen/include/public/grant_table.h,6348
#define __XEN_PUBLIC_GRANT_TABLE_H__29,1356
typedef uint32_t grant_ref_t;90,3938
#define grant_entry_v1 104,4415
#define grant_entry_v1_t 105,4450
struct grant_entry_v1 107,4496
    uint16_t flags;109,4585
    domid_t  domid;111,4666
    uint32_t frame;116,4860
typedef struct grant_entry_v1 grant_entry_v1_t;118,4883
#define GTF_invalid 129,5379
#define GTF_permit_access 130,5415
#define GTF_accept_transfer 131,5451
#define GTF_transitive 132,5487
#define GTF_type_mask 133,5523
#define _GTF_readonly 145,6087
#define GTF_readonly 146,6119
#define _GTF_reading 147,6167
#define GTF_reading 148,6199
#define _GTF_writing 149,6246
#define GTF_writing 150,6278
#define _GTF_PWT 151,6325
#define GTF_PWT 152,6357
#define _GTF_PCD 153,6400
#define GTF_PCD 154,6432
#define _GTF_PAT 155,6475
#define GTF_PAT 156,6507
#define _GTF_sub_page 157,6550
#define GTF_sub_page 158,6582
#define _GTF_transfer_committed 170,7154
#define GTF_transfer_committed 171,7190
#define _GTF_transfer_completed 172,7252
#define GTF_transfer_completed 173,7288
struct grant_entry_header 190,7949
    uint16_t flags;191,7977
    domid_t  domid;192,7997
typedef struct grant_entry_header grant_entry_header_t;194,8020
union grant_entry_v2 199,8127
    grant_entry_header_t hdr;200,8150
        grant_entry_header_t hdr;212,8534
        uint32_t pad0;213,8568
        uint64_t frame;214,8591
    } full_page;215,8615
        grant_entry_header_t hdr;223,8826
        uint16_t page_off;224,8860
        uint16_t length;225,8887
        uint64_t frame;226,8912
    } sub_page;227,8936
        grant_entry_header_t hdr;239,9310
        domid_t trans_domid;240,9344
        uint16_t pad0;241,9373
        grant_ref_t gref;242,9396
    } transitive;243,9422
    uint32_t __spacer[__spacer245,9441
typedef union grant_entry_v2 grant_entry_v2_t;247,9498
typedef uint16_t grant_status_t;249,9546
typedef uint32_t grant_handle_t;260,9761
#define GNTTABOP_map_grant_ref 279,10744
struct gnttab_map_grant_ref 280,10784
    uint64_t host_addr;282,10839
    uint32_t flags;283,10863
    grant_ref_t ref;284,10912
    domid_t  dom;285,10933
    int16_t  status;287,10977
    grant_handle_t handle;288,11025
    uint64_t dev_bus_addr;289,11052
typedef struct gnttab_map_grant_ref gnttab_map_grant_ref_t;291,11082
#define GNTTABOP_unmap_grant_ref 305,11690
struct gnttab_unmap_grant_ref 306,11730
    uint64_t host_addr;308,11787
    uint64_t dev_bus_addr;309,11811
    grant_handle_t handle;310,11838
    int16_t  status;312,11891
typedef struct gnttab_unmap_grant_ref gnttab_unmap_grant_ref_t;314,11942
#define GNTTABOP_setup_table 326,12496
struct gnttab_setup_table 327,12536
    domid_t  dom;329,12589
    uint32_t nr_frames;330,12607
    int16_t  status;332,12657
    XEN_GUEST_HANDLE(333,12705
typedef struct gnttab_setup_table gnttab_setup_table_t;335,12748
#define GNTTABOP_dump_table 342,12963
struct gnttab_dump_table 343,13003
    domid_t dom;345,13055
    int16_t status;347,13098
typedef struct gnttab_dump_table gnttab_dump_table_t;349,13149
#define GNTTABOP_transfer 360,13571
struct gnttab_transfer 361,13614
    xen_pfn_t     mfn;363,13664
    domid_t       domid;364,13687
    grant_ref_t   ref;365,13712
    int16_t       status;367,13761
typedef struct gnttab_transfer gnttab_transfer_t;369,13790
#define _GNTCOPY_source_gref 391,14569
#define GNTCOPY_source_gref 392,14607
#define _GNTCOPY_dest_gref 393,14667
#define GNTCOPY_dest_gref 394,14705
#define _GNTCOPY_can_fail 395,14763
#define GNTCOPY_can_fail 396,14801
#define GNTTABOP_copy 398,14860
typedef struct gnttab_copy 399,14900
            grant_ref_t ref;403,14983
            xen_pfn_t   gmfn;404,15012
        } u;405,15042
        domid_t  domid;406,15055
        uint16_t offset;407,15079
    } source,408,15104
    } source, dest;408,15104
    uint16_t      len;409,15124
    uint16_t      flags;410,15147
    int16_t       status;412,15223
} gnttab_copy_t;413,15249
#define GNTTABOP_query_size 423,15537
struct gnttab_query_size 424,15577
    domid_t  dom;426,15629
    uint32_t nr_frames;428,15673
    uint32_t max_nr_frames;429,15697
    int16_t  status;430,15725
typedef struct gnttab_query_size gnttab_query_size_t;432,15776
#define GNTTABOP_unmap_and_replace 446,16382
struct gnttab_unmap_and_replace 447,16422
    uint64_t host_addr;449,16481
    uint64_t new_addr;450,16505
    grant_handle_t handle;451,16528
    int16_t  status;453,16581
typedef struct gnttab_unmap_and_replace gnttab_unmap_and_replace_t;455,16632
#define GNTTABOP_set_version 466,17124
struct gnttab_set_version 467,17164
    uint32_t version;469,17220
typedef struct gnttab_set_version gnttab_set_version_t;471,17245
#define GNTTABOP_get_status_frames 487,17956
struct gnttab_get_status_frames 488,17997
    uint32_t nr_frames;490,18056
    domid_t  dom;491,18080
    int16_t  status;493,18124
    XEN_GUEST_HANDLE(494,18172
typedef struct gnttab_get_status_frames gnttab_get_status_frames_t;496,18218
#define GNTTABOP_get_version 503,18440
struct gnttab_get_version 504,18481
    domid_t dom;506,18533
    uint16_t pad;507,18550
    uint32_t version;509,18593
typedef struct gnttab_get_version gnttab_get_version_t;511,18618
#define _GNTMAP_device_map 520,18874
#define GNTMAP_device_map 521,18910
#define _GNTMAP_host_map 523,19018
#define GNTMAP_host_map 524,19054
#define _GNTMAP_readonly 526,19185
#define GNTMAP_readonly 527,19221
#define _GNTMAP_application_map 533,19444
#define GNTMAP_application_map 534,19480
#define _GNTMAP_contains_pte 541,19721
#define GNTMAP_contains_pte 542,19757
#define _GNTMAP_can_fail 544,19816
#define GNTMAP_can_fail 545,19852
#define _GNTMAP_guest_avail0 551,20057
#define GNTMAP_guest_avail_mask 552,20094
#define GNTST_okay 557,20229
#define GNTST_general_error 558,20309
#define GNTST_bad_domain 559,20389
#define GNTST_bad_gntref 560,20469
#define GNTST_bad_handle 561,20549
#define GNTST_bad_virt_addr 562,20629
#define GNTST_bad_dev_addr 563,20709
#define GNTST_no_device_space 564,20789
#define GNTST_permission_denied 565,20869
#define GNTST_bad_page 566,20949
#define GNTST_bad_copy_arg 567,21029
#define GNTST_address_too_big 568,21109
#define GNTST_eagain 569,21189
#define GNTTABOP_error_msgs 571,21270

xen/include/public/nmi.h,536
#define __XEN_PUBLIC_NMI_H__28,1309
#define _XEN_NMIREASON_io_error 37,1519
#define XEN_NMIREASON_io_error 38,1557
#define _XEN_NMIREASON_parity_error 40,1681
#define XEN_NMIREASON_parity_error 41,1719
#define _XEN_NMIREASON_unknown 43,1831
#define XEN_NMIREASON_unknown 44,1869
#define XENNMI_register_callback 56,2262
struct xennmi_callback 57,2299
    unsigned long handler_address;58,2324
    unsigned long pad;59,2359
typedef struct xennmi_callback xennmi_callback_t;61,2385
#define XENNMI_unregister_callback 68,2555

xen/include/public/xen-compat.h,180
#define __XEN_PUBLIC_XEN_COMPAT_H__28,1313
#define __XEN_LATEST_INTERFACE_VERSION__ 30,1350
#define __XEN_INTERFACE_VERSION__ 34,1528
#define __XEN_INTERFACE_VERSION__ 37,1707

xen/include/public/arch-ia64.h,13577
#define __HYPERVISOR_IF_IA64_H__29,1282
#define ___DEFINE_XEN_GUEST_HANDLE(37,1531
#define ___DEFINE_XEN_GUEST_HANDLE(40,1642
#define __DEFINE_XEN_GUEST_HANDLE(44,1742
#define DEFINE_XEN_GUEST_HANDLE(48,1896
#define XEN_GUEST_HANDLE(49,1974
#define XEN_GUEST_HANDLE_64(50,2038
#define uint64_aligned_t 51,2101
#define set_xen_guest_handle_raw(52,2150
#define get_xen_guest_handle(54,2247
#define set_xen_guest_handle(56,2326
typedef unsigned long xen_pfn_t;59,2422
#define PRI_xen_pfn 60,2455
#define VIRQ_ITC 64,2525
#define VIRQ_MCA_CMC 65,2588
#define VIRQ_MCA_CPE 66,2648
#define XEN_LEGACY_MAX_VCPUS 70,2848
#define IO_PORTS_PADDR 73,2914
#define IO_PORTS_SIZE 74,2967
typedef unsigned long xen_ulong_t;78,3043
#define XEN_PAGE_SIZE 81,3100
#define XEN_PAGE_SIZE 83,3141
#define INVALID_MFN 86,3181
struct pt_fpreg 88,3215
        unsigned long bits[bits90,3245
        long double __dummy;91,3276
    } u;92,3338
union vac 95,3351
    unsigned long value;96,3363
        int a_int:a_int98,3401
        int a_from_int_cr:a_from_int_cr99,3422
        int a_to_int_cr:a_to_int_cr100,3451
        int a_from_psr:a_from_psr101,3478
        int a_from_cpuid:a_from_cpuid102,3504
        int a_cover:a_cover103,3532
        int a_bsw:a_bsw104,3555
        long reserved:reserved105,3576
typedef union vac vac_t;108,3612
union vdc 110,3638
    unsigned long value;111,3650
        int d_vmsw:d_vmsw113,3688
        int d_extint:d_extint114,3710
        int d_ibr_dbr:d_ibr_dbr115,3734
        int d_pmc:d_pmc116,3759
        int d_to_pmd:d_to_pmd117,3780
        int d_itm:d_itm118,3804
        long reserved:reserved119,3825
typedef union vdc vdc_t;122,3861
struct mapped_regs 124,3887
    union vac   vac;125,3908
    union vdc   vdc;126,3929
    unsigned long  virt_env_vaddr;127,3950
    unsigned long  reserved1[reserved1128,3985
    unsigned long  vhpi;129,4019
    unsigned long  reserved2[reserved2130,4044
        unsigned long  vgr[vgr132,4090
        unsigned long bank1_regs[bank1_regs133,4122
        unsigned long  vbgr[vbgr136,4221
        unsigned long bank0_regs[bank0_regs137,4254
    unsigned long  vnat;139,4341
    unsigned long  vbnat;140,4366
    unsigned long  vcpuid[vcpuid141,4392
    unsigned long  reserved3[reserved3142,4422
    unsigned long  vpsr;143,4456
    unsigned long  vpr;144,4481
    unsigned long  reserved4[reserved4145,4505
        unsigned long  vcr[vcr147,4551
            unsigned long dcr;149,4601
            unsigned long itm;150,4640
            unsigned long iva;151,4671
            unsigned long rsv1[rsv1152,4702
            unsigned long pta;153,4737
            unsigned long rsv2[rsv2154,4776
            unsigned long ipsr;155,4811
            unsigned long isr;156,4852
            unsigned long rsv3;157,4883
            unsigned long iip;158,4915
            unsigned long ifa;159,4946
            unsigned long itir;160,4977
            unsigned long iipa;161,5009
            unsigned long ifs;162,5041
            unsigned long iim;163,5072
            unsigned long iha;164,5112
            unsigned long rsv4[rsv4165,5143
            unsigned long lid;166,5179
            unsigned long ivr;167,5219
            unsigned long tpr;168,5250
            unsigned long eoi;169,5281
            unsigned long irr[irr170,5312
            unsigned long itv;171,5346
            unsigned long pmv;172,5386
            unsigned long cmcv;173,5417
            unsigned long rsv5[rsv5174,5449
            unsigned long lrr0;175,5484
            unsigned long lrr1;176,5525
            unsigned long rsv6[rsv6177,5557
        unsigned long  reserved5[reserved5181,5623
            unsigned long precover_ifs;183,5679
            unsigned long unat;184,5719
            int interrupt_collection_enabled;185,5805
            unsigned char *interrupt_mask_addr;interrupt_mask_addr190,6086
            int pending_interruption;191,6134
            unsigned char vpsr_pp;192,6172
            unsigned char vpsr_dfh;193,6207
            unsigned char hpsr_dfh;194,6243
            unsigned char hpsr_mfh;195,6279
            unsigned long reserved5_1[reserved5_1196,6315
            int metaphysical_mode;197,6357
            int banknum;198,6437
            unsigned long rrs[rrs199,6511
            unsigned long krs[krs200,6565
            unsigned long tmp[tmp201,6619
            unsigned long itc_offset;209,6943
            unsigned long itc_last;210,6981
typedef struct mapped_regs mapped_regs_t;214,7038
struct vpd 216,7081
    struct mapped_regs vpd_low;217,7094
    unsigned long  reserved6[reserved6218,7126
    unsigned long  vmm_avail[vmm_avail219,7162
    unsigned long  reserved7[reserved7220,7197
typedef struct vpd vpd_t;222,7236
struct arch_vcpu_info 224,7263
typedef struct arch_vcpu_info arch_vcpu_info_t;226,7290
struct xen_ia64_memmap_info 235,7647
    uint64_t efi_memmap_size;236,7677
    uint64_t efi_memdesc_size;237,7742
    uint32_t efi_memdesc_version;238,7821
    void *memdesc[memdesc239,7889
typedef struct xen_ia64_memmap_info xen_ia64_memmap_info_t;241,7961
struct arch_shared_info 243,8022
    unsigned long start_info_pfn;245,8087
    int evtchn_vector;248,8169
    unsigned int memmap_info_num_pages;251,8227
    unsigned long memmap_info_pfn;253,8352
    uint64_t pad[pad255,8388
typedef struct arch_shared_info arch_shared_info_t;257,8413
typedef unsigned long xen_callback_t;259,8466
struct ia64_tr_entry 261,8505
    unsigned long pte;262,8528
    unsigned long itir;263,8551
    unsigned long vadr;264,8575
    unsigned long rid;265,8599
typedef struct ia64_tr_entry ia64_tr_entry_t;267,8625
struct vcpu_tr_regs 270,8714
    struct ia64_tr_entry itrs[itrs271,8736
    struct ia64_tr_entry dtrs[dtrs272,8771
union vcpu_ar_regs 275,8810
    unsigned long ar[ar276,8831
        unsigned long kr[kr278,8871
        unsigned long rsv1[rsv1279,8900
        unsigned long rsc;280,8931
        unsigned long bsp;281,8958
        unsigned long bspstore;282,8985
        unsigned long rnat;283,9017
        unsigned long rsv2;284,9045
        unsigned long fcr;285,9073
        unsigned long rsv3[rsv3286,9100
        unsigned long eflag;287,9131
        unsigned long csd;288,9160
        unsigned long ssd;289,9187
        unsigned long cflg;290,9214
        unsigned long fsr;291,9242
        unsigned long fir;292,9269
        unsigned long fdr;293,9296
        unsigned long rsv4;294,9323
        unsigned long ccv;295,9351
        unsigned long rsv5[rsv5296,9387
        unsigned long unat;297,9418
        unsigned long rsv6[rsv6298,9446
        unsigned long fpsr;299,9477
        unsigned long rsv7[rsv7300,9505
        unsigned long itc;301,9536
        unsigned long rsv8[rsv8302,9563
        unsigned long ign1[ign1303,9594
        unsigned long pfs;304,9626
        unsigned long lc;305,9662
        unsigned long ec;306,9688
        unsigned long rsv9[rsv9307,9714
        unsigned long ign2[ign2308,9746
union vcpu_cr_regs 312,9789
    unsigned long cr[cr313,9810
        unsigned long dcr;315,9850
        unsigned long itm;316,9885
        unsigned long iva;317,9912
        unsigned long rsv1[rsv1318,9939
        unsigned long pta;319,9970
        unsigned long rsv2[rsv2320,10005
        unsigned long ipsr;321,10036
        unsigned long isr;322,10073
        unsigned long rsv3;323,10100
        unsigned long iip;324,10128
        unsigned long ifa;325,10155
        unsigned long itir;326,10182
        unsigned long iipa;327,10210
        unsigned long ifs;328,10238
        unsigned long iim;329,10265
        unsigned long iha;330,10301
        unsigned long rsv4[rsv4331,10328
        unsigned long lid;332,10360
        unsigned long ivr;333,10396
        unsigned long tpr;334,10423
        unsigned long eoi;335,10450
        unsigned long irr[irr336,10477
        unsigned long itv;337,10507
        unsigned long pmv;338,10543
        unsigned long cmcv;339,10570
        unsigned long rsv5[rsv5340,10598
        unsigned long lrr0;341,10629
        unsigned long lrr1;342,10666
        unsigned long rsv6[rsv6343,10694
struct vcpu_guest_context_regs 347,10737
        unsigned long r[r348,10770
        unsigned long b[b349,10799
        unsigned long bank[bank350,10827
        unsigned long ip;351,10859
        unsigned long psr;352,10885
        unsigned long cfm;353,10912
        unsigned long pr;354,10939
        unsigned int nats;355,10965
        unsigned int bnats;356,11020
        union vcpu_ar_regs ar;357,11086
        union vcpu_cr_regs cr;358,11117
        struct pt_fpreg f[f359,11148
        unsigned long dbr[dbr360,11180
        unsigned long ibr[ibr361,11210
        unsigned long rr[rr362,11240
        unsigned long pkr[pkr363,11269
        unsigned long xip;367,11337
        unsigned long xpsr;368,11364
        unsigned long xfs;369,11392
        unsigned long xr[xr370,11419
        struct vcpu_tr_regs tr;372,11449
        unsigned long excp_iipa;375,11540
        unsigned long excp_ifa;376,11573
        unsigned long excp_isr;377,11605
        unsigned int excp_vector;378,11637
        unsigned int rbs_voff;389,12155
        unsigned long rbs[rbs390,12186
        unsigned long rbs_rnat;391,12219
        unsigned long num_phys_stacked;398,12442
struct vcpu_guest_context 401,12486
#define VGCF_EXTRA_REGS 402,12514
#define VGCF_SET_CR_IRR 403,12572
#define VGCF_online 404,12630
#define VGCF_SET_AR_ITC 405,12694
    unsigned long flags;406,12772
    struct vcpu_guest_context_regs regs;408,12823
    unsigned long event_callback_ip;410,12865
#define VGC_PRIVREGS_HVM 415,13075
    unsigned long privregs_pfn;416,13116
typedef struct vcpu_guest_context vcpu_guest_context_t;418,13151
#define __HYPERVISOR_ia64_dom0vp_op 422,13272
#define IA64_DOM0VP_ioremap 425,13471
#define IA64_DOM0VP_phystomach 430,13724
#define IA64_DOM0VP_machtophys 434,13890
#define IA64_DOM0VP_iounmap 437,13965
#define IA64_DOM0VP_zap_physmap 440,14087
#define IA64_DOM0VP_add_physmap 443,14204
#define IA64_DOM0VP_expose_p2m 446,14286
#define IA64_DOM0VP_perfmon 449,14347
#define IA64_DOM0VP_add_physmap_with_gmfn 452,14436
#define IA64_DOM0VP_fpswa_revision 455,14512
#define IA64_DOM0VP_add_io_space 458,14590
#define IA64_DOM0VP_expose_foreign_p2m 461,14701
#define         IA64_DOM0VP_EFP_ALLOC_PTE 462,14744
#define IA64_DOM0VP_unexpose_foreign_p2m 465,14891
#define IA64_DOM0VP_get_memmap 470,15117
#define _ASSIGN_readonly 473,15224
#define ASSIGN_readonly 474,15266
#define ASSIGN_writable 475,15332
#define _ASSIGN_nocache 477,15470
#define ASSIGN_nocache 478,15512
#define _ASSIGN_tlb_track 480,15593
#define ASSIGN_tlb_track 481,15635
#define _ASSIGN_pgc_allocated 483,15757
#define ASSIGN_pgc_allocated 484,15799
#define _ASSIGN_io 486,15897
#define ASSIGN_io 487,15939
struct xen_ia64_boot_param 491,16134
	unsigned long command_line;492,16163
	unsigned long efi_systab;493,16232
	unsigned long efi_memmap;494,16302
	unsigned long efi_memmap_size;495,16370
	unsigned long efi_memdesc_size;496,16431
	unsigned int  efi_memdesc_version;497,16507
		unsigned short num_cols;499,16585
		unsigned short num_rows;500,16649
		unsigned short orig_x;501,16710
		unsigned short orig_y;502,16761
	} console_info;503,16812
	unsigned long fpswa;504,16829
	unsigned long initrd_start;505,16898
	unsigned long initrd_size;506,16927
	unsigned long domain_start;507,16955
	unsigned long domain_size;508,17027
#define XSI_SHIFT	514,17192
#define XSI_SIZE	515,17215
#define XMAPPEDREGS_SHIFT	517,17315
#define XMAPPEDREGS_SIZE	518,17345
#define XMAPPEDREGS_OFS	520,17455
#define HYPERPRIVOP_START	523,17512
#define HYPERPRIVOP_RFI	524,17543
#define HYPERPRIVOP_RSM_DT	525,17595
#define HYPERPRIVOP_SSM_DT	526,17649
#define HYPERPRIVOP_COVER	527,17703
#define HYPERPRIVOP_ITC_D	528,17756
#define HYPERPRIVOP_ITC_I	529,17809
#define HYPERPRIVOP_SSM_I	530,17862
#define HYPERPRIVOP_GET_IVR	531,17915
#define HYPERPRIVOP_GET_TPR	532,17970
#define HYPERPRIVOP_SET_TPR	533,18025
#define HYPERPRIVOP_EOI	534,18080
#define HYPERPRIVOP_SET_ITM	535,18132
#define HYPERPRIVOP_THASH	536,18187
#define HYPERPRIVOP_PTC_GA	537,18240
#define HYPERPRIVOP_ITR_D	538,18294
#define HYPERPRIVOP_GET_RR	539,18347
#define HYPERPRIVOP_SET_RR	540,18401
#define HYPERPRIVOP_SET_KR	541,18456
#define HYPERPRIVOP_FC	542,18511
#define HYPERPRIVOP_GET_CPUID	543,18563
#define HYPERPRIVOP_GET_PMD	544,18621
#define HYPERPRIVOP_GET_EFLAG	545,18677
#define HYPERPRIVOP_SET_EFLAG	546,18735
#define HYPERPRIVOP_RSM_BE	547,18793
#define HYPERPRIVOP_GET_PSR	548,18848
#define HYPERPRIVOP_SET_RR0_TO_RR4	549,18904
#define HYPERPRIVOP_MAX	550,18966
#define __HYPERVISOR_ia64_fast_eoi	553,19034
#define __HYPERVISOR_ia64_debug_op 556,19119
#define XENCOMM_INLINE_MASK 559,19199
#define XENCOMM_INLINE_FLAG 560,19248
#define __HYPERVISOR_opt_feature	569,19492
#define XEN_IA64_OPTF_OFF	571,19534
#define XEN_IA64_OPTF_ON	572,19564
#define XEN_IA64_OPTF_IDENT_MAP_REG7 580,19813
#define XEN_IA64_OPTF_IDENT_MAP_REG4 583,19909
#define XEN_IA64_OPTF_IDENT_MAP_REG5 586,20005
#define XEN_IA64_OPTF_IDENT_MAP_NOT_SET 588,20048
struct xen_ia64_opt_feature 590,20094
	unsigned long cmd;591,20124
	unsigned char on;592,20165
			unsigned long pgprot;597,20325
			unsigned long key;598,20350

xen/include/public/arch-ia64/debug_op.h,1154
#define __XEN_PUBLIC_IA64_DEBUG_OP_H__23,917
#define XEN_IA64_DEBUG_OP_SET_FLAGS 26,999
#define XEN_IA64_DEBUG_OP_GET_FLAGS 27,1037
#define XEN_IA64_DEBUG_ON_KERN_SSTEP 30,1112
#define XEN_IA64_DEBUG_ON_KERN_DEBUG 33,1219
#define XEN_IA64_DEBUG_ON_KERN_TBRANCH 36,1305
#define XEN_IA64_DEBUG_ON_EXTINT 39,1391
#define XEN_IA64_DEBUG_ON_EXCEPT 42,1477
#define XEN_IA64_DEBUG_ON_EVENT 45,1559
#define XEN_IA64_DEBUG_ON_PRIVOP 48,1673
#define XEN_IA64_DEBUG_ON_PAL 51,1768
#define XEN_IA64_DEBUG_ON_SAL 54,1863
#define XEN_IA64_DEBUG_ON_EFI 57,1958
#define XEN_IA64_DEBUG_ON_RFI 60,2068
#define XEN_IA64_DEBUG_ON_MMU 63,2162
#define XEN_IA64_DEBUG_ON_BAD_MPA 66,2256
#define XEN_IA64_DEBUG_FORCE_SS 69,2331
#define XEN_IA64_DEBUG_FORCE_DB 72,2406
#define XEN_IA64_DEBUG_ON_TR 75,2481
#define XEN_IA64_DEBUG_ON_TC 78,2571
#define XEN_IA64_DEBUG_OP_GET_TC 81,2651
#define XEN_IA64_DEBUG_OP_TRANSLATE 84,2749
union xen_ia64_debug_op 86,2788
    uint64_t flags;87,2814
    struct xen_ia64_debug_vtlb 88,2834
        uint64_t nbr;89,2867
        XEN_GUEST_HANDLE_64(90,2930
typedef union xen_ia64_debug_op xen_ia64_debug_op_t;93,3008

xen/include/public/arch-ia64/hvm/save.h,2222
#define __XEN_PUBLIC_HVM_SAVE_IA64_H__24,977
#define HVM_FILE_MAGIC 34,1169
#define HVM_FILE_VERSION 35,1234
struct hvm_save_header 37,1281
    uint64_t magic;38,1306
    uint64_t version;39,1367
    uint64_t changeset;40,1425
    uint64_t cpuid[cpuid41,1499
struct hvm_hw_ia64_cpu 49,1654
    uint64_t    ipsr;50,1679
struct hvm_hw_ia64_vpd 57,1774
    struct vpd      vpd;58,1799
struct hvm_hw_ia64_vlsapic 69,1961
    uint64_t insvc[insvc70,1990
    uint64_t vhpi;71,2013
    uint8_t xtp;72,2067
    uint8_t pal_init_pending;73,2084
    uint8_t pad[pad74,2114
struct hvm_hw_ia64_vtime 86,2381
    uint64_t itc;87,2408
    uint64_t itm;88,2426
    uint64_t last_itc;90,2445
    uint64_t pending;91,2468
#define VIOSAPIC_NUM_PINS 107,2872
union vioapic_redir_entry113,3075
    uint64_t bits;115,3103
        uint8_t vector;117,3135
        uint8_t delivery_mode 119,3160
        uint8_t reserve1 120,3196
        uint8_t delivery_status:delivery_status121,3232
        uint8_t polarity 122,3268
        uint8_t reserve2 123,3304
        uint8_t trig_mode 124,3340
        uint8_t mask 126,3377
        uint8_t reserve3 127,3413
        uint8_t reserved[reserved129,3450
        uint16_t dest_id;130,3479
    } fields;131,3505
struct hvm_hw_ia64_viosapic 134,3523
    uint64_t    irr;135,3553
    uint64_t    isr;136,3574
    uint32_t    ioregsel;137,3595
    uint32_t    pad;138,3621
    uint64_t    lowest_vcpu_id;139,3642
    uint64_t    base_address;140,3674
    union vioapic_redir_entry  redirtbl[redirtbl141,3704
struct vacpi_regs 149,3863
            uint32_t pm1a_sts:pm1a_sts152,3912
            uint32_t pm1a_en:pm1a_en153,3990
        uint32_t evt_blk;155,4078
    uint32_t tmr_val;157,4111
struct hvm_hw_ia64_vacpi 160,4192
    struct vacpi_regs   regs;161,4219
struct hvm_hw_ia64_identity_mapping 177,4856
    uint64_t on;178,4894
    uint64_t pgprot;179,4931
    uint64_t key;180,5002
struct hvm_hw_ia64_identity_mappings 183,5054
    struct hvm_hw_ia64_identity_mapping im_reg4;184,5093
    struct hvm_hw_ia64_identity_mapping im_reg5;185,5173
    struct hvm_hw_ia64_identity_mapping im_reg7;186,5253
#define HVM_SAVE_CODE_MAX 193,5468

xen/include/public/arch-ia64/hvm/memmap.h,1120
#define __XEN_PUBLIC_HVM_MEMMAP_IA64_H__23,920
#define MEM_G 25,962
#define MEM_M 26,989
#define MEM_K 27,1016
#define MMIO_START 30,1093
#define MMIO_SIZE 31,1125
#define VGA_IO_START 33,1160
#define VGA_IO_SIZE 34,1192
#define LEGACY_IO_START 36,1223
#define LEGACY_IO_SIZE 37,1273
#define IO_PAGE_START 39,1312
#define IO_PAGE_SIZE 40,1370
#define STORE_PAGE_START 42,1408
#define STORE_PAGE_SIZE 43,1465
#define BUFFER_IO_PAGE_START 45,1506
#define BUFFER_IO_PAGE_SIZE 46,1573
#define BUFFER_PIO_PAGE_START 48,1618
#define BUFFER_PIO_PAGE_SIZE 49,1694
#define IO_SAPIC_START 51,1740
#define IO_SAPIC_SIZE 52,1777
#define PIB_START 54,1811
#define PIB_SIZE 55,1843
#define GFW_START 57,1872
#define GFW_SIZE 58,1916
#define GPFN_FRAME_BUFFER 61,1962
#define GPFN_LOW_MMIO 62,2015
#define GPFN_PIB 63,2067
#define GPFN_IOSAPIC 64,2113
#define GPFN_LEGACY_IO 65,2163
#define GPFN_HIGH_MMIO 66,2216
#define NVRAM_SIZE 69,2311
#define NVRAM_START 70,2345
#define NVRAM_VALID_SIG 72,2392
struct nvram_save_addr 73,2453
    unsigned long addr;74,2478
    unsigned long signature;75,2502

xen/include/public/arch-ia64/sioemu.h,1073
#define __XEN_PUBLIC_IA64_SIOEMU_H__23,913
#define SIOEMU_HYPERCALL_SET_CALLBACK 30,1131
#define SIOEMU_HYPERCALL_START_FW 33,1242
#define SIOEMU_HYPERCALL_ADD_IO_PHYSMAP 36,1314
#define SIOEMU_HYPERCALL_GET_TIME 39,1387
#define SIOEMU_HYPERCALL_FLUSH_CACHE 42,1447
#define SIOEMU_HYPERCALL_FREQ_BASE 45,1512
#define SIOEMU_HYPERCALL_CALLBACK_RETURN 48,1582
#define SIOEMU_HYPERCALL_DELIVER_INT 51,1658
#define SIOEMU_CB_EVENT 56,1791
#define SIOEMU_CB_IO_EMULATE 59,1856
#define SIOEMU_CB_WAKEUP_VCPU 62,1930
#define SIOEMU_CB_SAL_ASSIST 65,2002
struct sioemu_callback_info 68,2059
    unsigned long ip;70,2117
    unsigned long psr;71,2139
    unsigned long ifs;72,2162
    unsigned long nats;73,2185
    unsigned long r8;74,2209
    unsigned long r9;75,2231
    unsigned long r10;76,2253
    unsigned long r11;77,2276
    unsigned long cause;80,2332
    unsigned long arg0;81,2357
    unsigned long arg1;82,2381
    unsigned long arg2;83,2405
    unsigned long arg3;84,2429
    unsigned long _pad2[_pad285,2453
    unsigned long r2;86,2481

xen/include/public/kexec.h,1242
#define _XEN_PUBLIC_KEXEC_H28,1332
#define KEXEC_XEN_NO_PAGES 62,2730
#define KEXEC_TYPE_DEFAULT 83,3404
#define KEXEC_TYPE_CRASH 84,3433
typedef struct xen_kexec_image 96,3946
    unsigned long page_list[page_list98,4024
    unsigned long reboot_code_buffer;101,4102
    unsigned long indirection_page;103,4147
    unsigned long start_address;104,4183
} xen_kexec_image_t;105,4216
#define KEXEC_CMD_kexec 112,4385
typedef struct xen_kexec_exec 113,4427
    int type;114,4459
} xen_kexec_exec_t;115,4473
#define KEXEC_CMD_kexec_load 122,4676
#define KEXEC_CMD_kexec_unload 123,4718
typedef struct xen_kexec_load 124,4760
    int type;125,4792
    xen_kexec_image_t image;126,4806
} xen_kexec_load_t;127,4835
#define KEXEC_RANGE_MA_CRASH 129,4856
#define KEXEC_RANGE_MA_XEN 130,4937
#define KEXEC_RANGE_MA_CPU 131,5018
#define KEXEC_RANGE_MA_XENHEAP 132,5099
#define KEXEC_RANGE_MA_BOOT_PARAM 137,5480
#define KEXEC_RANGE_MA_EFI_MEMMAP 139,5609
#define KEXEC_RANGE_MA_VMCOREINFO 141,5740
#define KEXEC_CMD_kexec_get_range 150,6103
typedef struct xen_kexec_range 151,6145
    int range;152,6178
    int nr;153,6193
    unsigned long size;154,6205
    unsigned long start;155,6229
} xen_kexec_range_t;156,6254

xen/include/public/arch-x86/xen-mca.h,6162
#define __XEN_PUBLIC_ARCH_X86_MCA_H__54,2451
#define __HYPERVISOR_mca 57,2506
#define XEN_MCA_INTERFACE_VERSION 65,2802
#define XEN_MC_NONURGENT 68,2911
#define XEN_MC_URGENT 70,3009
#define XEN_MC_ACK 72,3098
#define XEN_MC_OK 75,3153
#define XEN_MC_FETCHFAILED 77,3225
#define XEN_MC_NODATA 79,3310
#define XEN_MC_NOMATCH 83,3523
#define XEN_MC_CANNOTHANDLE 86,3625
#define XEN_MC_NOTDELIVERED 88,3726
#define VIRQ_MCA 94,3863
#define MC_TYPE_GLOBAL 104,4272
#define MC_TYPE_BANK 105,4306
#define MC_TYPE_EXTENDED 106,4340
#define MC_TYPE_RECOVERY 107,4374
struct mcinfo_common 109,4409
    uint16_t type;110,4432
    uint16_t size;111,4477
#define MC_FLAG_CORRECTABLE 115,4541
#define MC_FLAG_UNCORRECTABLE 116,4582
#define MC_FLAG_RECOVERABLE	117,4623
#define MC_FLAG_POLLED	118,4660
#define MC_FLAG_RESET	119,4693
#define MC_FLAG_CMCI	120,4725
#define MC_FLAG_MCE	121,4756
struct mcinfo_global 123,4827
    struct mcinfo_common common;124,4850
    uint16_t mc_domid;127,4961
    uint16_t mc_vcpuid;128,4984
    uint32_t mc_socketid;129,5049
    uint16_t mc_coreid;130,5118
    uint16_t mc_core_threadid;131,5171
    uint32_t mc_apicid;132,5237
    uint32_t mc_flags;133,5261
    uint64_t mc_gstatus;134,5284
struct mcinfo_bank 138,5378
    struct mcinfo_common common;139,5399
    uint16_t mc_bank;141,5433
    uint16_t mc_domid;142,5469
    uint64_t mc_status;144,5618
    uint64_t mc_addr;145,5660
    uint64_t mc_misc;147,5774
    uint64_t mc_ctrl2;148,5796
    uint64_t mc_tsc;149,5819
struct mcinfo_msr 153,5845
    uint64_t reg;154,5865
    uint64_t value;155,5895
struct mcinfo_extended 160,6002
    struct mcinfo_common common;161,6027
    uint32_t mc_msrs;167,6179
    struct mcinfo_msr mc_msr[mc_msr173,6464
#define REC_ACTION_RECOVERED 179,6658
#define REC_ACTION_NONE 181,6734
#define REC_ACTION_NEED_RESET 183,6835
#define MC_ACTION_PAGE_OFFLINE 190,7032
#define MC_ACTION_CPU_OFFLINE 192,7099
#define MC_ACTION_CACHE_SHRINK 194,7170
struct page_offline_action203,7594
    uint64_t mfn;206,7685
    uint64_t status;207,7703
struct cpu_offline_action210,7728
    uint32_t mc_socketid;213,7826
    uint16_t mc_coreid;214,7852
    uint16_t mc_core_threadid;215,7876
#define MAX_UNION_SIZE 218,7911
struct mcinfo_recovery219,7937
    struct mcinfo_common common;221,7962
    uint16_t mc_bank;222,7995
    uint8_t action_flags;223,8031
    uint8_t action_types;224,8057
        struct page_offline_action page_retire;226,8095
        struct cpu_offline_action cpu_offline;227,8143
        uint8_t pad[pad228,8190
    } action_info;229,8227
#define MCINFO_HYPERCALLSIZE	233,8251
#define MCINFO_MAXSIZE	234,8285
#define MCINFO_FLAGS_UNCOMPLETE 236,8314
struct mc_info 237,8350
    uint32_t mi_nentries;239,8415
    uint32_t flags;240,8441
    uint64_t mi_data[mi_data241,8461
typedef struct mc_info mc_info_t;243,8512
#define __MC_MSR_ARRAYSIZE 246,8583
#define __MC_NMSRS 247,8612
#define MC_NCAPS	248,8633
#define MC_CAPS_STD_EDX	249,8683
#define MC_CAPS_AMD_EDX	250,8745
#define MC_CAPS_TM	251,8807
#define MC_CAPS_LINUX	252,8869
#define MC_CAPS_STD_ECX	253,8913
#define MC_CAPS_VIA	254,8975
#define MC_CAPS_AMD_ECX	255,9026
struct mcinfo_logical_cpu 257,9089
    uint32_t mc_cpunr;258,9117
    uint32_t mc_chipid;259,9150
    uint16_t mc_coreid;260,9175
    uint16_t mc_threadid;261,9199
    uint32_t mc_apicid;262,9225
    uint32_t mc_clusterid;263,9249
    uint32_t mc_ncores;264,9276
    uint32_t mc_ncores_active;265,9300
    uint32_t mc_nthreads;266,9331
    int32_t mc_cpuid_level;267,9357
    uint32_t mc_family;268,9385
    uint32_t mc_vendor;269,9409
    uint32_t mc_model;270,9433
    uint32_t mc_step;271,9456
    char mc_vendorid[mc_vendorid272,9478
    char mc_brandid[mc_brandid273,9504
    uint32_t mc_cpu_caps[mc_cpu_caps274,9529
    uint32_t mc_cache_size;275,9565
    uint32_t mc_cache_alignment;276,9593
    int32_t mc_nmsrvals;277,9626
    struct mcinfo_msr mc_msrvalues[mc_msrvalues278,9651
typedef struct mcinfo_logical_cpu xen_mc_logical_cpu_t;280,9710
#define x86_mcinfo_nentries(293,10127
#define x86_mcinfo_first(298,10272
#define x86_mcinfo_next(303,10445
#define x86_mcinfo_lookup(309,10643
#define XEN_MC_fetch 343,12049
struct xen_mc_fetch 344,12083
    uint32_t flags;346,12133
    uint32_t _pad0;350,12343
    uint64_t fetch_id;351,12363
    XEN_GUEST_HANDLE(354,12457
typedef struct xen_mc_fetch xen_mc_fetch_t;356,12498
#define XEN_MC_notifydomain 363,12678
struct xen_mc_notifydomain 364,12712
    uint16_t mc_domid;366,12765
    uint16_t mc_vcpuid;367,12832
    uint32_t flags;371,13001
typedef struct xen_mc_notifydomain xen_mc_notifydomain_t;376,13146
#define XEN_MC_physcpuinfo 379,13253
struct xen_mc_physcpuinfo 380,13282
	uint32_t ncpus;382,13324
	uint32_t _pad0;383,13341
	XEN_GUEST_HANDLE(385,13369
#define XEN_MC_msrinject 388,13419
#define MC_MSRINJ_MAXMSRS 389,13449
struct xen_mc_msrinject 390,13483
	uint32_t mcinj_cpunr;392,13525
	uint32_t mcinj_flags;393,13584
	uint32_t mcinj_count;394,13647
	uint32_t _pad0;395,13718
	struct mcinfo_msr mcinj_msr[mcinj_msr396,13735
#define MC_MSRINJ_F_INTERPOSE 400,13847
#define XEN_MC_mceinject 402,13884
struct xen_mc_mceinject 403,13914
	unsigned int mceinj_cpunr;404,13940
#define XEN_MC_inject_v2 408,14050
#define XEN_MC_INJECT_TYPE_MASK 409,14084
#define XEN_MC_INJECT_TYPE_MCE 410,14124
#define XEN_MC_INJECT_TYPE_CMCI 411,14164
#define XEN_MC_INJECT_CPU_BROADCAST 413,14205
struct xen_mc_inject_v2 415,14246
	uint32_t flags;416,14272
	struct xenctl_cpumap cpumap;417,14289
struct xen_mc 421,14330
    uint32_t cmd;422,14346
    uint32_t interface_version;423,14364
        struct xen_mc_fetch        mc_fetch;425,14440
        struct xen_mc_notifydomain mc_notifydomain;426,14485
        struct xen_mc_physcpuinfo  mc_physcpuinfo;427,14537
        struct xen_mc_msrinject    mc_msrinject;428,14588
        struct xen_mc_mceinject    mc_mceinject;429,14637
        struct xen_mc_inject_v2    mc_inject_v2;431,14733
    } u;433,14789
typedef struct xen_mc xen_mc_t;435,14801

xen/include/public/arch-x86/xen.h,3216
#define __XEN_PUBLIC_ARCH_X86_XEN_H__30,1318
#define ___DEFINE_XEN_GUEST_HANDLE(34,1458
#define ___DEFINE_XEN_GUEST_HANDLE(37,1569
#define __DEFINE_XEN_GUEST_HANDLE(41,1669
#define DEFINE_XEN_GUEST_HANDLE(44,1822
#define __XEN_GUEST_HANDLE(45,1900
#define XEN_GUEST_HANDLE(46,1964
#define set_xen_guest_handle_raw(47,2029
#define get_xen_guest_handle(49,2126
#define set_xen_guest_handle(51,2205
typedef unsigned long xen_pfn_t;60,2405
#define PRI_xen_pfn 61,2438
#define FIRST_RESERVED_GDT_PAGE 73,2817
#define FIRST_RESERVED_GDT_BYTE 74,2853
#define FIRST_RESERVED_GDT_ENTRY 75,2919
#define XEN_LEGACY_MAX_VCPUS 78,3054
typedef unsigned long xen_ulong_t;82,3109
#define TI_GET_DPL(94,3526
#define TI_GET_IF(95,3574
#define TI_SET_DPL(96,3622
#define TI_SET_IF(97,3676
struct trap_info 98,3738
    uint8_t       vector;99,3757
    uint8_t       flags;100,3836
    uint16_t      cs;101,3915
    unsigned long address;102,3994
typedef struct trap_info trap_info_t;104,4076
typedef uint64_t tsc_timestamp_t;107,4153
struct vcpu_guest_context 113,4364
    struct { char x[x115,4470
    struct { char x[512]; } fpu_ctxt;115,4470
#define VGCF_I387_VALID 116,4549
#define VGCF_IN_KERNEL 117,4595
#define _VGCF_i387_valid 118,4641
#define VGCF_i387_valid 119,4682
#define _VGCF_in_kernel 120,4743
#define VGCF_in_kernel 121,4784
#define _VGCF_failsafe_disables_events 122,4844
#define VGCF_failsafe_disables_events 123,4885
#define _VGCF_syscall_disables_events 124,4960
#define VGCF_syscall_disables_events 125,5001
#define _VGCF_online 126,5075
#define VGCF_online 127,5116
    unsigned long flags;128,5173
    struct cpu_user_regs user_regs;129,5252
    struct trap_info trap_ctxt[trap_ctxt130,5331
    unsigned long ldt_base,131,5410
    unsigned long ldt_base, ldt_ents;131,5410
    unsigned long gdt_frames[gdt_frames132,5489
    unsigned long gdt_frames[16], gdt_ents;132,5489
    unsigned long kernel_ss,133,5568
    unsigned long kernel_ss, kernel_sp;133,5568
    unsigned long ctrlreg[ctrlreg135,5711
    unsigned long debugreg[debugreg136,5790
    unsigned long event_callback_cs;138,5885
    unsigned long event_callback_eip;139,5964
    unsigned long failsafe_callback_cs;140,6002
    unsigned long failsafe_callback_eip;141,6081
    unsigned long event_callback_eip;143,6128
    unsigned long failsafe_callback_eip;144,6166
        unsigned long syscall_callback_eip;147,6234
            unsigned int event_callback_cs;149,6295
            unsigned int failsafe_callback_cs;150,6374
    unsigned long syscall_callback_eip;154,6477
    unsigned long vm_assist;157,6531
    uint64_t      fs_base;160,6654
    uint64_t      gs_base_kernel;161,6681
    uint64_t      gs_base_user;162,6715
typedef struct vcpu_guest_context vcpu_guest_context_t;165,6757
struct arch_shared_info 168,6861
    unsigned long max_pfn;169,6887
    xen_pfn_t     pfn_to_mfn_frame_list_list;171,7047
    unsigned long nmi_reason;172,7093
    uint64_t pad[pad173,7123
typedef struct arch_shared_info arch_shared_info_t;175,7148
#define XEN_EMULATE_PREFIX 184,7343
#define XEN_CPUID 185,7403
#define XEN_EMULATE_PREFIX 187,7461
#define XEN_CPUID 188,7524

xen/include/public/arch-x86/xen-x86_32.h,2769
#define __XEN_PUBLIC_ARCH_X86_XEN_X86_32_H__28,1309
#define TRAP_INSTR 45,1848
#define FLAT_RING1_CS 53,2075
#define FLAT_RING1_DS 54,2127
#define FLAT_RING1_SS 55,2179
#define FLAT_RING3_CS 56,2231
#define FLAT_RING3_DS 57,2283
#define FLAT_RING3_SS 58,2335
#define FLAT_KERNEL_CS 60,2388
#define FLAT_KERNEL_DS 61,2425
#define FLAT_KERNEL_SS 62,2462
#define FLAT_USER_CS 63,2499
#define FLAT_USER_DS 64,2537
#define FLAT_USER_SS 65,2575
#define __HYPERVISOR_VIRT_START_PAE 67,2614
#define __MACH2PHYS_VIRT_START_PAE 68,2664
#define __MACH2PHYS_VIRT_END_PAE 69,2714
#define HYPERVISOR_VIRT_START_PAE 70,2764
#define MACH2PHYS_VIRT_START_PAE 72,2855
#define MACH2PHYS_VIRT_END_PAE 74,2945
#define __HYPERVISOR_VIRT_START_NONPAE 78,3069
#define __MACH2PHYS_VIRT_START_NONPAE 79,3119
#define __MACH2PHYS_VIRT_END_NONPAE 80,3169
#define HYPERVISOR_VIRT_START_NONPAE 81,3219
#define MACH2PHYS_VIRT_START_NONPAE 83,3313
#define MACH2PHYS_VIRT_END_NONPAE 85,3406
#define __HYPERVISOR_VIRT_START 88,3498
#define __MACH2PHYS_VIRT_START 89,3558
#define __MACH2PHYS_VIRT_END 90,3617
#define HYPERVISOR_VIRT_START 93,3705
#define MACH2PHYS_VIRT_START 96,3785
#define MACH2PHYS_VIRT_END 97,3856
#define MACH2PHYS_NR_ENTRIES 98,3925
#define machine_to_phys_mapping 100,4034
#undef ___DEFINE_XEN_GUEST_HANDLE105,4232
#define ___DEFINE_XEN_GUEST_HANDLE(106,4266
#undef set_xen_guest_handle_raw111,4565
#define set_xen_guest_handle_raw(112,4597
#define uint64_aligned_t 116,4801
#define __XEN_GUEST_HANDLE_64(117,4863
#define XEN_GUEST_HANDLE_64(118,4926
struct cpu_user_regs 123,5018
    uint32_t ebx;124,5041
    uint32_t ecx;125,5059
    uint32_t edx;126,5077
    uint32_t esi;127,5095
    uint32_t edi;128,5113
    uint32_t ebp;129,5131
    uint32_t eax;130,5149
    uint16_t error_code;131,5167
    uint16_t entry_vector;132,5209
    uint32_t eip;133,5251
    uint16_t cs;134,5269
    uint8_t  saved_upcall_mask;135,5286
    uint8_t  _pad0;136,5318
    uint32_t eflags;137,5338
    uint32_t esp;138,5404
    uint16_t ss,139,5422
    uint16_t ss, _pad1;139,5422
    uint16_t es,140,5446
    uint16_t es, _pad2;140,5446
    uint16_t ds,141,5470
    uint16_t ds, _pad3;141,5470
    uint16_t fs,142,5494
    uint16_t fs, _pad4;142,5494
    uint16_t gs,143,5518
    uint16_t gs, _pad5;143,5518
typedef struct cpu_user_regs cpu_user_regs_t;145,5545
#define xen_pfn_to_cr3(153,5858
#define xen_cr3_to_pfn(154,5938
struct arch_vcpu_info 156,6019
    unsigned long cr2;157,6043
    unsigned long pad[pad158,6066
typedef struct arch_vcpu_info arch_vcpu_info_t;160,6127
struct xen_callback 162,6176
    unsigned long cs;163,6198
    unsigned long eip;164,6220
typedef struct xen_callback xen_callback_t;166,6246

xen/include/public/arch-x86/xen-x86_64.h,3394
#define __XEN_PUBLIC_ARCH_X86_XEN_X86_64_H__28,1309
#define TRAP_INSTR 46,1901
#define FLAT_RING3_CS32 56,2155
#define FLAT_RING3_CS64 57,2207
#define FLAT_RING3_DS32 58,2259
#define FLAT_RING3_DS64 59,2311
#define FLAT_RING3_SS32 60,2363
#define FLAT_RING3_SS64 61,2415
#define FLAT_KERNEL_DS64 63,2468
#define FLAT_KERNEL_DS32 64,2509
#define FLAT_KERNEL_DS 65,2550
#define FLAT_KERNEL_CS64 66,2592
#define FLAT_KERNEL_CS32 67,2633
#define FLAT_KERNEL_CS 68,2674
#define FLAT_KERNEL_SS64 69,2716
#define FLAT_KERNEL_SS32 70,2757
#define FLAT_KERNEL_SS 71,2798
#define FLAT_USER_DS64 73,2841
#define FLAT_USER_DS32 74,2880
#define FLAT_USER_DS 75,2919
#define FLAT_USER_CS64 76,2957
#define FLAT_USER_CS32 77,2996
#define FLAT_USER_CS 78,3035
#define FLAT_USER_SS64 79,3073
#define FLAT_USER_SS32 80,3112
#define FLAT_USER_SS 81,3151
#define __HYPERVISOR_VIRT_START 83,3190
#define __HYPERVISOR_VIRT_END 84,3241
#define __MACH2PHYS_VIRT_START 85,3292
#define __MACH2PHYS_VIRT_END 86,3343
#define HYPERVISOR_VIRT_START 89,3425
#define HYPERVISOR_VIRT_END 90,3497
#define MACH2PHYS_VIRT_START 93,3575
#define MACH2PHYS_VIRT_END 94,3646
#define MACH2PHYS_NR_ENTRIES 95,3715
#define machine_to_phys_mapping 97,3824
#define SEGBASE_FS 105,4069
#define SEGBASE_GS_USER 106,4099
#define SEGBASE_GS_KERNEL 107,4129
#define SEGBASE_GS_USER_SEL 108,4159
#define _VGCF_in_syscall 131,5013
#define VGCF_in_syscall 132,5040
#define VGCF_IN_SYSCALL 133,5087
struct iret_context 137,5151
    uint64_t rax,139,5226
    uint64_t rax, r11,139,5226
    uint64_t rax, r11, rcx,139,5226
    uint64_t rax, r11, rcx, flags,139,5226
    uint64_t rax, r11, rcx, flags, rip,139,5226
    uint64_t rax, r11, rcx, flags, rip, cs,139,5226
    uint64_t rax, r11, rcx, flags, rip, cs, rflags,139,5226
    uint64_t rax, r11, rcx, flags, rip, cs, rflags, rsp,139,5226
    uint64_t rax, r11, rcx, flags, rip, cs, rflags, rsp, ss;139,5226
#define __DECL_REG(145,5454
#define __DECL_REG(151,5635
struct cpu_user_regs 154,5687
    uint64_t r15;155,5710
    uint64_t r14;156,5728
    uint64_t r13;157,5746
    uint64_t r12;158,5764
    __DECL_REG(159,5782
    __DECL_REG(160,5802
    uint64_t r11;161,5822
    uint64_t r10;162,5840
    uint64_t r9;163,5858
    uint64_t r8;164,5875
    __DECL_REG(165,5892
    __DECL_REG(166,5912
    __DECL_REG(167,5932
    __DECL_REG(168,5952
    __DECL_REG(169,5972
    uint32_t error_code;170,5992
    uint32_t entry_vector;171,6034
    __DECL_REG(172,6076
    uint16_t cs,173,6096
    uint16_t cs, _pad0[_pad0173,6096
    uint8_t  saved_upcall_mask;174,6123
    uint8_t  _pad1[_pad1175,6155
    __DECL_REG(176,6178
    __DECL_REG(177,6244
    uint16_t ss,178,6264
    uint16_t ss, _pad2[_pad2178,6264
    uint16_t es,179,6291
    uint16_t es, _pad3[_pad3179,6291
    uint16_t ds,180,6318
    uint16_t ds, _pad4[_pad4180,6318
    uint16_t fs,181,6345
    uint16_t fs, _pad5[_pad5181,6345
    uint16_t gs,182,6425
    uint16_t gs, _pad6[_pad6182,6425
typedef struct cpu_user_regs cpu_user_regs_t;184,6508
#undef __DECL_REG187,6597
#define xen_pfn_to_cr3(189,6616
#define xen_cr3_to_pfn(190,6673
struct arch_vcpu_info 192,6731
    unsigned long cr2;193,6755
    unsigned long pad;194,6778
typedef struct arch_vcpu_info arch_vcpu_info_t;196,6836
typedef unsigned long xen_callback_t;198,6885

xen/include/public/arch-x86/hvm/save.h,7601
#define __XEN_PUBLIC_HVM_SAVE_X86_H__27,1298
#define HVM_FILE_MAGIC 33,1405
#define HVM_FILE_VERSION 34,1441
struct hvm_save_header 36,1478
    uint32_t magic;37,1503
    uint32_t version;38,1564
    uint64_t changeset;39,1622
    uint32_t cpuid;40,1696
    uint32_t gtsc_khz;41,1774
struct hvm_hw_cpu 51,1924
    uint8_t  fpu_regs[fpu_regs52,1944
    uint64_t rax;54,1973
    uint64_t rbx;55,1991
    uint64_t rcx;56,2009
    uint64_t rdx;57,2027
    uint64_t rbp;58,2045
    uint64_t rsi;59,2063
    uint64_t rdi;60,2081
    uint64_t rsp;61,2099
    uint64_t r8;62,2117
    uint64_t r9;63,2134
    uint64_t r10;64,2151
    uint64_t r11;65,2169
    uint64_t r12;66,2187
    uint64_t r13;67,2205
    uint64_t r14;68,2223
    uint64_t r15;69,2241
    uint64_t rip;71,2260
    uint64_t rflags;72,2278
    uint64_t cr0;74,2300
    uint64_t cr2;75,2318
    uint64_t cr3;76,2336
    uint64_t cr4;77,2354
    uint64_t dr0;79,2373
    uint64_t dr1;80,2391
    uint64_t dr2;81,2409
    uint64_t dr3;82,2427
    uint64_t dr6;83,2445
    uint64_t dr7;84,2463
    uint32_t cs_sel;86,2486
    uint32_t ds_sel;87,2507
    uint32_t es_sel;88,2528
    uint32_t fs_sel;89,2549
    uint32_t gs_sel;90,2570
    uint32_t ss_sel;91,2591
    uint32_t tr_sel;92,2612
    uint32_t ldtr_sel;93,2633
    uint32_t cs_limit;95,2657
    uint32_t ds_limit;96,2680
    uint32_t es_limit;97,2703
    uint32_t fs_limit;98,2726
    uint32_t gs_limit;99,2749
    uint32_t ss_limit;100,2772
    uint32_t tr_limit;101,2795
    uint32_t ldtr_limit;102,2818
    uint32_t idtr_limit;103,2843
    uint32_t gdtr_limit;104,2868
    uint64_t cs_base;106,2894
    uint64_t ds_base;107,2916
    uint64_t es_base;108,2938
    uint64_t fs_base;109,2960
    uint64_t gs_base;110,2982
    uint64_t ss_base;111,3004
    uint64_t tr_base;112,3026
    uint64_t ldtr_base;113,3048
    uint64_t idtr_base;114,3072
    uint64_t gdtr_base;115,3096
    uint32_t cs_arbytes;117,3121
    uint32_t ds_arbytes;118,3146
    uint32_t es_arbytes;119,3171
    uint32_t fs_arbytes;120,3196
    uint32_t gs_arbytes;121,3221
    uint32_t ss_arbytes;122,3246
    uint32_t tr_arbytes;123,3271
    uint32_t ldtr_arbytes;124,3296
    uint64_t sysenter_cs;126,3324
    uint64_t sysenter_esp;127,3350
    uint64_t sysenter_eip;128,3377
    uint64_t shadow_gs;131,3429
    uint64_t msr_flags;134,3492
    uint64_t msr_lstar;135,3516
    uint64_t msr_star;136,3540
    uint64_t msr_cstar;137,3563
    uint64_t msr_syscall_mask;138,3587
    uint64_t msr_efer;139,3618
    uint64_t msr_tsc_aux;140,3641
    uint64_t tsc;143,3720
        uint32_t pending_event;147,3783
            uint8_t  pending_vector:pending_vector149,3832
            uint8_t  pending_type:pending_type150,3871
            uint8_t  pending_error_valid:pending_error_valid151,3908
            uint32_t pending_reserved:pending_reserved152,3952
            uint8_t  pending_valid:pending_valid153,3994
    uint32_t error_code;157,4089
struct hvm_hw_vpic 167,4185
    uint8_t irr;169,4234
    uint8_t imr;170,4251
    uint8_t isr;171,4268
    uint8_t irq_base;174,4328
    uint8_t init_state:init_state182,4621
    uint8_t priority_add:priority_add185,4689
    uint8_t readsel_isr:readsel_isr188,4762
    uint8_t poll:poll191,4830
    uint8_t auto_eoi:auto_eoi194,4912
    uint8_t rotate_on_auto_eoi:rotate_on_auto_eoi197,4996
    uint8_t special_fully_nested_mode:special_fully_nested_mode200,5096
    uint8_t special_mask_mode:special_mask_mode203,5217
    uint8_t is_master:is_master206,5328
    uint8_t elcr;209,5388
    uint8_t int_output;212,5437
#define VIOAPIC_IS_IOSAPIC 223,5553
#define VIOAPIC_NUM_PINS 224,5582
#define VIOAPIC_NUM_PINS 226,5617
struct hvm_hw_vioapic 229,5697
    uint64_t base_address;230,5721
    uint32_t ioregsel;231,5748
    uint32_t id;232,5771
    union vioapic_redir_entry233,5788
        uint64_t bits;235,5824
            uint8_t vector;237,5864
            uint8_t delivery_mode:delivery_mode238,5892
            uint8_t dest_mode:dest_mode239,5929
            uint8_t delivery_status:delivery_status240,5962
            uint8_t polarity:polarity241,6001
            uint8_t remote_irr:remote_irr242,6033
            uint8_t trig_mode:trig_mode243,6067
            uint8_t mask:mask244,6100
            uint8_t reserve:reserve245,6128
            uint8_t reserved[reserved247,6183
            uint8_t dest_id;248,6216
            uint8_t reserved[reserved250,6251
            uint16_t dest_id;251,6284
        } fields;253,6321
    } redirtbl[redirtbl254,6339
struct hvm_hw_lapic 264,6453
    uint64_t             apic_base_msr;265,6475
    uint32_t             disabled;266,6515
    uint32_t             timer_divisor;267,6575
    uint64_t             tdt_msr;268,6615
struct hvm_hw_lapic_regs 273,6708
    uint8_t data[data274,6735
struct hvm_hw_pci_irqs 284,6845
        unsigned long i[i290,6987
        uint64_t pad[pad291,7072
struct hvm_hw_isa_irqs 297,7168
        unsigned long i[i303,7331
        uint64_t pad[pad304,7389
struct hvm_hw_pci_link 310,7485
    uint8_t route[route317,7779
    uint8_t pad0[pad0318,7801
struct hvm_hw_pit 327,7904
    struct hvm_hw_pit_channel 328,7924
        uint32_t count;329,7956
        uint16_t latched_count;330,7999
        uint8_t count_latched;331,8031
        uint8_t status_latched;332,8062
        uint8_t status;333,8094
        uint8_t read_state;334,8118
        uint8_t write_state;335,8146
        uint8_t write_latch;336,8175
        uint8_t rw_mode;337,8204
        uint8_t mode;338,8229
        uint8_t bcd;339,8251
        uint8_t gate;340,8292
    } channels[channels341,8332
    uint32_t speaker_data_on;342,8371
    uint32_t pad0;343,8401
#define RTC_CMOS_SIZE 353,8494
struct hvm_hw_rtc 354,8519
    uint8_t cmos_data[cmos_data356,8560
    uint8_t cmos_index;358,8645
    uint8_t pad0;359,8669
#define HPET_TIMER_NUM 369,8760
struct hvm_hw_hpet 370,8821
    uint64_t capability;372,8894
    uint64_t res0;373,8945
    uint64_t config;374,8992
    uint64_t res1;375,9044
    uint64_t isr;376,9091
    uint64_t res2[res2377,9150
    uint64_t mc64;378,9197
    uint64_t res3;379,9248
        uint64_t config;381,9340
        uint64_t cmp;382,9396
        uint64_t fsb;383,9445
        uint64_t res4;384,9512
    } timers[timers385,9559
    uint64_t res5[res5386,9589
    uint64_t period[period389,9693
struct hvm_hw_pmtimer 399,9848
    uint32_t tmr_val;400,9872
    uint16_t pm1a_sts;401,9949
    uint16_t pm1a_en;402,10018
struct hvm_hw_mtrr 411,10171
#define MTRR_VCNT 412,10192
#define NUM_FIXED_MSR 413,10212
    uint64_t msr_pat_cr;414,10237
    uint64_t msr_mtrr_var[msr_mtrr_var416,10305
    uint64_t msr_mtrr_fixed[msr_mtrr_fixed417,10345
    uint64_t msr_mtrr_cap;418,10389
    uint64_t msr_mtrr_def_type;419,10416
struct hvm_viridian_context 428,10546
    uint64_t hypercall_gpa;429,10576
    uint64_t guest_os_id;430,10604
struct hvm_hw_cpu_xsave 440,10744
    uint64_t xfeature_mask;441,10770
    uint64_t xcr0;442,10798
    uint64_t xcr0_accum;443,10857
        struct { char x[x445,10929
        struct { char x[512]; } fpu_sse;445,10929
            uint64_t xstate_bv;448,10988
            uint64_t reserved[reserved449,11052
        } xsave_hdr;450,11086
        struct { char x[x452,11152
        struct { char x[0]; } ymm;452,11152
    } save_area;453,11200
#define CPU_XSAVE_CODE 456,11245
#define HVM_SAVE_CODE_MAX 461,11309

xen/include/public/arch-x86/cpuid.h,360
#define __XEN_PUBLIC_ARCH_X86_CPUID_H__31,1358
#define XEN_CPUID_FIRST_LEAF 34,1452
#define XEN_CPUID_LEAF(35,1492
#define XEN_CPUID_SIGNATURE_EBX 44,1787
#define XEN_CPUID_SIGNATURE_ECX 45,1843
#define XEN_CPUID_SIGNATURE_EDX 46,1899
#define _XEN_CPUID_FEAT1_MMU_PT_UPDATE_PRESERVE_AD 65,2460
#define XEN_CPUID_FEAT1_MMU_PT_UPDATE_PRESERVE_AD 66,2513

xen/include/public/xencomm.h,222
#define _XEN_XENCOMM_H_24,1139
#define XENCOMM_MAGIC 32,1433
#define XENCOMM_INVALID 33,1479
struct xencomm_desc 35,1511
    uint32_t magic;36,1533
    uint32_t nr_addrs;37,1553
    uint64_t address[address38,1617

xen/include/public/vcpu.h,2138
#define __XEN_PUBLIC_VCPU_H__28,1308
#define VCPUOP_initialise 47,1875
#define VCPUOP_up 53,2058
#define VCPUOP_down 69,2900
#define VCPUOP_is_up 72,2981
#define VCPUOP_get_runstate_info 78,3152
struct vcpu_runstate_info 79,3191
    int      state;81,3264
    uint64_t state_entry_time;83,3344
    uint64_t time[time88,3508
typedef struct vcpu_runstate_info vcpu_runstate_info_t;90,3533
#define RUNSTATE_running 94,3688
#define RUNSTATE_runnable 97,3790
#define RUNSTATE_blocked 100,3886
#define RUNSTATE_offline 108,4183
#define VCPUOP_register_runstate_memory_area 124,4943
struct vcpu_register_runstate_memory_area 125,4990
        XEN_GUEST_HANDLE(127,5046
typedef struct vcpu_register_runstate_memory_area vcpu_register_runstate_memory_area_t;132,5169
#define VCPUOP_set_periodic_timer 140,5504
#define VCPUOP_stop_periodic_timer 141,5582
struct vcpu_set_periodic_timer 142,5639
    uint64_t period_ns;143,5672
typedef struct vcpu_set_periodic_timer vcpu_set_periodic_timer_t;145,5699
#define VCPUOP_set_singleshot_timer 152,5945
#define VCPUOP_stop_singleshot_timer 153,6025
struct vcpu_set_singleshot_timer 154,6082
    uint64_t timeout_abs_ns;155,6117
    uint32_t flags;156,6197
typedef struct vcpu_set_singleshot_timer vcpu_set_singleshot_timer_t;158,6255
#define _VCPU_SSHOTTMR_future 163,6503
#define VCPU_SSHOTTMR_future 164,6537
#define VCPUOP_register_vcpu_info 175,6948
struct vcpu_register_vcpu_info 176,7027
    uint64_t mfn;177,7060
    uint32_t offset;178,7118
    uint32_t rsvd;179,7164
typedef struct vcpu_register_vcpu_info vcpu_register_vcpu_info_t;181,7201
#define VCPUOP_send_nmi 185,7381
#define VCPUOP_get_physid 193,7700
struct vcpu_get_physid 194,7770
    uint64_t phys_id;195,7795
typedef struct vcpu_get_physid vcpu_get_physid_t;197,7820
#define xen_vcpu_physid_to_x86_apicid(199,7914
#define xen_vcpu_physid_to_x86_acpiid(200,7981
#define VCPUOP_register_vcpu_time_memory_area 218,8879
struct vcpu_register_time_memory_area 220,8973
        XEN_GUEST_HANDLE(222,9025
typedef struct vcpu_register_time_memory_area vcpu_register_time_memory_area_t;227,9140

xen/include/public/sched.h,998
#define __XEN_PUBLIC_SCHED_H__28,1298
#define SCHEDOP_yield 51,2043
#define SCHEDOP_block 60,2366
#define SCHEDOP_shutdown 66,2531
struct sched_shutdown 67,2561
    unsigned int reason;68,2585
typedef struct sched_shutdown sched_shutdown_t;70,2630
#define SCHEDOP_poll 78,2889
struct sched_poll 79,2919
    XEN_GUEST_HANDLE(80,2939
typedef struct sched_poll sched_poll_t;84,3034
#define SCHEDOP_remote_shutdown 93,3396
struct sched_remote_shutdown 94,3437
    domid_t domain_id;95,3468
    unsigned int reason;96,3522
typedef struct sched_remote_shutdown sched_remote_shutdown_t;98,3582
#define SCHEDOP_shutdown_code 106,3851
#define SCHEDOP_watchdog 116,4256
struct sched_watchdog 117,4286
    uint32_t id;118,4310
    uint32_t timeout;119,4360
typedef struct sched_watchdog sched_watchdog_t;121,4409
#define SHUTDOWN_poweroff 129,4696
#define SHUTDOWN_reboot 130,4776
#define SHUTDOWN_suspend 131,4856
#define SHUTDOWN_crash 132,4936
#define SHUTDOWN_watchdog 133,5016

xen/include/public/xenoprof.h,2756
#define __XEN_PUBLIC_XENOPROF_H__30,1397
#define XENOPROF_init 37,1498
#define XENOPROF_reset_active_list 38,1537
#define XENOPROF_reset_passive_list 39,1576
#define XENOPROF_set_active 40,1615
#define XENOPROF_set_passive 41,1654
#define XENOPROF_reserve_counters 42,1693
#define XENOPROF_counter 43,1732
#define XENOPROF_setup_events 44,1771
#define XENOPROF_enable_virq 45,1810
#define XENOPROF_start 46,1849
#define XENOPROF_stop 47,1888
#define XENOPROF_disable_virq 48,1927
#define XENOPROF_release_counters 49,1966
#define XENOPROF_shutdown 50,2005
#define XENOPROF_get_buffer 51,2044
#define XENOPROF_set_backtrace 52,2083
#define XENOPROF_get_ibs_caps 55,2145
#define XENOPROF_ibs_counter 56,2184
#define XENOPROF_last_op 57,2223
#define MAX_OPROF_EVENTS 59,2263
#define MAX_OPROF_DOMAINS 60,2294
#define XENOPROF_CPU_TYPE_SIZE 61,2325
struct event_log 64,2411
    uint64_t eip;65,2430
    uint8_t mode;66,2448
    uint8_t event;67,2466
#define XENOPROF_ESCAPE_CODE 71,2534
#define XENOPROF_TRACE_BEGIN 73,2626
struct xenoprof_buf 76,2723
    uint32_t event_head;77,2745
    uint32_t event_tail;78,2770
    uint32_t event_size;79,2795
    uint32_t vcpu_id;80,2820
    uint64_t xen_samples;81,2842
    uint64_t kernel_samples;82,2868
    uint64_t user_samples;83,2897
    uint64_t lost_samples;84,2924
    struct event_log event_log[event_log85,2951
typedef struct xenoprof_buf xenoprof_buf_t;88,3005
struct xenoprof_init 92,3098
    int32_t  num_events;93,3121
    int32_t  is_primary;94,3146
    char cpu_type[cpu_type95,3171
typedef struct xenoprof_init xenoprof_init_t;97,3217
struct xenoprof_get_buffer 100,3306
    int32_t  max_samples;101,3335
    int32_t  nbuf;102,3361
    int32_t  bufsize;103,3380
    uint64_t buf_gmaddr;104,3402
typedef struct xenoprof_get_buffer xenoprof_get_buffer_t;106,3430
struct xenoprof_counter 109,3537
    uint32_t ind;110,3563
    uint64_t count;111,3581
    uint32_t enabled;112,3601
    uint32_t event;113,3623
    uint32_t hypervisor;114,3643
    uint32_t kernel;115,3668
    uint32_t user;116,3689
    uint64_t unit_mask;117,3708
typedef struct xenoprof_counter xenoprof_counter_t;119,3735
typedef struct xenoprof_passive 122,3833
    uint16_t domain_id;123,3867
    int32_t  max_samples;124,3891
    int32_t  nbuf;125,3917
    int32_t  bufsize;126,3936
    uint64_t buf_gmaddr;127,3958
} xenoprof_passive_t;128,3983
struct xenoprof_ibs_counter 131,4051
    uint64_t op_enabled;132,4081
    uint64_t fetch_enabled;133,4106
    uint64_t max_cnt_fetch;134,4134
    uint64_t max_cnt_op;135,4162
    uint64_t rand_en;136,4187
    uint64_t dispatched_ops;137,4209
typedef struct xenoprof_ibs_counter xenoprof_ibs_counter_t;139,4241

xen/include/public/mem_event.h,392
#define _XEN_PUBLIC_MEM_EVENT_H24,950
#define MEM_EVENT_FLAG_VCPU_PAUSED 30,1047
typedef struct mem_event_shared_page 32,1093
    uint32_t port;33,1132
} mem_event_shared_page_t;34,1151
typedef struct mem_event_st 36,1179
    uint64_t gfn;37,1209
    uint32_t p2mt;38,1227
    uint32_t vcpu_id;39,1246
    uint64_t flags;40,1268
} mem_event_request_t, mem_event_response_t;41,1288

xen/include/public/domctl.h,22736
#define __XEN_PUBLIC_DOMCTL_H__29,1352
#define XEN_DOMCTL_INTERFACE_VERSION 38,1560
struct xen_domctl_createdomain 45,1783
    uint32_t ssidref;47,1840
    xen_domain_handle_t handle;48,1862
#define _XEN_DOMCTL_CDF_hvm_guest 50,1950
#define XEN_DOMCTL_CDF_hvm_guest 51,1990
#define _XEN_DOMCTL_CDF_hap 53,2110
#define XEN_DOMCTL_CDF_hap 54,2150
#define _XEN_DOMCTL_CDF_s3_integrity 56,2283
#define XEN_DOMCTL_CDF_s3_integrity 57,2323
#define _XEN_DOMCTL_CDF_oos_off 59,2443
#define XEN_DOMCTL_CDF_oos_off 60,2483
    uint32_t flags;61,2551
typedef struct xen_domctl_createdomain xen_domctl_createdomain_t;63,2574
struct xen_domctl_getdomaininfo 67,2724
    domid_t  domain;69,2783
#define _XEN_DOMINF_dying 71,2887
#define XEN_DOMINF_dying 72,2919
#define _XEN_DOMINF_hvm_guest 74,3031
#define XEN_DOMINF_hvm_guest 75,3063
#define _XEN_DOMINF_shutdown 77,3156
#define XEN_DOMINF_shutdown 78,3188
#define _XEN_DOMINF_paused 80,3290
#define XEN_DOMINF_paused 81,3322
#define _XEN_DOMINF_blocked 83,3424
#define XEN_DOMINF_blocked 84,3456
#define _XEN_DOMINF_running 86,3559
#define XEN_DOMINF_running 87,3591
#define _XEN_DOMINF_debugged 89,3671
#define XEN_DOMINF_debugged 90,3703
#define XEN_DOMINF_shutdownmask 92,3809
#define XEN_DOMINF_shutdownshift 93,3845
    uint32_t flags;94,3881
    uint64_aligned_t tot_pages;95,3933
    uint64_aligned_t max_pages;96,3965
    uint64_aligned_t shr_pages;97,3997
    uint64_aligned_t shared_info_frame;98,4029
    uint64_aligned_t cpu_time;99,4102
    uint32_t nr_online_vcpus;100,4133
    uint32_t max_vcpu_id;101,4206
    uint32_t ssidref;102,4283
    xen_domain_handle_t handle;103,4305
    uint32_t cpupool;104,4337
typedef struct xen_domctl_getdomaininfo xen_domctl_getdomaininfo_t;106,4362
struct xen_domctl_getmemlist 111,4513
    uint64_aligned_t max_pfns;114,4617
    uint64_aligned_t start_pfn;116,4692
    XEN_GUEST_HANDLE_64(117,4724
typedef struct xen_domctl_getmemlist xen_domctl_getmemlist_t;121,4823
#define XEN_DOMCTL_PFINFO_LTAB_SHIFT 127,4972
#define XEN_DOMCTL_PFINFO_NOTAB 128,5012
#define XEN_DOMCTL_PFINFO_L1TAB 129,5057
#define XEN_DOMCTL_PFINFO_L2TAB 130,5102
#define XEN_DOMCTL_PFINFO_L3TAB 131,5147
#define XEN_DOMCTL_PFINFO_L4TAB 132,5192
#define XEN_DOMCTL_PFINFO_LTABTYPE_MASK 133,5237
#define XEN_DOMCTL_PFINFO_LPINTAB 134,5288
#define XEN_DOMCTL_PFINFO_XTAB 135,5333
#define XEN_DOMCTL_PFINFO_PAGEDTAB 136,5397
#define XEN_DOMCTL_PFINFO_LTAB_MASK 137,5443
struct xen_domctl_getpageframeinfo 139,5491
    uint64_aligned_t gmfn;141,5552
    uint32_t type;144,5664
typedef struct xen_domctl_getpageframeinfo xen_domctl_getpageframeinfo_t;146,5720
struct xen_domctl_getpageframeinfo2 151,5887
    uint64_aligned_t num;153,5949
    XEN_GUEST_HANDLE_64(155,6003
typedef struct xen_domctl_getpageframeinfo2 xen_domctl_getpageframeinfo2_t;157,6045
struct xen_domctl_getpageframeinfo3 161,6214
    uint64_aligned_t num;163,6276
    XEN_GUEST_HANDLE_64(165,6330
#define XEN_DOMCTL_SHADOW_OP_OFF 175,6478
#define XEN_DOMCTL_SHADOW_OP_ENABLE 178,6602
#define XEN_DOMCTL_SHADOW_OP_CLEAN 182,6747
#define XEN_DOMCTL_SHADOW_OP_PEEK 184,6849
#define XEN_DOMCTL_SHADOW_OP_GET_ALLOCATION 187,6929
#define XEN_DOMCTL_SHADOW_OP_SET_ALLOCATION 188,6978
#define XEN_DOMCTL_SHADOW_OP_ENABLE_TEST 192,7104
#define XEN_DOMCTL_SHADOW_OP_ENABLE_LOGDIRTY 194,7210
#define XEN_DOMCTL_SHADOW_OP_ENABLE_TRANSLATE 196,7337
#define XEN_DOMCTL_SHADOW_ENABLE_REFCOUNT 203,7565
#define XEN_DOMCTL_SHADOW_ENABLE_LOG_DIRTY 208,7744
#define XEN_DOMCTL_SHADOW_ENABLE_TRANSLATE 212,7850
#define XEN_DOMCTL_SHADOW_ENABLE_EXTERNAL 217,7998
struct xen_domctl_shadow_op_stats 219,8051
    uint32_t fault_count;220,8087
    uint32_t dirty_count;221,8113
typedef struct xen_domctl_shadow_op_stats xen_domctl_shadow_op_stats_t;223,8142
struct xen_domctl_shadow_op 226,8270
    uint32_t       op;228,8324
    uint32_t       mode;231,8403
    uint32_t       mb;234,8514
    XEN_GUEST_HANDLE_64(237,8610
typedef struct xen_domctl_shadow_op xen_domctl_shadow_op_t;241,8779
struct xen_domctl_max_mem 246,8915
    uint64_aligned_t max_memkb;248,8967
typedef struct xen_domctl_max_mem xen_domctl_max_mem_t;250,9002
struct xen_domctl_vcpucontext 256,9171
    uint32_t              vcpu;257,9203
    XEN_GUEST_HANDLE_64(258,9261
typedef struct xen_domctl_vcpucontext xen_domctl_vcpucontext_t;260,9329
struct xen_domctl_getvcpuinfo 265,9475
    uint32_t vcpu;267,9531
    uint8_t  online;269,9575
    uint8_t  blocked;270,9654
    uint8_t  running;271,9728
    uint64_aligned_t cpu_time;272,9804
    uint32_t cpu;273,9877
typedef struct xen_domctl_getvcpuinfo xen_domctl_getvcpuinfo_t;275,9942
struct xen_domctl_vcpuaffinity 282,10182
    uint32_t  vcpu;283,10215
    struct xenctl_cpumap cpumap;284,10257
typedef struct xen_domctl_vcpuaffinity xen_domctl_vcpuaffinity_t;286,10306
struct xen_domctl_max_vcpus 291,10453
    uint32_t max;292,10483
typedef struct xen_domctl_max_vcpus xen_domctl_max_vcpus_t;294,10544
#define XEN_SCHEDULER_SEDF 300,10708
#define XEN_SCHEDULER_CREDIT 301,10741
#define XEN_SCHEDULER_CREDIT2 302,10774
#define XEN_SCHEDULER_ARINC653 303,10807
#define XEN_DOMCTL_SCHEDOP_putinfo 305,10863
#define XEN_DOMCTL_SCHEDOP_getinfo 306,10900
struct xen_domctl_scheduler_op 307,10937
    uint32_t sched_id;308,10970
    uint32_t cmd;309,11016
        struct xen_domctl_sched_sedf 311,11079
            uint64_aligned_t period;312,11118
            uint64_aligned_t slice;313,11155
            uint64_aligned_t latency;314,11191
            uint32_t extratime;315,11229
            uint32_t weight;316,11261
        } sedf;317,11290
        struct xen_domctl_sched_credit 318,11306
            uint16_t weight;319,11347
            uint16_t cap;320,11376
        } credit;321,11402
        struct xen_domctl_sched_credit2 322,11420
            uint16_t weight;323,11462
        } credit2;324,11491
    } u;325,11510
typedef struct xen_domctl_scheduler_op xen_domctl_scheduler_op_t;327,11522
struct xen_domctl_setdomainhandle 332,11675
    xen_domain_handle_t handle;333,11711
typedef struct xen_domctl_setdomainhandle xen_domctl_setdomainhandle_t;335,11746
struct xen_domctl_setdebugging 340,11905
    uint8_t enable;341,11938
typedef struct xen_domctl_setdebugging xen_domctl_setdebugging_t;343,11961
struct xen_domctl_irq_permission 348,12113
    uint8_t pirq;349,12148
    uint8_t allow_access;350,12166
typedef struct xen_domctl_irq_permission xen_domctl_irq_permission_t;352,12249
struct xen_domctl_iomem_permission 357,12409
    uint64_aligned_t first_mfn;358,12446
    uint64_aligned_t nr_mfns;359,12526
    uint8_t  allow_access;360,12593
typedef struct xen_domctl_iomem_permission xen_domctl_iomem_permission_t;362,12673
struct xen_domctl_ioport_permission 367,12840
    uint32_t first_port;368,12878
    uint32_t nr_ports;369,12943
    uint8_t  allow_access;370,13006
typedef struct xen_domctl_ioport_permission xen_domctl_ioport_permission_t;372,13084
struct xen_domctl_hypercall_init 377,13251
    uint64_aligned_t  gmfn;378,13286
typedef struct xen_domctl_hypercall_init xen_domctl_hypercall_init_t;380,13356
#define _XEN_DOMAINSETUP_hvm_guest 385,13510
#define XEN_DOMAINSETUP_hvm_guest 386,13547
#define _XEN_DOMAINSETUP_query 387,13616
#define XEN_DOMAINSETUP_query 388,13682
#define _XEN_DOMAINSETUP_sioemu_guest 389,13743
#define XEN_DOMAINSETUP_sioemu_guest 390,13783
typedef struct xen_domctl_arch_setup 391,13858
    uint64_aligned_t flags;392,13897
    uint64_aligned_t bp;394,13966
    uint64_aligned_t maxmem;395,14027
    uint64_aligned_t xsi_va;396,14095
    uint32_t hypercall_imm;397,14169
    int8_t vhpt_size_log2;398,14235
} xen_domctl_arch_setup_t;400,14296
struct xen_domctl_settimeoffset 405,14406
    int32_t  time_offset_seconds;406,14440
typedef struct xen_domctl_settimeoffset xen_domctl_settimeoffset_t;408,14516
typedef struct xen_domctl_hvmcontext 413,14700
    uint32_t size;414,14739
    XEN_GUEST_HANDLE_64(415,14802
} xen_domctl_hvmcontext_t;418,15002
typedef struct xen_domctl_address_size 424,15149
    uint32_t size;425,15190
} xen_domctl_address_size_t;426,15209
struct xen_domctl_real_mode_area 431,15324
    uint32_t log;432,15359
typedef struct xen_domctl_real_mode_area xen_domctl_real_mode_area_t;434,15414
#define XEN_DOMCTL_SENDTRIGGER_NMI 439,15569
#define XEN_DOMCTL_SENDTRIGGER_RESET 440,15609
#define XEN_DOMCTL_SENDTRIGGER_INIT 441,15649
#define XEN_DOMCTL_SENDTRIGGER_POWER 442,15689
#define XEN_DOMCTL_SENDTRIGGER_SLEEP 443,15729
struct xen_domctl_sendtrigger 444,15769
    uint32_t  trigger;445,15801
    uint32_t  vcpu;446,15834
typedef struct xen_domctl_sendtrigger xen_domctl_sendtrigger_t;448,15870
struct xen_domctl_assign_device 456,16151
    uint32_t  machine_bdf;457,16185
typedef struct xen_domctl_assign_device xen_domctl_assign_device_t;459,16257
struct xen_domctl_get_device_group 464,16470
    uint32_t  machine_bdf;465,16507
    uint32_t  max_sdevs;466,16548
    uint32_t  num_sdevs;467,16589
    XEN_GUEST_HANDLE_64(468,16631
typedef struct xen_domctl_get_device_group xen_domctl_get_device_group_t;470,16691
typedef enum pt_irq_type_e 476,16941
    PT_IRQ_TYPE_PCI,477,16970
    PT_IRQ_TYPE_ISA,478,16991
    PT_IRQ_TYPE_MSI,479,17012
    PT_IRQ_TYPE_MSI_TRANSLATE,480,17033
} pt_irq_type_t;481,17064
struct xen_domctl_bind_pt_irq 482,17081
    uint32_t machine_irq;483,17113
    pt_irq_type_t irq_type;484,17139
    uint32_t hvm_domid;485,17167
            uint8_t isa_irq;489,17221
        } isa;490,17250
            uint8_t bus;492,17282
            uint8_t device;493,17307
            uint8_t intx;494,17335
        } pci;495,17361
            uint8_t gvec;497,17393
            uint32_t gflags;498,17419
            uint64_aligned_t gtable;499,17448
        } msi;500,17485
    } u;501,17500
typedef struct xen_domctl_bind_pt_irq xen_domctl_bind_pt_irq_t;503,17512
#define DPCI_ADD_MAPPING 509,17720
#define DPCI_REMOVE_MAPPING 510,17755
struct xen_domctl_memory_mapping 511,17790
    uint64_aligned_t first_gfn;512,17825
    uint64_aligned_t first_mfn;513,17905
    uint64_aligned_t nr_mfns;514,17978
    uint32_t add_mapping;515,18046
    uint32_t padding;516,18106
typedef struct xen_domctl_memory_mapping xen_domctl_memory_mapping_t;518,18184
struct xen_domctl_ioport_mapping 524,18399
    uint32_t first_gport;525,18434
    uint32_t first_mport;526,18489
    uint32_t nr_ports;527,18547
    uint32_t add_mapping;528,18602
typedef struct xen_domctl_ioport_mapping xen_domctl_ioport_mapping_t;530,18663
#define XEN_DOMCTL_MEM_CACHEATTR_UC 539,18959
#define XEN_DOMCTL_MEM_CACHEATTR_WC 540,18998
#define XEN_DOMCTL_MEM_CACHEATTR_WT 541,19037
#define XEN_DOMCTL_MEM_CACHEATTR_WP 542,19076
#define XEN_DOMCTL_MEM_CACHEATTR_WB 543,19115
#define XEN_DOMCTL_MEM_CACHEATTR_UCM 544,19154
struct xen_domctl_pin_mem_cacheattr 545,19193
    uint64_aligned_t start,546,19231
    uint64_aligned_t start, end;546,19231
    uint32_t type;547,19264
typedef struct xen_domctl_pin_mem_cacheattr xen_domctl_pin_mem_cacheattr_t;549,19319
struct xen_domctl_ext_vcpucontext 555,19528
    uint32_t         vcpu;557,19610
    uint32_t         size;562,19717
    uint64_aligned_t syscall32_callback_eip;566,19935
    uint64_aligned_t sysenter_callback_eip;567,19980
    uint16_t         syscall32_callback_cs;568,20024
    uint16_t         sysenter_callback_cs;569,20068
    uint8_t          syscall32_disables_events;570,20111
    uint8_t          sysenter_disables_events;571,20159
typedef struct xen_domctl_ext_vcpucontext xen_domctl_ext_vcpucontext_t;574,20216
struct xen_domctl_set_opt_feature 581,20425
    struct xen_ia64_opt_feature optf;583,20483
    uint64_t dummy;586,20594
typedef struct xen_domctl_set_opt_feature xen_domctl_set_opt_feature_t;589,20624
struct xen_domctl_set_target 596,20825
    domid_t target;597,20856
typedef struct xen_domctl_set_target xen_domctl_set_target_t;599,20879
# define XEN_CPUID_INPUT_UNUSED 603,21037
struct xen_domctl_cpuid 605,21108
  uint32_t input[input606,21134
  uint32_t eax;607,21155
  uint32_t ebx;608,21171
  uint32_t ecx;609,21187
  uint32_t edx;610,21203
typedef struct xen_domctl_cpuid xen_domctl_cpuid_t;612,21222
struct xen_domctl_subscribe 617,21354
    uint32_t port;618,21384
typedef struct xen_domctl_subscribe xen_domctl_subscribe_t;620,21415
#define XEN_DOMCTL_DEBUG_OP_SINGLE_STEP_OFF 636,21838
#define XEN_DOMCTL_DEBUG_OP_SINGLE_STEP_ON 637,21892
struct xen_domctl_debug_op 638,21946
    uint32_t op;639,21975
    uint32_t vcpu;640,22003
typedef struct xen_domctl_debug_op xen_domctl_debug_op_t;642,22034
typedef struct xen_domctl_hvmcontext_partial 649,22239
    uint32_t type;650,22286
    uint32_t instance;651,22360
    XEN_GUEST_HANDLE_64(652,22432
} xen_domctl_hvmcontext_partial_t;653,22511
typedef struct xen_domctl_disable_migrate 657,22638
    uint32_t disable;658,22682
} xen_domctl_disable_migrate_t;659,22747
struct xen_guest_tsc_info 664,22837
    uint32_t tsc_mode;665,22865
    uint32_t gtsc_khz;666,22888
    uint32_t incarnation;667,22911
    uint32_t pad;668,22937
    uint64_aligned_t elapsed_nsec;669,22955
typedef struct xen_guest_tsc_info xen_guest_tsc_info_t;671,22993
typedef struct xen_domctl_tsc_info 673,23096
    XEN_GUEST_HANDLE_64(674,23133
} xen_domctl_tsc_info_t;676,23239
struct xen_domctl_gdbsx_memio 679,23317
    uint64_aligned_t pgd3val;681,23362
    uint64_aligned_t gva;682,23428
    uint64_aligned_t uva;683,23485
    uint32_t         len;684,23548
    uint8_t          gwr;685,23613
    uint32_t         remain;687,23702
struct xen_domctl_gdbsx_pauseunp_vcpu 692,23838
    uint32_t         vcpu;693,23905
struct xen_domctl_gdbsx_domstatus 697,23994
    uint8_t          paused;699,24044
    uint32_t         vcpu_id;700,24104
    uint32_t         vcpu_ev;701,24165
#define XEN_DOMCTL_MEM_EVENT_OP_ENABLE 711,24331
#define XEN_DOMCTL_MEM_EVENT_OP_DISABLE 712,24376
#define XEN_DOMCTL_MEM_EVENT_OP_PAGING 717,24457
#define XEN_DOMCTL_MEM_EVENT_OP_PAGING_NOMINATE 720,24533
#define XEN_DOMCTL_MEM_EVENT_OP_PAGING_EVICT 721,24585
#define XEN_DOMCTL_MEM_EVENT_OP_PAGING_PREP 722,24637
#define XEN_DOMCTL_MEM_EVENT_OP_PAGING_RESUME 723,24689
struct xen_domctl_mem_event_op 725,24742
    uint32_t       op;726,24775
    uint32_t       mode;727,24840
    uint64_aligned_t shared_addr;730,24930
    uint64_aligned_t ring_addr;731,25007
    uint64_aligned_t gfn;734,25103
typedef struct xen_domctl_mem_event_op xen_domctl_mem_event_op_t;736,25182
#define XEN_DOMCTL_MEM_SHARING_OP_CONTROL 744,25370
#define XEN_DOMCTL_MEM_SHARING_OP_NOMINATE_GFN 745,25421
#define XEN_DOMCTL_MEM_SHARING_OP_NOMINATE_GREF 746,25472
#define XEN_DOMCTL_MEM_SHARING_OP_SHARE 747,25523
#define XEN_DOMCTL_MEM_SHARING_OP_RESUME 748,25574
#define XEN_DOMCTL_MEM_SHARING_OP_DEBUG_GFN 749,25625
#define XEN_DOMCTL_MEM_SHARING_OP_DEBUG_MFN 750,25676
#define XEN_DOMCTL_MEM_SHARING_OP_DEBUG_GREF 751,25727
#define XEN_DOMCTL_MEM_SHARING_S_HANDLE_INVALID 753,25779
#define XEN_DOMCTL_MEM_SHARING_C_HANDLE_INVALID 754,25834
struct xen_domctl_mem_sharing_op 756,25889
    uint8_t op;757,25924
        uint8_t enable;760,25985
        struct mem_sharing_op_nominate 762,26060
                uint64_aligned_t gfn;764,26154
                uint32_t      grant_ref;765,26228
            } u;766,26302
            uint64_aligned_t  handle;767,26319
        } nominate;768,26393
        struct mem_sharing_op_share 769,26413
            uint64_aligned_t source_handle;770,26470
            uint64_aligned_t client_handle;771,26550
        } share;772,26630
        struct mem_sharing_op_debug 773,26648
                uint64_aligned_t gfn;775,26729
                uint64_aligned_t mfn;776,26804
                grant_ref_t    gref;777,26879
            } u;778,26954
        } debug;779,26971
    } u;780,26988
typedef struct xen_domctl_mem_sharing_op xen_domctl_mem_sharing_op_t;782,27000
struct xen_domctl_vcpuextstate 788,27236
    uint32_t         vcpu;790,27315
    uint64_aligned_t         xfeature_mask;798,27629
    uint64_aligned_t         size;803,27756
    XEN_GUEST_HANDLE_64(804,27791
typedef struct xen_domctl_vcpuextstate xen_domctl_vcpuextstate_t;806,27834
struct xen_domctl 810,27960
    uint32_t cmd;811,27980
#define XEN_DOMCTL_createdomain 812,27998
#define XEN_DOMCTL_destroydomain 813,28050
#define XEN_DOMCTL_pausedomain 814,28102
#define XEN_DOMCTL_unpausedomain 815,28154
#define XEN_DOMCTL_getdomaininfo 816,28206
#define XEN_DOMCTL_getmemlist 817,28258
#define XEN_DOMCTL_getpageframeinfo 818,28310
#define XEN_DOMCTL_getpageframeinfo2 819,28362
#define XEN_DOMCTL_setvcpuaffinity 820,28414
#define XEN_DOMCTL_shadow_op 821,28466
#define XEN_DOMCTL_max_mem 822,28518
#define XEN_DOMCTL_setvcpucontext 823,28570
#define XEN_DOMCTL_getvcpucontext 824,28622
#define XEN_DOMCTL_getvcpuinfo 825,28674
#define XEN_DOMCTL_max_vcpus 826,28726
#define XEN_DOMCTL_scheduler_op 827,28778
#define XEN_DOMCTL_setdomainhandle 828,28830
#define XEN_DOMCTL_setdebugging 829,28882
#define XEN_DOMCTL_irq_permission 830,28934
#define XEN_DOMCTL_iomem_permission 831,28986
#define XEN_DOMCTL_ioport_permission 832,29038
#define XEN_DOMCTL_hypercall_init 833,29090
#define XEN_DOMCTL_arch_setup 834,29142
#define XEN_DOMCTL_settimeoffset 835,29194
#define XEN_DOMCTL_getvcpuaffinity 836,29246
#define XEN_DOMCTL_real_mode_area 837,29298
#define XEN_DOMCTL_resumedomain 838,29350
#define XEN_DOMCTL_sendtrigger 839,29402
#define XEN_DOMCTL_subscribe 840,29454
#define XEN_DOMCTL_gethvmcontext 841,29506
#define XEN_DOMCTL_sethvmcontext 842,29558
#define XEN_DOMCTL_set_address_size 843,29610
#define XEN_DOMCTL_get_address_size 844,29662
#define XEN_DOMCTL_assign_device 845,29714
#define XEN_DOMCTL_bind_pt_irq 846,29766
#define XEN_DOMCTL_memory_mapping 847,29818
#define XEN_DOMCTL_ioport_mapping 848,29870
#define XEN_DOMCTL_pin_mem_cacheattr 849,29922
#define XEN_DOMCTL_set_ext_vcpucontext 850,29974
#define XEN_DOMCTL_get_ext_vcpucontext 851,30026
#define XEN_DOMCTL_set_opt_feature 852,30078
#define XEN_DOMCTL_test_assign_device 853,30130
#define XEN_DOMCTL_set_target 854,30182
#define XEN_DOMCTL_deassign_device 855,30234
#define XEN_DOMCTL_unbind_pt_irq 856,30286
#define XEN_DOMCTL_set_cpuid 857,30338
#define XEN_DOMCTL_get_device_group 858,30390
#define XEN_DOMCTL_set_machine_address_size 859,30442
#define XEN_DOMCTL_get_machine_address_size 860,30494
#define XEN_DOMCTL_suppress_spurious_page_faults 861,30546
#define XEN_DOMCTL_debug_op 862,30598
#define XEN_DOMCTL_gethvmcontext_partial 863,30650
#define XEN_DOMCTL_mem_event_op 864,30702
#define XEN_DOMCTL_mem_sharing_op 865,30754
#define XEN_DOMCTL_disable_migrate 866,30806
#define XEN_DOMCTL_gettscinfo 867,30858
#define XEN_DOMCTL_settscinfo 868,30910
#define XEN_DOMCTL_getpageframeinfo3 869,30962
#define XEN_DOMCTL_setvcpuextstate 870,31014
#define XEN_DOMCTL_getvcpuextstate 871,31066
#define XEN_DOMCTL_gdbsx_guestmemio 872,31118
#define XEN_DOMCTL_gdbsx_pausevcpu 873,31170
#define XEN_DOMCTL_gdbsx_unpausevcpu 874,31222
#define XEN_DOMCTL_gdbsx_domstatus 875,31274
    uint32_t interface_version;876,31326
    domid_t  domain;877,31393
        struct xen_domctl_createdomain      createdomain;879,31426
        struct xen_domctl_getdomaininfo     getdomaininfo;880,31484
        struct xen_domctl_getmemlist        getmemlist;881,31543
        struct xen_domctl_getpageframeinfo  getpageframeinfo;882,31599
        struct xen_domctl_getpageframeinfo2 getpageframeinfo2;883,31661
        struct xen_domctl_getpageframeinfo3 getpageframeinfo3;884,31724
        struct xen_domctl_vcpuaffinity      vcpuaffinity;885,31787
        struct xen_domctl_shadow_op         shadow_op;886,31845
        struct xen_domctl_max_mem           max_mem;887,31900
        struct xen_domctl_vcpucontext       vcpucontext;888,31953
        struct xen_domctl_getvcpuinfo       getvcpuinfo;889,32010
        struct xen_domctl_max_vcpus         max_vcpus;890,32067
        struct xen_domctl_scheduler_op      scheduler_op;891,32122
        struct xen_domctl_setdomainhandle   setdomainhandle;892,32180
        struct xen_domctl_setdebugging      setdebugging;893,32241
        struct xen_domctl_irq_permission    irq_permission;894,32299
        struct xen_domctl_iomem_permission  iomem_permission;895,32359
        struct xen_domctl_ioport_permission ioport_permission;896,32421
        struct xen_domctl_hypercall_init    hypercall_init;897,32484
        struct xen_domctl_arch_setup        arch_setup;898,32544
        struct xen_domctl_settimeoffset     settimeoffset;899,32600
        struct xen_domctl_disable_migrate   disable_migrate;900,32659
        struct xen_domctl_tsc_info          tsc_info;901,32720
        struct xen_domctl_real_mode_area    real_mode_area;902,32774
        struct xen_domctl_hvmcontext        hvmcontext;903,32834
        struct xen_domctl_hvmcontext_partial hvmcontext_partial;904,32890
        struct xen_domctl_address_size      address_size;905,32955
        struct xen_domctl_sendtrigger       sendtrigger;906,33013
        struct xen_domctl_get_device_group  get_device_group;907,33070
        struct xen_domctl_assign_device     assign_device;908,33132
        struct xen_domctl_bind_pt_irq       bind_pt_irq;909,33191
        struct xen_domctl_memory_mapping    memory_mapping;910,33248
        struct xen_domctl_ioport_mapping    ioport_mapping;911,33308
        struct xen_domctl_pin_mem_cacheattr pin_mem_cacheattr;912,33368
        struct xen_domctl_ext_vcpucontext   ext_vcpucontext;913,33431
        struct xen_domctl_set_opt_feature   set_opt_feature;914,33492
        struct xen_domctl_set_target        set_target;915,33553
        struct xen_domctl_subscribe         subscribe;916,33609
        struct xen_domctl_debug_op          debug_op;917,33664
        struct xen_domctl_mem_event_op      mem_event_op;918,33718
        struct xen_domctl_mem_sharing_op    mem_sharing_op;919,33776
        struct xen_domctl_cpuid             cpuid;921,33881
        struct xen_domctl_vcpuextstate      vcpuextstate;922,33932
        struct xen_domctl_gdbsx_memio       gdbsx_guest_memio;924,33997
        struct xen_domctl_gdbsx_pauseunp_vcpu gdbsx_pauseunp_vcpu;925,34060
        struct xen_domctl_gdbsx_domstatus   gdbsx_domstatus;926,34127
        uint8_t                             pad[pad927,34188
    } u;928,34242
typedef struct xen_domctl xen_domctl_t;930,34254

xen/include/public/platform.h,8049
#define __XEN_PUBLIC_PLATFORM_H__28,1323
#define XENPF_INTERFACE_VERSION 32,1376
#define XENPF_settime 38,1562
struct xenpf_settime 39,1599
    uint32_t secs;41,1646
    uint32_t nsecs;42,1665
    uint64_t system_time;43,1685
typedef struct xenpf_settime xenpf_settime_t;45,1714
#define XENPF_add_memtype 55,2109
struct xenpf_add_memtype 56,2146
    xen_pfn_t mfn;58,2197
    uint64_t nr_mfns;59,2216
    uint32_t type;60,2238
    uint32_t handle;62,2282
    uint32_t reg;63,2303
typedef struct xenpf_add_memtype xenpf_add_memtype_t;65,2324
#define XENPF_del_memtype 75,2749
struct xenpf_del_memtype 76,2786
    uint32_t handle;78,2837
    uint32_t reg;79,2858
typedef struct xenpf_del_memtype xenpf_del_memtype_t;81,2879
#define XENPF_read_memtype 85,3031
struct xenpf_read_memtype 86,3068
    uint32_t reg;88,3120
    xen_pfn_t mfn;90,3163
    uint64_t nr_mfns;91,3182
    uint32_t type;92,3204
typedef struct xenpf_read_memtype xenpf_read_memtype_t;94,3226
#define XENPF_microcode_update 97,3330
struct xenpf_microcode_update 98,3367
    XEN_GUEST_HANDLE(100,3423
typedef struct xenpf_microcode_update xenpf_microcode_update_t;103,3566
#define XENPF_platform_quirk 106,3682
#define QUIRK_NOIRQBALANCING 107,3719
#define QUIRK_IOAPIC_BAD_REGSEL 108,3797
#define QUIRK_IOAPIC_GOOD_REGSEL 109,3875
struct xenpf_platform_quirk 110,3953
    uint32_t quirk_id;112,4007
typedef struct xenpf_platform_quirk xenpf_platform_quirk_t;114,4033
#define XENPF_firmware_info 117,4143
#define XEN_FW_DISK_INFO 118,4180
#define XEN_FW_DISK_MBR_SIGNATURE 119,4246
#define XEN_FW_VBEDDC_INFO 120,4310
struct xenpf_firmware_info 121,4372
    uint32_t type;123,4425
    uint32_t index;124,4444
            uint8_t device;129,4575
            uint8_t version;130,4651
            uint16_t interface_support;131,4727
            uint16_t legacy_max_cylinder;133,4864
            uint8_t legacy_max_head;134,4940
            uint8_t legacy_sectors_per_track;135,5016
            XEN_GUEST_HANDLE(138,5252
            uint8_t device;141,5360
            uint32_t mbr_signature;142,5432
        } disk_mbr_signature;143,5504
            uint8_t capabilities;146,5632
            uint8_t edid_transfer_time;147,5666
            XEN_GUEST_HANDLE(149,5754
typedef struct xenpf_firmware_info xenpf_firmware_info_t;153,5856
#define XENPF_enter_acpi_sleep 156,5963
struct xenpf_enter_acpi_sleep 157,6000
    uint16_t pm1a_cnt_val;159,6055
    uint16_t pm1b_cnt_val;160,6113
    uint32_t sleep_state;161,6171
    uint32_t flags;162,6236
typedef struct xenpf_enter_acpi_sleep xenpf_enter_acpi_sleep_t;164,6291
#define XENPF_change_freq 167,6407
struct xenpf_change_freq 168,6444
    uint32_t flags;170,6494
    uint32_t cpu;171,6534
    uint64_t freq;172,6574
typedef struct xenpf_change_freq xenpf_change_freq_t;174,6623
#define XENPF_getidletime 185,7128
struct xenpf_getidletime 186,7165
    XEN_GUEST_HANDLE(189,7290
typedef struct xenpf_getidletime xenpf_getidletime_t;199,7624
#define XENPF_set_processor_pminfo 202,7725
#define XEN_PROCESSOR_PM_CX	205,7788
#define XEN_PROCESSOR_PM_PX	206,7818
#define XEN_PROCESSOR_PM_TX	207,7848
#define XEN_PM_CX 210,7894
#define XEN_PM_PX 211,7916
#define XEN_PM_TX 212,7938
#define XEN_PX_PCT 215,7984
#define XEN_PX_PSS 216,8007
#define XEN_PX_PPC 217,8030
#define XEN_PX_PSD 218,8053
struct xen_power_register 220,8077
    uint32_t     space_id;221,8105
    uint32_t     bit_width;222,8132
    uint32_t     bit_offset;223,8160
    uint32_t     access_size;224,8189
    uint64_t     address;225,8219
struct xen_processor_csd 228,8249
    uint32_t    domain;229,8276
    uint32_t    coord_type;230,8348
    uint32_t    num;231,8401
typedef struct xen_processor_csd xen_processor_csd_t;233,8475
struct xen_processor_cx 236,8576
    struct xen_power_register  reg;237,8602
    uint8_t     type;238,8672
    uint32_t    latency;239,8736
    uint32_t    power;240,8813
    uint32_t    dpcnt;241,8875
    XEN_GUEST_HANDLE(242,8936
typedef struct xen_processor_cx xen_processor_cx_t;244,9013
struct xen_processor_flags 247,9111
    uint32_t bm_control:bm_control248,9140
    uint32_t bm_check:bm_check249,9167
    uint32_t has_cst:has_cst250,9192
    uint32_t power_setup_done:power_setup_done251,9216
    uint32_t bm_rld_set:bm_rld_set252,9249
struct xen_processor_power 255,9280
    uint32_t count;256,9309
    struct xen_processor_flags flags;257,9377
    XEN_GUEST_HANDLE(258,9453
struct xen_pct_register 261,9531
    uint8_t  descriptor;262,9557
    uint16_t length;263,9582
    uint8_t  space_id;264,9603
    uint8_t  bit_width;265,9626
    uint8_t  bit_offset;266,9650
    uint8_t  reserved;267,9675
    uint64_t address;268,9698
struct xen_processor_px 271,9724
    uint64_t core_frequency;272,9750
    uint64_t power;273,9795
    uint64_t transition_latency;274,9837
    uint64_t bus_master_latency;275,9889
    uint64_t control;276,9941
    uint64_t status;277,9990
typedef struct xen_processor_px xen_processor_px_t;279,10042
struct xen_psd_package 282,10140
    uint64_t num_entries;283,10165
    uint64_t revision;284,10191
    uint64_t domain;285,10214
    uint64_t coord_type;286,10235
    uint64_t num_processors;287,10260
struct xen_processor_performance 290,10293
    uint32_t flags;291,10328
    uint32_t platform_limit;292,10384
    struct xen_pct_register control_register;293,10454
    struct xen_pct_register status_register;294,10500
    uint32_t state_count;295,10545
    XEN_GUEST_HANDLE(296,10616
typedef struct xen_processor_performance xen_processor_performance_t;300,10780
struct xenpf_set_processor_pminfo 303,10905
    uint32_t id;305,10964
    uint32_t type;306,11002
        struct xen_processor_power          power;308,11063
        struct xen_processor_performance    perf;309,11133
    } u;310,11213
typedef struct xenpf_set_processor_pminfo xenpf_set_processor_pminfo_t;312,11225
#define XENPF_get_cpuinfo 315,11353
struct xenpf_pcpuinfo 316,11382
    uint32_t xen_cpuid;318,11419
    uint32_t max_present;321,11501
#define XEN_PCPU_FLAGS_ONLINE 322,11527
#define XEN_PCPU_FLAGS_INVALID 324,11608
    uint32_t flags;325,11642
    uint32_t apic_id;326,11662
    uint32_t acpi_id;327,11684
typedef struct xenpf_pcpuinfo xenpf_pcpuinfo_t;329,11709
#define XENPF_cpu_online 332,11801
#define XENPF_cpu_offline 333,11832
struct xenpf_cpu_ol334,11863
    uint32_t cpuid;336,11885
typedef struct xenpf_cpu_ol xenpf_cpu_ol_t;338,11908
#define XENPF_cpu_hotadd 341,11994
struct xenpf_cpu_hotadd342,12025
	uint32_t apic_id;344,12051
	uint32_t acpi_id;345,12070
	uint32_t pxm;346,12089
#define XENPF_mem_hotadd 349,12108
struct xenpf_mem_hotadd350,12139
    uint64_t spfn;352,12165
    uint64_t epfn;353,12184
    uint32_t pxm;354,12203
    uint32_t flags;355,12221
struct xen_platform_op 358,12245
    uint32_t cmd;359,12270
    uint32_t interface_version;360,12288
        struct xenpf_settime           settime;362,12362
        struct xenpf_add_memtype       add_memtype;363,12410
        struct xenpf_del_memtype       del_memtype;364,12462
        struct xenpf_read_memtype      read_memtype;365,12514
        struct xenpf_microcode_update  microcode;366,12567
        struct xenpf_platform_quirk    platform_quirk;367,12617
        struct xenpf_firmware_info     firmware_info;368,12672
        struct xenpf_enter_acpi_sleep  enter_acpi_sleep;369,12726
        struct xenpf_change_freq       change_freq;370,12783
        struct xenpf_getidletime       getidletime;371,12835
        struct xenpf_set_processor_pminfo set_pminfo;372,12887
        struct xenpf_pcpuinfo          pcpu_info;373,12941
        struct xenpf_cpu_ol            cpu_ol;374,12991
        struct xenpf_cpu_hotadd        cpu_add;375,13038
        struct xenpf_mem_hotadd        mem_add;376,13086
        uint8_t                        pad[pad377,13134
    } u;378,13183
typedef struct xen_platform_op xen_platform_op_t;380,13195

xen/include/public/xsm/acm.h,3468
#define _XEN_PUBLIC_ACM_H27,1278
#define ACM_DEFAULT_SSID 32,1377
#define ACM_DEFAULT_LOCAL_SSID 33,1407
#define ACM_OK 36,1475
#define ACM_UNDEF 37,1496
#define ACM_INIT_SSID_ERROR 38,1519
#define ACM_INIT_SOID_ERROR 39,1551
#define ACM_ERROR 40,1583
#define ACM_ACCESS_PERMITTED 43,1646
#define ACM_ACCESS_DENIED 44,1684
#define ACM_NULL_POINTER_ERROR 45,1725
#define ACM_EVTCHN_SHARING_VIOLATION 53,2004
#define ACM_GNTTAB_SHARING_VIOLATION 54,2053
#define ACM_DOMAIN_LOOKUP 55,2102
#define ACM_CHWALL_CONFLICT 56,2151
#define ACM_SSIDREF_IN_USE 57,2200
#define ACM_NULL_POLICY 61,2288
#define ACM_CHINESE_WALL_POLICY 62,2314
#define ACM_SIMPLE_TYPE_ENFORCEMENT_POLICY 63,2348
#define ACM_POLICY_UNDEFINED 64,2393
#define ACM_CHINESE_WALL_AND_SIMPLE_TYPE_ENFORCEMENT_POLICY 67,2492
#define ACM_POLICY_NAME(71,2643
#define ACM_POLICY_VERSION 82,3155
#define ACM_CHWALL_VERSION 83,3184
#define ACM_STE_VERSION 84,3213
typedef uint32_t ssidref_t;87,3284
#define ACMHOOK_none 90,3351
#define ACMHOOK_sharing 91,3383
#define ACMHOOK_authorization 92,3415
#define ACMHOOK_conflictset 93,3447
typedef uint16_t domaintype_t;98,3602
#define ACM_MAGIC 120,4400
#define ACM_SHA1_HASH_SIZE 124,4530
struct acm_policy_version130,4692
    uint32_t major;132,4720
    uint32_t minor;133,4740
struct acm_policy_buffer 145,5102
    uint32_t magic;146,5129
    uint32_t policy_version;147,5149
    uint32_t len;148,5203
    uint32_t policy_reference_offset;149,5221
    uint32_t primary_policy_code;150,5259
    uint32_t primary_buffer_offset;151,5293
    uint32_t secondary_policy_code;152,5329
    uint32_t secondary_buffer_offset;153,5365
    struct acm_policy_version xml_pol_version;154,5403
    uint8_t xml_policy_hash[xml_policy_hash155,5466
struct acm_policy_reference_buffer 159,5538
    uint32_t len;160,5575
struct acm_chwall_policy_buffer 163,5597
    uint32_t policy_version;164,5631
    uint32_t policy_code;165,5685
    uint32_t chwall_max_types;166,5711
    uint32_t chwall_max_ssidrefs;167,5742
    uint32_t chwall_max_conflictsets;168,5776
    uint32_t chwall_ssid_offset;169,5814
    uint32_t chwall_conflict_sets_offset;170,5847
    uint32_t chwall_running_types_offset;171,5889
    uint32_t chwall_conflict_aggregate_offset;172,5931
struct acm_ste_policy_buffer 175,5982
    uint32_t policy_version;176,6013
    uint32_t policy_code;177,6064
    uint32_t ste_max_types;178,6090
    uint32_t ste_max_ssidrefs;179,6118
    uint32_t ste_ssid_offset;180,6149
struct acm_stats_buffer 183,6183
    uint32_t magic;184,6209
    uint32_t len;185,6229
    uint32_t primary_policy_code;186,6247
    uint32_t primary_stats_offset;187,6281
    uint32_t secondary_policy_code;188,6316
    uint32_t secondary_stats_offset;189,6352
struct acm_ste_stats_buffer 192,6393
    uint32_t ec_eval_count;193,6423
    uint32_t gt_eval_count;194,6451
    uint32_t ec_denied_count;195,6479
    uint32_t gt_denied_count;196,6509
    uint32_t ec_cachehit_count;197,6539
    uint32_t gt_cachehit_count;198,6571
struct acm_ssid_buffer 201,6607
    uint32_t len;202,6632
    ssidref_t ssidref;203,6650
    uint32_t policy_reference_offset;204,6673
    uint32_t primary_policy_code;205,6711
    uint32_t primary_max_types;206,6745
    uint32_t primary_types_offset;207,6777
    uint32_t secondary_policy_code;208,6812
    uint32_t secondary_max_types;209,6848
    uint32_t secondary_types_offset;210,6882

xen/include/public/xsm/flask_op.h,918
#define __FLASK_OP_H__12,352
#define FLASK_LOAD 14,376
#define FLASK_GETENFORCE 15,410
#define FLASK_SETENFORCE 16,444
#define FLASK_CONTEXT_TO_SID 17,478
#define FLASK_SID_TO_CONTEXT 18,512
#define FLASK_ACCESS 19,546
#define FLASK_CREATE 20,580
#define FLASK_RELABEL 21,614
#define FLASK_USER 22,648
#define FLASK_POLICYVERS 23,682
#define FLASK_GETBOOL 24,717
#define FLASK_SETBOOL 25,752
#define FLASK_COMMITBOOLS 26,787
#define FLASK_MLS 27,822
#define FLASK_DISABLE 28,857
#define FLASK_GETAVC_THRESHOLD 29,892
#define FLASK_SETAVC_THRESHOLD 30,927
#define FLASK_AVC_HASHSTATS 31,962
#define FLASK_AVC_CACHESTATS 32,997
#define FLASK_MEMBER 33,1032
#define FLASK_ADD_OCONTEXT 34,1067
#define FLASK_DEL_OCONTEXT 35,1102
#define FLASK_LAST 37,1138
typedef struct flask_op 39,1190
    uint32_t  cmd;40,1216
    uint32_t  size;41,1235
    char      *buf;buf42,1255
} flask_op_t;43,1275

xen/include/public/xsm/acm_ops.h,1809
#define __XEN_PUBLIC_ACM_OPS_H__27,1292
#define ACM_INTERFACE_VERSION 37,1594
#define ACMOP_setpolicy 49,1915
struct acm_setpolicy 50,1949
    XEN_GUEST_HANDLE_64(52,1985
#define ACMOP_getpolicy 57,2060
struct acm_getpolicy 58,2094
    XEN_GUEST_HANDLE_64(60,2130
#define ACMOP_dumpstats 65,2205
struct acm_dumpstats 66,2239
    XEN_GUEST_HANDLE_64(68,2275
#define ACMOP_getssid 73,2350
#define ACM_GETBY_ssidref 74,2384
#define ACM_GETBY_domainid 75,2413
struct acm_getssid 76,2442
    uint32_t get_ssid_by;78,2476
        domaintype_t domainid;80,2532
        ssidref_t    ssidref;81,2563
    } id;82,2593
    XEN_GUEST_HANDLE_64(83,2603
#define ACMOP_getdecision 87,2673
struct acm_getdecision 88,2706
    uint32_t get_decision_by1;90,2744
    uint32_t get_decision_by2;91,2793
        domaintype_t domainid;93,2854
        ssidref_t    ssidref;94,2885
    } id1;95,2915
        domaintype_t domainid;97,2938
        ssidref_t    ssidref;98,2969
    } id2;99,2999
    uint32_t hook;100,3010
    uint32_t acm_decision;102,3043
#define ACMOP_chgpolicy 106,3075
struct acm_change_policy 107,3108
    XEN_GUEST_HANDLE_64(109,3148
#define ACMOP_relabeldoms 121,3489
struct acm_relabel_doms 122,3523
    XEN_GUEST_HANDLE_64(124,3562
struct xen_acmctl 132,3753
    uint32_t cmd;133,3773
    uint32_t interface_version;134,3791
        struct acm_setpolicy     setpolicy;136,3835
        struct acm_getpolicy     getpolicy;137,3879
        struct acm_dumpstats     dumpstats;138,3923
        struct acm_getssid       getssid;139,3967
        struct acm_getdecision   getdecision;140,4009
        struct acm_change_policy change_policy;141,4055
        struct acm_relabel_doms  relabel_doms;142,4103
    } u;143,4150
typedef struct xen_acmctl xen_acmctl_t;146,4163

xen/include/public/physdev.h,4276
#define __XEN_PUBLIC_PHYSDEV_H__22,1113
#define PHYSDEVOP_eoi 37,1467
struct physdev_eoi 38,1510
    uint32_t irq;40,1544
typedef struct physdev_eoi physdev_eoi_t;42,1565
#define PHYSDEVOP_pirq_eoi_gmfn 52,1991
struct physdev_pirq_eoi_gmfn 53,2034
    xen_pfn_t gmfn;55,2078
typedef struct physdev_pirq_eoi_gmfn physdev_pirq_eoi_gmfn_t;57,2101
#define PHYSDEVOP_irq_status_query 64,2315
struct physdev_irq_status_query 65,2358
    uint32_t irq;67,2405
    uint32_t flags;69,2437
typedef struct physdev_irq_status_query physdev_irq_status_query_t;71,2479
#define _XENIRQSTAT_needs_eoi 75,2666
#define  XENIRQSTAT_needs_eoi 76,2702
#define _XENIRQSTAT_shared 79,2800
#define  XENIRQSTAT_shared 80,2836
#define PHYSDEVOP_set_iopl 86,2998
struct physdev_set_iopl 87,3041
    uint32_t iopl;89,3080
typedef struct physdev_set_iopl physdev_set_iopl_t;91,3102
#define PHYSDEVOP_set_iobitmap 98,3316
struct physdev_set_iobitmap 99,3359
    XEN_GUEST_HANDLE(102,3446
typedef struct physdev_set_iobitmap physdev_set_iobitmap_t;108,3542
#define PHYSDEVOP_apic_read 115,3743
#define PHYSDEVOP_apic_write 116,3786
struct physdev_apic 117,3829
    unsigned long apic_physbase;119,3864
    uint32_t reg;120,3897
    uint32_t value;122,3935
typedef struct physdev_apic physdev_apic_t;124,3958
#define PHYSDEVOP_alloc_irq_vector 131,4169
#define PHYSDEVOP_free_irq_vector 132,4212
struct physdev_irq 133,4255
    uint32_t irq;135,4289
    uint32_t vector;137,4327
typedef struct physdev_irq physdev_irq_t;139,4351
#define MAP_PIRQ_TYPE_MSI 142,4435
#define MAP_PIRQ_TYPE_GSI 143,4479
#define MAP_PIRQ_TYPE_UNKNOWN 144,4523
#define PHYSDEVOP_map_pirq 146,4568
struct physdev_map_pirq 147,4612
    domid_t domid;148,4638
    int type;150,4670
    int index;152,4697
    int pirq;154,4732
    int bus;156,4759
    int devfn;158,4785
    int entry_nr;160,4813
    uint64_t table_base;162,4844
typedef struct physdev_map_pirq physdev_map_pirq_t;164,4872
#define PHYSDEVOP_unmap_pirq 167,4970
struct physdev_unmap_pirq 168,5014
    domid_t domid;169,5042
    int pirq;171,5074
typedef struct physdev_unmap_pirq physdev_unmap_pirq_t;174,5092
#define PHYSDEVOP_manage_pci_add 177,5196
#define PHYSDEVOP_manage_pci_remove 178,5240
struct physdev_manage_pci 179,5284
    uint8_t bus;181,5325
    uint8_t devfn;182,5342
typedef struct physdev_manage_pci physdev_manage_pci_t;185,5366
#define PHYSDEVOP_restore_msi 188,5470
struct physdev_restore_msi 189,5514
    uint8_t bus;191,5556
    uint8_t devfn;192,5573
typedef struct physdev_restore_msi physdev_restore_msi_t;194,5595
#define PHYSDEVOP_manage_pci_add_ext 197,5702
struct physdev_manage_pci_ext 198,5746
    uint8_t bus;200,5791
    uint8_t devfn;201,5808
    unsigned is_extfn;202,5827
    unsigned is_virtfn;203,5850
        uint8_t bus;205,5887
        uint8_t devfn;206,5908
    } physfn;207,5931
typedef struct physdev_manage_pci_ext physdev_manage_pci_ext_t;210,5949
struct physdev_op 217,6180
    uint32_t cmd;218,6200
        struct physdev_irq_status_query      irq_status_query;220,6230
        struct physdev_set_iopl              set_iopl;221,6293
        struct physdev_set_iobitmap          set_iobitmap;222,6348
        struct physdev_apic                  apic_op;223,6407
        struct physdev_irq                   irq_op;224,6461
    } u;225,6514
typedef struct physdev_op physdev_op_t;227,6526
#define PHYSDEVOP_setup_gsi 230,6606
struct physdev_setup_gsi 231,6640
    int gsi;232,6667
    uint8_t triggering;234,6693
    uint8_t polarity;236,6730
typedef struct physdev_setup_gsi physdev_setup_gsi_t;240,6769
#define PHYSDEVOP_get_free_pirq 247,6991
struct physdev_get_free_pirq 248,7029
    int type;250,7074
    uint32_t pirq;252,7102
typedef struct physdev_get_free_pirq physdev_get_free_pirq_t;255,7125
#define PHYSDEVOP_IRQ_UNMASK_NOTIFY 263,7463
#define PHYSDEVOP_IRQ_STATUS_QUERY 269,7647
#define PHYSDEVOP_SET_IOPL 270,7715
#define PHYSDEVOP_SET_IOBITMAP 271,7775
#define PHYSDEVOP_APIC_READ 272,7839
#define PHYSDEVOP_APIC_WRITE 273,7900
#define PHYSDEVOP_ASSIGN_VECTOR 274,7962
#define PHYSDEVOP_FREE_VECTOR 275,8030
#define PHYSDEVOP_IRQ_NEEDS_UNMASK_NOTIFY 276,8097
#define PHYSDEVOP_IRQ_SHARED 277,8160

xen/include/public/tmem.h,2808
#define __XEN_PUBLIC_TMEM_H__28,1292
#define TMEM_SPEC_VERSION 33,1362
#define TMEM_CONTROL 36,1439
#define TMEM_NEW_POOL 37,1476
#define TMEM_DESTROY_POOL 38,1513
#define TMEM_NEW_PAGE 39,1550
#define TMEM_PUT_PAGE 40,1587
#define TMEM_GET_PAGE 41,1624
#define TMEM_FLUSH_PAGE 42,1661
#define TMEM_FLUSH_OBJECT 43,1698
#define TMEM_READ 44,1735
#define TMEM_WRITE 45,1772
#define TMEM_XCHG 46,1809
#define TMEM_AUTH 49,1897
#define TMEM_RESTORE_NEW 50,1936
#define TMEMC_THAW 53,2025
#define TMEMC_FREEZE 54,2064
#define TMEMC_FLUSH 55,2103
#define TMEMC_DESTROY 56,2142
#define TMEMC_LIST 57,2181
#define TMEMC_SET_WEIGHT 58,2220
#define TMEMC_SET_CAP 59,2259
#define TMEMC_SET_COMPRESS 60,2298
#define TMEMC_QUERY_FREEABLE_MB 61,2337
#define TMEMC_SAVE_BEGIN 62,2376
#define TMEMC_SAVE_GET_VERSION 63,2416
#define TMEMC_SAVE_GET_MAXPOOLS 64,2456
#define TMEMC_SAVE_GET_CLIENT_WEIGHT 65,2496
#define TMEMC_SAVE_GET_CLIENT_CAP 66,2536
#define TMEMC_SAVE_GET_CLIENT_FLAGS 67,2576
#define TMEMC_SAVE_GET_POOL_FLAGS 68,2616
#define TMEMC_SAVE_GET_POOL_NPAGES 69,2656
#define TMEMC_SAVE_GET_POOL_UUID 70,2696
#define TMEMC_SAVE_GET_NEXT_PAGE 71,2736
#define TMEMC_SAVE_GET_NEXT_INV 72,2776
#define TMEMC_SAVE_END 73,2816
#define TMEMC_RESTORE_BEGIN 74,2856
#define TMEMC_RESTORE_PUT_PAGE 75,2896
#define TMEMC_RESTORE_FLUSH_PAGE 76,2936
#define TMEM_POOL_PERSIST 79,3026
#define TMEM_POOL_SHARED 80,3063
#define TMEM_POOL_PRECOMPRESSED 81,3100
#define TMEM_POOL_PAGESIZE_SHIFT 82,3137
#define TMEM_POOL_PAGESIZE_MASK 83,3174
#define TMEM_POOL_VERSION_SHIFT 84,3211
#define TMEM_POOL_VERSION_MASK 85,3248
#define TMEM_POOL_RESERVED_BITS 86,3285
#define TMEM_CLIENT_COMPRESS 89,3373
#define TMEM_CLIENT_FROZEN 90,3410
#define EFROZEN 93,3475
#define EEMPTY 94,3512
typedef xen_pfn_t tmem_cli_mfn_t;98,3572
typedef XEN_GUEST_HANDLE(char)99,3606
struct tmem_op 100,3652
    uint32_t cmd;101,3669
    int32_t pool_id;102,3687
            uint64_t uuid[uuid105,3737
            uint32_t flags;106,3767
            uint32_t arg1;107,3795
        } creat;108,3822
            uint32_t subop;110,3917
            uint32_t cli_id;111,3945
            uint32_t arg1;112,3974
            uint32_t arg2;113,4001
            uint64_t oid[oid114,4028
            tmem_cli_va_t buf;115,4057
        } ctrl;116,4088
            uint64_t oid[oid119,4164
            uint32_t index;120,4193
            uint32_t tmem_offset;121,4221
            uint32_t pfn_offset;122,4255
            uint32_t len;123,4288
            tmem_cli_mfn_t cmfn;124,4314
        } gen;125,4379
    } u;126,4430
typedef struct tmem_op tmem_op_t;128,4442
struct tmem_handle 131,4513
    uint32_t pool_id;132,4534
    uint32_t index;133,4556
    uint64_t oid[oid134,4576

xen/include/public/hvm/save.h,332
#define __XEN_PUBLIC_HVM_SAVE_H__29,1311
struct hvm_save_descriptor 49,1994
    uint16_t typecode;50,2023
    uint16_t instance;51,2099
    uint32_t length;52,2165
#define DECLARE_HVM_SAVE_TYPE(64,2565
#define HVM_SAVE_TYPE(67,2692
#define HVM_SAVE_LENGTH(68,2767
#define HVM_SAVE_CODE(69,2824
struct hvm_save_end 77,2999

xen/include/public/hvm/e820.h,263
#define __XEN_PUBLIC_HVM_E820_H__23,1115
#define HVM_E820_PAGE 26,1200
#define HVM_E820_NR_OFFSET 27,1240
#define HVM_E820_OFFSET 28,1280
#define HVM_BELOW_4G_RAM_END 30,1321
#define HVM_BELOW_4G_MMIO_START 31,1368
#define HVM_BELOW_4G_MMIO_LENGTH 32,1425

xen/include/public/hvm/hvm_info_table.h,601
#define __XEN_PUBLIC_HVM_HVM_INFO_TABLE_H__26,1303
#define HVM_INFO_PFN 28,1348
#define HVM_INFO_OFFSET 29,1383
#define HVM_INFO_PADDR 30,1418
#define HVM_MAX_VCPUS 33,1550
struct hvm_info_table 35,1584
    char        signature[signature36,1608
    uint32_t    length;37,1655
    uint8_t     checksum;38,1679
    uint8_t     acpi_enabled;41,1751
    uint8_t     apic_mode;44,1854
    uint32_t    nr_vcpus;47,1929
    uint32_t    low_mem_pgend;59,2266
    uint32_t    reserved_mem_pgstart;64,2417
    uint32_t    high_mem_pgend;69,2549
    uint8_t     vcpu_online[vcpu_online72,2638

xen/include/public/hvm/ioreq.h,2487
#define _IOREQ_H_25,1198
#define IOREQ_READ 27,1217
#define IOREQ_WRITE 28,1243
#define STATE_IOREQ_NONE 30,1270
#define STATE_IOREQ_READY 31,1304
#define STATE_IOREQ_INPROCESS 32,1338
#define STATE_IORESP_READY 33,1372
#define IOREQ_TYPE_PIO 35,1407
#define IOREQ_TYPE_COPY 36,1451
#define IOREQ_TYPE_TIMEOFFSET 37,1500
#define IOREQ_TYPE_INVALIDATE 38,1534
struct ioreq 45,1731
    uint64_t addr;46,1746
    uint64_t data;47,1797
    uint32_t count;48,1855
    uint32_t size;49,1906
    uint32_t vp_eport;50,1954
    uint16_t _pad0;51,2034
    uint8_t state:state52,2054
    uint8_t data_is_ptr:data_is_ptr53,2075
    uint8_t dir:dir55,2202
    uint8_t df:df56,2252
    uint8_t _pad1:_pad157,2270
    uint8_t type;58,2291
typedef struct ioreq ioreq_t;60,2337
struct shared_iopage 62,2368
    struct ioreq vcpu_ioreq[vcpu_ioreq63,2391
typedef struct shared_iopage shared_iopage_t;65,2426
struct buf_ioreq 67,2473
    uint8_t  type;68,2492
    uint8_t  pad:pad69,2547
    uint8_t  dir:dir70,2567
    uint8_t  size:size71,2622
    uint32_t addr:addr72,2698
    uint32_t data;73,2753
typedef struct buf_ioreq buf_ioreq_t;75,2811
#define IOREQ_BUFFER_SLOT_NUM 77,2850
struct buffered_iopage 78,2930
    unsigned int read_pointer;79,2955
    unsigned int write_pointer;80,2986
    buf_ioreq_t buf_ioreq[buf_ioreq81,3018
typedef struct buffered_iopage buffered_iopage_t;83,3138
struct pio_buffer 86,3211
    uint32_t page_offset;87,3231
    uint32_t pointer;88,3257
    uint32_t data_end;89,3279
    uint32_t buf_size;90,3302
    void *opaque;opaque91,3325
#define PIO_BUFFER_IDE_PRIMARY 94,3347
#define PIO_BUFFER_IDE_SECONDARY 95,3405
#define PIO_BUFFER_ENTRY_NUM 96,3463
struct buffered_piopage 97,3498
    struct pio_buffer pio[pio98,3524
    uint8_t buffer[buffer99,3573
#define ACPI_PM1A_EVT_BLK_ADDRESS_V0 109,3818
#define ACPI_PM1A_CNT_BLK_ADDRESS_V0 110,3862
#define ACPI_PM_TMR_BLK_ADDRESS_V0 111,3937
#define ACPI_GPE0_BLK_ADDRESS_V0 112,4012
#define ACPI_GPE0_BLK_LEN_V0 113,4085
#define ACPI_PM1A_EVT_BLK_ADDRESS_V1 116,4181
#define ACPI_PM1A_CNT_BLK_ADDRESS_V1 117,4225
#define ACPI_PM_TMR_BLK_ADDRESS_V1 118,4300
#define ACPI_GPE0_BLK_ADDRESS_V1 119,4375
#define ACPI_GPE0_BLK_LEN_V1 120,4419
#define ACPI_PM1A_EVT_BLK_ADDRESS 123,4532
#define ACPI_PM1A_CNT_BLK_ADDRESS 124,4598
#define ACPI_PM_TMR_BLK_ADDRESS 125,4664
#define ACPI_GPE0_BLK_ADDRESS 126,4728
#define ACPI_GPE0_BLK_LEN 127,4790

xen/include/public/hvm/params.h,1053
#define __XEN_PUBLIC_HVM_PARAMS_H__22,1116
#define HVM_PARAM_CALLBACK_IRQ 41,1806
#define HVM_PARAM_STORE_PFN 47,1947
#define HVM_PARAM_STORE_EVTCHN 48,1980
#define HVM_PARAM_PAE_ENABLED 50,2014
#define HVM_PARAM_IOREQ_PFN 52,2048
#define HVM_PARAM_BUFIOREQ_PFN 54,2082
#define HVM_PARAM_NVRAM_FD 58,2133
#define HVM_PARAM_VHPT_SIZE 59,2166
#define HVM_PARAM_BUFPIOREQ_PFN	60,2199
#define HVM_PARAM_VIRIDIAN 65,2334
#define HVM_PARAM_TIMER_MODE 88,3326
#define HVMPTM_delay_for_missed_ticks 89,3360
#define HVMPTM_no_delay_for_missed_ticks 90,3403
#define HVMPTM_no_missed_ticks_pending 91,3446
#define HVMPTM_one_missed_tick_pending 92,3489
#define HVM_PARAM_HPET_ENABLED 95,3609
#define HVM_PARAM_IDENT_PT 98,3711
#define HVM_PARAM_DM_DOMAIN 101,3788
#define HVM_PARAM_ACPI_S_STATE 104,3879
#define HVM_PARAM_VM86_TSS 107,3953
#define HVM_PARAM_VPT_ALIGN 110,4058
#define HVM_PARAM_CONSOLE_PFN 113,4150
#define HVM_PARAM_CONSOLE_EVTCHN 114,4186
#define HVM_PARAM_ACPI_IOPORTS_LOCATION 125,4654
#define HVM_NR_PARAMS 127,4698

xen/include/public/hvm/hvm_op.h,2762
#define __XEN_PUBLIC_HVM_HVM_OP_H__22,1116
#define HVMOP_set_param 28,1274
#define HVMOP_get_param 29,1310
struct xen_hvm_param 30,1346
    domid_t  domid;31,1369
    uint32_t index;32,1401
    uint64_t value;33,1433
typedef struct xen_hvm_param xen_hvm_param_t;35,1472
#define HVMOP_set_pci_intx_level 39,1626
struct xen_hvm_set_pci_intx_level 40,1662
    domid_t  domid;42,1730
    uint8_t  domain,44,1826
    uint8_t  domain, bus,44,1826
    uint8_t  domain, bus, device,44,1826
    uint8_t  domain, bus, device, intx;44,1826
    uint8_t  level;46,1924
typedef struct xen_hvm_set_pci_intx_level xen_hvm_set_pci_intx_level_t;48,1947
#define HVMOP_set_isa_irq_level 52,2139
struct xen_hvm_set_isa_irq_level 53,2175
    domid_t  domid;55,2242
    uint8_t  isa_irq;57,2318
    uint8_t  level;59,2398
typedef struct xen_hvm_set_isa_irq_level xen_hvm_set_isa_irq_level_t;61,2421
#define HVMOP_set_pci_link_route 64,2546
struct xen_hvm_set_pci_link_route 65,2582
    domid_t  domid;67,2650
    uint8_t  link;69,2707
    uint8_t  isa_irq;71,2773
typedef struct xen_hvm_set_pci_link_route xen_hvm_set_pci_link_route_t;73,2798
#define HVMOP_flush_tlbs 77,2974
#define HVMOP_track_dirty_vram 83,3143
struct xen_hvm_track_dirty_vram 84,3179
    domid_t  domid;86,3245
    uint64_aligned_t first_pfn;88,3295
    uint64_aligned_t nr;90,3363
    XEN_GUEST_HANDLE_64(93,3443
typedef struct xen_hvm_track_dirty_vram xen_hvm_track_dirty_vram_t;95,3491
#define HVMOP_modified_memory 99,3676
struct xen_hvm_modified_memory 100,3711
    domid_t  domid;102,3776
    uint64_aligned_t first_pfn;104,3817
    uint64_aligned_t nr;106,3876
typedef struct xen_hvm_modified_memory xen_hvm_modified_memory_t;108,3904
#define HVMOP_set_mem_type 111,4023
    HVMMEM_ram_rw,113,4070
    HVMMEM_ram_ro,114,4135
    HVMMEM_mmio_dm,115,4204
} hvmmem_type_t;116,4280
struct xen_hvm_set_mem_type 118,4370
    domid_t domid;120,4432
    hvmmem_type_t hvmmem_type;122,4473
    uint64_aligned_t first_pfn;124,4525
    uint64_aligned_t nr;126,4584
typedef struct xen_hvm_set_mem_type xen_hvm_set_mem_type_t;128,4612
#define HVMOP_pagetable_dying 134,4833
struct xen_hvm_pagetable_dying 135,4872
    domid_t  domid;137,4962
    uint16_t pad[pad138,4982
    uint64_t gpa;140,5110
typedef struct xen_hvm_pagetable_dying xen_hvm_pagetable_dying_t;142,5131
#define HVMOP_get_time 146,5316
struct xen_hvm_get_time 147,5355
    uint64_t now;148,5381
typedef struct xen_hvm_get_time xen_hvm_get_time_t;150,5417
#define HVMOP_xentrace 153,5515
struct xen_hvm_xentrace 154,5554
    uint16_t event,155,5580
    uint16_t event, extra_bytes;155,5580
    uint8_t extra[extra156,5613
typedef struct xen_hvm_xentrace xen_hvm_xentrace_t;158,5671

xen/include/public/sysctl.h,13485
#define __XEN_PUBLIC_SYSCTL_H__28,1313
#define XEN_SYSCTL_INTERFACE_VERSION 37,1516
struct xen_sysctl_readconsole 43,1647
    uint8_t clear;45,1726
    uint8_t incremental;47,1810
    uint8_t pad0,48,1835
    uint8_t pad0, pad1;48,1835
    uint32_t index;53,2004
    XEN_GUEST_HANDLE_64(55,2078
typedef struct xen_sysctl_readconsole xen_sysctl_readconsole_t;59,2199
struct xen_sysctl_tbuf_op 64,2385
#define XEN_SYSCTL_TBUFOP_get_info 66,2436
#define XEN_SYSCTL_TBUFOP_set_cpu_mask 67,2477
#define XEN_SYSCTL_TBUFOP_set_evt_mask 68,2518
#define XEN_SYSCTL_TBUFOP_set_size 69,2559
#define XEN_SYSCTL_TBUFOP_enable 70,2600
#define XEN_SYSCTL_TBUFOP_disable 71,2641
    uint32_t cmd;72,2682
    struct xenctl_cpumap cpu_mask;74,2727
    uint32_t             evt_mask;75,2762
    uint64_aligned_t buffer_mfn;77,2821
    uint32_t size;78,2854
typedef struct xen_sysctl_tbuf_op xen_sysctl_tbuf_op_t;80,2904
#define _XEN_SYSCTL_PHYSCAP_hvm 88,3139
#define XEN_SYSCTL_PHYSCAP_hvm 89,3182
#define _XEN_SYSCTL_PHYSCAP_hvm_directio 91,3328
#define XEN_SYSCTL_PHYSCAP_hvm_directio 92,3371
struct xen_sysctl_physinfo 93,3451
    uint32_t threads_per_core;94,3480
    uint32_t cores_per_socket;95,3511
    uint32_t nr_cpus;96,3542
    uint32_t max_cpu_id;97,3598
    uint32_t nr_nodes;98,3667
    uint32_t max_node_id;99,3724
    uint32_t cpu_khz;100,3794
    uint64_aligned_t total_pages;101,3816
    uint64_aligned_t free_pages;102,3850
    uint64_aligned_t scrub_pages;103,3883
    uint32_t hw_cap[hw_cap104,3917
    uint32_t capabilities;107,3975
typedef struct xen_sysctl_physinfo xen_sysctl_physinfo_t;109,4005
struct xen_sysctl_sched_id 116,4185
    uint32_t sched_id;118,4237
typedef struct xen_sysctl_sched_id xen_sysctl_sched_id_t;120,4263
#define XEN_SYSCTL_PERFCOP_reset 126,4485
#define XEN_SYSCTL_PERFCOP_query 127,4556
struct xen_sysctl_perfc_desc 128,4624
    char         name[name129,4655
    uint32_t     nr_vals;130,4721
typedef struct xen_sysctl_perfc_desc xen_sysctl_perfc_desc_t;132,4803
typedef uint32_t xen_sysctl_perfc_val_t;134,4915
struct xen_sysctl_perfc_op 137,5006
    uint32_t       cmd;139,5059
    uint32_t       nr_counters;141,5153
    uint32_t       nr_vals;142,5230
    XEN_GUEST_HANDLE_64(144,5333
typedef struct xen_sysctl_perfc_op xen_sysctl_perfc_op_t;148,5479
struct xen_sysctl_getdomaininfolist 152,5621
    domid_t               first_domain;154,5683
    uint32_t              max_domains;155,5723
    XEN_GUEST_HANDLE_64(156,5762
typedef struct xen_sysctl_getdomaininfolist xen_sysctl_getdomaininfolist_t;160,5889
struct xen_sysctl_debug_keys 165,6085
    XEN_GUEST_HANDLE_64(167,6140
typedef struct xen_sysctl_debug_keys xen_sysctl_debug_keys_t;170,6201
struct xen_sysctl_cpuinfo 175,6378
    uint64_aligned_t idletime;176,6406
typedef struct xen_sysctl_cpuinfo xen_sysctl_cpuinfo_t;178,6440
struct xen_sysctl_getcpuinfo 180,6544
    uint32_t max_cpus;182,6599
    XEN_GUEST_HANDLE_64(183,6622
typedef struct xen_sysctl_getcpuinfo xen_sysctl_getcpuinfo_t;187,6725
struct xen_sysctl_availheap 191,6866
    uint32_t min_bitwidth;193,6920
    uint32_t max_bitwidth;194,6999
    int32_t  node;195,7077
    uint64_aligned_t avail_bytes;197,7178
typedef struct xen_sysctl_availheap xen_sysctl_availheap_t;199,7261
struct pm_px_val 203,7399
    uint64_aligned_t freq;204,7418
    uint64_aligned_t residency;205,7476
    uint64_aligned_t count;206,7534
typedef struct pm_px_val pm_px_val_t;208,7597
struct pm_px_stat 211,7674
    uint8_t total;212,7694
    uint8_t usable;213,7742
    uint8_t last;214,7791
    uint8_t cur;215,7837
    XEN_GUEST_HANDLE_64(216,7886
typedef struct pm_px_stat pm_px_stat_t;219,8000
struct pm_cx_stat 222,8080
    uint32_t nr;223,8100
    uint32_t last;224,8175
    uint64_aligned_t idle_time;225,8215
    XEN_GUEST_HANDLE_64(226,8289
struct xen_sysctl_get_pmstat 235,8558
#define PMSTAT_CATEGORY_MASK 236,8589
#define PMSTAT_PX 237,8623
#define PMSTAT_CX 238,8657
#define PMSTAT_get_max_px 239,8691
#define PMSTAT_get_pxstat 240,8738
#define PMSTAT_reset_pxstat 241,8785
#define PMSTAT_get_max_cx 242,8832
#define PMSTAT_get_cxstat 243,8879
#define PMSTAT_reset_cxstat 244,8926
    uint32_t type;245,8973
    uint32_t cpuid;246,8992
        struct pm_px_stat getpx;248,9024
        struct pm_cx_stat getcx;249,9057
    } u;251,9129
typedef struct xen_sysctl_get_pmstat xen_sysctl_get_pmstat_t;253,9141
#define XEN_CPU_HOTPLUG_STATUS_OFFLINE 260,9379
#define XEN_CPU_HOTPLUG_STATUS_ONLINE 261,9420
#define XEN_CPU_HOTPLUG_STATUS_NEW 262,9461
struct xen_sysctl_cpu_hotplug 265,9532
    uint32_t cpu;267,9587
#define XEN_SYSCTL_CPU_HOTPLUG_ONLINE 268,9627
#define XEN_SYSCTL_CPU_HOTPLUG_OFFLINE 269,9668
#define XEN_SYSCTL_CPU_HOTPLUG_STATUS 270,9709
    uint32_t op;271,9749
typedef struct xen_sysctl_cpu_hotplug xen_sysctl_cpu_hotplug_t;273,9793
struct xen_userspace 281,10028
    uint32_t scaling_setspeed;282,10051
typedef struct xen_userspace xen_userspace_t;284,10085
struct xen_ondemand 286,10132
    uint32_t sampling_rate_max;287,10154
    uint32_t sampling_rate_min;288,10186
    uint32_t sampling_rate;290,10219
    uint32_t up_threshold;291,10247
typedef struct xen_ondemand xen_ondemand_t;293,10277
#define CPUFREQ_NAME_LEN 299,10419
struct xen_get_cpufreq_para 300,10447
    uint32_t cpu_num;302,10503
    uint32_t freq_num;303,10525
    uint32_t gov_num;304,10548
    XEN_GUEST_HANDLE_64(308,10622
        struct  xen_userspace userspace;324,11114
        struct  xen_ondemand ondemand;325,11155
    } u;326,11194
    int32_t turbo_enabled;328,11204
struct xen_set_cpufreq_gov 331,11235
    char scaling_governor[scaling_governor332,11264
struct xen_set_cpufreq_para 335,11313
    #define SCALING_MAX_FREQ 336,11343
    #define SCALING_MIN_FREQ 337,11384
    #define SCALING_SETSPEED 338,11425
    #define SAMPLING_RATE 339,11466
    #define UP_THRESHOLD 340,11507
    uint32_t ctrl_type;342,11549
    uint32_t ctrl_value;343,11573
struct xen_sysctl_pm_op 346,11602
    #define PM_PARA_CATEGORY_MASK 347,11628
    #define CPUFREQ_PARA 348,11672
    #define GET_CPUFREQ_PARA 351,11748
    #define SET_CPUFREQ_GOV 352,11809
    #define SET_CPUFREQ_PARA 353,11870
    #define GET_CPUFREQ_AVGFREQ 354,11931
    #define XEN_SYSCTL_pm_op_set_sched_opt_smt 357,12043
    #define XEN_SYSCTL_pm_op_get_max_cstate 360,12143
    #define XEN_SYSCTL_pm_op_set_max_cstate 361,12198
    #define XEN_SYSCTL_pm_op_set_vcpu_migration_delay 364,12299
    #define XEN_SYSCTL_pm_op_get_vcpu_migration_delay 365,12360
    #define XEN_SYSCTL_pm_op_enable_turbo 368,12479
    #define XEN_SYSCTL_pm_op_disable_turbo 369,12540
    uint32_t cmd;371,12602
    uint32_t cpuid;372,12620
        struct xen_get_cpufreq_para get_para;374,12652
        struct xen_set_cpufreq_gov  set_gov;375,12698
        struct xen_set_cpufreq_para set_para;376,12743
        uint64_aligned_t get_avgfreq;377,12789
        uint32_t                    set_sched_opt_smt;378,12827
        uint32_t                    get_max_cstate;379,12882
        uint32_t                    set_max_cstate;380,12934
        uint32_t                    get_vcpu_migration_delay;381,12986
        uint32_t                    set_vcpu_migration_delay;382,13048
    } u;383,13110
struct xen_sysctl_page_offline_op 387,13156
#define sysctl_page_offline 389,13235
#define sysctl_page_online 390,13269
#define sysctl_query_page_offline 391,13303
    uint32_t cmd;392,13340
    uint32_t start;393,13358
    uint32_t end;394,13378
    XEN_GUEST_HANDLE(400,13511
#define PG_OFFLINE_STATUS_MASK 403,13552
#define PG_OFFLINE_INVALID 406,13652
#define PG_OFFLINE_OFFLINED 408,13695
#define PG_OFFLINE_PENDING 409,13737
#define PG_OFFLINE_FAILED 410,13779
#define PG_ONLINE_FAILED 412,13822
#define PG_ONLINE_ONLINED 413,13869
#define PG_OFFLINE_STATUS_OFFLINED 415,13919
#define PG_OFFLINE_STATUS_ONLINE 416,13980
#define PG_OFFLINE_STATUS_OFFLINE_PENDING 417,14041
#define PG_OFFLINE_STATUS_BROKEN 418,14102
#define PG_OFFLINE_MISC_MASK 420,14164
#define PG_OFFLINE_XENPAGE 423,14251
#define PG_OFFLINE_DOM0PAGE 424,14293
#define PG_OFFLINE_ANONYMOUS 425,14335
#define PG_OFFLINE_NOT_CONV_RAM 426,14378
#define PG_OFFLINE_OWNED 427,14426
#define PG_OFFLINE_BROKEN 429,14470
#define PG_ONLINE_BROKEN 430,14513
#define PG_OFFLINE_OWNER_SHIFT 432,14561
#define XEN_SYSCTL_LOCKPROF_reset 436,14647
#define XEN_SYSCTL_LOCKPROF_query 437,14723
#define LOCKPROF_TYPE_GLOBAL 439,14816
#define LOCKPROF_TYPE_PERDOM 440,14889
#define LOCKPROF_TYPE_N 441,14963
struct xen_sysctl_lockprof_data 442,15023
    char     name[name443,15057
    int32_t  type;444,15136
    int32_t  idx;445,15187
    uint64_aligned_t lock_cnt;446,15243
    uint64_aligned_t block_cnt;447,15307
    uint64_aligned_t lock_time;448,15367
    uint64_aligned_t block_time;449,15424
typedef struct xen_sysctl_lockprof_data xen_sysctl_lockprof_data_t;451,15490
struct xen_sysctl_lockprof_op 453,15611
    uint32_t       cmd;455,15667
    uint32_t       max_elem;456,15735
    uint32_t       nr_elem;458,15839
    uint64_aligned_t time;459,15912
    XEN_GUEST_HANDLE_64(461,16025
typedef struct xen_sysctl_lockprof_op xen_sysctl_lockprof_op_t;463,16086
#define INVALID_TOPOLOGY_ID 467,16232
struct xen_sysctl_topologyinfo 468,16267
    uint32_t max_cpu_index;475,16576
    XEN_GUEST_HANDLE_64(485,16971
typedef struct xen_sysctl_topologyinfo xen_sysctl_topologyinfo_t;489,17111
struct xen_sysctl_numainfo 493,17256
    uint32_t max_node_index;499,17483
    XEN_GUEST_HANDLE_64(502,17565
typedef struct xen_sysctl_numainfo xen_sysctl_numainfo_t;521,18553
#define XEN_SYSCTL_CPUPOOL_OP_CREATE 525,18688
#define XEN_SYSCTL_CPUPOOL_OP_DESTROY 526,18751
#define XEN_SYSCTL_CPUPOOL_OP_INFO 527,18814
#define XEN_SYSCTL_CPUPOOL_OP_ADDCPU 528,18877
#define XEN_SYSCTL_CPUPOOL_OP_RMCPU 529,18940
#define XEN_SYSCTL_CPUPOOL_OP_MOVEDOMAIN 530,19003
#define XEN_SYSCTL_CPUPOOL_OP_FREEINFO 531,19066
#define XEN_SYSCTL_CPUPOOL_PAR_ANY 532,19129
struct xen_sysctl_cpupool_op 533,19179
    uint32_t op;534,19210
    uint32_t cpupool_id;535,19245
    uint32_t sched_id;536,19296
    uint32_t domid;537,19347
    uint32_t cpu;538,19398
    uint32_t n_dom;539,19449
    struct xenctl_cpumap cpumap;540,19500
typedef struct xen_sysctl_cpupool_op xen_sysctl_cpupool_op_t;542,19554
#define ARINC653_MAX_DOMAINS_PER_SCHEDULE 545,19667
struct xen_sysctl_arinc653_schedule 550,19825
    uint64_aligned_t     major_frame;553,19958
    uint8_t     num_sched_entries;556,20101
        xen_domain_handle_t dom_handle;560,20270
        unsigned int vcpu_id;564,20502
        uint64_aligned_t runtime;567,20680
    } sched_entries[sched_entries568,20714
typedef struct xen_sysctl_arinc653_schedule xen_sysctl_arinc653_schedule_t;570,20773
#define XEN_SYSCTL_SCHEDOP_putinfo 575,20960
#define XEN_SYSCTL_SCHEDOP_getinfo 576,20997
struct xen_sysctl_scheduler_op 577,21034
    uint32_t cpupool_id;578,21067
    uint32_t sched_id;579,21142
    uint32_t cmd;580,21200
        struct xen_sysctl_sched_arinc653 582,21264
            XEN_GUEST_HANDLE_64(583,21307
typedef struct xen_sysctl_scheduler_op xen_sysctl_scheduler_op_t;587,21419
struct xen_sysctl 590,21538
    uint32_t cmd;591,21558
#define XEN_SYSCTL_readconsole 592,21576
#define XEN_SYSCTL_tbuf_op 593,21628
#define XEN_SYSCTL_physinfo 594,21680
#define XEN_SYSCTL_sched_id 595,21732
#define XEN_SYSCTL_perfc_op 596,21784
#define XEN_SYSCTL_getdomaininfolist 597,21836
#define XEN_SYSCTL_debug_keys 598,21888
#define XEN_SYSCTL_getcpuinfo 599,21940
#define XEN_SYSCTL_availheap 600,21992
#define XEN_SYSCTL_get_pmstat 601,22044
#define XEN_SYSCTL_cpu_hotplug 602,22096
#define XEN_SYSCTL_pm_op 603,22148
#define XEN_SYSCTL_page_offline_op 604,22200
#define XEN_SYSCTL_lockprof_op 605,22252
#define XEN_SYSCTL_topologyinfo 606,22304
#define XEN_SYSCTL_numainfo 607,22357
#define XEN_SYSCTL_cpupool_op 608,22409
#define XEN_SYSCTL_scheduler_op 609,22461
    uint32_t interface_version;610,22513
        struct xen_sysctl_readconsole       readconsole;612,22592
        struct xen_sysctl_tbuf_op           tbuf_op;613,22649
        struct xen_sysctl_physinfo          physinfo;614,22702
        struct xen_sysctl_topologyinfo      topologyinfo;615,22756
        struct xen_sysctl_numainfo          numainfo;616,22814
        struct xen_sysctl_sched_id          sched_id;617,22868
        struct xen_sysctl_perfc_op          perfc_op;618,22922
        struct xen_sysctl_getdomaininfolist getdomaininfolist;619,22976
        struct xen_sysctl_debug_keys        debug_keys;620,23039
        struct xen_sysctl_getcpuinfo        getcpuinfo;621,23095
        struct xen_sysctl_availheap         availheap;622,23151
        struct xen_sysctl_get_pmstat        get_pmstat;623,23206
        struct xen_sysctl_cpu_hotplug       cpu_hotplug;624,23262
        struct xen_sysctl_pm_op             pm_op;625,23319
        struct xen_sysctl_page_offline_op   page_offline;626,23370
        struct xen_sysctl_lockprof_op       lockprof_op;627,23428
        struct xen_sysctl_cpupool_op        cpupool_op;628,23485
        struct xen_sysctl_scheduler_op      scheduler_op;629,23541
        uint8_t                             pad[pad630,23599
    } u;631,23653
typedef struct xen_sysctl xen_sysctl_t;633,23665

xen/include/public/elfnote.h,1038
#define __XEN_PUBLIC_ELFNOTE_H__28,1307
#define XEN_ELFNOTE_INFO 44,1662
#define XEN_ELFNOTE_ENTRY 51,1785
#define XEN_ELFNOTE_HYPERCALL_PAGE 58,1993
#define XEN_ELFNOTE_VIRT_BASE 66,2154
#define XEN_ELFNOTE_PADDR_OFFSET 78,2530
#define XEN_ELFNOTE_XEN_VERSION 85,2647
#define XEN_ELFNOTE_GUEST_OS 92,2767
#define XEN_ELFNOTE_GUEST_VERSION 99,2891
#define XEN_ELFNOTE_LOADER 106,2986
#define XEN_ELFNOTE_PAE_MODE 122,3610
#define XEN_ELFNOTE_FEATURES 134,4000
#define XEN_ELFNOTE_BSD_SYMTAB 142,4270
#define XEN_ELFNOTE_HV_START_LOW 151,4564
#define XEN_ELFNOTE_L1_MFN_VALID 157,4749
#define XEN_ELFNOTE_SUSPEND_CANCEL 162,4865
#define XEN_ELFNOTE_INIT_P2M 173,5365
#define XEN_ELFNOTE_MOD_START_PFN 179,5522
#define XEN_ELFNOTE_MAX 184,5613
#define XEN_ELFNOTE_CRASH_INFO 193,5922
#define XEN_ELFNOTE_CRASH_REGS 203,6283
#define XEN_ELFNOTE_DUMPCORE_NONE 213,6593
#define XEN_ELFNOTE_DUMPCORE_HEADER 221,6826
#define XEN_ELFNOTE_DUMPCORE_XEN_VERSION 230,7135
#define XEN_ELFNOTE_DUMPCORE_FORMAT_VERSION 238,7425

xen/include/public/features.h,578
#define __XEN_PUBLIC_FEATURES_H__28,1323
#define XENFEAT_writable_page_tables 34,1475
#define XENFEAT_writable_descriptor_tables 40,1653
#define XENFEAT_auto_translated_physmap 48,1979
#define XENFEAT_supervisor_mode_kernel 51,2099
#define XENFEAT_pae_pgdir_above_4gb 57,2295
#define XENFEAT_mmu_pt_update_preserve_ad 60,2420
#define XENFEAT_highmem_assist 63,2541
#define XENFEAT_gnttab_map_avail_bits 69,2695
#define XENFEAT_hvm_callback_vector 72,2809
#define XENFEAT_hvm_safe_pvclock 75,2906
#define XENFEAT_hvm_pirqs 78,2994
#define XENFEAT_NR_SUBMAPS 80,3034

xen/include/public/io/vscsiif.h,1312
#define __XEN__PUBLIC_IO_SCSI_H__28,1283
#define VSCSIIF_ACT_SCSI_CDB 34,1408
#define VSCSIIF_ACT_SCSI_ABORT 35,1473
#define VSCSIIF_ACT_SCSI_RESET 36,1543
#define VSCSIIF_BACK_MAX_PENDING_REQS 39,1615
#define VSCSIIF_SG_TABLESIZE 48,1910
#define VSCSIIF_MAX_COMMAND_SIZE 53,1993
#define VSCSIIF_SENSE_BUFFERSIZE 54,2037
struct vscsiif_request 57,2083
    uint16_t rqid;58,2108
    uint8_t act;59,2179
    uint8_t cmd_len;60,2250
    uint8_t cmnd[cmnd62,2272
    uint16_t timeout_per_command;63,2316
    uint16_t channel,65,2455
    uint16_t channel, id,65,2455
    uint16_t channel, id, lun;65,2455
    uint16_t padding;66,2486
    uint8_t sc_data_direction;67,2508
    uint8_t nr_segments;70,2696
    struct scsiif_request_segment 72,2776
        grant_ref_t gref;73,2812
        uint16_t offset;74,2838
        uint16_t length;75,2863
    } seg[seg76,2888
    uint32_t reserved[reserved77,2921
typedef struct vscsiif_request vscsiif_request_t;79,2950
struct vscsiif_response 81,3001
    uint16_t rqid;82,3027
    uint8_t padding;83,3046
    uint8_t sense_len;84,3067
    uint8_t sense_buffer[sense_buffer85,3090
    int32_t rslt;86,3142
    uint32_t residual_len;87,3160
    uint32_t reserved[reserved89,3288
typedef struct vscsiif_response vscsiif_response_t;91,3318

xen/include/public/io/netif.h,2315
#define __XEN_PUBLIC_IO_NETIF_H__28,1313
#define _NETTXF_csum_blank 53,2259
#define  NETTXF_csum_blank 54,2294
#define _NETTXF_data_validated 57,2415
#define  NETTXF_data_validated 58,2450
#define _NETTXF_more_data 61,2566
#define  NETTXF_more_data 62,2601
#define _NETTXF_extra_info 65,2709
#define  NETTXF_extra_info 66,2744
struct netif_tx_request 68,2801
    grant_ref_t gref;69,2827
    uint16_t offset;70,2885
    uint16_t flags;71,2944
    uint16_t id;72,2986
    uint16_t size;73,3047
typedef struct netif_tx_request netif_tx_request_t;75,3111
#define XEN_NETIF_EXTRA_TYPE_NONE 78,3209
#define XEN_NETIF_EXTRA_TYPE_GSO 79,3280
#define XEN_NETIF_EXTRA_TYPE_MCAST_ADD 80,3336
#define XEN_NETIF_EXTRA_TYPE_MCAST_DEL 81,3394
#define XEN_NETIF_EXTRA_TYPE_MAX 82,3452
#define _XEN_NETIF_EXTRA_FLAG_MORE 85,3526
#define XEN_NETIF_EXTRA_FLAG_MORE 86,3565
#define XEN_NETIF_GSO_TYPE_TCPV4 89,3684
struct netif_extra_info 95,3840
    uint8_t type;96,3866
    uint8_t flags;97,3914
            uint16_t size;108,4199
            uint8_t type;114,4405
            uint8_t pad;117,4495
            uint16_t features;123,4698
        } gso;124,4756
            uint8_t addr[addr138,5379
        } mcast;139,5437
        uint16_t pad[pad141,5455
    } u;142,5480
typedef struct netif_extra_info netif_extra_info_t;144,5492
struct netif_tx_response 146,5545
    uint16_t id;147,5572
    int16_t  status;148,5589
typedef struct netif_tx_response netif_tx_response_t;150,5637
struct netif_rx_request 152,5692
    uint16_t    id;153,5718
    grant_ref_t gref;154,5786
typedef struct netif_rx_request netif_rx_request_t;156,5858
#define _NETRXF_data_validated 159,5975
#define  NETRXF_data_validated 160,6010
#define _NETRXF_csum_blank 163,6144
#define  NETRXF_csum_blank 164,6179
#define _NETRXF_more_data 167,6291
#define  NETRXF_more_data 168,6326
#define _NETRXF_extra_info 171,6434
#define  NETRXF_extra_info 172,6469
struct netif_rx_response 174,6526
    uint16_t id;175,6553
    uint16_t offset;176,6570
    uint16_t flags;177,6647
    int16_t  status;178,6689
typedef struct netif_rx_response netif_rx_response_t;180,6765
#define NETIF_RSP_DROPPED 189,7034
#define NETIF_RSP_ERROR 190,7071
#define NETIF_RSP_OKAY 191,7108
#define NETIF_RSP_NULL 193,7216

xen/include/public/io/console.h,378
#define __XEN_PUBLIC_IO_CONSOLE_H__28,1297
typedef uint32_t XENCONS_RING_IDX;30,1334
#define MASK_XENCONS_IDX(32,1370
struct xencons_interface 34,1434
    char in[in35,1461
    char out[out36,1480
    XENCONS_RING_IDX in_cons,37,1500
    XENCONS_RING_IDX in_cons, in_prod;37,1500
    XENCONS_RING_IDX out_cons,38,1539
    XENCONS_RING_IDX out_cons, out_prod;38,1539

xen/include/public/io/xenbus.h,424
#define _XEN_PUBLIC_IO_XENBUS_H28,1274
enum xenbus_state 36,1549
    XenbusStateUnknown 37,1569
    XenbusStateInitialising 39,1604
    XenbusStateInitWait 45,1770
    XenbusStateInitialised 50,1880
    XenbusStateConnected 52,1915
    XenbusStateClosing 57,2044
    XenbusStateClosed 59,2079
    XenbusStateReconfiguring 64,2185
    XenbusStateReconfigured 66,2220
typedef enum xenbus_state XenbusState;68,2256

xen/include/public/io/usbif.h,1845
#define __XEN_PUBLIC_IO_USBIF_H__29,1279
enum usb_spec_version 34,1361
	USB_VER_UNKNOWN 35,1385
	USB_VER_USB11,36,1407
	USB_VER_USB20,37,1423
	USB_VER_USB30,38,1439
#define usbif_pipeportnum(66,2079
#define usbif_setportnum_pipe(67,2127
#define usbif_pipeunlink(70,2195
#define usbif_pipesubmit(71,2242
#define usbif_setunlink_pipe(72,2299
#define USBIF_BACK_MAX_PENDING_REQS 74,2351
#define USBIF_MAX_SEGMENTS_PER_REQUEST 75,2393
struct usbif_request_segment 80,2476
	grant_ref_t gref;81,2507
	uint16_t offset;82,2526
	uint16_t length;83,2544
struct usbif_urb_request 86,2566
	uint16_t id;87,2593
	uint16_t nr_buffer_segs;88,2624
	uint32_t pipe;91,2724
	uint16_t transfer_flags;92,2740
	uint16_t buffer_length;93,2766
		uint8_t ctrl[ctrl95,2800
			uint16_t interval;98,2857
			uint16_t start_frame;99,2914
			uint16_t number_of_packets;100,2957
			uint16_t nr_frame_desc_segs;101,3015
		} isoc;102,3087
			uint16_t interval;105,3109
			uint16_t pad[pad106,3166
		} intr;107,3186
			uint16_t unlink_id;110,3208
			uint16_t pad[pad111,3255
		} unlink;112,3275
	} u;114,3288
	struct usbif_request_segment seg[seg117,3320
typedef struct usbif_urb_request usbif_urb_request_t;119,3390
struct usbif_urb_response 121,3445
	uint16_t id;122,3473
	uint16_t start_frame;123,3504
	int32_t status;124,3552
	int32_t actual_length;125,3592
	int32_t error_count;126,3645
typedef struct usbif_urb_response usbif_urb_response_t;128,3697
#define USB_URB_RING_SIZE 131,3837
struct usbif_conn_request 136,3971
	uint16_t id;137,3999
typedef struct usbif_conn_request usbif_conn_request_t;139,4016
struct usbif_conn_response 141,4073
	uint16_t id;142,4102
	uint8_t portnum;143,4133
	uint8_t speed;144,4169
typedef struct usbif_conn_response usbif_conn_response_t;146,4211
#define USB_CONN_RING_SIZE 149,4356

xen/include/public/io/xs_wire.h,1614
#define _XS_WIRE_H27,1255
enum xsd_sockmsg_type29,1275
    XS_DEBUG,31,1299
    XS_DIRECTORY,32,1313
    XS_READ,33,1331
    XS_GET_PERMS,34,1344
    XS_WATCH,35,1362
    XS_UNWATCH,36,1376
    XS_TRANSACTION_START,37,1392
    XS_TRANSACTION_END,38,1418
    XS_INTRODUCE,39,1442
    XS_RELEASE,40,1460
    XS_GET_DOMAIN_PATH,41,1476
    XS_WRITE,42,1500
    XS_MKDIR,43,1514
    XS_RM,44,1528
    XS_SET_PERMS,45,1539
    XS_WATCH_EVENT,46,1557
    XS_ERROR,47,1577
    XS_IS_DOMAIN_INTRODUCED,48,1591
    XS_RESUME,49,1620
    XS_SET_TARGET,50,1635
    XS_RESTRICT51,1654
#define XS_WRITE_NONE 54,1674
#define XS_WRITE_CREATE 55,1703
#define XS_WRITE_CREATE_EXCL 56,1736
struct xsd_errors59,1830
    int errnum;61,1850
    const char *errstring;errstring62,1866
#define XSD_ERROR(65,1910
static struct xsd_errors xsd_errors[xsd_errors67,1969
struct xsd_sockmsg89,2399
    uint32_t type;91,2420
    uint32_t req_id;92,2453
    uint32_t tx_id;93,2529
    uint32_t len;94,2607
enum xs_watch_type99,2727
    XS_WATCH_PATH 101,2748
    XS_WATCH_TOKEN102,2771
#define XENSTORE_RING_SIZE 106,2843
typedef uint32_t XENSTORE_RING_IDX;107,2875
#define MASK_XENSTORE_IDX(108,2911
struct xenstore_domain_interface 109,2975
    char req[req110,3010
    char rsp[rsp111,3079
    XENSTORE_RING_IDX req_cons,112,3151
    XENSTORE_RING_IDX req_cons, req_prod;112,3151
    XENSTORE_RING_IDX rsp_cons,113,3193
    XENSTORE_RING_IDX rsp_cons, rsp_prod;113,3193
#define XENSTORE_PAYLOAD_MAX 117,3302
#define XENSTORE_ABS_PATH_MAX 120,3387
#define XENSTORE_REL_PATH_MAX 121,3422

xen/include/public/io/blkif.h,1218
#define __XEN_PUBLIC_IO_BLKIF_H__28,1311
#define blkif_vdev_t 46,2001
#define blkif_sector_t 48,2040
#define BLKIF_OP_READ 53,2098
#define BLKIF_OP_WRITE 54,2135
#define BLKIF_OP_WRITE_BARRIER 65,2741
#define BLKIF_OP_FLUSH_DISKCACHE 78,3452
#define BLKIF_OP_RESERVED_1 83,3615
#define BLKIF_MAX_SEGMENTS_PER_REQUEST 90,3856
struct blkif_request_segment 99,4279
    grant_ref_t gref;100,4310
    uint8_t     first_sect,103,4526
    uint8_t     first_sect, last_sect;103,4526
struct blkif_request 106,4569
    uint8_t        operation;107,4592
    uint8_t        nr_segments;108,4668
    blkif_vdev_t   handle;109,4744
    uint64_t       id;110,4820
    blkif_sector_t sector_number;111,4896
    struct blkif_request_segment seg[seg112,4972
typedef struct blkif_request blkif_request_t;114,5045
struct blkif_response 116,5092
    uint64_t        id;117,5116
    uint8_t         operation;118,5179
    int16_t         status;119,5242
typedef struct blkif_response blkif_response_t;121,5308
#define BLKIF_RSP_EOPNOTSUPP 127,5453
#define BLKIF_RSP_ERROR 129,5546
#define BLKIF_RSP_OKAY 131,5620
#define VDISK_CDROM 139,5779
#define VDISK_REMOVABLE 140,5810
#define VDISK_READONLY 141,5841

xen/include/public/io/pciif.h,1689
#define __XEN_PCI_COMMON_H__25,1217
#define XEN_PCI_MAGIC 28,1305
#define _XEN_PCIF_active 31,1363
#define XEN_PCIF_active 32,1396
#define _XEN_PCIB_AERHANDLER 33,1447
#define XEN_PCIB_AERHANDLER 34,1480
#define _XEN_PCIB_active 35,1535
#define XEN_PCIB_active 36,1568
#define XEN_PCI_OP_conf_read 39,1646
#define XEN_PCI_OP_conf_write 40,1683
#define XEN_PCI_OP_enable_msi 41,1720
#define XEN_PCI_OP_disable_msi 42,1757
#define XEN_PCI_OP_enable_msix 43,1794
#define XEN_PCI_OP_disable_msix 44,1831
#define XEN_PCI_OP_aer_detected 45,1868
#define XEN_PCI_OP_aer_resume	46,1905
#define XEN_PCI_OP_aer_mmio	47,1940
#define XEN_PCI_OP_aer_slotreset	48,1973
#define XEN_PCI_ERR_success 51,2042
#define XEN_PCI_ERR_dev_not_found 52,2083
#define XEN_PCI_ERR_invalid_offset 53,2124
#define XEN_PCI_ERR_access_denied 54,2165
#define XEN_PCI_ERR_not_implemented 55,2206
#define XEN_PCI_ERR_op_failed 57,2318
#define SH_INFO_MAX_VEC 63,2472
struct xen_msix_entry 65,2505
    uint16_t vector;66,2529
    uint16_t entry;67,2550
struct xen_pci_op 69,2573
    uint32_t cmd;71,2644
    int32_t err;74,2729
    uint32_t domain;77,2783
    uint32_t bus;78,2829
    uint32_t devfn;79,2847
    int32_t offset;82,2921
    int32_t size;83,2941
    uint32_t value;86,3033
    uint32_t info;88,3107
    struct xen_msix_entry msix_entries[msix_entries90,3156
struct xen_pcie_aer_op94,3248
    uint32_t cmd;98,3325
    int32_t err;100,3419
    uint32_t domain;103,3473
    uint32_t bus;104,3518
    uint32_t devfn;105,3536
struct xen_pci_sharedinfo 107,3559
    uint32_t flags;109,3616
    struct xen_pci_op op;110,3636
    struct xen_pcie_aer_op aer_op;111,3662

xen/include/public/io/tpmif.h,585
#define __XEN_PUBLIC_IO_TPMIF_H__35,1497
struct tpmif_tx_request 39,1561
    unsigned long addr;40,1587
    grant_ref_t ref;41,1648
    uint16_t unused;42,1709
    uint16_t size;43,1730
typedef struct tpmif_tx_request tpmif_tx_request_t;45,1794
typedef uint32_t TPMIF_RING_IDX;51,1969
#define TPMIF_TX_RING_SIZE 53,2003
struct tpmif_ring 57,2082
    struct tpmif_tx_request req;58,2102
typedef struct tpmif_ring tpmif_ring_t;60,2138
struct tpmif_tx_interface 62,2179
    struct tpmif_ring ring[ring63,2207
typedef struct tpmif_tx_interface tpmif_tx_interface_t;65,2258

xen/include/public/io/ring.h,1188
#define __XEN_PUBLIC_IO_RING_H__28,1300
#define xen_mb(33,1405
#define xen_rmb(34,1428
#define xen_wmb(35,1452
typedef unsigned int RING_IDX;38,1484
#define __RD2(41,1589
#define __RD4(42,1668
#define __RD8(43,1744
#define __RD16(44,1820
#define __RD32(45,1896
#define __CONST_RING_SIZE(53,2276
#define __RING_SIZE(59,2497
#define DEFINE_RING_TYPES(94,3782
#define SHARED_RING_INIT(156,7634
#define FRONT_RING_INIT(163,8019
#define BACK_RING_INIT(170,8402
#define FRONT_RING_ATTACH(178,8845
#define BACK_RING_ATTACH(185,9228
#define RING_SIZE(193,9639
#define RING_FREE_REQUESTS(197,9794
#define RING_FULL(203,10042
#define RING_HAS_UNCONSUMED_RESPONSES(207,10223
#define RING_HAS_UNCONSUMED_REQUESTS(211,10359
#define RING_HAS_UNCONSUMED_REQUESTS(219,10802
#define RING_GET_REQUEST(227,11227
#define RING_GET_RESPONSE(230,11365
#define RING_REQUEST_CONS_OVERFLOW(234,11582
#define RING_PUSH_REQUESTS(237,11711
#define RING_PUSH_RESPONSES(242,11946
#define RING_PUSH_REQUESTS_AND_CHECK_NOTIFY(277,13527
#define RING_PUSH_RESPONSES_AND_CHECK_NOTIFY(287,14132
#define RING_FINAL_CHECK_FOR_REQUESTS(297,14737
#define RING_FINAL_CHECK_FOR_RESPONSES(305,15194

xen/include/public/io/kbdif.h,1431
#define __XEN_PUBLIC_IO_KBDIF_H__27,1296
#define XENKBD_TYPE_MOTION 36,1453
#define XENKBD_TYPE_KEY 39,1564
#define XENKBD_TYPE_POS 46,1784
struct xenkbd_motion48,1815
    uint8_t type;50,1838
    int32_t rel_x;51,1888
    int32_t rel_y;52,1937
    int32_t rel_z;53,1986
struct xenkbd_key56,2047
    uint8_t type;58,2067
    uint8_t pressed;59,2115
    uint32_t keycode;60,2173
struct xenkbd_position63,2234
    uint8_t type;65,2259
    int32_t abs_x;66,2306
    int32_t abs_y;67,2372
    int32_t rel_z;68,2438
#define XENKBD_IN_EVENT_SIZE 71,2499
union xenkbd_in_event73,2532
    uint8_t type;75,2556
    struct xenkbd_motion motion;76,2574
    struct xenkbd_key key;77,2607
    struct xenkbd_position pos;78,2634
    char pad[pad79,2666
#define XENKBD_OUT_EVENT_SIZE 90,2900
union xenkbd_out_event92,2934
    uint8_t type;94,2959
    char pad[pad95,2977
#define XENKBD_IN_RING_SIZE 100,3037
#define XENKBD_IN_RING_LEN 101,3070
#define XENKBD_IN_RING_OFFS 102,3142
#define XENKBD_IN_RING(103,3175
#define XENKBD_IN_RING_REF(105,3276
#define XENKBD_OUT_RING_SIZE 108,3374
#define XENKBD_OUT_RING_LEN 109,3408
#define XENKBD_OUT_RING_OFFS 110,3483
#define XENKBD_OUT_RING(111,3556
#define XENKBD_OUT_RING_REF(113,3660
struct xenkbd_page116,3761
    uint32_t in_cons,118,3782
    uint32_t in_cons, in_prod;118,3782
    uint32_t out_cons,119,3813
    uint32_t out_cons, out_prod;119,3813

xen/include/public/io/fbif.h,1818
#define __XEN_PUBLIC_IO_FBIF_H__27,1299
#define XENFB_TYPE_UPDATE 42,1692
struct xenfb_update44,1721
    uint8_t type;46,1743
    int32_t x;47,1788
    int32_t y;48,1823
    int32_t width;49,1858
    int32_t height;50,1895
#define XENFB_TYPE_RESIZE 57,2037
struct xenfb_resize59,2066
    uint8_t type;61,2088
    int32_t width;62,2133
    int32_t height;63,2176
    int32_t stride;64,2220
    int32_t depth;65,2263
    int32_t offset;66,2304
#define XENFB_OUT_EVENT_SIZE 69,2370
union xenfb_out_event71,2403
    uint8_t type;73,2427
    struct xenfb_update update;74,2445
    struct xenfb_resize resize;75,2477
    char pad[pad76,2509
#define XENFB_TYPE_REFRESH_PERIOD 94,3064
#define XENFB_NO_REFRESH 95,3100
struct xenfb_refresh_period97,3128
    uint8_t type;99,3158
    uint32_t period;100,3210
#define XENFB_IN_EVENT_SIZE 104,3332
union xenfb_in_event106,3364
    uint8_t type;108,3387
    struct xenfb_refresh_period refresh_period;109,3405
    char pad[pad110,3453
#define XENFB_IN_RING_SIZE 115,3511
#define XENFB_IN_RING_LEN 116,3543
#define XENFB_IN_RING_OFFS 117,3612
#define XENFB_IN_RING(118,3644
#define XENFB_IN_RING_REF(120,3742
#define XENFB_OUT_RING_SIZE 123,3837
#define XENFB_OUT_RING_LEN 124,3870
#define XENFB_OUT_RING_OFFS 125,3942
#define XENFB_OUT_RING(126,4012
#define XENFB_OUT_RING_REF(128,4113
struct xenfb_page131,4211
    uint32_t in_cons,133,4231
    uint32_t in_cons, in_prod;133,4231
    uint32_t out_cons,134,4262
    uint32_t out_cons, out_prod;134,4262
    int32_t width;136,4296
    int32_t height;137,4371
    uint32_t line_length;138,4447
    uint32_t mem_length;139,4522
    uint8_t depth;140,4597
    unsigned long pd[pd153,5165
#define XENFB_WIDTH 161,5355
#define XENFB_HEIGHT 162,5379
#define XENFB_DEPTH 163,5404

xen/include/public/io/protocols.h,283
#define __XEN_PROTOCOLS_H__24,1204
#define XEN_IO_PROTO_ABI_X86_32 26,1233
#define XEN_IO_PROTO_ABI_X86_64 27,1282
#define XEN_IO_PROTO_ABI_IA64 28,1331
# define XEN_IO_PROTO_ABI_NATIVE 31,1401
# define XEN_IO_PROTO_ABI_NATIVE 33,1484
# define XEN_IO_PROTO_ABI_NATIVE 35,1565

xen/include/public/io/fsif.h,3747
#define __XEN_PUBLIC_IO_FSIF_H__28,1316
#define REQ_FILE_OPEN 33,1397
#define REQ_FILE_CLOSE 34,1428
#define REQ_FILE_READ 35,1459
#define REQ_FILE_WRITE 36,1490
#define REQ_STAT 37,1521
#define REQ_FILE_TRUNCATE 38,1552
#define REQ_REMOVE 39,1583
#define REQ_RENAME 40,1614
#define REQ_CREATE 41,1645
#define REQ_DIR_LIST 42,1676
#define REQ_CHMOD 43,1707
#define REQ_FS_SPACE 44,1738
#define REQ_FILE_SYNC 45,1769
struct fsif_open_request 47,1801
    grant_ref_t gref;48,1828
struct fsif_close_request 51,1854
    uint32_t fd;52,1882
struct fsif_read_request 55,1903
    uint32_t fd;56,1930
    int32_t pad;57,1947
    uint64_t len;58,1964
    uint64_t offset;59,1982
    grant_ref_t grefs[grefs60,2003
struct fsif_write_request 63,2056
    uint32_t fd;64,2084
    int32_t pad;65,2101
    uint64_t len;66,2118
    uint64_t offset;67,2136
    grant_ref_t grefs[grefs68,2157
struct fsif_stat_request 71,2210
    uint32_t fd;72,2237
struct fsif_stat_response 77,2351
    int32_t  stat_mode;78,2379
    uint32_t stat_uid;79,2403
    uint32_t stat_gid;80,2426
    int32_t  stat_ret;81,2449
    int64_t  stat_size;82,2472
    int64_t  stat_atime;83,2496
    int64_t  stat_mtime;84,2521
    int64_t  stat_ctime;85,2546
struct fsif_truncate_request 88,2575
    uint32_t fd;89,2606
    int32_t pad;90,2623
    int64_t length;91,2640
struct fsif_remove_request 94,2664
    grant_ref_t gref;95,2693
struct fsif_rename_request 98,2719
    uint16_t old_name_offset;99,2748
    uint16_t new_name_offset;100,2778
    grant_ref_t gref;101,2808
struct fsif_create_request 104,2834
    int8_t directory;105,2863
    int8_t pad;106,2885
    int16_t pad2;107,2901
    int32_t mode;108,2919
    grant_ref_t gref;109,2937
struct fsif_list_request 112,2963
    uint32_t offset;113,2990
    grant_ref_t gref;114,3011
#define NR_FILES_SHIFT 117,3037
#define NR_FILES_SIZE 118,3063
#define NR_FILES_MASK 119,3135
#define ERROR_SIZE 120,3209
#define ERROR_SHIFT 121,3271
#define ERROR_MASK 122,3328
#define HAS_MORE_SHIFT 123,3396
#define HAS_MORE_FLAG 124,3451
struct fsif_chmod_request 126,3501
    uint32_t fd;127,3529
    int32_t mode;128,3546
struct fsif_space_request 131,3568
    grant_ref_t gref;132,3596
struct fsif_sync_request 135,3622
    uint32_t fd;136,3649
struct fsif_request 141,3698
    uint8_t type;142,3720
    uint8_t pad;143,3797
    uint16_t id;144,3814
    uint32_t pad2;145,3891
        struct fsif_open_request     fopen;147,3922
        struct fsif_close_request    fclose;148,3966
        struct fsif_read_request     fread;149,4011
        struct fsif_write_request    fwrite;150,4055
        struct fsif_stat_request     fstat;151,4100
        struct fsif_truncate_request ftruncate;152,4144
        struct fsif_remove_request   fremove;153,4192
        struct fsif_rename_request   frename;154,4238
        struct fsif_create_request   fcreate;155,4284
        struct fsif_list_request     flist;156,4330
        struct fsif_chmod_request    fchmod;157,4374
        struct fsif_space_request    fspace;158,4419
        struct fsif_sync_request     fsync;159,4464
    } u;160,4508
typedef struct fsif_request fsif_request_t;162,4520
struct fsif_response 165,4593
    uint16_t id;166,4616
    uint16_t pad1;167,4633
    uint32_t pad2;168,4652
        uint64_t ret_val;170,4683
        struct fsif_stat_response fstat;171,4709
    } u;172,4750
typedef struct fsif_response fsif_response_t;175,4763
#define FSIF_RING_ENTRY_SIZE 177,4810
#define FSIF_NR_READ_GNTS 179,4845
#define FSIF_NR_WRITE_GNTS 181,4993
#define STATE_INITIALISED 186,5211
#define STATE_READY 187,5248
#define STATE_CLOSING 188,5286
#define STATE_CLOSED 189,5326

xen/include/public/version.h,1354
#define __XEN_PUBLIC_VERSION_H__29,1376
#define XENVER_version 34,1534
#define XENVER_extraversion 37,1598
typedef char xen_extraversion_t[xen_extraversion_t38,1628
#define XEN_EXTRAVERSION_LEN 39,1665
#define XENVER_compile_info 42,1757
struct xen_compile_info 43,1787
    char compiler[compiler44,1813
    char compile_by[compile_by45,1836
    char compile_domain[compile_domain46,1861
    char compile_date[compile_date47,1890
typedef struct xen_compile_info xen_compile_info_t;49,1920
#define XENVER_capabilities 51,1973
typedef char xen_capabilities_info_t[xen_capabilities_info_t52,2003
#define XEN_CAPABILITIES_INFO_LEN 53,2047
#define XENVER_changeset 55,2116
typedef char xen_changeset_info_t[xen_changeset_info_t56,2143
#define XEN_CHANGESET_INFO_LEN 57,2182
#define XENVER_platform_parameters 59,2245
struct xen_platform_parameters 60,2282
    unsigned long virt_start;61,2315
typedef struct xen_platform_parameters xen_platform_parameters_t;63,2348
#define XENVER_get_features 65,2415
struct xen_feature_info 66,2445
    unsigned int submap_idx;67,2471
    uint32_t     submap;68,2543
typedef struct xen_feature_info xen_feature_info_t;70,2603
#define XENVER_pagesize 76,2790
#define XENVER_guest_handle 79,2851
#define XENVER_commandline 81,2882
typedef char xen_commandline_t[xen_commandline_t82,2911

xen/include/acpi/actables.h,31
#define __ACTABLES_H__45,2114

xen/include/acpi/actbl.h,4861
#define __ACTBL_H__45,2118
#define ACPI_SIG_DSDT 51,2289
#define ACPI_SIG_FADT 52,2374
#define ACPI_SIG_FACS 53,2448
#define ACPI_SIG_PSDT 54,2525
#define ACPI_SIG_RSDP 55,2606
#define ACPI_SIG_RSDT 56,2687
#define ACPI_SIG_XSDT 57,2762
#define ACPI_SIG_SSDT 58,2842
#define ACPI_RSDP_NAME 59,2922
struct acpi_table_header 86,3895
	char signature[signature87,3922
	u32 length;88,3983
	u8 revision;89,4051
	u8 checksum;90,4107
	char oem_id[oem_id91,4161
	char oem_table_id[oem_table_id92,4224
	u32 oem_revision;93,4305
	char asl_compiler_id[asl_compiler_id94,4350
	u32 asl_compiler_revision;95,4424
struct acpi_generic_address 105,4715
	u8 space_id;106,4745
	u8 bit_width;107,4812
	u8 bit_offset;108,4865
	u8 access_width;109,4919
	u64 address;110,4974
struct acpi_table_rsdp 119,5273
	char signature[signature120,5298
	u8 checksum;121,5360
	char oem_id[oem_id122,5399
	u8 revision;123,5456
	u32 rsdt_physical_address;124,5523
	u32 length;125,5593
	u64 xsdt_physical_address;126,5665
	u8 extended_checksum;127,5747
	u8 reserved[reserved128,5813
#define ACPI_RSDP_REV0_SIZE 131,5864
struct acpi_table_rsdt 139,6152
	struct acpi_table_header header;140,6177
	u32 table_offset_entry[table_offset_entry141,6242
struct acpi_table_xsdt 144,6313
	struct acpi_table_header header;145,6338
	u64 table_offset_entry[table_offset_entry146,6403
struct acpi_table_facs 155,6692
	char signature[signature156,6717
	u32 length;157,6765
	u32 hardware_signature;158,6815
	u32 firmware_waking_vector;159,6879
	u32 global_lock;160,6968
	u32 flags;161,7034
	u64 xfirmware_waking_vector;162,7046
	u8 version;163,7139
	u8 reserved[reserved164,7193
#define ACPI_FACS_S4_BIOS_PRESENT 169,7263
#define ACPI_GLOCK_PENDING 173,7363
#define ACPI_GLOCK_OWNED 174,7440
struct acpi_table_fadt 184,7785
	struct acpi_table_header header;185,7810
	u32 facs;186,7875
	u32 dsdt;187,7925
	u8 model;188,7975
	u8 preferred_profile;189,8051
	u16 sci_interrupt;190,8132
	u32 smi_command;191,8189
	u8 acpi_enable;192,8253
	u8 acpi_disable;193,8318
	u8 S4bios_request;194,8384
	u8 pstate_control;195,8458
	u32 pm1a_event_block;196,8520
	u32 pm1b_event_block;197,8599
	u32 pm1a_control_block;198,8678
	u32 pm1b_control_block;199,8761
	u32 pm2_control_block;200,8844
	u32 pm_timer_block;201,8925
	u32 gpe0_block;202,9004
	u32 gpe1_block;203,9083
	u8 pm1_event_length;204,9162
	u8 pm1_control_length;205,9231
	u8 pm2_control_length;206,9304
	u8 pm_timer_length;207,9376
	u8 gpe0_block_length;208,9442
	u8 gpe1_block_length;209,9506
	u8 gpe1_base;210,9570
	u8 cst_control;211,9643
	u16 C2latency;212,9728
	u16 C3latency;213,9796
	u16 flush_size;214,9864
	u16 flush_stride;215,9934
	u8 duty_offset;216,10004
	u8 duty_width;217,10080
	u8 day_alarm;218,10159
	u8 month_alarm;219,10225
	u8 century;220,10294
	u16 boot_flags;221,10347
	u8 reserved;222,10433
	u32 flags;223,10477
	struct acpi_generic_address reset_register;224,10553
	u8 reset_value;225,10641
	u8 reserved4[reserved4226,10727
	u64 Xfacs;227,10774
	u64 Xdsdt;228,10825
	struct acpi_generic_address xpm1a_event_block;229,10876
	struct acpi_generic_address xpm1b_event_block;230,10981
	struct acpi_generic_address xpm1a_control_block;231,11086
	struct acpi_generic_address xpm1b_control_block;232,11195
	struct acpi_generic_address xpm2_control_block;233,11304
	struct acpi_generic_address xpm_timer_block;234,11411
	struct acpi_generic_address xgpe0_block;235,11516
	struct acpi_generic_address xgpe1_block;236,11620
#define ACPI_FADT_WBINVD 241,11746
#define ACPI_FADT_WBINVD_FLUSH 242,11834
#define ACPI_FADT_C1_SUPPORTED 243,11930
#define ACPI_FADT_C2_MP_SUPPORTED 244,12015
#define ACPI_FADT_POWER_BUTTON 245,12096
#define ACPI_FADT_SLEEP_BUTTON 246,12194
#define ACPI_FADT_FIXED_RTC 247,12309
#define ACPI_FADT_S4_RTC_WAKE 248,12406
#define ACPI_FADT_32BIT_TIMER 249,12496
#define ACPI_FADT_DOCKING_SUPPORTED 250,12578
#define ACPI_FADT_RESET_REGISTER 251,12649
#define ACPI_FADT_SEALED_CASE 252,12749
#define ACPI_FADT_HEADLESS 253,12857
#define ACPI_FADT_SLEEP_TYPE 254,12962
#define ACPI_FADT_PCI_EXPRESS_WAKE 255,13081
#define ACPI_FADT_PLATFORM_CLOCK 256,13188
#define ACPI_FADT_S4_RTC_VALID 257,13293
#define ACPI_FADT_REMOTE_POWER_ON 258,13398
#define ACPI_FADT_APIC_CLUSTER 259,13505
#define ACPI_FADT_APIC_PHYSICAL 260,13609
enum acpi_prefered_pm_profiles 265,13771
	PM_UNSPECIFIED 266,13804
	PM_DESKTOP 267,13825
	PM_MOBILE 268,13842
	PM_WORKSTATION 269,13858
	PM_ENTERPRISE_SERVER 270,13879
	PM_SOHO_SERVER 271,13906
	PM_APPLIANCE_PC 272,13927
#define BAF_LEGACY_DEVICES 277,13980
#define BAF_8042_KEYBOARD_CONTROLLER 278,14027
#define BAF_MSI_NOT_SUPPORTED 279,14074
#define FADT2_REVISION_ID 281,14122
#define FADT2_MINUS_REVISION_ID 282,14164
#define ACPI_FADT_OFFSET(288,14255

xen/include/acpi/acstruct.h,4819
#define __ACSTRUCT_H__45,2112
#define ACPI_NEXT_OP_DOWNWARD 60,2564
#define ACPI_NEXT_OP_UPWARD 61,2602
#define ACPI_WALK_NON_METHOD 67,2784
#define ACPI_WALK_METHOD 68,2822
#define ACPI_WALK_METHOD_RESTART 69,2863
#define ACPI_WALK_CONST_REQUIRED 73,2942
#define ACPI_WALK_CONST_OPTIONAL 74,2983
struct acpi_walk_state 76,3025
	struct acpi_walk_state *next;next77,3050
	u8 descriptor_type;78,3111
	u8 walk_type;79,3177
	u16 opcode;80,3192
	u8 next_op_info;81,3231
	u8 num_operands;82,3274
	acpi_owner_id owner_id;83,3333
	u8 last_predicate;84,3405
	u8 current_result;85,3456
	u8 return_used;86,3476
	u8 scope_depth;87,3493
	u8 pass_number;88,3510
	u32 aml_offset;89,3563
	u32 arg_types;90,3580
	u32 method_breakpoint;91,3596
	u32 user_breakpoint;92,3646
	u32 parse_flags;93,3694
	struct acpi_parse_state parser_state;95,3713
	u32 prev_arg_types;96,3782
	u32 arg_count;97,3803
	struct acpi_namespace_node arguments[arguments99,3854
	struct acpi_namespace_node local_variables[local_variables100,3946
	union acpi_operand_object *operands[operands101,4043
	union acpi_operand_object **params;params102,4174
	u8 *aml_last_while;aml_last_while104,4212
	union acpi_operand_object **caller_return_desc;caller_return_desc105,4233
	union acpi_generic_state *control_state;control_state106,4282
	struct acpi_namespace_node *deferred_node;deferred_node107,4366
	struct acpi_gpe_event_info *gpe_event_info;gpe_event_info108,4453
	union acpi_operand_object *implicit_return_obj;implicit_return_obj109,4541
	struct acpi_namespace_node *method_call_node;method_call_node110,4590
	union acpi_parse_object *method_call_op;method_call_op111,4662
	union acpi_operand_object *method_desc;method_desc112,4745
	struct acpi_namespace_node *method_node;method_node113,4830
	union acpi_parse_object *op;op114,4911
	const struct acpi_opcode_info *op_info;op_info115,4965
	union acpi_parse_object *origin;origin116,5035
	union acpi_operand_object *result_obj;result_obj117,5100
	union acpi_generic_state *results;results118,5140
	union acpi_operand_object *return_desc;return_desc119,5211
	union acpi_generic_state *scope_info;scope_info120,5280
	union acpi_parse_object *prev_op;prev_op121,5348
	union acpi_parse_object *next_op;next_op122,5416
	struct acpi_thread_state *thread;thread123,5481
	acpi_parse_downwards descending_callback;124,5516
	acpi_parse_upwards ascending_callback;125,5559
struct acpi_init_walk_info 130,5644
	u16 method_count;131,5673
	u16 device_count;132,5692
	u16 op_region_count;133,5711
	u16 field_count;134,5733
	u16 buffer_count;135,5751
	u16 package_count;136,5770
	u16 op_region_init;137,5790
	u16 field_init;138,5811
	u16 buffer_init;139,5828
	u16 package_init;140,5846
	u16 object_count;141,5865
	acpi_owner_id owner_id;142,5884
	acpi_native_uint table_index;143,5909
struct acpi_get_devices_info 146,5944
	acpi_walk_callback user_function;147,5975
	void *context;context148,6010
	const char *hid;hid149,6026
union acpi_aml_operands 152,6048
	union acpi_operand_object *operands[operands153,6074
		struct acpi_object_integer *type;type156,6126
		struct acpi_object_integer *code;code157,6162
		struct acpi_object_integer *argument;argument158,6198
	} fatal;160,6239
		union acpi_operand_object *source;source163,6260
		struct acpi_object_integer *index;index164,6297
		union acpi_operand_object *target;target165,6334
	} index;167,6372
		union acpi_operand_object *source;source170,6393
		struct acpi_object_integer *index;index171,6430
		struct acpi_object_integer *length;length172,6467
		union acpi_operand_object *target;target173,6505
	} mid;175,6543
struct acpi_evaluate_info 182,6657
	struct acpi_namespace_node *prefix_node;prefix_node183,6685
	char *pathname;pathname184,6727
	union acpi_operand_object *obj_desc;obj_desc185,6744
	union acpi_operand_object **parameters;parameters186,6782
	struct acpi_namespace_node *resolved_node;resolved_node187,6823
	union acpi_operand_object *return_object;return_object188,6867
	u8 pass_number;189,6910
	u8 parameter_type;190,6927
	u8 return_object_type;191,6947
	u8 flags;192,6971
#define ACPI_PARAM_ARGS 197,7024
#define ACPI_PARAM_GPE 198,7066
#define ACPI_IGNORE_RETURN_VALUE 202,7139
struct acpi_device_walk_info 206,7229
	u16 device_count;207,7260
	u16 num_STA;208,7279
	u16 num_INI;209,7293
	struct acpi_table_desc *table_desc;table_desc210,7307
	struct acpi_evaluate_info *evaluate_info;evaluate_info211,7344
struct acpi_walk_info 216,7441
	u32 debug_level;217,7465
	u32 count;218,7483
	acpi_owner_id owner_id;219,7495
	u8 display_type;220,7520
#define ACPI_DISPLAY_SUMMARY 225,7563
#define ACPI_DISPLAY_OBJECTS 226,7606
#define ACPI_DISPLAY_MASK 227,7649
#define ACPI_DISPLAY_SHORT 229,7693

xen/include/acpi/actypes.h,21175
#define __ACTYPES_H__45,2141
#define ACPI_UINT8_MAX 66,2692
#define ACPI_UINT16_MAX 67,2781
#define ACPI_UINT32_MAX 68,2870
#define ACPI_UINT64_MAX 69,2959
#define ACPI_ASCII_MAX 70,3048
typedef unsigned char BOOLEAN;127,5095
typedef unsigned char UINT8;128,5126
typedef unsigned short UINT16;129,5155
typedef COMPILER_DEPENDENT_UINT64 UINT64;130,5186
typedef COMPILER_DEPENDENT_INT64 INT64;131,5228
typedef unsigned int UINT32;145,5615
typedef int INT32;146,5644
typedef u64 acpi_native_uint;150,5706
typedef s64 acpi_native_int;151,5736
typedef u64 acpi_io_address;153,5766
typedef u64 acpi_physical_address;154,5795
#define ACPI_MAX_PTR 156,5831
#define ACPI_SIZE_MAX 157,5887
#define ACPI_USE_NATIVE_DIVIDE	159,5944
#define ACPI_MISALIGNMENT_NOT_SUPPORTED171,6501
typedef unsigned int UINT32;184,6855
typedef int INT32;185,6884
typedef u32 acpi_native_uint;189,6946
typedef s32 acpi_native_int;190,6976
typedef u32 acpi_io_address;192,7006
typedef u32 acpi_physical_address;193,7035
#define ACPI_MAX_PTR 195,7071
#define ACPI_SIZE_MAX 196,7127
typedef acpi_native_uint acpi_size;207,7339
#define acpi_thread_id 222,7834
#define acpi_spinlock 228,7969
#define acpi_cpu_flags 234,8106
#define acpi_cache_t 240,8241
#define acpi_uintptr_t 246,8414
#define ACPI_PRINTF_LIKE(254,8629
#define ACPI_UNUSED_VAR264,8929
#define ACPI_EXPORT_SYMBOL(272,9144
#undef FALSE284,9422
#define FALSE 286,9442
#undef TRUE289,9504
#define TRUE 291,9523
#define NULL 294,9586
typedef u32 acpi_status;300,9675
typedef u32 acpi_name;301,9726
typedef char *acpi_string;acpi_string302,9773
typedef void *acpi_handle;acpi_handle303,9835
struct uint64_struct 305,9897
	u32 lo;306,9920
	u32 hi;307,9929
union uint64_overlay 310,9942
	u64 full;311,9965
	struct uint64_struct part;312,9976
struct uint32_struct 315,10008
	u32 lo;316,10031
	u32 hi;317,10040
#define acpi_mutex 322,10084
#define acpi_semaphore 323,10131
typedef u32 acpi_integer;336,10512
#define ACPI_INTEGER_MAX 337,10538
#define ACPI_INTEGER_BIT_SIZE 338,10594
#define ACPI_MAX_DECIMAL_DIGITS 339,10637
#define ACPI_USE_NATIVE_DIVIDE	341,10708
typedef unsigned long long acpi_integer;347,10810
#define ACPI_INTEGER_MAX 348,10851
#define ACPI_INTEGER_BIT_SIZE 349,10907
#define ACPI_MAX_DECIMAL_DIGITS 350,10950
#define ACPI_USE_NATIVE_DIVIDE	353,11063
#define ACPI_MAX64_DECIMAL_DIGITS 357,11149
#define ACPI_MAX32_DECIMAL_DIGITS 358,11192
#define ACPI_MAX16_DECIMAL_DIGITS 359,11235
#define ACPI_MAX8_DECIMAL_DIGITS 360,11278
#define ACPI_ROOT_OBJECT 365,11364
#define ACPI_FULL_INITIALIZATION 370,11486
#define ACPI_NO_ADDRESS_SPACE_INIT 371,11531
#define ACPI_NO_HARDWARE_INIT 372,11576
#define ACPI_NO_EVENT_INIT 373,11621
#define ACPI_NO_HANDLER_INIT 374,11666
#define ACPI_NO_ACPI_ENABLE 375,11711
#define ACPI_NO_DEVICE_INIT 376,11756
#define ACPI_NO_OBJECT_INIT 377,11801
#define ACPI_SUBSYSTEM_INITIALIZE 382,11878
#define ACPI_INITIALIZED_OK 383,11923
#define ACPI_STATE_UNKNOWN 388,11998
#define ACPI_STATE_S0 390,12049
#define ACPI_STATE_S1 391,12096
#define ACPI_STATE_S2 392,12143
#define ACPI_STATE_S3 393,12190
#define ACPI_STATE_S4 394,12237
#define ACPI_STATE_S5 395,12284
#define ACPI_S_STATES_MAX 396,12331
#define ACPI_S_STATE_COUNT 397,12385
#define ACPI_STATE_D0 399,12428
#define ACPI_STATE_D1 400,12475
#define ACPI_STATE_D2 401,12522
#define ACPI_STATE_D3 402,12569
#define ACPI_D_STATES_MAX 403,12616
#define ACPI_D_STATE_COUNT 404,12670
#define ACPI_STATE_C0 406,12713
#define ACPI_STATE_C1 407,12760
#define ACPI_STATE_C2 408,12807
#define ACPI_STATE_C3 409,12854
#define ACPI_C_STATES_MAX 410,12901
#define ACPI_C_STATE_COUNT 411,12955
#define ACPI_SLEEP_TYPE_MAX 416,13033
#define ACPI_SLEEP_TYPE_INVALID 417,13077
#define ACPI_NOTIFY_BUS_CHECK 422,13156
#define ACPI_NOTIFY_DEVICE_CHECK 423,13203
#define ACPI_NOTIFY_DEVICE_WAKE 424,13250
#define ACPI_NOTIFY_EJECT_REQUEST 425,13297
#define ACPI_NOTIFY_DEVICE_CHECK_LIGHT 426,13344
#define ACPI_NOTIFY_FREQUENCY_MISMATCH 427,13391
#define ACPI_NOTIFY_BUS_MODE_MISMATCH 428,13438
#define ACPI_NOTIFY_POWER_FAULT 429,13485
typedef u32 acpi_object_type;440,13909
#define ACPI_TYPE_ANY 442,13940
#define ACPI_TYPE_INTEGER 443,13985
#define ACPI_TYPE_STRING 444,14066
#define ACPI_TYPE_BUFFER 445,14111
#define ACPI_TYPE_PACKAGE 446,14156
#define ACPI_TYPE_FIELD_UNIT 447,14258
#define ACPI_TYPE_DEVICE 448,14303
#define ACPI_TYPE_EVENT 449,14374
#define ACPI_TYPE_METHOD 450,14419
#define ACPI_TYPE_MUTEX 451,14502
#define ACPI_TYPE_REGION 452,14547
#define ACPI_TYPE_POWER 453,14592
#define ACPI_TYPE_PROCESSOR 454,14681
#define ACPI_TYPE_THERMAL 455,14782
#define ACPI_TYPE_BUFFER_FIELD 456,14853
#define ACPI_TYPE_DDB_HANDLE 457,14898
#define ACPI_TYPE_DEBUG_OBJECT 458,14943
#define ACPI_TYPE_EXTERNAL_MAX 460,14989
#define ACPI_TYPE_LOCAL_REGION_FIELD 469,15393
#define ACPI_TYPE_LOCAL_BANK_FIELD 470,15438
#define ACPI_TYPE_LOCAL_INDEX_FIELD 471,15483
#define ACPI_TYPE_LOCAL_REFERENCE 472,15528
#define ACPI_TYPE_LOCAL_ALIAS 473,15620
#define ACPI_TYPE_LOCAL_METHOD_ALIAS 474,15665
#define ACPI_TYPE_LOCAL_NOTIFY 475,15710
#define ACPI_TYPE_LOCAL_ADDRESS_HANDLER 476,15755
#define ACPI_TYPE_LOCAL_RESOURCE 477,15800
#define ACPI_TYPE_LOCAL_RESOURCE_FIELD 478,15845
#define ACPI_TYPE_LOCAL_SCOPE 479,15890
#define ACPI_TYPE_NS_NODE_MAX 481,15977
#define ACPI_TYPE_LOCAL_EXTRA 487,16185
#define ACPI_TYPE_LOCAL_DATA 488,16230
#define ACPI_TYPE_LOCAL_MAX 490,16276
#define ACPI_TYPE_INVALID 494,16362
#define ACPI_TYPE_NOT_FOUND 495,16407
#define ACPI_READ 500,16471
#define ACPI_WRITE 501,16513
#define ACPI_IO_MASK 502,16555
typedef u32 acpi_event_type;507,16645
#define ACPI_EVENT_PMTIMER 512,16698
#define ACPI_EVENT_GLOBAL 513,16740
#define ACPI_EVENT_POWER_BUTTON 514,16782
#define ACPI_EVENT_SLEEP_BUTTON 515,16824
#define ACPI_EVENT_RTC 516,16866
#define ACPI_EVENT_MAX 517,16908
#define ACPI_NUM_FIXED_EVENTS 518,16950
typedef u32 acpi_event_status;535,17474
#define ACPI_EVENT_FLAG_DISABLED 537,17506
#define ACPI_EVENT_FLAG_ENABLED 538,17571
#define ACPI_EVENT_FLAG_WAKE_ENABLED 539,17636
#define ACPI_EVENT_FLAG_SET 540,17701
#define ACPI_GPE_INVALID 545,17806
#define ACPI_GPE_MAX 546,17851
#define ACPI_NUM_GPE 547,17896
#define ACPI_GPE_ENABLE 549,17941
#define ACPI_GPE_DISABLE 550,17983
#define ACPI_GPE_XRUPT_TYPE_MASK 565,18417
#define ACPI_GPE_LEVEL_TRIGGERED 566,18467
#define ACPI_GPE_EDGE_TRIGGERED 567,18517
#define ACPI_GPE_TYPE_MASK 569,18568
#define ACPI_GPE_TYPE_WAKE_RUN 570,18618
#define ACPI_GPE_TYPE_WAKE 571,18668
#define ACPI_GPE_TYPE_RUNTIME 572,18718
#define ACPI_GPE_DISPATCH_MASK 574,18783
#define ACPI_GPE_DISPATCH_HANDLER 575,18833
#define ACPI_GPE_DISPATCH_METHOD 576,18883
#define ACPI_GPE_DISPATCH_NOT_USED 577,18933
#define ACPI_GPE_RUN_ENABLE_MASK 579,18998
#define ACPI_GPE_RUN_ENABLED 580,19048
#define ACPI_GPE_RUN_DISABLED 581,19098
#define ACPI_GPE_WAKE_ENABLE_MASK 583,19163
#define ACPI_GPE_WAKE_ENABLED 584,19213
#define ACPI_GPE_WAKE_DISABLED 585,19263
#define ACPI_GPE_ENABLE_MASK 587,19328
#define ACPI_EVENT_WAKE_ENABLE 592,19443
#define ACPI_EVENT_WAKE_DISABLE 593,19509
#define ACPI_NOT_ISR 595,19577
#define ACPI_ISR 596,19621
#define ACPI_SYSTEM_NOTIFY 600,19686
#define ACPI_DEVICE_NOTIFY 601,19730
#define ACPI_ALL_NOTIFY 602,19774
#define ACPI_MAX_NOTIFY_HANDLER_TYPE 603,19818
#define ACPI_MAX_SYS_NOTIFY 605,19863
typedef u8 acpi_adr_space_type;609,19955
#define ACPI_ADR_SPACE_SYSTEM_MEMORY 611,19988
#define ACPI_ADR_SPACE_SYSTEM_IO 612,20052
#define ACPI_ADR_SPACE_PCI_CONFIG 613,20116
#define ACPI_ADR_SPACE_EC 614,20180
#define ACPI_ADR_SPACE_SMBUS 615,20244
#define ACPI_ADR_SPACE_CMOS 616,20308
#define ACPI_ADR_SPACE_PCI_BAR_TARGET 617,20372
#define ACPI_ADR_SPACE_DATA_TABLE 618,20436
#define ACPI_ADR_SPACE_FIXED_HARDWARE 619,20500
#define ACPI_BITREG_TIMER_STATUS 625,20656
#define ACPI_BITREG_BUS_MASTER_STATUS 626,20709
#define ACPI_BITREG_GLOBAL_LOCK_STATUS 627,20762
#define ACPI_BITREG_POWER_BUTTON_STATUS 628,20815
#define ACPI_BITREG_SLEEP_BUTTON_STATUS 629,20868
#define ACPI_BITREG_RT_CLOCK_STATUS 630,20921
#define ACPI_BITREG_WAKE_STATUS 631,20974
#define ACPI_BITREG_PCIEXP_WAKE_STATUS 632,21027
#define ACPI_BITREG_TIMER_ENABLE 634,21081
#define ACPI_BITREG_GLOBAL_LOCK_ENABLE 635,21134
#define ACPI_BITREG_POWER_BUTTON_ENABLE 636,21187
#define ACPI_BITREG_SLEEP_BUTTON_ENABLE 637,21240
#define ACPI_BITREG_RT_CLOCK_ENABLE 638,21293
#define ACPI_BITREG_WAKE_ENABLE 639,21346
#define ACPI_BITREG_PCIEXP_WAKE_DISABLE 640,21399
#define ACPI_BITREG_SCI_ENABLE 642,21453
#define ACPI_BITREG_BUS_MASTER_RLD 643,21506
#define ACPI_BITREG_GLOBAL_LOCK_RELEASE 644,21559
#define ACPI_BITREG_SLEEP_TYPE_A 645,21612
#define ACPI_BITREG_SLEEP_TYPE_B 646,21665
#define ACPI_BITREG_SLEEP_ENABLE 647,21718
#define ACPI_BITREG_ARB_DISABLE 649,21772
#define ACPI_BITREG_MAX 651,21826
#define ACPI_NUM_BITREG 652,21879
union acpi_object 657,21990
	acpi_object_type type;658,22010
		acpi_object_type type;660,22092
		acpi_integer value;661,22117
	} integer;662,22163
		acpi_object_type type;665,22186
		u32 length;666,22211
		char *pointer;pointer667,22277
	} string;668,22327
		acpi_object_type type;671,22349
		u32 length;672,22374
		u8 *pointer;pointer673,22415
	} buffer;674,22457
		acpi_object_type type;677,22479
		u32 fill1;678,22504
		acpi_handle handle;679,22517
	} reference;680,22562
		acpi_object_type type;683,22587
		u32 count;684,22612
		union acpi_object *elements;elements685,22656
	} package;686,22729
		acpi_object_type type;689,22752
		u32 proc_id;690,22777
		acpi_io_address pblk_address;691,22792
		u32 pblk_length;692,22824
	} processor;693,22843
		acpi_object_type type;696,22868
		u32 system_level;697,22893
		u32 resource_order;698,22913
	} power_resource;699,22935
struct acpi_object_list 705,23040
	u32 count;706,23066
	union acpi_object *pointer;pointer707,23078
#define ACPI_NO_BUFFER 713,23181
#define ACPI_ALLOCATE_BUFFER 714,23219
#define ACPI_ALLOCATE_LOCAL_BUFFER 715,23272
struct acpi_buffer 717,23326
	acpi_size length;718,23347
	void *pointer;pointer719,23402
#define ACPI_FULL_PATHNAME 725,23485
#define ACPI_SINGLE_NAME 726,23527
#define ACPI_NAME_TYPE_MAX 727,23569
#define ACPI_SYS_MODE_UNKNOWN 732,23667
#define ACPI_SYS_MODE_ACPI 733,23714
#define ACPI_SYS_MODE_LEGACY 734,23761
#define ACPI_SYS_MODES_MASK 735,23808
struct acpi_system_info 740,23913
	u32 acpi_ca_version;741,23939
	u32 flags;742,23961
	u32 timer_resolution;743,23973
	u32 reserved1;744,23996
	u32 reserved2;745,24012
	u32 debug_level;746,24028
	u32 debug_layer;747,24046
typedef u32(ACPI_SYSTEM_XFACE * acpi_osd_handler)753,24122
 (ACPI_SYSTEM_XFACE * acpi_osd_exec_callback)756,24203
typedef u32(*acpi_event_handler)acpi_event_handler761,24318
void (*acpi_notify_handler)acpi_notify_handler764,24377
void (*acpi_object_handler)acpi_object_handler767,24462
typedef acpi_status(*acpi_init_handler)acpi_init_handler769,24539
#define ACPI_INIT_DEVICE_INI 771,24616
acpi_status(*acpi_exception_handler)acpi_exception_handler774,24663
acpi_status(*acpi_adr_space_handler)acpi_adr_space_handler782,24870
#define ACPI_DEFAULT_HANDLER 789,25087
acpi_status(*acpi_adr_space_setup)acpi_adr_space_setup792,25141
#define ACPI_REGION_ACTIVATE 797,25290
#define ACPI_REGION_DEACTIVATE 798,25324
acpi_status(*acpi_walk_callback)acpi_walk_callback801,25367
#define ACPI_INTERRUPT_NOT_HANDLED 807,25533
#define ACPI_INTERRUPT_HANDLED 808,25578
struct acpica_device_id 812,25677
	char value[value813,25703
struct acpi_compatible_id 818,25787
	char value[value819,25815
struct acpi_compatible_id_list 822,25853
	u32 count;823,25886
	u32 size;824,25898
	struct acpi_compatible_id id[id825,25909
#define ACPI_VALID_STA 830,25999
#define ACPI_VALID_ADR 831,26046
#define ACPI_VALID_HID 832,26093
#define ACPI_VALID_UID 833,26140
#define ACPI_VALID_CID 834,26187
#define ACPI_VALID_SXDS 835,26234
#define ACPI_STA_DEVICE_PRESENT 839,26311
#define ACPI_STA_DEVICE_ENABLED 840,26356
#define ACPI_STA_DEVICE_UI 841,26401
#define ACPI_STA_DEVICE_FUNCTIONING 842,26446
#define ACPI_STA_DEVICE_OK 843,26491
#define ACPI_STA_BATTERY_PRESENT 844,26550
#define ACPI_COMMON_OBJ_INFO 846,26596
struct acpi_obj_info_header 850,26763
	ACPI_COMMON_OBJ_INFO;851,26793
struct acpi_device_info 856,26867
	ACPI_COMMON_OBJ_INFO;857,26893
	u32 valid;859,26917
	u32 current_status;860,26975
	acpi_integer address;861,27013
	struct acpica_device_id hardware_id;862,27060
	struct acpica_device_id unique_id;863,27122
	u8 highest_dstates[highest_dstates864,27182
	struct acpi_compatible_id_list compatibility_id;865,27251
struct acpi_pci_id 870,27382
	u16 segment;871,27403
	u16 bus;872,27417
	u16 device;873,27427
	u16 function;874,27440
struct acpi_mem_space_context 877,27459
	u32 length;878,27491
	acpi_physical_address address;879,27504
	acpi_physical_address mapped_physical_address;880,27536
	u8 *mapped_logical_address;mapped_logical_address881,27584
	acpi_size mapped_length;882,27613
typedef u16 acpi_rs_length;888,27689
typedef u32 acpi_rsdesc_size;889,27765
#define ACPI_READ_ONLY_MEMORY 894,27887
#define ACPI_READ_WRITE_MEMORY 895,27937
#define ACPI_NON_CACHEABLE_MEMORY 897,27988
#define ACPI_CACHABLE_MEMORY 898,28038
#define ACPI_WRITE_COMBINING_MEMORY 899,28088
#define ACPI_PREFETCHABLE_MEMORY 900,28138
#define ACPI_NON_ISA_ONLY_RANGES 907,28382
#define ACPI_ISA_ONLY_RANGES 908,28432
#define ACPI_ENTIRE_RANGE 909,28482
#define ACPI_SPARSE_TRANSLATION 913,28620
#define ACPI_DECODE_10 918,28708
#define ACPI_DECODE_16 919,28789
#define ACPI_LEVEL_SENSITIVE 924,28897
#define ACPI_EDGE_SENSITIVE 925,28947
#define ACPI_ACTIVE_HIGH 927,28998
#define ACPI_ACTIVE_LOW 928,29048
#define ACPI_EXCLUSIVE 930,29099
#define ACPI_SHARED 931,29149
#define ACPI_COMPATIBILITY 936,29226
#define ACPI_TYPE_A 937,29276
#define ACPI_TYPE_B 938,29326
#define ACPI_TYPE_F 939,29376
#define ACPI_NOT_BUS_MASTER 941,29427
#define ACPI_BUS_MASTER 942,29477
#define ACPI_TRANSFER_8 944,29528
#define ACPI_TRANSFER_8_16 945,29578
#define ACPI_TRANSFER_16 946,29628
#define ACPI_GOOD_CONFIGURATION 951,29736
#define ACPI_ACCEPTABLE_CONFIGURATION 952,29786
#define ACPI_SUB_OPTIMAL_CONFIGURATION 953,29836
#define ACPI_MEMORY_RANGE 958,29950
#define ACPI_IO_RANGE 959,30000
#define ACPI_BUS_NUMBER_RANGE 960,30050
#define ACPI_ADDRESS_NOT_FIXED 962,30101
#define ACPI_ADDRESS_FIXED 963,30151
#define ACPI_POS_DECODE 965,30202
#define ACPI_SUB_DECODE 966,30252
#define ACPI_PRODUCER 968,30303
#define ACPI_CONSUMER 969,30353
struct acpi_uuid 980,30614
	u8 data[data981,30633
struct acpi_vendor_uuid 984,30665
	u8 subtype;985,30691
	u8 data[data986,30704
struct acpi_resource_irq 992,30792
	u8 triggering;993,30819
	u8 polarity;994,30835
	u8 sharable;995,30849
	u8 interrupt_count;996,30863
	u8 interrupts[interrupts997,30884
struct acpi_resource_dma 1000,30907
	u8 type;1001,30934
	u8 bus_master;1002,30944
	u8 transfer;1003,30960
	u8 channel_count;1004,30974
	u8 channels[channels1005,30993
struct acpi_resource_start_dependent 1008,31014
	u8 compatibility_priority;1009,31053
	u8 performance_robustness;1010,31081
struct acpi_resource_io 1018,31206
	u8 io_decode;1019,31232
	u8 alignment;1020,31247
	u8 address_length;1021,31262
	u16 minimum;1022,31282
	u16 maximum;1023,31296
struct acpi_resource_fixed_io 1026,31314
	u16 address;1027,31346
	u8 address_length;1028,31360
struct acpi_resource_vendor 1031,31384
	u16 byte_length;1032,31414
	u8 byte_data[byte_data1033,31432
struct acpi_resource_vendor_typed 1038,31517
	u16 byte_length;1039,31553
	u8 uuid_subtype;1040,31571
	u8 uuid[uuid1041,31589
	u8 byte_data[byte_data1042,31617
struct acpi_resource_end_tag 1045,31639
	u8 checksum;1046,31670
struct acpi_resource_memory24 1049,31688
	u8 write_protect;1050,31720
	u16 minimum;1051,31739
	u16 maximum;1052,31753
	u16 alignment;1053,31767
	u16 address_length;1054,31783
struct acpi_resource_memory32 1057,31808
	u8 write_protect;1058,31840
	u32 minimum;1059,31859
	u32 maximum;1060,31873
	u32 alignment;1061,31887
	u32 address_length;1062,31903
struct acpi_resource_fixed_memory32 1065,31928
	u8 write_protect;1066,31966
	u32 address;1067,31985
	u32 address_length;1068,31999
struct acpi_memory_attribute 1071,32024
	u8 write_protect;1072,32055
	u8 caching;1073,32074
	u8 range_type;1074,32087
	u8 translation;1075,32103
struct acpi_io_attribute 1078,32124
	u8 range_type;1079,32151
	u8 translation;1080,32167
	u8 translation_type;1081,32184
	u8 reserved1;1082,32206
union acpi_resource_attribute 1085,32225
	struct acpi_memory_attribute mem;1086,32257
	struct acpi_io_attribute io;1087,32292
	u8 type_specific;1091,32363
struct acpi_resource_source 1094,32386
	u8 index;1095,32416
	u16 string_length;1096,32427
	char *string_ptr;string_ptr1097,32447
#define ACPI_RESOURCE_ADDRESS_COMMON 1102,32532
struct acpi_resource_address 1110,32866
ACPI_RESOURCE_ADDRESS_COMMON}ACPI_RESOURCE_ADDRESS_COMMON1111,32897
struct acpi_resource_address16 1113,32929
	ACPI_RESOURCE_ADDRESS_COMMON u16 granularity;1114,32962
	u16 minimum;1115,33009
	u16 maximum;1116,33023
	u16 translation_offset;1117,33037
	u16 address_length;1118,33062
	struct acpi_resource_source resource_source;1119,33083
struct acpi_resource_address32 1122,33133
	ACPI_RESOURCE_ADDRESS_COMMON u32 granularity;1123,33166
	u32 minimum;1124,33213
	u32 maximum;1125,33227
	u32 translation_offset;1126,33241
	u32 address_length;1127,33266
	struct acpi_resource_source resource_source;1128,33287
struct acpi_resource_address64 1131,33337
	ACPI_RESOURCE_ADDRESS_COMMON u64 granularity;1132,33370
	u64 minimum;1133,33417
	u64 maximum;1134,33431
	u64 translation_offset;1135,33445
	u64 address_length;1136,33470
	struct acpi_resource_source resource_source;1137,33491
struct acpi_resource_extended_address64 1140,33541
	ACPI_RESOURCE_ADDRESS_COMMON u8 revision_iD;1141,33583
	u64 granularity;1142,33629
	u64 minimum;1143,33647
	u64 maximum;1144,33661
	u64 translation_offset;1145,33675
	u64 address_length;1146,33700
	u64 type_specific;1147,33721
struct acpi_resource_extended_irq 1150,33745
	u8 producer_consumer;1151,33781
	u8 triggering;1152,33804
	u8 polarity;1153,33820
	u8 sharable;1154,33834
	u8 interrupt_count;1155,33848
	struct acpi_resource_source resource_source;1156,33869
	u32 interrupts[interrupts1157,33915
struct acpi_resource_generic_register 1160,33939
	u8 space_id;1161,33979
	u8 bit_width;1162,33993
	u8 bit_offset;1163,34008
	u8 access_size;1164,34024
	u64 address;1165,34041
#define ACPI_RESOURCE_TYPE_IRQ 1170,34086
#define ACPI_RESOURCE_TYPE_DMA 1171,34136
#define ACPI_RESOURCE_TYPE_START_DEPENDENT 1172,34186
#define ACPI_RESOURCE_TYPE_END_DEPENDENT 1173,34236
#define ACPI_RESOURCE_TYPE_IO 1174,34286
#define ACPI_RESOURCE_TYPE_FIXED_IO 1175,34336
#define ACPI_RESOURCE_TYPE_VENDOR 1176,34386
#define ACPI_RESOURCE_TYPE_END_TAG 1177,34436
#define ACPI_RESOURCE_TYPE_MEMORY24 1178,34486
#define ACPI_RESOURCE_TYPE_MEMORY32 1179,34536
#define ACPI_RESOURCE_TYPE_FIXED_MEMORY32 1180,34586
#define ACPI_RESOURCE_TYPE_ADDRESS16 1181,34637
#define ACPI_RESOURCE_TYPE_ADDRESS32 1182,34688
#define ACPI_RESOURCE_TYPE_ADDRESS64 1183,34739
#define ACPI_RESOURCE_TYPE_EXTENDED_ADDRESS64 1184,34790
#define ACPI_RESOURCE_TYPE_EXTENDED_IRQ 1185,34856
#define ACPI_RESOURCE_TYPE_GENERIC_REGISTER 1186,34907
#define ACPI_RESOURCE_TYPE_MAX 1187,34958
union acpi_resource_data 1189,35010
	struct acpi_resource_irq irq;1190,35037
	struct acpi_resource_dma dma;1191,35068
	struct acpi_resource_start_dependent start_dpf;1192,35099
	struct acpi_resource_io io;1193,35148
	struct acpi_resource_fixed_io fixed_io;1194,35177
	struct acpi_resource_vendor vendor;1195,35218
	struct acpi_resource_vendor_typed vendor_typed;1196,35255
	struct acpi_resource_end_tag end_tag;1197,35304
	struct acpi_resource_memory24 memory24;1198,35343
	struct acpi_resource_memory32 memory32;1199,35384
	struct acpi_resource_fixed_memory32 fixed_memory32;1200,35425
	struct acpi_resource_address16 address16;1201,35478
	struct acpi_resource_address32 address32;1202,35521
	struct acpi_resource_address64 address64;1203,35564
	struct acpi_resource_extended_address64 ext_address64;1204,35607
	struct acpi_resource_extended_irq extended_irq;1205,35663
	struct acpi_resource_generic_register generic_reg;1206,35712
	struct acpi_resource_address address;1210,35787
struct acpi_resource 1213,35867
	u32 type;1214,35890
	u32 length;1215,35901
	union acpi_resource_data data;1216,35914
#define ACPI_RS_SIZE_MIN 1223,35999
#define ACPI_RS_SIZE_NO_DATA 1224,36046
#define ACPI_RS_SIZE(1225,36117
#define ACPI_NEXT_RESOURCE(1227,36207
struct acpi_pci_routing_table 1229,36303
	u32 length;1230,36335
	u32 pin;1231,36348
	acpi_integer address;1232,36358
	u32 source_index;1233,36413
	char source[source1234,36432

xen/include/acpi/acpi_drivers.h,536
#define __ACPI_DRIVERS_H__27,1108
#define ACPI_MAX_STRING	33,1187
#define ACPI_BUS_COMPONENT	35,1217
#define ACPI_SYSTEM_COMPONENT	36,1256
#define ACPI_POWER_HID	40,1323
#define ACPI_PROCESSOR_HID	41,1359
#define ACPI_SYSTEM_HID	42,1398
#define ACPI_THERMAL_HID	43,1435
#define ACPI_BUTTON_HID_POWERF	44,1472
#define ACPI_BUTTON_HID_SLEEPF	45,1515
#define ACPI_PCI_COMPONENT	54,1787
#define ACPI_PROCESSOR_LIMIT_NONE	104,3580
#define ACPI_PROCESSOR_LIMIT_INCREMENT	105,3619
#define ACPI_PROCESSOR_LIMIT_DECREMENT	106,3663

xen/include/acpi/acnamesp.h,582
#define __ACNAMESP_H__45,2138
#define ACPI_NS_ALL 49,2227
#define ACPI_NS_NORMAL 55,2402
#define ACPI_NS_NEWSCOPE 56,2440
#define ACPI_NS_LOCAL 57,2529
#define ACPI_NS_NO_UPSEARCH 61,2668
#define ACPI_NS_SEARCH_PARENT 62,2706
#define ACPI_NS_DONT_OPEN_SCOPE 63,2747
#define ACPI_NS_NO_PEER_SEARCH 64,2788
#define ACPI_NS_ERROR_IF_FOUND 65,2829
#define ACPI_NS_PREFIX_IS_SCOPE 66,2870
#define ACPI_NS_EXTERNAL 67,2911
#define ACPI_NS_TEMPORARY 68,2952
#define ACPI_NS_WALK_NO_UNLOCK 72,3034
#define ACPI_NS_WALK_UNLOCK 73,3072
#define ACPI_NS_WALK_TEMP_NODES 74,3113

xen/include/acpi/acoutput.h,2925
#define __ACOUTPUT_H__45,2109
#define ACPI_UTILITIES 55,2382
#define ACPI_HARDWARE 56,2429
#define ACPI_EVENTS 57,2476
#define ACPI_TABLES 58,2523
#define ACPI_NAMESPACE 59,2570
#define ACPI_PARSER 60,2617
#define ACPI_DISPATCHER 61,2664
#define ACPI_EXECUTER 62,2711
#define ACPI_RESOURCES 63,2758
#define ACPI_CA_DEBUGGER 64,2805
#define ACPI_OS_SERVICES 65,2852
#define ACPI_CA_DISASSEMBLER 66,2899
#define ACPI_COMPILER 70,2997
#define ACPI_TOOLS 71,3044
#define ACPI_ALL_COMPONENTS 73,3092
#define ACPI_COMPONENT_DEFAULT 74,3139
#define ACPI_ALL_DRIVERS 78,3245
#define ACPI_LV_ERROR 83,3371
#define ACPI_LV_WARN 84,3418
#define ACPI_LV_INIT 85,3465
#define ACPI_LV_DEBUG_OBJECT 86,3512
#define ACPI_LV_INFO 87,3559
#define ACPI_LV_ALL_EXCEPTIONS 88,3606
#define ACPI_LV_INIT_NAMES 92,3708
#define ACPI_LV_PARSE 93,3755
#define ACPI_LV_LOAD 94,3802
#define ACPI_LV_DISPATCH 95,3849
#define ACPI_LV_EXEC 96,3896
#define ACPI_LV_NAMES 97,3943
#define ACPI_LV_OPREGION 98,3990
#define ACPI_LV_BFIELD 99,4037
#define ACPI_LV_TABLES 100,4084
#define ACPI_LV_VALUES 101,4131
#define ACPI_LV_OBJECTS 102,4178
#define ACPI_LV_RESOURCES 103,4225
#define ACPI_LV_USER_REQUESTS 104,4272
#define ACPI_LV_PACKAGE 105,4319
#define ACPI_LV_VERBOSITY1 106,4366
#define ACPI_LV_ALLOCATIONS 110,4511
#define ACPI_LV_FUNCTIONS 111,4558
#define ACPI_LV_OPTIMIZATIONS 112,4605
#define ACPI_LV_VERBOSITY2 113,4652
#define ACPI_LV_ALL 114,4720
#define ACPI_LV_MUTEX 118,4840
#define ACPI_LV_THREADS 119,4887
#define ACPI_LV_IO 120,4934
#define ACPI_LV_INTERRUPTS 121,4981
#define ACPI_LV_VERBOSITY3 122,5028
#define ACPI_LV_AML_DISASSEMBLE 126,5174
#define ACPI_LV_VERBOSE_INFO 127,5221
#define ACPI_LV_FULL_TABLES 128,5268
#define ACPI_LV_EVENTS 129,5315
#define ACPI_LV_VERBOSE 131,5363
#define ACPI_DEBUG_LEVEL(136,5480
#define ACPI_DB_INIT 140,5606
#define ACPI_DB_DEBUG_OBJECT 141,5674
#define ACPI_DB_INFO 142,5750
#define ACPI_DB_ALL_EXCEPTIONS 143,5818
#define ACPI_DB_ERROR 150,6096
#define ACPI_DB_WARN 151,6165
#define ACPI_DB_INIT_NAMES 155,6293
#define ACPI_DB_THREADS 156,6367
#define ACPI_DB_PARSE 157,6438
#define ACPI_DB_DISPATCH 158,6507
#define ACPI_DB_LOAD 159,6579
#define ACPI_DB_EXEC 160,6647
#define ACPI_DB_NAMES 161,6715
#define ACPI_DB_OPREGION 162,6784
#define ACPI_DB_BFIELD 163,6856
#define ACPI_DB_TABLES 164,6926
#define ACPI_DB_FUNCTIONS 165,6996
#define ACPI_DB_OPTIMIZATIONS 166,7069
#define ACPI_DB_VALUES 167,7146
#define ACPI_DB_OBJECTS 168,7216
#define ACPI_DB_ALLOCATIONS 169,7287
#define ACPI_DB_RESOURCES 170,7362
#define ACPI_DB_IO 171,7435
#define ACPI_DB_INTERRUPTS 172,7501
#define ACPI_DB_USER_REQUESTS 173,7575
#define ACPI_DB_PACKAGE 174,7652
#define ACPI_DB_MUTEX 175,7723
#define ACPI_DB_ALL 177,7793
#define ACPI_DEBUG_DEFAULT 181,7911
#define ACPI_NORMAL_DEFAULT 182,7993
#define ACPI_DEBUG_ALL 183,8075

xen/include/acpi/apei.h,104
#define ACPI_APEI_H6,70
#define APEI_ERST_INVALID_RECORD_ID	11,136
#define FIX_APEI_RANGE_MAX 13,195

xen/include/acpi/actbl1.h,14090
#define __ACTBL1_H__45,2125
#define ACPI_SIG_ASF 60,2639
#define ACPI_SIG_BOOT 61,2712
#define ACPI_SIG_CPEP 62,2780
#define ACPI_SIG_ERST 63,2864
#define ACPI_SIG_DBGP 64,2943
#define ACPI_SIG_DMAR 65,3005
#define ACPI_SIG_ECDT 66,3070
#define ACPI_SIG_HPET 67,3156
#define ACPI_SIG_MADT 68,3234
#define ACPI_SIG_MCFG 69,3311
#define ACPI_SIG_SBST 70,3394
#define ACPI_SIG_SLIT 71,3473
#define ACPI_SIG_SPCR 72,3561
#define ACPI_SIG_SPMI 73,3644
#define ACPI_SIG_SRAT 74,3732
#define ACPI_SIG_TCPA 75,3808
#define ACPI_SIG_WDRT 76,3895
struct acpi_subtable_header 92,4381
	u8 type;93,4411
	u8 length;94,4421
struct acpi_whea_header 99,4495
	u8 action;100,4521
	u8 instruction;101,4533
	u8 flags;102,4550
	u8 reserved;103,4561
	struct acpi_generic_address register_region;104,4575
	u64 value;105,4621
	u64 mask;106,4688
struct acpi_table_asf 117,5073
	struct acpi_table_header header;118,5097
struct acpi_asf_header 123,5193
	u8 type;124,5218
	u8 reserved;125,5228
	u16 length;126,5242
enum acpi_asf_type 131,5294
	ACPI_ASF_TYPE_INFO 132,5315
	ACPI_ASF_TYPE_ALERT 133,5340
	ACPI_ASF_TYPE_CONTROL 134,5366
	ACPI_ASF_TYPE_BOOT 135,5394
	ACPI_ASF_TYPE_ADDRESS 136,5419
	ACPI_ASF_TYPE_RESERVED 137,5447
struct acpi_asf_info 146,5530
	struct acpi_asf_header header;147,5553
	u8 min_reset_value;148,5585
	u8 min_poll_interval;149,5606
	u16 system_id;150,5629
	u32 mfg_id;151,5645
	u8 flags;152,5658
	u8 reserved2[reserved2153,5669
struct acpi_asf_alert 158,5712
	struct acpi_asf_header header;159,5736
	u8 assert_mask;160,5768
	u8 deassert_mask;161,5785
	u8 alerts;162,5804
	u8 data_length;163,5816
struct acpi_asf_alert_data 166,5837
	u8 address;167,5866
	u8 command;168,5879
	u8 mask;169,5892
	u8 value;170,5902
	u8 sensor_type;171,5913
	u8 type;172,5930
	u8 offset;173,5940
	u8 source_type;174,5952
	u8 severity;175,5969
	u8 sensor_number;176,5983
	u8 entity;177,6002
	u8 instance;178,6014
struct acpi_asf_remote 183,6061
	struct acpi_asf_header header;184,6086
	u8 controls;185,6118
	u8 data_length;186,6132
	u16 reserved2;187,6149
struct acpi_asf_control_data 190,6169
	u8 function;191,6200
	u8 address;192,6214
	u8 command;193,6227
	u8 value;194,6240
struct acpi_asf_rmcp 199,6287
	struct acpi_asf_header header;200,6310
	u8 capabilities[capabilities201,6342
	u8 completion_code;202,6363
	u32 enterprise_id;203,6384
	u8 command;204,6404
	u16 parameter;205,6417
	u16 boot_options;206,6433
	u16 oem_parameters;207,6452
struct acpi_asf_address 212,6499
	struct acpi_asf_header header;213,6525
	u8 eprom_address;214,6557
	u8 devices;215,6576
struct acpi_table_boot 224,6795
	struct acpi_table_header header;225,6820
	u8 cmos_index;226,6885
	u8 reserved[reserved227,6948
struct acpi_table_cpep 236,7187
	struct acpi_table_header header;237,7212
	u64 reserved;238,7277
struct acpi_cpep_polling 243,7312
	u8 type;244,7339
	u8 length;245,7349
	u8 id;246,7361
	u8 eid;247,7390
	u32 interval;248,7421
struct acpi_table_dbgp 257,7667
	struct acpi_table_header header;258,7692
	u8 type;259,7757
	u8 reserved[reserved260,7806
	struct acpi_generic_address debug_port;261,7823
struct acpi_table_dmar 270,8067
	struct acpi_table_header header;271,8092
	u8 width;272,8157
	u8 flags;273,8194
	u8 reserved[reserved274,8205
struct acpi_dmar_header 279,8255
	u16 type;280,8281
	u16 length;281,8292
enum acpi_dmar_type 286,8368
	ACPI_DMAR_TYPE_HARDWARE_UNIT 287,8390
	ACPI_DMAR_TYPE_RESERVED_MEMORY 288,8425
	ACPI_DMAR_TYPE_ATSR 289,8462
	ACPI_DMAR_TYPE_RESERVED 290,8488
struct acpi_dmar_device_scope 293,8554
	u8 entry_type;294,8586
	u8 length;295,8602
	u16 reserved;296,8614
	u8 enumeration_id;297,8629
	u8 bus;298,8649
enum acpi_dmar_scope_type 303,8724
	ACPI_DMAR_SCOPE_TYPE_NOT_USED 304,8752
	ACPI_DMAR_SCOPE_TYPE_ENDPOINT 305,8788
	ACPI_DMAR_SCOPE_TYPE_BRIDGE 306,8824
	ACPI_DMAR_SCOPE_TYPE_IOAPIC 307,8858
	ACPI_DMAR_SCOPE_TYPE_HPET 308,8892
	ACPI_DMAR_SCOPE_TYPE_RESERVED 309,8924
struct acpi_dmar_pci_path 312,8996
	u8 dev;313,9024
	u8 fn;314,9033
struct acpi_dmar_hardware_unit 323,9154
	struct acpi_dmar_header header;324,9187
	u8 flags;325,9220
	u8 reserved;326,9231
	u16 segment;327,9245
	u64 address;328,9259
#define ACPI_DMAR_INCLUDE_ALL 333,9319
struct acpi_dmar_reserved_memory 337,9399
	struct acpi_dmar_header header;338,9434
	u16 reserved;339,9467
	u16 segment;340,9482
	u64 base_address;341,9496
	u64 end_address;342,9547
#define ACPI_DMAR_ALLOW_ALL 347,9614
struct acpi_table_ecdt 355,9875
	struct acpi_table_header header;356,9900
	struct acpi_generic_address control;357,9965
	struct acpi_generic_address data;358,10047
	u32 uid;359,10116
	u8 gpe;360,10180
	u8 id[id361,10216
struct acpi_table_erst 371,10527
	struct acpi_table_header header;372,10552
	u32 header_length;373,10624
	u32 reserved;374,10644
	u32 entries;375,10659
struct acpi_erst_entry 380,10721
	struct acpi_whea_header whea_header;381,10746
#define ACPI_ERST_PRESERVE 386,10862
enum acpi_erst_actions 390,10940
	ACPI_ERST_BEGIN_WRITE 391,10965
	ACPI_ERST_BEGIN_READ 392,10993
	ACPI_ERST_BEGIN_CLEAR 393,11020
	ACPI_ERST_END 394,11048
	ACPI_ERST_SET_RECORD_OFFSET 395,11068
	ACPI_ERST_EXECUTE_OPERATION 396,11102
	ACPI_ERST_CHECK_BUSY_STATUS 397,11136
	ACPI_ERST_GET_COMMAND_STATUS 398,11170
	ACPI_ERST_GET_RECORD_ID 399,11205
	ACPI_ERST_SET_RECORD_ID 400,11235
	ACPI_ERST_GET_RECORD_COUNT 401,11265
	ACPI_ERST_BEGIN_DUMMY_WRIITE 402,11299
	ACPI_ERST_NOT_USED 403,11335
	ACPI_ERST_GET_ERROR_RANGE 404,11361
	ACPI_ERST_GET_ERROR_LENGTH 405,11394
	ACPI_ERST_GET_ERROR_ATTRIBUTES 406,11428
	ACPI_ERST_ACTION_RESERVED 407,11466
enum acpi_erst_instructions 412,11579
	ACPI_ERST_READ_REGISTER 413,11609
	ACPI_ERST_READ_REGISTER_VALUE 414,11639
	ACPI_ERST_WRITE_REGISTER 415,11675
	ACPI_ERST_WRITE_REGISTER_VALUE 416,11706
	ACPI_ERST_NOOP 417,11743
	ACPI_ERST_LOAD_VAR1 418,11764
	ACPI_ERST_LOAD_VAR2 419,11790
	ACPI_ERST_STORE_VAR1 420,11816
	ACPI_ERST_ADD 421,11843
	ACPI_ERST_SUBTRACT 422,11863
	ACPI_ERST_ADD_VALUE 423,11888
	ACPI_ERST_SUBTRACT_VALUE 424,11915
	ACPI_ERST_STALL 425,11947
	ACPI_ERST_STALL_WHILE_TRUE 426,11970
	ACPI_ERST_SKIP_NEXT_IF_TRUE 427,12004
	ACPI_ERST_GOTO 428,12039
	ACPI_ERST_SET_SRC_ADDRESS_BASE 429,12061
	ACPI_ERST_SET_DST_ADDRESS_BASE 430,12099
	ACPI_ERST_MOVE_DATA 431,12137
	ACPI_ERST_INSTRUCTION_RESERVED 432,12164
enum acpi_erst_command_status 437,12279
	ACPI_ERST_SUCESS 438,12311
	ACPI_ERST_NO_SPACE 439,12334
	ACPI_ERST_NOT_AVAILABLE 440,12359
	ACPI_ERST_FAILURE 441,12389
	ACPI_ERST_RECORD_EMPTY 442,12413
	ACPI_ERST_NOT_FOUND 443,12442
	ACPI_ERST_STATUS_RESERVED 444,12468
struct acpi_erst_info 449,12584
	u16 signature;450,12608
	u8 data[data451,12654
struct acpi_table_hpet 460,12884
	struct acpi_table_header header;461,12909
	u32 id;462,12974
	struct acpi_generic_address address;463,13024
	u8 sequence;464,13097
	u16 minimum_tick;465,13139
	u8 flags;466,13201
#define ACPI_HPET_PAGE_PROTECT 471,13230
#define ACPI_HPET_PAGE_PROTECT_4 472,13299
#define ACPI_HPET_PAGE_PROTECT_64 473,13371
struct acpi_table_madt 483,13698
	struct acpi_table_header header;484,13723
	u32 address;485,13788
	u32 flags;486,13840
#define ACPI_MADT_PCAT_COMPAT 491,13869
#define ACPI_MADT_DUAL_PIC 495,13984
#define ACPI_MADT_MULTIPLE_APIC 496,14022
enum acpi_madt_type 500,14124
	ACPI_MADT_TYPE_LOCAL_APIC 501,14146
	ACPI_MADT_TYPE_IO_APIC 502,14178
	ACPI_MADT_TYPE_INTERRUPT_OVERRIDE 503,14207
	ACPI_MADT_TYPE_NMI_SOURCE 504,14247
	ACPI_MADT_TYPE_LOCAL_APIC_NMI 505,14279
	ACPI_MADT_TYPE_LOCAL_APIC_OVERRIDE 506,14315
	ACPI_MADT_TYPE_IO_SAPIC 507,14356
	ACPI_MADT_TYPE_LOCAL_SAPIC 508,14386
	ACPI_MADT_TYPE_INTERRUPT_SOURCE 509,14419
	ACPI_MADT_TYPE_LOCAL_X2APIC 510,14457
	ACPI_MADT_TYPE_LOCAL_X2APIC_NMI 511,14491
	ACPI_MADT_TYPE_RESERVED 512,14530
struct acpi_madt_local_apic 521,14707
	struct acpi_subtable_header header;522,14737
	u8 processor_id;523,14774
	u8 id;524,14816
	u32 lapic_flags;525,14858
struct acpi_madt_io_apic 530,14898
	struct acpi_subtable_header header;531,14925
	u8 id;532,14962
	u8 reserved;533,14990
	u32 address;534,15035
	u32 global_irq_base;535,15078
struct acpi_madt_interrupt_override 540,15186
	struct acpi_subtable_header header;541,15224
	u8 bus;542,15261
	u8 source_irq;543,15286
	u32 global_irq;544,15332
	u16 inti_flags;545,15380
struct acpi_madt_nmi_source 550,15422
	struct acpi_subtable_header header;551,15452
	u16 inti_flags;552,15489
	u32 global_irq;553,15506
struct acpi_madt_local_apic_nmi 558,15583
	struct acpi_subtable_header header;559,15617
	u8 processor_id;560,15654
	u16 inti_flags;561,15696
	u8 lint;562,15713
struct acpi_madt_local_apic_override 567,15793
	struct acpi_subtable_header header;568,15832
	u16 reserved;569,15869
	u64 address;570,15914
struct acpi_madt_io_sapic 575,15981
	struct acpi_subtable_header header;576,16009
	u8 id;577,16046
	u8 reserved;578,16075
	u32 global_irq_base;579,16119
	u64 address;580,16180
struct acpi_madt_local_sapic 585,16250
	struct acpi_subtable_header header;586,16281
	u8 processor_id;587,16318
	u8 id;588,16360
	u8 eid;589,16385
	u8 reserved[reserved590,16412
	u32 lapic_flags;591,16459
	u32 uid;592,16477
	char uid_string[uid_string593,16517
struct acpi_madt_interrupt_source 598,16607
	struct acpi_subtable_header header;599,16643
	u16 inti_flags;600,16680
	u8 type;601,16697
	u8 id;602,16741
	u8 eid;603,16770
	u8 io_sapic_vector;604,16801
	u32 global_irq;605,16860
	u32 flags;606,16908
#define ACPI_MADT_CPEI_OVERRIDE 611,16979
struct acpi_madt_local_x2apic 615,17064
	struct acpi_subtable_header header;616,17096
	u16 reserved;617,17133
	u32 local_apic_id;618,17179
	u32 lapic_flags;619,17227
	u32 uid;620,17245
struct acpi_madt_local_x2apic_nmi 625,17335
	struct acpi_subtable_header header;626,17371
	u16 inti_flags;627,17408
	u32 uid;628,17425
	u8 lint;629,17463
	u8 reserved[reserved630,17512
#define ACPI_MADT_ENABLED 639,17626
#define ACPI_MADT_POLARITY_MASK 643,17744
#define ACPI_MADT_TRIGGER_MASK 644,17832
#define ACPI_MADT_POLARITY_CONFORMS 648,17957
#define ACPI_MADT_POLARITY_ACTIVE_HIGH 649,18001
#define ACPI_MADT_POLARITY_RESERVED 650,18045
#define ACPI_MADT_POLARITY_ACTIVE_LOW 651,18089
#define ACPI_MADT_TRIGGER_CONFORMS 653,18134
#define ACPI_MADT_TRIGGER_EDGE 654,18180
#define ACPI_MADT_TRIGGER_RESERVED 655,18229
#define ACPI_MADT_TRIGGER_LEVEL 656,18278
struct acpi_table_mcfg 664,18559
	struct acpi_table_header header;665,18584
	u8 reserved[reserved666,18649
struct acpi_mcfg_allocation 671,18686
	u64 address;672,18716
	u16 pci_segment;673,18770
	u8 start_bus_number;674,18819
	u8 end_bus_number;675,18871
	u32 reserved;676,18918
struct acpi_table_sbst 685,19150
	struct acpi_table_header header;686,19175
	u32 warning_level;687,19240
	u32 low_level;688,19260
	u32 critical_level;689,19276
struct acpi_table_slit 698,19523
	struct acpi_table_header header;699,19548
	u64 locality_count;700,19613
	u8 entry[entry701,19634
struct acpi_table_spcr 710,19901
	struct acpi_table_header header;711,19926
	u8 interface_type;712,19991
	u8 reserved[reserved713,20049
	struct acpi_generic_address serial_port;714,20066
	u8 interrupt_type;715,20108
	u8 pc_interrupt;716,20128
	u32 interrupt;717,20146
	u8 baud_rate;718,20162
	u8 parity;719,20177
	u8 stop_bits;720,20189
	u8 flow_control;721,20204
	u8 terminal_type;722,20222
	u8 reserved1;723,20241
	u16 pci_device_id;724,20256
	u16 pci_vendor_id;725,20276
	u8 pci_bus;726,20296
	u8 pci_device;727,20309
	u8 pci_function;728,20325
	u32 pci_flags;729,20343
	u8 pci_segment;730,20359
	u32 reserved2;731,20376
struct acpi_table_spmi 740,20618
	struct acpi_table_header header;741,20643
	u8 reserved;742,20708
	u8 interface_type;743,20722
	u16 spec_revision;744,20742
	u8 interrupt_type;745,20784
	u8 gpe_number;746,20804
	u8 reserved1;747,20840
	u8 pci_device_flag;748,20855
	u32 interrupt;749,20876
	struct acpi_generic_address ipmi_register;750,20892
	u8 pci_segment;751,20936
	u8 pci_bus;752,20953
	u8 pci_device;753,20966
	u8 pci_function;754,20982
struct acpi_table_srat 763,21214
	struct acpi_table_header header;764,21239
	u32 table_revision;765,21304
	u64 reserved;766,21349
enum acpi_srat_type 771,21461
	ACPI_SRAT_TYPE_CPU_AFFINITY 772,21483
	ACPI_SRAT_TYPE_MEMORY_AFFINITY 773,21517
	ACPI_SRAT_TYPE_X2APIC_CPU_AFFINITY 774,21554
	ACPI_SRAT_TYPE_RESERVED 775,21595
struct acpi_srat_cpu_affinity 782,21730
	struct acpi_subtable_header header;783,21762
	u8 proximity_domain_lo;784,21799
	u8 apic_id;785,21824
	u32 flags;786,21837
	u8 local_sapic_eid;787,21849
	u8 proximity_domain_hi[proximity_domain_hi788,21870
	u32 reserved;789,21898
struct acpi_srat_mem_affinity 794,21973
	struct acpi_subtable_header header;795,22005
	u32 proximity_domain;796,22042
	u16 reserved;797,22065
	u64 base_address;798,22110
	u64 length;799,22129
	u32 memory_type;800,22142
	u32 flags;801,22192
	u64 reserved1;802,22204
#define ACPI_SRAT_MEM_ENABLED 807,22267
#define ACPI_SRAT_MEM_HOT_PLUGGABLE 808,22340
#define ACPI_SRAT_MEM_NON_VOLATILE 809,22424
struct acpi_srat_x2apic_cpu_affinity 813,22562
	struct acpi_subtable_header header;814,22601
	u16 reserved;815,22638
	u32 proximity_domain;816,22683
	u32 apic_id;817,22706
	u32 flags;818,22720
	u32 clock_domain;819,22732
	u32 reserved2;820,22751
#define ACPI_SRAT_CPU_ENABLED 825,22859
struct acpi_table_tcpa 833,23154
	struct acpi_table_header header;834,23179
	u16 reserved;835,23244
	u32 max_log_length;836,23259
	u64 log_address;837,23324
struct acpi_table_wdrt 846,23585
	struct acpi_table_header header;847,23610
	u32 header_length;848,23675
	u8 pci_segment;849,23724
	u8 pci_bus;850,23767
	u8 pci_device;851,23802
	u8 pci_function;852,23843
	u32 timer_period;853,23887
	u32 max_count;854,23945
	u32 min_count;855,24000
	u8 flags;856,24045
	u8 reserved[reserved857,24056
	u32 entries;858,24073
#define ACPI_WDRT_TIMER_ENABLED 863,24150

xen/include/acpi/pdc_intel.h,509
#define __PDC_INTEL_H__5,73
#define ACPI_PDC_P_FFH	7,98
#define ACPI_PDC_C_C1_HALT	8,132
#define ACPI_PDC_T_FFH	9,169
#define ACPI_PDC_SMP_C1PT	10,203
#define ACPI_PDC_SMP_C2C3	11,239
#define ACPI_PDC_SMP_P_SWCOORD	12,275
#define ACPI_PDC_SMP_C_SWCOORD	13,316
#define ACPI_PDC_SMP_T_SWCOORD	14,357
#define ACPI_PDC_C_C1_FFH	15,398
#define ACPI_PDC_C_C2C3_FFH	16,434
#define ACPI_PDC_EST_CAPABILITY_SMP	18,473
#define ACPI_PDC_EST_CAPABILITY_SWSMP	22,584
#define ACPI_PDC_C_CAPABILITY_SMP	27,730

xen/include/acpi/acconfig.h,1918
#define _ACCONFIG_H45,2123
#define ACPI_CA_VERSION 66,2822
#define ACPI_OS_NAME 76,3321
#define ACPI_MAX_STATE_CACHE_DEPTH 80,3437
#define ACPI_MAX_PARSE_CACHE_DEPTH 81,3500
#define ACPI_MAX_EXTPARSE_CACHE_DEPTH 82,3568
#define ACPI_MAX_OBJECT_CACHE_DEPTH 83,3636
#define ACPI_MAX_NAMESPACE_CACHE_DEPTH 84,3713
#define ACPI_CHECKSUM_ABORT 90,3886
#define ACPI_CA_SUPPORT_LEVEL 100,4156
#define ACPI_MAX_SEMAPHORE_COUNT 104,4243
#define ACPI_MAX_REFERENCE_COUNT 108,4359
#define ACPI_SYSMEM_REGION_WINDOW_SIZE 112,4479
#define ACPI_NUM_OWNERID_MASKS 116,4586
#define ACPI_ROOT_TABLE_SIZE_INCREMENT 120,4696
#define ACPI_MAX_GPE_BLOCKS 130,5052
#define ACPI_GPE_REGISTER_WIDTH 131,5094
#define ACPI_METHOD_NUM_LOCALS 135,5214
#define ACPI_METHOD_MAX_LOCAL 136,5256
#define ACPI_METHOD_NUM_ARGS 138,5299
#define ACPI_METHOD_MAX_ARG 139,5341
#define ACPI_DEVICE_ID_LENGTH 143,5435
#define ACPI_MAX_CID_LENGTH 144,5480
#define ACPI_UUID_LENGTH 145,5523
#define ACPI_OBJ_NUM_OPERANDS 150,5655
#define ACPI_OBJ_MAX_OPERAND 151,5697
#define ACPI_NAME_SIZE 155,5791
#define ACPI_PATH_SEGMENT_LENGTH 156,5833
#define ACPI_PATH_SEPARATOR 157,5921
#define ACPI_OEM_ID_SIZE 161,6002
#define ACPI_OEM_TABLE_ID_SIZE 162,6044
#define ACPI_EBDA_PTR_LOCATION 166,6149
#define ACPI_EBDA_PTR_LENGTH 167,6223
#define ACPI_EBDA_WINDOW_SIZE 168,6265
#define ACPI_HI_RSDP_WINDOW_BASE 169,6310
#define ACPI_HI_RSDP_WINDOW_SIZE 170,6384
#define ACPI_RSDP_SCAN_STEP 171,6435
#define ACPI_NUM_PREDEFINED_REGIONS 175,6504
#define ACPI_USER_REGION_BEGIN 176,6546
#define ACPI_MAX_ADDRESS_SPACE 180,6639
#define ACPI_MAX_MATCH_OPCODE 184,6734
#define ACPI_RSDP_CHECKSUM_LENGTH 188,6799
#define ACPI_RSDP_XCHECKSUM_LENGTH 189,6842
#define ACPI_SMBUS_BUFFER_SIZE 193,6925
#define ACPI_DEBUGGER_MAX_ARGS 201,7157
#define ACPI_DEBUGGER_COMMAND_PROMPT 203,7234
#define ACPI_DEBUGGER_EXECUTE_PROMPT 204,7278

xen/include/acpi/acutils.h,1348
#define _ACUTILS_H45,2145
#define ACPI_INVALID_RESOURCE 75,3159
#define ACPI_FIXED_LENGTH 76,3201
#define ACPI_VARIABLE_LENGTH 77,3243
#define ACPI_SMALL_VARIABLE_LENGTH 78,3285
acpi_status(*acpi_walk_aml_callback)acpi_walk_aml_callback81,3336
acpi_status(*acpi_pkg_callback)acpi_pkg_callback87,3483
struct acpi_pkg_info 92,3641
	u8 *free_space;free_space93,3664
	acpi_size length;94,3681
	u32 object_space;95,3700
	u32 num_packages;96,3719
#define REF_INCREMENT 99,3742
#define REF_DECREMENT 100,3778
#define REF_FORCE_DELETE 101,3814
#define DB_BYTE_DISPLAY 105,3878
#define DB_WORD_DISPLAY 106,3908
#define DB_DWORD_DISPLAY 107,3938
#define DB_QWORD_DISPLAY 108,3968
#define _ACPI_XA 181,5828
#define _ACPI_XS 182,5893
#define _ACPI_BB 183,5937
#define _ACPI_CN 184,5999
#define _ACPI_DI 185,6050
#define _ACPI_LO 186,6090
#define _ACPI_PU 187,6130
#define _ACPI_SP 188,6174
#define _ACPI_UP 189,6212
#define _ACPI_XD 190,6252
#define ACPI_IS_DIGIT(192,6311
#define ACPI_IS_SPACE(193,6384
#define ACPI_IS_XDIGIT(194,6457
#define ACPI_IS_UPPER(195,6530
#define ACPI_IS_LOWER(196,6603
#define ACPI_IS_PRINT(197,6676
#define ACPI_IS_ALPHA(198,6793
acpi_ut_debug_print(295,9442
#define acpi_ut_create_internal_object(386,12141
#define acpi_ut_allocate_object_desc(387,12260
#define ACPI_ANY_BASE 484,15083

xen/include/acpi/achware.h,248
#define __ACHWARE_H__45,2123
#define PM_TIMER_FREQUENCY 49,2184
#define ACPI_SST_INDICATOR_OFF 53,2264
#define ACPI_SST_WORKING 54,2298
#define ACPI_SST_WAKING 55,2332
#define ACPI_SST_SLEEPING 56,2366
#define ACPI_SST_SLEEP_CONTEXT 57,2400

xen/include/acpi/acnames.h,884
#define __ACNAMES_H__45,2118
#define METHOD_NAME__HID 49,2214
#define METHOD_NAME__CID 50,2253
#define METHOD_NAME__UID 51,2292
#define METHOD_NAME__ADR 52,2331
#define METHOD_NAME__INI 53,2370
#define METHOD_NAME__STA 54,2409
#define METHOD_NAME__REG 55,2448
#define METHOD_NAME__SEG 56,2487
#define METHOD_NAME__BBN 57,2526
#define METHOD_NAME__PRT 58,2565
#define METHOD_NAME__CRS 59,2604
#define METHOD_NAME__PRS 60,2643
#define METHOD_NAME__PRW 61,2682
#define METHOD_NAME__SRS 62,2721
#define METHOD_NAME__BFS 66,2831
#define METHOD_NAME__GTS 67,2872
#define METHOD_NAME__PTS 68,2913
#define METHOD_NAME__SST 69,2954
#define METHOD_NAME__WAK 70,2999
#define ACPI_UNKNOWN_NAME 74,3095
#define ACPI_ROOT_NAME 75,3173
#define ACPI_PREFIX_MIXED 77,3252
#define ACPI_PREFIX_LOWER 78,3314
#define ACPI_NS_ROOT_PATH 80,3377
#define ACPI_NS_SYSTEM_BUS 81,3414

xen/include/acpi/cpufreq/processor_perf.h,964
#define __XEN_PROCESSOR_PM_H__2,31
#define XEN_PX_INIT 7,120
struct processor_performance 24,682
    uint32_t state;25,713
    uint32_t platform_limit;26,733
    struct xen_pct_register control_register;27,762
    struct xen_pct_register status_register;28,808
    uint32_t state_count;29,853
    struct xen_processor_px *states;states30,879
    struct xen_psd_package domain_info;31,916
    cpumask_t shared_cpu_map;32,956
    uint32_t shared_type;33,986
    uint32_t init;35,1013
struct processor_pminfo 38,1036
    uint32_t acpi_id;39,1062
    uint32_t id;40,1084
    struct processor_performance    perf;41,1101
struct px_stat 46,1207
    uint8_t total;47,1224
    uint8_t usable;48,1272
    uint8_t last;49,1321
    uint8_t cur;50,1367
    uint64_t *trans_pt;trans_pt51,1416
    pm_px_val_t *pt;pt52,1468
struct pm_px 55,1493
    struct px_stat u;56,1508
    uint64_t prev_state_wall;57,1530
    uint64_t prev_idle_wall;58,1560

xen/include/acpi/cpufreq/cpufreq.h,2882
#define __XEN_CPUFREQ_PM_H__15,427
struct acpi_cpufreq_data 29,683
    struct processor_performance *acpi_data;acpi_data30,710
    struct cpufreq_frequency_table *freq_table;freq_table31,755
    unsigned int cpu_feature;32,803
struct cpufreq_cpuinfo 35,837
    unsigned int        max_freq;36,862
    unsigned int        second_max_freq;37,896
    unsigned int        min_freq;38,969
    unsigned int        transition_latency;39,1003
struct cpufreq_policy 42,1084
    cpumask_t           cpus;43,1108
    unsigned int        shared_type;44,1167
    unsigned int        cpu;46,1298
    struct cpufreq_cpuinfo    cpuinfo;47,1368
    unsigned int        min;49,1408
    unsigned int        max;50,1453
    unsigned int        cur;51,1498
    struct cpufreq_governor     *governor;governor53,1621
    bool_t              resume;55,1665
    s8                  turbo;57,1791
    bool_t              aperf_mperf;60,2000
#define CPUFREQ_SHARED_TYPE_NONE 69,2297
#define CPUFREQ_SHARED_TYPE_HW 70,2345
#define CPUFREQ_SHARED_TYPE_ALL 71,2416
#define CPUFREQ_SHARED_TYPE_ANY 72,2494
struct cpufreq_freqs 76,2649
    unsigned int cpu;77,2672
    unsigned int old;78,2710
    unsigned int new;79,2732
    u8 flags;80,2754
#define CPUFREQ_GOV_START 88,3041
#define CPUFREQ_GOV_STOP 89,3070
#define CPUFREQ_GOV_LIMITS 90,3099
struct cpufreq_governor 92,3129
    char    name[name93,3155
    int     (*governor)governor94,3191
    void    (*handle_option)handle_option96,3291
    struct list_head governor_list;97,3358
#define CPUFREQ_DEFAULT_GOVERNOR 109,3884
#define GOV_GETAVG 116,4164
#define USR_GETAVG 117,4189
#define CPUFREQ_TURBO_DISABLED 120,4286
#define CPUFREQ_TURBO_UNSUPPORTED 121,4325
#define CPUFREQ_TURBO_ENABLED 122,4363
__cpufreq_governor(129,4565
#define CPUFREQ_RELATION_L 139,4910
#define CPUFREQ_RELATION_H 140,4982
struct cpufreq_driver 142,5056
    char   name[name143,5080
    int    (*init)init144,5115
    int    (*verify)verify145,5166
    int    (*target)target146,5219
    unsigned int    (*get)get149,5363
    unsigned int    (*getavg)getavg150,5409
    int    (*exit)exit151,5477
int cpufreq_register_driver(157,5598
int cpufreq_unregister_driver(174,5969
void cpufreq_verify_within_limits(184,6174
#define CPUFREQ_ENTRY_INVALID 205,6828
#define CPUFREQ_TABLE_END 206,6861
struct cpufreq_frequency_table 208,6895
    unsigned int    index;209,6928
    unsigned int    frequency;210,6969
struct cpu_dbs_info_s 231,7810
    uint64_t prev_cpu_idle;232,7834
    uint64_t prev_cpu_wall;233,7862
    struct cpufreq_policy *cur_policy;cur_policy234,7890
    struct cpufreq_frequency_table *freq_table;freq_table235,7929
    int cpu;236,7977
    unsigned int enable:enable237,7990
    unsigned int stoppable:stoppable238,8017
    unsigned int turbo_enabled:turbo_enabled239,8047

xen/include/acpi/acobject.h,7424
#define _ACOBJECT_H46,2157
#define ACPI_OBJECT_COMMON_HEADER 81,3223
#define AOPOBJ_AML_CONSTANT 94,3816
#define AOPOBJ_STATIC_POINTER 95,3857
#define AOPOBJ_DATA_VALID 96,3898
#define AOPOBJ_OBJECT_INITIALIZED 97,3939
#define AOPOBJ_SETUP_COMPLETE 98,3980
#define AOPOBJ_SINGLE_DATUM 99,4021
#define AOPOBJ_INVALID 100,4062
struct acpi_object_common 108,4346
ACPI_OBJECT_COMMON_HEADER}ACPI_OBJECT_COMMON_HEADER109,4374
struct acpi_object_integer 111,4403
	ACPI_OBJECT_COMMON_HEADER u8 fill[fill112,4432
	acpi_integer value;113,4511
#define ACPI_COMMON_BUFFER_INFO(122,4728
struct acpi_object_string 126,4856
struct acpi_object_buffer 130,5037
	ACPI_OBJECT_COMMON_HEADER ACPI_COMMON_BUFFER_INFO(131,5065
struct acpi_object_package 137,5270
	ACPI_OBJECT_COMMON_HEADER struct acpi_namespace_node *node;node138,5299
	union acpi_operand_object **elements;elements139,5391
	u8 *aml_start;aml_start140,5470
	u32 aml_length;141,5486
	u32 count;142,5503
struct acpi_object_event 151,5740
	ACPI_OBJECT_COMMON_HEADER acpi_semaphore os_semaphore;152,5767
struct acpi_object_mutex 155,5866
	ACPI_OBJECT_COMMON_HEADER u8 sync_level;156,5893
	u16 acquisition_depth;157,5973
	struct acpi_thread_state *owner_thread;owner_thread158,6040
	acpi_mutex os_mutex;159,6114
	union acpi_operand_object *prev;prev160,6175
	union acpi_operand_object *next;next161,6249
	struct acpi_namespace_node *node;node162,6323
	u8 original_sync_level;163,6390
struct acpi_object_region 166,6460
	ACPI_OBJECT_COMMON_HEADER u8 space_id;167,6488
	struct acpi_namespace_node *node;node168,6528
	union acpi_operand_object *handler;handler169,6595
	union acpi_operand_object *next;next170,6664
	acpi_physical_address address;171,6698
	u32 length;172,6730
struct acpi_object_method 175,6747
	ACPI_OBJECT_COMMON_HEADER u8 method_flags;176,6775
	u8 param_count;177,6819
	u8 sync_level;178,6836
	union acpi_operand_object *mutex;mutex179,6852
	u8 *aml_start;aml_start180,6887
	ACPI_INTERNAL_METHOD implementation;181,6903
	u32 aml_length;182,6941
	u8 thread_count;183,6958
	acpi_owner_id owner_id;184,6976
#define ACPI_COMMON_NOTIFY_INFO 196,7310
struct acpi_object_notify_common 201,7596
ACPI_OBJECT_COMMON_HEADER ACPI_COMMON_NOTIFY_INFO}ACPI_COMMON_NOTIFY_INFO202,7693
struct acpi_object_device 204,7746
	    ACPI_COMMON_NOTIFY_INFO struct acpi_gpe_block_info *gpe_block;gpe_block206,7801
struct acpi_object_power_resource 209,7873
	ACPI_OBJECT_COMMON_HEADER ACPI_COMMON_NOTIFY_INFO u32 system_level;210,7909
	u32 resource_order;211,7978
struct acpi_object_processor 214,8003
	u8 proc_id;217,8146
	u8 length;218,8159
	ACPI_COMMON_NOTIFY_INFO acpi_io_address address;219,8171
struct acpi_object_thermal_zone 222,8225
ACPI_OBJECT_COMMON_HEADER ACPI_COMMON_NOTIFY_INFO}ACPI_COMMON_NOTIFY_INFO223,8259
#define ACPI_COMMON_FIELD_INFO 236,8724
struct acpi_object_field_common 247,9583
	ACPI_OBJECT_COMMON_HEADER ACPI_COMMON_FIELD_INFO union acpi_operand_object *region_obj;region_obj248,9681
struct acpi_object_region_field 251,9837
	ACPI_OBJECT_COMMON_HEADER ACPI_COMMON_FIELD_INFO union acpi_operand_object *region_obj;region_obj252,9871
struct acpi_object_bank_field 255,9998
	ACPI_OBJECT_COMMON_HEADER ACPI_COMMON_FIELD_INFO union acpi_operand_object *region_obj;region_obj256,10030
	union acpi_operand_object *bank_obj;bank_obj257,10153
struct acpi_object_index_field 260,10229
	union acpi_operand_object *index_obj;index_obj266,10454
	union acpi_operand_object *data_obj;data_obj267,10514
struct acpi_object_buffer_field 272,10662
	ACPI_OBJECT_COMMON_HEADER ACPI_COMMON_FIELD_INFO union acpi_operand_object *buffer_obj;buffer_obj273,10696
struct acpi_object_notify_handler 282,11011
	ACPI_OBJECT_COMMON_HEADER struct acpi_namespace_node *node;node283,11047
	acpi_notify_handler handler;284,11128
	void *context;context285,11158
struct acpi_object_addr_handler 288,11178
	ACPI_OBJECT_COMMON_HEADER u8 space_id;289,11212
	u8 handler_flags;290,11252
	acpi_adr_space_handler handler;291,11271
	struct acpi_namespace_node *node;node292,11304
	void *context;context293,11359
	acpi_adr_space_setup setup;294,11375
	union acpi_operand_object *region_list;region_list295,11404
	union acpi_operand_object *next;next296,11478
#define ACPI_ADDR_HANDLER_DEFAULT_INSTALLED 301,11565
struct acpi_object_reference 313,11953
	ACPI_OBJECT_COMMON_HEADER u8 target_type;314,11984
	u16 opcode;315,12051
	void *object;object316,12064
	struct acpi_namespace_node *node;node317,12146
	union acpi_operand_object **where;where318,12181
	u32 offset;319,12217
struct acpi_object_extra 329,12484
	ACPI_OBJECT_COMMON_HEADER struct acpi_namespace_node *method_REG;method_REG330,12511
	void *region_context;region_context331,12621
	u8 *aml_start;aml_start332,12671
	u32 aml_length;333,12687
struct acpi_object_data 338,12771
	ACPI_OBJECT_COMMON_HEADER acpi_object_handler handler;339,12797
	void *pointer;pointer340,12853
struct acpi_object_cache_list 345,12929
	ACPI_OBJECT_COMMON_HEADER union acpi_operand_object *next;next346,12961
union acpi_operand_object 355,13315
	struct acpi_object_common common;356,13343
	struct acpi_object_integer integer;357,13378
	struct acpi_object_string string;358,13415
	struct acpi_object_buffer buffer;359,13450
	struct acpi_object_package package;360,13485
	struct acpi_object_event event;361,13522
	struct acpi_object_method method;362,13555
	struct acpi_object_mutex mutex;363,13590
	struct acpi_object_region region;364,13623
	struct acpi_object_notify_common common_notify;365,13658
	struct acpi_object_device device;366,13707
	struct acpi_object_power_resource power_resource;367,13742
	struct acpi_object_processor processor;368,13793
	struct acpi_object_thermal_zone thermal_zone;369,13834
	struct acpi_object_field_common common_field;370,13881
	struct acpi_object_region_field field;371,13928
	struct acpi_object_buffer_field buffer_field;372,13968
	struct acpi_object_bank_field bank_field;373,14015
	struct acpi_object_index_field index_field;374,14058
	struct acpi_object_notify_handler notify;375,14103
	struct acpi_object_addr_handler address_space;376,14146
	struct acpi_object_reference reference;377,14194
	struct acpi_object_extra extra;378,14235
	struct acpi_object_data data;379,14268
	struct acpi_object_cache_list cache;380,14299
#define ACPI_DESC_TYPE_CACHED 391,14616
#define ACPI_DESC_TYPE_STATE 392,14699
#define ACPI_DESC_TYPE_STATE_UPDATE 393,14744
#define ACPI_DESC_TYPE_STATE_PACKAGE 394,14789
#define ACPI_DESC_TYPE_STATE_CONTROL 395,14834
#define ACPI_DESC_TYPE_STATE_RPSCOPE 396,14879
#define ACPI_DESC_TYPE_STATE_PSCOPE 397,14924
#define ACPI_DESC_TYPE_STATE_WSCOPE 398,14969
#define ACPI_DESC_TYPE_STATE_RESULT 399,15014
#define ACPI_DESC_TYPE_STATE_NOTIFY 400,15059
#define ACPI_DESC_TYPE_STATE_THREAD 401,15104
#define ACPI_DESC_TYPE_WALK 402,15149
#define ACPI_DESC_TYPE_PARSER 403,15194
#define ACPI_DESC_TYPE_OPERAND 404,15239
#define ACPI_DESC_TYPE_NAMED 405,15284
#define ACPI_DESC_TYPE_MAX 406,15329
struct acpi_common_descriptor 408,15375
	void *common_pointer;common_pointer409,15407
	u8 descriptor_type;410,15430
union acpi_descriptor 413,15500
	struct acpi_common_descriptor common;414,15524
	union acpi_operand_object object;415,15563
	struct acpi_namespace_node node;416,15598
	union acpi_parse_object op;417,15632

xen/include/acpi/acglobal.h,6274
#define __ACGLOBAL_H__45,2129
#define ACPI_EXTERN54,2380
#define ACPI_INIT_GLOBAL(55,2400
#define ACPI_EXTERN 57,2440
#define ACPI_INIT_GLOBAL(58,2467
ACPI_EXTERN u32 acpi_gbl_original_dbg_level;122,4895
ACPI_EXTERN u32 acpi_gbl_original_dbg_layer;123,4940
ACPI_EXTERN acpi_name acpi_gbl_trace_method_name;124,4985
ACPI_EXTERN u32 acpi_gbl_trace_dbg_level;125,5035
ACPI_EXTERN u32 acpi_gbl_trace_dbg_layer;126,5077
ACPI_EXTERN u32 acpi_gbl_trace_flags;127,5119
ACPI_EXTERN struct acpi_internal_rsdt acpi_gbl_root_table_list;141,5520
ACPI_EXTERN struct acpi_table_fadt acpi_gbl_FADT;142,5584
ACPI_EXTERN struct acpi_generic_address acpi_gbl_xpm1a_enable;147,5747
ACPI_EXTERN struct acpi_generic_address acpi_gbl_xpm1b_enable;148,5810
ACPI_EXTERN u8 acpi_gbl_integer_bit_width;155,6097
ACPI_EXTERN u8 acpi_gbl_integer_byte_width;156,6140
ACPI_EXTERN u8 acpi_gbl_integer_nybble_width;157,6184
ACPI_EXTERN struct acpi_mutex_info acpi_gbl_mutex_info[acpi_gbl_mutex_info170,6625
ACPI_EXTERN acpi_mutex acpi_gbl_global_lock_mutex;175,6782
ACPI_EXTERN acpi_semaphore acpi_gbl_global_lock_semaphore;176,6833
ACPI_EXTERN spinlock_t _acpi_gbl_gpe_lock;182,6987
ACPI_EXTERN spinlock_t _acpi_gbl_hardware_lock;183,7071
#define acpi_gbl_gpe_lock	184,7159
#define acpi_gbl_hardware_lock	185,7205
ACPI_EXTERN struct acpi_memory_list *acpi_gbl_global_list;acpi_gbl_global_list197,7532
ACPI_EXTERN struct acpi_memory_list *acpi_gbl_ns_node_list;acpi_gbl_ns_node_list198,7591
ACPI_EXTERN u8 acpi_gbl_display_final_mem_stats;199,7651
ACPI_EXTERN acpi_cache_t *acpi_gbl_namespace_cache;acpi_gbl_namespace_cache204,7729
ACPI_EXTERN acpi_cache_t *acpi_gbl_state_cache;acpi_gbl_state_cache205,7781
ACPI_EXTERN acpi_cache_t *acpi_gbl_ps_node_cache;acpi_gbl_ps_node_cache206,7829
ACPI_EXTERN acpi_cache_t *acpi_gbl_ps_node_ext_cache;acpi_gbl_ps_node_ext_cache207,7879
ACPI_EXTERN acpi_cache_t *acpi_gbl_operand_cache;acpi_gbl_operand_cache208,7933
ACPI_EXTERN struct acpi_object_notify_handler acpi_gbl_device_notify;212,8007
ACPI_EXTERN struct acpi_object_notify_handler acpi_gbl_system_notify;213,8077
ACPI_EXTERN acpi_exception_handler acpi_gbl_exception_handler;214,8147
ACPI_EXTERN acpi_init_handler acpi_gbl_init_handler;215,8210
ACPI_EXTERN struct acpi_walk_state *acpi_gbl_breakpoint_walk;acpi_gbl_breakpoint_walk216,8263
ACPI_EXTERN u32 acpi_gbl_original_mode;220,8338
ACPI_EXTERN u32 acpi_gbl_rsdp_original_location;221,8378
ACPI_EXTERN u32 acpi_gbl_ns_lookup_count;222,8427
ACPI_EXTERN u32 acpi_gbl_ps_find_count;223,8469
ACPI_EXTERN u32 acpi_gbl_owner_id_mask[acpi_gbl_owner_id_mask224,8509
ACPI_EXTERN u16 acpi_gbl_pm1_enable_register_save;225,8573
ACPI_EXTERN u16 acpi_gbl_global_lock_handle;226,8624
ACPI_EXTERN u8 acpi_gbl_last_owner_id_index;227,8669
ACPI_EXTERN u8 acpi_gbl_next_owner_id_offset;228,8714
ACPI_EXTERN u8 acpi_gbl_debugger_configuration;229,8760
ACPI_EXTERN u8 acpi_gbl_global_lock_acquired;230,8808
ACPI_EXTERN u8 acpi_gbl_step_to_next_call;231,8854
ACPI_EXTERN u8 acpi_gbl_acpi_hardware_present;232,8897
ACPI_EXTERN u8 acpi_gbl_global_lock_present;233,8944
ACPI_EXTERN u8 acpi_gbl_events_initialized;234,8989
ACPI_EXTERN u8 acpi_gbl_system_awake_and_running;235,9033
#define NUM_NS_TYPES 262,9919
#define NUM_PREDEFINED_NAMES 265,10057
#define NUM_PREDEFINED_NAMES 267,10106
ACPI_EXTERN struct acpi_namespace_node acpi_gbl_root_node_struct;270,10156
ACPI_EXTERN struct acpi_namespace_node *acpi_gbl_root_node;acpi_gbl_root_node271,10222
ACPI_EXTERN struct acpi_namespace_node *acpi_gbl_fadt_gpe_device;acpi_gbl_fadt_gpe_device272,10282
ACPI_EXTERN u32 acpi_gbl_current_node_count;279,10525
ACPI_EXTERN u32 acpi_gbl_current_node_size;280,10570
ACPI_EXTERN u32 acpi_gbl_max_concurrent_node_count;281,10614
ACPI_EXTERN acpi_size acpi_gbl_entry_stack_pointer;282,10666
ACPI_EXTERN acpi_size acpi_gbl_lowest_stack_pointer;283,10718
ACPI_EXTERN u32 acpi_gbl_deepest_nesting;284,10771
ACPI_EXTERN struct acpi_thread_state *acpi_gbl_current_walk_list;acpi_gbl_current_walk_list293,11009
ACPI_EXTERN u8 acpi_gbl_cm_single_step;297,11115
ACPI_EXTERN u8 acpi_gbl_sleep_type_a;307,11427
ACPI_EXTERN u8 acpi_gbl_sleep_type_b;308,11465
    acpi_gbl_fixed_event_handlers[acpi_gbl_fixed_event_handlers319,11828
ACPI_EXTERN struct acpi_gpe_xrupt_info *acpi_gbl_gpe_xrupt_list_head;acpi_gbl_gpe_xrupt_list_head320,11886
*acpi_gbl_gpe_fadt_blocks[acpi_gbl_gpe_fadt_blocks322,11995
ACPI_EXTERN u8 acpi_gbl_db_output_flags;330,12229
ACPI_EXTERN u8 acpi_gbl_db_opt_disasm;334,12297
ACPI_EXTERN u8 acpi_gbl_db_opt_verbose;335,12336
ACPI_EXTERN int optind;344,12518
ACPI_EXTERN char *optarg;optarg345,12542
ACPI_EXTERN u8 acpi_gbl_db_opt_tables;347,12569
ACPI_EXTERN u8 acpi_gbl_db_opt_stats;348,12608
ACPI_EXTERN u8 acpi_gbl_db_opt_ini_methods;349,12646
ACPI_EXTERN char *acpi_gbl_db_args[acpi_gbl_db_args351,12691
ACPI_EXTERN char acpi_gbl_db_line_buf[acpi_gbl_db_line_buf352,12751
ACPI_EXTERN char acpi_gbl_db_parsed_buf[acpi_gbl_db_parsed_buf353,12794
ACPI_EXTERN char acpi_gbl_db_scope_buf[acpi_gbl_db_scope_buf354,12839
ACPI_EXTERN char acpi_gbl_db_debug_filename[acpi_gbl_db_debug_filename355,12883
ACPI_EXTERN u8 acpi_gbl_db_output_to_file;356,12932
ACPI_EXTERN char *acpi_gbl_db_buffer;acpi_gbl_db_buffer357,12975
ACPI_EXTERN char *acpi_gbl_db_filename;acpi_gbl_db_filename358,13013
ACPI_EXTERN u32 acpi_gbl_db_debug_level;359,13053
ACPI_EXTERN u32 acpi_gbl_db_console_debug_level;360,13094
ACPI_EXTERN struct acpi_table_header *acpi_gbl_db_table_ptr;acpi_gbl_db_table_ptr361,13143
ACPI_EXTERN struct acpi_namespace_node *acpi_gbl_db_scope_node;acpi_gbl_db_scope_node362,13204
ACPI_EXTERN u16 acpi_gbl_obj_type_count[acpi_gbl_obj_type_count367,13297
ACPI_EXTERN u16 acpi_gbl_node_type_count[acpi_gbl_node_type_count368,13365
ACPI_EXTERN u16 acpi_gbl_obj_type_count_misc;369,13434
ACPI_EXTERN u16 acpi_gbl_node_type_count_misc;370,13480
ACPI_EXTERN u32 acpi_gbl_num_nodes;371,13527
ACPI_EXTERN u32 acpi_gbl_num_objects;372,13563
ACPI_EXTERN u32 acpi_gbl_size_of_parse_tree;374,13602
ACPI_EXTERN u32 acpi_gbl_size_of_method_trees;375,13647
ACPI_EXTERN u32 acpi_gbl_size_of_node_entries;376,13694
ACPI_EXTERN u32 acpi_gbl_size_of_acpi_objects;377,13741

xen/include/acpi/acexcep.h,4242
#define __ACEXCEP_H__45,2140
#define AE_CODE_ENVIRONMENTAL 50,2221
#define AE_CODE_PROGRAMMER 51,2268
#define AE_CODE_ACPI_TABLES 52,2315
#define AE_CODE_AML 53,2362
#define AE_CODE_CONTROL 54,2409
#define AE_CODE_MASK 55,2456
#define ACPI_SUCCESS(57,2504
#define ACPI_FAILURE(58,2551
#define AE_OK 60,2596
#define AE_ERROR 65,2693
#define AE_NO_ACPI_TABLES 66,2780
#define AE_NO_NAMESPACE 67,2867
#define AE_NO_MEMORY 68,2954
#define AE_NOT_FOUND 69,3041
#define AE_NOT_EXIST 70,3128
#define AE_ALREADY_EXISTS 71,3215
#define AE_TYPE 72,3302
#define AE_NULL_OBJECT 73,3389
#define AE_NULL_ENTRY 74,3476
#define AE_BUFFER_OVERFLOW 75,3563
#define AE_STACK_OVERFLOW 76,3650
#define AE_STACK_UNDERFLOW 77,3737
#define AE_NOT_IMPLEMENTED 78,3824
#define AE_VERSION_MISMATCH 79,3911
#define AE_SUPPORT 80,3998
#define AE_SHARE 81,4085
#define AE_LIMIT 82,4172
#define AE_TIME 83,4259
#define AE_UNKNOWN_STATUS 84,4346
#define AE_ACQUIRE_DEADLOCK 85,4433
#define AE_RELEASE_DEADLOCK 86,4520
#define AE_NOT_ACQUIRED 87,4607
#define AE_ALREADY_ACQUIRED 88,4694
#define AE_NO_HARDWARE_RESPONSE 89,4781
#define AE_NO_GLOBAL_LOCK 90,4868
#define AE_LOGICAL_ADDRESS 91,4955
#define AE_ABORT_METHOD 92,5042
#define AE_SAME_HANDLER 93,5129
#define AE_WAKE_ONLY_GPE 94,5216
#define AE_OWNER_ID_LIMIT 95,5303
#define AE_CODE_ENV_MAX 97,5391
#define AE_BAD_PARAMETER 102,5471
#define AE_BAD_CHARACTER 103,5555
#define AE_BAD_PATHNAME 104,5639
#define AE_BAD_DATA 105,5723
#define AE_BAD_ADDRESS 106,5807
#define AE_ALIGNMENT 107,5891
#define AE_BAD_HEX_CONSTANT 108,5975
#define AE_BAD_OCTAL_CONSTANT 109,6059
#define AE_BAD_DECIMAL_CONSTANT 110,6143
#define AE_CODE_PGM_MAX 112,6228
#define AE_BAD_SIGNATURE 117,6308
#define AE_BAD_HEADER 118,6393
#define AE_BAD_CHECKSUM 119,6478
#define AE_BAD_VALUE 120,6563
#define AE_TABLE_NOT_SUPPORTED 121,6648
#define AE_INVALID_TABLE_LENGTH 122,6733
#define AE_CODE_TBL_MAX 124,6819
#define AE_AML_ERROR 130,6958
#define AE_AML_PARSE 131,7035
#define AE_AML_BAD_OPCODE 132,7112
#define AE_AML_NO_OPERAND 133,7189
#define AE_AML_OPERAND_TYPE 134,7266
#define AE_AML_OPERAND_VALUE 135,7343
#define AE_AML_UNINITIALIZED_LOCAL 136,7420
#define AE_AML_UNINITIALIZED_ARG 137,7497
#define AE_AML_UNINITIALIZED_ELEMENT 138,7574
#define AE_AML_NUMERIC_OVERFLOW 139,7651
#define AE_AML_REGION_LIMIT 140,7728
#define AE_AML_BUFFER_LIMIT 141,7805
#define AE_AML_PACKAGE_LIMIT 142,7882
#define AE_AML_DIVIDE_BY_ZERO 143,7959
#define AE_AML_BAD_NAME 144,8036
#define AE_AML_NAME_NOT_FOUND 145,8113
#define AE_AML_INTERNAL 146,8190
#define AE_AML_INVALID_SPACE_ID 147,8267
#define AE_AML_STRING_LIMIT 148,8344
#define AE_AML_NO_RETURN_VALUE 149,8421
#define AE_AML_METHOD_LIMIT 150,8498
#define AE_AML_NOT_OWNER 151,8575
#define AE_AML_MUTEX_ORDER 152,8652
#define AE_AML_MUTEX_NOT_ACQUIRED 153,8729
#define AE_AML_INVALID_RESOURCE_TYPE 154,8806
#define AE_AML_INVALID_INDEX 155,8883
#define AE_AML_REGISTER_LIMIT 156,8960
#define AE_AML_NO_WHILE 157,9037
#define AE_AML_ALIGNMENT 158,9114
#define AE_AML_NO_RESOURCE_END_TAG 159,9191
#define AE_AML_BAD_RESOURCE_VALUE 160,9268
#define AE_AML_CIRCULAR_REFERENCE 161,9345
#define AE_AML_BAD_RESOURCE_LENGTH 162,9422
#define AE_AML_ILLEGAL_ADDRESS 163,9499
#define AE_CODE_AML_MAX 165,9577
#define AE_CTRL_RETURN_VALUE 170,9672
#define AE_CTRL_PENDING 171,9753
#define AE_CTRL_TERMINATE 172,9834
#define AE_CTRL_TRUE 173,9915
#define AE_CTRL_FALSE 174,9996
#define AE_CTRL_DEPTH 175,10077
#define AE_CTRL_END 176,10158
#define AE_CTRL_TRANSFER 177,10239
#define AE_CTRL_BREAK 178,10320
#define AE_CTRL_CONTINUE 179,10401
#define AE_CTRL_SKIP 180,10482
#define AE_CTRL_PARSE_CONTINUE 181,10563
#define AE_CTRL_PARSE_PENDING 182,10644
#define AE_CODE_CTRL_MAX 184,10726
char const *acpi_gbl_exception_names_env[acpi_gbl_exception_names_env192,10919
char const *acpi_gbl_exception_names_pgm[acpi_gbl_exception_names_pgm227,11594
char const *acpi_gbl_exception_names_tbl[acpi_gbl_exception_names_tbl239,11836
char const *acpi_gbl_exception_names_aml[acpi_gbl_exception_names_aml248,12017
char const *acpi_gbl_exception_names_ctrl[acpi_gbl_exception_names_ctrl285,12931

xen/include/acpi/acpi_bus.h,7199
#define __ACPI_BUS_H__27,1117
#define PREFIX	31,1165
#define ACPI_MAX_HANDLES	34,1216
struct acpi_handle_list 35,1244
	u32 count;36,1270
	acpi_handle handles[handles37,1282
#define ACPI_BUS_FILE_ROOT	58,1828
enum acpi_bus_removal_type 61,1908
	ACPI_BUS_REMOVAL_NORMAL 62,1937
	ACPI_BUS_REMOVAL_EJECT,63,1967
	ACPI_BUS_REMOVAL_SUPRISE,64,1992
	ACPI_BUS_REMOVAL_TYPE_COUNT65,2019
enum acpi_bus_device_type 68,2052
	ACPI_BUS_TYPE_DEVICE 69,2080
	ACPI_BUS_TYPE_POWER,70,2107
	ACPI_BUS_TYPE_PROCESSOR,71,2129
	ACPI_BUS_TYPE_THERMAL,72,2155
	ACPI_BUS_TYPE_SYSTEM,73,2179
	ACPI_BUS_TYPE_POWER_BUTTON,74,2202
	ACPI_BUS_TYPE_SLEEP_BUTTON,75,2231
	ACPI_BUS_DEVICE_TYPE_COUNT76,2260
typedef int (*acpi_op_add)acpi_op_add87,2371
typedef int (*acpi_op_remove)acpi_op_remove88,2429
typedef int (*acpi_op_lock)acpi_op_lock89,2500
typedef int (*acpi_op_start)acpi_op_start90,2569
typedef int (*acpi_op_stop)acpi_op_stop91,2629
typedef int (*acpi_op_suspend)acpi_op_suspend92,2698
typedef int (*acpi_op_resume)acpi_op_resume94,2784
typedef int (*acpi_op_scan)acpi_op_scan95,2845
typedef int (*acpi_op_bind)acpi_op_bind96,2904
typedef int (*acpi_op_unbind)acpi_op_unbind97,2963
typedef int (*acpi_op_shutdown)acpi_op_shutdown98,3024
struct acpi_bus_ops 100,3088
	u32 acpi_op_add:acpi_op_add101,3110
	u32 acpi_op_remove:acpi_op_remove102,3130
	u32 acpi_op_lock:acpi_op_lock103,3153
	u32 acpi_op_start:acpi_op_start104,3174
	u32 acpi_op_stop:acpi_op_stop105,3196
	u32 acpi_op_suspend:acpi_op_suspend106,3217
	u32 acpi_op_resume:acpi_op_resume107,3241
	u32 acpi_op_scan:acpi_op_scan108,3264
	u32 acpi_op_bind:acpi_op_bind109,3285
	u32 acpi_op_unbind:acpi_op_unbind110,3306
	u32 acpi_op_shutdown:acpi_op_shutdown111,3329
	u32 reserved:reserved112,3354
struct acpi_device_ops 115,3376
	acpi_op_add add;116,3401
	acpi_op_remove remove;117,3419
	acpi_op_lock lock;118,3443
	acpi_op_start start;119,3463
	acpi_op_stop stop;120,3485
	acpi_op_suspend suspend;121,3505
	acpi_op_resume resume;122,3531
	acpi_op_scan scan;123,3555
	acpi_op_bind bind;124,3575
	acpi_op_unbind unbind;125,3595
	acpi_op_shutdown shutdown;126,3619
struct acpi_driver 129,3651
	char name[name130,3672
	const struct acpi_device_id *ids;ids132,3705
	struct acpi_device_ops ops;133,3769
	struct device_driver drv;134,3798
	struct module *owner;owner135,3825
struct acpi_device_status 145,3911
	u32 present:present146,3939
	u32 enabled:enabled147,3955
	u32 show_in_ui:show_in_ui148,3971
	u32 functional:functional149,3990
	u32 battery_present:battery_present150,4009
	u32 reserved:reserved151,4033
struct acpi_device_flags 156,4068
	u32 dynamic_status:dynamic_status157,4095
	u32 hardware_id:hardware_id158,4118
	u32 compatible_ids:compatible_ids159,4138
	u32 bus_address:bus_address160,4161
	u32 unique_id:unique_id161,4181
	u32 removable:removable162,4199
	u32 ejectable:ejectable163,4217
	u32 lockable:lockable164,4235
	u32 suprise_removal_ok:suprise_removal_ok165,4252
	u32 power_manageable:power_manageable166,4279
	u32 performance_manageable:performance_manageable167,4304
	u32 wake_capable:wake_capable168,4335
	u32 force_power_state:force_power_state169,4386
	u32 reserved:reserved170,4412
struct acpi_device_dir 175,4453
	struct proc_dir_entry *entry;entry176,4478
#define acpi_device_dir(179,4513
typedef char acpi_bus_id[acpi_bus_id183,4579
typedef unsigned long acpi_bus_address;184,4608
typedef char acpi_hardware_id[acpi_hardware_id185,4648
typedef char acpi_unique_id[acpi_unique_id186,4683
typedef char acpi_device_name[acpi_device_name187,4715
typedef char acpi_device_class[acpi_device_class188,4750
struct acpi_device_pnp 190,4787
	acpi_bus_id bus_id;191,4812
	acpi_bus_address bus_address;192,4851
	acpi_hardware_id hardware_id;193,4893
	struct acpi_compatible_id_list *cid_list;cid_list194,4935
	acpi_unique_id unique_id;195,4990
	acpi_device_name device_name;196,5028
	acpi_device_class device_class;197,5083
#define acpi_device_bid(200,5144
#define acpi_device_adr(201,5189
#define acpi_device_hid(202,5239
#define acpi_device_uid(203,5289
#define acpi_device_name(204,5337
#define acpi_device_class(205,5388
struct acpi_device_power_flags 209,5466
	u32 explicit_get:explicit_get210,5499
	u32 power_resources:power_resources211,5540
	u32 inrush_current:inrush_current212,5586
	u32 power_removed:power_removed213,5632
	u32 reserved:reserved214,5676
struct acpi_device_power_state 217,5698
		u8 valid:valid219,5741
		u8 explicit_set:explicit_set220,5755
		u8 reserved:reserved221,5796
	} flags;222,5813
	int power;223,5823
	int latency;224,5867
	struct acpi_handle_list resources;225,5915
struct acpi_device_power 228,5988
	int state;229,6015
	struct acpi_device_power_flags flags;230,6048
	struct acpi_device_power_state states[states231,6087
struct acpi_device_perf_flags 236,6191
	u8 reserved:reserved237,6223
struct acpi_device_perf_state 240,6243
		u8 valid:valid242,6285
		u8 reserved:reserved243,6299
	} flags;244,6316
	u8 power;245,6326
	u8 performance;246,6369
	int latency;247,6418
struct acpi_device_perf 250,6470
	int state;251,6496
	struct acpi_device_perf_flags flags;252,6508
	int state_count;253,6546
	struct acpi_device_perf_state *states;states254,6564
struct acpi_device_wakeup_flags 258,6632
	u8 valid:valid259,6666
	u8 run_wake:run_wake260,6718
struct acpi_device_wakeup_state 263,6766
	u8 enabled:enabled264,6800
struct acpi_device_wakeup 267,6819
	acpi_handle gpe_device;268,6847
	acpi_integer gpe_number;269,6872
	acpi_integer sleep_state;270,6898
	struct acpi_handle_list resources;271,6925
	struct acpi_device_wakeup_state state;272,6961
	struct acpi_device_wakeup_flags flags;273,7001
struct acpi_device 278,7059
	acpi_handle handle;279,7080
	struct acpi_device *parent;parent280,7101
	struct list_head children;281,7130
	struct list_head node;282,7158
	struct list_head wakeup_list;283,7182
	struct list_head g_list;284,7213
	struct acpi_device_status status;285,7239
	struct acpi_device_flags flags;286,7274
	struct acpi_device_pnp pnp;287,7307
	struct acpi_device_power power;288,7336
	struct acpi_device_wakeup wakeup;289,7369
	struct acpi_device_perf performance;290,7404
	struct acpi_device_dir dir;291,7442
	struct acpi_device_ops ops;292,7471
	struct acpi_driver *driver;driver293,7500
	void *driver_data;driver_data294,7529
	struct device dev;295,7549
	struct acpi_bus_ops bus_ops;296,7569
	enum acpi_bus_removal_type removal_type;297,7652
#define acpi_driver_data(300,7740
#define to_acpi_device(301,7787
#define to_acpi_driver(302,7854
struct acpi_bus_event 312,8033
	struct list_head node;313,8057
	acpi_device_class device_class;314,8081
	acpi_bus_id bus_id;315,8114
	u32 type;316,8135
	u32 data;317,8146
static inline int acpi_bus_generate_proc_event(341,9190
struct acpi_bus_type 360,9967
	struct list_head list;361,9990
	struct bus_type *bus;bus362,10014
	int (*find_device)find_device364,10078
	int (*find_bridge)find_bridge366,10192
#define DEVICE_ACPI_HANDLE(374,10549
static inline int acpi_pm_device_sleep_state(379,10740

xen/include/acpi/acpixf.h,109
#define __ACXFACE_H__46,2135
acpi_status(*acpi_walk_resource_callback)acpi_walk_resource_callback276,8084

xen/include/acpi/acmacros.h,8375
#define __ACMACROS_H__45,2130
#define ACPI_LOWORD(50,2189
#define ACPI_HIWORD(51,2245
#define ACPI_LOBYTE(52,2322
#define ACPI_HIBYTE(53,2377
#define ACPI_SET_BIT(55,2451
#define ACPI_CLEAR_BIT(56,2511
#define ACPI_MIN(57,2572
#define ACPI_MAX(58,2632
#define ACPI_ARRAY_LENGTH(62,2717
#define ACPI_LODWORD(68,2890
#define ACPI_HIDWORD(69,2941
#define ACPI_LODWORD(76,3074
#define ACPI_HIDWORD(77,3130
#define ACPI_FORMAT_UINT64(86,3341
#define ACPI_GET8(93,3570
#define ACPI_GET16(94,3635
#define ACPI_GET32(95,3701
#define ACPI_GET64(96,3767
#define ACPI_SET8(97,3833
#define ACPI_SET16(98,3898
#define ACPI_SET32(99,3964
#define ACPI_SET64(100,4030
#define ACPI_CAST_PTR(105,4128
#define ACPI_CAST_INDIRECT_PTR(106,4197
#define ACPI_ADD_PTR(107,4267
#define ACPI_PTR_DIFF(108,4375
#define ACPI_TO_POINTER(112,4525
#define ACPI_TO_INTEGER(113,4620
#define ACPI_OFFSET(114,4692
#define ACPI_PHYSADDR_TO_PTR(115,4789
#define ACPI_PTR_TO_PHYSADDR(116,4848
#define ACPI_COMPARE_NAME(119,4948
#define ACPI_COMPARE_NAME(121,5049
#define ACPI_BUFFER_INDEX(136,5536
#define ACPI_MOVE_16_TO_16(144,5875
#define ACPI_MOVE_16_TO_32(147,6026
#define ACPI_MOVE_16_TO_64(151,6208
#define ACPI_MOVE_32_TO_16(157,6439
#define ACPI_MOVE_32_TO_32(159,6525
#define ACPI_MOVE_32_TO_64(164,6808
#define ACPI_MOVE_64_TO_16(172,7171
#define ACPI_MOVE_64_TO_32(174,7257
#define ACPI_MOVE_64_TO_64(176,7343
#define ACPI_BUFFER_INDEX(191,8009
#define ACPI_MOVE_16_TO_16(199,8244
#define ACPI_MOVE_16_TO_32(200,8326
#define ACPI_MOVE_16_TO_64(201,8408
#define ACPI_MOVE_32_TO_16(205,8534
#define ACPI_MOVE_32_TO_32(206,8619
#define ACPI_MOVE_32_TO_64(207,8701
#define ACPI_MOVE_64_TO_16(211,8827
#define ACPI_MOVE_64_TO_32(212,8912
#define ACPI_MOVE_64_TO_64(213,8997
#define ACPI_MOVE_16_TO_16(224,9347
#define ACPI_MOVE_16_TO_32(227,9504
#define ACPI_MOVE_16_TO_64(228,9598
#define ACPI_MOVE_32_TO_16(232,9736
#define ACPI_MOVE_32_TO_32(234,9822
#define ACPI_MOVE_32_TO_64(239,10105
#define ACPI_MOVE_64_TO_16(243,10243
#define ACPI_MOVE_64_TO_32(244,10328
#define ACPI_MOVE_64_TO_64(245,10413
#define ACPI_MOVE_SIZE_TO_16(259,11036
#define ACPI_MOVE_SIZE_TO_16(262,11132
#define _ACPI_DIV(271,11313
#define _ACPI_MUL(272,11386
#define _ACPI_MOD(273,11459
#define ACPI_DIV_2(275,11535
#define ACPI_MUL_2(276,11590
#define ACPI_MOD_2(277,11645
#define ACPI_DIV_4(279,11701
#define ACPI_MUL_4(280,11756
#define ACPI_MOD_4(281,11811
#define ACPI_DIV_8(283,11867
#define ACPI_MUL_8(284,11922
#define ACPI_MOD_8(285,11977
#define ACPI_DIV_16(287,12033
#define ACPI_MUL_16(288,12088
#define ACPI_MOD_16(289,12143
#define ACPI_DIV_32(291,12200
#define ACPI_MUL_32(292,12255
#define ACPI_MOD_32(293,12310
#define ACPI_ROUND_DOWN(298,12424
#define ACPI_ROUND_UP(301,12552
#define ACPI_ROUND_DOWN_TO_32BIT(307,12801
#define ACPI_ROUND_DOWN_TO_64BIT(308,12866
#define ACPI_ROUND_DOWN_TO_NATIVE_WORD(309,12931
#define ACPI_ROUND_UP_TO_32BIT(311,13020
#define ACPI_ROUND_UP_TO_64BIT(312,13083
#define ACPI_ROUND_UP_TO_NATIVE_WORD(313,13146
#define ACPI_ROUND_BITS_UP_TO_BYTES(315,13233
#define ACPI_ROUND_BITS_DOWN_TO_BYTES(316,13297
#define ACPI_ROUND_UP_TO_1K(318,13358
#define ACPI_ROUND_UP_TO(322,13467
#define ACPI_IS_MISALIGNED(324,13554
#define ACPI_MASK_BITS_ABOVE(332,13856
#define ACPI_MASK_BITS_BELOW(333,13946
#define ACPI_IS_OCTAL_DIGIT(335,14034
#define ACPI_REGISTER_PREPARE_BITS(339,14161
#define ACPI_REGISTER_INSERT_VALUE(340,14239
#define ACPI_INSERT_BITS(342,14366
#define ACPI_INIT_UUID(346,14496
#define ACPI_GET_DESCRIPTOR_TYPE(359,14997
#define ACPI_SET_DESCRIPTOR_TYPE(360,15102
#define ACPI_GET_OBJECT_TYPE(364,15249
#define ACPI_IS_SINGLE_TABLE(368,15428
#define ACPI_OP(374,15624
#define ACPI_OP(376,15759
#define ACPI_DISASM_ONLY_MEMBERS(380,15916
#define ACPI_DISASM_ONLY_MEMBERS(382,15965
#define ARG_TYPE_WIDTH 385,16009
#define ARG_1(386,16051
#define ARG_2(387,16102
#define ARG_3(388,16177
#define ARG_4(389,16252
#define ARG_5(390,16327
#define ARG_6(391,16402
#define ARGI_LIST1(393,16478
#define ARGI_LIST2(394,16529
#define ARGI_LIST3(395,16589
#define ARGI_LIST4(396,16658
#define ARGI_LIST5(397,16736
#define ARGI_LIST6(398,16823
#define ARGP_LIST1(400,16920
#define ARGP_LIST2(401,16971
#define ARGP_LIST3(402,17031
#define ARGP_LIST4(403,17100
#define ARGP_LIST5(404,17178
#define ARGP_LIST6(405,17265
#define GET_CURRENT_ARG_TYPE(407,17362
#define INCREMENT_ARG_LIST(408,17424
#define ACPI_MODULE_NAME(416,17782
#define ACPI_MODULE_NAME(418,17883
#define AE_INFO 425,18006
#define ACPI_INFO(432,18308
#define ACPI_WARNING(433,18367
#define ACPI_EXCEPTION(434,18429
#define ACPI_ERROR(435,18493
#define ACPI_ERROR_NAMESPACE(436,18553
#define ACPI_ERROR_METHOD(437,18631
#define ACPI_INFO(443,18755
#define ACPI_WARNING(444,18780
#define ACPI_EXCEPTION(445,18808
#define ACPI_ERROR(446,18838
#define ACPI_ERROR_NAMESPACE(447,18864
#define ACPI_ERROR_METHOD(448,18898
#define ACPI_DEBUG_PARAMETERS 460,19146
#define ACPI_GET_FUNCTION_NAME 473,19567
#define ACPI_FUNCTION_NAME(481,19937
#define ACPI_FUNCTION_NAME(486,20100
#define ACPI_FUNCTION_TRACE(491,20178
#define ACPI_FUNCTION_TRACE_PTR(493,20284
#define ACPI_FUNCTION_TRACE_U32(495,20407
#define ACPI_FUNCTION_TRACE_STR(497,20527
#define ACPI_FUNCTION_ENTRY(500,20654
#define ACPI_DO_WHILE0(513,21189
#define ACPI_DO_WHILE0(515,21249
#define return_VOID 518,21299
#define return_ACPI_STATUS(532,21855
#define return_PTR(536,22048
#define return_VALUE(540,22248
#define return_UINT8(544,22441
#define return_UINT32(548,22644
#define return_ACPI_STATUS(554,22895
#define return_PTR(557,23045
#define return_VALUE(560,23199
#define return_UINT8(563,23363
#define return_UINT32(564,23419
#define ACPI_FUNCTION_TRACE(570,23562
#define ACPI_FUNCTION_TRACE_PTR(571,23593
#define ACPI_FUNCTION_TRACE_U32(572,23630
#define ACPI_FUNCTION_TRACE_STR(573,23667
#define ACPI_FUNCTION_EXIT574,23704
#define ACPI_FUNCTION_STATUS_EXIT(575,23731
#define ACPI_FUNCTION_VALUE_EXIT(576,23768
#define ACPI_FUNCTION_TRACE(577,23804
#define ACPI_FUNCTION_ENTRY(578,23835
#define return_VOID 580,23866
#define return_ACPI_STATUS(581,23913
#define return_VALUE(582,23963
#define return_UINT8(583,24013
#define return_UINT32(584,24063
#define return_PTR(585,24113
#define ACPI_DEBUG_EXEC(591,24236
#define ACPI_NORMAL_EXEC(592,24278
#define ACPI_DEBUG_DEFINE(594,24307
#define ACPI_DEBUG_ONLY_MEMBERS(595,24350
#define _VERBOSE_STRUCTURES596,24393
#define ACPI_DUMP_STACK_ENTRY(600,24454
#define ACPI_DUMP_OPERANDS(601,24522
#define ACPI_DUMP_ENTRY(603,24623
#define ACPI_DUMP_PATHNAME(604,24688
#define ACPI_DUMP_RESOURCE_LIST(605,24759
#define ACPI_DUMP_BUFFER(606,24829
#define ACPI_DEBUG_PRINT(614,25113
#define ACPI_DEBUG_PRINT_RAW(615,25179
#define ACPI_DEBUG_EXEC(622,25358
#define ACPI_NORMAL_EXEC(623,25385
#define ACPI_DEBUG_DEFINE(625,25429
#define ACPI_DEBUG_ONLY_MEMBERS(626,25475
#define ACPI_FUNCTION_NAME(627,25526
#define ACPI_FUNCTION_TRACE(628,25573
#define ACPI_FUNCTION_TRACE_PTR(629,25621
#define ACPI_FUNCTION_TRACE_U32(630,25674
#define ACPI_FUNCTION_TRACE_STR(631,25727
#define ACPI_FUNCTION_EXIT	632,25780
#define ACPI_FUNCTION_STATUS_EXIT(633,25824
#define ACPI_FUNCTION_VALUE_EXIT(634,25877
#define ACPI_FUNCTION_ENTRY(635,25929
#define ACPI_DUMP_STACK_ENTRY(636,25976
#define ACPI_DUMP_OPERANDS(637,26025
#define ACPI_DUMP_ENTRY(638,26079
#define ACPI_DUMP_TABLES(639,26125
#define ACPI_DUMP_PATHNAME(640,26172
#define ACPI_DUMP_RESOURCE_LIST(641,26224
#define ACPI_DUMP_BUFFER(642,26275
#define ACPI_DEBUG_PRINT(643,26322
#define ACPI_DEBUG_PRINT_RAW(644,26368
#define return_VOID 646,26418
#define return_ACPI_STATUS(647,26465
#define return_VALUE(648,26515
#define return_UINT8(649,26565
#define return_UINT32(650,26615
#define return_PTR(651,26665
#define ACPI_DEBUGGER_EXEC(661,26935
#define ACPI_DEBUGGER_EXEC(663,26983
#define ACPI_ADD_OBJECT_NAME(671,27105
#define ACPI_ADD_OBJECT_NAME(675,27305
#define ACPI_ALLOCATE(686,27480
#define ACPI_ALLOCATE_ZEROED(689,27623
#define ACPI_FREE(692,27763
#define ACPI_MEM_TRACKING(694,27823
#define ACPI_ALLOCATE(700,27885
#define ACPI_ALLOCATE_ZEROED(701,28002
#define ACPI_FREE(702,28127
#define ACPI_MEM_TRACKING(703,28227

xen/include/acpi/platform/acenv.h,3020
#define __ACENV_H__45,2127
#define ACPI_USE_LOCAL_CACHE56,2378
#define ACPI_DEBUG_OUTPUT60,2440
#define ACPI_APPLICATION61,2466
#define ACPI_DISASSEMBLER62,2491
#define ACPI_CONSTANT_EVAL_ONLY63,2517
#define ACPI_LARGE_NAMESPACE_NODE64,2549
#define ACPI_DATA_TABLE_DISASSEMBLY65,2583
#undef DEBUGGER_THREADING69,2648
#define DEBUGGER_THREADING 70,2674
#define ACPI_FULL_DEBUG71,2731
#define ACPI_APPLICATION72,2755
#define ACPI_DEBUGGER73,2780
#define ACPI_MUTEX_DEBUG74,2802
#define ACPI_DBG_TRACK_ALLOCATIONS75,2827
#define ACPI_DEBUG_OUTPUT80,2905
#define ACPI_APPLICATION82,2938
#define ACPI_DISASSEMBLER83,2963
#define ACPI_NO_METHOD_EXECUTION84,2989
#define ACPI_LARGE_NAMESPACE_NODE85,3022
#define ACPI_DATA_TABLE_DISASSEMBLY86,3056
#define ACPI_USE_SYSTEM_CLIBRARY90,3124
#define ACPI_USE_LOCAL_CACHE91,3157
#define ACPI_DEBUGGER95,3217
#define ACPI_DEBUG_OUTPUT96,3239
#define ACPI_DISASSEMBLER97,3265
#define ACPI_USE_STANDARD_HEADERS175,5062
#define COMPILER_DEPENDENT_INT64 177,5097
#define COMPILER_DEPENDENT_UINT64 178,5142
#define DEBUGGER_SINGLE_THREADED 192,5554
#define DEBUGGER_MULTI_THREADED 193,5592
#define DEBUGGER_THREADING 197,5682
#define DEBUGGER_THREADING 200,5750
#define ACPI_IS_ASCII(210,6048
#define ACPI_STRSTR(231,6484
#define ACPI_STRCHR(232,6535
#define ACPI_STRLEN(233,6585
#define ACPI_STRCPY(234,6641
#define ACPI_STRNCPY(235,6697
#define ACPI_STRNCMP(236,6770
#define ACPI_STRCMP(237,6836
#define ACPI_STRCAT(238,6885
#define ACPI_STRNCAT(239,6941
#define ACPI_STRTOUL(240,7007
#define ACPI_MEMCMP(241,7073
#define ACPI_MEMCPY(242,7168
#define ACPI_MEMSET(243,7240
#define ACPI_TOUPPER(245,7313
#define ACPI_TOLOWER(246,7364
#define ACPI_IS_XDIGIT(247,7415
#define ACPI_IS_DIGIT(248,7467
#define ACPI_IS_SPACE(249,7518
#define ACPI_IS_UPPER(250,7569
#define ACPI_IS_PRINT(251,7620
#define ACPI_IS_ALPHA(252,7671
#define _VALIST272,8204
typedef char *va_list;va_list273,8220
#define  _AUPBND 279,8307
#define  _ADNBND 280,8370
#define _bnd(285,8485
#define va_arg(286,8553
#define va_end(287,8646
#define va_start(288,8687
#define ACPI_STRSTR(292,8799
#define ACPI_STRCHR(293,8859
#define ACPI_STRLEN(294,8918
#define ACPI_STRCPY(295,8983
#define ACPI_STRNCPY(296,9048
#define ACPI_STRNCMP(297,9130
#define ACPI_STRCMP(298,9205
#define ACPI_STRCAT(299,9263
#define ACPI_STRNCAT(300,9328
#define ACPI_STRTOUL(301,9403
#define ACPI_MEMCMP(302,9478
#define ACPI_MEMCPY(303,9581
#define ACPI_MEMSET(304,9662
#define ACPI_TOUPPER 305,9743
#define ACPI_TOLOWER 306,9792
#define ACPI_SYSTEM_XFACE337,10711
#define ACPI_EXTERNAL_XFACE338,10737
#define ACPI_INTERNAL_XFACE339,10765
#define ACPI_INTERNAL_VAR_XFACE340,10793
#define ACPI_ASM_MACROS342,10826
#define BREAKPOINT3343,10850
#define ACPI_DISABLE_IRQS(344,10870
#define ACPI_ENABLE_IRQS(345,10898
#define ACPI_ACQUIRE_GLOBAL_LOCK(346,10925
#define ACPI_RELEASE_GLOBAL_LOCK(347,10970
#undef BREAKPOINT3355,11139
#define BREAKPOINT3356,11158

xen/include/acpi/platform/acgcc.h,135
#define __ACGCC_H__45,2116
#define ACPI_GET_FUNCTION_NAME 49,2213
#define ACPI_PRINTF_LIKE(55,2408
#define ACPI_UNUSED_VAR 63,2736

xen/include/acpi/platform/aclinux.h,460
#define __ACLINUX_H__45,2119
#define ACPI_USE_SYSTEM_CLIBRARY47,2142
#define ACPI_USE_DO_WHILE_048,2175
#define ACPI_MACHINE_WIDTH 64,2507
#define acpi_cache_t 65,2557
#define acpi_spinlock 66,2628
#define ACPI_EXPORT_SYMBOL(67,2681
#define strtoul 68,2740
#define ACPI_PATHNAME_MAX 71,2847
#define acpi_cpu_flags 75,2911
#define acpi_thread_id 77,2949
#define ACPI_ALLOCATE(79,2987
#define ACPI_ALLOCATE_ZEROED(80,3029
#define ACPI_FREE(84,3189

xen/include/acpi/aclocal.h,19416
#define __ACLOCAL_H__45,2144
#define ACPI_WAIT_FOREVER 49,2220
#define ACPI_DO_NOT_WAIT 50,2295
#define ACPI_SERIALIZED 51,2337
typedef u32 acpi_mutex_handle;53,2383
#define ACPI_GLOBAL_LOCK 54,2414
#define AML_NUM_OPCODES 58,2520
#define ACPI_MTX_INTERPRETER 82,3264
#define ACPI_MTX_NAMESPACE 83,3339
#define ACPI_MTX_TABLES 84,3402
#define ACPI_MTX_EVENTS 85,3471
#define ACPI_MTX_CACHES 86,3540
#define ACPI_MTX_MEMORY 87,3622
#define ACPI_MTX_DEBUG_CMD_COMPLETE 88,3698
#define ACPI_MTX_DEBUG_CMD_READY 89,3759
#define ACPI_MAX_MUTEX 91,3821
#define ACPI_NUM_MUTEX 92,3863
static char *acpi_gbl_mutex_names[acpi_gbl_mutex_names99,4047
#define ACPI_LOCK_GPES 117,4431
#define ACPI_LOCK_HARDWARE 118,4473
#define ACPI_MAX_LOCK 120,4516
#define ACPI_NUM_LOCK 121,4558
typedef u8 acpi_owner_id;125,4689
#define ACPI_OWNER_ID_MAX 126,4715
#define ACPI_MUTEX_NOT_ACQUIRED 130,4829
struct acpi_mutex_info 134,4925
	acpi_mutex mutex;135,4950
	u32 use_count;136,4969
	acpi_thread_id thread_id;137,4985
#define ACPI_MTX_DO_NOT_LOCK 142,5066
#define ACPI_MTX_LOCK 143,5108
#define ACPI_FIELD_BYTE_GRANULARITY 147,5185
#define ACPI_FIELD_WORD_GRANULARITY 148,5227
#define ACPI_FIELD_DWORD_GRANULARITY 149,5269
#define ACPI_FIELD_QWORD_GRANULARITY 150,5311
#define ACPI_ENTRY_NOT_FOUND 152,5354
	ACPI_IMODE_LOAD_PASS1 163,5670
	ACPI_IMODE_LOAD_PASS1 = 0x01,x01163,5670
	ACPI_IMODE_LOAD_PASS2 164,5701
	ACPI_IMODE_LOAD_PASS2 = 0x02,x02164,5701
	ACPI_IMODE_EXECUTE 165,5732
	ACPI_IMODE_EXECUTE = 0x03x03165,5732
} acpi_interpreter_mode;166,5759
union acpi_name_union 168,5785
	u32 integer;169,5809
	char ascii[ascii170,5823
struct acpi_namespace_node 184,6298
	union acpi_operand_object *object;object185,6327
	u8 descriptor_type;186,6388
	u8 type;187,6453
	u8 flags;188,6506
	acpi_owner_id owner_id;189,6544
	union acpi_name_union name;190,6588
	struct acpi_namespace_node *child;child191,6663
	struct acpi_namespace_node *peer;peer192,6717
	union acpi_parse_object *op;op198,6920
	u32 value;199,6950
	u32 length;200,6962
#define ANOBJ_END_OF_PEER_LIST 206,7014
#define ANOBJ_TEMPORARY 207,7106
#define ANOBJ_METHOD_ARG 208,7201
#define ANOBJ_METHOD_LOCAL 209,7278
#define ANOBJ_SUBTREE_HAS_INI 210,7352
#define ANOBJ_IS_EXTERNAL 212,7443
#define ANOBJ_METHOD_NO_RETVAL 213,7541
#define ANOBJ_METHOD_SOME_NO_RETVAL 214,7631
#define ANOBJ_IS_BIT_OFFSET 215,7731
#define ANOBJ_IS_REFERENCED 216,7820
struct acpi_table_desc 221,7959
	acpi_physical_address address;222,7984
	struct acpi_table_header *pointer;pointer223,8016
	u32 length;224,8052
	union acpi_name_union signature;225,8096
	acpi_owner_id owner_id;226,8130
	u8 flags;227,8155
#define ACPI_TABLE_ORIGIN_UNKNOWN 232,8193
#define ACPI_TABLE_ORIGIN_MAPPED 233,8237
#define ACPI_TABLE_ORIGIN_ALLOCATED 234,8281
#define ACPI_TABLE_ORIGIN_MASK 235,8325
#define ACPI_TABLE_IS_LOADED 236,8369
struct acpi_internal_rsdt 240,8460
	struct acpi_table_desc *tables;tables241,8488
	u32 count;242,8521
	u32 size;243,8533
	u8 flags;244,8544
#define ACPI_ROOT_ORIGIN_UNKNOWN 249,8582
#define ACPI_ROOT_ORIGIN_ALLOCATED 250,8650
#define ACPI_ROOT_ALLOW_RESIZE 251,8694
#define ACPI_TABLE_INDEX_DSDT 255,8779
#define ACPI_TABLE_INDEX_FACS 256,8823
struct acpi_find_context 258,8868
	char *search_for;search_for259,8895
	acpi_handle *list;list260,8914
	u32 *count;count261,8934
struct acpi_ns_search_data 264,8951
	struct acpi_namespace_node *node;node265,8980
struct acpi_predefined_names 271,9056
	char *name;name272,9087
	u8 type;273,9100
	char *val;val274,9110
#define ACPI_COPY_TYPE_SIMPLE 279,9173
#define ACPI_COPY_TYPE_PACKAGE 280,9215
struct acpi_namestring_info 284,9328
	char *external_name;external_name285,9358
	char *next_external_char;next_external_char286,9380
	char *internal_name;internal_name287,9407
	u32 length;288,9429
	u32 num_segments;289,9442
	u32 num_carats;290,9461
	u8 fully_qualified;291,9478
struct acpi_create_field_info 296,9530
	struct acpi_namespace_node *region_node;region_node297,9562
	struct acpi_namespace_node *field_node;field_node298,9604
	struct acpi_namespace_node *register_node;register_node299,9645
	struct acpi_namespace_node *data_register_node;data_register_node300,9689
	u32 bank_value;301,9738
	u32 field_bit_position;302,9755
	u32 field_bit_length;303,9780
	u8 field_flags;304,9803
	u8 attribute;305,9820
	u8 field_type;306,9835
acpi_status(*ACPI_INTERNAL_METHOD)ACPI_INTERNAL_METHOD310,9863
#define ACPI_BTYPE_ANY 315,9992
#define ACPI_BTYPE_INTEGER 316,10043
#define ACPI_BTYPE_STRING 317,10094
#define ACPI_BTYPE_BUFFER 318,10145
#define ACPI_BTYPE_PACKAGE 319,10196
#define ACPI_BTYPE_FIELD_UNIT 320,10247
#define ACPI_BTYPE_DEVICE 321,10298
#define ACPI_BTYPE_EVENT 322,10349
#define ACPI_BTYPE_METHOD 323,10400
#define ACPI_BTYPE_MUTEX 324,10451
#define ACPI_BTYPE_REGION 325,10502
#define ACPI_BTYPE_POWER 326,10553
#define ACPI_BTYPE_PROCESSOR 327,10604
#define ACPI_BTYPE_THERMAL 328,10655
#define ACPI_BTYPE_BUFFER_FIELD 329,10706
#define ACPI_BTYPE_DDB_HANDLE 330,10757
#define ACPI_BTYPE_DEBUG_OBJECT 331,10808
#define ACPI_BTYPE_REFERENCE 332,10859
#define ACPI_BTYPE_RESOURCE 333,10910
#define ACPI_BTYPE_COMPUTE_DATA 335,10962
#define ACPI_BTYPE_DATA 337,11064
#define ACPI_BTYPE_DATA_REFERENCE 338,11152
#define ACPI_BTYPE_DEVICE_OBJECTS 339,11257
#define ACPI_BTYPE_OBJECTS_AND_REFS 340,11361
#define ACPI_BTYPE_ALL_OBJECTS 341,11431
struct acpi_handler_info 351,11758
	acpi_event_handler address;352,11785
	void *context;context353,11847
	struct acpi_namespace_node *method_node;method_node354,11902
union acpi_gpe_dispatch_info 357,11993
	struct acpi_namespace_node *method_node;method_node358,12024
	struct acpi_handler_info *handler;handler359,12103
struct acpi_gpe_event_info 366,12269
	union acpi_gpe_dispatch_info dispatch;367,12298
	struct acpi_gpe_register_info *register_info;register_info368,12369
	u8 flags;369,12451
	u8 gpe_number;370,12494
struct acpi_gpe_register_info 375,12620
	struct acpi_generic_address status_address;376,12652
	struct acpi_generic_address enable_address;377,12725
	u8 enable_for_wake;378,12798
	u8 enable_for_run;379,12860
	u8 base_gpe_number;380,12920
struct acpi_gpe_block_info 387,13127
	struct acpi_namespace_node *node;node388,13156
	struct acpi_gpe_block_info *previous;previous389,13191
	struct acpi_gpe_block_info *next;next390,13230
	struct acpi_gpe_xrupt_info *xrupt_block;xrupt_block391,13265
	struct acpi_gpe_register_info *register_info;register_info392,13344
	struct acpi_gpe_event_info *event_info;event_info393,13423
	struct acpi_generic_address block_address;394,13487
	u32 register_count;395,13563
	u8 block_base_number;396,13624
struct acpi_gpe_xrupt_info 401,13780
	struct acpi_gpe_xrupt_info *previous;previous402,13809
	struct acpi_gpe_xrupt_info *next;next403,13848
	struct acpi_gpe_block_info *gpe_block_list_head;gpe_block_list_head404,13883
	u32 interrupt_number;405,13973
struct acpi_gpe_walk_info 408,14030
	struct acpi_namespace_node *gpe_device;gpe_device409,14058
	struct acpi_gpe_block_info *gpe_block;gpe_block410,14099
typedef acpi_status(*acpi_gpe_callback)acpi_gpe_callback413,14143
struct acpi_fixed_event_handler 420,14342
	acpi_event_handler handler;421,14376
	void *context;context422,14431
struct acpi_fixed_event_info 425,14490
	u8 status_register_id;426,14521
	u8 enable_register_id;427,14545
	u16 status_bit_mask;428,14569
	u16 enable_bit_mask;429,14591
struct acpi_field_info 434,14665
	u8 skip_field;435,14690
	u8 field_flag;436,14706
	u32 pkg_length;437,14722
#define ACPI_CONTROL_NORMAL 446,14945
#define ACPI_CONTROL_CONDITIONAL_EXECUTING 447,14995
#define ACPI_CONTROL_PREDICATE_EXECUTING 448,15045
#define ACPI_CONTROL_PREDICATE_FALSE 449,15095
#define ACPI_CONTROL_PREDICATE_TRUE 450,15145
#define ACPI_STATE_COMMON 452,15196
struct acpi_common_state 461,15570
ACPI_STATE_COMMON}ACPI_STATE_COMMON462,15597
struct acpi_update_state 467,15693
	ACPI_STATE_COMMON union acpi_operand_object *object;object468,15720
struct acpi_pkg_state 474,15843
	ACPI_STATE_COMMON u16 index;475,15867
	union acpi_operand_object *source_object;source_object476,15897
	union acpi_operand_object *dest_object;dest_object477,15940
	struct acpi_walk_state *walk_state;walk_state478,15981
	void *this_target_obj;this_target_obj479,16018
	u32 num_packages;480,16042
struct acpi_control_state 487,16167
	ACPI_STATE_COMMON u16 opcode;488,16195
	union acpi_parse_object *predicate_op;predicate_op489,16226
	u8 *aml_predicate_start;aml_predicate_start490,16266
	u8 *package_end;package_end491,16326
struct acpi_scope_state 497,16439
	ACPI_STATE_COMMON struct acpi_namespace_node *node;node498,16465
struct acpi_pscope_state 501,16522
	ACPI_STATE_COMMON u32 arg_count;502,16549
	union acpi_parse_object *op;op503,16615
	u8 *arg_end;arg_end504,16675
	u8 *pkg_end;pkg_end505,16717
	u32 arg_list;506,16758
struct acpi_thread_state 513,16962
	ACPI_STATE_COMMON u8 current_sync_level;514,16989
	struct acpi_walk_state *walk_state_list;walk_state_list515,17071
	union acpi_operand_object *acquired_mutex_list;acquired_mutex_list516,17163
	acpi_thread_id thread_id;517,17257
struct acpi_result_values 524,17396
	ACPI_STATE_COMMON u8 num_results;525,17424
	u8 last_insert;526,17459
	union acpi_operand_object *obj_desc[obj_desc527,17476
acpi_status(*acpi_parse_downwards)acpi_parse_downwards531,17549
typedef acpi_status(*acpi_parse_upwards)acpi_parse_upwards534,17667
struct acpi_notify_info 540,17836
	ACPI_STATE_COMMON struct acpi_namespace_node *node;node541,17862
	union acpi_operand_object *handler_obj;handler_obj542,17915
union acpi_generic_state 547,18007
	struct acpi_common_state common;548,18034
	struct acpi_control_state control;549,18068
	struct acpi_update_state update;550,18104
	struct acpi_scope_state scope;551,18138
	struct acpi_pscope_state parse_scope;552,18170
	struct acpi_pkg_state pkg;553,18209
	struct acpi_thread_state thread;554,18237
	struct acpi_result_values results;555,18271
	struct acpi_notify_info notify;556,18307
typedef acpi_status(*ACPI_EXECUTE_OP)ACPI_EXECUTE_OP565,18545
struct acpi_opcode_info 576,18867
	char *name;name578,18954
	u32 parse_args;580,19019
	u32 runtime_args;581,19072
	u16 flags;582,19122
	u8 object_type;583,19152
	u8 type;585,19242
union acpi_parse_value 588,19275
	acpi_integer integer;589,19300
	struct uint64_struct integer64;590,19362
	u32 size;591,19439
	char *string;string592,19480
	u8 *buffer;buffer593,19525
	char *name;name594,19562
	union acpi_parse_object *arg;arg595,19605
#define ACPI_PARSE_COMMON 598,19674
#define ACPI_DASM_BUFFER 612,20599
#define ACPI_DASM_RESOURCE 613,20644
#define ACPI_DASM_STRING 614,20689
#define ACPI_DASM_UNICODE 615,20734
#define ACPI_DASM_EISAID 616,20779
#define ACPI_DASM_MATCHOP 617,20824
#define ACPI_DASM_LNOT_PREFIX 618,20869
#define ACPI_DASM_LNOT_SUFFIX 619,20914
#define ACPI_DASM_IGNORE 620,20959
struct acpi_parse_obj_common 625,21066
ACPI_PARSE_COMMON}ACPI_PARSE_COMMON626,21097
struct acpi_parse_obj_named 632,21234
	ACPI_PARSE_COMMON u8 *path;path633,21264
	u8 *data;data634,21293
	u32 length;635,21337
	u32 name;636,21368
#define ACPI_MAX_PARSEOP_NAME 641,21476
struct acpi_parse_obj_asl 643,21512
	ACPI_PARSE_COMMON union acpi_parse_object *child;child644,21540
	union acpi_parse_object *parent_method;parent_method645,21591
	char *filename;filename646,21632
	char *external_name;external_name647,21649
	char *namepath;namepath648,21671
	char name_seg[name_seg649,21688
	u32 extra_value;650,21707
	u32 column;651,21725
	u32 line_number;652,21738
	u32 logical_line_number;653,21756
	u32 logical_byte_offset;654,21782
	u32 end_line;655,21808
	u32 end_logical_line;656,21823
	u32 acpi_btype;657,21846
	u32 aml_length;658,21863
	u32 aml_subtree_length;659,21880
	u32 final_aml_length;660,21905
	u32 final_aml_offset;661,21928
	u32 compile_flags;662,21951
	u16 parse_opcode;663,21971
	u8 aml_opcode_length;664,21990
	u8 aml_pkg_len_bytes;665,22013
	u8 extra;666,22036
	char parse_op_name[parse_op_name667,22047
union acpi_parse_object 670,22095
	struct acpi_parse_obj_common common;671,22121
	struct acpi_parse_obj_named named;672,22159
	struct acpi_parse_obj_asl asl;673,22195
struct acpi_parse_state 680,22315
	u8 *aml_start;aml_start681,22341
	u8 *aml;aml682,22379
	u8 *aml_end;aml_end683,22410
	u8 *pkg_start;pkg_start684,22451
	u8 *pkg_end;pkg_end685,22496
	union acpi_parse_object *start_op;start_op686,22537
	struct acpi_namespace_node *start_node;start_node687,22598
	union acpi_generic_state *scope;scope688,22639
	union acpi_parse_object *start_scope;start_scope689,22693
	u32 aml_size;690,22732
#define ACPI_PARSEOP_GENERIC 695,22777
#define ACPI_PARSEOP_NAMED 696,22822
#define ACPI_PARSEOP_DEFERRED 697,22867
#define ACPI_PARSEOP_BYTELIST 698,22912
#define ACPI_PARSEOP_IN_CACHE 699,22957
#define ACPI_PARSEOP_IGNORE 703,23036
#define ACPI_PARSEOP_PARAMLIST 704,23081
#define ACPI_PARSEOP_EMPTY_TERMLIST 705,23126
#define ACPI_PARSEOP_SPECIAL 706,23171
#define PCI_ROOT_HID_STRING 714,23419
#define PCI_EXPRESS_ROOT_HID_STRING 715,23469
struct acpi_bit_register_info 717,23520
	u8 parent_register;718,23552
	u8 bit_position;719,23573
	u16 access_bit_mask;720,23591
#define ACPI_PM1_STATUS_PRESERVED_BITS 727,23721
#define ACPI_PM1_CONTROL_PRESERVED_BITS 728,23789
#define ACPI_REGISTER_PM1_STATUS 734,23928
#define ACPI_REGISTER_PM1_ENABLE 735,23981
#define ACPI_REGISTER_PM1_CONTROL 736,24034
#define ACPI_REGISTER_PM1A_CONTROL 737,24087
#define ACPI_REGISTER_PM1B_CONTROL 738,24140
#define ACPI_REGISTER_PM2_CONTROL 739,24193
#define ACPI_REGISTER_PM_TIMER 740,24246
#define ACPI_REGISTER_PROCESSOR_BLOCK 741,24299
#define ACPI_REGISTER_SMI_COMMAND_BLOCK 742,24352
#define ACPI_BITMASK_TIMER_STATUS 746,24452
#define ACPI_BITMASK_BUS_MASTER_STATUS 747,24507
#define ACPI_BITMASK_GLOBAL_LOCK_STATUS 748,24562
#define ACPI_BITMASK_POWER_BUTTON_STATUS 749,24617
#define ACPI_BITMASK_SLEEP_BUTTON_STATUS 750,24672
#define ACPI_BITMASK_RT_CLOCK_STATUS 751,24727
#define ACPI_BITMASK_PCIEXP_WAKE_STATUS 752,24782
#define ACPI_BITMASK_WAKE_STATUS 753,24852
#define ACPI_BITMASK_ALL_FIXED_STATUS 755,24908
#define ACPI_BITMASK_TIMER_ENABLE 764,25227
#define ACPI_BITMASK_GLOBAL_LOCK_ENABLE 765,25282
#define ACPI_BITMASK_POWER_BUTTON_ENABLE 766,25337
#define ACPI_BITMASK_SLEEP_BUTTON_ENABLE 767,25392
#define ACPI_BITMASK_RT_CLOCK_ENABLE 768,25447
#define ACPI_BITMASK_PCIEXP_WAKE_DISABLE 769,25502
#define ACPI_BITMASK_SCI_ENABLE 771,25573
#define ACPI_BITMASK_BUS_MASTER_RLD 772,25628
#define ACPI_BITMASK_GLOBAL_LOCK_RELEASE 773,25683
#define ACPI_BITMASK_SLEEP_TYPE_X 774,25738
#define ACPI_BITMASK_SLEEP_ENABLE 775,25793
#define ACPI_BITMASK_ARB_DISABLE 777,25849
#define ACPI_BITPOSITION_TIMER_STATUS 781,25950
#define ACPI_BITPOSITION_BUS_MASTER_STATUS 782,26003
#define ACPI_BITPOSITION_GLOBAL_LOCK_STATUS 783,26056
#define ACPI_BITPOSITION_POWER_BUTTON_STATUS 784,26109
#define ACPI_BITPOSITION_SLEEP_BUTTON_STATUS 785,26162
#define ACPI_BITPOSITION_RT_CLOCK_STATUS 786,26215
#define ACPI_BITPOSITION_PCIEXP_WAKE_STATUS 787,26268
#define ACPI_BITPOSITION_WAKE_STATUS 788,26336
#define ACPI_BITPOSITION_TIMER_ENABLE 790,26390
#define ACPI_BITPOSITION_GLOBAL_LOCK_ENABLE 791,26443
#define ACPI_BITPOSITION_POWER_BUTTON_ENABLE 792,26496
#define ACPI_BITPOSITION_SLEEP_BUTTON_ENABLE 793,26549
#define ACPI_BITPOSITION_RT_CLOCK_ENABLE 794,26602
#define ACPI_BITPOSITION_PCIEXP_WAKE_DISABLE 795,26655
#define ACPI_BITPOSITION_SCI_ENABLE 797,26724
#define ACPI_BITPOSITION_BUS_MASTER_RLD 798,26777
#define ACPI_BITPOSITION_GLOBAL_LOCK_RELEASE 799,26830
#define ACPI_BITPOSITION_SLEEP_TYPE_X 800,26883
#define ACPI_BITPOSITION_SLEEP_ENABLE 801,26936
#define ACPI_BITPOSITION_ARB_DISABLE 803,26990
#define ACPI_ADDRESS_TYPE_MEMORY_RANGE 813,27261
#define ACPI_ADDRESS_TYPE_IO_RANGE 814,27311
#define ACPI_ADDRESS_TYPE_BUS_NUMBER_RANGE 815,27361
#define ACPI_RESOURCE_NAME_LARGE 819,27455
#define ACPI_RESOURCE_NAME_SMALL 820,27508
#define ACPI_RESOURCE_NAME_SMALL_MASK 822,27562
#define ACPI_RESOURCE_NAME_SMALL_LENGTH_MASK 823,27647
#define ACPI_RESOURCE_NAME_LARGE_MASK 824,27734
#define ACPI_RESOURCE_NAME_IRQ 830,27955
#define ACPI_RESOURCE_NAME_DMA 831,28008
#define ACPI_RESOURCE_NAME_START_DEPENDENT 832,28061
#define ACPI_RESOURCE_NAME_END_DEPENDENT 833,28114
#define ACPI_RESOURCE_NAME_IO 834,28167
#define ACPI_RESOURCE_NAME_FIXED_IO 835,28220
#define ACPI_RESOURCE_NAME_RESERVED_S1 836,28273
#define ACPI_RESOURCE_NAME_RESERVED_S2 837,28326
#define ACPI_RESOURCE_NAME_RESERVED_S3 838,28379
#define ACPI_RESOURCE_NAME_RESERVED_S4 839,28432
#define ACPI_RESOURCE_NAME_VENDOR_SMALL 840,28485
#define ACPI_RESOURCE_NAME_END_TAG 841,28538
#define ACPI_RESOURCE_NAME_MEMORY24 847,28727
#define ACPI_RESOURCE_NAME_GENERIC_REGISTER 848,28780
#define ACPI_RESOURCE_NAME_RESERVED_L1 849,28833
#define ACPI_RESOURCE_NAME_VENDOR_LARGE 850,28886
#define ACPI_RESOURCE_NAME_MEMORY32 851,28939
#define ACPI_RESOURCE_NAME_FIXED_MEMORY32 852,28992
#define ACPI_RESOURCE_NAME_ADDRESS32 853,29045
#define ACPI_RESOURCE_NAME_ADDRESS16 854,29098
#define ACPI_RESOURCE_NAME_EXTENDED_IRQ 855,29151
#define ACPI_RESOURCE_NAME_ADDRESS64 856,29204
#define ACPI_RESOURCE_NAME_EXTENDED_ADDRESS64 857,29257
#define ACPI_RESOURCE_NAME_LARGE_MAX 858,29310
#define ACPI_ASCII_ZERO 866,29546
struct acpi_db_method_info 874,29769
	acpi_handle main_thread_gate;875,29798
	acpi_handle thread_complete_gate;876,29829
	u32 *threads;threads877,29864
	u32 num_threads;878,29879
	u32 num_created;879,29897
	u32 num_completed;880,29915
	char *name;name882,29936
	u32 flags;883,29949
	u32 num_loops;884,29961
	char pathname[pathname885,29977
	char **args;args886,29998
	char init_args;894,30198
	char *arguments[arguments895,30215
	char num_threads_str[num_threads_str896,30236
	char id_of_thread_str[id_of_thread_str897,30263
	char index_of_thread_str[index_of_thread_str898,30291
struct acpi_integrity_info 901,30326
	u32 nodes;902,30355
	u32 objects;903,30367
#define ACPI_DB_REDIRECTABLE_OUTPUT 906,30385
#define ACPI_DB_CONSOLE_OUTPUT 907,30430
#define ACPI_DB_DUPLICATE_OUTPUT 908,30475
#define ACPI_MEM_MALLOC 918,30745
#define ACPI_MEM_CALLOC 919,30787
#define ACPI_MAX_MODULE_NAME 920,30829
#define ACPI_COMMON_DEBUG_MEM_HEADER 922,30873
struct acpi_debug_mem_header 931,31239
ACPI_COMMON_DEBUG_MEM_HEADER}ACPI_COMMON_DEBUG_MEM_HEADER932,31270
struct acpi_debug_mem_block 934,31302
	ACPI_COMMON_DEBUG_MEM_HEADER u64 user_space;935,31332
#define ACPI_MEM_LIST_GLOBAL 938,31382
#define ACPI_MEM_LIST_NSNODE 939,31424
#define ACPI_MEM_LIST_MAX 940,31466
#define ACPI_NUM_MEM_LISTS 941,31508
struct acpi_memory_list 943,31551
	char *list_name;list_name944,31577
	void *list_head;list_head945,31595
	u16 object_size;946,31613
	u16 max_depth;947,31631
	u16 current_depth;948,31647
	u16 link_offset;949,31667
	u32 total_allocated;955,31771
	u32 total_freed;956,31793
	u32 max_occupied;957,31811
	u32 total_size;958,31830
	u32 current_total_size;959,31847
	u32 requests;960,31872
	u32 hits;961,31887

xen/include/acpi/acpi.h,27
#define __ACPI_H__45,2135

xen/include/acpi/acpiosxf.h,711
#define __ACPIOSXF_H__48,2295
	OSL_GLOBAL_LOCK_HANDLER,56,2417
	OSL_NOTIFY_HANDLER,57,2443
	OSL_GPE_HANDLER,58,2464
	OSL_DEBUGGER_THREAD,59,2482
	OSL_EC_POLL_HANDLER,60,2504
	OSL_EC_BURST_HANDLER61,2526
} acpi_execute_type;62,2548
#define ACPI_NO_UNIT_LIMIT 64,2570
#define ACPI_MUTEX_SEM 65,2617
#define ACPI_SIGNAL_FATAL 69,2692
#define ACPI_SIGNAL_BREAKPOINT 70,2730
struct acpi_signal_fatal_info 72,2769
	u32 type;73,2801
	u32 code;74,2812
	u32 argument;75,2823
#define acpi_os_create_mutex(136,4262
#define acpi_os_delete_mutex(137,4350
#define acpi_os_acquire_mutex(138,4435
#define acpi_os_release_mutex(139,4520
#define REQUEST_FILE_ONLY 276,7897
#define REQUEST_DIR_ONLY 277,7943

xen/include/asm-x86/guest_pt.h,3646
#define _XEN_ASM_GUEST_PT_H30,1252
#define PRI_gfn 38,1431
#define VALID_GFN(40,1455
valid_gfn(43,1514
gfn_to_paddr(49,1592
#undef gfn_to_mfn55,1714
#define gfn_to_mfn(56,1732
#define GUEST_L1_PAGETABLE_ENTRIES 63,1910
#define GUEST_L2_PAGETABLE_ENTRIES 64,1954
#define GUEST_L1_PAGETABLE_SHIFT 65,1998
#define GUEST_L2_PAGETABLE_SHIFT 66,2042
typedef uint32_t guest_intpte_t;68,2087
typedef struct { guest_intpte_t l1;69,2120
typedef struct { guest_intpte_t l1; } guest_l1e_t;69,2120
typedef struct { guest_intpte_t l2;70,2171
typedef struct { guest_intpte_t l2; } guest_l2e_t;70,2171
#define PRI_gpte 72,2223
static inline paddr_t guest_l1e_get_paddr(74,2247
static inline paddr_t guest_l2e_get_paddr(76,2366
static inline gfn_t guest_l1e_get_gfn(79,2486
static inline gfn_t guest_l2e_get_gfn(81,2600
static inline u32 guest_l1e_get_flags(84,2715
static inline u32 guest_l2e_get_flags(86,2799
static inline guest_l1e_t guest_l1e_from_gfn(89,2884
static inline guest_l2e_t guest_l2e_from_gfn(91,3016
#define guest_l1_table_offset(94,3149
#define guest_l2_table_offset(96,3305
#define GUEST_L1_PAGETABLE_ENTRIES 102,3529
#define GUEST_L2_PAGETABLE_ENTRIES 103,3573
#define GUEST_L3_PAGETABLE_ENTRIES 104,3617
#define GUEST_L1_PAGETABLE_SHIFT 105,3661
#define GUEST_L2_PAGETABLE_SHIFT 106,3705
#define GUEST_L3_PAGETABLE_SHIFT 107,3749
#define GUEST_L1_PAGETABLE_ENTRIES 109,3830
#define GUEST_L2_PAGETABLE_ENTRIES 110,3874
#define GUEST_L3_PAGETABLE_ENTRIES 111,3918
#define GUEST_L4_PAGETABLE_ENTRIES 112,3962
#define GUEST_L1_PAGETABLE_SHIFT 113,4006
#define GUEST_L2_PAGETABLE_SHIFT 114,4050
#define GUEST_L3_PAGETABLE_SHIFT 115,4094
#define GUEST_L4_PAGETABLE_SHIFT 116,4138
typedef l1_pgentry_t guest_l1e_t;119,4190
typedef l2_pgentry_t guest_l2e_t;120,4224
typedef l3_pgentry_t guest_l3e_t;121,4258
typedef l4_pgentry_t guest_l4e_t;123,4321
typedef intpte_t guest_intpte_t;125,4362
#define PRI_gpte 127,4396
static inline paddr_t guest_l1e_get_paddr(129,4426
static inline paddr_t guest_l2e_get_paddr(131,4518
static inline paddr_t guest_l3e_get_paddr(133,4610
static inline paddr_t guest_l4e_get_paddr(136,4731
static inline gfn_t guest_l1e_get_gfn(140,4831
static inline gfn_t guest_l2e_get_gfn(142,4939
static inline gfn_t guest_l3e_get_gfn(144,5047
static inline gfn_t guest_l4e_get_gfn(147,5184
static inline u32 guest_l1e_get_flags(151,5300
static inline u32 guest_l2e_get_flags(153,5388
static inline u32 guest_l3e_get_flags(155,5476
static inline u32 guest_l4e_get_flags(158,5593
static inline guest_l1e_t guest_l1e_from_gfn(162,5689
static inline guest_l2e_t guest_l2e_from_gfn(164,5800
static inline guest_l3e_t guest_l3e_from_gfn(166,5911
static inline guest_l4e_t guest_l4e_from_gfn(169,6051
#define guest_l1_table_offset(173,6170
#define guest_l2_table_offset(174,6222
#define guest_l3_table_offset(175,6274
#define guest_l4_table_offset(176,6326
guest_supports_superpages(184,6497
guest_supports_nx(197,6970
#define _PAGE_INVALID_BITS 209,7244
#define _PAGE_INVALID_BITS 211,7306
#define _PAGE_INVALID_BITS 214,7436
typedef struct guest_pagetable_walk walk_t;224,7855
struct guest_pagetable_walk225,7899
    unsigned long va;227,7929
    guest_l4e_t l4e;230,8053
    guest_l3e_t l3e;232,8120
    guest_l2e_t l2e;234,8187
    guest_l1e_t l1e;235,8247
    mfn_t l4mfn;237,8353
    mfn_t l3mfn;238,8425
    mfn_t l2mfn;240,8504
    mfn_t l1mfn;241,8576
guest_walk_to_gfn(247,8777
guest_walk_to_gpa(257,9075
#define GPT_RENAME2(281,10052
#define GPT_RENAME(282,10105
#define guest_walk_tables 283,10152
static inline void print_gw(290,10448

xen/include/asm-x86/x86_64/page.h,2889
#define __X86_64_PAGE_H__3,27
#define L1_PAGETABLE_SHIFT 5,54
#define L2_PAGETABLE_SHIFT 6,89
#define L3_PAGETABLE_SHIFT 7,124
#define L4_PAGETABLE_SHIFT 8,159
#define PAGE_SHIFT 9,194
#define SUPERPAGE_SHIFT 10,245
#define ROOT_PAGETABLE_SHIFT 11,296
#define PAGETABLE_ORDER 13,348
#define L1_PAGETABLE_ENTRIES 14,382
#define L2_PAGETABLE_ENTRIES 15,435
#define L3_PAGETABLE_ENTRIES 16,488
#define L4_PAGETABLE_ENTRIES 17,541
#define ROOT_PAGETABLE_ENTRIES 18,594
#define SUPERPAGE_ORDER 19,647
#define __PAGE_OFFSET 21,696
#define __XEN_VIRT_START 22,749
#define PADDR_BITS 25,874
#define VADDR_BITS 26,909
#define PADDR_MASK 27,944
#define VADDR_MASK 28,1000
#define is_canonical_address(30,1057
#define page_to_pdx(44,1464
#define pdx_to_page(45,1510
#define spage_to_pdx(46,1557
#define pdx_to_spage(47,1635
#define virt_to_pdx(52,1863
#define pdx_to_virt(54,1977
static inline unsigned long pfn_to_pdx(59,2156
static inline unsigned long pdx_to_pfn(65,2317
static inline unsigned long pfn_to_sdx(71,2478
static inline unsigned long sdx_to_pfn(76,2601
static inline unsigned long __virt_to_maddr(81,2724
static inline void *__maddr_to_virt(__maddr_to_virt96,3132
typedef u64 intpte_t;105,3468
#define PRIpte 106,3490
typedef struct { intpte_t l1;108,3514
typedef struct { intpte_t l1; } l1_pgentry_t;108,3514
typedef struct { intpte_t l2;109,3560
typedef struct { intpte_t l2; } l2_pgentry_t;109,3560
typedef struct { intpte_t l3;110,3606
typedef struct { intpte_t l3; } l3_pgentry_t;110,3606
typedef struct { intpte_t l4;111,3652
typedef struct { intpte_t l4; } l4_pgentry_t;111,3652
typedef l4_pgentry_t root_pgentry_t;112,3698
#define pte_read_atomic(116,3764
#define pte_write_atomic(117,3820
#define pte_write(118,3882
#define l1_linear_offset(121,4022
#define l2_linear_offset(122,4095
#define l3_linear_offset(123,4168
#define l4_linear_offset(124,4241
#define is_guest_l1_slot(126,4315
#define is_guest_l2_slot(127,4348
#define is_guest_l3_slot(131,4575
#define is_guest_l4_slot(132,4608
#define root_get_pfn 138,4874
#define root_get_flags 139,4920
#define root_get_intpte 140,4968
#define root_empty 141,5017
#define root_from_paddr 142,5061
#define PGT_root_page_table 143,5110
#define get_pte_flags(152,5346
#define put_pte_flags(153,5422
#define _PAGE_NX_BIT 156,5571
#define _PAGE_NX 157,5601
#define _PAGE_GNTTAB 160,5728
#define BASE_DISALLOW_MASK 167,5948
#define L1_DISALLOW_MASK 169,6002
#define L2_DISALLOW_MASK 170,6063
#define L3_DISALLOW_MASK 171,6122
#define L4_DISALLOW_MASK 172,6168
#define COMPAT_L3_DISALLOW_MASK 174,6215
#define PAGE_HYPERVISOR 176,6260
#define PAGE_HYPERVISOR_NOCACHE 177,6335
#define USER_MAPPINGS_ARE_GLOBAL179,6411
#define _PAGE_GUEST_KERNEL 186,6657
#undef L1_DISALLOW_MASK188,6771
#define L1_DISALLOW_MASK 189,6795
#define _PAGE_GUEST_KERNEL 191,6880

xen/include/asm-x86/x86_64/regs.h,280
#define _X86_64_REGS_H2,23
#define vm86_mode(7,95
#define ring_0(8,156
#define ring_1(9,198
#define ring_2(10,240
#define ring_3(11,282
#define guest_kernel_mode(13,325
#define permit_softint(18,542
#define null_trap_bounce(22,689
#define CTXT_SWITCH_STACK_BYTES 27,947

xen/include/asm-x86/x86_64/bug.h,161
#define __X86_64_BUG_H__2,25
struct bug_frame_str 4,51
    unsigned char mov;5,74
    signed int str_disp;6,97
#define bug_str(8,149
#define BUG_STR(9,210

xen/include/asm-x86/x86_64/asm_defns.h,803
#define __X86_64_ASM_DEFNS_H__2,31
#define SETUP_EXCEPTION_FRAME_POINTER 8,193
#define SETUP_EXCEPTION_FRAME_POINTER12,318
#define ASSERT_INTERRUPT_STATUS(16,379
#define ASSERT_INTERRUPT_STATUS(23,658
#define ASSERT_INTERRUPTS_ENABLED 26,701
#define ASSERT_INTERRUPTS_DISABLED 27,764
#define SAVE_ALL 29,827
#define RESTORE_ALL 48,1698
#define PERFC_INCR(66,2490
#define PERFC_INCR(78,3014
#define safe_swapgs 82,3092
#define REX64_PREFIX 86,3184
#define REX64_PREFIX 88,3221
#define BUILD_SMP_INTERRUPT(91,3259
#define XBUILD_SMP_INTERRUPT(92,3318
#define BUILD_COMMON_IRQ(104,3847
#define IRQ_NAME2(113,4226
#define IRQ_NAME(114,4269
#define BUILD_IRQ(116,4310
#define GET_CPUINFO_FIELD(125,4690
#define GET_CURRENT(129,4917
# define _ASM_EX(134,5078
# define _ASM_EX(136,5108

xen/include/asm-x86/x86_64/uaccess.h,446
#define __X86_64_UACCESS_H2,27
#define COMPAT_ARG_XLAT_VIRT_BASE 4,55
#define COMPAT_ARG_XLAT_SIZE 5,117
#define is_compat_arg_xlat_range(10,303
#define __addr_ok(23,1011
#define access_ok(27,1137
#define array_access_ok(30,1232
#define __compat_addr_ok(33,1316
#define __compat_access_ok(36,1415
#define compat_access_ok(39,1535
#define compat_array_access_ok(42,1627
#define __put_user_size(46,1768
#define __get_user_size(58,2209

xen/include/asm-x86/x86_64/elf.h,913
#define __X86_64_ELF_H__2,25
    unsigned long r15;5,68
    unsigned long r14;6,91
    unsigned long r13;7,114
    unsigned long r12;8,137
    unsigned long rbp;9,160
    unsigned long rbx;10,183
    unsigned long r11;11,206
    unsigned long r10;12,229
    unsigned long r9;13,252
    unsigned long r8;14,274
    unsigned long rax;15,296
    unsigned long rcx;16,319
    unsigned long rdx;17,342
    unsigned long rsi;18,365
    unsigned long rdi;19,388
    unsigned long orig_rax;20,411
    unsigned long rip;21,439
    unsigned long cs;22,462
    unsigned long eflags;23,484
    unsigned long rsp;24,510
    unsigned long ss;25,533
    unsigned long thread_fs;26,555
    unsigned long thread_gs;27,584
    unsigned long ds;28,613
    unsigned long es;29,635
    unsigned long fs;30,657
    unsigned long gs;31,679
} ELF_Gregset;32,701
static inline void elf_core_save_regs(34,717

xen/include/asm-x86/x86_64/system.h,136
#define __X86_64_SYSTEM_H__2,28
#define cmpxchg(4,57
#define __cmpxchg_user(14,580
#define cmpxchg_user(27,1421
#define mb(47,2757

xen/include/asm-x86/domain.h,7477
#define __ASM_DOMAIN_H__2,25
#define has_32bit_shinfo(12,218
#define is_pv_32bit_domain(13,278
#define is_pv_32bit_vcpu(14,333
#define is_pv_32on64_domain(16,416
#define is_pv_32on64_domain(18,477
#define is_pv_32on64_vcpu(20,519
#define is_hvm_pv_evtchn_domain(22,586
#define is_hvm_pv_evtchn_vcpu(24,720
#define VCPU_TRAP_NMI 26,791
#define VCPU_TRAP_MCE 27,824
#define VCPU_TRAP_LAST 28,857
#define nmi_state 30,903
#define mce_state 31,971
#define nmi_pending 33,1040
#define mce_pending 34,1089
struct trap_bounce 36,1139
    uint32_t      error_code;37,1160
    uint8_t       flags;38,1190
    uint16_t      cs;39,1226
    unsigned long eip;40,1248
#define MAPHASH_ENTRIES 43,1275
#define MAPHASH_HASHFN(44,1301
#define MAPHASHENT_NOTINUSE 45,1359
struct mapcache_vcpu 46,1398
    unsigned int shadow_epoch;48,1464
    struct vcpu_maphash_entry 51,1557
        unsigned long mfn;52,1589
        uint16_t      idx;53,1616
        uint16_t      refcnt;54,1643
    } hash[hash55,1673
#define MAPCACHE_ORDER 58,1706
#define MAPCACHE_ENTRIES 59,1734
struct mapcache_domain 60,1781
    l1_pgentry_t *l1tab;l1tab62,1881
    unsigned int cursor;63,1906
    spinlock_t lock;66,1970
    unsigned int epoch;69,2069
    u32 tlbflush_timestamp;70,2093
    unsigned long inuse[inuse73,2201
    unsigned long garbage[garbage74,2259
struct shadow_domain 92,2872
    spinlock_t        lock;93,2895
    int               locker;94,2949
    const char       *locker_function;locker_function95,3016
    unsigned int      opt_flags;96,3079
    struct page_list_head pinned_shadows;97,3158
    struct page_list_head freelist;100,3229
    unsigned int      total_pages;101,3265
    unsigned int      free_pages;102,3333
    unsigned int      p2m_pages;103,3404
    pagetable_t unpaged_pagetable;106,3545
    struct page_info **hash_table;hash_table109,3608
    int hash_walking;110,3643
    int has_fast_mmio_entries;113,3748
    atomic_t          gtable_dirty_version;118,3895
    int oos_active;121,3954
    int oos_off;122,3974
    int pagetable_dying_op;124,3992
struct shadow_vcpu 127,4024
    l3_pgentry_t l3table[l3table130,4129
    l3_pgentry_t gl3e[gl3e132,4261
    void *guest_vtable;guest_vtable135,4390
    unsigned long last_emulated_mfn_for_unshadow;137,4485
    unsigned long last_writeable_pte_smfn;139,4604
    unsigned long last_emulated_frame;141,4704
    unsigned long last_emulated_mfn;143,4800
    mfn_t oos[oos146,4912
    mfn_t oos_snapshot[oos_snapshot147,4945
    struct oos_fixup 148,4987
        int next;149,5010
        mfn_t smfn[smfn150,5028
        unsigned long off[off151,5067
    } oos_fixup[oos_fixup152,5113
    int pagetable_dying;154,5149
struct hap_domain 160,5331
    spinlock_t        lock;161,5351
    int               locker;162,5379
    const char       *locker_function;locker_function163,5409
    struct page_list_head freelist;165,5449
    unsigned int      total_pages;166,5485
    unsigned int      free_pages;167,5553
    unsigned int      p2m_pages;168,5624
struct log_dirty_domain 174,5856
    spinlock_t     lock;176,5907
    int            locker;177,5932
    const char    *locker_function;locker_function178,5995
    mfn_t          top;181,6109
    unsigned int   allocs;182,6133
    unsigned int   failed_allocs;183,6160
    unsigned int   fault_count;186,6226
    unsigned int   dirty_count;187,6258
    int            (*enable_log_dirty enable_log_dirty190,6342
    int            (*disable_log_dirty disable_log_dirty191,6403
    void           (*clean_dirty_bitmap clean_dirty_bitmap192,6464
struct paging_domain 195,6529
    u32                     mode;197,6596
    struct shadow_domain    shadow;199,6676
    struct hap_domain       hap;201,6760
    struct log_dirty_domain log_dirty;203,6821
    struct page_info * (*alloc_page)alloc_page206,6990
    void (*free_page)free_page207,7046
struct paging_vcpu 210,7113
    const struct paging_mode *mode;mode212,7184
    unsigned int last_write_was_pt:last_write_was_pt214,7273
    unsigned int last_write_emul_ok:last_write_emul_ok216,7362
    struct shadow_vtlb *vtlb;vtlb218,7441
    spinlock_t          vtlb_lock;219,7471
    struct shadow_vcpu shadow;222,7542
#define MAX_CPUID_INPUT 225,7577
typedef xen_domctl_cpuid_t cpuid_input_t;226,7604
struct time_scale 229,7666
    int shift;230,7686
    u32 mul_frac;231,7701
struct arch_domain234,7723
    struct page_info **mm_perdomain_pt_pages;mm_perdomain_pt_pages237,7765
    l2_pgentry_t *mm_perdomain_l2;mm_perdomain_l2238,7811
    l3_pgentry_t *mm_perdomain_l3;mm_perdomain_l3239,7846
    unsigned int hv_compat_vstart;241,7882
    l1_pgentry_t *mm_perdomain_pt;mm_perdomain_pt243,7923
    struct mapcache_domain mapcache;246,8002
    bool_t s3_integrity;249,8047
    struct rangeset *ioport_caps;ioport_caps252,8129
    uint32_t pci_cf8;253,8163
    struct list_head pdev_list;255,8186
    struct hvm_domain hvm_domain;256,8218
    struct paging_domain paging;258,8253
    struct p2m_domain *p2m;p2m259,8286
    int *irq_pirq;irq_pirq262,8382
    int *pirq_irq;pirq_irq263,8401
    int *emuirq_pirq;emuirq_pirq265,8466
    int *pirq_emuirq;pirq_emuirq266,8488
    unsigned long *pirq_eoi_map;pirq_eoi_map269,8583
    unsigned long pirq_eoi_map_mfn;270,8616
    struct e820entry e820[e820273,8709
    unsigned int nr_e820;274,8739
    unsigned int physaddr_bitsize;277,8835
    bool_t is_32bit_pv;280,8913
    bool_t has_32bit_shinfo;282,8985
    bool_t suppress_spurious_page_faults;284,9067
        RELMEM_not_started,288,9174
        RELMEM_xen,289,9202
        RELMEM_l4,290,9222
        RELMEM_l3,291,9241
        RELMEM_l2,292,9260
        RELMEM_done,293,9279
    } relmem;294,9300
    struct page_list_head relmem_list;295,9314
    cpuid_input_t cpuids[cpuids297,9354
    struct domain_mca_msrs *vmca_msrs;vmca_msrs300,9432
    int tsc_mode;303,9529
    bool_t vtsc;304,9591
    s_time_t vtsc_last;305,9669
    spinlock_t vtsc_lock;306,9748
    uint64_t vtsc_offset;307,9774
    uint32_t tsc_khz;308,9845
    struct time_scale vtsc_to_ns;309,9918
    struct time_scale ns_to_vtsc;310,9993
    uint32_t incarnation;311,10068
    uint64_t vtsc_kerncount;313,10213
    uint64_t vtsc_usercount;314,10273
} __cacheline_aligned;315,10325
#define has_arch_pdevs(317,10349
#define has_arch_mmios(318,10414
#define perdomain_pt_pgidx(321,10503
#define perdomain_ptes(323,10598
#define perdomain_pt_page(327,10835
#define perdomain_ptes(329,10910
#define perdomain_pt_page(331,11012
struct pae_l3_cache 337,11123
    l3_pgentry_t  table[table344,11426
    unsigned long high_mfn;345,11490
    unsigned int  inuse_idx;346,11555
    spinlock_t    lock;347,11630
#define pae_l3_cache_init(349,11657
struct pae_l3_cache 351,11744
#define pae_l3_cache_init(352,11769
struct arch_vcpu355,11816
    struct vcpu_guest_context guest_context358,11888
    struct pae_l3_cache pae_l3_cache;361,11971
    unsigned long      flags;363,12010
    void (*schedule_tail)schedule_tail365,12051
    void (*ctxt_switch_from)ctxt_switch_from367,12095
    void (*ctxt_switch_to)ctxt_switch_to368,12141
    struct trap_bounce trap_bounce;371,12257
    XEN_GUEST_HANDLE(374,12328
#define hvm_vmx 453,15033
#define hvm_svm 454,15072
#define pv_guest_cr4_to_real_cr4(463,15403
#define real_cr4_to_pv_guest_cr4(469,15734

xen/include/asm-x86/hap.h,261
#define _XEN_HAP_H27,1139
#define HAP_PRINTK(29,1159
#define HAP_ERROR(31,1287
hap_map_domain_page(38,1585
hap_unmap_domain_page(44,1680
#define hap_lock_init(52,1895
#define hap_locked_by_me(59,2222
#define hap_lock(62,2331
#define hap_unlock(76,3272

xen/include/asm-x86/atomic.h,875
#define __ARCH_X86_ATOMIC__2,28
#define build_atomic_read(7,106
#define build_atomic_write(12,331
build_atomic_read(17,541
static inline void atomic_write64(36,1273
#undef build_atomic_read44,1495
#undef build_atomic_write45,1520
typedef struct { int counter;52,1728
typedef struct { int counter; } atomic_t;52,1728
#define ATOMIC_INIT(54,1771
#define _atomic_read(62,1922
#define atomic_read(63,1961
#define _atomic_set(72,2165
#define atomic_set(73,2212
static inline void atomic_add(82,2425
static inline void atomic_sub(97,2788
static inline int atomic_sub_and_test(114,3251
static inline void atomic_inc(131,3652
static inline void atomic_dec(145,3958
static inline int atomic_dec_and_test(161,4338
static inline int atomic_inc_and_test(180,4802
static inline int atomic_add_negative(200,5323
static inline atomic_t atomic_compareandswap(211,5603

xen/include/asm-x86/apicdef.h,10426
#define __ASM_APICDEF_H2,24
#define		APIC_DEFAULT_PHYS_BASE	11,211
#define		APIC_ID	13,256
#define			APIC_ID_MASK	14,279
#define			GET_xAPIC_ID(15,315
#define			SET_xAPIC_ID(16,360
#define		APIC_LVR	17,399
#define			APIC_LVR_MASK	18,422
#define			APIC_LVR_DIRECTED_EOI	19,456
#define			GET_APIC_VERSION(20,498
#define			GET_APIC_MAXLVT(21,539
#define			APIC_INTEGRATED(22,585
#define			APIC_XAPIC(23,625
#define		APIC_TASKPRI	24,664
#define			APIC_TPRI_MASK	25,691
#define		APIC_ARBPRI	26,722
#define			APIC_ARBPRI_MASK	27,748
#define		APIC_PROCPRI	28,780
#define		APIC_EOI	29,807
#define			APIC_EIO_ACK	30,830
#define		APIC_RRR	31,896
#define		APIC_LDR	32,919
#define			APIC_LDR_MASK	33,942
#define			GET_xAPIC_LOGICAL_ID(34,978
#define			SET_xAPIC_LOGICAL_ID(35,1029
#define			APIC_ALL_CPUS	36,1075
#define		APIC_DFR	37,1105
#define			APIC_DFR_CLUSTER	38,1128
#define			APIC_DFR_FLAT	39,1169
#define		APIC_SPIV	40,1208
#define			APIC_SPIV_FOCUS_DISABLED	41,1232
#define			APIC_SPIV_APIC_ENABLED	42,1274
#define			APIC_SPIV_DIRECTED_EOI	43,1315
#define		APIC_ISR	44,1357
#define         APIC_ISR_NR 45,1381
#define		APIC_TMR	46,1459
#define 	APIC_IRR	47,1483
#define 	APIC_ESR	48,1507
#define			APIC_ESR_SEND_CS	49,1531
#define			APIC_ESR_RECV_CS	50,1566
#define			APIC_ESR_SEND_ACC	51,1601
#define			APIC_ESR_RECV_ACC	52,1637
#define			APIC_ESR_SENDILL	53,1673
#define			APIC_ESR_RECVILL	54,1708
#define			APIC_ESR_ILLREGA	55,1743
#define		APIC_ICR	56,1778
#define			APIC_DEST_SELF	57,1802
#define			APIC_DEST_ALLINC	58,1836
#define			APIC_DEST_ALLBUT	59,1871
#define			APIC_ICR_RR_MASK	60,1906
#define			APIC_ICR_RR_INVALID	61,1941
#define			APIC_ICR_RR_INPROG	62,1979
#define			APIC_ICR_RR_VALID	63,2016
#define			APIC_INT_LEVELTRIG	64,2052
#define			APIC_INT_ASSERT	65,2089
#define			APIC_ICR_BUSY	66,2124
#define			APIC_DEST_LOGICAL	67,2157
#define			APIC_DEST_PHYSICAL	68,2193
#define			APIC_DM_FIXED	69,2230
#define			APIC_DM_LOWEST	70,2263
#define			APIC_DM_SMI	71,2297
#define			APIC_DM_REMRD	72,2328
#define			APIC_DM_NMI	73,2361
#define			APIC_DM_INIT	74,2392
#define			APIC_DM_STARTUP	75,2424
#define			APIC_DM_EXTINT	76,2459
#define			APIC_VECTOR_MASK	77,2493
#define		APIC_ICR2	78,2528
#define			GET_xAPIC_DEST_FIELD(79,2553
#define			SET_xAPIC_DEST_FIELD(80,2604
#define		APIC_LVTT	81,2648
#define		APIC_LVTTHMR	82,2673
#define		APIC_LVTPC	83,2701
#define		APIC_LVT0	84,2727
#define		APIC_CMCI	85,2752
#define			APIC_LVT_TIMER_BASE_MASK	87,2778
#define			GET_APIC_TIMER_BASE(88,2823
#define			SET_APIC_TIMER_BASE(89,2873
#define			APIC_TIMER_BASE_CLKIN	90,2919
#define			APIC_TIMER_BASE_TMBASE	91,2956
#define			APIC_TIMER_BASE_DIV	92,2994
#define			APIC_TIMER_MODE_MASK	93,3029
#define			APIC_TIMER_MODE_ONESHOT	94,3071
#define			APIC_TIMER_MODE_PERIODIC	95,3116
#define			APIC_TIMER_MODE_TSC_DEADLINE	96,3161
#define			APIC_LVT_MASKED	97,3210
#define			APIC_LVT_LEVEL_TRIGGER	98,3246
#define			APIC_LVT_REMOTE_IRR	99,3288
#define			APIC_INPUT_POLARITY	100,3327
#define			APIC_SEND_PENDING	101,3366
#define			APIC_MODE_MASK	102,3403
#define			GET_APIC_DELIVERY_MODE(103,3436
#define			SET_APIC_DELIVERY_MODE(104,3487
#define				APIC_MODE_FIXED	105,3549
#define				APIC_MODE_NMI	106,3581
#define				APIC_MODE_EXTINT	107,3611
#define 	APIC_LVT1	108,3643
#define		APIC_LVTERR	109,3668
#define		APIC_TMICT	110,3695
#define		APIC_TMCCT	111,3721
#define		APIC_TDCR	112,3747
#define		APIC_SELF_IPI	115,3809
#define			APIC_TDR_DIV_TMBASE	117,3839
#define			APIC_TDR_DIV_1	118,3876
#define			APIC_TDR_DIV_2	119,3906
#define			APIC_TDR_DIV_4	120,3936
#define			APIC_TDR_DIV_8	121,3966
#define			APIC_TDR_DIV_16	122,3996
#define			APIC_TDR_DIV_32	123,4027
#define			APIC_TDR_DIV_64	124,4058
#define			APIC_TDR_DIV_128	125,4089
#define APIC_BASE 127,4121
#define APIC_MSR_BASE 130,4224
 #define MAX_IO_APICS 133,4269
 #define MAX_IO_APICS 135,4300
#define u32 144,4621
#define lapic 146,4647
struct local_apic 149,4725
/*000*/	struct { u32 __reserved[__reserved151,4746
/*000*/	struct { u32 __reserved[4]; } __reserved_01;151,4746
/*010*/	struct { u32 __reserved[__reserved153,4800
/*010*/	struct { u32 __reserved[4]; } __reserved_02;153,4800
		u32   __reserved_1	156,4894
			phys_apic_id	157,4921
			__reserved_2	158,4943
		u32 __reserved[__reserved159,4965
	} id;160,4986
		u32   version	164,5046
			__reserved_1	165,5069
			max_lvt	166,5091
			__reserved_2	167,5109
		u32 __reserved[__reserved168,5131
	} version;169,5152
/*040*/	struct { u32 __reserved[__reserved171,5165
/*040*/	struct { u32 __reserved[4]; } __reserved_03;171,5165
/*050*/	struct { u32 __reserved[__reserved173,5219
/*050*/	struct { u32 __reserved[4]; } __reserved_04;173,5219
/*060*/	struct { u32 __reserved[__reserved175,5273
/*060*/	struct { u32 __reserved[4]; } __reserved_05;175,5273
/*070*/	struct { u32 __reserved[__reserved177,5327
/*070*/	struct { u32 __reserved[4]; } __reserved_06;177,5327
		u32   priority	180,5427
			__reserved_1	181,5450
		u32 __reserved_2[__reserved_2182,5472
	} tpr;183,5495
		u32   priority	187,5564
			__reserved_1	188,5587
		u32 __reserved_2[__reserved_2189,5609
	} apr;190,5632
		u32   priority	194,5699
			__reserved_1	195,5722
		u32 __reserved_2[__reserved_2196,5744
	} ppr;197,5767
		u32   eoi;200,5825
		u32 __reserved[__reserved201,5838
	} eoi;202,5859
/*0C0*/	struct { u32 __reserved[__reserved204,5868
/*0C0*/	struct { u32 __reserved[4]; } __reserved_07;204,5868
		u32   __reserved_1	207,5974
			logical_dest	208,6001
		u32 __reserved_2[__reserved_2209,6023
	} ldr;210,6046
		u32   __reserved_1	213,6106
			model	214,6133
		u32 __reserved_2[__reserved_2215,6149
	} dfr;216,6172
		u32	spurious_vector	219,6239
			apic_enabled	220,6267
			focus_cpu	221,6289
			__reserved_2	222,6308
		u32 __reserved_3[__reserved_3223,6330
	} svr;224,6353
/*170*/		u32 bitfield;227,6405
		u32 __reserved[__reserved228,6428
	} isr 229,6449
/*1F0*/		u32 bitfield;232,6507
		u32 __reserved[__reserved233,6530
	} tmr 234,6551
/*270*/		u32 bitfield;237,6614
		u32 __reserved[__reserved238,6637
	} irr 239,6658
			u32   send_cs_error	243,6726
				receive_cs_error	244,6757
				send_accept_error	245,6785
				receive_accept_error	246,6814
				__reserved_1	247,6846
				send_illegal_vector	248,6871
				receive_illegal_vector	249,6902
				illegal_register_address	250,6936
				__reserved_2	251,6971
			u32 __reserved_3[__reserved_3252,6996
		} error_bits;253,7020
			u32 errors;255,7047
			u32 __reserved_3[__reserved_3256,7062
		} all_errors;257,7086
	} esr;258,7102
/*290*/	struct { u32 __reserved[__reserved260,7111
/*290*/	struct { u32 __reserved[4]; } __reserved_08;260,7111
/*2A0*/	struct { u32 __reserved[__reserved262,7165
/*2A0*/	struct { u32 __reserved[4]; } __reserved_09;262,7165
/*2B0*/	struct { u32 __reserved[__reserved264,7219
/*2B0*/	struct { u32 __reserved[4]; } __reserved_10;264,7219
/*2C0*/	struct { u32 __reserved[__reserved266,7273
/*2C0*/	struct { u32 __reserved[4]; } __reserved_11;266,7273
/*2D0*/	struct { u32 __reserved[__reserved268,7327
/*2D0*/	struct { u32 __reserved[4]; } __reserved_12;268,7327
/*2E0*/	struct { u32 __reserved[__reserved270,7381
/*2E0*/	struct { u32 __reserved[4]; } __reserved_13;270,7381
/*2F0*/	struct { u32 __reserved[__reserved272,7435
/*2F0*/	struct { u32 __reserved[4]; } __reserved_14;272,7435
		u32   vector	275,7541
			delivery_mode	276,7564
			destination_mode	277,7588
			delivery_status	278,7614
			__reserved_1	279,7640
			level	280,7663
			trigger	281,7680
			__reserved_2	282,7699
			shorthand	283,7722
			__reserved_3	284,7742
		u32 __reserved_4[__reserved_4285,7766
	} icr1;286,7789
			u32   __reserved_1	290,7861
				phys_dest	291,7889
				__reserved_2	292,7909
			u32   __reserved_3	293,7932
				logical_dest	294,7960
		} dest;295,7983
		u32 __reserved_4[__reserved_4296,7993
	} icr2;297,8016
		u32   vector	300,8061
			__reserved_1	301,8083
			delivery_status	302,8105
			__reserved_2	303,8130
			mask	304,8152
			timer_mode	305,8167
			__reserved_3	306,8187
		u32 __reserved_4[__reserved_4307,8209
	} lvt_timer;308,8232
		u32  vector	311,8291
			delivery_mode	312,8312
			__reserved_1	313,8335
			delivery_status	314,8357
			__reserved_2	315,8382
			mask	316,8404
			__reserved_3	317,8419
		u32 __reserved_4[__reserved_4318,8441
	} lvt_thermal;319,8464
		u32   vector	322,8530
			delivery_mode	323,8552
			__reserved_1	324,8575
			delivery_status	325,8597
			__reserved_2	326,8622
			mask	327,8644
			__reserved_3	328,8659
		u32 __reserved_4[__reserved_4329,8681
	} lvt_pc;330,8704
		u32   vector	333,8751
			delivery_mode	334,8773
			__reserved_1	335,8796
			delivery_status	336,8818
			polarity	337,8843
			remote_irr	338,8861
			trigger	339,8881
			mask	340,8899
			__reserved_2	341,8914
		u32 __reserved_3[__reserved_3342,8936
	} lvt_lint0;343,8959
		u32   vector	346,9009
			delivery_mode	347,9031
			__reserved_1	348,9054
			delivery_status	349,9076
			polarity	350,9101
			remote_irr	351,9119
			trigger	352,9139
			mask	353,9157
			__reserved_2	354,9172
		u32 __reserved_3[__reserved_3355,9194
	} lvt_lint1;356,9217
		u32   vector	359,9267
			__reserved_1	360,9289
			delivery_status	361,9311
			__reserved_2	362,9336
			mask	363,9358
			__reserved_3	364,9373
		u32 __reserved_4[__reserved_4365,9395
	} lvt_error;366,9418
		u32   initial_count;369,9485
		u32 __reserved_2[__reserved_2370,9508
	} timer_icr;371,9531
		u32   curr_count;375,9605
		u32 __reserved_2[__reserved_2376,9625
	} timer_ccr;377,9648
/*3A0*/	struct { u32 __reserved[__reserved379,9663
/*3A0*/	struct { u32 __reserved[4]; } __reserved_16;379,9663
/*3B0*/	struct { u32 __reserved[__reserved381,9717
/*3B0*/	struct { u32 __reserved[4]; } __reserved_17;381,9717
/*3C0*/	struct { u32 __reserved[__reserved383,9771
/*3C0*/	struct { u32 __reserved[4]; } __reserved_18;383,9771
/*3D0*/	struct { u32 __reserved[__reserved385,9825
/*3D0*/	struct { u32 __reserved[4]; } __reserved_19;385,9825
		u32   divisor	388,9938
			__reserved_1	389,9961
		u32 __reserved_2[__reserved_2390,9983
	} timer_dcr;391,10006
/*3F0*/	struct { u32 __reserved[__reserved393,10021
/*3F0*/	struct { u32 __reserved[4]; } __reserved_20;393,10021
#undef u32398,10131

xen/include/asm-x86/desc.h,2287
#define __ARCH_DESC_H2,22
#define NR_RESERVED_GDT_PAGES 8,158
#define NR_RESERVED_GDT_BYTES 9,192
#define NR_RESERVED_GDT_ENTRIES 10,260
#define LAST_RESERVED_GDT_PAGE 12,321
#define LAST_RESERVED_GDT_BYTE 14,413
#define LAST_RESERVED_GDT_ENTRY 16,505
#define LDT_ENTRY_SIZE 19,601
#define FLAT_COMPAT_RING1_CS 23,652
#define FLAT_COMPAT_RING1_DS 24,709
#define FLAT_COMPAT_RING1_SS 25,766
#define FLAT_COMPAT_RING3_CS 26,823
#define FLAT_COMPAT_RING3_DS 27,880
#define FLAT_COMPAT_RING3_SS 28,937
#define FLAT_COMPAT_KERNEL_DS 30,995
#define FLAT_COMPAT_KERNEL_CS 31,1046
#define FLAT_COMPAT_KERNEL_SS 32,1097
#define FLAT_COMPAT_USER_DS 33,1148
#define FLAT_COMPAT_USER_CS 34,1199
#define FLAT_COMPAT_USER_SS 35,1250
#define TSS_ENTRY 37,1302
#define LDT_ENTRY 38,1351
#define PER_CPU_GDT_ENTRY 39,1385
#define FLAT_COMPAT_KERNEL_CS 43,1453
#define FLAT_COMPAT_KERNEL_DS 44,1498
#define FLAT_COMPAT_KERNEL_SS 45,1543
#define FLAT_COMPAT_USER_CS 46,1588
#define FLAT_COMPAT_USER_DS 47,1631
#define FLAT_COMPAT_USER_SS 48,1674
#define DOUBLEFAULT_TSS_ENTRY 50,1718
#define TSS_ENTRY 52,1774
#define LDT_ENTRY 53,1823
#define PER_CPU_GDT_ENTRY 54,1857
#define GUEST_KERNEL_RPL(61,1954
#define GUEST_KERNEL_RPL(63,2038
#define __fixup_guest_selector(67,2139
#define fixup_guest_stack_selector(75,2533
#define fixup_guest_stack_selector(77,2591
#define fixup_guest_code_selector(84,2826
#define guest_gate_selector_okay(99,3529
#define _SEGMENT_TYPE 109,4065
#define _SEGMENT_WR 110,4099
#define _SEGMENT_EC 112,4220
#define _SEGMENT_CODE 113,4294
#define _SEGMENT_S 115,4418
#define _SEGMENT_DPL 116,4491
#define _SEGMENT_P 117,4558
#define _SEGMENT_L 119,4632
#define _SEGMENT_L 121,4693
#define _SEGMENT_DB 123,4727
#define _SEGMENT_G 124,4789
struct desc_struct 128,4864
    u32 a,129,4885
    u32 a, b;129,4885
    u64 a,135,4945
    u64 a, b;135,4945
} idt_entry_t;136,4959
#define _set_gate(138,4975
#define _set_tssldt_desc(154,5814
typedef struct desc_struct idt_entry_t;170,6560
#define _set_gate(172,6601
#define _set_tssldt_desc(187,7381
struct desc_ptr 202,8051
	unsigned short limit;203,8069
	unsigned long base;204,8092
# define boot_cpu_compat_gdt_table 213,8383
# define per_cpu__compat_gdt_table 214,8437

xen/include/asm-x86/current.h,642
#define __X86_CURRENT_H__8,204
struct cpu_info 17,340
    struct cpu_user_regs guest_cpu_user_regs;18,358
    unsigned int processor_id;19,404
    struct vcpu *current_vcpu;current_vcpu20,435
    unsigned long per_cpu_offset;21,466
    unsigned long __pad_for_stack_bottom;23,567
static inline struct cpu_info *get_cpu_info(get_cpu_info27,620
#define get_current(37,894
#define set_current(38,955
#define current 39,1025
#define get_processor_id(41,1072
#define set_processor_id(42,1133
#define guest_cpu_user_regs(47,1368
#define get_stack_bottom(54,1642
#define reset_stack_and_jump(57,1754
#define schedule_tail(62,1958

xen/include/asm-x86/trace.h,260
#define __ASM_TRACE_H__2,24
static inline void trace_pv_trap(8,187
static inline void trace_pv_page_fault(16,499
static inline void trace_trap_one_addr(24,768
static inline void trace_trap_two_addr(32,1031
static inline void trace_ptwr_emulation(40,1318

xen/include/asm-x86/delay.h,49
#define _X86_DELAY_H2,21
#define udelay(11,195

xen/include/asm-x86/page.h,5491
#define __X86_PAGE_H__2,23
#define PAGE_SIZE 9,225
#define PAGE_SIZE 11,278
#define PAGE_MASK 13,331
#define PAGE_FLAG_MASK 14,376
#define l1e_read_atomic(28,642
#define l2e_read_atomic(30,737
#define l3e_read_atomic(32,832
#define l4e_read_atomic(34,927
#define l1e_write_atomic(38,1063
#define l2e_write_atomic(40,1169
#define l3e_write_atomic(42,1275
#define l4e_write_atomic(44,1381
#define l1e_write(51,1612
#define l2e_write(53,1704
#define l3e_write(55,1796
#define l4e_write(57,1888
#define l1e_get_intpte(61,2053
#define l2e_get_intpte(62,2097
#define l3e_get_intpte(63,2141
#define l4e_get_intpte(64,2185
#define l1e_get_pfn(67,2275
#define l2e_get_pfn(69,2383
#define l3e_get_pfn(71,2491
#define l4e_get_pfn(73,2599
#define l1e_get_paddr(77,2768
#define l2e_get_paddr(79,2856
#define l3e_get_paddr(81,2944
#define l4e_get_paddr(83,3032
#define l1e_get_page(87,3201
#define l2e_get_page(88,3265
#define l3e_get_page(89,3329
#define l4e_get_page(90,3393
#define l1e_get_flags(93,3501
#define l2e_get_flags(94,3560
#define l3e_get_flags(95,3619
#define l4e_get_flags(96,3678
#define l1e_empty(99,3768
#define l2e_empty(100,3826
#define l3e_empty(101,3884
#define l4e_empty(102,3942
#define l1e_from_pfn(105,4052
#define l2e_from_pfn(107,4169
#define l3e_from_pfn(109,4286
#define l4e_from_pfn(111,4403
static inline l1_pgentry_t l1e_from_paddr(116,4606
static inline l2_pgentry_t l2e_from_paddr(121,4792
static inline l3_pgentry_t l3e_from_paddr(126,4978
static inline l4_pgentry_t l4e_from_paddr(132,5194
#define l1e_from_intpte(141,5477
#define l2e_from_intpte(142,5552
#define l3e_from_intpte(143,5627
#define l4e_from_intpte(144,5702
#define l1e_from_page(147,5838
#define l2e_from_page(148,5915
#define l3e_from_page(149,5992
#define l4e_from_page(150,6069
#define l1e_add_flags(153,6189
#define l2e_add_flags(154,6257
#define l3e_add_flags(155,6325
#define l4e_add_flags(156,6393
#define l1e_remove_flags(159,6503
#define l2e_remove_flags(160,6572
#define l3e_remove_flags(161,6641
#define l4e_remove_flags(162,6710
#define l1e_has_changed(165,6858
#define l2e_has_changed(167,6973
#define l3e_has_changed(169,7088
#define l4e_has_changed(171,7203
#define l2e_to_l1e(175,7344
#define l3e_to_l2e(176,7420
#define l4e_to_l3e(177,7496
#define l1_table_offset(180,7643
#define l2_table_offset(182,7743
#define l3_table_offset(184,7843
#define l4_table_offset(186,7943
#define pgentry_ptr_to_slot(190,8117
typedef struct { u32 pfn;198,8304
typedef struct { u32 pfn; } pagetable_t;198,8304
typedef struct { u64 pfn;201,8390
typedef struct { u64 pfn; } pagetable_t;201,8390
#define pagetable_get_paddr(203,8438
#define pagetable_get_page(204,8503
#define pagetable_get_pfn(205,8556
#define pagetable_get_mfn(206,8598
#define pagetable_is_null(207,8646
#define pagetable_from_pfn(208,8693
#define pagetable_from_mfn(209,8751
#define pagetable_from_page(210,8814
#define pagetable_from_paddr(211,8882
#define pagetable_null(212,8950
#define clear_page(215,9035
#define copy_page(219,9297
#define __pa(224,9580
#define __va(225,9627
#define __virt_to_mfn(228,9751
#define __mfn_to_virt(229,9813
#define __mfn_to_page(232,9958
#define __page_to_mfn(233,10018
#define __maddr_to_page(236,10161
#define __page_to_maddr(237,10223
#define __pfn_to_paddr(240,10352
#define __paddr_to_pfn(241,10411
#define __mfn_to_spage(244,10549
#define __spage_to_mfn(245,10610
#define page_to_spage(248,10758
#define spage_to_page(249,10854
#define mfn_valid(255,11120
#define virt_to_mfn(256,11165
#define mfn_to_virt(257,11211
#define virt_to_maddr(258,11258
#define maddr_to_virt(259,11323
#define mfn_to_page(260,11388
#define page_to_mfn(261,11435
#define mfn_to_spage(262,11481
#define spage_to_mfn(263,11530
#define maddr_to_page(264,11578
#define page_to_maddr(265,11626
#define virt_to_page(266,11674
#define page_to_virt(267,11721
#define pfn_to_paddr(268,11768
#define paddr_to_pfn(269,11816
#define paddr_to_pdx(270,11863
#define DOMAIN_ENTRIES_PER_L2_PAGETABLE 275,12015
#define HYPERVISOR_ENTRIES_PER_L2_PAGETABLE 276,12061
#define DOMAIN_ENTRIES_PER_L4_PAGETABLE 278,12108
#define GUEST_ENTRIES_PER_L4_PAGETABLE 280,12199
#define HYPERVISOR_ENTRIES_PER_L4_PAGETABLE 282,12287
#define __linear_l1_table 287,12489
#define __linear_l2_table 288,12556
#define __linear_l3_table 290,12664
#define __linear_l4_table 292,12772
#define _PAGE_PRESENT 310,13364
#define _PAGE_RW 311,13394
#define _PAGE_USER 312,13424
#define _PAGE_PWT 313,13454
#define _PAGE_PCD 314,13484
#define _PAGE_ACCESSED 315,13514
#define _PAGE_DIRTY 316,13544
#define _PAGE_PAT 317,13574
#define _PAGE_PSE 318,13604
#define _PAGE_GLOBAL 319,13634
#define _PAGE_AVAIL0 320,13664
#define _PAGE_AVAIL1 321,13694
#define _PAGE_AVAIL2 322,13724
#define _PAGE_AVAIL 323,13754
#define _PAGE_PSE_PAT 324,13784
#define _PAGE_PAGED 325,13814
#define _PAGE_SHARED 326,13844
#undef _PAGE_GNTTAB334,14081
#define _PAGE_GNTTAB 337,14129
#define __PAGE_HYPERVISOR 340,14162
#define __PAGE_HYPERVISOR_NOCACHE 342,14252
#define GRANT_PTE_FLAGS 345,14363
static inline int get_order_from_bytes(350,14489
static inline int get_order_from_pages(359,14672
#define MAP_SMALL_PAGES 379,15216
static inline uint32_t pte_flags_to_cacheattr(388,15556
static inline uint32_t cacheattr_to_pte_flags(392,15674
#define PFN_DOWN(399,15833
#define PFN_UP(400,15875
#define PAGE_ALIGN(401,15933

xen/include/asm-x86/config.h,5993
#define __X86_CONFIG_H__8,163
# define CONFIG_PAGING_LEVELS 11,213
# define CONFIG_PAGING_LEVELS 13,251
#define CONFIG_X86 16,291
#define CONFIG_X86_HT 17,312
#define CONFIG_PAGING_ASSISTANCE 18,336
#define CONFIG_SMP 19,371
#define CONFIG_X86_LOCAL_APIC 20,392
#define CONFIG_X86_GOOD_APIC 21,424
#define CONFIG_X86_IO_APIC 22,455
#define CONFIG_X86_PM_TIMER 23,484
#define CONFIG_HPET_TIMER 24,514
#define CONFIG_X86_MCE_THERMAL 25,542
#define CONFIG_NUMA 26,575
#define CONFIG_DISCONTIGMEM 27,597
#define CONFIG_NUMA_EMU 28,627
#define CONFIG_PAGEALLOC_MAX_ORDER 29,653
#define CONFIG_X86_L1_CACHE_SHIFT 32,788
#define CONFIG_ACPI 34,825
#define CONFIG_ACPI_BOOT 35,847
#define CONFIG_ACPI_SLEEP 36,874
#define CONFIG_ACPI_NUMA 37,902
#define CONFIG_ACPI_SRAT 38,929
#define CONFIG_ACPI_CSTATE 39,956
#define CONFIG_VGA 41,986
#define CONFIG_HOTPLUG 43,1008
#define CONFIG_HOTPLUG_CPU 44,1033
#define HZ 46,1063
#define OPT_CONSOLE_STR 48,1079
#define NR_CPUS 51,1131
#define NR_CPUS 53,1167
#define MAX_VIRT_CPUS 58,1275
#define MAX_HVM_VCPUS 62,1387
# define supervisor_mode_kernel 65,1455
# define supervisor_mode_kernel 67,1497
#define __ALIGN 71,1563
#define __ALIGN_STR 72,1594
#define ALIGN 74,1651
#define ALIGN_STR 75,1673
#define ENTRY(76,1703
#define NR_hypercalls 82,1869
#define MEMORY_GUARD85,1910
#define STACK_ORDER 89,1955
#define STACK_ORDER 91,1983
#define STACK_SIZE 93,2012
#define PRIMARY_STACK_SIZE 96,2117
#define BOOT_TRAMPOLINE 98,2150
#define bootsym_phys(99,2182
#define bootsym(101,2321
#define CONFIG_X86_64 115,2809
#define CONFIG_COMPAT 116,2833
#define asmlinkage118,2858
#define PML4_ENTRY_BITS 120,2878
#define PML4_ENTRY_BYTES 122,2927
#define PML4_ADDR(123,2977
#define GB(126,3126
#define PML4_ENTRY_BYTES 128,3166
#define PML4_ADDR(129,3214
#define GB(131,3340
#define ROOT_PAGETABLE_FIRST_XEN_SLOT 185,6022
#define ROOT_PAGETABLE_LAST_XEN_SLOT 186,6064
#define ROOT_PAGETABLE_XEN_SLOTS 187,6106
#define HYPERVISOR_VIRT_START 191,6272
#define HYPERVISOR_VIRT_END 192,6321
#define RO_MPT_VIRT_START 194,6477
#define MPT_VIRT_SIZE 195,6526
#define RO_MPT_VIRT_END 196,6581
#define PCI_MCFG_VIRT_START 201,6848
#define PCI_MCFG_VIRT_END 202,6897
#define LINEAR_PT_VIRT_START 204,7019
#define LINEAR_PT_VIRT_END 205,7068
#define SH_LINEAR_PT_VIRT_START 207,7192
#define SH_LINEAR_PT_VIRT_END 208,7241
#define PERDOMAIN_VIRT_START 210,7355
#define PERDOMAIN_VIRT_END 211,7404
#define PERDOMAIN_MBYTES 212,7484
#define RDWR_MPT_VIRT_START 214,7619
#define RDWR_MPT_VIRT_END 215,7668
#define IOREMAP_VIRT_START 217,7784
#define IOREMAP_VIRT_END 218,7834
#define RDWR_COMPAT_MPT_VIRT_START 220,7966
#define RDWR_COMPAT_MPT_VIRT_END 221,8018
#define HIRO_COMPAT_MPT_VIRT_START 223,8166
#define HIRO_COMPAT_MPT_VIRT_END 224,8226
#define XEN_VIRT_START 226,8349
#define XEN_VIRT_END 227,8408
#define SPAGETABLE_VIRT_END 229,8517
#define SPAGETABLE_SIZE 230,8571
#define SPAGETABLE_VIRT_START 232,8704
#define FRAMETABLE_VIRT_END 234,8829
#define FRAMETABLE_SIZE 235,8882
#define FRAMETABLE_VIRT_START 237,9009
#define DIRECTMAP_VIRT_START 239,9149
#define DIRECTMAP_SIZE 240,9198
#define DIRECTMAP_VIRT_END 241,9252
#define __HYPERVISOR_COMPAT_VIRT_START 246,9400
#define HYPERVISOR_COMPAT_VIRT_START(247,9450
#define MACH2PHYS_COMPAT_VIRT_START 248,9519
#define MACH2PHYS_COMPAT_VIRT_END 249,9587
#define MACH2PHYS_COMPAT_NR_ENTRIES(250,9637
#define COMPAT_L2_PAGETABLE_FIRST_XEN_SLOT(253,9747
#define COMPAT_L2_PAGETABLE_LAST_XEN_SLOT 255,9848
#define COMPAT_L2_PAGETABLE_XEN_SLOTS(256,9912
#define COMPAT_LEGACY_MAX_VCPUS 259,10040
#define PGT_base_page_table 263,10102
#define __HYPERVISOR_CS64 265,10153
#define __HYPERVISOR_CS32 266,10186
#define __HYPERVISOR_CS 267,10219
#define __HYPERVISOR_DS64 268,10263
#define __HYPERVISOR_DS32 269,10296
#define __HYPERVISOR_DS 270,10329
#define SYMBOLS_ORIGIN 272,10374
#define __OS 275,10492
#define __OP 276,10542
#define CONFIG_X86_32 280,10616
#define CONFIG_DOMAIN_PAGE 281,10645
#define asmlinkage 283,10675
#define IOREMAP_MBYTES 300,11453
#define DIRECTMAP_MBYTES 301,11488
#define MAPCACHE_MBYTES 302,11523
#define PERDOMAIN_MBYTES 303,11558
#define LINEARPT_MBYTES 305,11594
#define MACHPHYS_MBYTES 306,11629
#define FRAMETABLE_MBYTES 307,11698
#define IOREMAP_VIRT_END	309,11753
#define IOREMAP_VIRT_START	310,11782
#define DIRECTMAP_VIRT_END	311,11851
#define DIRECTMAP_VIRT_START	312,11897
#define MAPCACHE_VIRT_END	313,11972
#define MAPCACHE_VIRT_START	314,12019
#define PERDOMAIN_VIRT_END	315,12091
#define PERDOMAIN_VIRT_START	316,12139
#define SH_LINEAR_PT_VIRT_END	317,12214
#define SH_LINEAR_PT_VIRT_START	318,12265
#define LINEAR_PT_VIRT_END	319,12345
#define LINEAR_PT_VIRT_START	320,12396
#define RDWR_MPT_VIRT_END	321,12470
#define RDWR_MPT_VIRT_START	322,12517
#define FRAMETABLE_VIRT_END	323,12589
#define FRAMETABLE_SIZE 324,12637
#define FRAMETABLE_VIRT_START	325,12693
#define RO_MPT_VIRT_END	326,12763
#define RO_MPT_VIRT_START	327,12810
#define DIRECTMAP_PHYS_END	329,12879
#define GUEST_SEGMENT_MAX_ADDR 332,12997
#define HYPERVISOR_VIRT_START 335,13104
#define L2_PAGETABLE_FIRST_XEN_SLOT 337,13166
#define L2_PAGETABLE_LAST_XEN_SLOT 339,13254
#define L2_PAGETABLE_XEN_SLOTS 341,13325
#define PGT_base_page_table 344,13426
#define __HYPERVISOR_CS 346,13477
#define __HYPERVISOR_DS 347,13508
#define __OS 350,13619
#define __OP 351,13669
#define GDT_LDT_VCPU_SHIFT 363,13949
#define GDT_LDT_VCPU_VA_SHIFT 364,13984
#define GDT_LDT_MBYTES 366,14072
#define GDT_LDT_MBYTES 368,14157
#define MAX_VIRT_CPUS 369,14207
#define GDT_LDT_VIRT_START 371,14294
#define GDT_LDT_VIRT_END 372,14348
#define GDT_VIRT_START(375,14481
#define LDT_VIRT_START(377,14581
#define PDPT_L1_ENTRIES 380,14649
#define PDPT_L2_ENTRIES 382,14745
#define ELFSIZE 386,14874
#define ELFSIZE 388,14899
#define ARCH_CRASH_SAVE_VMCOREINFO391,14926

xen/include/asm-x86/io_apic.h,2247
#define __ASM_IO_APIC_H2,24
#define IO_APIC_BASE(19,332
#define IO_APIC_ID(23,473
#define IO_APIC_REDIR_VECTOR_MASK 26,560
#define IO_APIC_REDIR_DEST_LOGICAL 27,604
#define IO_APIC_REDIR_DEST_PHYSICAL 28,648
#define IO_APIC_REDIR_SEND_PENDING 29,692
#define IO_APIC_REDIR_REMOTE_IRR 30,738
#define IO_APIC_REDIR_LEVEL_TRIGGER 31,784
#define IO_APIC_REDIR_MASKED 32,830
union IO_APIC_reg_00 37,917
	u32	raw;38,940
		u32	__reserved_2	40,960
			LTS	41,985
			delivery_type	42,999
			__reserved_1	43,1022
			ID	44,1044
	} __attribute__ ((packed)) bits;45,1057
union IO_APIC_reg_01 48,1095
	u32	raw;49,1118
		u32	version	51,1138
			__reserved_2	52,1159
			PRQ	53,1181
			entries	54,1195
			__reserved_1	55,1213
	} __attribute__ ((packed)) bits;56,1235
union IO_APIC_reg_02 59,1273
	u32	raw;60,1296
		u32	__reserved_2	62,1316
			arbitration	63,1341
			__reserved_1	64,1362
	} __attribute__ ((packed)) bits;65,1384
union IO_APIC_reg_03 68,1422
	u32	raw;69,1445
		u32	boot_DT	71,1465
			__reserved_1	72,1486
	} __attribute__ ((packed)) bits;73,1508
enum ioapic_irq_destination_types 82,1671
	dest_Fixed 83,1707
	dest_LowestPrio 84,1724
	dest_SMI 85,1746
	dest__reserved_1 86,1761
	dest_NMI 87,1784
	dest_INIT 88,1799
	dest__reserved_2 89,1815
	dest_ExtINT 90,1838
struct IO_APIC_route_entry 93,1859
	__u32	vector	94,1888
		delivery_mode	95,1909
		dest_mode	99,1999
		delivery_status	100,2047
		polarity	101,2071
		irr	102,2088
		trigger	103,2101
		mask	104,2142
		__reserved_2	105,2186
					__reserved_1	108,2233
					physical_dest	109,2257
					__reserved_2	110,2282
			} physical;111,2306
					__reserved_1	114,2340
					logical_dest	115,2364
			} logical;116,2388
			__u32 dest32;119,2462
	} dest;120,2479
#define ioapic_reg_remapped(132,2705
static inline unsigned int __io_apic_read(134,2774
static inline unsigned int io_apic_read(140,2919
static inline void __io_apic_write(147,3113
static inline void io_apic_write(153,3272
static inline void io_apic_eoi(160,3489
#define sis_apic_bug 174,3828
static inline void io_apic_modify(176,3858
static inline void init_ioapic_mappings(207,5025
static inline void ioapic_suspend(208,5074
static inline void ioapic_resume(209,5117

xen/include/asm-x86/edd.h,440
#define __XEN_EDD_H__24,954
struct edd_info 26,977
    u8 device;28,1044
    u8 version;29,1095
    u16 interface_support;30,1153
    u16 legacy_max_cylinder;32,1275
    u8 legacy_max_head;33,1352
    u8 legacy_sectors_per_track;34,1416
        u16 length;37,1572
        u8 data[data38,1592
    } edd_device_params;39,1613
struct mbr_signature 42,1667
    u8 device;43,1690
    u8 pad[pad44,1705
    u32 signature;45,1720

xen/include/asm-x86/regs.h,82
#define __X86_REGS_H__3,24
#define guest_mode(11,138
#define return_reg(22,862

xen/include/asm-x86/smp.h,241
#define __ASM_SMP_H2,20
#define BAD_APICID 19,317
#define MAX_APICID 43,787
#define cpu_physical_id(47,878
#define cpu_is_offline(49,931
#define raw_smp_processor_id(59,1331
#define cpu_physical_id(70,1535
#define NO_PROC_ID	72,1591

xen/include/asm-x86/mm.h,5010
#define __ASM_X86_MM_H__3,26
#define PFN_ORDER(17,378
#define __pdx_t 25,668
#undef page_list_entry27,698
struct page_list_entry28,721
    __pdx_t next,30,746
    __pdx_t next, prev;30,746
struct page_info33,774
        struct page_list_entry list;47,1451
        paddr_t up;50,1585
        uint64_t shr_handle;52,1664
    unsigned long count_info;56,1766
            unsigned long type_info;64,2017
        } inuse;65,2054
            unsigned long type:type69,2148
            unsigned long pinned:pinned70,2219
            unsigned long head:head71,2283
            unsigned long count:count72,2363
        } sh;73,2421
            bool_t need_tlbflush;78,2602
        } free;79,2636
    } u;81,2653
            __pdx_t _domain;88,2810
        } inuse;89,2839
            __pdx_t back;94,2972
        } sh;95,2998
            unsigned int order;100,3141
        } free;101,3173
    } v;103,3190
        u32 tlbflush_timestamp;111,3457
            u16 nr_validated_ptes;144,5464
            s8 partial_pte;145,5499
        u32 shadow_flags;153,5778
        __pdx_t next_shadow;156,5876
#undef __pdx_t160,5916
#define PG_shift(162,5932
#define PG_mask(163,5980
#define PGT_none 166,6088
#define PGT_l1_page_table 167,6166
#define PGT_l2_page_table 168,6244
#define PGT_l3_page_table 169,6322
#define PGT_l4_page_table 170,6400
#define PGT_seg_desc_page 171,6478
#define PGT_writable_page 172,6556
#define PGT_shared_page 173,6634
#define PGT_type_mask 174,6712
#define _PGT_pinned 177,6853
#define PGT_pinned 178,6891
#define _PGT_validated 180,6996
#define PGT_validated 181,7034
#define _PGT_pae_xen_l2 183,7153
#define PGT_pae_xen_l2 184,7191
#define _PGT_partial 186,7307
#define PGT_partial 187,7345
#define _PGT_locked 189,7408
#define PGT_locked 190,7446
#define PGT_count_width 193,7543
#define PGT_count_mask 194,7581
#define _PGC_allocated 197,7691
#define PGC_allocated 198,7729
#define _PGC_xen_heap 200,7794
#define PGC_xen_heap 201,7832
#define _PGC_page_table 203,7920
#define PGC_page_table 204,7958
#define PGC_cacheattr_base 206,8045
#define PGC_cacheattr_mask 207,8084
#define _PGC_broken 209,8148
#define PGC_broken 210,8186
#define PGC_state 212,8303
#define PGC_state_inuse 213,8343
#define PGC_state_offlining 214,8383
#define PGC_state_offlined 215,8425
#define PGC_state_free 216,8466
#define page_state_is(217,8506
#define PGC_count_width 220,8628
#define PGC_count_mask 221,8666
struct spage_info224,8738
       unsigned long type_info;226,8758
#define SGT_none 230,8850
#define SGT_mark 231,8918
#define SGT_dynamic 232,8987
#define SGT_type_mask 233,9077
#define SGT_count_width 236,9206
#define SGT_count_mask 237,9244
#define is_xen_heap_page(241,9327
#define is_xen_heap_mfn(242,9393
#define is_xen_fixed_mfn(246,9570
#define is_xen_heap_page(248,9627
#define is_xen_heap_mfn(249,9694
#define is_xen_fixed_mfn(251,9788
#define PRtype_info 257,9967
#define PRtype_info 259,10059
#define SHADOW_OOS_PAGES 263,10207
#define SHADOW_OOS_FIXUPS 266,10259
#define page_get_owner(268,10288
#define page_set_owner(271,10503
#define maddr_get_owner(274,10635
#define vaddr_get_owner(275,10703
#define XENSHARE_writable 277,10771
#define XENSHARE_readonly 278,10799
#define frame_table 284,11022
#define spage_table 286,11104
#define PDX_GROUP_COUNT 293,11326
static inline struct page_info *__virt_to_page(__virt_to_page298,11570
static inline void *__page_to_virt(__page_to_virt315,12063
static inline void put_page_and_type(345,13318
static inline int put_page_and_type_preemptible(351,13429
static inline int get_page_and_type(365,13761
#define ASSERT_PAGE_IS_TYPE(380,14109
#define ASSERT_PAGE_IS_DOMAIN(383,14299
#define MFN_FITS_IN_CR3(390,14577
#define TYPE_SAFETY 438,16621
#define TYPE_SAFE(442,16670
#define TYPE_SAFE(447,16945
#define PRI_mfn 456,17338
#undef  machine_to_phys_mapping465,17644
#define machine_to_phys_mapping 466,17676
#define INVALID_M2P_ENTRY 467,17748
#define VALID_M2P(468,17788
#define SHARED_M2P_ENTRY 469,17858
#define SHARED_M2P(470,17904
#define compat_machine_to_phys_mapping 473,17986
#define set_gpfn_from_mfn(474,18070
#define set_gpfn_from_mfn(483,18574
#define get_gpfn_from_mfn(491,18978
#define mfn_to_gmfn(493,19048
#define INVALID_MFN 498,19239
#define compat_pfn_to_cr3(500,19279
#define compat_cr3_to_pfn(501,19362
#define memguard_init(508,19606
#define memguard_guard_range(509,19655
#define memguard_unguard_range(510,19704
static inline int pagefault_by_memadd(525,20193
static inline int handle_memadd_fault(531,20336
#define AUDIT_SHADOW_ALREADY_LOCKED 540,20502
#define AUDIT_ERRORS_OK 541,20550
#define AUDIT_QUIET 542,20598
#define audit_domain(545,20696
#define _audit_domain(550,20792
#define audit_domain(551,20832
#define audit_domains(552,20872
static inline int memory_add(584,22010
# define domain_set_alloc_bitsize(594,22269
# define domain_clamp_alloc_bitsize(595,22316

xen/include/asm-x86/string.h,176
#define __X86_STRING_H__2,25
#define __HAVE_ARCH_MEMCPY6,76
#define memcpy(7,103
#define __HAVE_ARCH_MEMMOVE10,236
#define __HAVE_ARCH_MEMSET13,326
#define memset(14,353

xen/include/asm-x86/debugreg.h,987
#define _X86_DEBUGREG_H2,24
#define DR_FIRSTADDR 8,192
#define DR_LASTADDR 9,215
#define DR_STATUS 10,238
#define DR_CONTROL 11,261
#define DR_TRAP0 17,490
#define DR_TRAP1 18,540
#define DR_TRAP2 19,590
#define DR_TRAP3 20,640
#define DR_STEP 21,690
#define DR_SWITCH 22,748
#define DR_CONTROL_SHIFT 30,1129
#define DR_CONTROL_SIZE 31,1199
#define DR_RW_EXECUTE 33,1262
#define DR_RW_WRITE 34,1337
#define DR_IO 35,1365
#define DR_RW_READ 36,1393
#define DR_LEN_1 38,1422
#define DR_LEN_2 39,1492
#define DR_LEN_4 40,1520
#define DR_LEN_8 41,1548
#define DR_LOCAL_ENABLE_SHIFT 48,1863
#define DR_GLOBAL_ENABLE_SHIFT 49,1940
#define DR_ENABLE_SIZE 50,2018
#define DR_LOCAL_ENABLE_MASK 52,2087
#define DR_GLOBAL_ENABLE_MASK 53,2161
#define DR7_ACTIVE_MASK 55,2236
#define DR_CONTROL_RESERVED_ZERO 61,2524
#define DR_CONTROL_RESERVED_ONE 62,2601
#define DR_LOCAL_EXACT_ENABLE 63,2677
#define DR_GLOBAL_EXACT_ENABLE 64,2750
#define DR_GENERAL_DETECT 65,2824

xen/include/asm-x86/spinlock.h,717
#define __ASM_SPINLOCK_H2,25
    volatile s16 lock;9,138
} raw_spinlock_t;10,161
#define _RAW_SPIN_LOCK_UNLOCKED 12,180
#define _raw_spin_is_locked(14,240
static always_inline void _raw_spin_unlock(16,289
static always_inline int _raw_spin_trylock(24,483
    volatile int lock;35,726
} raw_rwlock_t;36,749
#define RW_LOCK_BIAS 38,766
#define _RAW_RW_LOCK_UNLOCKED 39,798
static always_inline void _raw_read_lock(41,865
static always_inline void _raw_write_lock(55,1276
static always_inline int _raw_write_trylock(69,1707
static always_inline void _raw_read_unlock(85,2080
static always_inline void _raw_write_unlock(92,2234
#define _raw_rw_is_locked(99,2411
#define _raw_rw_is_write_locked(100,2467

xen/include/asm-x86/bug.h,382
#define __X86_BUG_H__2,22
struct bug_frame 10,133
    unsigned char ud2[ud211,152
    unsigned char ret;12,178
    unsigned short id;13,201
#define BUGFRAME_run_fn 16,271
#define BUGFRAME_warn 17,297
#define BUGFRAME_bug 18,323
#define BUGFRAME_assert 19,349
#define run_in_exception_handler(21,376
#define WARN(27,612
#define BUG(33,854
#define assert_failed(39,1096

xen/include/asm-x86/genapic.h,769
#define _ASM_GENAPIC_H 2,23
struct genapic 20,421
	const char *name;name21,439
	int (*probe)probe22,458
	int (*mps_oem_check)mps_oem_check27,619
	int (*acpi_madt_oem_check)acpi_madt_oem_check29,709
	int int_delivery_mode;32,843
	int int_dest_mode;33,867
	void (*init_apic_ldr)init_apic_ldr34,887
	void (*clustered_apic_check)clustered_apic_check35,917
	const cpumask_t *(*target_cpus)target_cpus36,954
	const cpumask_t *(*vector_allocation_cpumask)vector_allocation_cpumask37,994
	unsigned int (*cpu_mask_to_apicid)cpu_mask_to_apicid38,1051
	void (*send_IPI_mask)send_IPI_mask39,1114
    void (*send_IPI_self)send_IPI_self40,1173
#define APICFUNC(43,1216
#define APIC_INIT(45,1244
#define GENAPIC_FLAT 61,1745
#define GENAPIC_PHYS 78,2464

xen/include/asm-x86/shadow.h,350
#define _XEN_SHADOW_H24,1061
#define shadow_mode_enabled(37,1398
#define shadow_mode_refcounts(38,1456
#define shadow_mode_log_dirty(40,1581
#define shadow_mode_translate(42,1706
#define shadow_mode_external(44,1831
#define shadow_mode_trap_reads(49,2039
shadow_drop_references(103,4192
static inline void shadow_remove_all_shadows(112,4553

xen/include/asm-x86/iocap.h,230
#define __X86_IOCAP_H__8,178
#define ioports_permit_access(10,203
#define ioports_deny_access(12,313
#define ioports_access_permitted(14,426
#define cache_flush_permitted(17,542
#define multipage_allocation_permitted(21,707

xen/include/asm-x86/hypercall.h,75
#define __ASM_X86_HYPERCALL_H__6,140
#define MMU_UPDATE_PREEMPTED 18,528

xen/include/asm-x86/cache.h,124
#define __ARCH_X86_CACHE_H5,61
#define L1_CACHE_SHIFT	10,139
#define L1_CACHE_BYTES	11,190
#define __read_mostly 13,236

xen/include/asm-x86/x86_32/page.h,2094
#define __X86_32_PAGE_H__3,27
#define L1_PAGETABLE_SHIFT 5,54
#define L2_PAGETABLE_SHIFT 6,89
#define L3_PAGETABLE_SHIFT 7,124
#define PAGE_SHIFT 8,159
#define SUPERPAGE_SHIFT 9,210
#define ROOT_PAGETABLE_SHIFT 10,261
#define PAGETABLE_ORDER 12,313
#define L1_PAGETABLE_ENTRIES 13,347
#define L2_PAGETABLE_ENTRIES 14,400
#define L3_PAGETABLE_ENTRIES 15,453
#define ROOT_PAGETABLE_ENTRIES 16,487
#define SUPERPAGE_ORDER 17,540
#define PADDR_BITS 26,941
#define PADDR_MASK 27,976
#define __PAGE_OFFSET 29,1034
#define __XEN_VIRT_START 30,1079
#define VADDR_BITS 32,1126
#define VADDR_MASK 33,1161
#define is_canonical_address(35,1201
#define l1_linear_offset(38,1313
#define l2_linear_offset(39,1371
#define __mfn_valid(46,1500
#define max_pdx 52,1824
#define pfn_to_pdx(53,1865
#define pdx_to_pfn(54,1903
#define virt_to_pdx(55,1941
#define pdx_to_virt(56,1989
#define pfn_to_sdx(58,2039
#define sdx_to_pfn(59,2109
static inline unsigned long __virt_to_maddr(61,2180
static inline void *__maddr_to_virt(__maddr_to_virt67,2352
typedef u64 intpte_t;74,2578
#define PRIpte 75,2600
typedef struct { intpte_t l1;77,2625
typedef struct { intpte_t l1; } l1_pgentry_t;77,2625
typedef struct { intpte_t l2;78,2671
typedef struct { intpte_t l2; } l2_pgentry_t;78,2671
typedef struct { intpte_t l3;79,2717
typedef struct { intpte_t l3; } l3_pgentry_t;79,2717
typedef l3_pgentry_t root_pgentry_t;80,2763
#define pte_read_atomic(87,2892
#define pte_write_atomic(88,2948
#define pte_write(89,3010
#define root_get_pfn 99,3490
#define root_get_flags 100,3536
#define root_get_intpte 101,3584
#define root_empty 102,3633
#define root_from_paddr 103,3677
#define PGT_root_page_table 104,3726
#define is_guest_l1_slot(107,3790
#define is_guest_l2_slot(108,3825
#define is_guest_l3_slot(111,4054
#define _PAGE_NX_BIT 119,4194
#define _PAGE_NX 120,4224
#define get_pte_flags(123,4357
#define put_pte_flags(124,4433
#define BASE_DISALLOW_MASK 130,4631
#define L1_DISALLOW_MASK 132,4685
#define L2_DISALLOW_MASK 133,4746
#define L3_DISALLOW_MASK 134,4805

xen/include/asm-x86/x86_32/regs.h,278
#define _I386_REGS_H2,21
#define vm86_mode(7,91
#define ring_0(8,142
#define ring_1(9,184
#define ring_2(10,226
#define ring_3(11,268
#define guest_kernel_mode(13,311
#define permit_softint(16,381
#define null_trap_bounce(20,540
#define CTXT_SWITCH_STACK_BYTES 23,670

xen/include/asm-x86/x86_32/bug.h,159
#define __X86_32_BUG_H__2,25
struct bug_frame_str 4,51
    unsigned char mov;5,74
    unsigned long str;6,97
#define bug_str(8,147
#define BUG_STR(9,195

xen/include/asm-x86/x86_32/asm_defns.h,800
#define __X86_32_ASM_DEFNS_H__2,31
#define SETUP_EXCEPTION_FRAME_POINTER 9,220
#define SETUP_EXCEPTION_FRAME_POINTER13,345
#define ASSERT_INTERRUPT_STATUS(17,406
#define ASSERT_INTERRUPT_STATUS(24,685
#define ASSERT_INTERRUPTS_ENABLED 27,728
#define ASSERT_INTERRUPTS_DISABLED 28,791
#define SAVE_ALL_GPRS 30,854
#define SAVE_ALL(50,1900
#define PERFC_INCR(85,3812
#define PERFC_INCR(92,4126
#define FIXUP_RING0_GUEST_STACK 96,4211
#define FIXUP_RING0_GUEST_STACK107,4750
#define BUILD_SMP_INTERRUPT(110,4790
#define XBUILD_SMP_INTERRUPT(111,4849
#define BUILD_COMMON_IRQ(125,5478
#define IRQ_NAME2(137,6007
#define IRQ_NAME(138,6050
#define BUILD_IRQ(140,6091
#define GET_CPUINFO_FIELD(148,6421
#define GET_CURRENT(152,6648
# define _ASM_EX(157,6809
# define _ASM_EX(159,6837

xen/include/asm-x86/x86_32/uaccess.h,248
#define __i386_UACCESS_H2,25
#define __range_not_ok(11,281
#define access_ok(18,509
#define array_access_ok(20,580
#define __put_user_u64(26,809
#define __put_user_size(41,1245
#define __get_user_u64(53,1693
#define __get_user_size(70,2186

xen/include/asm-x86/x86_32/elf.h,603
#define __X86_32_ELF_H__2,25
    unsigned long ebx;5,68
    unsigned long ecx;6,91
    unsigned long edx;7,114
    unsigned long esi;8,137
    unsigned long edi;9,160
    unsigned long ebp;10,183
    unsigned long eax;11,206
    unsigned long ds;12,229
    unsigned long es;13,251
    unsigned long fs;14,273
    unsigned long gs;15,295
    unsigned long orig_eax;16,317
    unsigned long eip;17,345
    unsigned long cs;18,368
    unsigned long eflags;19,390
    unsigned long esp;20,416
    unsigned long ss;21,439
} ELF_Gregset;22,461
static inline void elf_core_save_regs(24,477

xen/include/asm-x86/x86_32/system.h,197
#define __X86_32_SYSTEM_H__2,28
static always_inline unsigned long long __cmpxchg8b(4,57
#define cmpxchg(17,428
#define __cmpxchg_user(44,1837
#define cmpxchg_user(57,2678
#define mb(88,4828

xen/include/asm-x86/numa.h,786
#define _ASM_X8664_NUMA_H 2,27
#define NODES_SHIFT 6,82
#define cpu_to_node(13,204
#define parent_node(14,249
#define node_to_first_cpu(15,283
#define node_to_cpumask(16,347
struct node 18,405
	u64 start,19,420
	u64 start,end;19,420
#define ZONE_ALIGN 26,570
#define VIRTUAL_BUG_ON(27,621
static inline void clear_node_cpumask(44,1058
struct node_data 54,1303
    unsigned long node_start_pfn;55,1322
    unsigned long node_spanned_pages;56,1356
    unsigned int  node_id;57,1394
static inline __attribute__((pure)) int phys_to_nid(62,1463
#define NODE_DATA(71,1755
#define node_start_pfn(73,1800
#define node_spanned_pages(74,1861
#define node_end_pfn(75,1930
#define init_cpu_to_node(80,2105
#define clear_node_cpumask(81,2148
#define valid_numa_range(82,2196

xen/include/asm-x86/grant_table.h,532
#define __ASM_GRANT_TABLE_H__8,190
#define INITIAL_NR_GRANT_FRAMES 10,221
#define gnttab_create_shared_page(21,614
#define gnttab_create_status_page(28,1008
#define gnttab_shared_mfn(36,1403
#define gnttab_shared_gmfn(39,1518
#define gnttab_status_mfn(43,1627
#define gnttab_status_gmfn(46,1738
#define gnttab_mark_dirty(49,1843
static inline void gnttab_clear_flag(51,1904
#define gnttab_host_mapping_get_page_type(57,2095
#define gnttab_release_host_mappings(62,2318
static inline int replace_grant_supported(64,2397

xen/include/asm-x86/mem_sharing.h,223
#define __MEM_SHARING_H__23,952
#define sharing_supported(27,998
typedef uint64_t shr_handle_t;30,1079
#define MEM_SHARING_MUST_SUCCEED 37,1371
#define MEM_SHARING_DESTROY_GFN 38,1416
#define mem_sharing_init(50,1866

xen/include/asm-x86/mach-default/mach_mpparse.h,118
#define __ASM_MACH_MPPARSE_H2,29
static inline int mps_oem_check(4,59
static inline int acpi_madt_oem_check(11,205

xen/include/asm-x86/mach-default/smpboot_hooks.h,168
static inline void smpboot_setup_warm_reset_vector(4,109
static inline void smpboot_restore_warm_reset_vector(15,419
static inline void smpboot_setup_io_apic(31,727

xen/include/asm-x86/mach-default/io_ports.h,453
#define _MACH_IO_PORTS_H8,183
#define PIT_MODE	11,236
#define PIT_CH0	12,259
#define PIT_CH2	13,282
#define PIC_MASTER_CMD	16,333
#define PIC_MASTER_IMR	17,362
#define PIC_MASTER_ISR	18,391
#define PIC_MASTER_POLL	19,430
#define PIC_MASTER_OCW3	20,470
#define PIC_SLAVE_CMD	21,510
#define PIC_SLAVE_IMR	22,538
#define PIC_CASCADE_IR	25,598
#define MASTER_ICW4_DEFAULT	26,624
#define SLAVE_ICW4_DEFAULT	27,657
#define PIC_ICW4_AEOI	28,689

xen/include/asm-x86/mach-default/mach_mpspec.h,92
#define __ASM_MACH_MPSPEC_H2,28
#define MAX_IRQ_SOURCES 4,57
#define MAX_MP_BUSSES 8,229

xen/include/asm-x86/mach-default/irq_vectors.h,742
#define _ASM_IRQ_VECTORS_H2,27
#define SPURIOUS_APIC_VECTOR	5,115
#define ERROR_APIC_VECTOR	6,149
#define INVALIDATE_TLB_VECTOR	7,180
#define EVENT_CHECK_VECTOR	8,215
#define CALL_FUNCTION_VECTOR	9,247
#define THERMAL_APIC_VECTOR	10,281
#define LOCAL_TIMER_VECTOR	11,314
#define PMU_APIC_VECTOR 12,346
#define CMCI_APIC_VECTOR	13,376
#define FIRST_HIPRIORITY_VECTOR	18,540
#define LAST_HIPRIORITY_VECTOR 19,577
#define FIRST_LEGACY_VECTOR	22,656
#define LAST_LEGACY_VECTOR 23,689
#define HYPERCALL_VECTOR	25,727
#define LEGACY_SYSCALL_VECTOR 26,757
#define FIRST_DYNAMIC_VECTOR	29,856
#define LAST_DYNAMIC_VECTOR	30,890
#define NR_DYNAMIC_VECTORS	31,923
#define IRQ_MOVE_CLEANUP_VECTOR 33,1000
#define NR_VECTORS 35,1054

xen/include/asm-x86/mach-default/bios_ebda.h,79
#define _MACH_BIOS_EBDA_H2,26
static inline unsigned int get_bios_ebda(8,144

xen/include/asm-x86/mach-default/mach_wakecpu.h,96
#define __ASM_MACH_WAKECPU_H2,29
#define TRAMPOLINE_LOW 9,168
#define TRAMPOLINE_HIGH 10,212

xen/include/asm-x86/nmi.h,73
#define ASM_NMI_H3,19
typedef int (*nmi_callback_t)nmi_callback_t9,87

xen/include/asm-x86/bzimage.h,31
#define __X86_BZIMAGE_H__2,26

xen/include/asm-x86/e820.h,422
#define __E820_HEADER2,22
#define E820_RAM 7,98
#define E820_RESERVED 8,126
#define E820_ACPI 9,154
#define E820_NVS 10,182
#define E820_UNUSABLE 11,210
struct e820entry 13,239
    uint64_t addr;14,258
    uint64_t size;15,277
    uint32_t type;16,296
#define E820MAX	19,343
struct e820map 21,364
    int nr_map;22,381
    struct e820entry map[map23,397
#define e820_raw 39,952
#define e820_raw_nr 40,986

xen/include/asm-x86/msr-index.h,14627
#define __ASM_MSR_INDEX_H2,26
#define MSR_EFER	7,129
#define MSR_STAR	8,190
#define MSR_LSTAR	9,252
#define MSR_CSTAR	10,313
#define MSR_SYSCALL_MASK	11,376
#define MSR_FS_BASE	12,442
#define MSR_GS_BASE	13,494
#define MSR_SHADOW_GS_BASE	14,546
#define MSR_TSC_AUX	15,607
#define _EFER_SCE	18,677
#define _EFER_LME	19,720
#define _EFER_LMA	20,765
#define _EFER_NX	21,822
#define _EFER_SVME	22,867
#define _EFER_LMSLE	23,912
#define _EFER_FFXSE	24,978
#define EFER_SCE	26,1041
#define EFER_LME	27,1074
#define EFER_LMA	28,1107
#define EFER_NX	29,1140
#define EFER_SVME	30,1172
#define EFER_LMSLE	31,1207
#define EFER_FFXSE	32,1244
#define MSR_IA32_PERFCTR0	35,1334
#define MSR_IA32_PERFCTR1	36,1372
#define MSR_FSB_FREQ	37,1410
#define MSR_MTRRcap	39,1445
#define MSR_IA32_BBL_CR_CTL	40,1478
#define MSR_IA32_SYSENTER_CS	42,1519
#define MSR_IA32_SYSENTER_ESP	43,1560
#define MSR_IA32_SYSENTER_EIP	44,1602
#define MSR_IA32_MCG_CAP	46,1645
#define MSR_IA32_MCG_STATUS	47,1682
#define MSR_IA32_MCG_CTL	48,1722
#define MSR_IA32_PEBS_ENABLE	50,1760
#define MSR_IA32_DS_AREA	51,1801
#define MSR_IA32_PERF_CAPABILITIES	52,1838
#define MSR_MTRRfix64K_00000	54,1885
#define MSR_MTRRfix16K_80000	55,1926
#define MSR_MTRRfix16K_A0000	56,1967
#define MSR_MTRRfix4K_C0000	57,2008
#define MSR_MTRRfix4K_C8000	58,2048
#define MSR_MTRRfix4K_D0000	59,2088
#define MSR_MTRRfix4K_D8000	60,2128
#define MSR_MTRRfix4K_E0000	61,2168
#define MSR_MTRRfix4K_E8000	62,2208
#define MSR_MTRRfix4K_F0000	63,2248
#define MSR_MTRRfix4K_F8000	64,2288
#define MSR_MTRRdefType	65,2328
#define MSR_IA32_DEBUGCTLMSR	67,2366
#define MSR_IA32_LASTBRANCHFROMIP	68,2407
#define MSR_IA32_LASTBRANCHTOIP	69,2452
#define MSR_IA32_LASTINTFROMIP	70,2496
#define MSR_IA32_LASTINTTOIP	71,2539
#define MSR_IA32_MTRR_PHYSBASE0 73,2582
#define MSR_IA32_MTRR_PHYSMASK0 74,2629
#define MSR_IA32_MTRR_PHYSBASE1 75,2676
#define MSR_IA32_MTRR_PHYSMASK1 76,2723
#define MSR_IA32_MTRR_PHYSBASE2 77,2770
#define MSR_IA32_MTRR_PHYSMASK2 78,2817
#define MSR_IA32_MTRR_PHYSBASE3 79,2864
#define MSR_IA32_MTRR_PHYSMASK3 80,2911
#define MSR_IA32_MTRR_PHYSBASE4 81,2958
#define MSR_IA32_MTRR_PHYSMASK4 82,3005
#define MSR_IA32_MTRR_PHYSBASE5 83,3052
#define MSR_IA32_MTRR_PHYSMASK5 84,3099
#define MSR_IA32_MTRR_PHYSBASE6 85,3146
#define MSR_IA32_MTRR_PHYSMASK6 86,3193
#define MSR_IA32_MTRR_PHYSBASE7 87,3240
#define MSR_IA32_MTRR_PHYSMASK7 88,3287
#define MSR_IA32_CR_PAT 90,3335
#define MSR_IA32_CR_PAT_RESET 91,3382
#define MSR_IA32_MC0_CTL	93,3441
#define MSR_IA32_MC0_STATUS	94,3478
#define MSR_IA32_MC0_ADDR	95,3518
#define MSR_IA32_MC0_MISC	96,3556
#define MSR_IA32_MC0_CTL2	97,3594
#define CMCI_EN 98,3632
#define CMCI_THRESHOLD_MASK	99,3661
#define MSR_IA32_MC1_CTL	101,3698
#define MSR_IA32_MC1_CTL2	102,3735
#define MSR_IA32_MC1_STATUS	103,3773
#define MSR_IA32_MC1_ADDR	104,3813
#define MSR_IA32_MC1_MISC	105,3851
#define MSR_IA32_MC2_CTL	107,3890
#define MSR_IA32_MC2_CTL2	108,3927
#define MSR_IA32_MC2_STATUS	109,3965
#define MSR_IA32_MC2_ADDR	110,4005
#define MSR_IA32_MC2_MISC	111,4043
#define MSR_IA32_MC3_CTL2	113,4082
#define MSR_IA32_MC3_CTL	114,4120
#define MSR_IA32_MC3_STATUS	115,4157
#define MSR_IA32_MC3_ADDR	116,4197
#define MSR_IA32_MC3_MISC	117,4235
#define MSR_IA32_MC4_CTL2	119,4274
#define MSR_IA32_MC4_CTL	120,4312
#define MSR_IA32_MC4_STATUS	121,4349
#define MSR_IA32_MC4_ADDR	122,4389
#define MSR_IA32_MC4_MISC	123,4427
#define MSR_IA32_MC5_CTL2	125,4466
#define MSR_IA32_MC5_CTL	126,4504
#define MSR_IA32_MC5_STATUS	127,4541
#define MSR_IA32_MC5_ADDR	128,4581
#define MSR_IA32_MC5_MISC	129,4619
#define MSR_IA32_MC6_CTL2	131,4658
#define MSR_IA32_MC6_CTL	132,4696
#define MSR_IA32_MC6_STATUS	133,4733
#define MSR_IA32_MC6_ADDR	134,4773
#define MSR_IA32_MC6_MISC	135,4811
#define MSR_IA32_MC7_CTL2	137,4850
#define MSR_IA32_MC7_CTL	138,4888
#define MSR_IA32_MC7_STATUS	139,4925
#define MSR_IA32_MC7_ADDR	140,4965
#define MSR_IA32_MC7_MISC	141,5003
#define MSR_IA32_MC8_CTL2	143,5042
#define MSR_IA32_MC8_CTL	144,5080
#define MSR_IA32_MC8_STATUS	145,5117
#define MSR_IA32_MC8_ADDR	146,5157
#define MSR_IA32_MC8_MISC	147,5195
#define MSR_IA32_MCx_CTL(149,5234
#define MSR_IA32_MCx_STATUS(150,5290
#define MSR_IA32_MCx_ADDR(151,5352
#define MSR_IA32_MCx_MISC(152,5410
#define MSR_P6_PERFCTR0	154,5470
#define MSR_P6_PERFCTR1	155,5507
#define MSR_P6_EVNTSEL0	156,5544
#define MSR_P6_EVNTSEL1	157,5581
#define MSR_INTEL_CPUID_FEATURE_MASK	160,5659
#define MSR_INTEL_CPUID1_FEATURE_MASK	161,5707
#define MSR_INTEL_CPUID80000001_FEATURE_MASK 162,5756
#define MSR_IA32_VMX_BASIC 165,5853
#define MSR_IA32_VMX_PINBASED_CTLS 166,5907
#define MSR_IA32_VMX_PROCBASED_CTLS 167,5961
#define MSR_IA32_VMX_EXIT_CTLS 168,6015
#define MSR_IA32_VMX_ENTRY_CTLS 169,6069
#define MSR_IA32_VMX_MISC 170,6123
#define MSR_IA32_VMX_CR0_FIXED0 171,6177
#define MSR_IA32_VMX_CR0_FIXED1 172,6231
#define MSR_IA32_VMX_CR4_FIXED0 173,6285
#define MSR_IA32_VMX_CR4_FIXED1 174,6339
#define MSR_IA32_VMX_VMCS_ENUM 175,6393
#define MSR_IA32_VMX_PROCBASED_CTLS2 176,6447
#define MSR_IA32_VMX_EPT_VPID_CAP 177,6501
#define MSR_IA32_VMX_TRUE_PINBASED_CTLS 178,6555
#define MSR_IA32_VMX_TRUE_PROCBASED_CTLS 179,6609
#define MSR_IA32_VMX_TRUE_EXIT_CTLS 180,6663
#define MSR_IA32_VMX_TRUE_ENTRY_CTLS 181,6717
#define IA32_FEATURE_CONTROL_MSR 182,6771
#define IA32_FEATURE_CONTROL_MSR_LOCK 183,6824
#define IA32_FEATURE_CONTROL_MSR_ENABLE_VMXON_INSIDE_SMX 184,6889
#define IA32_FEATURE_CONTROL_MSR_ENABLE_VMXON_OUTSIDE_SMX 185,6954
#define IA32_FEATURE_CONTROL_MSR_SENTER_PARAM_CTL 186,7019
#define IA32_FEATURE_CONTROL_MSR_ENABLE_SENTER 187,7084
#define MSR_K7_EVNTSEL0	191,7239
#define MSR_K7_PERFCTR0	192,7276
#define MSR_K7_EVNTSEL1	193,7313
#define MSR_K7_PERFCTR1	194,7350
#define MSR_K7_EVNTSEL2	195,7387
#define MSR_K7_PERFCTR2	196,7424
#define MSR_K7_EVNTSEL3	197,7461
#define MSR_K7_PERFCTR3	198,7498
#define MSR_K8_TOP_MEM1	199,7535
#define MSR_K7_CLK_CTL	200,7572
#define MSR_K8_TOP_MEM2	201,7608
#define MSR_K8_SYSCFG	202,7645
#define K8_MTRRFIXRANGE_DRAM_ENABLE	204,7681
#define K8_MTRRFIXRANGE_DRAM_MODIFY	205,7755
#define K8_MTRR_RDMEM_WRMEM_MASK	206,7829
#define MSR_K7_HWCR	208,7901
#define MSR_K8_HWCR	209,7934
#define MSR_K7_FID_VID_CTL	210,7967
#define MSR_K7_FID_VID_STATUS	211,8006
#define MSR_K8_PSTATE_LIMIT	212,8048
#define MSR_K8_PSTATE_CTRL	213,8088
#define MSR_K8_PSTATE_STATUS	214,8127
#define MSR_K8_PSTATE0	215,8168
#define MSR_K8_PSTATE1	216,8204
#define MSR_K8_PSTATE2	217,8240
#define MSR_K8_PSTATE3	218,8276
#define MSR_K8_PSTATE4	219,8312
#define MSR_K8_PSTATE5	220,8348
#define MSR_K8_PSTATE6	221,8384
#define MSR_K8_PSTATE7	222,8420
#define MSR_K8_ENABLE_C1E	223,8456
#define MSR_K8_VM_CR	224,8494
#define MSR_K8_VM_HSAVE_PA	225,8528
#define MSR_K8_FEATURE_MASK	227,8568
#define MSR_K8_EXT_FEATURE_MASK	228,8608
#define _K8_VMCR_SVME_DISABLE	231,8678
#define K8_VMCR_SVME_DISABLE	232,8711
#define MSR_AMD64_NB_CFG	235,8788
#define MSR_AMD64_DC_CFG	236,8825
#define AMD64_NB_CFG_CF8_EXT_ENABLE_BIT	237,8862
#define MSR_F10_MC4_MISC1	240,8945
#define MSR_F10_MC4_MISC2	241,8983
#define MSR_F10_MC4_MISC3	242,9021
#define MSR_FAM10H_MMIO_CONF_BASE	245,9088
#define FAM10H_MMIO_CONF_ENABLE 246,9133
#define FAM10H_MMIO_CONF_BUSRANGE_MASK	247,9180
#define FAM10H_MMIO_CONF_BUSRANGE_SHIFT 248,9223
#define FAM10H_MMIO_CONF_BASE_MASK	249,9265
#define FAM10H_MMIO_CONF_BASE_SHIFT	250,9313
#define MSR_AMD_PATCHLEVEL	253,9378
#define MSR_AMD_PATCHLOADER	254,9417
#define MSR_AMD_OSVW_ID_LENGTH 257,9495
#define MSR_AMD_OSVW_STATUS 258,9546
#define MSR_K6_EFER	261,9612
#define MSR_K6_STAR	262,9645
#define MSR_K6_WHCR	263,9678
#define MSR_K6_UWCCR	264,9711
#define MSR_K6_EPMR	265,9745
#define MSR_K6_PSOR	266,9778
#define MSR_K6_PFIR	267,9811
#define MSR_IDT_FCR1	270,9883
#define MSR_IDT_FCR2	271,9917
#define MSR_IDT_FCR3	272,9951
#define MSR_IDT_FCR4	273,9985
#define MSR_IDT_MCR0	275,10020
#define MSR_IDT_MCR1	276,10054
#define MSR_IDT_MCR2	277,10088
#define MSR_IDT_MCR3	278,10122
#define MSR_IDT_MCR4	279,10156
#define MSR_IDT_MCR5	280,10190
#define MSR_IDT_MCR6	281,10224
#define MSR_IDT_MCR7	282,10258
#define MSR_IDT_MCR_CTRL	283,10292
#define MSR_VIA_FCR	286,10358
#define MSR_VIA_LONGHAUL	287,10391
#define MSR_VIA_RNG	288,10428
#define MSR_VIA_BCR2	289,10461
#define MSR_TMTA_LONGRUN_CTRL	292,10525
#define MSR_TMTA_LONGRUN_FLAGS	293,10567
#define MSR_TMTA_LRTI_READOUT	294,10610
#define MSR_TMTA_LRTI_VOLT_MHZ	295,10652
#define MSR_IA32_P5_MC_ADDR	298,10722
#define MSR_IA32_P5_MC_TYPE	299,10762
#define MSR_IA32_TSC	300,10802
#define MSR_IA32_PLATFORM_ID	301,10836
#define MSR_IA32_EBL_CR_POWERON	302,10877
#define MSR_IA32_EBC_FREQUENCY_ID	303,10921
#define MSR_IA32_APICBASE	305,10967
#define MSR_IA32_APICBASE_BSP	306,11005
#define MSR_IA32_APICBASE_EXTD	307,11043
#define MSR_IA32_APICBASE_ENABLE	308,11083
#define MSR_IA32_APICBASE_BASE	309,11124
#define MSR_IA32_APICBASE_MSR 310,11170
#define MSR_IA32_UCODE_WRITE	312,11217
#define MSR_IA32_UCODE_REV	313,11258
#define MSR_IA32_PERF_STATUS	315,11298
#define MSR_IA32_PERF_CTL	316,11339
#define MSR_IA32_MPERF	318,11378
#define MSR_IA32_APERF	319,11414
#define MSR_IA32_THERM_CONTROL	321,11451
#define MSR_IA32_THERM_INTERRUPT	322,11494
#define MSR_IA32_THERM_STATUS	323,11538
#define MSR_IA32_MISC_ENABLE	324,11580
#define MSR_IA32_MISC_ENABLE_PERF_AVAIL 325,11621
#define MSR_IA32_MISC_ENABLE_BTS_UNAVAIL 326,11670
#define MSR_IA32_MISC_ENABLE_PEBS_UNAVAIL 327,11720
#define MSR_IA32_MISC_ENABLE_MONITOR_ENABLE 328,11770
#define MSR_IA32_MISC_ENABLE_LIMIT_CPUID 329,11822
#define MSR_IA32_MISC_ENABLE_XTPR_DISABLE 330,11872
#define MSR_IA32_TSC_DEADLINE	332,11923
#define MSR_P6_EVNTSEL0	335,11986
#define MSR_P6_EVNTSEL1	336,12023
#define MSR_IA32_MCG_EAX	339,12085
#define MSR_IA32_MCG_EBX	340,12122
#define MSR_IA32_MCG_ECX	341,12159
#define MSR_IA32_MCG_EDX	342,12196
#define MSR_IA32_MCG_ESI	343,12233
#define MSR_IA32_MCG_EDI	344,12270
#define MSR_IA32_MCG_EBP	345,12307
#define MSR_IA32_MCG_ESP	346,12344
#define MSR_IA32_MCG_EFLAGS	347,12381
#define MSR_IA32_MCG_EIP	348,12421
#define MSR_IA32_MCG_MISC	349,12458
#define MSR_IA32_MCG_R8	350,12496
#define MSR_IA32_MCG_R9	351,12533
#define MSR_IA32_MCG_R10	352,12570
#define MSR_IA32_MCG_R11	353,12607
#define MSR_IA32_MCG_R12	354,12644
#define MSR_IA32_MCG_R13	355,12681
#define MSR_IA32_MCG_R14	356,12718
#define MSR_IA32_MCG_R15	357,12755
#define MSR_P4_BPU_PERFCTR0	360,12835
#define MSR_P4_BPU_PERFCTR1	361,12875
#define MSR_P4_BPU_PERFCTR2	362,12915
#define MSR_P4_BPU_PERFCTR3	363,12955
#define MSR_P4_MS_PERFCTR0	364,12995
#define MSR_P4_MS_PERFCTR1	365,13034
#define MSR_P4_MS_PERFCTR2	366,13073
#define MSR_P4_MS_PERFCTR3	367,13112
#define MSR_P4_FLAME_PERFCTR0	368,13151
#define MSR_P4_FLAME_PERFCTR1	369,13193
#define MSR_P4_FLAME_PERFCTR2	370,13235
#define MSR_P4_FLAME_PERFCTR3	371,13277
#define MSR_P4_IQ_PERFCTR0	372,13319
#define MSR_P4_IQ_PERFCTR1	373,13358
#define MSR_P4_IQ_PERFCTR2	374,13397
#define MSR_P4_IQ_PERFCTR3	375,13436
#define MSR_P4_IQ_PERFCTR4	376,13475
#define MSR_P4_IQ_PERFCTR5	377,13514
#define MSR_P4_BPU_CCCR0	378,13553
#define MSR_P4_BPU_CCCR1	379,13590
#define MSR_P4_BPU_CCCR2	380,13627
#define MSR_P4_BPU_CCCR3	381,13664
#define MSR_P4_MS_CCCR0	382,13701
#define MSR_P4_MS_CCCR1	383,13738
#define MSR_P4_MS_CCCR2	384,13775
#define MSR_P4_MS_CCCR3	385,13812
#define MSR_P4_FLAME_CCCR0	386,13849
#define MSR_P4_FLAME_CCCR1	387,13888
#define MSR_P4_FLAME_CCCR2	388,13927
#define MSR_P4_FLAME_CCCR3	389,13966
#define MSR_P4_IQ_CCCR0	390,14005
#define MSR_P4_IQ_CCCR1	391,14042
#define MSR_P4_IQ_CCCR2	392,14079
#define MSR_P4_IQ_CCCR3	393,14116
#define MSR_P4_IQ_CCCR4	394,14153
#define MSR_P4_IQ_CCCR5	395,14190
#define MSR_P4_ALF_ESCR0	396,14227
#define MSR_P4_ALF_ESCR1	397,14264
#define MSR_P4_BPU_ESCR0	398,14301
#define MSR_P4_BPU_ESCR1	399,14338
#define MSR_P4_BSU_ESCR0	400,14375
#define MSR_P4_BSU_ESCR1	401,14412
#define MSR_P4_CRU_ESCR0	402,14449
#define MSR_P4_CRU_ESCR1	403,14486
#define MSR_P4_CRU_ESCR2	404,14523
#define MSR_P4_CRU_ESCR3	405,14560
#define MSR_P4_CRU_ESCR4	406,14597
#define MSR_P4_CRU_ESCR5	407,14634
#define MSR_P4_DAC_ESCR0	408,14671
#define MSR_P4_DAC_ESCR1	409,14708
#define MSR_P4_FIRM_ESCR0	410,14745
#define MSR_P4_FIRM_ESCR1	411,14783
#define MSR_P4_FLAME_ESCR0	412,14821
#define MSR_P4_FLAME_ESCR1	413,14860
#define MSR_P4_FSB_ESCR0	414,14899
#define MSR_P4_FSB_ESCR1	415,14936
#define MSR_P4_IQ_ESCR0	416,14973
#define MSR_P4_IQ_ESCR1	417,15010
#define MSR_P4_IS_ESCR0	418,15047
#define MSR_P4_IS_ESCR1	419,15084
#define MSR_P4_ITLB_ESCR0	420,15121
#define MSR_P4_ITLB_ESCR1	421,15159
#define MSR_P4_IX_ESCR0	422,15197
#define MSR_P4_IX_ESCR1	423,15234
#define MSR_P4_MOB_ESCR0	424,15271
#define MSR_P4_MOB_ESCR1	425,15308
#define MSR_P4_MS_ESCR0	426,15345
#define MSR_P4_MS_ESCR1	427,15382
#define MSR_P4_PMH_ESCR0	428,15419
#define MSR_P4_PMH_ESCR1	429,15456
#define MSR_P4_RAT_ESCR0	430,15493
#define MSR_P4_RAT_ESCR1	431,15530
#define MSR_P4_SAAT_ESCR0	432,15567
#define MSR_P4_SAAT_ESCR1	433,15605
#define MSR_P4_SSU_ESCR0	434,15643
#define MSR_P4_SSU_ESCR1	435,15680
#define MSR_P4_TBPU_ESCR0	437,15745
#define MSR_P4_TBPU_ESCR1	438,15783
#define MSR_P4_TC_ESCR0	439,15821
#define MSR_P4_TC_ESCR1	440,15858
#define MSR_P4_U2L_ESCR0	441,15895
#define MSR_P4_U2L_ESCR1	442,15932
#define MSR_P4_LER_FROM_LIP 445,16012
#define MSR_P4_LER_TO_LIP 446,16053
#define MSR_P4_LASTBRANCH_TOS	447,16092
#define MSR_P4_LASTBRANCH_0	448,16134
#define NUM_MSR_P4_LASTBRANCH	449,16174
#define MSR_P4_LASTBRANCH_0_FROM_LIP	450,16207
#define MSR_P4_LASTBRANCH_0_TO_LIP	451,16255
#define NUM_MSR_P4_LASTBRANCH_FROM_TO	452,16301
#define MSR_PM_LASTBRANCH_TOS	455,16392
#define MSR_PM_LASTBRANCH_0	456,16434
#define NUM_MSR_PM_LASTBRANCH	457,16474
#define MSR_C2_LASTBRANCH_TOS	460,16543
#define MSR_C2_LASTBRANCH_0_FROM_IP	461,16585
#define MSR_C2_LASTBRANCH_0_TO_IP	462,16632
#define NUM_MSR_C2_LASTBRANCH_FROM_TO	463,16677
#define MSR_CORE_PERF_FIXED_CTR0	466,16766
#define MSR_CORE_PERF_FIXED_CTR1	467,16810
#define MSR_CORE_PERF_FIXED_CTR2	468,16854
#define MSR_CORE_PERF_FIXED_CTR_CTRL	469,16898
#define MSR_CORE_PERF_GLOBAL_STATUS	470,16946
#define MSR_CORE_PERF_GLOBAL_CTRL	471,16993
#define MSR_CORE_PERF_GLOBAL_OVF_CTRL	472,17038
#define MSR_GEODE_BUSCONT_CONF0	475,17113

xen/include/asm-x86/irq.h,903
#define _ASM_HW_IRQ_H2,22
#define IO_APIC_IRQ(13,248
#define IO_APIC_VECTOR(16,378
#define MSI_IRQ(18,425
#define LEGACY_VECTOR(20,495
#define LEGACY_IRQ_FROM_VECTOR(21,561
#define irq_to_desc(23,628
#define irq_cfg(24,673
struct irq_cfg 26,718
        int  vector;27,735
        cpumask_t cpu_mask;28,756
        cpumask_t old_cpu_mask;29,784
        unsigned move_cleanup_count;30,816
        u8 move_in_progress 31,853
typedef int vector_irq_t[vector_irq_t36,923
static inline struct cpu_user_regs *get_irq_regs(get_irq_regs49,1215
static inline struct cpu_user_regs *set_irq_regs(set_irq_regs54,1310
#define platform_legacy_irq(64,1533
#define domain_pirq_to_irq(147,4272
#define domain_irq_to_pirq(148,4335
#define PIRQ_ALLOCATED 149,4396
#define domain_pirq_to_emuirq(150,4422
#define domain_emuirq_to_pirq(151,4491
#define IRQ_UNBOUND 152,4564
#define IRQ_PT 153,4587

xen/include/asm-x86/perfc_defn.h,198
#define VMX_PERF_EXIT_REASON_SIZE 7,183
#define VMX_PERF_VECTOR_SIZE 8,220
PERFCOUNTER_ARRAY(VMX_PERF_VECTOR_SIZE5,124
#define VMEXIT_NPF_PERFC 12,411
#define SVM_PERF_EXIT_REASON_SIZE 13,440

xen/include/asm-x86/div64.h,70
#define __I386_DIV642,21
#define do_div(8,92
#define do_div(30,735

xen/include/asm-x86/asm_defns.h,218
#define __X86_ASM_DEFNS_H__3,29
# define _ASM__EXTABLE(19,347
# define _ASM__EXTABLE(25,575
#define _ASM_EXTABLE(32,810
#define _ASM_PRE_EXTABLE(33,871
#define UNLIKELY_START(37,958
#define UNLIKELY_END(42,1091

xen/include/asm-x86/hardirq.h,291
#define __ASM_HARDIRQ_H2,24
	unsigned long __softirq_pending;8,114
	unsigned int __local_irq_count;9,148
	unsigned int __nmi_count;10,181
	bool_t __mwait_wakeup;11,208
} __cacheline_aligned irq_cpustat_t;12,232
#define in_irq(16,348
#define irq_enter(18,409
#define irq_exit(19,469

xen/include/asm-x86/x86_emulate.h,41
#define __ASM_X86_X86_EMULATE_H__13,308

xen/include/asm-x86/mach-summit/mach_mpparse.h,1265
#define __ASM_MACH_MPPARSE_H2,29
#define setup_summit(9,152
static inline int mps_oem_check(13,216
static inline int acpi_madt_oem_check(29,634
struct rio_table_hdr 42,952
	unsigned char version;43,975
	unsigned char num_scal_dev;45,1141
	unsigned char num_rio_dev;46,1224
struct scal_detail 49,1335
	unsigned char node_id;50,1356
	unsigned long CBAR;51,1439
	unsigned char port0node;52,1522
	unsigned char port0port;53,1605
	unsigned char port1node;54,1688
	unsigned char port1port;55,1771
	unsigned char port2node;56,1854
	unsigned char port2port;57,1937
	unsigned char chassis_num;58,2020
struct rio_detail 61,2131
	unsigned char node_id;62,2151
	unsigned long BBAR;63,2234
	unsigned char type;64,2317
	unsigned char owner_id;65,2400
	unsigned char port0node;67,2566
	unsigned char port0port;68,2649
	unsigned char port1node;69,2732
	unsigned char port1port;70,2815
	unsigned char first_slot;71,2898
	unsigned char status;73,3064
	unsigned char WP_index;78,3479
	unsigned char chassis_num;81,3728
	CompatTwister 93,4436
	AltTwister 94,4499
	CompatCyclone 95,4562
	AltCyclone 96,4625
	CompatWPEG 97,4688
	AltWPEG 98,4751
	LookOutAWPEG 99,4814
	LookOutBWPEG 100,4877
} node_type;101,4940
static inline int is_WPEG(103,4954

xen/include/asm-x86/compat.h,112
#define COMPAT_BITS_PER_LONG 5,97
typedef uint32_t compat_ptr_t;7,130
typedef unsigned long full_ptr_t;8,161

xen/include/asm-x86/debugger.h,322
#define __X86_DEBUGGER_H__30,1283
#define DEBUGGER_trap_entry(37,1463
#define DEBUGGER_trap_fatal(39,1548
static inline int debugger_trap_fatal(46,1686
#define debugger_trap_immediate(54,1935
#define debugger_trap_fatal(58,2010
#define debugger_trap_immediate(59,2048
static inline int debugger_trap_entry(63,2101

xen/include/asm-x86/msi.h,3981
#define __ASM_MSI_H2,20
#define MSI_DATA_VECTOR_SHIFT	13,153
#define  MSI_DATA_VECTOR_MASK	14,186
#define	 MSI_DATA_VECTOR(15,228
#define MSI_DATA_DELIVERY_MODE_SHIFT	17,314
#define  MSI_DATA_DELIVERY_FIXED	18,353
#define  MSI_DATA_DELIVERY_LOWPRI	19,422
#define MSI_DATA_LEVEL_SHIFT	21,493
#define	 MSI_DATA_LEVEL_DEASSERT	22,526
#define	 MSI_DATA_LEVEL_ASSERT	23,587
#define MSI_DATA_TRIGGER_SHIFT	25,648
#define  MSI_DATA_TRIGGER_EDGE	26,683
#define  MSI_DATA_TRIGGER_LEVEL	27,745
#define MSI_ADDR_BASE_HI	33,854
#define MSI_ADDR_BASE_LO	34,886
#define MSI_ADDR_HEADER 35,927
#define MSI_ADDR_DESTMODE_SHIFT 37,981
#define MSI_ADDR_DESTMODE_PHYS 38,1019
#define MSI_ADDR_DESTMODE_LOGIC 39,1086
#define MSI_ADDR_REDIRECTION_SHIFT 41,1154
#define MSI_ADDR_REDIRECTION_CPU 42,1192
#define MSI_ADDR_REDIRECTION_LOWPRI 43,1262
#define MSI_ADDR_DEST_ID_SHIFT	45,1333
#define	 MSI_ADDR_DEST_ID_MASK	46,1368
#define  MSI_ADDR_DEST_ID(47,1410
#define FIX_MSIX_MAX_PAGES 51,1585
#define FIX_MSIX_MAX_PAGES 53,1635
struct msi_info 56,1686
    int bus;57,1704
    int devfn;58,1717
    int irq;59,1732
    int entry_nr;60,1745
    uint64_t table_base;61,1763
struct msi_msg 64,1792
	u32	address_lo;65,1809
	u32	address_hi;66,1867
	u32	data;67,1926
	u32	dest32;68,1972
struct msi_desc 86,2713
		__u8	type	88,2741
		__u8	maskbit	89,2796
		__u8	masked	90,2854
		__u8	is_64	91,2873
		__u8	pos;92,2928
		__u16	entry_nr;93,2979
	}msi_attrib;msi_attrib94,3033
	struct list_head list;96,3048
	void __iomem *mask_base;mask_base98,3073
	struct pci_dev *dev;dev99,3143
	int irq;100,3165
	struct msi_msg msg;102,3176
	int remap_index;104,3226
#define NR_HP_RESERVED_VECTORS 118,3807
#define PCI_MSIX_ENTRY_SIZE	122,3896
#define  PCI_MSIX_ENTRY_LOWER_ADDR_OFFSET	123,3929
#define  PCI_MSIX_ENTRY_UPPER_ADDR_OFFSET	124,3973
#define  PCI_MSIX_ENTRY_DATA_OFFSET	125,4017
#define  PCI_MSIX_ENTRY_VECTOR_CTRL_OFFSET	126,4056
#define msi_control_reg(128,4103
#define msi_lower_address_reg(129,4157
#define msi_upper_address_reg(130,4221
#define msi_data_reg(131,4285
#define msi_mask_bits_reg(133,4389
#define msi_disable(135,4501
#define multi_msi_capable(136,4564
#define multi_msi_enable(138,4648
#define is_64bit_address(140,4744
#define is_mask_bit_support(141,4814
#define msi_enable(142,4889
#define msix_control_reg(145,4990
#define msix_table_offset_reg(146,5046
#define msix_pba_offset_reg(147,5106
#define msix_enable(148,5162
#define msix_disable(149,5226
#define msix_table_size(150,5292
#define multi_msix_capable	151,5363
#define msix_unmask(152,5407
#define msix_mask(153,5475
#define MSI_ADDRESS_HEADER	158,5578
#define MSI_ADDRESS_HEADER_SHIFT	159,5612
#define MSI_ADDRESS_HEADER_MASK	160,5648
#define MSI_ADDRESS_DEST_ID_MASK	161,5690
#define MSI_TARGET_CPU_MASK	162,5734
#define MSI_TARGET_CPU_SHIFT	163,5768
#define MSI_DELIVERY_MODE	164,5801
#define MSI_LEVEL_MODE	165,5830
#define MSI_TRIGGER_MODE	166,5882
#define MSI_PHYSICAL_MODE	167,5938
#define MSI_LOGICAL_MODE	168,5967
#define MSI_REDIRECTION_HINT_MODE	169,5995
#define __LITTLE_ENDIAN_BITFIELD	171,6032
struct msg_data 173,6068
	__u32	vector	175,6124
	__u32	delivery_mode	176,6145
	__u32	reserved_1	177,6211
	__u32	level	178,6235
	__u32	trigger	179,6285
	__u32	reserved_2	180,6332
	__u32	reserved_2	182,6393
	__u32	trigger	183,6417
	__u32	level	184,6464
	__u32	reserved_1	185,6514
	__u32	delivery_mode	186,6538
	__u32	vector	187,6604
struct msg_address 193,6732
			__u32	reserved_1	197,6811
			__u32	dest_mode	198,6837
			__u32	redirection_hint:redirection_hint199,6886
			__u32	reserved_2	201,6969
 			__u32	dest_id	202,6995
 			__u32	dest_id	204,7078
			__u32	reserved_2	205,7124
			__u32	redirection_hint:redirection_hint206,7150
			__u32	dest_mode	208,7233
			__u32	reserved_1	209,7282
      		}u;u213,7386
       		__u32  value;214,7398
	}lo_address;lo_address215,7421
	__u32 	hi_address;216,7435

xen/include/asm-x86/mpspec.h,761
#define __ASM_MPSPEC_H2,23
#define PHYSID_ARRAY_SIZE	35,1192
struct physid_mask37,1244
	unsigned long mask[mask39,1265
typedef struct physid_mask physid_mask_t;42,1309
#define physid_set(44,1352
#define physid_clear(45,1414
#define physid_isset(46,1479
#define physid_test_and_set(47,1543
#define physids_and(49,1622
#define physids_or(50,1720
#define physids_clear(51,1816
#define physids_complement(52,1880
#define physids_empty(53,1970
#define physids_equal(54,2035
#define physids_weight(55,2120
#define physids_shift_right(56,2187
#define physids_shift_left(57,2278
#define physids_coerce(58,2367
#define physids_promote(60,2414
#define physid_mask_of_physid(67,2592
#define PHYSID_MASK_ALL	74,2777
#define PHYSID_MASK_NONE	75,2843

xen/include/asm-x86/mce.h,467
#define _XEN_X86_MCE_H4,83
struct bank_entry 8,209
    struct list_head list;9,229
    uint16_t bank;10,256
    uint64_t mci_status;11,275
    uint64_t mci_addr;12,300
    uint64_t mci_misc;13,323
struct domain_mca_msrs16,350
    uint64_t mcg_cap;19,440
    uint64_t mcg_ctl;20,462
    uint64_t mcg_status;21,484
    uint64_t *mci_ctl;mci_ctl22,509
    uint16_t nr_injection;23,532
    struct list_head impact_header;24,559
    spinlock_t lock;25,595

xen/include/asm-x86/bitops.h,1569
#define _X86_BITOPS_H2,22
#define ADDR 19,582
#define CONST_ADDR 20,621
#define bitop_bad_size(23,709
static inline void set_bit(35,1124
#define set_bit(42,1297
static inline void __set_bit(56,1778
#define __set_bit(63,1947
static inline void clear_bit(75,2287
#define clear_bit(82,2462
static inline void __clear_bit(96,2944
#define __clear_bit(103,3115
static inline void __change_bit(117,3605
#define __change_bit(124,3777
static inline void change_bit(138,4241
#define change_bit(145,4417
static inline int test_and_set_bit(158,4806
#define test_and_set_bit(168,5052
static inline int __test_and_set_bit(182,5547
#define __test_and_set_bit(192,5789
static inline int test_and_clear_bit(205,6182
#define test_and_clear_bit(215,6430
static inline int __test_and_clear_bit(229,6929
#define __test_and_clear_bit(239,7173
static inline int __test_and_change_bit(245,7402
#define __test_and_change_bit(255,7647
static inline int test_and_change_bit(268,8042
#define test_and_change_bit(278,8291
static inline int constant_test_bit(283,8469
static inline int variable_test_bit(289,8645
#define test_bit(300,8886
static inline unsigned int __scanbit(316,9587
#define find_first_bit(330,10024
#define find_next_bit(341,10453
#define find_first_zero_bit(354,10972
#define find_next_zero_bit(365,11412
static inline unsigned int find_first_set_bit(377,11863
static inline int ffs(389,12161
static inline int fls(406,12456
#define hweight64(423,12813
#define hweight32(424,12855
#define hweight16(425,12897
#define hweight8(426,12939

xen/include/asm-x86/softirq.h,201
#define __ASM_SOFTIRQ_H__2,26
#define NMI_MCE_SOFTIRQ 4,53
#define TIME_CALIBRATE_SOFTIRQ 5,109
#define VCPU_KICK_SOFTIRQ 6,165
#define MACHINE_CHECK_SOFTIRQ 8,222
#define NR_ARCH_SOFTIRQS 9,278

xen/include/asm-x86/event.h,300
#define __ASM_EVENT_H__10,226
static inline int local_events_need_delivery(18,408
static inline int local_event_delivery_is_enabled(26,661
static inline void local_event_delivery_disable(31,774
static inline void local_event_delivery_enable(36,881
static inline int arch_virq_is_global(42,1050

xen/include/asm-x86/apic.h,1383
#define __ASM_APIC_H2,21
#define Dprintk(9,138
#define APIC_QUIET 14,188
#define APIC_VERBOSE 15,211
#define APIC_DEBUG 16,234
#define	SET_APIC_LOGICAL_ID(18,258
#define IO_APIC_REDIR_VECTOR_MASK	20,302
#define IO_APIC_REDIR_DEST_LOGICAL	21,344
#define IO_APIC_REDIR_DEST_PHYSICAL	22,387
#define apic_printk(38,846
static __inline void apic_mem_write(50,1035
static __inline void apic_mem_write_atomic(55,1143
static __inline u32 apic_mem_read(60,1266
static __inline void apic_wrmsr(69,1483
static __inline uint64_t apic_rdmsr(78,1720
static __inline void apic_write(89,1930
static __inline void apic_write_atomic(98,2089
static __inline u32 apic_read(106,2261
static __inline u64 apic_icr_read(114,2417
static __inline void apic_icr_write(129,2687
static __inline u32 get_apic_id(140,2940
static __inline u32 get_logical_apic_id(146,3098
# define FORCE_READ_AROUND_WRITE 157,3361
# define apic_read_around(158,3396
# define apic_write_around(159,3425
# define FORCE_READ_AROUND_WRITE 161,3483
# define apic_read_around(162,3518
# define apic_write_around(163,3560
static inline void ack_APIC_irq(166,3627
#define NMI_NONE	213,5188
#define NMI_IO_APIC	214,5207
#define NMI_LOCAL_APIC	215,5229
#define NMI_INVALID	216,5254
static inline void lapic_shutdown(219,5312
static inline int lapic_suspend(220,5356
static inline int lapic_resume(221,5406

xen/include/asm-x86/cpufeature.h,5585
#define __ASM_I386_CPUFEATURE_H8,91
#define NCAPINTS	12,149
#define X86_FEATURE_FPU	15,275
#define X86_FEATURE_VME	16,328
#define X86_FEATURE_DE	17,393
#define X86_FEATURE_PSE 18,454
#define X86_FEATURE_TSC	19,516
#define X86_FEATURE_MSR	20,576
#define X86_FEATURE_PAE	21,656
#define X86_FEATURE_MCE	22,725
#define X86_FEATURE_CX8	23,793
#define X86_FEATURE_APIC	24,855
#define X86_FEATURE_SEP	25,909
#define X86_FEATURE_MTRR	26,967
#define X86_FEATURE_PGE	27,1036
#define X86_FEATURE_MCA	28,1096
#define X86_FEATURE_CMOV	29,1164
#define X86_FEATURE_PAT	30,1261
#define X86_FEATURE_PSE36	31,1323
#define X86_FEATURE_PN	32,1377
#define X86_FEATURE_CLFLSH	33,1441
#define X86_FEATURE_DS	34,1517
#define X86_FEATURE_ACPI	35,1569
#define X86_FEATURE_MMX	36,1623
#define X86_FEATURE_FXSR	37,1686
#define X86_FEATURE_XMM	39,1844
#define X86_FEATURE_XMM2	40,1911
#define X86_FEATURE_SELFSNOOP	41,1980
#define X86_FEATURE_HT	42,2041
#define X86_FEATURE_ACC	43,2097
#define X86_FEATURE_IA64	44,2162
#define X86_FEATURE_PBE	45,2219
#define X86_FEATURE_SYSCALL	49,2413
#define X86_FEATURE_MP	50,2472
#define X86_FEATURE_NX	51,2524
#define X86_FEATURE_MMXEXT	52,2580
#define X86_FEATURE_FFXSR 53,2642
#define X86_FEATURE_PAGE1GB	54,2722
#define X86_FEATURE_RDTSCP	55,2789
#define X86_FEATURE_LM	56,2839
#define X86_FEATURE_3DNOWEXT	57,2898
#define X86_FEATURE_3DNOW	58,2965
#define X86_FEATURE_RECOVERY	61,3084
#define X86_FEATURE_LONGRUN	62,3150
#define X86_FEATURE_LRTI	63,3216
#define X86_FEATURE_CXMMX	67,3410
#define X86_FEATURE_K6_MTRR	68,3473
#define X86_FEATURE_CYRIX_ARR	69,3542
#define X86_FEATURE_CENTAUR_MCR	70,3609
#define X86_FEATURE_K8	72,3718
#define X86_FEATURE_K7	73,3776
#define X86_FEATURE_P3	74,3823
#define X86_FEATURE_P4	75,3866
#define X86_FEATURE_CONSTANT_TSC 76,3909
#define X86_FEATURE_NONSTOP_TSC	77,3987
#define X86_FEATURE_ARAT	78,4065
#define X86_FEATURE_ARCH_PERFMON 79,4133
#define X86_FEATURE_TSC_RELIABLE 80,4210
#define X86_FEATURE_XTOPOLOGY 81,4287
#define X86_FEATURE_XMM3	84,4437
#define X86_FEATURE_DTES64	85,4506
#define X86_FEATURE_MWAIT	86,4568
#define X86_FEATURE_DSCPL	87,4632
#define X86_FEATURE_VMXE	88,4700
#define X86_FEATURE_SMXE	89,4768
#define X86_FEATURE_EST	90,4831
#define X86_FEATURE_TM2	91,4891
#define X86_FEATURE_SSSE3	92,4950
#define X86_FEATURE_CID	93,5033
#define X86_FEATURE_CX16 94,5085
#define X86_FEATURE_XTPR	95,5144
#define X86_FEATURE_PDCM	96,5213
#define X86_FEATURE_DCA	97,5280
#define X86_FEATURE_SSE4_1	98,5341
#define X86_FEATURE_SSE4_2	99,5414
#define X86_FEATURE_X2APIC	100,5487
#define X86_FEATURE_POPCNT	101,5545
#define X86_FEATURE_TSC_DEADLINE 102,5607
#define X86_FEATURE_XSAVE	103,5681
#define X86_FEATURE_OSXSAVE	104,5750
#define X86_FEATURE_AVX 105,5802
#define X86_FEATURE_HYPERVISOR	106,5870
#define X86_FEATURE_XSTORE	109,6025
#define X86_FEATURE_XSTORE_EN	110,6101
#define X86_FEATURE_XCRYPT	111,6166
#define X86_FEATURE_XCRYPT_EN	112,6237
#define X86_FEATURE_ACE2	113,6305
#define X86_FEATURE_ACE2_EN	114,6378
#define X86_FEATURE_PHE	115,6437
#define X86_FEATURE_PHE_EN	116,6499
#define X86_FEATURE_PMM	117,6555
#define X86_FEATURE_PMM_EN	118,6627
#define X86_FEATURE_LAHF_LM	121,6751
#define X86_FEATURE_CMP_LEGACY	122,6818
#define X86_FEATURE_SVME 123,6897
#define X86_FEATURE_EXTAPICSPACE 124,6968
#define X86_FEATURE_ALTMOVCR	125,7037
#define X86_FEATURE_ABM	126,7108
#define X86_FEATURE_SSE4A	127,7175
#define X86_FEATURE_MISALIGNSSE	128,7250
#define X86_FEATURE_3DNOWPF	129,7320
#define X86_FEATURE_OSVW	130,7380
#define X86_FEATURE_IBS	131,7443
#define X86_FEATURE_SSE5	132,7512
#define X86_FEATURE_SKINIT	133,7586
#define X86_FEATURE_WDT	134,7653
#define X86_FEATURE_FSGSBASE	137,7784
#define cpu_has(139,7862
#define boot_cpu_has(140,7922
#define cpu_has_vme	143,8009
#define cpu_has_de	144,8060
#define cpu_has_pse	145,8109
#define cpu_has_tsc	146,8160
#define cpu_has_pge	147,8211
#define cpu_has_pat	148,8262
#define cpu_has_apic	149,8313
#define cpu_has_sep	150,8366
#define cpu_has_mtrr	151,8417
#define cpu_has_mmx	152,8470
#define cpu_has_fxsr	153,8521
#define cpu_has_xmm	154,8574
#define cpu_has_xmm2	155,8625
#define cpu_has_xmm3	156,8678
#define cpu_has_ht	157,8731
#define cpu_has_syscall	158,8780
#define cpu_has_mp	159,8839
#define cpu_has_nx	160,8888
#define cpu_has_k6_mtrr	161,8937
#define cpu_has_cyrix_arr	162,8996
#define cpu_has_centaur_mcr	163,9058
#define cpu_has_clflush	164,9124
#define cpu_has_page1gb	165,9182
#define cpu_has_efer	166,9209
#define cpu_has_fsgsbase	167,9278
#define cpu_has_vme	169,9328
#define cpu_has_de	170,9351
#define cpu_has_pse	171,9373
#define cpu_has_tsc	172,9396
#define cpu_has_pge	173,9419
#define cpu_has_pat	174,9442
#define cpu_has_apic	175,9465
#define cpu_has_sep	176,9518
#define cpu_has_mtrr	177,9569
#define cpu_has_mmx	178,9593
#define cpu_has_fxsr	179,9616
#define cpu_has_xmm	180,9640
#define cpu_has_xmm2	181,9663
#define cpu_has_xmm3	182,9687
#define cpu_has_ht	183,9740
#define cpu_has_syscall	184,9789
#define cpu_has_mp	185,9816
#define cpu_has_nx	186,9838
#define cpu_has_k6_mtrr	187,9887
#define cpu_has_cyrix_arr	188,9914
#define cpu_has_centaur_mcr	189,9942
#define cpu_has_clflush	190,9972
#define cpu_has_page1gb	191,10030
#define cpu_has_efer	192,10089
#define cpu_has_fsgsbase	193,10113
#define cpu_has_ffxsr 196,10181
#define cpu_has_x2apic 199,10331
#define cpu_has_xsave 201,10397
#define cpu_has_arch_perfmon 203,10462
#define cpu_has_rdtscp 205,10534

xen/include/asm-x86/uaccess.h,596
#define __X86_UACCESS_H__3,27
#define get_user(44,1345
#define put_user(63,1976
#define __get_user(86,2797
#define __put_user(108,3540
#define __put_user_nocheck(111,3636
#define __put_user_check(118,3792
#define __get_user_nocheck(127,4059
#define __get_user_check(134,4372
struct __large_struct 143,4810
struct __large_struct { unsigned long buf[buf143,4810
#define __m(144,4861
#define __put_user_asm(151,5076
#define __get_user_asm(163,5435
__copy_to_user(191,6367
__copy_from_user(232,7709
struct exception_table_entry268,8878
	s32 addr,270,8909
	s32 addr, cont;270,8909

xen/include/asm-x86/time.h,245
#define __X86_TIME_H__3,24
#define TSC_MODE_DEFAULT 20,771
#define TSC_MODE_ALWAYS_EMULATE 21,807
#define TSC_MODE_NEVER_EMULATE 22,843
#define TSC_MODE_PVRDTSCP 23,879
typedef u64 cycles_t;25,916
static inline cycles_t get_cycles(27,939

xen/include/asm-x86/io.h,532
#define _ASM_IO_H2,18
#define ioremap(9,154
#define iounmap(10,185
#define readb(12,217
#define readw(13,258
#define readl(14,300
#define writeb(15,340
#define writew(16,390
#define writel(17,441
#define __OUT1(19,491
#define __OUT2(22,581
#define __OUT(25,660
#define __IN1(29,815
#define __IN2(32,906
#define __IN(35,983
#define RETURN_TYPE 39,1161
#undef RETURN_TYPE41,1206
#define RETURN_TYPE 42,1225
__IN(RETURN_TYPE40,1195
#undef RETURN_TYPE44,1271
#define RETURN_TYPE 45,1290
#undef RETURN_TYPE47,1334

xen/include/asm-x86/tboot.h,1803
#define __TBOOT_H__38,1751
#define __packed 43,1812
typedef struct __packed 46,1864
  uint32_t    data1;47,1890
  uint16_t    data2;48,1911
  uint16_t    data3;49,1932
  uint16_t    data4;50,1953
  uint8_t     data5[data551,1974
} uuid_t;52,1998
#define TB_KEY_SIZE 56,2085
#define MAX_TB_MAC_REGIONS 58,2138
typedef struct __packed 59,2173
    uint64_t  start;60,2199
    uint32_t  size;61,2259
} tboot_mac_region_t;62,2320
typedef struct __packed 65,2393
	uint8_t  space_id;66,2419
	uint8_t  bit_width;67,2439
	uint8_t  bit_offset;68,2460
	uint8_t  access_width;69,2482
	uint64_t address;70,2506
} tboot_acpi_generic_address_t;71,2525
typedef struct __packed 73,2558
    tboot_acpi_generic_address_t pm1a_cnt_blk;74,2584
    tboot_acpi_generic_address_t pm1b_cnt_blk;75,2631
    tboot_acpi_generic_address_t pm1a_evt_blk;76,2678
    tboot_acpi_generic_address_t pm1b_evt_blk;77,2725
    uint16_t pm1a_cnt_val;78,2772
    uint16_t pm1b_cnt_val;79,2799
    uint64_t wakeup_vector;80,2826
    uint32_t vector_width;81,2854
    uint64_t kernel_s3_resume_vector;82,2881
} tboot_acpi_sleep_info_t;83,2919
typedef struct __packed 85,2947
    uuid_t    uuid;87,3002
    uint32_t  version;88,3080
    uint32_t  log_addr;89,3158
    uint32_t  shutdown_entry;90,3227
    uint32_t  shutdown_type;91,3297
              acpi_sinfo;93,3397
    uint32_t  tboot_base;94,3475
    uint32_t  tboot_size;95,3538
    uint8_t   num_mac_regions;96,3591
    tboot_mac_region_t mac_regions[mac_regions98,3736
    uint8_t   s3_key[s3_key101,3898
} tboot_shared_t;102,3933
#define TB_SHUTDOWN_REBOOT 104,3952
#define TB_SHUTDOWN_S5 105,3986
#define TB_SHUTDOWN_S4 106,4020
#define TB_SHUTDOWN_S3 107,4054
#define TB_SHUTDOWN_HALT 108,4088
#define TBOOT_SHARED_UUID 111,4168

xen/include/asm-x86/amd.h,1844
#define __AMD_H__6,72
#define X86_FEATURE_BITPOS(12,176
#define __bit(13,233
#define AMD_FEATURES_K8_REV_C_ECX 16,314
#define AMD_FEATURES_K8_REV_C_EDX 17,351
#define AMD_EXTFEATURES_K8_REV_C_ECX 29,1051
#define AMD_EXTFEATURES_K8_REV_C_EDX 30,1092
#define AMD_FEATURES_K8_REV_D_ECX 45,1885
#define AMD_FEATURES_K8_REV_D_EDX 46,1953
#define AMD_EXTFEATURES_K8_REV_D_ECX 47,2021
#define AMD_EXTFEATURES_K8_REV_D_EDX 49,2124
#define AMD_FEATURES_K8_REV_E_ECX 53,2255
#define AMD_FEATURES_K8_REV_E_EDX 55,2353
#define AMD_EXTFEATURES_K8_REV_E_ECX 57,2450
#define AMD_EXTFEATURES_K8_REV_E_EDX 59,2557
#define AMD_FEATURES_K8_REV_F_ECX 62,2658
#define AMD_FEATURES_K8_REV_F_EDX 64,2757
#define AMD_EXTFEATURES_K8_REV_F_ECX 65,2825
#define AMD_EXTFEATURES_K8_REV_F_EDX 68,2992
#define AMD_FEATURES_K8_REV_G_ECX 72,3124
#define AMD_FEATURES_K8_REV_G_EDX 73,3192
#define AMD_EXTFEATURES_K8_REV_G_ECX 74,3260
#define AMD_EXTFEATURES_K8_REV_G_EDX 76,3363
#define AMD_FEATURES_FAM10h_REV_B_ECX 79,3464
#define AMD_FEATURES_FAM10h_REV_B_EDX 81,3592
#define AMD_EXTFEATURES_FAM10h_REV_B_ECX 82,3660
#define AMD_EXTFEATURES_FAM10h_REV_B_EDX 86,3879
#define AMD_FEATURES_FAM10h_REV_C_ECX 90,4012
#define AMD_FEATURES_FAM10h_REV_C_EDX 91,4084
#define AMD_EXTFEATURES_FAM10h_REV_C_ECX 92,4156
#define AMD_EXTFEATURES_FAM10h_REV_C_EDX 94,4287
#define AMD_FEATURES_FAM11h_REV_B_ECX 97,4392
#define AMD_FEATURES_FAM11h_REV_B_EDX 98,4460
#define AMD_EXTFEATURES_FAM11h_REV_B_ECX 99,4528
#define AMD_EXTFEATURES_FAM11h_REV_B_EDX 101,4630
#define AMD_LEGACY_ERRATUM(122,5572
#define AMD_OSVW_ERRATUM(123,5643
#define AMD_MODEL_RANGE(124,5721
#define AMD_MODEL_RANGE_FAMILY(126,5872
#define AMD_MODEL_RANGE_START(127,5937
#define AMD_MODEL_RANGE_END(128,6003
#define AMD_ERRATUM_170 130,6062
#define AMD_ERRATUM_383 133,6204

xen/include/asm-x86/guest_access.h,828
#define __ASM_X86_GUEST_ACCESS_H__8,176
#define raw_copy_to_guest(16,371
#define raw_copy_from_guest(20,561
#define __raw_copy_to_guest(24,753
#define __raw_copy_from_guest(28,945
#define guest_handle_is_null(34,1184
#define guest_handle_add_offset(37,1309
#define guest_handle_subtract_offset(38,1368
#define guest_handle_cast(41,1492
#define guest_handle_from_ptr(46,1646
#define const_guest_handle_from_ptr(48,1743
#define copy_to_guest_offset(55,1973
#define copy_from_guest_offset(66,2387
#define copy_field_to_guest(73,2696
#define copy_field_from_guest(81,3065
#define guest_handle_okay(91,3384
#define guest_handle_subrange_okay(94,3555
#define __copy_to_guest_offset(100,3828
#define __copy_from_guest_offset(107,4122
#define __copy_field_to_guest(113,4360
#define __copy_field_from_guest(120,4654

xen/include/asm-x86/init.h,29
#define _XEN_ASM_INIT_H2,24

xen/include/asm-x86/xenoprof.h,496
#define __ASM_X86_XENOPROF_H__24,1014
#define xenoprof_arch_reserve_counters(35,1295
#define xenoprof_arch_setup_events(36,1366
#define xenoprof_arch_enable_virq(37,1433
#define xenoprof_arch_start(38,1499
#define xenoprof_arch_stop(39,1559
#define xenoprof_arch_disable_virq(40,1618
#define xenoprof_arch_release_counters(41,1685
static inline void ibs_init(55,2058
#define ibs_caps 56,2095
static inline int xenoprof_backtrace_supported(61,2200
#define xenoprof_shared_gmfn(70,2410

xen/include/asm-x86/elf.h,195
#define __X86_ELF_H__2,22
    unsigned long cr0,5,62
    unsigned long cr0, cr2,5,62
    unsigned long cr0, cr2, cr3,5,62
    unsigned long cr0, cr2, cr3, cr4;5,62
} crash_xen_core_t;6,100

xen/include/asm-x86/flushtlb.h,663
#define __FLUSHTLB_H__11,281
#define tlbflush_current_time(24,575
static inline int NEED_FLUSH(31,860
#define tlbflush_filter(52,1692
static inline unsigned long read_cr3(63,2217
#define FLUSH_ORDER_MASK 79,2666
#define FLUSH_ORDER(80,2696
#define FLUSH_TLB 82,2766
#define FLUSH_TLB_GLOBAL 84,2860
#define FLUSH_CACHE 86,2916
#define flush_local(90,3038
#define flush_mask(94,3213
#define flush_area_all(97,3315
#define flush_all(98,3393
#define flush_tlb_local(101,3477
#define flush_tlb_one_local(103,3554
#define flush_tlb_mask(107,3704
#define flush_tlb_one_mask(109,3786
#define flush_tlb_all(113,3935
#define flush_tlb_one_all(115,4021

xen/include/asm-x86/perfc.h,114
#define __ASM_PERFC_H__2,24
static inline void arch_perfc_reset(4,49
static inline void arch_perfc_gather(8,96

xen/include/asm-x86/microcode.h,2318
#define ASM_X86__MICROCODE_H2,29
struct microcode_ops 9,130
    int (*microcode_resume_match)microcode_resume_match10,153
    int (*cpu_request_microcode)cpu_request_microcode11,225
    int (*collect_cpu_info)collect_cpu_info12,298
    int (*apply_microcode)apply_microcode13,364
struct microcode_header_intel 16,405
    unsigned int hdrver;17,437
    unsigned int rev;18,462
    unsigned int date;19,484
    unsigned int sig;20,507
    unsigned int cksum;21,529
    unsigned int ldrver;22,553
    unsigned int pf;23,578
    unsigned int datasize;24,599
    unsigned int totalsize;25,626
    unsigned int reserved[reserved26,654
struct microcode_intel 29,688
    struct microcode_header_intel hdr;30,713
    unsigned int bits[bits31,752
struct extended_signature 35,842
    unsigned int sig;36,870
    unsigned int pf;37,892
    unsigned int cksum;38,913
struct extended_sigtable 41,941
    unsigned int count;42,968
    unsigned int cksum;43,992
    unsigned int reserved[reserved44,1016
    struct extended_signature sigs[sigs45,1046
struct equiv_cpu_entry 48,1089
    uint32_t installed_cpu;49,1114
    uint32_t fixed_errata_mask;50,1142
    uint32_t fixed_errata_compare;51,1174
    uint16_t equiv_cpu;52,1209
    uint16_t reserved;53,1233
struct microcode_header_amd 56,1284
    uint32_t data_code;57,1314
    uint32_t patch_id;58,1338
    uint8_t  mc_patch_data_id[mc_patch_data_id59,1361
    uint8_t  mc_patch_data_len;60,1395
    uint8_t  init_flag;61,1427
    uint32_t mc_patch_data_checksum;62,1451
    uint32_t nb_dev_id;63,1488
    uint32_t sb_dev_id;64,1512
    uint16_t processor_rev_id;65,1536
    uint8_t  nb_rev_id;66,1567
    uint8_t  sb_rev_id;67,1591
    uint8_t  bios_api_rev;68,1615
    uint8_t  reserved1[reserved169,1642
    uint32_t match_reg[match_reg70,1669
struct microcode_amd 73,1724
    struct microcode_header_amd hdr;74,1747
    unsigned int mpb[mpb75,1784
struct cpu_signature 78,1813
    unsigned int sig;79,1836
    unsigned int pf;80,1858
    unsigned int rev;81,1879
struct ucode_cpu_info 84,1905
    struct cpu_signature cpu_sig;85,1929
        struct microcode_intel *mc_intel;mc_intel87,1975
        struct microcode_amd *mc_amd;mc_amd88,2017
        void *mc_valid;mc_valid89,2055
    } mc;90,2079

xen/include/asm-x86/mpspec_def.h,4125
#define __ASM_MPSPEC_DEF_H2,27
#define SMP_MAGIC_IDENT	14,251
#define MAX_MPC_ENTRY 16,311
#define MAX_APICS 17,338
struct intel_mp_floating19,383
	char mpf_signature[mpf_signature21,410
	unsigned int  mpf_physptr;22,451
	unsigned char mpf_length;23,513
	unsigned char mpf_specification;24,570
	unsigned char mpf_checksum;25,631
	unsigned char mpf_feature1;26,689
	unsigned char mpf_feature2;27,753
	unsigned char mpf_feature3;28,810
	unsigned char mpf_feature4;29,858
	unsigned char mpf_feature5;30,906
struct mp_config_table33,958
	char mpc_signature[mpc_signature35,983
#define MPC_SIGNATURE 36,1007
	unsigned short mpc_length;37,1036
	char  mpc_spec;38,1084
	char  mpc_checksum;39,1114
	char  mpc_oem[mpc_oem40,1135
	char  mpc_productid[mpc_productid41,1154
	unsigned int  mpc_oemptr;42,1180
	unsigned short mpc_oemsize;43,1230
	unsigned short mpc_oemcount;44,1282
	unsigned int  mpc_lapic;45,1312
	unsigned int  reserved;46,1357
#define	MP_PROCESSOR	51,1413
#define	MP_BUS	52,1436
#define	MP_IOAPIC	53,1454
#define	MP_INTSRC	54,1474
#define	MP_LINTSRC	55,1494
#define	MP_TRANSLATION 56,1515
struct mpc_config_processor58,1596
	unsigned char mpc_type;60,1626
	unsigned char mpc_apicid;61,1651
	unsigned char mpc_apicver;62,1702
	unsigned char mpc_cpuflag;63,1749
#define CPU_ENABLED	64,1777
#define CPU_BOOTPROCESSOR	65,1829
	unsigned int  mpc_cpufeature;66,1883
#define CPU_STEPPING_MASK 67,1916
#define CPU_MODEL_MASK	68,1947
#define CPU_FAMILY_MASK	69,1975
	unsigned int  mpc_featureflag;70,2005
	unsigned int  mpc_reserved[mpc_reserved71,2063
struct mpc_config_bus74,2099
	unsigned char mpc_type;76,2123
	unsigned char mpc_busid;77,2148
	unsigned char mpc_bustype[mpc_bustype78,2174
#define BUSTYPE_EISA	82,2262
#define BUSTYPE_ISA	83,2290
#define BUSTYPE_INTERN	84,2316
#define BUSTYPE_MCA	85,2367
#define BUSTYPE_VL	86,2393
#define BUSTYPE_PCI	87,2434
#define BUSTYPE_PCMCIA	88,2460
#define BUSTYPE_CBUS	89,2492
#define BUSTYPE_CBUSII	90,2520
#define BUSTYPE_FUTURE	91,2552
#define BUSTYPE_MBI	92,2584
#define BUSTYPE_MBII	93,2610
#define BUSTYPE_MPI	94,2638
#define BUSTYPE_MPSA	95,2664
#define BUSTYPE_NUBUS	96,2692
#define BUSTYPE_TC	97,2722
#define BUSTYPE_VME	98,2746
#define BUSTYPE_XPRESS	99,2772
#define BUSTYPE_NEC98	100,2804
struct mpc_config_ioapic102,2835
	unsigned char mpc_type;104,2862
	unsigned char mpc_apicid;105,2887
	unsigned char mpc_apicver;106,2914
	unsigned char mpc_flags;107,2942
#define MPC_APIC_USABLE	108,2968
	unsigned int  mpc_apicaddr;109,2998
struct mpc_config_intsrc112,3031
	unsigned char mpc_type;114,3058
	unsigned char mpc_irqtype;115,3083
	unsigned short mpc_irqflag;116,3111
	unsigned char mpc_srcbus;117,3140
	unsigned char mpc_srcbusirq;118,3167
	unsigned char mpc_dstapic;119,3197
	unsigned char mpc_dstirq;120,3225
enum mp_irq_source_types 123,3256
	mp_INT 124,3283
	mp_NMI 125,3296
	mp_SMI 126,3309
	mp_ExtINT 127,3322
#define MP_IRQDIR_DEFAULT	130,3341
#define MP_IRQDIR_HIGH	131,3369
#define MP_IRQDIR_LOW	132,3395
struct mpc_config_lintsrc135,3422
	unsigned char mpc_type;137,3450
	unsigned char mpc_irqtype;138,3475
	unsigned short mpc_irqflag;139,3503
	unsigned char mpc_srcbusid;140,3532
	unsigned char mpc_srcbusirq;141,3561
	unsigned char mpc_destapic;142,3591
#define MP_APIC_ALL	143,3621
	unsigned char mpc_destapiclint;144,3646
struct mp_config_oemtable147,3683
	char oem_signature[oem_signature149,3711
#define MPC_OEM_SIGNATURE 150,3735
	unsigned short oem_length;151,3768
	char  oem_rev;152,3816
	char  oem_checksum;153,3845
	char  mpc_oem[mpc_oem154,3866
struct mpc_config_translation157,3889
        unsigned char mpc_type;159,3921
        unsigned char trans_len;160,3953
        unsigned char trans_type;161,3986
        unsigned char trans_quad;162,4020
        unsigned char trans_global;163,4054
        unsigned char trans_local;164,4090
        unsigned short trans_reserved;165,4125
enum mp_bustype 180,4401
	MP_BUS_ISA 181,4419
	MP_BUS_EISA,182,4436
	MP_BUS_PCI,183,4450
	MP_BUS_MCA,184,4463
	MP_BUS_NEC98185,4476

xen/include/asm-x86/paging.h,2988
#define _XEN_PAGING_H26,1154
#define PG_SH_shift 39,1484
#define PG_HAP_shift 40,1510
#define PG_SH_enable 42,1575
#define PG_HAP_enable 43,1618
#define PG_mode_shift 46,1693
#define PG_refcounts 48,1783
#define PG_log_dirty 50,1887
#define PG_translate 52,2006
#define PG_external 55,2196
#define paging_mode_enabled(57,2273
#define paging_mode_shadow(58,2332
#define paging_mode_hap(59,2406
#define paging_mode_refcounts(61,2482
#define paging_mode_log_dirty(62,2556
#define paging_mode_translate(63,2630
#define paging_mode_external(64,2704
#define PAGING_DEBUG_LOGDIRTY 67,2812
struct shadow_paging_mode 76,3146
    void          (*detach_old_tables detach_old_tables77,3174
    int           (*x86_emulate_write x86_emulate_write78,3235
    int           (*x86_emulate_cmpxchg x86_emulate_cmpxchg81,3457
    int           (*x86_emulate_cmpxchg8b x86_emulate_cmpxchg8b87,3820
    mfn_t         (*make_monitor_table make_monitor_table94,4249
    void          (*destroy_monitor_table destroy_monitor_table95,4310
    int           (*guess_wrmap guess_wrmap96,4383
    void          (*pagetable_dying pagetable_dying98,4522
    unsigned int shadow_levels;100,4647
struct paging_mode 107,4837
    int           (*page_fault page_fault108,4858
    int           (*invlpg invlpg110,5009
    unsigned long (*gva_to_gfn gva_to_gfn111,5088
    void          (*update_cr3 update_cr3113,5227
    void          (*update_paging_modes update_paging_modes114,5304
    void          (*write_p2m_entry write_p2m_entry115,5365
    int           (*write_guest_entry write_guest_entry119,5651
    int           (*cmpxchg_guest_entry cmpxchg_guest_entry121,5795
    void *        (*guest_map_l1e guest_map_l1e124,5998
    void          (*guest_get_eff_l1e guest_get_eff_l1e126,6144
    unsigned int guest_levels;128,6282
    struct shadow_paging_mode shadow;131,6349
#define LOGDIRTY_NODE_ENTRIES 173,7876
#define L1_LOGDIRTY_IDX(174,7929
#define L2_LOGDIRTY_IDX(175,7996
#define L3_LOGDIRTY_IDX(177,8113
#define L4_LOGDIRTY_IDX(180,8270
#define L4_LOGDIRTY_IDX(183,8411
struct sh_dirty_vram 187,8484
    unsigned long begin_pfn;188,8507
    unsigned long end_pfn;189,8536
    paddr_t *sl1ma;sl1ma190,8563
    uint8_t *dirty_bitmap;dirty_bitmap191,8583
    s_time_t last_dirty;192,8610
paging_fault(233,10251
static inline int paging_invlpg(242,10549
#define INVALID_GFN 253,11082
static inline unsigned long paging_gva_to_gfn(254,11109
static inline void paging_update_cr3(264,11565
static inline void paging_update_paging_modes(272,11866
static inline int paging_write_guest_entry(281,12139
static inline int paging_cmpxchg_guest_entry(296,12772
static inline void safe_write_pte(309,13360
static inline void paging_write_p2m_entry(330,14116
guest_map_l1e(360,15258
guest_unmap_l1e(382,16080
guest_get_eff_l1e(389,16222
guest_get_eff_kern_l1e(407,16829
#define TOGGLE_MODE(411,16984
#define TOGGLE_MODE(413,17050

xen/include/asm-x86/byteorder.h,395
#define __ASM_X86_BYTEORDER_H__2,32
static inline __attribute_const__ __u32 ___arch__swab32(7,115
static inline __attribute_const__ __u64 ___arch__swab64(13,241
        struct { __u32 a,16,324
        struct { __u32 a,b;16,324
        struct { __u32 a,b; } s;16,324
        __u64 u;17,357
#define __arch__swab64(29,661
#define __arch__swab32(30,706
#define __BYTEORDER_HAS_U64__32,752

xen/include/asm-x86/mem_event.h,31
#define __MEM_EVENT_H__25,967

xen/include/asm-x86/setup.h,28
#define __X86_SETUP_H_2,23

xen/include/asm-x86/system.h,1016
#define __ASM_SYSTEM_H2,23
#define read_segment_register(7,93
#define wbinvd(13,361
#define clflush(16,426
#define nop(19,495
#define xchg(22,539
struct __xchg_dummy 25,636
struct __xchg_dummy { unsigned long a[a25,636
#define __xg(26,683
static always_inline unsigned long __xchg(39,1086
static always_inline unsigned long __cmpxchg(87,2491
#define __HAVE_ARCH_CMPXCHG135,4029
#define cmpxchgptr(137,4058
#define rmb(156,4911
#define wmb(157,4945
#define smp_mb(160,4998
#define smp_rmb(161,5027
#define smp_wmb(162,5057
#define smp_mb(164,5093
#define smp_rmb(165,5127
#define smp_wmb(166,5161
#define set_mb(169,5203
#define set_wmb(170,5266
#define local_irq_disable(172,5332
#define local_irq_enable(173,5402
#define safe_halt(176,5546
#define halt(178,5689
#define local_save_flags(180,5752
#define local_irq_save(185,6023
#define local_irq_restore(190,6294
static inline int local_irq_is_enabled(197,6633
#define BROKEN_ACPI_Sx 204,6784
#define BROKEN_INIT_AFTER_S1 205,6823

xen/include/asm-x86/hpet.h,1256
#define __X86_HPET_H__2,23
#define HPET_MMAP_SIZE	10,208
#define HPET_ID	12,237
#define HPET_PERIOD	13,260
#define HPET_CFG	14,286
#define HPET_STATUS	15,309
#define HPET_COUNTER	16,335
#define HPET_T0_CFG	17,362
#define HPET_T0_CMP	18,388
#define HPET_T0_ROUTE	19,414
#define HPET_T1_CFG	20,442
#define HPET_T1_CMP	21,468
#define HPET_T1_ROUTE	22,494
#define HPET_T2_CFG	23,522
#define HPET_T2_CMP	24,548
#define HPET_T2_ROUTE	25,574
#define HPET_Tn_CFG(27,603
#define HPET_Tn_CMP(28,656
#define HPET_Tn_ROUTE(29,709
#define HPET_ID_VENDOR	31,765
#define HPET_ID_LEGSUP	32,799
#define HPET_ID_NUMBER	33,833
#define HPET_ID_REV	34,867
#define	HPET_ID_NUMBER_SHIFT	35,898
#define HPET_ID_VENDOR_SHIFT	37,930
#define HPET_ID_VENDOR_8086	38,962
#define HPET_CFG_ENABLE	40,998
#define HPET_CFG_LEGACY	41,1028
#define	HPET_LEGACY_8254	42,1058
#define	HPET_LEGACY_RTC	43,1085
#define HPET_TN_ENABLE	45,1113
#define HPET_TN_PERIODIC	46,1143
#define HPET_TN_PERIODIC_CAP	47,1174
#define HPET_TN_SETVAL	48,1209
#define HPET_TN_32BIT	49,1239
#define HPET_TN_ROUTE	50,1268
#define HPET_TN_FSB	51,1298
#define HPET_TN_FSB_CAP	52,1326
#define HPET_TN_ROUTE_SHIFT	53,1358
#define hpet_read32(56,1390
#define hpet_write32(58,1476

xen/include/asm-x86/fixmap.h,2163
#define _ASM_FIXMAP_H13,360
enum fixed_addresses 32,874
    FIX_RESERVED,33,897
    FIX_PAE_HIGHMEM_0,35,993
    FIX_PAE_HIGHMEM_END 36,1016
    FIX_PAE_HIGHMEM_END = FIX_PAE_HIGHMEM_0 36,1016
    FIX_PAE_HIGHMEM_END = FIX_PAE_HIGHMEM_0 + NR_CPUS-NR_CPUS36,1016
    FIX_APIC_BASE,38,1080
    FIX_IO_APIC_BASE_0,39,1099
    FIX_IO_APIC_BASE_END 40,1123
    FIX_IO_APIC_BASE_END = FIX_IO_APIC_BASE_0 40,1123
    FIX_IO_APIC_BASE_END = FIX_IO_APIC_BASE_0 + MAX_IO_APICS-MAX_IO_APICS40,1123
    FIX_ACPI_BEGIN,41,1187
    FIX_ACPI_END 42,1207
    FIX_ACPI_END = FIX_ACPI_BEGIN 42,1207
    FIX_ACPI_END = FIX_ACPI_BEGIN + FIX_ACPI_PAGES 42,1207
    FIX_HPET_BASE,43,1263
    FIX_CYCLONE_TIMER,44,1282
    FIX_KEXEC_BASE_0,45,1305
    FIX_KEXEC_BASE_END 46,1327
    FIX_KEXEC_BASE_END = FIX_KEXEC_BASE_0 46,1327
      + ((KEXEC_XEN_NO_PAGES 47,1371
      + ((KEXEC_XEN_NO_PAGES >> 1) * KEXEC_IMAGE_NR)47,1371
    FIX_IOMMU_REGS_BASE_0,48,1429
    FIX_IOMMU_REGS_END 49,1456
    FIX_IOMMU_REGS_END = FIX_IOMMU_REGS_BASE_0 49,1456
    FIX_IOMMU_REGS_END = FIX_IOMMU_REGS_BASE_0 + MAX_IOMMUS-MAX_IOMMUS49,1456
    FIX_IOMMU_MMIO_BASE_0,50,1519
    FIX_IOMMU_MMIO_END 51,1546
    FIX_IOMMU_MMIO_END = FIX_IOMMU_MMIO_BASE_0 51,1546
    FIX_IOMMU_MMIO_END = FIX_IOMMU_MMIO_BASE_0 + IOMMU_PAGES 51,1546
    FIX_TBOOT_SHARED_BASE,52,1611
    FIX_MSIX_IO_RESERV_BASE,53,1638
    FIX_MSIX_IO_RESERV_END 54,1667
    FIX_MSIX_IO_RESERV_END = FIX_MSIX_IO_RESERV_BASE 54,1667
    FIX_MSIX_IO_RESERV_END = FIX_MSIX_IO_RESERV_BASE + FIX_MSIX_MAX_PAGES 54,1667
    FIX_TBOOT_MAP_ADDRESS,55,1745
    FIX_APEI_RANGE_BASE,56,1772
    FIX_APEI_RANGE_END 57,1797
    FIX_APEI_RANGE_END = FIX_APEI_RANGE_BASE 57,1797
    FIX_APEI_RANGE_END = FIX_APEI_RANGE_BASE + FIX_APEI_RANGE_MAX 57,1797
    FIX_IGD_MMIO,58,1867
    __end_of_fixed_addresses59,1885
#define FIXADDR_TOP 62,1918
#define FIXADDR_SIZE 63,1971
#define FIXADDR_START 64,2034
#define set_fixmap(69,2184
#define set_fixmap_nocache(72,2276
#define __fix_to_virt(75,2384
#define __virt_to_fix(76,2445
#define fix_to_virt(78,2519
static inline unsigned long virt_to_fix(80,2564

xen/include/asm-x86/traps.h,147
#define ASM_TRAP_H21,853
struct softirq_trap 23,873
	struct domain *domain;domain24,895
	struct vcpu *vcpu;vcpu25,948
	int processor;26,994

xen/include/asm-x86/ldt.h,60
#define __ARCH_LDT_H3,22
static inline void load_LDT(7,66

xen/include/asm-x86/msr.h,372
#define __ASM_MSR_H2,20
#define rdmsr(13,185
#define rdmsrl(18,305
#define wrmsr(25,504
static inline void wrmsrl(30,640
#define rdmsr_safe(39,844
static inline int wrmsr_safe(55,1323
#define rdtsc(73,1757
#define rdtscl(76,1845
#define rdtscll(80,1948
#define rdtscll(83,2045
#define write_tsc(90,2230
#define write_rdtscp_aux(92,2280
#define rdpmc(94,2340

xen/include/asm-x86/types.h,1247
#define __X86_TYPES_H__2,24
typedef __signed__ char __s8;8,96
typedef unsigned char __u8;9,126
typedef __signed__ short __s16;11,155
typedef unsigned short __u16;12,187
typedef __signed__ int __s32;14,218
typedef unsigned int __u32;15,248
typedef __signed__ long long __s64;19,350
typedef unsigned long long __u64;20,386
typedef __signed__ long __s64;22,446
typedef unsigned long __u64;23,477
typedef signed char s8;27,521
typedef unsigned char u8;28,545
typedef signed short s16;30,572
typedef unsigned short u16;31,598
typedef signed int s32;33,627
typedef unsigned int u32;34,651
typedef signed long long s64;37,700
typedef unsigned long long u64;38,730
typedef u64 paddr_t;39,762
#define INVALID_PADDR 40,783
#define PRIpaddr 41,813
typedef signed long s64;43,865
typedef unsigned long u64;44,890
typedef unsigned long paddr_t;45,917
#define INVALID_PADDR 46,948
#define PRIpaddr 47,977
typedef unsigned long size_t;50,1010
typedef char bool_t;52,1041
#define test_and_set_bool(53,1062
#define test_and_clear_bool(54,1107
#define BITS_PER_LONG 59,1202
#define BYTES_PER_LONG 60,1227
#define LONG_BYTEORDER 61,1252
#define BITS_PER_LONG 63,1303
#define BYTES_PER_LONG 64,1328
#define LONG_BYTEORDER 65,1353

xen/include/asm-x86/shared.h,292
#define __XEN_X86_SHARED_H__2,29
#define nmi_reason(6,81
#define GET_SET_SHARED(10,307
#define GET_SET_VCPU(26,1234
#define nmi_reason(44,2168
#define GET_SET_SHARED(46,2235
#define GET_SET_VCPU(57,2832
GET_SET_SHARED(69,3436
#undef GET_SET_VCPU75,3606
#undef GET_SET_SHARED76,3626

xen/include/asm-x86/hvm/support.h,932
#define __ASM_X86_HVM_SUPPORT_H__22,880
static inline ioreq_t *get_ioreq(get_ioreq30,1037
#define HVM_DELIVER_NO_ERROR_CODE 39,1345
#define DBG_LEVEL_0 42,1399
#define DBG_LEVEL_1 43,1444
#define DBG_LEVEL_2 44,1489
#define DBG_LEVEL_3 45,1534
#define DBG_LEVEL_IO 46,1579
#define DBG_LEVEL_VMMU 47,1624
#define DBG_LEVEL_VLAPIC 48,1669
#define DBG_LEVEL_VLAPIC_TIMER 49,1714
#define DBG_LEVEL_VLAPIC_INTERRUPT 50,1759
#define DBG_LEVEL_IOAPIC 51,1804
#define DBG_LEVEL_HCALL 52,1849
#define DBG_LEVEL_MSR 53,1895
#define HVM_DBG_LOG(56,1983
#define HVM_DBG_LOG(64,2485
enum hvm_copy_result 69,2570
    HVMCOPY_okay 70,2593
    HVMCOPY_bad_gva_to_gfn,71,2615
    HVMCOPY_bad_gfn_to_mfn,72,2643
    HVMCOPY_unhandleable,73,2671
    HVMCOPY_gfn_paged_out,74,2697
    HVMCOPY_gfn_shared,75,2724
#define HVM_HCALL_completed 121,4661
#define HVM_HCALL_preempted 122,4738
#define HVM_HCALL_invalidate 123,4815

xen/include/asm-x86/hvm/domain.h,1577
#define __ASM_X86_HVM_DOMAIN_H__22,856
struct hvm_ioreq_page 38,1254
    spinlock_t lock;39,1278
    struct page_info *page;page40,1299
    void *va;va41,1327
struct hvm_domain 44,1345
    struct hvm_ioreq_page  ioreq;45,1365
    struct hvm_ioreq_page  buf_ioreq;46,1399
    struct pl_time         pl_time;48,1438
    struct hvm_io_handler  io_handler;50,1475
    spinlock_t             irq_lock;53,1572
    struct hvm_irq         irq;54,1609
    struct hvm_hw_vpic     vpic[vpic55,1641
    struct hvm_vioapic    *vioapic;vioapic56,1701
    struct hvm_hw_stdvga   stdvga;57,1737
    struct vcpu           *i8259_target;i8259_target60,1833
    char                   pbuf[pbuf63,1911
    int                    pbuf_idx;64,1948
    spinlock_t             pbuf_lock;65,1985
    uint64_t               params[params67,2024
    struct list_head       pinned_cacheattr_ranges;70,2129
    struct sh_dirty_vram *dirty_vram;dirty_vram73,2212
    spinlock_t             uc_lock;78,2384
    bool_t                 is_in_uc_mode;79,2420
    struct hvm_iommu       hvm_iommu;82,2486
    struct list_head       msixtbl_list;85,2569
    spinlock_t             msixtbl_list_lock;86,2610
    struct viridian_domain viridian;88,2657
    bool_t                 hap_enabled;90,2695
    bool_t                 mem_sharing_enabled;91,2735
    bool_t                 qemu_mapcache_invalidate;92,2783
    bool_t                 is_s3_suspended;93,2836
        struct vmx_domain vmx;96,2893
        struct svm_domain svm;97,2924
#define hap_enabled(101,2966

xen/include/asm-x86/hvm/vpmu.h,1189
#define __ASM_X86_HVM_VPMU_H_23,842
#define msraddr_to_bitpos(25,873
#define vcpu_vpmu(26,936
#define vpmu_vcpu(27,994
#define vpmu_domain(29,1120
#define MSR_TYPE_COUNTER 31,1173
#define MSR_TYPE_CTRL 32,1211
#define MSR_TYPE_GLOBAL 33,1249
#define MSR_TYPE_ARCH_COUNTER 34,1287
#define MSR_TYPE_ARCH_CTRL 35,1325
struct pmumsr 37,1364
    unsigned int num;38,1380
    u32 *msr;msr39,1402
struct msr_load_store_entry 42,1420
    u32 msr_index;43,1450
    u32 msr_reserved;44,1469
    u64 msr_data;45,1491
struct arch_vpmu_ops 49,1564
    int (*do_wrmsr)do_wrmsr50,1587
    int (*do_rdmsr)do_rdmsr51,1648
    int (*do_interrupt)do_interrupt52,1710
    void (*arch_vpmu_initialise)arch_vpmu_initialise53,1763
    void (*arch_vpmu_destroy)arch_vpmu_destroy54,1813
    void (*arch_vpmu_save)arch_vpmu_save55,1860
    void (*arch_vpmu_load)arch_vpmu_load56,1904
struct vpmu_struct 59,1952
    u32 flags;60,1973
    void *context;context61,1988
    struct arch_vpmu_ops *arch_vpmu_ops;arch_vpmu_ops62,2007
#define VPMU_CONTEXT_ALLOCATED 65,2052
#define VPMU_CONTEXT_LOADED 66,2100
#define VPMU_RUNNING 67,2148
#define PASSIVE_DOMAIN_ALLOCATED	68,2196

xen/include/asm-x86/hvm/trace.h,2203
#define __ASM_X86_HVM_TRACE_H__2,32
#define DEFAULT_HVM_TRACE_ON 6,89
#define DEFAULT_HVM_TRACE_OFF 7,121
#define DEFAULT_HVM_VMSWITCH 9,154
#define DEFAULT_HVM_PF 10,206
#define DEFAULT_HVM_INJECT 11,258
#define DEFAULT_HVM_IO 12,310
#define DEFAULT_HVM_REGACCESS 13,362
#define DEFAULT_HVM_MISC 14,414
#define DEFAULT_HVM_INTR 15,466
#define DO_TRC_HVM_VMENTRY 17,519
#define DO_TRC_HVM_VMEXIT 18,571
#define DO_TRC_HVM_VMEXIT64 19,623
#define DO_TRC_HVM_PF_XEN 20,675
#define DO_TRC_HVM_PF_XEN64 21,721
#define DO_TRC_HVM_PF_INJECT 22,767
#define DO_TRC_HVM_PF_INJECT64 23,813
#define DO_TRC_HVM_INJ_EXC 24,859
#define DO_TRC_HVM_INJ_VIRQ 25,909
#define DO_TRC_HVM_REINJ_VIRQ 26,959
#define DO_TRC_HVM_INTR_WINDOW 27,1009
#define DO_TRC_HVM_IO_READ 28,1059
#define DO_TRC_HVM_IO_WRITE 29,1105
#define DO_TRC_HVM_CR_READ 30,1151
#define DO_TRC_HVM_CR_READ64 31,1204
#define DO_TRC_HVM_CR_WRITE 32,1257
#define DO_TRC_HVM_CR_WRITE64 33,1310
#define DO_TRC_HVM_DR_READ 34,1363
#define DO_TRC_HVM_DR_WRITE 35,1416
#define DO_TRC_HVM_MSR_READ 36,1469
#define DO_TRC_HVM_MSR_WRITE 37,1522
#define DO_TRC_HVM_RDTSC 38,1575
#define DO_TRC_HVM_CPUID 39,1628
#define DO_TRC_HVM_INTR 40,1676
#define DO_TRC_HVM_NMI 41,1724
#define DO_TRC_HVM_MCE 42,1772
#define DO_TRC_HVM_SMI 43,1820
#define DO_TRC_HVM_VMMCALL 44,1868
#define DO_TRC_HVM_HLT 45,1916
#define DO_TRC_HVM_INVLPG 46,1964
#define DO_TRC_HVM_INVLPG64 47,2012
#define DO_TRC_HVM_IO_ASSIST 48,2060
#define DO_TRC_HVM_MMIO_ASSIST 49,2108
#define DO_TRC_HVM_CLTS 50,2156
#define DO_TRC_HVM_LMSW 51,2204
#define DO_TRC_HVM_LMSW64 52,2252
#define TRC_PAR_LONG(56,2320
#define TRC_PAR_LONG(58,2383
#define HVMTRACE_ND(61,2423
#define HVMTRACE_6D(79,3623
#define HVMTRACE_5D(81,3747
#define HVMTRACE_4D(83,3870
#define HVMTRACE_3D(85,3995
#define HVMTRACE_2D(87,4119
#define HVMTRACE_1D(89,4243
#define HVMTRACE_0D(91,4367
#define HVMTRACE_LONG_1D(97,4511
#define HVMTRACE_LONG_2D(99,4637
#define HVMTRACE_LONG_3D(101,4745
#define HVMTRACE_LONG_4D(103,4853
#define HVMTRACE_LONG_1D 106,4971
#define HVMTRACE_LONG_2D 107,5008
#define HVMTRACE_LONG_3D 108,5045
#define HVMTRACE_LONG_4D 109,5082

xen/include/asm-x86/hvm/vpt.h,2556
#define __ASM_X86_HVM_VPT_H__21,791
typedef void time_cb(38,1141
struct periodic_time 40,1194
    struct list_head list;41,1217
    bool_t on_list;42,1244
    bool_t one_shot;43,1264
    bool_t do_not_freeze;44,1285
    bool_t irq_issued;45,1311
    bool_t warned_timeout_too_short;46,1334
#define PTSRC_isa 47,1371
#define PTSRC_lapic 48,1416
    u8 source;49,1463
    u8 irq;50,1508
    struct vcpu *vcpu;vcpu51,1520
    u32 pending_intr_nr;52,1591
    u64 period;53,1654
    s_time_t scheduled;54,1708
    u64 last_plt_gtime;55,1772
    struct timer timer;56,1850
    time_cb *cb;cb57,1897
    void *priv;priv58,1914
#define PIT_FREQ 62,1992
#define PIT_BASE 63,2017
typedef struct PITState 65,2040
    struct hvm_hw_pit hw;67,2091
    int64_t count_load_time[count_load_time69,2190
    struct periodic_time pt0;71,2256
    spinlock_t lock;72,2286
} PITState;73,2307
struct hpet_registers 75,2320
    uint64_t capability;77,2396
    uint64_t config;78,2447
    uint64_t isr;79,2499
    uint64_t mc64;80,2558
        uint64_t config;82,2654
        uint64_t cmp;83,2710
        uint64_t fsb;84,2759
    } timers[timers85,2826
    uint64_t period[period88,2889
    uint64_t comparator64[comparator6489,2965
typedef struct HPETState 92,3044
    struct hpet_registers hpet;93,3071
    uint64_t stime_freq;94,3103
    uint64_t hpet_to_ns_scale;95,3128
    uint64_t hpet_to_ns_limit;96,3203
    uint64_t mc_offset;97,3278
    struct periodic_time pt[pt98,3302
    spinlock_t lock;99,3347
} HPETState;100,3368
typedef struct RTCState 102,3382
    struct hvm_hw_rtc hw;104,3433
    struct tm current_tm;106,3500
    int64_t next_second_time;108,3550
    struct timer second_timer;109,3580
    struct timer second_timer2;110,3611
    struct periodic_time pt;111,3643
    spinlock_t lock;112,3672
} RTCState;113,3693
#define FREQUENCE_PMTIMER 115,3706
typedef struct PMTState 116,3781
    struct hvm_hw_pmtimer pm;117,3807
    struct vcpu *vcpu;vcpu118,3863
    uint64_t last_gtime;119,3940
    uint32_t not_accounted;120,4017
    uint64_t scale;121,4089
    struct timer timer;122,4169
    spinlock_t lock;123,4233
} PMTState;124,4254
struct pl_time 126,4267
    struct PITState  vpit;127,4307
    struct RTCState  vrtc;128,4334
    struct HPETState vhpet;129,4361
    struct PMTState  vpmt;130,4389
    int64_t stime_offset;132,4467
    uint64_t last_guest_time;134,4552
    spinlock_t pl_time_lock;135,4582
#define pt_global_vcpu_target(145,4872
#define pt_active(151,5098

xen/include/asm-x86/hvm/viridian.h,723
#define __ASM_X86_HVM_VIRIDIAN_H__10,189
union viridian_guest_os_id12,225
    uint64_t raw;14,254
        uint64_t build_number:build_number17,289
        uint64_t service_pack:service_pack18,323
        uint64_t minor:minor19,356
        uint64_t major:major20,382
        uint64_t os:os21,408
        uint64_t vendor:vendor22,431
    } fields;23,459
union viridian_hypercall_gpa26,477
{   uint64_t raw;27,506
        uint64_t enabled:enabled30,541
        uint64_t reserved_preserved:reserved_preserved31,569
        uint64_t pfn:pfn32,609
    } fields;33,634
struct viridian_domain36,652
    union viridian_guest_os_id guest_os_id;38,677
    union viridian_hypercall_gpa hypercall_gpa;39,721

xen/include/asm-x86/hvm/vioapic.h,665
#define __ASM_X86_HVM_VIOAPIC_H__26,981
#define VIOAPIC_VERSION_ID 34,1138
#define VIOAPIC_VERSION_ID 36,1197
#define VIOAPIC_EDGE_TRIG 39,1259
#define VIOAPIC_LEVEL_TRIG 40,1288
#define VIOAPIC_DEFAULT_BASE_ADDRESS 42,1318
#define VIOAPIC_MEM_LENGTH 43,1367
#define VIOAPIC_REG_SELECT 46,1436
#define VIOAPIC_REG_WINDOW 47,1469
#define VIOAPIC_REG_EOI 48,1502
#define VIOAPIC_REG_APIC_ID 51,1586
#define VIOAPIC_REG_VERSION 52,1641
#define VIOAPIC_REG_ARB_ID 53,1674
struct hvm_vioapic 55,1730
    struct hvm_hw_vioapic hvm_hw_vioapic;56,1751
    struct domain *domain;domain57,1793
#define domain_vioapic(60,1824
#define vioapic_domain(61,1898

xen/include/asm-x86/hvm/vmx/vmx.h,7294
#define __ASM_X86_HVM_VMX_VMX_H__20,796
        u64 r 34,1091
        w 35,1149
        x 36,1208
        emt 37,1269
        ipat 38,1330
        sp 39,1395
        rsvd1 40,1458
        avail1 41,1527
        rsvd2_snp 42,1591
        mfn 44,1718
        sa_p2mt 45,1795
        rsvd3_tm 46,1863
        avail3 48,1999
    u64 epte;50,2070
} ept_entry_t;51,2084
#define EPT_TABLE_ORDER 53,2100
#define EPTE_SUPER_PAGE_MASK 54,2134
#define EPTE_MFN_MASK 55,2171
#define EPTE_AVAIL1_MASK 56,2222
#define EPTE_EMT_MASK 57,2260
#define EPTE_IGMT_MASK 58,2297
#define EPTE_AVAIL1_SHIFT 59,2334
#define EPTE_EMT_SHIFT 60,2368
#define EPTE_IGMT_SHIFT 61,2402
#define VMX_EXIT_REASONS_FAILED_VMENTRY 77,2844
#define EXIT_REASON_EXCEPTION_NMI 79,2896
#define EXIT_REASON_EXTERNAL_INTERRUPT 80,2938
#define EXIT_REASON_TRIPLE_FAULT 81,2980
#define EXIT_REASON_INIT 82,3022
#define EXIT_REASON_SIPI 83,3064
#define EXIT_REASON_IO_SMI 84,3106
#define EXIT_REASON_OTHER_SMI 85,3148
#define EXIT_REASON_PENDING_VIRT_INTR 86,3190
#define EXIT_REASON_PENDING_VIRT_NMI 87,3232
#define EXIT_REASON_TASK_SWITCH 88,3274
#define EXIT_REASON_CPUID 89,3316
#define EXIT_REASON_GETSEC 90,3359
#define EXIT_REASON_HLT 91,3402
#define EXIT_REASON_INVD 92,3445
#define EXIT_REASON_INVLPG 93,3488
#define EXIT_REASON_RDPMC 94,3531
#define EXIT_REASON_RDTSC 95,3574
#define EXIT_REASON_RSM 96,3617
#define EXIT_REASON_VMCALL 97,3660
#define EXIT_REASON_VMCLEAR 98,3703
#define EXIT_REASON_VMLAUNCH 99,3746
#define EXIT_REASON_VMPTRLD 100,3789
#define EXIT_REASON_VMPTRST 101,3832
#define EXIT_REASON_VMREAD 102,3875
#define EXIT_REASON_VMRESUME 103,3918
#define EXIT_REASON_VMWRITE 104,3961
#define EXIT_REASON_VMXOFF 105,4004
#define EXIT_REASON_VMXON 106,4047
#define EXIT_REASON_CR_ACCESS 107,4090
#define EXIT_REASON_DR_ACCESS 108,4133
#define EXIT_REASON_IO_INSTRUCTION 109,4176
#define EXIT_REASON_MSR_READ 110,4219
#define EXIT_REASON_MSR_WRITE 111,4262
#define EXIT_REASON_INVALID_GUEST_STATE 112,4305
#define EXIT_REASON_MSR_LOADING 113,4348
#define EXIT_REASON_MWAIT_INSTRUCTION 114,4391
#define EXIT_REASON_MONITOR_TRAP_FLAG 115,4434
#define EXIT_REASON_MONITOR_INSTRUCTION 116,4477
#define EXIT_REASON_PAUSE_INSTRUCTION 117,4520
#define EXIT_REASON_MCE_DURING_VMENTRY 118,4563
#define EXIT_REASON_TPR_BELOW_THRESHOLD 119,4606
#define EXIT_REASON_APIC_ACCESS 120,4649
#define EXIT_REASON_ACCESS_GDTR_OR_IDTR 121,4692
#define EXIT_REASON_ACCESS_LDTR_OR_TR 122,4735
#define EXIT_REASON_EPT_VIOLATION 123,4778
#define EXIT_REASON_EPT_MISCONFIG 124,4821
#define EXIT_REASON_INVEPT 125,4864
#define EXIT_REASON_RDTSCP 126,4907
#define EXIT_REASON_VMX_PREEMPTION_TIMER_EXPIRED 127,4950
#define EXIT_REASON_INVVPID 128,5002
#define EXIT_REASON_WBINVD 129,5045
#define EXIT_REASON_XSETBV 130,5088
#define INTR_INFO_VECTOR_MASK 135,5174
#define INTR_INFO_INTR_TYPE_MASK 136,5240
#define INTR_INFO_DELIVER_CODE_MASK 137,5307
#define INTR_INFO_NMI_UNBLOCKED_BY_IRET 138,5372
#define INTR_INFO_VALID_MASK 139,5437
#define INTR_INFO_RESVD_BITS_MASK 140,5502
#define VMX_CONTROL_REG_ACCESS_NUM 146,5663
#define VMX_CONTROL_REG_ACCESS_TYPE 148,5764
#define VMX_CONTROL_REG_ACCESS_GPR 150,5856
#define VMX_CONTROL_REG_ACCESS_TYPE_MOV_TO_CR 151,5902
#define VMX_CONTROL_REG_ACCESS_TYPE_MOV_FROM_CR 152,5959
#define VMX_CONTROL_REG_ACCESS_TYPE_CLTS 153,6016
#define VMX_CONTROL_REG_ACCESS_TYPE_LMSW 154,6073
#define VMX_CONTROL_REG_ACCESS_GPR_EAX 155,6130
#define VMX_CONTROL_REG_ACCESS_GPR_ECX 156,6179
#define VMX_CONTROL_REG_ACCESS_GPR_EDX 157,6228
#define VMX_CONTROL_REG_ACCESS_GPR_EBX 158,6277
#define VMX_CONTROL_REG_ACCESS_GPR_ESP 159,6326
#define VMX_CONTROL_REG_ACCESS_GPR_EBP 160,6375
#define VMX_CONTROL_REG_ACCESS_GPR_ESI 161,6424
#define VMX_CONTROL_REG_ACCESS_GPR_EDI 162,6473
#define VMX_CONTROL_REG_ACCESS_GPR_R8 163,6522
#define VMX_CONTROL_REG_ACCESS_GPR_R9 164,6571
#define VMX_CONTROL_REG_ACCESS_GPR_R10 165,6620
#define VMX_CONTROL_REG_ACCESS_GPR_R11 166,6670
#define VMX_CONTROL_REG_ACCESS_GPR_R12 167,6720
#define VMX_CONTROL_REG_ACCESS_GPR_R13 168,6770
#define VMX_CONTROL_REG_ACCESS_GPR_R14 169,6820
#define VMX_CONTROL_REG_ACCESS_GPR_R15 170,6870
#define X86_SEG_AR_SEG_TYPE 175,6945
#define X86_SEG_AR_DESC_TYPE 176,7012
#define X86_SEG_AR_DPL 177,7080
#define X86_SEG_AR_SEG_PRESENT 178,7161
#define X86_SEG_AR_AVL 179,7229
#define X86_SEG_AR_CS_LM_ACTIVE 180,7312
#define X86_SEG_AR_DEF_OP_SIZE 181,7392
#define X86_SEG_AR_GRANULARITY 182,7468
#define X86_SEG_AR_SEG_UNUSABLE 183,7533
#define VMCALL_OPCODE 185,7604
#define VMCLEAR_OPCODE 186,7653
#define VMLAUNCH_OPCODE 187,7730
#define VMPTRLD_OPCODE 188,7779
#define VMPTRST_OPCODE 189,7856
#define VMREAD_OPCODE 190,7933
#define VMRESUME_OPCODE 191,7977
#define VMWRITE_OPCODE 192,8026
#define INVEPT_OPCODE 193,8070
#define INVVPID_OPCODE 194,8144
#define VMXOFF_OPCODE 195,8218
#define VMXON_OPCODE 196,8267
#define MODRM_EAX_08 198,8317
#define MODRM_EAX_06 199,8373
#define MODRM_EAX_07 200,8445
#define MODRM_EAX_ECX 201,8517
#define cpu_has_vmx_ept_wl4_supported 205,8602
#define cpu_has_vmx_ept_mt_uc 207,8709
#define cpu_has_vmx_ept_mt_wb 209,8807
#define cpu_has_vmx_ept_1gb 211,8905
#define cpu_has_vmx_ept_2mb 213,9002
#define cpu_has_vmx_ept_invept_single_context 215,9099
#define EPT_2MB_SHIFT 218,9205
#define EPT_1GB_SHIFT 219,9234
#define ept_has_2mb(220,9263
#define ept_has_1gb(221,9316
#define INVEPT_SINGLE_CONTEXT 223,9370
#define INVEPT_ALL_CONTEXT 224,9404
#define cpu_has_vmx_vpid_invvpid_individual_addr 226,9439
#define cpu_has_vmx_vpid_invvpid_single_context 228,9567
#define cpu_has_vmx_vpid_invvpid_single_context_retaining_global 230,9694
#define INVVPID_INDIVIDUAL_ADDR 233,9839
#define INVVPID_SINGLE_CONTEXT 234,9889
#define INVVPID_ALL_CONTEXT 235,9939
#define INVVPID_SINGLE_CONTEXT_RETAINING_GLOBAL 236,9989
static inline void __vmptrld(238,10040
static inline void __vmptrst(249,10332
static inline void __vmpclear(258,10528
static inline unsigned long __vmread(269,10821
static inline void __vmwrite(284,11184
static inline unsigned long __vmread_safe(295,11524
static inline void __invept(310,11924
        u64 eptp,313,11996
        u64 eptp, gpa;313,11996
static inline void __invvpid(333,12568
        u64 vpid:vpid336,12641
        u64 rsvd:rsvd337,12662
        u64 gva;338,12683
static inline void ept_sync_all(351,13132
static inline void vpid_sync_vcpu_gva(358,13256
static inline void vpid_sync_all(382,13915
static inline void __vmxoff(387,14001
static inline int __vmxon(394,14107
#define _EPT_READ_VIOLATION 422,14836
#define EPT_READ_VIOLATION 423,14874
#define _EPT_WRITE_VIOLATION 424,14937
#define EPT_WRITE_VIOLATION 425,14975
#define _EPT_EXEC_VIOLATION 426,15039
#define EPT_EXEC_VIOLATION 427,15077
#define _EPT_EFFECTIVE_READ 428,15140
#define EPT_EFFECTIVE_READ 429,15178
#define _EPT_EFFECTIVE_WRITE 430,15241
#define EPT_EFFECTIVE_WRITE 431,15279
#define _EPT_EFFECTIVE_EXEC 432,15343
#define EPT_EFFECTIVE_EXEC 433,15381
#define _EPT_GLA_VALID 434,15444
#define EPT_GLA_VALID 435,15482
#define _EPT_GLA_FAULT 436,15540
#define EPT_GLA_FAULT 437,15578
#define EPT_PAGETABLE_ENTRIES 439,15637

xen/include/asm-x86/hvm/vmx/vpmu_core2.h,540
#define __ASM_X86_HVM_VPMU_CORE_H_24,870
struct arch_msr_pair 26,906
    u64 counter;27,929
    u64 control;28,946
struct core2_pmu_enable 31,967
    char fixed_ctr_enable[fixed_ctr_enable32,993
    char arch_pmc_enable[arch_pmc_enable33,1023
struct core2_vpmu_context 36,1056
    struct core2_pmu_enable *pmu_enable;pmu_enable37,1084
    u64 counters[counters38,1125
    u64 ctrls[ctrls39,1146
    u64 global_ovf_status;40,1164
    u32 hw_lapic_lvtpc;41,1191
    struct arch_msr_pair arch_msr_pair[arch_msr_pair42,1215

xen/include/asm-x86/hvm/vmx/vmcs.h,20022
#define __ASM_X86_HVM_VMX_VMCS_H__20,786
struct vmcs_struct 34,1171
    u32 vmcs_revision_id;35,1192
    unsigned char data 36,1218
struct vmx_msr_entry 39,1283
    u32 index;40,1306
    u32 mbz;41,1321
    u64 data;42,1334
    VMX_INDEX_MSR_LSTAR 46,1359
    VMX_INDEX_MSR_STAR,47,1388
    VMX_INDEX_MSR_SYSCALL_MASK,48,1412
    VMX_MSR_COUNT50,1445
struct vmx_msr_state 53,1467
    unsigned long flags;54,1490
    unsigned long msrs[msrs55,1515
#define EPT_DEFAULT_MT 58,1558
struct vmx_domain 60,1604
    unsigned long apic_access_mfn;61,1624
            u64 ept_mt 64,1688
                ept_wl 65,1715
                rsvd 66,1742
                asr 67,1769
        u64 eptp;69,1808
    } ept_control;70,1826
    cpumask_t ept_synced;71,1845
#define ept_get_wl(74,1875
#define ept_get_asr(76,1951
#define ept_get_eptp(78,2024
struct arch_vmx_struct 81,2099
    struct vmcs_struct  *vmcs;vmcs83,2159
    spinlock_t           vmcs_lock;86,2250
    struct list_head     active_list;93,2481
    int                  active_cpu;94,2519
    int                  launched;95,2556
    u32                  exec_control;98,2634
    u32                  secondary_exec_control;99,2673
    u32                  exception_bitmap;100,2722
    struct vmx_msr_state msr_state;103,2784
    unsigned long        shadow_gs;104,2820
    unsigned long        cstar;105,2856
    unsigned long       *msr_bitmap;msr_bitmap108,2896
    unsigned int         msr_count;109,2933
    struct vmx_msr_entry *msr_area;msr_area110,2969
    unsigned int         host_msr_count;111,3005
    struct vmx_msr_entry *host_msr_area;host_msr_area112,3046
    unsigned long        host_cr0;114,3088
    uint8_t              vmx_realmode;117,3161
    uint8_t              vmx_emulate;119,3251
    uint16_t             vm86_segment_mask;121,3365
    struct segment_register vm86_saved_seg[vm86_saved_seg123,3480
    uint32_t             vm86_saved_eflags;125,3593
#define CPU_BASED_VIRTUAL_INTR_PENDING 133,3791
#define CPU_BASED_USE_TSC_OFFSETING 134,3848
#define CPU_BASED_HLT_EXITING 135,3905
#define CPU_BASED_INVLPG_EXITING 136,3962
#define CPU_BASED_MWAIT_EXITING 137,4019
#define CPU_BASED_RDPMC_EXITING 138,4076
#define CPU_BASED_RDTSC_EXITING 139,4133
#define CPU_BASED_CR3_LOAD_EXITING 140,4190
#define CPU_BASED_CR3_STORE_EXITING 141,4247
#define CPU_BASED_CR8_LOAD_EXITING 142,4304
#define CPU_BASED_CR8_STORE_EXITING 143,4361
#define CPU_BASED_TPR_SHADOW 144,4418
#define CPU_BASED_VIRTUAL_NMI_PENDING 145,4475
#define CPU_BASED_MOV_DR_EXITING 146,4532
#define CPU_BASED_UNCOND_IO_EXITING 147,4589
#define CPU_BASED_ACTIVATE_IO_BITMAP 148,4646
#define CPU_BASED_MONITOR_TRAP_FLAG 149,4703
#define CPU_BASED_ACTIVATE_MSR_BITMAP 150,4760
#define CPU_BASED_MONITOR_EXITING 151,4817
#define CPU_BASED_PAUSE_EXITING 152,4874
#define CPU_BASED_ACTIVATE_SECONDARY_CONTROLS 153,4931
#define PIN_BASED_EXT_INTR_MASK 156,5028
#define PIN_BASED_NMI_EXITING 157,5079
#define PIN_BASED_VIRTUAL_NMIS 158,5130
#define PIN_BASED_PREEMPT_TIMER 159,5181
#define VM_EXIT_IA32E_MODE 162,5272
#define VM_EXIT_ACK_INTR_ON_EXIT 163,5323
#define VM_EXIT_SAVE_GUEST_PAT 164,5374
#define VM_EXIT_LOAD_HOST_PAT 165,5425
#define VM_EXIT_SAVE_GUEST_EFER 166,5476
#define VM_EXIT_LOAD_HOST_EFER 167,5527
#define VM_EXIT_SAVE_PREEMPT_TIMER 168,5578
#define VM_ENTRY_IA32E_MODE 171,5661
#define VM_ENTRY_SMM 172,5712
#define VM_ENTRY_DEACT_DUAL_MONITOR 173,5763
#define VM_ENTRY_LOAD_GUEST_PAT 174,5814
#define VM_ENTRY_LOAD_GUEST_EFER 175,5865
#define SECONDARY_EXEC_VIRTUALIZE_APIC_ACCESSES 178,5949
#define SECONDARY_EXEC_ENABLE_EPT 179,6008
#define SECONDARY_EXEC_ENABLE_RDTSCP 180,6067
#define SECONDARY_EXEC_ENABLE_VPID 181,6126
#define SECONDARY_EXEC_WBINVD_EXITING 182,6185
#define SECONDARY_EXEC_UNRESTRICTED_GUEST 183,6244
#define SECONDARY_EXEC_PAUSE_LOOP_EXITING 184,6303
#define VMX_EPT_WALK_LENGTH_4_SUPPORTED 189,6450
#define VMX_EPT_MEMORY_TYPE_UC 190,6509
#define VMX_EPT_MEMORY_TYPE_WB 191,6568
#define VMX_EPT_SUPERPAGE_2MB 192,6627
#define VMX_EPT_SUPERPAGE_1GB 193,6686
#define VMX_EPT_INVEPT_INSTRUCTION 194,6745
#define VMX_EPT_INVEPT_SINGLE_CONTEXT 195,6804
#define VMX_EPT_INVEPT_ALL_CONTEXT 196,6863
#define VMX_VPID_INVVPID_INSTRUCTION 198,6923
#define VMX_VPID_INVVPID_INDIVIDUAL_ADDR 199,6998
#define VMX_VPID_INVVPID_SINGLE_CONTEXT 200,7075
#define VMX_VPID_INVVPID_ALL_CONTEXT 201,7152
#define VMX_VPID_INVVPID_SINGLE_CONTEXT_RETAINING_GLOBAL 202,7229
#define cpu_has_wbinvd_exiting 204,7307
#define cpu_has_vmx_virtualize_apic_accesses 206,7405
#define cpu_has_vmx_tpr_shadow 208,7527
#define cpu_has_vmx_vnmi 210,7616
#define cpu_has_vmx_msr_bitmap 212,7701
#define cpu_has_vmx_secondary_exec_control 214,7799
#define cpu_has_vmx_ept 216,7917
#define cpu_has_vmx_vpid 218,8004
#define cpu_has_monitor_trap_flag 220,8093
#define cpu_has_vmx_pat 222,8192
#define cpu_has_vmx_unrestricted_guest 224,8270
#define vmx_unrestricted_guest(226,8380
#define cpu_has_vmx_ple 229,8520
#define VMX_INTR_SHADOW_STI 233,8657
#define VMX_INTR_SHADOW_MOV_SS 234,8708
#define VMX_INTR_SHADOW_SMI 235,8759
#define VMX_INTR_SHADOW_NMI 236,8810
enum vmcs_field 239,8890
    VIRTUAL_PROCESSOR_ID 240,8908
    VIRTUAL_PROCESSOR_ID            = 0x00000000,x00000000240,8908
    GUEST_ES_SELECTOR 241,8958
    GUEST_ES_SELECTOR               = 0x00000800,x00000800241,8958
    GUEST_CS_SELECTOR 242,9008
    GUEST_CS_SELECTOR               = 0x00000802,x00000802242,9008
    GUEST_SS_SELECTOR 243,9058
    GUEST_SS_SELECTOR               = 0x00000804,x00000804243,9058
    GUEST_DS_SELECTOR 244,9108
    GUEST_DS_SELECTOR               = 0x00000806,x00000806244,9108
    GUEST_FS_SELECTOR 245,9158
    GUEST_FS_SELECTOR               = 0x00000808,x00000808245,9158
    GUEST_GS_SELECTOR 246,9208
    GUEST_GS_SELECTOR               = 0x0000080a,x0000080a246,9208
    GUEST_LDTR_SELECTOR 247,9258
    GUEST_LDTR_SELECTOR             = 0x0000080c,x0000080c247,9258
    GUEST_TR_SELECTOR 248,9308
    GUEST_TR_SELECTOR               = 0x0000080e,x0000080e248,9308
    HOST_ES_SELECTOR 249,9358
    HOST_ES_SELECTOR                = 0x00000c00,x00000c00249,9358
    HOST_CS_SELECTOR 250,9408
    HOST_CS_SELECTOR                = 0x00000c02,x00000c02250,9408
    HOST_SS_SELECTOR 251,9458
    HOST_SS_SELECTOR                = 0x00000c04,x00000c04251,9458
    HOST_DS_SELECTOR 252,9508
    HOST_DS_SELECTOR                = 0x00000c06,x00000c06252,9508
    HOST_FS_SELECTOR 253,9558
    HOST_FS_SELECTOR                = 0x00000c08,x00000c08253,9558
    HOST_GS_SELECTOR 254,9608
    HOST_GS_SELECTOR                = 0x00000c0a,x00000c0a254,9608
    HOST_TR_SELECTOR 255,9658
    HOST_TR_SELECTOR                = 0x00000c0c,x00000c0c255,9658
    IO_BITMAP_A 256,9708
    IO_BITMAP_A                     = 0x00002000,x00002000256,9708
    IO_BITMAP_A_HIGH 257,9758
    IO_BITMAP_A_HIGH                = 0x00002001,x00002001257,9758
    IO_BITMAP_B 258,9808
    IO_BITMAP_B                     = 0x00002002,x00002002258,9808
    IO_BITMAP_B_HIGH 259,9858
    IO_BITMAP_B_HIGH                = 0x00002003,x00002003259,9858
    MSR_BITMAP 260,9908
    MSR_BITMAP                      = 0x00002004,x00002004260,9908
    MSR_BITMAP_HIGH 261,9958
    MSR_BITMAP_HIGH                 = 0x00002005,x00002005261,9958
    VM_EXIT_MSR_STORE_ADDR 262,10008
    VM_EXIT_MSR_STORE_ADDR          = 0x00002006,x00002006262,10008
    VM_EXIT_MSR_STORE_ADDR_HIGH 263,10058
    VM_EXIT_MSR_STORE_ADDR_HIGH     = 0x00002007,x00002007263,10058
    VM_EXIT_MSR_LOAD_ADDR 264,10108
    VM_EXIT_MSR_LOAD_ADDR           = 0x00002008,x00002008264,10108
    VM_EXIT_MSR_LOAD_ADDR_HIGH 265,10158
    VM_EXIT_MSR_LOAD_ADDR_HIGH      = 0x00002009,x00002009265,10158
    VM_ENTRY_MSR_LOAD_ADDR 266,10208
    VM_ENTRY_MSR_LOAD_ADDR          = 0x0000200a,x0000200a266,10208
    VM_ENTRY_MSR_LOAD_ADDR_HIGH 267,10258
    VM_ENTRY_MSR_LOAD_ADDR_HIGH     = 0x0000200b,x0000200b267,10258
    TSC_OFFSET 268,10308
    TSC_OFFSET                      = 0x00002010,x00002010268,10308
    TSC_OFFSET_HIGH 269,10358
    TSC_OFFSET_HIGH                 = 0x00002011,x00002011269,10358
    VIRTUAL_APIC_PAGE_ADDR 270,10408
    VIRTUAL_APIC_PAGE_ADDR          = 0x00002012,x00002012270,10408
    VIRTUAL_APIC_PAGE_ADDR_HIGH 271,10458
    VIRTUAL_APIC_PAGE_ADDR_HIGH     = 0x00002013,x00002013271,10458
    APIC_ACCESS_ADDR 272,10508
    APIC_ACCESS_ADDR                = 0x00002014,x00002014272,10508
    APIC_ACCESS_ADDR_HIGH 273,10558
    APIC_ACCESS_ADDR_HIGH           = 0x00002015,x00002015273,10558
    EPT_POINTER 274,10608
    EPT_POINTER                     = 0x0000201a,x0000201a274,10608
    EPT_POINTER_HIGH 275,10658
    EPT_POINTER_HIGH                = 0x0000201b,x0000201b275,10658
    GUEST_PHYSICAL_ADDRESS 276,10708
    GUEST_PHYSICAL_ADDRESS          = 0x00002400,x00002400276,10708
    GUEST_PHYSICAL_ADDRESS_HIGH 277,10758
    GUEST_PHYSICAL_ADDRESS_HIGH     = 0x00002401,x00002401277,10758
    VMCS_LINK_POINTER 278,10808
    VMCS_LINK_POINTER               = 0x00002800,x00002800278,10808
    VMCS_LINK_POINTER_HIGH 279,10858
    VMCS_LINK_POINTER_HIGH          = 0x00002801,x00002801279,10858
    GUEST_IA32_DEBUGCTL 280,10908
    GUEST_IA32_DEBUGCTL             = 0x00002802,x00002802280,10908
    GUEST_IA32_DEBUGCTL_HIGH 281,10958
    GUEST_IA32_DEBUGCTL_HIGH        = 0x00002803,x00002803281,10958
    GUEST_PAT 282,11008
    GUEST_PAT                       = 0x00002804,x00002804282,11008
    GUEST_PAT_HIGH 283,11058
    GUEST_PAT_HIGH                  = 0x00002805,x00002805283,11058
    GUEST_PDPTR0 284,11108
    GUEST_PDPTR0                    = 0x0000280a,x0000280a284,11108
    GUEST_PDPTR0_HIGH 285,11158
    GUEST_PDPTR0_HIGH               = 0x0000280b,x0000280b285,11158
    GUEST_PDPTR1 286,11208
    GUEST_PDPTR1                    = 0x0000280c,x0000280c286,11208
    GUEST_PDPTR1_HIGH 287,11258
    GUEST_PDPTR1_HIGH               = 0x0000280d,x0000280d287,11258
    GUEST_PDPTR2 288,11308
    GUEST_PDPTR2                    = 0x0000280e,x0000280e288,11308
    GUEST_PDPTR2_HIGH 289,11358
    GUEST_PDPTR2_HIGH               = 0x0000280f,x0000280f289,11358
    GUEST_PDPTR3 290,11408
    GUEST_PDPTR3                    = 0x00002810,x00002810290,11408
    GUEST_PDPTR3_HIGH 291,11458
    GUEST_PDPTR3_HIGH               = 0x00002811,x00002811291,11458
    HOST_PAT 292,11508
    HOST_PAT                        = 0x00002c00,x00002c00292,11508
    HOST_PAT_HIGH 293,11558
    HOST_PAT_HIGH                   = 0x00002c01,x00002c01293,11558
    PIN_BASED_VM_EXEC_CONTROL 294,11608
    PIN_BASED_VM_EXEC_CONTROL       = 0x00004000,x00004000294,11608
    CPU_BASED_VM_EXEC_CONTROL 295,11658
    CPU_BASED_VM_EXEC_CONTROL       = 0x00004002,x00004002295,11658
    EXCEPTION_BITMAP 296,11708
    EXCEPTION_BITMAP                = 0x00004004,x00004004296,11708
    PAGE_FAULT_ERROR_CODE_MASK 297,11758
    PAGE_FAULT_ERROR_CODE_MASK      = 0x00004006,x00004006297,11758
    PAGE_FAULT_ERROR_CODE_MATCH 298,11808
    PAGE_FAULT_ERROR_CODE_MATCH     = 0x00004008,x00004008298,11808
    CR3_TARGET_COUNT 299,11858
    CR3_TARGET_COUNT                = 0x0000400a,x0000400a299,11858
    VM_EXIT_CONTROLS 300,11908
    VM_EXIT_CONTROLS                = 0x0000400c,x0000400c300,11908
    VM_EXIT_MSR_STORE_COUNT 301,11958
    VM_EXIT_MSR_STORE_COUNT         = 0x0000400e,x0000400e301,11958
    VM_EXIT_MSR_LOAD_COUNT 302,12008
    VM_EXIT_MSR_LOAD_COUNT          = 0x00004010,x00004010302,12008
    VM_ENTRY_CONTROLS 303,12058
    VM_ENTRY_CONTROLS               = 0x00004012,x00004012303,12058
    VM_ENTRY_MSR_LOAD_COUNT 304,12108
    VM_ENTRY_MSR_LOAD_COUNT         = 0x00004014,x00004014304,12108
    VM_ENTRY_INTR_INFO 305,12158
    VM_ENTRY_INTR_INFO              = 0x00004016,x00004016305,12158
    VM_ENTRY_EXCEPTION_ERROR_CODE 306,12208
    VM_ENTRY_EXCEPTION_ERROR_CODE   = 0x00004018,x00004018306,12208
    VM_ENTRY_INSTRUCTION_LEN 307,12258
    VM_ENTRY_INSTRUCTION_LEN        = 0x0000401a,x0000401a307,12258
    TPR_THRESHOLD 308,12308
    TPR_THRESHOLD                   = 0x0000401c,x0000401c308,12308
    SECONDARY_VM_EXEC_CONTROL 309,12358
    SECONDARY_VM_EXEC_CONTROL       = 0x0000401e,x0000401e309,12358
    PLE_GAP 310,12408
    PLE_GAP                         = 0x00004020,x00004020310,12408
    PLE_WINDOW 311,12458
    PLE_WINDOW                      = 0x00004022,x00004022311,12458
    VM_INSTRUCTION_ERROR 312,12508
    VM_INSTRUCTION_ERROR            = 0x00004400,x00004400312,12508
    VM_EXIT_REASON 313,12558
    VM_EXIT_REASON                  = 0x00004402,x00004402313,12558
    VM_EXIT_INTR_INFO 314,12608
    VM_EXIT_INTR_INFO               = 0x00004404,x00004404314,12608
    VM_EXIT_INTR_ERROR_CODE 315,12658
    VM_EXIT_INTR_ERROR_CODE         = 0x00004406,x00004406315,12658
    IDT_VECTORING_INFO 316,12708
    IDT_VECTORING_INFO              = 0x00004408,x00004408316,12708
    IDT_VECTORING_ERROR_CODE 317,12758
    IDT_VECTORING_ERROR_CODE        = 0x0000440a,x0000440a317,12758
    VM_EXIT_INSTRUCTION_LEN 318,12808
    VM_EXIT_INSTRUCTION_LEN         = 0x0000440c,x0000440c318,12808
    VMX_INSTRUCTION_INFO 319,12858
    VMX_INSTRUCTION_INFO            = 0x0000440e,x0000440e319,12858
    GUEST_ES_LIMIT 320,12908
    GUEST_ES_LIMIT                  = 0x00004800,x00004800320,12908
    GUEST_CS_LIMIT 321,12958
    GUEST_CS_LIMIT                  = 0x00004802,x00004802321,12958
    GUEST_SS_LIMIT 322,13008
    GUEST_SS_LIMIT                  = 0x00004804,x00004804322,13008
    GUEST_DS_LIMIT 323,13058
    GUEST_DS_LIMIT                  = 0x00004806,x00004806323,13058
    GUEST_FS_LIMIT 324,13108
    GUEST_FS_LIMIT                  = 0x00004808,x00004808324,13108
    GUEST_GS_LIMIT 325,13158
    GUEST_GS_LIMIT                  = 0x0000480a,x0000480a325,13158
    GUEST_LDTR_LIMIT 326,13208
    GUEST_LDTR_LIMIT                = 0x0000480c,x0000480c326,13208
    GUEST_TR_LIMIT 327,13258
    GUEST_TR_LIMIT                  = 0x0000480e,x0000480e327,13258
    GUEST_GDTR_LIMIT 328,13308
    GUEST_GDTR_LIMIT                = 0x00004810,x00004810328,13308
    GUEST_IDTR_LIMIT 329,13358
    GUEST_IDTR_LIMIT                = 0x00004812,x00004812329,13358
    GUEST_ES_AR_BYTES 330,13408
    GUEST_ES_AR_BYTES               = 0x00004814,x00004814330,13408
    GUEST_CS_AR_BYTES 331,13458
    GUEST_CS_AR_BYTES               = 0x00004816,x00004816331,13458
    GUEST_SS_AR_BYTES 332,13508
    GUEST_SS_AR_BYTES               = 0x00004818,x00004818332,13508
    GUEST_DS_AR_BYTES 333,13558
    GUEST_DS_AR_BYTES               = 0x0000481a,x0000481a333,13558
    GUEST_FS_AR_BYTES 334,13608
    GUEST_FS_AR_BYTES               = 0x0000481c,x0000481c334,13608
    GUEST_GS_AR_BYTES 335,13658
    GUEST_GS_AR_BYTES               = 0x0000481e,x0000481e335,13658
    GUEST_LDTR_AR_BYTES 336,13708
    GUEST_LDTR_AR_BYTES             = 0x00004820,x00004820336,13708
    GUEST_TR_AR_BYTES 337,13758
    GUEST_TR_AR_BYTES               = 0x00004822,x00004822337,13758
    GUEST_INTERRUPTIBILITY_INFO 338,13808
    GUEST_INTERRUPTIBILITY_INFO     = 0x00004824,x00004824338,13808
    GUEST_ACTIVITY_STATE 339,13858
    GUEST_ACTIVITY_STATE            = 0x00004826,x00004826339,13858
    GUEST_SYSENTER_CS 340,13908
    GUEST_SYSENTER_CS               = 0x0000482A,x0000482A340,13908
    HOST_SYSENTER_CS 341,13958
    HOST_SYSENTER_CS                = 0x00004c00,x00004c00341,13958
    CR0_GUEST_HOST_MASK 342,14008
    CR0_GUEST_HOST_MASK             = 0x00006000,x00006000342,14008
    CR4_GUEST_HOST_MASK 343,14058
    CR4_GUEST_HOST_MASK             = 0x00006002,x00006002343,14058
    CR0_READ_SHADOW 344,14108
    CR0_READ_SHADOW                 = 0x00006004,x00006004344,14108
    CR4_READ_SHADOW 345,14158
    CR4_READ_SHADOW                 = 0x00006006,x00006006345,14158
    CR3_TARGET_VALUE0 346,14208
    CR3_TARGET_VALUE0               = 0x00006008,x00006008346,14208
    CR3_TARGET_VALUE1 347,14258
    CR3_TARGET_VALUE1               = 0x0000600a,x0000600a347,14258
    CR3_TARGET_VALUE2 348,14308
    CR3_TARGET_VALUE2               = 0x0000600c,x0000600c348,14308
    CR3_TARGET_VALUE3 349,14358
    CR3_TARGET_VALUE3               = 0x0000600e,x0000600e349,14358
    EXIT_QUALIFICATION 350,14408
    EXIT_QUALIFICATION              = 0x00006400,x00006400350,14408
    GUEST_LINEAR_ADDRESS 351,14458
    GUEST_LINEAR_ADDRESS            = 0x0000640a,x0000640a351,14458
    GUEST_CR0 352,14508
    GUEST_CR0                       = 0x00006800,x00006800352,14508
    GUEST_CR3 353,14558
    GUEST_CR3                       = 0x00006802,x00006802353,14558
    GUEST_CR4 354,14608
    GUEST_CR4                       = 0x00006804,x00006804354,14608
    GUEST_ES_BASE 355,14658
    GUEST_ES_BASE                   = 0x00006806,x00006806355,14658
    GUEST_CS_BASE 356,14708
    GUEST_CS_BASE                   = 0x00006808,x00006808356,14708
    GUEST_SS_BASE 357,14758
    GUEST_SS_BASE                   = 0x0000680a,x0000680a357,14758
    GUEST_DS_BASE 358,14808
    GUEST_DS_BASE                   = 0x0000680c,x0000680c358,14808
    GUEST_FS_BASE 359,14858
    GUEST_FS_BASE                   = 0x0000680e,x0000680e359,14858
    GUEST_GS_BASE 360,14908
    GUEST_GS_BASE                   = 0x00006810,x00006810360,14908
    GUEST_LDTR_BASE 361,14958
    GUEST_LDTR_BASE                 = 0x00006812,x00006812361,14958
    GUEST_TR_BASE 362,15008
    GUEST_TR_BASE                   = 0x00006814,x00006814362,15008
    GUEST_GDTR_BASE 363,15058
    GUEST_GDTR_BASE                 = 0x00006816,x00006816363,15058
    GUEST_IDTR_BASE 364,15108
    GUEST_IDTR_BASE                 = 0x00006818,x00006818364,15108
    GUEST_DR7 365,15158
    GUEST_DR7                       = 0x0000681a,x0000681a365,15158
    GUEST_RSP 366,15208
    GUEST_RSP                       = 0x0000681c,x0000681c366,15208
    GUEST_RIP 367,15258
    GUEST_RIP                       = 0x0000681e,x0000681e367,15258
    GUEST_RFLAGS 368,15308
    GUEST_RFLAGS                    = 0x00006820,x00006820368,15308
    GUEST_PENDING_DBG_EXCEPTIONS 369,15358
    GUEST_PENDING_DBG_EXCEPTIONS    = 0x00006822,x00006822369,15358
    GUEST_SYSENTER_ESP 370,15408
    GUEST_SYSENTER_ESP              = 0x00006824,x00006824370,15408
    GUEST_SYSENTER_EIP 371,15458
    GUEST_SYSENTER_EIP              = 0x00006826,x00006826371,15458
    HOST_CR0 372,15508
    HOST_CR0                        = 0x00006c00,x00006c00372,15508
    HOST_CR3 373,15558
    HOST_CR3                        = 0x00006c02,x00006c02373,15558
    HOST_CR4 374,15608
    HOST_CR4                        = 0x00006c04,x00006c04374,15608
    HOST_FS_BASE 375,15658
    HOST_FS_BASE                    = 0x00006c06,x00006c06375,15658
    HOST_GS_BASE 376,15708
    HOST_GS_BASE                    = 0x00006c08,x00006c08376,15708
    HOST_TR_BASE 377,15758
    HOST_TR_BASE                    = 0x00006c0a,x00006c0a377,15758
    HOST_GDTR_BASE 378,15808
    HOST_GDTR_BASE                  = 0x00006c0c,x00006c0c378,15808
    HOST_IDTR_BASE 379,15858
    HOST_IDTR_BASE                  = 0x00006c0e,x00006c0e379,15858
    HOST_SYSENTER_ESP 380,15908
    HOST_SYSENTER_ESP               = 0x00006c10,x00006c10380,15908
    HOST_SYSENTER_EIP 381,15958
    HOST_SYSENTER_EIP               = 0x00006c12,x00006c12381,15958
    HOST_RSP 382,16008
    HOST_RSP                        = 0x00006c14,x00006c14382,16008
    HOST_RIP 383,16058
    HOST_RIP                        = 0x00006c16,x00006c16383,16058
#define VMCS_VPID_WIDTH 386,16112

xen/include/asm-x86/hvm/iommu.h,158
#define __ASM_X86_HVM_IOMMU_H__2,32
static inline const struct iommu_ops *iommu_get_ops(iommu_get_ops12,267
static inline int iommu_hardware_setup(27,544

xen/include/asm-x86/hvm/irq.h,1010
#define __ASM_X86_HVM_IRQ_H__23,891
struct hvm_irq 30,1028
    struct hvm_hw_pci_irqs pci_intx;35,1150
    struct hvm_hw_isa_irqs isa_irq;41,1314
    struct hvm_hw_pci_link pci_link;49,1620
    uint32_t callback_via_asserted;52,1732
            HVMIRQ_callback_none,55,1795
            HVMIRQ_callback_gsi,56,1829
            HVMIRQ_callback_pci_intx,57,1862
            HVMIRQ_callback_vector58,1900
        } callback_via_type;59,1935
        uint32_t gsi;62,1983
        struct { uint8_t dev,63,2005
        struct { uint8_t dev, intx;63,2005
        struct { uint8_t dev, intx; } pci;63,2005
        uint32_t vector;64,2048
    } callback_via;65,2073
    u8 pci_link_assert_count[pci_link_assert_count68,2154
    u8 gsi_assert_count[gsi_assert_count80,2598
    u8 round_robin_prev_vcpu;90,2900
    struct hvm_irq_dpci *dpci;dpci92,2931
#define hvm_pci_intx_gsi(95,2966
#define hvm_pci_intx_link(97,3058
#define hvm_isa_irq_to_gsi(100,3125
#define SUPPORT_MSI_REMAPPING 112,3631

xen/include/asm-x86/hvm/hvm.h,4440
#define __ASM_X86_HVM_HVM_H__22,884
enum hvm_intsrc 31,1093
    hvm_intsrc_none,32,1111
    hvm_intsrc_pic,33,1132
    hvm_intsrc_lapic,34,1152
    hvm_intsrc_nmi,35,1174
    hvm_intsrc_mce,36,1194
    hvm_intsrc_vector37,1214
struct hvm_intack 39,1239
    uint8_t source;40,1259
    uint8_t vector;41,1301
#define hvm_intack(43,1324
#define hvm_intack_none 44,1403
#define hvm_intack_pic(45,1454
#define hvm_intack_lapic(46,1506
#define hvm_intack_nmi 47,1560
#define hvm_intack_mce 48,1610
#define hvm_intack_vector(49,1661
enum hvm_intblk 50,1716
    hvm_intblk_none,51,1734
    hvm_intblk_shadow,52,1792
    hvm_intblk_rflags_ie,53,1845
    hvm_intblk_tpr,54,1892
    hvm_intblk_nmi_iret 55,1943
#define HVM_INTR_SHADOW_STI 59,2077
#define HVM_INTR_SHADOW_MOV_SS 60,2119
#define HVM_INTR_SHADOW_SMI 61,2161
#define HVM_INTR_SHADOW_NMI 62,2203
#define HVM_HAP_SUPERPAGE_2MB 69,2363
#define HVM_HAP_SUPERPAGE_1GB 70,2406
struct hvm_function_table 77,2656
    char *name;name78,2684
    int hap_supported;81,2745
    int hap_capabilities;84,2806
    int  (*domain_initialise)domain_initialise90,2901
    void (*domain_destroy)domain_destroy91,2950
    int  (*vcpu_initialise)vcpu_initialise92,2996
    void (*vcpu_destroy)vcpu_destroy93,3041
    void (*save_cpu_ctxt)save_cpu_ctxt96,3147
    int (*load_cpu_ctxt)load_cpu_ctxt97,3215
    unsigned int (*get_interrupt_shadow)get_interrupt_shadow100,3331
    void (*set_interrupt_shadow)set_interrupt_shadow101,3389
    int (*guest_x86_mode)guest_x86_mode102,3465
    void (*get_segment_register)get_segment_register103,3508
    void (*set_segment_register)set_segment_register105,3643
    void (*update_host_cr3)update_host_cr3111,3867
    void (*update_guest_cr)update_guest_cr116,4000
    void (*update_guest_efer)update_guest_efer117,4062
    void (*set_tsc_offset)set_tsc_offset119,4110
    void (*inject_exception)inject_exception121,4167
    void (*init_hypercall_page)init_hypercall_page124,4280
    int  (*event_pending)event_pending126,4354
    int  (*do_pmu_interrupt)do_pmu_interrupt127,4397
    int  (*cpu_up_prepare)cpu_up_prepare129,4456
    void (*cpu_dead)cpu_dead130,4502
    int  (*cpu_up)cpu_up132,4543
    void (*cpu_down)cpu_down133,4569
    void (*cpuid_intercept)cpuid_intercept136,4674
    void (*wbinvd_intercept)wbinvd_intercept139,4796
    void (*fpu_dirty_intercept)fpu_dirty_intercept140,4832
    int (*msr_read_intercept)msr_read_intercept141,4871
    int (*msr_write_intercept)msr_write_intercept142,4943
    void (*invlpg_intercept)invlpg_intercept143,5015
    void (*set_uc_mode)set_uc_mode144,5066
    void (*set_info_guest)set_info_guest145,5107
    void (*set_rdtsc_exiting)set_rdtsc_exiting146,5151
#define hvm_paging_enabled(175,6098
#define hvm_wp_enabled(177,6184
#define hvm_pae_enabled(179,6266
#define hvm_nx_enabled(181,6373
#define hvm_hap_has_1gb(184,6452
#define hvm_hap_has_2mb(186,6538
#define hvm_long_mode_enabled(190,6643
#define hvm_long_mode_enabled(193,6731
hvm_guest_x86_mode(200,6878
hvm_update_host_cr3(207,7003
static inline void hvm_update_guest_cr(212,7078
static inline void hvm_update_guest_efer(217,7193
static inline void hvm_flush_guest_tlbs(227,7482
hvm_get_segment_register(237,7718
hvm_set_segment_register(244,7909
#define is_viridian_domain(250,8081
hvm_inject_exception(260,8518
static inline int hvm_event_pending(265,8651
static inline int hvm_do_pmu_interrupt(270,8747
#define HVM_CR0_GUEST_RESERVED_BITS 276,8933
#define HVM_CR4_HOST_MASK 284,9266
#define HVM_CR4_GUEST_RESERVED_BITS 288,9415
#define HVM_TRAP_MASK 297,9864
#define X86_EVENTTYPE_EXT_INTR 304,10131
#define X86_EVENTTYPE_NMI 305,10205
#define X86_EVENTTYPE_HW_EXCEPTION 306,10279
#define X86_EVENTTYPE_SW_INTERRUPT 307,10353
#define X86_EVENTTYPE_SW_EXCEPTION 308,10427
static inline int hvm_cpu_up(316,10692
static inline void hvm_cpu_down(321,10788
enum hvm_task_switch_reason 327,10891
enum hvm_task_switch_reason { TSW_jmp,327,10891
enum hvm_task_switch_reason { TSW_jmp, TSW_iret,327,10891
enum hvm_task_switch_reason { TSW_jmp, TSW_iret, TSW_call_or_int 327,10891
enum hvm_access_type 332,11073
    hvm_access_insn_fetch,333,11096
    hvm_access_none,334,11123
    hvm_access_read,335,11144
    hvm_access_write336,11165
static inline void hvm_set_info_guest(351,11567
#define hvm_msr_tsc_aux(361,11807

xen/include/asm-x86/hvm/asid.h,38
#define __ASM_X86_HVM_ASID_H__21,825

xen/include/asm-x86/hvm/svm/amd-iommu-acpi.h,4874
#define _ASM_X86_64_AMD_IOMMU_ACPI_H22,909
#define AMD_IOMMU_ACPI_IVRS_SIG 27,1015
#define AMD_IOMMU_ACPI_IVHD_TYPE 28,1065
#define AMD_IOMMU_ACPI_IVMD_ALL_TYPE 29,1109
#define AMD_IOMMU_ACPI_IVMD_ONE_TYPE 30,1157
#define AMD_IOMMU_ACPI_IVMD_RANGE_TYPE 31,1205
#define AMD_IOMMU_ACPI_IVMD_IOMMU_TYPE 32,1253
#define AMD_IOMMU_ACPI_IVHD_DEV_U32_PAD 35,1330
#define AMD_IOMMU_ACPI_IVHD_DEV_SELECT 36,1379
#define AMD_IOMMU_ACPI_IVHD_DEV_RANGE_START 37,1424
#define AMD_IOMMU_ACPI_IVHD_DEV_RANGE_END 38,1473
#define AMD_IOMMU_ACPI_IVHD_DEV_U64_PAD 41,1547
#define AMD_IOMMU_ACPI_IVHD_DEV_ALIAS_SELECT 42,1597
#define AMD_IOMMU_ACPI_IVHD_DEV_ALIAS_RANGE 43,1647
#define AMD_IOMMU_ACPI_IVHD_DEV_EXT_SELECT 44,1697
#define AMD_IOMMU_ACPI_IVHD_DEV_EXT_RANGE 45,1743
#define AMD_IOMMU_ACPI_IVHD_DEV_SPECIAL 46,1789
#define AMD_IOMMU_ACPI_COHERENT_MASK 49,1859
#define AMD_IOMMU_ACPI_COHERENT_SHIFT 50,1907
#define AMD_IOMMU_ACPI_IOTLB_SUP_MASK 51,1952
#define AMD_IOMMU_ACPI_IOTLB_SUP_SHIFT 52,2000
#define AMD_IOMMU_ACPI_ISOC_MASK 53,2045
#define AMD_IOMMU_ACPI_ISOC_SHIFT 54,2089
#define AMD_IOMMU_ACPI_RES_PASS_PW_MASK 55,2130
#define AMD_IOMMU_ACPI_RES_PASS_PW_SHIFT 56,2182
#define AMD_IOMMU_ACPI_PASS_PW_MASK 57,2227
#define AMD_IOMMU_ACPI_PASS_PW_SHIFT 58,2275
#define AMD_IOMMU_ACPI_HT_TUN_ENB_MASK 59,2320
#define AMD_IOMMU_ACPI_HT_TUN_ENB_SHIFT 60,2368
#define AMD_IOMMU_ACPI_LINT1_PASS_MASK 63,2442
#define AMD_IOMMU_ACPI_LINT1_PASS_SHIFT 64,2490
#define AMD_IOMMU_ACPI_LINT0_PASS_MASK 65,2539
#define AMD_IOMMU_ACPI_LINT0_PASS_SHIFT 66,2587
#define AMD_IOMMU_ACPI_SYS_MGT_MASK 67,2636
#define AMD_IOMMU_ACPI_SYS_MGT_SHIFT 68,2684
#define AMD_IOMMU_ACPI_NMI_PASS_MASK 69,2729
#define AMD_IOMMU_ACPI_NMI_PASS_SHIFT 70,2777
#define AMD_IOMMU_ACPI_EINT_PASS_MASK 71,2822
#define AMD_IOMMU_ACPI_EINT_PASS_SHIFT 72,2870
#define AMD_IOMMU_ACPI_INIT_PASS_MASK 73,2915
#define AMD_IOMMU_ACPI_INIT_PASS_SHIFT 74,2963
#define AMD_IOMMU_ACPI_ATS_DISABLED_MASK 77,3042
#define AMD_IOMMU_ACPI_ATS_DISABLED_SHIFT 78,3096
#define AMD_IOMMU_ACPI_EXCLUSION_RANGE_MASK 81,3167
#define AMD_IOMMU_ACPI_EXCLUSION_RANGE_SHIFT 82,3219
#define AMD_IOMMU_ACPI_IW_PERMISSION_MASK 83,3268
#define AMD_IOMMU_ACPI_IW_PERMISSION_SHIFT 84,3316
#define AMD_IOMMU_ACPI_IR_PERMISSION_MASK 85,3361
#define AMD_IOMMU_ACPI_IR_PERMISSION_SHIFT 86,3409
#define AMD_IOMMU_ACPI_UNITY_MAPPING_MASK 87,3454
#define AMD_IOMMU_ACPI_UNITY_MAPPING_SHIFT 88,3502
#define ACPI_OEM_ID_SIZE 90,3548
#define ACPI_OEM_TABLE_ID_SIZE 91,3590
struct acpi_ivrs_table_header 94,3649
   struct acpi_table_header acpi_header;95,3681
   u32 io_info;96,3722
   u8  reserved[reserved97,3738
struct acpi_ivrs_block_header 100,3762
   u8  type;101,3794
   u8  flags;102,3807
   u16 length;103,3821
   u16 dev_id;104,3836
struct acpi_ivhd_block_header 107,3855
   struct acpi_ivrs_block_header header;108,3887
   u16 cap_offset;109,3928
   u64 mmio_base;110,3947
   u16 pci_segment;111,3965
   u16 iommu_info;112,3985
   u8 reserved[reserved113,4004
struct acpi_ivhd_device_header 116,4027
   u8  type;117,4060
   u16 dev_id;118,4073
   u8  flags;119,4088
struct acpi_ivhd_device_trailer 122,4106
   u8  type;123,4140
   u16 dev_id;124,4153
   u8  reserved;125,4168
struct acpi_ivhd_device_range 128,4189
   struct acpi_ivhd_device_header header;129,4221
   struct acpi_ivhd_device_trailer trailer;130,4263
struct acpi_ivhd_device_alias 133,4311
   struct acpi_ivhd_device_header header;134,4343
   u8  reserved1;135,4385
   u16 dev_id;136,4403
   u8  reserved2;137,4418
struct acpi_ivhd_device_alias_range 140,4440
   struct acpi_ivhd_device_alias alias;141,4478
   struct acpi_ivhd_device_trailer trailer;142,4518
struct acpi_ivhd_device_extended 145,4566
   struct acpi_ivhd_device_header header;146,4601
   u32 ext_flags;147,4643
struct acpi_ivhd_device_extended_range 150,4665
   struct acpi_ivhd_device_extended extended;151,4706
   struct acpi_ivhd_device_trailer trailer;152,4752
struct acpi_ivhd_device_special 155,4800
   struct acpi_ivhd_device_header header;156,4834
   u8  handle;157,4876
   u16 dev_id;158,4891
   u8  variety;159,4906
union acpi_ivhd_device 162,4926
   struct acpi_ivhd_device_header header;163,4951
   struct acpi_ivhd_device_range range;164,4993
   struct acpi_ivhd_device_alias alias;165,5033
   struct acpi_ivhd_device_alias_range alias_range;166,5073
   struct acpi_ivhd_device_extended extended;167,5125
   struct acpi_ivhd_device_extended_range extended_range;168,5171
   struct acpi_ivhd_device_special special;169,5229
struct acpi_ivmd_block_header 172,5277
   struct acpi_ivrs_block_header header;173,5309
       u16 last_dev_id;175,5361
       u16 cap_offset;176,5385
       u16 reserved1;177,5408
   u64 reserved2;179,5436
   u64 start_addr;180,5454
   u64 mem_length;181,5473

xen/include/asm-x86/hvm/svm/vmcb.h,13472
#define __ASM_X86_HVM_SVM_VMCB_H__21,842
enum GenericIntercept1bits28,956
    GENERAL1_INTERCEPT_INTR 30,985
    GENERAL1_INTERCEPT_NMI 31,1032
    GENERAL1_INTERCEPT_SMI 32,1079
    GENERAL1_INTERCEPT_INIT 33,1126
    GENERAL1_INTERCEPT_VINTR 34,1173
    GENERAL1_INTERCEPT_CR0_SEL_WRITE 35,1220
    GENERAL1_INTERCEPT_IDTR_READ 36,1268
    GENERAL1_INTERCEPT_GDTR_READ 37,1315
    GENERAL1_INTERCEPT_LDTR_READ 38,1362
    GENERAL1_INTERCEPT_TR_READ 39,1409
    GENERAL1_INTERCEPT_IDTR_WRITE 40,1456
    GENERAL1_INTERCEPT_GDTR_WRITE 41,1504
    GENERAL1_INTERCEPT_LDTR_WRITE 42,1552
    GENERAL1_INTERCEPT_TR_WRITE 43,1600
    GENERAL1_INTERCEPT_RDTSC 44,1648
    GENERAL1_INTERCEPT_RDPMC 45,1696
    GENERAL1_INTERCEPT_PUSHF 46,1744
    GENERAL1_INTERCEPT_POPF 47,1792
    GENERAL1_INTERCEPT_CPUID 48,1840
    GENERAL1_INTERCEPT_RSM 49,1888
    GENERAL1_INTERCEPT_IRET 50,1936
    GENERAL1_INTERCEPT_SWINT 51,1984
    GENERAL1_INTERCEPT_INVD 52,2032
    GENERAL1_INTERCEPT_PAUSE 53,2080
    GENERAL1_INTERCEPT_HLT 54,2128
    GENERAL1_INTERCEPT_INVLPG 55,2176
    GENERAL1_INTERCEPT_INVLPGA 56,2224
    GENERAL1_INTERCEPT_IOIO_PROT 57,2272
    GENERAL1_INTERCEPT_MSR_PROT 58,2320
    GENERAL1_INTERCEPT_TASK_SWITCH 59,2368
    GENERAL1_INTERCEPT_FERR_FREEZE 60,2416
    GENERAL1_INTERCEPT_SHUTDOWN_EVT 61,2464
enum GenericIntercept2bits65,2542
    GENERAL2_INTERCEPT_VMRUN 67,2571
    GENERAL2_INTERCEPT_VMMCALL 68,2612
    GENERAL2_INTERCEPT_VMLOAD 69,2653
    GENERAL2_INTERCEPT_VMSAVE 70,2694
    GENERAL2_INTERCEPT_STGI 71,2735
    GENERAL2_INTERCEPT_CLGI 72,2776
    GENERAL2_INTERCEPT_SKINIT 73,2817
    GENERAL2_INTERCEPT_RDTSCP 74,2858
    GENERAL2_INTERCEPT_ICEBP 75,2899
    GENERAL2_INTERCEPT_WBINVD 76,2940
    GENERAL2_INTERCEPT_MONITOR 77,2981
    GENERAL2_INTERCEPT_MWAIT 78,3023
    GENERAL2_INTERCEPT_MWAIT_CONDITIONAL 79,3065
    GENERAL2_INTERCEPT_XSETBV 80,3117
enum CRInterceptBits85,3197
    CR_INTERCEPT_CR0_READ 87,3220
    CR_INTERCEPT_CR1_READ 88,3258
    CR_INTERCEPT_CR2_READ 89,3296
    CR_INTERCEPT_CR3_READ 90,3334
    CR_INTERCEPT_CR4_READ 91,3372
    CR_INTERCEPT_CR5_READ 92,3410
    CR_INTERCEPT_CR6_READ 93,3448
    CR_INTERCEPT_CR7_READ 94,3486
    CR_INTERCEPT_CR8_READ 95,3524
    CR_INTERCEPT_CR9_READ 96,3562
    CR_INTERCEPT_CR10_READ 97,3600
    CR_INTERCEPT_CR11_READ 98,3639
    CR_INTERCEPT_CR12_READ 99,3678
    CR_INTERCEPT_CR13_READ 100,3717
    CR_INTERCEPT_CR14_READ 101,3756
    CR_INTERCEPT_CR15_READ 102,3795
    CR_INTERCEPT_CR0_WRITE 103,3834
    CR_INTERCEPT_CR1_WRITE 104,3873
    CR_INTERCEPT_CR2_WRITE 105,3912
    CR_INTERCEPT_CR3_WRITE 106,3951
    CR_INTERCEPT_CR4_WRITE 107,3990
    CR_INTERCEPT_CR5_WRITE 108,4029
    CR_INTERCEPT_CR6_WRITE 109,4068
    CR_INTERCEPT_CR7_WRITE 110,4107
    CR_INTERCEPT_CR8_WRITE 111,4146
    CR_INTERCEPT_CR9_WRITE 112,4185
    CR_INTERCEPT_CR10_WRITE 113,4224
    CR_INTERCEPT_CR11_WRITE 114,4263
    CR_INTERCEPT_CR12_WRITE 115,4302
    CR_INTERCEPT_CR13_WRITE 116,4341
    CR_INTERCEPT_CR14_WRITE 117,4380
    CR_INTERCEPT_CR15_WRITE 118,4419
enum DRInterceptBits123,4495
    DR_INTERCEPT_DR0_READ 125,4518
    DR_INTERCEPT_DR1_READ 126,4556
    DR_INTERCEPT_DR2_READ 127,4594
    DR_INTERCEPT_DR3_READ 128,4632
    DR_INTERCEPT_DR4_READ 129,4670
    DR_INTERCEPT_DR5_READ 130,4708
    DR_INTERCEPT_DR6_READ 131,4746
    DR_INTERCEPT_DR7_READ 132,4784
    DR_INTERCEPT_DR8_READ 133,4822
    DR_INTERCEPT_DR9_READ 134,4860
    DR_INTERCEPT_DR10_READ 135,4898
    DR_INTERCEPT_DR11_READ 136,4937
    DR_INTERCEPT_DR12_READ 137,4976
    DR_INTERCEPT_DR13_READ 138,5015
    DR_INTERCEPT_DR14_READ 139,5054
    DR_INTERCEPT_DR15_READ 140,5093
    DR_INTERCEPT_DR0_WRITE 141,5132
    DR_INTERCEPT_DR1_WRITE 142,5171
    DR_INTERCEPT_DR2_WRITE 143,5210
    DR_INTERCEPT_DR3_WRITE 144,5249
    DR_INTERCEPT_DR4_WRITE 145,5288
    DR_INTERCEPT_DR5_WRITE 146,5327
    DR_INTERCEPT_DR6_WRITE 147,5366
    DR_INTERCEPT_DR7_WRITE 148,5405
    DR_INTERCEPT_DR8_WRITE 149,5444
    DR_INTERCEPT_DR9_WRITE 150,5483
    DR_INTERCEPT_DR10_WRITE 151,5522
    DR_INTERCEPT_DR11_WRITE 152,5561
    DR_INTERCEPT_DR12_WRITE 153,5600
    DR_INTERCEPT_DR13_WRITE 154,5639
    DR_INTERCEPT_DR14_WRITE 155,5678
    DR_INTERCEPT_DR15_WRITE 156,5717
enum VMEXIT_EXITCODE159,5760
    VMEXIT_CR0_READ 162,5825
    VMEXIT_CR1_READ 163,5865
    VMEXIT_CR2_READ 164,5905
    VMEXIT_CR3_READ 165,5945
    VMEXIT_CR4_READ 166,5985
    VMEXIT_CR5_READ 167,6025
    VMEXIT_CR6_READ 168,6065
    VMEXIT_CR7_READ 169,6105
    VMEXIT_CR8_READ 170,6145
    VMEXIT_CR9_READ 171,6185
    VMEXIT_CR10_READ 172,6225
    VMEXIT_CR11_READ 173,6265
    VMEXIT_CR12_READ 174,6305
    VMEXIT_CR13_READ 175,6345
    VMEXIT_CR14_READ 176,6385
    VMEXIT_CR15_READ 177,6425
    VMEXIT_CR0_WRITE 180,6509
    VMEXIT_CR1_WRITE 181,6550
    VMEXIT_CR2_WRITE 182,6591
    VMEXIT_CR3_WRITE 183,6632
    VMEXIT_CR4_WRITE 184,6673
    VMEXIT_CR5_WRITE 185,6714
    VMEXIT_CR6_WRITE 186,6755
    VMEXIT_CR7_WRITE 187,6796
    VMEXIT_CR8_WRITE 188,6837
    VMEXIT_CR9_WRITE 189,6878
    VMEXIT_CR10_WRITE 190,6919
    VMEXIT_CR11_WRITE 191,6960
    VMEXIT_CR12_WRITE 192,7001
    VMEXIT_CR13_WRITE 193,7042
    VMEXIT_CR14_WRITE 194,7083
    VMEXIT_CR15_WRITE 195,7124
    VMEXIT_DR0_READ 198,7206
    VMEXIT_DR1_READ 199,7247
    VMEXIT_DR2_READ 200,7288
    VMEXIT_DR3_READ 201,7329
    VMEXIT_DR4_READ 202,7370
    VMEXIT_DR5_READ 203,7411
    VMEXIT_DR6_READ 204,7452
    VMEXIT_DR7_READ 205,7493
    VMEXIT_DR8_READ 206,7534
    VMEXIT_DR9_READ 207,7575
    VMEXIT_DR10_READ 208,7616
    VMEXIT_DR11_READ 209,7657
    VMEXIT_DR12_READ 210,7698
    VMEXIT_DR13_READ 211,7739
    VMEXIT_DR14_READ 212,7780
    VMEXIT_DR15_READ 213,7821
    VMEXIT_DR0_WRITE 216,7904
    VMEXIT_DR1_WRITE 217,7945
    VMEXIT_DR2_WRITE 218,7986
    VMEXIT_DR3_WRITE 219,8027
    VMEXIT_DR4_WRITE 220,8068
    VMEXIT_DR5_WRITE 221,8109
    VMEXIT_DR6_WRITE 222,8150
    VMEXIT_DR7_WRITE 223,8191
    VMEXIT_DR8_WRITE 224,8232
    VMEXIT_DR9_WRITE 225,8273
    VMEXIT_DR10_WRITE 226,8314
    VMEXIT_DR11_WRITE 227,8355
    VMEXIT_DR12_WRITE 228,8396
    VMEXIT_DR13_WRITE 229,8437
    VMEXIT_DR14_WRITE 230,8478
    VMEXIT_DR15_WRITE 231,8519
    VMEXIT_EXCEPTION_DE 234,8621
    VMEXIT_EXCEPTION_DB 235,8686
    VMEXIT_EXCEPTION_NMI 236,8736
    VMEXIT_EXCEPTION_BP 237,8803
    VMEXIT_EXCEPTION_OF 238,8858
    VMEXIT_EXCEPTION_BR 239,8911
    VMEXIT_EXCEPTION_UD 240,8967
    VMEXIT_EXCEPTION_NM 241,9025
    VMEXIT_EXCEPTION_DF 242,9090
    VMEXIT_EXCEPTION_09 243,9147
    VMEXIT_EXCEPTION_TS 244,9214
    VMEXIT_EXCEPTION_NP 245,9270
    VMEXIT_EXCEPTION_SS 246,9334
    VMEXIT_EXCEPTION_GP 247,9384
    VMEXIT_EXCEPTION_PF 248,9447
    VMEXIT_EXCEPTION_15 249,9502
    VMEXIT_EXCEPTION_MF 250,9555
    VMEXIT_EXCEPTION_AC 251,9636
    VMEXIT_EXCEPTION_MC 252,9696
    VMEXIT_EXCEPTION_XF 253,9754
    VMEXIT_INTR 258,9920
    VMEXIT_NMI 259,9966
    VMEXIT_SMI 260,10012
    VMEXIT_INIT 261,10058
    VMEXIT_VINTR 262,10104
    VMEXIT_CR0_SEL_WRITE 263,10150
    VMEXIT_IDTR_READ 264,10196
    VMEXIT_GDTR_READ 265,10242
    VMEXIT_LDTR_READ 266,10288
    VMEXIT_TR_READ 267,10334
    VMEXIT_IDTR_WRITE 268,10380
    VMEXIT_GDTR_WRITE 269,10426
    VMEXIT_LDTR_WRITE 270,10472
    VMEXIT_TR_WRITE 271,10518
    VMEXIT_RDTSC 272,10564
    VMEXIT_RDPMC 273,10610
    VMEXIT_PUSHF 274,10656
    VMEXIT_POPF 275,10702
    VMEXIT_CPUID 276,10748
    VMEXIT_RSM 277,10794
    VMEXIT_IRET 278,10840
    VMEXIT_SWINT 279,10886
    VMEXIT_INVD 280,10932
    VMEXIT_PAUSE 281,10978
    VMEXIT_HLT 282,11024
    VMEXIT_INVLPG 283,11070
    VMEXIT_INVLPGA 284,11116
    VMEXIT_IOIO 285,11162
    VMEXIT_MSR 286,11208
    VMEXIT_TASK_SWITCH 287,11254
    VMEXIT_FERR_FREEZE 288,11300
    VMEXIT_SHUTDOWN 289,11346
    VMEXIT_VMRUN 290,11392
    VMEXIT_VMMCALL 291,11438
    VMEXIT_VMLOAD 292,11484
    VMEXIT_VMSAVE 293,11530
    VMEXIT_STGI 294,11576
    VMEXIT_CLGI 295,11622
    VMEXIT_SKINIT 296,11668
    VMEXIT_RDTSCP 297,11714
    VMEXIT_ICEBP 298,11760
    VMEXIT_WBINVD 299,11806
    VMEXIT_MONITOR 300,11852
    VMEXIT_MWAIT 301,11898
    VMEXIT_MWAIT_CONDITIONAL=302,11944
    VMEXIT_XSETBV 303,11990
    VMEXIT_NPF 304,12036
    VMEXIT_INVALID 305,12105
typedef struct segment_register svm_segment_register_t;309,12214
    u64 bytes;313,12288
        u64 vector:vector316,12321
        u64 type:type317,12347
        u64 ev:ev318,12373
        u64 resvd1:resvd1319,12399
        u64 v:v320,12425
        u64 errorcode:errorcode321,12451
    } fields;322,12477
} __attribute__ ((packed)) eventinj_t;323,12491
    u64 bytes;327,12548
        u64 tpr:tpr330,12581
        u64 irq:irq331,12610
        u64 rsvd0:rsvd0332,12639
        u64 prio:prio333,12668
        u64 ign_tpr:ign_tpr334,12697
        u64 rsvd1:rsvd1335,12726
        u64 intr_masking:intr_masking336,12755
        u64 rsvd2:rsvd2337,12784
        u64 vector:vector338,12813
        u64 rsvd3:rsvd3339,12842
    } fields;340,12871
} __attribute__ ((packed)) vintr_t;341,12885
    u64 bytes;345,12938
        u64 type:type348,12971
        u64 rsv0:rsv0349,12992
        u64 str:str350,13013
        u64 rep:rep351,13034
        u64 sz8:sz8352,13055
        u64 sz16:sz16353,13076
        u64 sz32:sz32354,13097
        u64 rsv1:rsv1355,13118
        u64 port:port356,13139
    } fields;357,13161
} __attribute__ ((packed)) ioio_info_t;358,13175
    u64 bytes;362,13232
        u64 enable:enable365,13264
    } fields;366,13286
} __attribute__ ((packed)) lbrctrl_t;367,13300
    uint32_t bytes;371,13355
        uint32_t intercepts:intercepts376,13525
        uint32_t iopm:iopm378,13599
        uint32_t asid:asid380,13650
        uint32_t tpr:tpr382,13696
        uint32_t np:np384,13759
        uint32_t cr:cr386,13817
        uint32_t dr:dr388,13864
        uint32_t dt:dt390,13913
        uint32_t seg:seg392,13971
        uint32_t cr2:cr2394,14014
        uint32_t lbr:lbr396,14094
        uint32_t resv:resv397,14119
    } fields;398,14146
} __attribute__ ((packed)) vmcbcleanbits_t;399,14160
struct vmcb_struct 401,14205
    u32 _cr_intercepts;402,14226
    u32 _dr_intercepts;403,14289
    u32 _exception_intercepts;404,14352
    u32 _general1_intercepts;405,14415
    u32 _general2_intercepts;406,14478
    u32 res01;407,14541
    u64 res02;408,14591
    u64 res03;409,14641
    u64 res04;410,14691
    u64 res05;411,14741
    u32 res06;412,14791
    u16 res06a;413,14841
    u16 _pause_filter_count;414,14891
    u64 _iopm_base_pa;415,14954
    u64 _msrpm_base_pa;416,15017
    u64 _tsc_offset;417,15080
    u32 _guest_asid;418,15143
    u8  tlb_control;419,15206
    u8  res07[res07420,15256
    vintr_t _vintr;421,15274
    u64 interrupt_shadow;422,15337
    u64 exitcode;423,15387
    u64 exitinfo1;424,15437
    u64 exitinfo2;425,15487
    eventinj_t  exitintinfo;426,15537
    u64 _np_enable;427,15587
    u64 res08[res08428,15650
    eventinj_t  eventinj;429,15668
    u64 _h_cr3;430,15718
    lbrctrl_t lbr_control;431,15781
    vmcbcleanbits_t cleanbits;432,15831
    u32 res09;433,15881
    u64 nextrip;434,15931
    u64 res10a[res10a435,15981
    svm_segment_register_t es;437,16049
    svm_segment_register_t cs;438,16112
    svm_segment_register_t ss;439,16161
    svm_segment_register_t ds;440,16210
    svm_segment_register_t fs;441,16259
    svm_segment_register_t gs;442,16290
    svm_segment_register_t gdtr;443,16321
    svm_segment_register_t ldtr;444,16371
    svm_segment_register_t idtr;445,16404
    svm_segment_register_t tr;446,16454
    u64 res10[res10447,16485
    u8 res11[res11448,16503
    u8 _cpl;449,16520
    u32 res12;450,16569
    u64 _efer;451,16584
    u64 res13[res13452,16655
    u64 _cr4;453,16674
    u64 _cr3;454,16745
    u64 _cr0;455,16794
    u64 _dr7;456,16843
    u64 _dr6;457,16892
    u64 rflags;458,16941
    u64 rip;459,16957
    u64 res14[res14460,16970
    u64 rsp;461,16989
    u64 res15[res15462,17002
    u64 rax;463,17020
    u64 star;464,17033
    u64 lstar;465,17047
    u64 cstar;466,17062
    u64 sfmask;467,17077
    u64 kerngsbase;468,17093
    u64 sysenter_cs;469,17113
    u64 sysenter_esp;470,17134
    u64 sysenter_eip;471,17156
    u64 _cr2;472,17178
    u64 pdpe0;473,17227
    u64 pdpe1;474,17242
    u64 pdpe2;475,17257
    u64 pdpe3;476,17272
    u64 _g_pat;477,17287
    u64 _debugctlmsr;478,17336
    u64 _lastbranchfromip;479,17386
    u64 _lastbranchtoip;480,17436
    u64 _lastintfromip;481,17486
    u64 _lastinttoip;482,17536
    u64 res16[res16483,17586
struct svm_domain 486,17635
    bool_t npt_4gb_warning;488,17685
struct arch_svm_struct 492,17724
    struct vmcb_struct *vmcb;vmcb493,17749
    u64    vmcb_pa;494,17779
    unsigned long *msrpm;msrpm495,17799
    int    launch_core;496,17825
    bool_t vmcb_in_sync;497,17849
    uint64_t guest_sysenter_cs;504,18169
    uint64_t guest_sysenter_esp;505,18201
    uint64_t guest_sysenter_eip;506,18234
#define svm_disable_intercept_for_msr(519,18576
#define svm_enable_intercept_for_msr(520,18655
#define VMCB_ACCESSORS(526,18770
VMCB_ACCESSORS(537,19475
#undef VMCB_ACCESSORS572,20892

xen/include/asm-x86/hvm/svm/intr.h,42
#define __ASM_X86_HVM_SVM_INTR_H__22,839

xen/include/asm-x86/hvm/svm/asid.h,88
#define __ASM_X86_HVM_SVM_ASID_H__20,792
static inline void svm_asid_g_invlpg(33,1083

xen/include/asm-x86/hvm/svm/amd-iommu-defs.h,15743
#define _ASM_X86_64_AMD_IOMMU_DEFS_H22,909
#define IOMMU_CMD_BUFFER_DEFAULT_ENTRIES	25,1024
#define IOMMU_EVENT_LOG_DEFAULT_ENTRIES 28,1142
#define PTE_PER_TABLE_SHIFT	30,1191
#define PTE_PER_TABLE_SIZE	31,1222
#define PTE_PER_TABLE_MASK	32,1277
#define PTE_PER_TABLE_ALIGN(33,1333
#define PTE_PER_TABLE_ALLOC(35,1434
#define PCI_MIN_CAP_OFFSET	38,1541
#define PCI_MAX_CAP_BLOCKS	39,1573
#define PCI_CAP_PTR_MASK	40,1603
#define PCI_CAP_ID_MASK	43,1657
#define PCI_CAP_ID_SHIFT	44,1693
#define PCI_CAP_NEXT_PTR_MASK	45,1720
#define PCI_CAP_NEXT_PTR_SHIFT	46,1761
#define PCI_CAP_TYPE_MASK	47,1794
#define PCI_CAP_TYPE_SHIFT	48,1831
#define PCI_CAP_REV_MASK	49,1861
#define PCI_CAP_REV_SHIFT	50,1897
#define PCI_CAP_IOTLB_MASK	51,1926
#define PCI_CAP_IOTLB_SHIFT	52,1964
#define PCI_CAP_HT_TUNNEL_MASK	53,1995
#define PCI_CAP_HT_TUNNEL_SHIFT	54,2037
#define PCI_CAP_NP_CACHE_MASK	55,2072
#define PCI_CAP_NP_CACHE_SHIFT	56,2113
#define PCI_CAP_RESET_MASK	57,2147
#define PCI_CAP_RESET_SHIFT	58,2185
#define PCI_CAP_TYPE_IOMMU	60,2217
#define PCI_CAP_MMIO_BAR_LOW_OFFSET	62,2250
#define PCI_CAP_MMIO_BAR_HIGH_OFFSET	63,2291
#define PCI_CAP_MMIO_BAR_LOW_MASK	64,2333
#define IOMMU_MMIO_REGION_LENGTH	65,2378
#define PCI_CAP_RANGE_OFFSET	67,2419
#define PCI_CAP_BUS_NUMBER_MASK	68,2454
#define PCI_CAP_BUS_NUMBER_SHIFT	69,2498
#define PCI_CAP_FIRST_DEVICE_MASK	70,2533
#define PCI_CAP_FIRST_DEVICE_SHIFT	71,2578
#define PCI_CAP_LAST_DEVICE_MASK	72,2616
#define PCI_CAP_LAST_DEVICE_SHIFT	73,2660
#define PCI_CAP_UNIT_ID_MASK 75,2698
#define PCI_CAP_UNIT_ID_SHIFT 76,2741
#define PCI_MISC_INFO_OFFSET 77,2775
#define PCI_CAP_MSI_NUMBER_MASK 78,2812
#define PCI_CAP_MSI_NUMBER_SHIFT 79,2859
#define IOMMU_DEV_TABLE_BASE_LOW_OFFSET	82,2917
#define IOMMU_DEV_TABLE_BASE_HIGH_OFFSET	83,2963
#define IOMMU_DEV_TABLE_BASE_LOW_MASK	84,3009
#define IOMMU_DEV_TABLE_BASE_LOW_SHIFT	85,3059
#define IOMMU_DEV_TABLE_BASE_HIGH_MASK	86,3102
#define IOMMU_DEV_TABLE_BASE_HIGH_SHIFT	87,3153
#define IOMMU_DEV_TABLE_SIZE_MASK	88,3196
#define IOMMU_DEV_TABLE_SIZE_SHIFT	89,3242
#define IOMMU_DEV_TABLE_ENTRIES_PER_BUS	91,3281
#define IOMMU_DEV_TABLE_ENTRY_SIZE	92,3326
#define IOMMU_DEV_TABLE_U32_PER_ENTRY	93,3365
#define IOMMU_DEV_TABLE_SYS_MGT_DMA_ABORTED	95,3438
#define IOMMU_DEV_TABLE_SYS_MGT_MSG_FORWARDED	96,3486
#define IOMMU_DEV_TABLE_SYS_MGT_INT_FORWARDED	97,3536
#define IOMMU_DEV_TABLE_SYS_MGT_DMA_FORWARDED	98,3586
#define IOMMU_DEV_TABLE_IO_CONTROL_ABORTED	100,3637
#define IOMMU_DEV_TABLE_IO_CONTROL_FORWARDED	101,3684
#define IOMMU_DEV_TABLE_IO_CONTROL_TRANSLATED	102,3733
#define IOMMU_DEV_TABLE_INT_CONTROL_ABORTED	104,3784
#define IOMMU_DEV_TABLE_INT_CONTROL_FORWARDED	105,3832
#define IOMMU_DEV_TABLE_INT_CONTROL_TRANSLATED	106,3882
#define IOMMU_DEV_TABLE_VALID_MASK	109,3964
#define IOMMU_DEV_TABLE_VALID_SHIFT	110,4012
#define IOMMU_DEV_TABLE_TRANSLATION_VALID_MASK	111,4052
#define IOMMU_DEV_TABLE_TRANSLATION_VALID_SHIFT	112,4111
#define IOMMU_DEV_TABLE_PAGING_MODE_MASK	113,4162
#define IOMMU_DEV_TABLE_PAGING_MODE_SHIFT	114,4215
#define IOMMU_DEV_TABLE_PAGE_TABLE_PTR_LOW_MASK	115,4260
#define IOMMU_DEV_TABLE_PAGE_TABLE_PTR_LOW_SHIFT	116,4320
#define IOMMU_DEV_TABLE_PAGE_TABLE_PTR_HIGH_MASK	119,4404
#define IOMMU_DEV_TABLE_PAGE_TABLE_PTR_HIGH_SHIFT	120,4464
#define IOMMU_DEV_TABLE_IO_READ_PERMISSION_MASK	121,4516
#define IOMMU_DEV_TABLE_IO_READ_PERMISSION_SHIFT	122,4576
#define IOMMU_DEV_TABLE_IO_WRITE_PERMISSION_MASK	123,4628
#define IOMMU_DEV_TABLE_IO_WRITE_PERMISSION_SHIFT	124,4688
#define IOMMU_DEV_TABLE_DOMAIN_ID_MASK	127,4773
#define IOMMU_DEV_TABLE_DOMAIN_ID_SHIFT	128,4823
#define IOMMU_DEV_TABLE_IOTLB_SUPPORT_MASK	131,4898
#define IOMMU_DEV_TABLE_IOTLB_SUPPORT_SHIFT	132,4953
#define IOMMU_DEV_TABLE_SUPRESS_LOGGED_PAGES_MASK	133,5000
#define IOMMU_DEV_TABLE_SUPRESS_LOGGED_PAGES_SHIFT	134,5061
#define IOMMU_DEV_TABLE_SUPRESS_ALL_PAGES_MASK	135,5114
#define IOMMU_DEV_TABLE_SUPRESS_ALL_PAGES_SHIFT	136,5173
#define IOMMU_DEV_TABLE_IO_CONTROL_MASK	137,5224
#define IOMMU_DEV_TABLE_IO_CONTROL_SHIFT	138,5277
#define IOMMU_DEV_TABLE_IOTLB_CACHE_HINT_MASK	139,5321
#define IOMMU_DEV_TABLE_IOTLB_CACHE_HINT_SHIFT	140,5379
#define IOMMU_DEV_TABLE_SNOOP_DISABLE_MASK	141,5429
#define IOMMU_DEV_TABLE_SNOOP_DISABLE_SHIFT	142,5484
#define IOMMU_DEV_TABLE_ALLOW_EXCLUSION_MASK	143,5531
#define IOMMU_DEV_TABLE_ALLOW_EXCLUSION_SHIFT	144,5588
#define IOMMU_DEV_TABLE_SYS_MGT_MSG_ENABLE_MASK	145,5637
#define IOMMU_DEV_TABLE_SYS_MGT_MSG_ENABLE_SHIFT	146,5697
#define IOMMU_DEV_TABLE_INT_VALID_MASK 149,5782
#define IOMMU_DEV_TABLE_INT_VALID_SHIFT 150,5841
#define IOMMU_DEV_TABLE_INT_TABLE_LENGTH_MASK 151,5891
#define IOMMU_DEV_TABLE_INT_TABLE_LENGTH_SHIFT 152,5954
#define IOMMU_DEV_TABLE_INT_TABLE_IGN_UNMAPPED_MASK 153,6008
#define IOMMU_DEV_TABLE_INT_TABLE_IGN_UNMAPPED_SHIFT 154,6078
#define IOMMU_DEV_TABLE_INT_TABLE_PTR_LOW_MASK 155,6138
#define IOMMU_DEV_TABLE_INT_TABLE_PTR_LOW_SHIFT 156,6201
#define IOMMU_DEV_TABLE_INT_TABLE_PTR_HIGH_MASK 159,6289
#define IOMMU_DEV_TABLE_INT_TABLE_PTR_HIGH_SHIFT 160,6352
#define IOMMU_DEV_TABLE_INIT_PASSTHRU_MASK 161,6406
#define IOMMU_DEV_TABLE_INIT_PASSTHRU_SHIFT 162,6465
#define IOMMU_DEV_TABLE_EINT_PASSTHRU_MASK 163,6516
#define IOMMU_DEV_TABLE_EINT_PASSTHRU_SHIFT 164,6575
#define IOMMU_DEV_TABLE_NMI_PASSTHRU_MASK 165,6626
#define IOMMU_DEV_TABLE_NMI_PASSTHRU_SHIFT 166,6685
#define IOMMU_DEV_TABLE_INT_CONTROL_MASK 167,6736
#define IOMMU_DEV_TABLE_INT_CONTROL_SHIFT 168,6795
#define IOMMU_DEV_TABLE_LINT0_ENABLE_MASK 169,6846
#define IOMMU_DEV_TABLE_LINT0_ENABLE_SHIFT 170,6905
#define IOMMU_DEV_TABLE_LINT1_ENABLE_MASK 171,6956
#define IOMMU_DEV_TABLE_LINT1_ENABLE_SHIFT 172,7015
#define IOMMU_CMD_BUFFER_BASE_LOW_OFFSET	175,7088
#define IOMMU_CMD_BUFFER_BASE_HIGH_OFFSET	176,7134
#define IOMMU_CMD_BUFFER_HEAD_OFFSET	177,7181
#define IOMMU_CMD_BUFFER_TAIL_OFFSET	178,7226
#define IOMMU_CMD_BUFFER_BASE_LOW_MASK	179,7271
#define IOMMU_CMD_BUFFER_BASE_LOW_SHIFT	180,7322
#define IOMMU_CMD_BUFFER_BASE_HIGH_MASK	181,7366
#define IOMMU_CMD_BUFFER_BASE_HIGH_SHIFT	182,7418
#define IOMMU_CMD_BUFFER_LENGTH_MASK	183,7461
#define IOMMU_CMD_BUFFER_LENGTH_SHIFT	184,7510
#define IOMMU_CMD_BUFFER_HEAD_MASK	185,7552
#define IOMMU_CMD_BUFFER_HEAD_SHIFT	186,7599
#define IOMMU_CMD_BUFFER_TAIL_MASK	187,7638
#define IOMMU_CMD_BUFFER_TAIL_SHIFT	188,7685
#define IOMMU_CMD_BUFFER_ENTRY_SIZE	190,7725
#define IOMMU_CMD_BUFFER_POWER_OF2_ENTRIES_PER_PAGE	191,7766
#define IOMMU_CMD_BUFFER_U32_PER_ENTRY 192,7820
#define IOMMU_CMD_OPCODE_MASK	194,7895
#define IOMMU_CMD_OPCODE_SHIFT	195,7938
#define IOMMU_CMD_COMPLETION_WAIT	196,7974
#define IOMMU_CMD_INVALIDATE_DEVTAB_ENTRY	197,8013
#define IOMMU_CMD_INVALIDATE_IOMMU_PAGES	198,8059
#define IOMMU_CMD_INVALIDATE_IOTLB_PAGES	199,8104
#define IOMMU_CMD_INVALIDATE_INT_TABLE	200,8149
#define IOMMU_COMP_WAIT_DATA_BUFFER_SIZE	203,8224
#define IOMMU_COMP_WAIT_DATA_BUFFER_ALIGNMENT	204,8267
#define IOMMU_COMP_WAIT_S_FLAG_MASK	205,8315
#define IOMMU_COMP_WAIT_S_FLAG_SHIFT	206,8363
#define IOMMU_COMP_WAIT_I_FLAG_MASK	207,8403
#define IOMMU_COMP_WAIT_I_FLAG_SHIFT	208,8451
#define IOMMU_COMP_WAIT_F_FLAG_MASK	209,8491
#define IOMMU_COMP_WAIT_F_FLAG_SHIFT	210,8539
#define IOMMU_COMP_WAIT_ADDR_LOW_MASK	211,8579
#define IOMMU_COMP_WAIT_ADDR_LOW_SHIFT	212,8629
#define IOMMU_COMP_WAIT_ADDR_HIGH_MASK	213,8671
#define IOMMU_COMP_WAIT_ADDR_HIGH_SHIFT	214,8722
#define IOMMU_INV_IOMMU_PAGES_DOMAIN_ID_MASK	217,8803
#define IOMMU_INV_IOMMU_PAGES_DOMAIN_ID_SHIFT	218,8859
#define IOMMU_INV_IOMMU_PAGES_S_FLAG_MASK	219,8907
#define IOMMU_INV_IOMMU_PAGES_S_FLAG_SHIFT	220,8960
#define IOMMU_INV_IOMMU_PAGES_PDE_FLAG_MASK	221,9005
#define IOMMU_INV_IOMMU_PAGES_PDE_FLAG_SHIFT	222,9060
#define IOMMU_INV_IOMMU_PAGES_ADDR_LOW_MASK	223,9107
#define IOMMU_INV_IOMMU_PAGES_ADDR_LOW_SHIFT	224,9162
#define IOMMU_INV_IOMMU_PAGES_ADDR_HIGH_MASK	225,9210
#define IOMMU_INV_IOMMU_PAGES_ADDR_HIGH_SHIFT	226,9266
#define IOMMU_INV_DEVTAB_ENTRY_DEVICE_ID_MASK 229,9353
#define IOMMU_INV_DEVTAB_ENTRY_DEVICE_ID_SHIFT 230,9412
#define IOMMU_INV_INT_TABLE_DEVICE_ID_MASK 233,9504
#define IOMMU_INV_INT_TABLE_DEVICE_ID_SHIFT 234,9560
#define IOMMU_EVENT_LOG_BASE_LOW_OFFSET	237,9624
#define IOMMU_EVENT_LOG_BASE_HIGH_OFFSET	238,9670
#define IOMMU_EVENT_LOG_HEAD_OFFSET	239,9716
#define IOMMU_EVENT_LOG_TAIL_OFFSET	240,9760
#define IOMMU_EVENT_LOG_BASE_LOW_MASK	241,9804
#define IOMMU_EVENT_LOG_BASE_LOW_SHIFT	242,9854
#define IOMMU_EVENT_LOG_BASE_HIGH_MASK	243,9897
#define IOMMU_EVENT_LOG_BASE_HIGH_SHIFT	244,9948
#define IOMMU_EVENT_LOG_LENGTH_MASK	245,9991
#define IOMMU_EVENT_LOG_LENGTH_SHIFT	246,10039
#define IOMMU_EVENT_LOG_HEAD_MASK	247,10080
#define IOMMU_EVENT_LOG_HEAD_SHIFT	248,10126
#define IOMMU_EVENT_LOG_TAIL_MASK	249,10164
#define IOMMU_EVENT_LOG_TAIL_SHIFT	250,10210
#define IOMMU_EVENT_LOG_ENTRY_SIZE 252,10249
#define IOMMU_EVENT_LOG_POWER_OF2_ENTRIES_PER_PAGE	253,10290
#define IOMMU_EVENT_LOG_U32_PER_ENTRY	254,10343
#define IOMMU_EVENT_CODE_MASK	256,10415
#define IOMMU_EVENT_CODE_SHIFT	257,10458
#define IOMMU_EVENT_ILLEGAL_DEV_TABLE_ENTRY	258,10494
#define IOMMU_EVENT_IO_PAGE_FALT	259,10542
#define IOMMU_EVENT_DEV_TABLE_HW_ERROR	260,10580
#define IOMMU_EVENT_PAGE_TABLE_HW_ERROR	261,10624
#define IOMMU_EVENT_ILLEGAL_COMMAND_ERROR	262,10669
#define IOMMU_EVENT_COMMAND_HW_ERROR	263,10715
#define IOMMU_EVENT_IOTLB_INV_TIMEOUT	264,10757
#define IOMMU_EVENT_INVALID_DEV_REQUEST	265,10800
#define IOMMU_EVENT_DOMAIN_ID_MASK 267,10846
#define IOMMU_EVENT_DOMAIN_ID_SHIFT 268,10902
#define IOMMU_EVENT_DEVICE_ID_MASK 269,10949
#define IOMMU_EVENT_DEVICE_ID_SHIFT 270,11005
#define IOMMU_CONTROL_MMIO_OFFSET	273,11076
#define IOMMU_CONTROL_TRANSLATION_ENABLE_MASK	274,11117
#define IOMMU_CONTROL_TRANSLATION_ENABLE_SHIFT	275,11175
#define IOMMU_CONTROL_HT_TUNNEL_TRANSLATION_MASK	276,11225
#define IOMMU_CONTROL_HT_TUNNEL_TRANSLATION_SHIFT	277,11285
#define IOMMU_CONTROL_EVENT_LOG_ENABLE_MASK	278,11337
#define IOMMU_CONTROL_EVENT_LOG_ENABLE_SHIFT	279,11393
#define IOMMU_CONTROL_EVENT_LOG_INT_MASK	280,11441
#define IOMMU_CONTROL_EVENT_LOG_INT_SHIFT	281,11494
#define IOMMU_CONTROL_COMP_WAIT_INT_MASK	282,11539
#define IOMMU_CONTROL_COMP_WAIT_INT_SHIFT	283,11592
#define IOMMU_CONTROL_TRANSLATION_CHECK_DISABLE_MASK	284,11637
#define IOMMU_CONTROL_TRANSLATION_CHECK_DISABLE_SHIFT	285,11701
#define IOMMU_CONTROL_INVALIDATION_TIMEOUT_MASK	286,11757
#define IOMMU_CONTROL_INVALIDATION_TIMEOUT_SHIFT	287,11817
#define IOMMU_CONTROL_PASS_POSTED_WRITE_MASK	288,11868
#define IOMMU_CONTROL_PASS_POSTED_WRITE_SHIFT	289,11925
#define IOMMU_CONTROL_RESP_PASS_POSTED_WRITE_MASK	290,11974
#define IOMMU_CONTROL_RESP_PASS_POSTED_WRITE_SHIFT	291,12035
#define IOMMU_CONTROL_COHERENT_MASK	292,12088
#define IOMMU_CONTROL_COHERENT_SHIFT	293,12137
#define IOMMU_CONTROL_ISOCHRONOUS_MASK	294,12179
#define IOMMU_CONTROL_ISOCHRONOUS_SHIFT	295,12231
#define IOMMU_CONTROL_COMMAND_BUFFER_ENABLE_MASK	296,12276
#define IOMMU_CONTROL_COMMAND_BUFFER_ENABLE_SHIFT	297,12336
#define IOMMU_CONTROL_RESTART_MASK	298,12389
#define IOMMU_CONTROL_RESTART_SHIFT	299,12437
#define IOMMU_EXCLUSION_BASE_LOW_OFFSET	302,12504
#define IOMMU_EXCLUSION_BASE_HIGH_OFFSET	303,12550
#define IOMMU_EXCLUSION_LIMIT_LOW_OFFSET	304,12596
#define IOMMU_EXCLUSION_LIMIT_HIGH_OFFSET	305,12642
#define IOMMU_EXCLUSION_BASE_LOW_MASK	306,12689
#define IOMMU_EXCLUSION_BASE_LOW_SHIFT	307,12739
#define IOMMU_EXCLUSION_BASE_HIGH_MASK	308,12782
#define IOMMU_EXCLUSION_BASE_HIGH_SHIFT	309,12833
#define IOMMU_EXCLUSION_RANGE_ENABLE_MASK	310,12876
#define IOMMU_EXCLUSION_RANGE_ENABLE_SHIFT	311,12929
#define IOMMU_EXCLUSION_ALLOW_ALL_MASK	312,12974
#define IOMMU_EXCLUSION_ALLOW_ALL_SHIFT	313,13025
#define IOMMU_EXCLUSION_LIMIT_LOW_MASK	314,13068
#define IOMMU_EXCLUSION_LIMIT_LOW_SHIFT	315,13119
#define IOMMU_EXCLUSION_LIMIT_HIGH_MASK	316,13163
#define IOMMU_EXCLUSION_LIMIT_HIGH_SHIFT	317,13215
#define IOMMU_STATUS_MMIO_OFFSET	320,13280
#define IOMMU_STATUS_EVENT_OVERFLOW_MASK	321,13321
#define IOMMU_STATUS_EVENT_OVERFLOW_SHIFT	322,13373
#define IOMMU_STATUS_EVENT_LOG_INT_MASK	323,13417
#define IOMMU_STATUS_EVENT_LOG_INT_SHIFT	324,13469
#define IOMMU_STATUS_COMP_WAIT_INT_MASK	325,13512
#define IOMMU_STATUS_COMP_WAIT_INT_SHIFT	326,13564
#define IOMMU_STATUS_EVENT_LOG_RUN_MASK	327,13607
#define IOMMU_STATUS_EVENT_LOG_RUN_SHIFT	328,13659
#define IOMMU_STATUS_CMD_BUFFER_RUN_MASK	329,13702
#define IOMMU_STATUS_CMD_BUFFER_RUN_SHIFT	330,13754
#define IOMMU_PAGE_TABLE_ENTRY_SIZE	333,13820
#define IOMMU_PAGE_TABLE_U32_PER_ENTRY	334,13858
#define IOMMU_PAGE_TABLE_ALIGNMENT	335,13931
#define IOMMU_PTE_PRESENT_MASK	337,13972
#define IOMMU_PTE_PRESENT_SHIFT	338,14016
#define IOMMU_PTE_NEXT_LEVEL_MASK	339,14052
#define IOMMU_PTE_NEXT_LEVEL_SHIFT	340,14098
#define IOMMU_PTE_ADDR_LOW_MASK	341,14136
#define IOMMU_PTE_ADDR_LOW_SHIFT	342,14181
#define IOMMU_PTE_ADDR_HIGH_MASK	343,14218
#define IOMMU_PTE_ADDR_HIGH_SHIFT	344,14263
#define IOMMU_PTE_U_MASK	345,14300
#define IOMMU_PTE_U_SHIFT	346,14338
#define IOMMU_PTE_FC_MASK	347,14368
#define IOMMU_PTE_FC_SHIFT	348,14407
#define IOMMU_PTE_IO_READ_PERMISSION_MASK	349,14439
#define IOMMU_PTE_IO_READ_PERMISSION_SHIFT	350,14492
#define IOMMU_PTE_IO_WRITE_PERMISSION_MASK	351,14538
#define IOMMU_PTE_IO_WRITE_PERMISSION_SHIFT	352,14592
#define IOMMU_PAGE_DIRECTORY_ENTRY_SIZE	355,14665
#define IOMMU_PAGE_DIRECTORY_ALIGNMENT	356,14708
#define IOMMU_PDE_PRESENT_MASK	357,14753
#define IOMMU_PDE_PRESENT_SHIFT	358,14797
#define IOMMU_PDE_NEXT_LEVEL_MASK	359,14833
#define IOMMU_PDE_NEXT_LEVEL_SHIFT	360,14879
#define IOMMU_PDE_ADDR_LOW_MASK	361,14917
#define IOMMU_PDE_ADDR_LOW_SHIFT	362,14962
#define IOMMU_PDE_ADDR_HIGH_MASK	363,14999
#define IOMMU_PDE_ADDR_HIGH_SHIFT	364,15044
#define IOMMU_PDE_IO_READ_PERMISSION_MASK	365,15081
#define IOMMU_PDE_IO_READ_PERMISSION_SHIFT	366,15134
#define IOMMU_PDE_IO_WRITE_PERMISSION_MASK	367,15180
#define IOMMU_PDE_IO_WRITE_PERMISSION_SHIFT	368,15234
#define IOMMU_PAGING_MODE_DISABLED	371,15301
#define IOMMU_PAGING_MODE_LEVEL_0	372,15340
#define IOMMU_PAGING_MODE_LEVEL_1	373,15378
#define IOMMU_PAGING_MODE_LEVEL_2	374,15416
#define IOMMU_PAGING_MODE_LEVEL_3	375,15454
#define IOMMU_PAGING_MODE_LEVEL_4	376,15492
#define IOMMU_PAGING_MODE_LEVEL_5	377,15530
#define IOMMU_PAGING_MODE_LEVEL_6	378,15568
#define IOMMU_PAGING_MODE_LEVEL_7	379,15606
#define IOMMU_CONTROL_DISABLED	382,15657
#define IOMMU_CONTROL_ENABLED	383,15690
#define MMIO_PAGES_PER_IOMMU 385,15723
#define IOMMU_PAGES 386,15801
#define DEFAULT_DOMAIN_ADDRESS_WIDTH 387,15877
#define MAX_AMD_IOMMUS 388,15920
#define IOMMU_PAGE_TABLE_LEVEL_3 389,15963
#define IOMMU_PAGE_TABLE_LEVEL_4 390,16005
#define INT_REMAP_INDEX_DM_MASK 393,16080
#define INT_REMAP_INDEX_DM_SHIFT 394,16127
#define INT_REMAP_INDEX_VECTOR_MASK 395,16170
#define INT_REMAP_INDEX_VECTOR_SHIFT 396,16216
#define INT_REMAP_ENTRY_REMAPEN_MASK 397,16258
#define INT_REMAP_ENTRY_REMAPEN_SHIFT 398,16309
#define INT_REMAP_ENTRY_SUPIOPF_MASK 399,16351
#define INT_REMAP_ENTRY_SUPIOPF_SHIFT 400,16402
#define INT_REMAP_ENTRY_INTTYPE_MASK 401,16444
#define INT_REMAP_ENTRY_INTTYPE_SHIFT 402,16495
#define INT_REMAP_ENTRY_REQEOI_MASK 403,16537
#define INT_REMAP_ENTRY_REQEOI_SHIFT 404,16588
#define INT_REMAP_ENTRY_DM_MASK 405,16630
#define INT_REMAP_ENTRY_DM_SHIFT 406,16681
#define INT_REMAP_ENTRY_DEST_MAST 407,16723
#define INT_REMAP_ENTRY_DEST_SHIFT 408,16774
#define INT_REMAP_ENTRY_VECTOR_MASK 409,16816
#define INT_REMAP_ENTRY_VECTOR_SHIFT 410,16867

xen/include/asm-x86/hvm/svm/amd-iommu-proto.h,572
#define _ASM_X86_64_AMD_IOMMU_PROTO_H22,910
#define for_each_amd_iommu(28,1029
#define DMA_32BIT_MASK 32,1138
#define AMD_IOMMU_DEBUG(34,1185
static inline u32 get_field_from_reg_u32(95,3485
static inline u32 set_field_in_reg_u32(102,3641
static inline u8 get_field_from_byte(112,3877
static inline unsigned long region_to_pages(119,4017
static inline struct page_info* alloc_amd_iommu_pgtable(124,4179
static inline void free_amd_iommu_pgtable(138,4481
static inline void* __alloc_amd_iommu_tables(144,4600
static inline void __free_amd_iommu_tables(151,4733

xen/include/asm-x86/hvm/svm/emulate.h,428
#define __ASM_X86_HVM_SVM_EMULATE_H__21,837
enum instruction_index 24,935
    INSTR_INVD,25,960
    INSTR_WBINVD,26,976
    INSTR_CPUID,27,994
    INSTR_RDMSR,28,1011
    INSTR_WRMSR,29,1028
    INSTR_VMCALL,30,1045
    INSTR_HLT,31,1063
    INSTR_INT3,32,1078
    INSTR_RDTSC,33,1094
    INSTR_PAUSE,34,1111
    INSTR_XSETBV,35,1128
    INSTR_MAX_COUNT 36,1146
static inline int __get_instruction_length(42,1341

xen/include/asm-x86/hvm/svm/svm.h,997
#define __ASM_X86_HVM_SVM_H__22,833
#define SVM_REG_EAX 34,1103
#define SVM_REG_ECX 35,1128
#define SVM_REG_EDX 36,1153
#define SVM_REG_EBX 37,1178
#define SVM_REG_ESP 38,1203
#define SVM_REG_EBP 39,1228
#define SVM_REG_ESI 40,1253
#define SVM_REG_EDI 41,1278
#define SVM_REG_R8 42,1303
#define SVM_REG_R9 43,1327
#define SVM_REG_R10 44,1351
#define SVM_REG_R11 45,1376
#define SVM_REG_R12 46,1401
#define SVM_REG_R13 47,1426
#define SVM_REG_R14 48,1451
#define SVM_REG_R15 49,1476
static inline void svm_vmload(51,1502
static inline void svm_vmsave(58,1655
#define SVM_FEATURE_NPT 67,1839
#define SVM_FEATURE_LBRV 68,1869
#define SVM_FEATURE_SVML 69,1899
#define SVM_FEATURE_NRIPS 70,1929
#define SVM_FEATURE_CLEAN 71,1959
#define SVM_FEATURE_PAUSEF 72,1989
#define cpu_has_svm_npt 74,2021
#define cpu_has_svm_lbrv 75,2095
#define cpu_has_svm_svml 76,2170
#define cpu_has_svm_nrips 77,2245
#define cpu_has_svm_cleanbits 78,2321
#define cpu_has_pause_filter 79,2399

xen/include/asm-x86/hvm/vpic.h,39
#define __ASM_X86_HVM_VPIC_H__28,1280

xen/include/asm-x86/hvm/io.h,1535
#define __ASM_X86_HVM_IO_H__21,769
#define MAX_IO_HANDLER 28,919
#define HVM_PORTIO 30,958
#define HVM_BUFFERED_IO 31,996
typedef int (*hvm_mmio_read_t)hvm_mmio_read_t33,1035
typedef int (*hvm_mmio_write_t)hvm_mmio_write_t37,1238
typedef int (*hvm_mmio_check_t)hvm_mmio_check_t41,1444
typedef int (*portio_action_t)portio_action_t43,1514
typedef int (*mmio_action_t)mmio_action_t45,1606
struct io_handler 46,1647
    int                 type;47,1667
    unsigned long       addr;48,1697
    unsigned long       size;49,1727
        portio_action_t portio;51,1769
        mmio_action_t   mmio;52,1801
        void           *ptr;ptr53,1831
    } action;54,1860
struct hvm_io_handler 57,1878
    int     num_slot;58,1902
    struct  io_handler hdl_list[hdl_list59,1924
struct hvm_mmio_handler 62,1977
    hvm_mmio_check_t check_handler;63,2003
    hvm_mmio_read_t read_handler;64,2039
    hvm_mmio_write_t write_handler;65,2073
static inline int hvm_portio_intercept(76,2406
static inline int hvm_buffered_io_intercept(81,2506
static inline void register_portio_handler(89,2691
static inline void relocate_portio_handler(96,2890
static inline void register_buffered_io_handler(103,3099
struct hvm_hw_stdvga 120,3734
    uint8_t sr_index;121,3757
    uint8_t sr[sr122,3779
    uint8_t gr_index;123,3798
    uint8_t gr[gr124,3820
    bool_t stdvga;125,3839
    bool_t cache;126,3858
    uint32_t latch;127,3876
    struct page_info *vram_page[vram_page128,3896
    spinlock_t lock;129,3966

xen/include/asm-x86/hvm/vcpu.h,2037
#define __ASM_X86_HVM_VCPU_H__21,809
enum hvm_io_state 30,1001
    HVMIO_none 31,1021
    HVMIO_dispatched,32,1041
    HVMIO_awaiting_completion,33,1063
    HVMIO_handle_mmio_awaiting_completion,34,1094
    HVMIO_handle_pio_awaiting_completion,35,1137
    HVMIO_completed36,1179
struct hvm_vcpu 39,1203
    unsigned long       guest_cr[guest_cr41,1300
    unsigned long       guest_efer;42,1337
    unsigned long       hw_cr[hw_cr50,1672
    struct vlapic       vlapic;52,1707
    s64                 cache_tsc_offset;53,1739
    u64                 guest_time;54,1781
    spinlock_t          tm_lock;57,1871
    struct list_head    tm_list;58,1904
    int                 xen_port;60,1938
    bool_t              flag_dr_dirty;62,1973
    bool_t              debug_state_latch;63,2012
    bool_t              single_step;64,2055
    bool_t              hcall_preempted;66,2093
    bool_t              hcall_64bit;67,2134
    u64                 asid_generation;69,2172
    u32                 asid;70,2213
    u32                 msr_tsc_aux;72,2244
    struct vpmu_struct  vpmu;75,2297
        struct arch_vmx_struct vmx;78,2340
        struct arch_svm_struct svm;79,2376
    } u;80,2412
    struct tasklet      assert_evtchn_irq_tasklet;82,2422
    struct mtrr_state   mtrr;84,2474
    u64                 pat_cr;85,2504
    int64_t             stime_offset;88,2613
    u8                  cache_mode;91,2708
    enum hvm_io_state   io_state;94,2794
    unsigned long       io_data;95,2828
    int                 io_size;96,2861
    unsigned long       mmio_gva;104,3130
    unsigned long       mmio_gpfn;105,3164
    void (*fpu_exception_callback)fpu_exception_callback108,3277
    void *fpu_exception_callback_arg;fpu_exception_callback_arg109,3345
    paddr_t mmio_large_read_pa;111,3458
    uint8_t mmio_large_read[mmio_large_read112,3490
    unsigned int mmio_large_read_bytes;113,3523
    paddr_t mmio_large_write_pa;115,3639
    unsigned int mmio_large_write_bytes;116,3672

xen/include/asm-x86/hvm/guest_access.h,44
#define __ASM_X86_HVM_GUEST_ACCESS_H__2,39

xen/include/asm-x86/hvm/cacheattr.h,191
#define __HVM_CACHEATTR_H__2,28
struct hvm_mem_pinned_cacheattr_range 4,57
    struct list_head list;5,97
    uint64_t start,6,124
    uint64_t start, end;6,124
    uint32_t type;7,149

xen/include/asm-x86/hvm/emulate.h,529
#define __ASM_X86_HVM_EMULATE_H__13,309
struct hvm_emulate_ctxt 18,398
    struct x86_emulate_ctxt ctxt;19,424
    uint8_t insn_buf[insn_buf22,503
    unsigned long insn_buf_eip;23,529
    unsigned int insn_buf_bytes;24,561
    struct segment_register seg_reg[seg_reg26,595
    unsigned long seg_reg_accessed;27,636
    unsigned long seg_reg_dirty;28,672
    bool_t exn_pending;30,706
    uint8_t exn_vector;31,730
    uint8_t exn_insn_len;32,754
    int32_t exn_error_code;33,780
    uint32_t intr_shadow;35,809

xen/include/asm-x86/hvm/vlapic.h,990
#define __ASM_X86_HVM_VLAPIC_H__22,846
#define MAX_VECTOR 29,982
#define vcpu_vlapic(31,1011
#define vlapic_vcpu(32,1065
#define vlapic_domain(33,1145
#define VLAPIC_ID(35,1196
#define VLAPIC_HW_DISABLED 45,1548
#define VLAPIC_SW_DISABLED 46,1592
#define vlapic_sw_disabled(47,1636
#define vlapic_hw_disabled(48,1716
#define vlapic_disabled(49,1796
#define vlapic_enabled(50,1855
#define vlapic_base_address(52,1918
#define vlapic_x2apic_mode(54,2042
struct vlapic 57,2167
    struct hvm_hw_lapic      hw;58,2183
    struct hvm_hw_lapic_regs *regs;regs59,2216
    struct periodic_time     pt;60,2252
    s_time_t                 timer_last_update;61,2285
    struct page_info         *regs_page;regs_page62,2333
        struct vcpu          *target;target65,2445
        uint32_t             icr;66,2483
        struct tasklet       tasklet;67,2517
    } init_sipi;68,2555
static inline uint32_t vlapic_get_reg(71,2576
static inline void vlapic_set_reg(76,2710

xen/include/asm-x86/percpu.h,149
#define __X86_PERCPU_H__2,25
#define __DEFINE_PER_CPU(11,264
#define per_cpu(16,501
#define __get_cpu_var(18,588
#define DECLARE_PER_CPU(21,685

xen/include/asm-x86/amd-iommu.h,1787
#define _ASM_X86_64_AMD_IOMMU_H21,903
#define iommu_found(29,1070
struct table_struct 33,1175
    void *buffer;buffer34,1197
    unsigned long entries;35,1215
    unsigned long alloc_size;36,1242
struct amd_iommu 39,1276
    struct list_head list;40,1295
    spinlock_t lock;41,1322
    u16 bdf;43,1364
    u8  cap_offset;44,1377
    u8  revision;45,1397
    u8  unit_id;46,1415
    u8  msi_number;47,1432
    u8 pte_not_present_cached;49,1453
    u8 ht_tunnel_support;50,1484
    u8 iotlb_support;51,1510
    u8 isochronous;53,1533
    u8 coherent;54,1553
    u8 res_pass_pw;55,1570
    u8 pass_pw;56,1590
    u8 ht_tunnel_enable;57,1606
    void *mmio_base;mmio_base59,1632
    unsigned long mmio_base_phys;60,1653
    struct table_struct dev_table;62,1688
    struct table_struct cmd_buffer;63,1723
    u32 cmd_buffer_tail;64,1759
    struct table_struct event_log;65,1784
    u32 event_log_head;66,1819
    int exclusion_enable;68,1844
    int exclusion_allow_all;69,1870
    uint64_t exclusion_base;70,1899
    uint64_t exclusion_limit;71,1928
    int msi_cap;73,1959
    int maskbit;74,1976
    int enabled;76,1994
    int irq;77,2011
struct ivrs_mappings 80,2028
    u16 dte_requestor_id;81,2051
    u8 dte_sys_mgt_enable;82,2077
    u8 dte_allow_exclusion;83,2104
    u8 unity_map_enable;84,2132
    u8 write_permission;85,2157
    u8 read_permission;86,2182
    unsigned long addr_range_start;87,2206
    unsigned long addr_range_length;88,2242
    struct amd_iommu *iommu;iommu89,2279
    void *intremap_table;intremap_table92,2356
    spinlock_t intremap_lock;93,2382
    u8 dte_lint1_pass;96,2452
    u8 dte_lint0_pass;97,2475
    u8 dte_nmi_pass;98,2498
    u8 dte_ext_int_pass;99,2519
    u8 dte_init_pass;100,2544

xen/include/asm-x86/mc146818rtc.h,1405
#define _ASM_MC146818RTC_H5,91
#define RTC_SECONDS 15,404
#define RTC_SECONDS_ALARM 16,438
#define RTC_MINUTES 17,472
#define RTC_MINUTES_ALARM 18,506
#define RTC_HOURS 19,540
#define RTC_HOURS_ALARM 20,574
# define RTC_ALARM_DONT_CARE 22,659
#define RTC_DAY_OF_WEEK 24,697
#define RTC_DAY_OF_MONTH 25,731
#define RTC_MONTH 26,765
#define RTC_YEAR 27,799
#define RTC_REG_A 31,872
#define RTC_REG_B 32,907
#define RTC_REG_C 33,942
#define RTC_REG_D 34,977
#define RTC_FREQ_SELECT 39,1178
# define RTC_UIP 45,1418
# define RTC_DIV_CTL 46,1455
#  define RTC_REF_CLCK_4MHZ 48,1565
#  define RTC_REF_CLCK_1MHZ 49,1602
#  define RTC_REF_CLCK_32KHZ 50,1639
#  define RTC_DIV_RESET1 52,1754
#  define RTC_DIV_RESET2 53,1791
# define RTC_RATE_SELECT 55,1907
#define RTC_CONTROL 58,2018
# define RTC_SET 59,2052
# define RTC_PIE 60,2124
# define RTC_AIE 61,2188
# define RTC_UIE 62,2249
# define RTC_SQWE 63,2320
# define RTC_DM_BINARY 64,2384
# define RTC_24H 65,2460
# define RTC_DST_EN 66,2539
#define RTC_INTR_FLAGS 69,2687
# define RTC_IRQF 71,2753
# define RTC_PF 72,2824
# define RTC_AF 73,2845
# define RTC_UF 74,2866
#define RTC_VALID 77,2961
# define RTC_VRT 78,2995
#define BCD_TO_BIN(85,3259
#define BIN_TO_BCD(89,3345
#define RTC_PORT(94,3430
#define RTC_ALWAYS_BCD	95,3463
#define CMOS_READ(102,3679
#define CMOS_WRITE(106,3763
#define RTC_IRQ 111,3861

xen/include/asm-x86/processor.h,7442
#define __ASM_X86_PROCESSOR_H5,86
#define X86_VENDOR_INTEL 22,383
#define X86_VENDOR_CYRIX 23,410
#define X86_VENDOR_AMD 24,437
#define X86_VENDOR_UMC 25,462
#define X86_VENDOR_NEXGEN 26,487
#define X86_VENDOR_CENTAUR 27,515
#define X86_VENDOR_RISE 28,544
#define X86_VENDOR_TRANSMETA 29,570
#define X86_VENDOR_NSC 30,601
#define X86_VENDOR_NUM 31,626
#define X86_VENDOR_UNKNOWN 32,651
#define X86_EFLAGS_CF	37,706
#define X86_EFLAGS_PF	38,756
#define X86_EFLAGS_AF	39,807
#define X86_EFLAGS_ZF	40,867
#define X86_EFLAGS_SF	41,916
#define X86_EFLAGS_TF	42,965
#define X86_EFLAGS_IF	43,1014
#define X86_EFLAGS_DF	44,1068
#define X86_EFLAGS_OF	45,1122
#define X86_EFLAGS_IOPL	46,1175
#define X86_EFLAGS_NT	47,1226
#define X86_EFLAGS_RF	48,1277
#define X86_EFLAGS_VM	49,1328
#define X86_EFLAGS_AC	50,1380
#define X86_EFLAGS_VIF	51,1435
#define X86_EFLAGS_VIP	52,1498
#define X86_EFLAGS_ID	53,1564
#define X86_CR0_PE 58,1658
#define X86_CR0_MP 59,1737
#define X86_CR0_EM 60,1816
#define X86_CR0_TS 61,1895
#define X86_CR0_ET 62,1974
#define X86_CR0_NE 63,2053
#define X86_CR0_WP 64,2132
#define X86_CR0_AM 65,2211
#define X86_CR0_NW 66,2290
#define X86_CR0_CD 67,2369
#define X86_CR0_PG 68,2448
#define X86_CR4_VME	73,2564
#define X86_CR4_PVI	74,2621
#define X86_CR4_TSD	75,2686
#define X86_CR4_DE	76,2748
#define X86_CR4_PSE	77,2809
#define X86_CR4_PAE	78,2871
#define X86_CR4_MCE	79,2940
#define X86_CR4_PGE	80,2995
#define X86_CR4_PCE	81,3049
#define X86_CR4_OSFXSR	82,3120
#define X86_CR4_OSXMMEXCPT	83,3190
#define X86_CR4_VMXE	84,3261
#define X86_CR4_SMXE	85,3308
#define X86_CR4_FSGSBASE	86,3355
#define X86_CR4_OSXSAVE	87,3420
#define TRAP_divide_error 92,3511
#define TRAP_debug 93,3544
#define TRAP_nmi 94,3577
#define TRAP_int3 95,3610
#define TRAP_overflow 96,3643
#define TRAP_bounds 97,3676
#define TRAP_invalid_op 98,3709
#define TRAP_no_device 99,3742
#define TRAP_double_fault 100,3775
#define TRAP_copro_seg 101,3808
#define TRAP_invalid_tss 102,3841
#define TRAP_no_segment 103,3874
#define TRAP_stack_error 104,3907
#define TRAP_gp_fault 105,3940
#define TRAP_page_fault 106,3973
#define TRAP_spurious_int 107,4006
#define TRAP_copro_error 108,4039
#define TRAP_alignment_check 109,4072
#define TRAP_machine_check 110,4105
#define TRAP_simd_error 111,4138
#define TRAP_syscall 115,4331
#define EXCRET_fault_fixed 118,4431
#define TBF_EXCEPTION 121,4494
#define TBF_EXCEPTION_ERRCODE 122,4527
#define TBF_INTERRUPT 123,4560
#define TBF_FAILSAFE 124,4593
#define _TF_kernel_mode 127,4658
#define TF_kernel_mode 128,4691
#define PFEC_page_present 131,4773
#define PFEC_write_access 132,4809
#define PFEC_user_mode 133,4845
#define PFEC_reserved_bit 134,4881
#define PFEC_insn_fetch 135,4917
#define PFEC_page_paged 136,4953
#define PFEC_page_shared 137,4989
#define current_text_addr(149,5202
#define current_text_addr(155,5427
struct cpuinfo_x86 162,5638
    __u8 x86;163,5659
    __u8 x86_vendor;164,5701
    __u8 x86_model;165,5743
    __u8 x86_mask;166,5763
    int  cpuid_level;167,5782
    unsigned int x86_capability[x86_capability168,5856
    char x86_vendor_id[x86_vendor_id169,5899
    char x86_model_id[x86_model_id170,5927
    int  x86_cache_size;171,5954
    int  x86_cache_alignment;172,6033
    int  x86_power;173,6081
    __u32 x86_max_cores;174,6101
    __u32 booted_cores;175,6163
    __u32 x86_num_siblings;176,6224
    __u32 apicid;177,6292
    unsigned short x86_clflush_size;178,6310
} __cacheline_aligned;179,6347
#define current_cpu_data 189,6501
#define cpu_data 191,6561
#define current_cpu_data 192,6595
static always_inline void detect_ht(214,7231
#define cpu_to_core(217,7301
#define cpu_to_socket(218,7349
#define cpuid(225,7555
static inline void cpuid_count(234,7945
static always_inline unsigned int cpuid_eax(250,8270
static always_inline unsigned int cpuid_ebx(261,8469
static always_inline unsigned int cpuid_ecx(272,8679
static always_inline unsigned int cpuid_edx(283,8889
static inline unsigned long read_cr0(294,9099
static inline void write_cr0(301,9241
static inline unsigned long read_cr2(306,9360
static inline unsigned long read_cr4(315,9539
static inline void write_cr4(320,9613
static inline void clts(327,9784
static inline void stts(332,9849
static always_inline void set_in_cr4 345,10139
static always_inline void clear_in_cr4 351,10266
#define CX86_PCR0 361,10458
#define CX86_GCR 362,10481
#define CX86_CCR0 363,10504
#define CX86_CCR1 364,10527
#define CX86_CCR2 365,10550
#define CX86_CCR3 366,10573
#define CX86_CCR4 367,10596
#define CX86_CCR5 368,10619
#define CX86_CCR6 369,10642
#define CX86_CCR7 370,10665
#define CX86_PCR1 371,10688
#define CX86_DIR0 372,10711
#define CX86_DIR1 373,10734
#define CX86_ARR_BASE 374,10757
#define CX86_RCR_BASE 375,10784
#define getCx86(381,10873
#define setCx86(383,10931
static inline void sync_core(389,11062
static always_inline void __monitor(399,11229
static always_inline void __mwait(408,11494
#define IOBMP_BYTES 416,11687
#define IOBMP_INVALID_OFFSET 417,11724
struct tss_struct 419,11764
    unsigned short	back_link,420,11784
    unsigned short	back_link,__blh;420,11784
    union { u64 rsp0,422,11838
    union { u64 rsp0, esp0;422,11838
    union { u64 rsp1,423,11869
    union { u64 rsp1, esp1;423,11869
    union { u64 rsp2,424,11900
    union { u64 rsp2, esp2;424,11900
    u64 reserved1;425,11931
    u64 ist[ist426,11950
    u64 reserved2;427,11966
    u16 reserved3;428,11985
    u32 esp0;430,12010
    u16 ss0,431,12024
    u16 ss0,__ss0h;431,12024
    u32 esp1;432,12044
    u16 ss1,433,12058
    u16 ss1,__ss1h;433,12058
    u32 esp2;434,12078
    u16 ss2,435,12092
    u16 ss2,__ss2h;435,12092
    u32 __cr3;436,12112
    u32 eip;437,12127
    u32 eflags;438,12140
    u32 eax,439,12156
    u32 eax,ecx,439,12156
    u32 eax,ecx,edx,439,12156
    u32 eax,ecx,edx,ebx;439,12156
    u32 esp;440,12181
    u32 ebp;441,12194
    u32 esi;442,12207
    u32 edi;443,12220
    u16 es,444,12233
    u16 es, __esh;444,12233
    u16 cs,445,12252
    u16 cs, __csh;445,12252
    u16 ss,446,12271
    u16 ss, __ssh;446,12271
    u16 ds,447,12290
    u16 ds, __dsh;447,12290
    u16 fs,448,12309
    u16 fs, __fsh;448,12309
    u16 gs,449,12328
    u16 gs, __gsh;449,12328
    u16 ldt,450,12347
    u16 ldt, __ldth;450,12347
    u16 trace;451,12368
    u16 bitmap;453,12390
    u8 __cacheline_filler[__cacheline_filler455,12475
} __cacheline_aligned 456,12506
# define IST_DF 459,12572
# define IST_NMI 460,12593
# define IST_MCE 461,12614
# define IST_MAX 462,12635
#define IDT_ENTRIES 465,12664
#define set_int80_direct_trap(475,12883
#define set_int80_direct_trap(481,13042
#define write_debugreg(494,13335
#define read_debugreg(498,13533
static always_inline void rep_nop(506,13920
#define cpu_relax(511,14012
#define ARCH_HAS_PREFETCH516,14130
extern always_inline void prefetch(517,14156
#define ARCH_HAS_PREFETCH524,14291
#define ARCH_HAS_PREFETCHW525,14317
#define ARCH_HAS_SPINLOCK_PREFETCH526,14344
extern always_inline void prefetch(528,14380
extern always_inline void prefetchw(533,14484
#define spin_lock_prefetch(537,14589
#define dump_execution_state(545,14853
#define compat_show_guest_stack(552,15148
#define DECLARE_TRAP_HANDLER(560,15324
#undef DECLARE_TRAP_HANDLER582,16208

xen/include/asm-x86/acpi.h,1437
#define _ASM_X86_ACPI_H2,24
#define COMPILER_DEPENDENT_INT64 32,1177
#define COMPILER_DEPENDENT_UINT64 33,1222
#define ACPI_SYSTEM_XFACE43,1567
#define ACPI_EXTERNAL_XFACE44,1593
#define ACPI_INTERNAL_XFACE45,1621
#define ACPI_INTERNAL_VAR_XFACE46,1649
#define ACPI_ASM_MACROS50,1700
#define BREAKPOINT351,1724
#define ACPI_DISABLE_IRQS(52,1744
#define ACPI_ENABLE_IRQS(53,1792
#define ACPI_FLUSH_CPU_CACHE(54,1839
#define ACPI_ACQUIRE_GLOBAL_LOCK(59,1985
#define ACPI_RELEASE_GLOBAL_LOCK(62,2090
#define ACPI_DIV_64_BY_32(68,2228
#define ACPI_SHIFT_RIGHT_64(75,2400
static inline void disable_acpi(91,2909
#define FIX_ACPI_PAGES 100,3098
static inline void acpi_noirq_set(102,3124
static inline void acpi_disable_pci(103,3184
static inline int acpi_irq_balance_set(108,3273
#define ARCH_HAS_POWER_INIT	120,3626
#define NR_NODE_MEMBLKS 124,3727
#define acpi_video_flags 129,3837
struct acpi_sleep_info 134,4022
    struct acpi_generic_address pm1a_cnt_blk;135,4047
    struct acpi_generic_address pm1b_cnt_blk;136,4093
    struct acpi_generic_address pm1a_evt_blk;137,4139
    struct acpi_generic_address pm1b_evt_blk;138,4185
    uint16_t pm1a_cnt_val;139,4231
    uint16_t pm1b_cnt_val;140,4258
    uint32_t sleep_state;141,4285
    uint64_t wakeup_vector;142,4311
    uint32_t vector_width;143,4339
#define MAX_MADT_ENTRIES	148,4402
#define MAX_LOCAL_APIC	150,4484
#define INVALID_ACPIID	152,4531

xen/include/asm-x86/mtrr.h,1089
#define __ASM_X86_MTRR_H__2,27
#define MTRR_TYPE_UNCACHABLE 8,178
#define MTRR_TYPE_WRCOMB 9,209
#define MTRR_TYPE_WRTHROUGH 10,240
#define MTRR_TYPE_WRPROT 11,271
#define MTRR_TYPE_WRBACK 12,302
#define MTRR_NUM_TYPES 13,333
#define MEMORY_NUM_TYPES 14,364
#define NO_HARDCODE_MEM_TYPE 15,408
#define NORMAL_CACHE_MODE 17,456
#define NO_FILL_CACHE_MODE 18,493
    PAT_TYPE_UNCACHABLE=21,538
    PAT_TYPE_WRCOMB=22,565
    PAT_TYPE_RESERVED=23,588
    PAT_TYPE_WRTHROUGH=24,613
    PAT_TYPE_WRPROT=25,639
    PAT_TYPE_WRBACK=26,662
    PAT_TYPE_UC_MINUS=27,685
    PAT_TYPE_NUMS28,710
#define INVALID_MEM_TYPE 31,732
typedef u8 mtrr_type;35,870
struct mtrr_var_range 37,893
	uint64_t base;38,917
	uint64_t mask;39,933
#define NUM_FIXED_RANGES 42,953
#define NUM_FIXED_MSR 43,981
struct mtrr_state 44,1006
	struct mtrr_var_range *var_ranges;var_ranges45,1026
	mtrr_type fixed_ranges[fixed_ranges46,1062
	unsigned char enabled;47,1105
	unsigned char have_fixed;48,1129
	mtrr_type def_type;49,1156
	u64       mtrr_cap;51,1178
	bool_t    overlapped;53,1264

xen/include/asm-x86/i387.h,1014
#define __ASM_I386_I387_H12,224
#define XSTATE_FP 25,509
#define XSTATE_SSE 26,545
#define XSTATE_YMM 27,581
#define XSTATE_LWP 28,617
#define XSTATE_FP_SSE 29,686
#define XCNTXT_MASK 30,735
#define XSTATE_YMM_OFFSET 31,810
#define XSTATE_YMM_SIZE 32,848
#define XSAVEOPT 33,879
struct xsave_struct35,913
    struct { char x[x37,935
    struct { char x[512]; } fpu_sse;37,935
        u64 xstate_bv;40,1013
        u64 reserved[reserved41,1036
    } xsave_hdr;42,1061
    struct { char x[x44,1131
    struct { char x[XSTATE_YMM_SIZE]; } ymm;44,1131
    char   data[data45,1186
#define XCR_XFEATURE_ENABLED_MASK 48,1298
#define REX_PREFIX 51,1358
#define REX_PREFIX53,1392
static inline void xsetbv(58,1453
static inline void set_xcr0(67,1660
static inline uint64_t get_xcr0(73,1790
static inline void xsave(78,1860
static inline void xsaveopt(90,2115
static inline void xrstor(102,2373
#define unlazy_fpu(117,2735
#define load_mxcsr(122,2900
static inline void setup_fpu(127,3113

xen/include/asm-x86/mach-generic/mach_apic.h,780
#define __ASM_MACH_APIC_H2,26
#define esr_disable 10,224
#define INT_DELIVERY_MODE 13,329
#define INT_DEST_MODE 14,384
#define TARGET_CPUS	15,431
#define init_apic_ldr 16,478
#define clustered_apic_check 17,525
#define cpu_mask_to_apicid 18,587
#define vector_allocation_cpumask(19,644
static inline void enable_apic_mode(21,726
#define apicid_to_node(27,865
static inline int mpc_apic_id(31,963
static inline int multi_timer_check(42,1285
static inline int apic_id_registered(56,1717
static inline physid_mask_t ioapic_phys_id_map(62,1831
static inline unsigned long check_apicid_used(67,1925
static inline unsigned long check_apicid_present(72,2048
static inline int check_phys_apicid_present(77,2166
static inline physid_mask_t apicid_to_cpu_present(82,2315

xen/include/asm-x86/mach-generic/mach_mpparse.h,115
#define _MACH_MPPARSE_H 2,24
static inline void mpc_oem_bus_info(4,51
static inline void mpc_oem_pci_bus(10,228

xen/include/asm-x86/multicall.h,146
#define __ASM_X86_MULTICALL_H__6,140
#define do_multicall_call(12,216
#define compat_multicall_call(43,2062
#define do_multicall_call(74,3834

xen/include/asm-x86/p2m.h,3335
#define _XEN_P2M_H27,1189
#define phys_to_machine_mapping 48,2022
#define HAVE_GRANT_MAP_P2M51,2109
    p2m_invalid 67,2750
    p2m_ram_rw 68,2808
    p2m_ram_logdirty 69,2874
    p2m_ram_ro 70,2948
    p2m_mmio_dm 71,3025
    p2m_mmio_direct 72,3102
    p2m_populate_on_demand 73,3180
    p2m_grant_map_rw 78,3414
    p2m_grant_map_ro 79,3477
    p2m_ram_paging_out 83,3648
    p2m_ram_paged 84,3719
    p2m_ram_paging_in 85,3790
    p2m_ram_paging_in_start 86,3860
    p2m_ram_shared 87,3930
    p2m_ram_broken 88,3996
} p2m_type_t;89,4075
    p2m_query 92,4105
    p2m_alloc 93,4178
    p2m_guest 94,4251
} p2m_query_t;95,4324
#define p2m_to_mask(98,4396
#define P2M_RAM_TYPES 101,4485
#define P2M_GRANT_TYPES 112,5066
#define P2M_MMIO_TYPES 116,5256
#define P2M_RO_TYPES 120,5447
#define P2M_MAGIC_TYPES 125,5676
#define P2M_PAGEABLE_TYPES 128,5760
#define P2M_PAGING_TYPES 130,5814
#define P2M_PAGED_TYPES 135,6076
#define P2M_SHARABLE_TYPES 140,6267
#define P2M_SHARED_TYPES 141,6320
#define P2M_BROKEN_TYPES 142,6377
#define p2m_is_ram(145,6457
#define p2m_is_mmio(146,6514
#define p2m_is_readonly(147,6573
#define p2m_is_magic(148,6634
#define p2m_is_grant(149,6695
#define p2m_is_valid(153,6959
#define p2m_has_emt(154,7037
#define p2m_is_pageable(155,7129
#define p2m_is_paging(156,7196
#define p2m_is_paged(157,7261
#define p2m_is_sharable(158,7325
#define p2m_is_shared(159,7392
#define p2m_is_broken(160,7457
#define POPULATE_ON_DEMAND_MFN 163,7548
#define POD_PAGE_ORDER 164,7587
#define PAGING_MFN 166,7613
struct p2m_domain 168,7646
    spinlock_t         lock;170,7714
    int                locker;171,7743
    const char        *locker_function;locker_function172,7813
    pagetable_t        phys_table;175,7926
    struct domain     *domain;domain177,7962
    struct page_list_head pages;180,8067
    int                (*set_entry set_entry182,8101
    mfn_t              (*get_entry get_entry186,8354
    mfn_t              (*get_entry_current)get_entry_current190,8587
    void               (*change_entry_type_global)change_entry_type_global194,8840
    unsigned long max_mapped_pfn;199,9114
        struct page_list_head super,217,9932
                         single;218,10011
        int              count,219,10090
                         entry_count;220,10169
        unsigned         reclaim_super;221,10248
        unsigned         reclaim_single;222,10314
        unsigned         max_guest;223,10381
    } pod;224,10460
#define p2m_get_hostp2m(228,10500
#define p2m_get_pagetable(230,10549
#define p2m_lock_init(240,10849
#define p2m_lock(247,11116
#define p2m_unlock(261,11925
#define p2m_locked_by_me(269,12290
static inline p2m_type_t p2m_flags_to_type(274,12451
static inline mfn_t gfn_to_mfn_type_current(285,12736
gfn_to_mfn_type_p2m(295,13093
static inline mfn_t _gfn_to_mfn_type(303,13315
#define gfn_to_mfn(334,14183
#define gfn_to_mfn_query(335,14258
#define gfn_to_mfn_guest(336,14339
static inline mfn_t gfn_to_mfn_unshare(338,14421
static inline unsigned long gmfn_to_mfn(365,15159
static inline unsigned long mfn_to_gfn(376,15448
static inline int guest_physmap_add_page(437,17646
static inline void guest_physmap_remove_page(446,18025
static inline void p2m_mem_paging_populate(481,19603

xen/include/xsm/acm/acm_endian.h,135
#define _ACM_ENDIAN_H23,582
static inline void arrcpy16(27,633
static inline void arrcpy32(34,792
static inline void arrcpy(41,951

xen/include/xsm/acm/acm_core.h,2251
#define _ACM_CORE_H20,538
#define ACM_DEFAULT_SECURITY_POLICY 28,700
struct acm_binary_policy 32,854
    char *policy_reference_name;policy_reference_name33,881
    u16 primary_policy_code;34,914
    u16 secondary_policy_code;35,943
    struct acm_policy_version xml_pol_version;36,974
    u8 xml_policy_hash[xml_policy_hash37,1021
struct chwall_binary_policy 40,1069
    u32 max_types;41,1099
    u32 max_ssidrefs;42,1118
    u32 max_conflictsets;43,1140
    domaintype_t *ssidrefs;ssidrefs44,1166
    domaintype_t *conflict_aggregate_set;conflict_aggregate_set45,1231
    domaintype_t *running_types;running_types46,1297
    domaintype_t *conflict_sets;conflict_sets47,1356
struct ste_binary_policy 50,1430
    u32 max_types;51,1457
    u32 max_ssidrefs;52,1476
    domaintype_t *ssidrefs;ssidrefs53,1498
    atomic_t ec_eval_count,54,1563
    atomic_t ec_eval_count, gt_eval_count;54,1563
    atomic_t ec_denied_count,55,1606
    atomic_t ec_denied_count, gt_denied_count;55,1606
    atomic_t ec_cachehit_count,56,1653
    atomic_t ec_cachehit_count, gt_cachehit_count;56,1653
#define ACM_DATATYPE_domain 69,2084
#define ACM_TE_CACHE_SIZE 73,2258
#define ACM_STE_valid 74,2286
#define ACM_STE_free 75,2310
struct acm_ste_cache_line 82,2486
    int valid;83,2514
    domid_t id;84,2545
struct acm_ssid_domain 88,2615
    struct list_head node;89,2640
    int datatype;90,2698
    ssidref_t ssidref;91,2781
    ssidref_t old_ssidref;92,2842
    void *primary_ssid;primary_ssid93,2925
    void *secondary_ssid;secondary_ssid94,3003
    struct domain *subject;subject95,3087
    domid_t domainid;96,3153
struct chwall_ssid 100,3232
    ssidref_t chwall_ssidref;101,3253
struct ste_ssid 105,3327
    ssidref_t ste_ssidref;106,3345
    struct acm_ste_cache_line ste_cache[ste_cache107,3372
#define ACM_PRIMARY(114,3595
#define ACM_SECONDARY(117,3649
#define GET_SSIDREF(120,3702
#define GET_SSIDP(125,3907
#define ACM_INVALID_SSIDREF 129,4044
struct acm_sized_buffer131,4087
    uint32_t *array;array133,4113
    uint num_items;134,4134
    uint position;135,4154
static inline int acm_array_append_tuple(138,4177
#define ACM_MAX_NUM_TYPES 178,5685
#define for_each_acmssid(182,5790

xen/include/xsm/acm/acm_hooks.h,2470
#define _ACM_HOOKS_H20,537
struct acm_operations 89,3125
    int  (*init_domain_ssid)init_domain_ssid91,3213
    void (*free_domain_ssid)free_domain_ssid92,3286
    int  (*dump_binary_policy)dump_binary_policy93,3339
    int  (*test_binary_policy)test_binary_policy94,3406
    int  (*set_binary_policy)set_binary_policy97,3599
    int  (*dump_statistics)dump_statistics98,3666
    int  (*dump_ssid_types)dump_ssid_types99,3733
    int  (*domain_create)domain_create101,3875
    void (*domain_destroy)domain_destroy103,4010
    int  (*pre_eventchannel_unbound)pre_eventchannel_unbound105,4141
    void (*fail_eventchannel_unbound)fail_eventchannel_unbound106,4211
    int  (*pre_eventchannel_interdomain)pre_eventchannel_interdomain107,4281
    void (*fail_eventchannel_interdomain)fail_eventchannel_interdomain108,4337
    int  (*pre_grant_map_ref)pre_grant_map_ref110,4444
    void (*fail_grant_map_ref)fail_grant_map_ref111,4497
    int  (*pre_grant_setup)pre_grant_setup112,4550
    void (*fail_grant_setup)fail_grant_setup113,4603
    int (*sharing)sharing115,4720
    int (*authorization)authorization117,4841
    int (*conflictset)conflictset119,4962
    int (*is_default_policy)is_default_policy121,5083
# define traceprintk(133,5387
# define traceprintk(135,5449
#  define printkd(145,5657
#  define printkd(147,5716
static inline int acm_pre_eventchannel_unbound(152,5778
static inline int acm_pre_eventchannel_interdomain(154,5865
static inline int acm_pre_grant_map_ref(156,5942
static inline int acm_pre_grant_setup(158,6009
static inline int acm_is_policy(160,6074
static inline int acm_sharing(162,6150
static inline int acm_authorization(164,6234
static inline int acm_conflictset(166,6324
static inline int acm_domain_create(168,6392
static inline void acm_domain_destroy(170,6479
#define DOM0_SSIDREF 173,6548
static inline void acm_domain_ssid_onto_list(177,6581
static inline void acm_domain_ssid_off_list(184,6772
static inline int acm_pre_eventchannel_unbound(191,6950
static inline int acm_pre_eventchannel_interdomain(206,7572
static inline int acm_pre_grant_map_ref(222,8189
static inline int acm_pre_grant_setup(243,8768
static inline void acm_domain_destroy(265,9332
static inline int acm_domain_create(280,9820
static inline int acm_sharing(320,10975
static inline int acm_authorization(333,11383
static inline int acm_conflictset(346,11832
#define DOM0_SSIDREF 360,12321

xen/include/xsm/xsm.h,8790
#define __XSM_H__16,464
typedef void xsm_op_t;21,534
    #define xsm_call(25,611
    #define xsm_call(27,654
typedef u32 xsm_magic_t;31,738
#define XSM_MAGIC 33,781
typedef int (*xsm_initcall_t)xsm_initcall_t41,890
#define xsm_initcall(45,997
struct xsm_operations 49,1148
    void (*security_domaininfo)security_domaininfo50,1172
    int (*setvcpucontext)setvcpucontext52,1303
    int (*pausedomain)pausedomain53,1349
    int (*unpausedomain)unpausedomain54,1392
    int (*resumedomain)resumedomain55,1437
    int (*domain_create)domain_create56,1481
    int (*max_vcpus)max_vcpus57,1539
    int (*destroydomain)destroydomain58,1580
    int (*vcpuaffinity)vcpuaffinity59,1625
    int (*scheduler)scheduler60,1678
    int (*getdomaininfo)getdomaininfo61,1719
    int (*getvcpucontext)getvcpucontext62,1764
    int (*getvcpuinfo)getvcpuinfo63,1810
    int (*domain_settime)domain_settime64,1853
    int (*set_target)set_target65,1899
    int (*tbufcontrol)tbufcontrol66,1959
    int (*readconsole)readconsole67,1990
    int (*sched_id)sched_id68,2031
    int (*setdomainmaxmem)setdomainmaxmem69,2059
    int (*setdomainhandle)setdomainhandle70,2106
    int (*setdebugging)setdebugging71,2153
    int (*perfcontrol)perfcontrol72,2197
    int (*debug_keys)debug_keys73,2228
    int (*getcpuinfo)getcpuinfo74,2258
    int (*availheap)availheap75,2288
    int (*get_pmstat)get_pmstat76,2317
    int (*pm_op)pm_op77,2347
    int (*evtchn_unbound)evtchn_unbound79,2373
    int (*evtchn_interdomain)evtchn_interdomain80,2452
    void (*evtchn_close_post)evtchn_close_post82,2604
    int (*evtchn_send)evtchn_send83,2656
    int (*evtchn_status)evtchn_status84,2719
    int (*evtchn_reset)evtchn_reset85,2784
    int (*grant_mapref)grant_mapref87,2849
    int (*grant_unmapref)grant_unmapref88,2929
    int (*grant_setup)grant_setup89,2995
    int (*grant_transfer)grant_transfer90,3058
    int (*grant_copy)grant_copy91,3124
    int (*grant_query_size)grant_query_size92,3186
    int (*alloc_security_domain)alloc_security_domain94,3255
    void (*free_security_domain)free_security_domain95,3308
    int (*alloc_security_evtchn)alloc_security_evtchn96,3361
    void (*free_security_evtchn)free_security_evtchn97,3416
    int (*memory_adjust_reservation)memory_adjust_reservation99,3472
    int (*memory_stat_reservation)memory_stat_reservation100,3549
    int (*memory_pin_page)memory_pin_page101,3624
    int (*console_io)console_io103,3696
    int (*profile)profile105,3748
    int (*kexec)kexec107,3796
    int (*schedop_shutdown)schedop_shutdown108,3821
    int (*add_range)add_range109,3889
    int (*remove_range)remove_range110,3976
    long (*__do_xsm_op)__do_xsm_op112,4067
    int (*shadow_control)shadow_control115,4143
    int (*getpageframeinfo)getpageframeinfo116,4202
    int (*getmemlist)getmemlist117,4256
    int (*hypercall_init)hypercall_init118,4298
    int (*hvmcontext)hvmcontext119,4344
    int (*address_size)address_size120,4399
    int (*machine_address_size)machine_address_size121,4456
    int (*hvm_param)hvm_param122,4521
    int (*hvm_set_pci_intx_level)hvm_set_pci_intx_level123,4580
    int (*hvm_set_isa_irq_level)hvm_set_isa_irq_level124,4634
    int (*hvm_set_pci_link_route)hvm_set_pci_link_route125,4687
    int (*apic)apic126,4741
    int (*assign_vector)assign_vector127,4786
    int (*xen_settime)xen_settime128,4846
    int (*memtype)memtype129,4877
    int (*microcode)microcode130,4915
    int (*physinfo)physinfo131,4944
    int (*platform_quirk)platform_quirk132,4972
    int (*firmware_info)firmware_info133,5010
    int (*acpi_sleep)acpi_sleep134,5043
    int (*change_freq)change_freq135,5073
    int (*getidletime)getidletime136,5104
    int (*machine_memory_map)machine_memory_map137,5135
    int (*domain_memory_map)domain_memory_map138,5173
    int (*mmu_normal_update)mmu_normal_update139,5222
    int (*mmu_machphys_update)mmu_machphys_update141,5369
    int (*update_va_mapping)update_va_mapping142,5439
    int (*add_to_physmap)add_to_physmap144,5585
    int (*sendtrigger)sendtrigger145,5651
    int (*test_assign_device)test_assign_device146,5694
    int (*assign_device)assign_device147,5748
    int (*deassign_device)deassign_device148,5815
    int (*bind_pt_irq)bind_pt_irq149,5884
    int (*pin_mem_cacheattr)pin_mem_cacheattr150,5964
    int (*ext_vcpucontext)ext_vcpucontext151,6013
    int (*vcpuextstate)vcpuextstate152,6074
static inline void xsm_security_domaininfo 160,6191
static inline int xsm_setvcpucontext(166,6381
static inline int xsm_pausedomain 171,6481
static inline int xsm_unpausedomain 176,6576
static inline int xsm_resumedomain 181,6675
static inline int xsm_domain_create 186,6772
static inline int xsm_max_vcpus(191,6893
static inline int xsm_destroydomain 196,6983
static inline int xsm_vcpuaffinity 201,7082
static inline int xsm_scheduler 206,7193
static inline int xsm_getdomaininfo 211,7284
static inline int xsm_getvcpucontext 216,7383
static inline int xsm_getvcpuinfo 221,7484
static inline int xsm_domain_settime 226,7579
static inline int xsm_set_target 231,7680
static inline int xsm_tbufcontrol 236,7794
static inline int xsm_readconsole 241,7876
static inline int xsm_sched_id 246,7973
static inline int xsm_setdomainmaxmem 251,8049
static inline int xsm_setdomainhandle 256,8152
static inline int xsm_setdebugging 261,8255
static inline int xsm_perfcontrol 266,8352
static inline int xsm_debug_keys 271,8434
static inline int xsm_availheap 276,8514
static inline int xsm_getcpuinfo 281,8592
static inline int xsm_get_pmstat(286,8672
static inline int xsm_pm_op(291,8751
static inline int xsm_evtchn_unbound 296,8820
static inline int xsm_evtchn_interdomain 302,9034
static inline void xsm_evtchn_close_post 308,9243
static inline int xsm_evtchn_send 313,9348
static inline int xsm_evtchn_status 318,9468
static inline int xsm_evtchn_reset 323,9592
static inline int xsm_grant_mapref 328,9714
static inline int xsm_grant_unmapref 334,9923
static inline int xsm_grant_setup 339,10049
static inline int xsm_grant_transfer 344,10169
static inline int xsm_grant_copy 349,10295
static inline int xsm_grant_query_size 354,10413
static inline int xsm_alloc_security_domain 359,10543
static inline void xsm_free_security_domain 364,10658
static inline int xsm_alloc_security_evtchn 369,10765
static inline void xsm_free_security_evtchn 374,10884
static inline int xsm_memory_adjust_reservation 379,10995
static inline int xsm_memory_stat_reservation 385,11211
static inline int xsm_memory_pin_page(391,11415
static inline int xsm_console_io 396,11547
static inline int xsm_profile 401,11654
static inline int xsm_kexec 406,11753
static inline int xsm_schedop_shutdown 411,11823
static inline int xsm_add_range 416,11953
static inline int xsm_remove_range 422,12175
static inline long __do_xsm_op 428,12402
static inline int xsm_init 441,12928
static inline int xsm_shadow_control 450,13152
static inline int xsm_getpageframeinfo 455,13270
static inline int xsm_getmemlist 460,13384
static inline int xsm_hypercall_init 465,13477
static inline int xsm_hvmcontext 470,13578
static inline int xsm_address_size 475,13690
static inline int xsm_machine_address_size 480,13806
static inline int xsm_hvm_param 485,13938
static inline int xsm_hvm_set_pci_intx_level 490,14051
static inline int xsm_hvm_set_isa_irq_level 495,14168
static inline int xsm_hvm_set_pci_link_route 500,14283
static inline int xsm_apic 505,14400
static inline int xsm_assign_vector 510,14495
static inline int xsm_xen_settime 515,14615
static inline int xsm_memtype 520,14697
static inline int xsm_microcode 525,14788
static inline int xsm_physinfo 530,14866
static inline int xsm_platform_quirk 535,14942
static inline int xsm_firmware_info 540,15045
static inline int xsm_acpi_sleep 545,15131
static inline int xsm_change_freq 550,15211
static inline int xsm_getidletime 555,15293
static inline int xsm_machine_memory_map(560,15375
static inline int xsm_domain_memory_map(565,15470
static inline int xsm_mmu_normal_update 570,15576
static inline int xsm_mmu_machphys_update 576,15790
static inline int xsm_update_va_mapping(581,15925
static inline int xsm_add_to_physmap(587,16136
static inline int xsm_sendtrigger(592,16261
static inline int xsm_test_assign_device(597,16355
static inline int xsm_assign_device(602,16477
static inline int xsm_deassign_device(607,16610
static inline int xsm_bind_pt_irq(612,16747
static inline int xsm_pin_mem_cacheattr(618,16933
static inline int xsm_ext_vcpucontext(623,17039
static inline int xsm_vcpuextstate(627,17159

xen/drivers/pci/pci.c,62
int pci_find_cap_offset(10,195
int pci_find_next_cap(41,835

xen/drivers/char/ns16550.c,2946
static char __initdata opt_com1[opt_com128,927
static char __initdata opt_com2[opt_com229,969
static struct ns16550 33,1076
    int baud,34,1100
    int baud, clock_hz,34,1100
    int baud, clock_hz, data_bits,34,1100
    int baud, clock_hz, data_bits, parity,34,1100
    int baud, clock_hz, data_bits, parity, stop_bits,34,1100
    int baud, clock_hz, data_bits, parity, stop_bits, irq;34,1100
    unsigned long io_base;35,1159
    char *remapped_io_base;remapped_io_base36,1233
    struct irqaction irqaction;38,1360
    struct timer timer;40,1450
    unsigned int timeout_ms;41,1474
    bool_t probing,42,1503
    bool_t probing, intr_works;42,1503
    unsigned int pb_bdf[pb_bdf44,1566
    unsigned int ps_bdf[ps_bdf45,1615
    bool_t pb_bdf_enable;46,1669
    bool_t ps_bdf_enable;47,1747
} ns16550_com[ns16550_com48,1823
#define RBR 51,1877
#define THR 52,1936
#define IER 53,1995
#define IIR 54,2054
#define FCR 55,2113
#define LCR 56,2172
#define MCR 57,2231
#define LSR 58,2290
#define MSR 59,2349
#define DLL 60,2408
#define DLM 61,2474
#define IER_ERDAI 64,2573
#define IER_ETHREI 65,2632
#define IER_ELSI 66,2691
#define IER_EMSI 67,2750
#define IIR_NOINT 70,2850
#define IIR_IMASK 71,2909
#define IIR_LSI 72,2968
#define IIR_RDAI 73,3027
#define IIR_THREI 74,3086
#define IIR_MSI 75,3145
#define FCR_ENABLE 78,3233
#define FCR_CLRX 79,3292
#define FCR_CLTX 80,3351
#define FCR_DMA 81,3410
#define FCR_TRG1 82,3469
#define FCR_TRG4 83,3528
#define FCR_TRG8 84,3587
#define FCR_TRG14 85,3646
#define LCR_DLAB 88,3734
#define MCR_DTR 91,3823
#define MCR_RTS 92,3882
#define MCR_OUT2 93,3941
#define MCR_LOOP 94,4000
#define LSR_DR 97,4092
#define LSR_OE 98,4151
#define LSR_PE 99,4210
#define LSR_FE 100,4269
#define LSR_BI 101,4328
#define LSR_THRE 102,4387
#define LSR_TEMT 103,4446
#define LSR_ERR 104,4505
#define PARITY_NONE 107,4628
#define PARITY_ODD 108,4659
#define PARITY_EVEN 109,4690
#define PARITY_MARK 110,4721
#define PARITY_SPACE 111,4752
#define UART_CLOCK_HZ 114,4863
static char ns_read_reg(116,4896
static void ns_write_reg(123,5087
static void ns16550_interrupt(130,5288
static void __ns16550_poll(156,5989
static void ns16550_poll(179,6657
static int ns16550_tx_empty(189,6865
static void ns16550_putc(195,7013
static int ns16550_getc(201,7148
static void pci_serial_early_init(212,7366
static void __devinit ns16550_init_preirq(227,7866
static void __devinit ns16550_init_postirq(274,9502
static void __init ns16550_endboot(317,10942
#define ns16550_endboot 324,11143
static int ns16550_irq(327,11180
static struct uart_driver __read_mostly ns16550_driver 333,11320
static int __init parse_parity_char(343,11641
static void __init parse_pci_bdf(361,11946
static int __init check_existence(374,12274
#define PARSE_ERR(414,13427
static void __init ns16550_parse_port_config(420,13634
void __init ns16550_init(501,15930

xen/drivers/char/console.c,3811
static char __initdata opt_console[opt_console41,1052
static unsigned char __read_mostly opt_conswitch[opt_conswitch48,1454
static bool_t __initdata opt_sync_console;52,1633
static bool_t __read_mostly opt_console_to_ring;56,1804
static bool_t __read_mostly opt_console_timestamps;60,1989
static uint32_t __initdata opt_conring_size;64,2172
#define _CONRING_SIZE 67,2264
#define CONRING_IDX_MASK(68,2292
static char __initdata _conring[_conring69,2343
static char *__read_mostly conring 70,2391
static uint32_t __read_mostly conring_size 71,2438
static uint32_t conringc,72,2498
static uint32_t conringc, conringp;72,2498
static int __read_mostly sercon_handle 74,2535
#define XENLOG_UPPER_THRESHOLD 92,3212
#define XENLOG_LOWER_THRESHOLD 93,3286
#define XENLOG_GUEST_UPPER_THRESHOLD 94,3360
#define XENLOG_GUEST_LOWER_THRESHOLD 95,3434
#define XENLOG_UPPER_THRESHOLD 97,3514
#define XENLOG_LOWER_THRESHOLD 98,3588
#define XENLOG_GUEST_UPPER_THRESHOLD 99,3662
#define XENLOG_GUEST_LOWER_THRESHOLD 100,3736
#define XENLOG_DEFAULT 106,3936
#define XENLOG_GUEST_DEFAULT 107,3988
static int __read_mostly xenlog_upper_thresh 109,4041
static int __read_mostly xenlog_lower_thresh 110,4112
static int __read_mostly xenlog_guest_upper_thresh 111,4183
static int __read_mostly xenlog_guest_lower_thresh 112,4266
static atomic_t print_everything 128,4869
#define ___parse_loglvl(130,4921
static int __init __parse_loglvl(136,5160
static void __init _parse_loglvl(147,5504
static void __init parse_loglvl(156,5735
static void __init parse_guest_loglvl(161,5847
static char * __init loglvl_str(166,5977
static void putchar_console_ring(185,6435
long read_console_ring(193,6672
#define SERIAL_RX_SIZE 244,7973
#define SERIAL_RX_MASK(245,8000
static char serial_rx_ring[serial_rx_ring246,8053
static unsigned int serial_rx_cons,247,8097
static unsigned int serial_rx_cons, serial_rx_prod;247,8097
int console_steal(251,8197
void console_giveback(263,8431
static void sercon_puts(269,8517
#define switch_code 278,8747
static int __read_mostly xen_rx 279,8792
static void switch_serial_input(281,8878
static void __serial_rx(292,9216
static void serial_rx(304,9657
static void notify_dom0_con_ring(326,10223
static long guest_console_write(332,10411
long do_console_io(370,11360
static bool_t console_locks_busted;424,12700
static void __putstr(426,12737
static int printk_prefix_check(443,13056
static void printk_start_of_line(476,13887
void printk(496,14313
void __init console_init_preirq(548,15494
void __init console_init_postirq(593,16776
void __init console_endboot(622,17633
int __init console_has(673,19407
void console_start_log_everything(688,19674
void console_end_log_everything(694,19802
void console_force_unlock(700,19926
void console_start_sync(708,20094
void console_end_sync(714,20202
int __printk_ratelimit(726,20466
static int __read_mostly printk_ratelimit_ms 771,21803
static int __read_mostly printk_ratelimit_burst 774,21914
int printk_ratelimit(776,21969
static volatile int debugtrace_send_to_console;790,22359
static char        *debugtrace_buf;debugtrace_buf792,22408
static unsigned int debugtrace_prd;793,22469
static unsigned int debugtrace_kilobytes 794,22530
static unsigned int debugtrace_used;795,22596
static void debugtrace_dump_worker(799,22726
static void debugtrace_toggle(819,23263
void debugtrace_dump(842,23876
void debugtrace_printk(855,24114
static void debugtrace_key(897,25094
static struct keyhandler debugtrace_keyhandler 902,25170
static int __init debugtrace_init(907,25303
void panic(943,26175
void __bug(986,27156
void __warn(995,27357
static void suspend_steal_fn(1008,27678
static int suspend_steal_id;1009,27728
int console_suspend(1011,27758
int console_resume(1018,27896

xen/drivers/char/serial.c,926
unsigned int __read_mostly serial_txbufsz 21,482
#define mask_serial_rxbuf_idx(24,582
#define mask_serial_txbuf_idx(25,642
static struct serial_port com[com27,703
void serial_rx_interrupt(32,884
void serial_tx_interrupt(58,1619
static void __serial_putc(94,2498
void serial_putc(156,4419
void serial_puts(183,5018
char serial_getc(214,5709
int serial_parse_handle(256,6737
void serial_set_rx_handler(291,7255
void serial_force_unlock(334,8160
void serial_start_sync(349,8417
void serial_end_sync(375,8998
void serial_start_log_everything(392,9293
void serial_end_log_everything(408,9636
int serial_tx_space(423,9952
void __devinit serial_init_preirq(432,10171
void __devinit serial_init_postirq(440,10379
void __init serial_endboot(448,10590
int serial_irq(456,10783
void serial_suspend(465,10977
void serial_resume(473,11140
void serial_register_uart(479,11223
void serial_async_transmit(489,11468

xen/drivers/acpi/utilities/utmisc.c,196
#define _COMPONENT 48,2170
ACPI_MODULE_NAME(49,2213
void acpi_ut_set_integer_width(138,4387
acpi_ut_error(172,5323
acpi_ut_exception(185,5629
acpi_ut_warning(201,6031
acpi_ut_info(215,6356

xen/drivers/acpi/utilities/utglobal.c,1667
#define DEFINE_ACPI_GLOBALS44,2114
#define _COMPONENT 53,2300
ACPI_EXPORT_SYMBOL(_COMPONENT52,2266
const char *acpi_gbl_highest_dstate_names[acpi_gbl_highest_dstate_names96,3319
const char *acpi_format_exception(acpi_format_exception117,3952
ACPI_EXPORT_SYMBOL(138,4371
const u8 acpi_gbl_ns_properties[acpi_gbl_ns_properties177,5617
static const char acpi_gbl_hex_to_ascii[acpi_gbl_hex_to_ascii213,7099
char acpi_ut_hex_to_ascii_char(232,7752
struct acpi_bit_register_info acpi_gbl_bit_register_info[acpi_gbl_bit_register_info244,8085
struct acpi_fixed_event_info acpi_gbl_fixed_event_info[acpi_gbl_fixed_event_info316,11427
const char *acpi_gbl_region_types[acpi_gbl_region_types353,12740
char *acpi_ut_get_region_name(acpi_ut_get_region_name364,12925
static const char *acpi_gbl_event_types[acpi_gbl_event_types390,13559
char *acpi_ut_get_event_name(acpi_ut_get_event_name398,13708
static const char acpi_gbl_bad_type[acpi_gbl_bad_type428,14558
static const char *acpi_gbl_ns_type_names[acpi_gbl_ns_type_names432,14660
char *acpi_ut_get_type_name(acpi_ut_get_type_name466,15383
char *acpi_ut_get_object_type_name(acpi_ut_get_object_type_name476,15589
static const char *acpi_gbl_desc_type_names[acpi_gbl_desc_type_names500,16218
char *acpi_ut_get_descriptor_name(acpi_ut_get_descriptor_name519,16667
char *acpi_ut_get_mutex_name(acpi_ut_get_mutex_name554,17569
static const char *acpi_gbl_notify_value_names[acpi_gbl_notify_value_names578,18192
const char *acpi_ut_get_notify_name(acpi_ut_get_notify_name593,18481
u8 acpi_ut_valid_object_type(619,19177
void acpi_ut_init_globals(645,19763
ACPI_EXPORT_SYMBOL(740,22147

xen/drivers/acpi/hwregs.c,329
#define _COMPONENT 53,2318
ACPI_MODULE_NAME(54,2360
acpi_status acpi_get_register_unlocked(94,3658
acpi_status acpi_get_register(132,4583
acpi_status acpi_set_register(155,5402
acpi_hw_register_read(306,9596
acpi_status acpi_hw_register_write(423,12330
acpi_hw_low_level_read(566,15566
acpi_hw_low_level_write(636,17266

xen/drivers/acpi/numa.c,412
#define ACPI_NUMA	34,1192
#define _COMPONENT	35,1221
ACPI_MODULE_NAME(36,1250
static int __init acpi_parse_slit(116,3482
acpi_numa_x2apic_affinity_init(124,3656
acpi_parse_x2apic_affinity(133,3862
acpi_parse_processor_affinity(151,4307
acpi_parse_memory_affinity(169,4749
int __init acpi_parse_srat(186,5155
acpi_table_parse_srat(197,5304
int __init acpi_numa_init(205,5543
int acpi_get_pxm(225,6173

xen/drivers/acpi/osl.c,595
#define _COMPONENT	44,1522
#define PREFIX	46,1583
struct acpi_os_dpc 47,1608
	acpi_osd_exec_callback function;48,1629
	void *context;context49,1663
int acpi_in_debugger;60,1840
void acpi_os_printf(66,1954
void acpi_os_vprintf(74,2082
acpi_physical_address __init acpi_os_get_root_pointer(83,2237
acpi_os_map_memory(107,2688
void acpi_os_unmap_memory(113,2848
acpi_status acpi_os_read_port(118,2957
acpi_status acpi_os_write_port(141,3331
acpi_os_read_memory(159,3633
acpi_os_write_memory(188,4105
acpi_cpu_flags acpi_os_acquire_lock(219,4571
void acpi_os_release_lock(230,4747

xen/drivers/acpi/tables.c,574
#define PREFIX	35,1204
#define ACPI_MAX_TABLES	37,1231
mps_inti_flags_polarity[mps_inti_flags_polarity40,1291
mps_inti_flags_trigger[mps_inti_flags_trigger42,1382
static struct acpi_table_desc initial_tables[initial_tables44,1445
static int acpi_apic_instance __initdata;46,1509
void __init acpi_table_print_madt_entry(48,1552
acpi_table_parse_entries(205,6260
acpi_table_parse_madt(255,7579
int acpi_table_parse(272,8092
static void __init check_multiple_madt(296,8600
int __init acpi_table_init(325,9239
static int __init acpi_parse_apic_instance(333,9398

xen/drivers/acpi/pmstat.c,261
int do_get_pm_info(53,1725
static int read_scaling_available_governors(171,4447
static int get_cpufreq_para(192,5020
static int set_cpufreq_gov(309,9328
static int set_cpufreq_para(329,9876
static int get_cpufreq_avgfreq(412,11809
int do_pm_op(422,12025

xen/drivers/acpi/reboot.c,23
void acpi_reboot(6,91

xen/drivers/acpi/tables/tbxfroot.c,163
#define _COMPONENT 49,2203
ACPI_MODULE_NAME(50,2243
acpi_status __init acpi_find_root_pointer(123,4429
static u8 *__init acpi_tb_scan_memory_for_rsdp(236,7395

xen/drivers/acpi/tables/tbutils.c,310
#define _COMPONENT 49,2188
ACPI_MODULE_NAME(50,2228
u8 acpi_tb_tables_loaded(129,4366
acpi_tb_print_table_header(153,4928
acpi_status acpi_tb_verify_checksum(205,6621
u8 acpi_tb_checksum(243,7596
acpi_tb_install_table(272,8414
acpi_tb_get_root_table_entry(341,10472
acpi_tb_parse_root_table(397,12232

xen/drivers/acpi/tables/tbxface.c,112
#define _COMPONENT 51,2295
ACPI_MODULE_NAME(52,2335
acpi_initialize_tables(104,4442
acpi_get_table(168,6342

xen/drivers/acpi/tables/tbinstal.c,114
#define _COMPONENT 49,2210
ACPI_MODULE_NAME(50,2250
acpi_status __init acpi_tb_resize_root_table_list(109,3762

xen/drivers/acpi/tables/tbfadt.c,654
#define _COMPONENT 49,2192
ACPI_MODULE_NAME(50,2232
typedef struct acpi_fadt_info 63,2579
	char *name;name64,2611
	u8 target;65,2624
	u8 source;66,2636
	u8 length;67,2648
	u8 type;68,2660
} acpi_fadt_info;70,2671
#define ACPI_FADT_REQUIRED 72,2690
#define ACPI_FADT_SEPARATE_LENGTH 73,2728
static struct acpi_fadt_info __initdata fadt_info_table[fadt_info_table75,2767
#define ACPI_FADT_INFO_ENTRIES 109,4040
acpi_tb_init_generic_address(128,4769
void __init acpi_tb_parse_fadt(160,5697
void __init acpi_tb_create_local_fadt(220,7570
static void __init acpi_tb_convert_fadt(281,9635
static void __init acpi_tb_validate_fadt(396,13248

xen/drivers/acpi/apei/erst.c,2334
#define ERST_STATUS_SUCCESS	44,1421
#define ERST_STATUS_NOT_ENOUGH_SPACE	45,1455
#define ERST_STATUS_HARDWARE_NOT_AVAILABLE	46,1497
#define ERST_STATUS_FAILED	47,1544
#define ERST_STATUS_RECORD_STORE_EMPTY	48,1577
#define ERST_STATUS_RECORD_NOT_FOUND	49,1621
#define ERST_TAB_ENTRY(51,1664
#define SPIN_UNIT	55,1792
#define FIRMWARE_TIMEOUT	57,1876
#define FIRMWARE_MAX_STALL	58,1912
static struct acpi_table_erst *__read_mostly erst_tab;60,1956
static bool_t __read_mostly erst_enabled;61,2011
#define ERST_RANGE_RESERVED	64,2100
#define ERST_RANGE_NVRAM	65,2135
#define ERST_RANGE_SLOW	66,2167
static struct erst_erange 72,2293
	u64 base;73,2321
	u64 size;74,2332
	void __iomem *vaddr;vaddr75,2343
	u32 attr;76,2365
} erst_erange;77,2376
static inline int erst_errno(89,2682
static int erst_timedout(106,3039
static int erst_exec_load_var1(117,3248
static int erst_exec_load_var2(123,3411
static int erst_exec_store_var1(129,3574
static int erst_exec_add(135,3732
static int erst_exec_subtract(142,3865
static int erst_exec_add_value(149,4008
static int erst_exec_subtract_value(163,4283
static int erst_exec_stall(177,4561
static int erst_exec_stall_while_true(186,4757
static int erst_exec_skip_next_instruction_if_true(208,5212
static int erst_exec_goto(226,5506
static int erst_exec_set_src_address_base(233,5654
static int erst_exec_set_dst_address_base(239,5829
static int erst_exec_move_data(245,6004
static struct apei_exec_ins_type erst_ins_type[erst_ins_type261,6342
static inline void erst_exec_ctx_init(340,8332
static int erst_get_erange(346,8525
static size_t __erst_get_record_count(368,9039
size_t erst_get_record_count(380,9273
static int __erst_get_next_record_id(395,9525
int erst_get_next_record_id(414,9982
static int __erst_write_to_storage(429,10242
static int __erst_read_from_storage(468,11097
static int __erst_clear_from_storage(511,12085
static int __erst_write_to_nvram(551,13006
static int __erst_read_to_erange_from_nvram(557,13166
static int __erst_clear_from_nvram(564,13341
int erst_write(571,13494
static int __erst_read_to_erange(610,14404
static size_t __erst_read(626,14683
size_t erst_read(649,15243
size_t erst_read_next(670,15796
int erst_clear(698,16366
static int __init erst_check_table(716,16704
int __init erst_init(730,17100

xen/drivers/acpi/apei/apei-internal.h,674
#define APEI_INTERNAL_H7,108
typedef int (*apei_exec_ins_func_t)apei_exec_ins_func_t11,160
#define APEI_EXEC_INS_ACCESS_REGISTER	14,269
struct apei_exec_ins_type 16,315
	u32 flags;17,343
	apei_exec_ins_func_t run;18,355
struct apei_exec_context 21,386
	u32 ip;22,413
	u64 value;23,422
	u64 var1;24,434
	u64 var2;25,445
	u64 src_base;26,456
	u64 dst_base;27,471
	struct apei_exec_ins_type *ins_table;ins_table28,486
	u32 instructions;29,525
	struct acpi_whea_header *action_table;action_table30,544
	u32 entries;31,584
static inline void apei_exec_ctx_set_input(40,778
static inline u64 apei_exec_ctx_get_output(46,897
#define APEI_EXEC_SET_IP	56,1145

xen/drivers/acpi/apei/apei-io.c,699
struct apei_iomap 44,1393
	struct list_head list;45,1413
	void __iomem *vaddr;vaddr46,1437
	unsigned long size;47,1459
	paddr_t paddr;48,1480
static struct apei_iomap *__apei_find_iomap(__apei_find_iomap51,1500
static void __iomem *__apei_ioremap_fast(__apei_ioremap_fast64,1774
static int apei_range_nr;76,2001
static void __iomem *__init apei_range_map(78,2028
void __iomem *__init apei_pre_map(104,2768
static void __init apei_post_unmap(142,3643
static int apei_check_gar(159,4005
int __init apei_pre_map_gar(194,4782
int __init apei_post_unmap_gar(215,5142
static int apei_read_mem(232,5417
static int apei_write_mem(260,5845
int apei_read(289,6284
int apei_write(311,6752

xen/drivers/acpi/apei/apei-base.c,693
#define APEI_EXEC_PRESERVE_REGISTER	53,1791
int apei_exec_ctx_init(55,1832
int __apei_exec_read_register(71,2176
int apei_exec_read_register(84,2411
int apei_exec_read_register_value(98,2637
int __apei_exec_write_register(111,2876
int apei_exec_write_register(130,3311
int apei_exec_write_register_value(136,3471
int apei_exec_noop(147,3676
int apei_exec_run(157,3902
typedef int (*apei_exec_entry_func_t)apei_exec_entry_func_t201,4892
static int __init apei_exec_for_each_entry(205,5027
static int __init pre_map_gar_callback(233,5656
int __init apei_exec_pre_map_gars(246,5996
static int __init post_unmap_gar_callback(262,6336
int __init apei_exec_post_unmap_gars(275,6669

xen/drivers/cpufreq/cpufreq_ondemand.c,1460
#define DEF_FREQUENCY_UP_THRESHOLD 24,765
#define MIN_FREQUENCY_UP_THRESHOLD 25,818
#define MAX_FREQUENCY_UP_THRESHOLD 26,871
#define MIN_DBS_INTERVAL 28,926
#define MIN_SAMPLING_RATE_RATIO 29,991
#define MIN_SAMPLING_MILLISECS 30,1043
#define MIN_STAT_SAMPLING_RATE 31,1122
#define MIN_SAMPLING_RATE 33,1216
#define MAX_SAMPLING_RATE 35,1316
#define DEF_SAMPLING_RATE_LATENCY_MULTIPLIER 36,1390
#define TRANSITION_LATENCY_LIMIT 37,1445
static uint64_t def_sampling_rate;39,1507
static uint64_t usr_sampling_rate;40,1542
enum {DBS_NORMAL_SAMPLE,DBS_NORMAL_SAMPLE43,1599
enum {DBS_NORMAL_SAMPLE, DBS_SUB_SAMPLE}DBS_SUB_SAMPLE43,1599
static unsigned int dbs_enable;47,1703
static struct dbs_tuners 49,1778
    uint64_t     sampling_rate;50,1805
    unsigned int up_threshold;51,1837
    unsigned int powersave_bias;52,1868
} dbs_tuners_ins 53,1901
int write_ondemand_sampling_rate(61,2072
int write_ondemand_up_threshold(71,2367
int get_cpufreq_ondemand_para(81,2629
static void dbs_check_cpu(98,3223
static void do_dbs_timer(175,5494
static void dbs_timer_init(188,5792
static void dbs_timer_exit(204,6224
int cpufreq_governor_dbs(211,6396
static void __init cpufreq_dbs_handle_option(299,9503
struct cpufreq_governor cpufreq_gov_dbs 339,10792
static int __init cpufreq_gov_dbs_init(345,10949
static void __exit cpufreq_gov_dbs_exit(351,11089
void cpufreq_dbs_timer_suspend(357,11225
void cpufreq_dbs_timer_resume(369,11419

xen/drivers/cpufreq/cpufreq.c,1028
static unsigned int usr_max_freq,50,1792
static unsigned int usr_max_freq, usr_min_freq;50,1792
struct cpufreq_dom 53,1917
    unsigned int	dom;54,1938
    cpumask_t		map;55,1960
    struct list_head	node;56,1980
struct cpufreq_governor *cpufreq_opt_governor;cpufreq_opt_governor60,2052
bool_t __read_mostly cpufreq_verbose;63,2134
struct cpufreq_governor *__find_governor(__find_governor65,2173
int cpufreq_register_governor(79,2481
int cpufreq_unregister_governor(91,2747
int cpufreq_limit_change(109,3186
int cpufreq_add_cpu(130,3772
int cpufreq_del_cpu(274,8161
static void print_PCT(337,9976
static void print_PSS(345,10300
static void print_PSD(362,10814
static void print_PPC(370,11113
int set_px_pminfo(375,11213
static void cpufreq_cmdline_common_para(514,14952
static int __init cpufreq_handle_common_option(522,15156
void __init cpufreq_cmdline_parse(542,15626
static int cpu_callback(586,16863
static struct notifier_block cpu_nfb 607,17267
static int __init cpufreq_presmp_init(611,17346

xen/drivers/cpufreq/utility.c,700
struct cpufreq_driver   *cpufreq_driver;cpufreq_driver35,1049
struct processor_pminfo *__read_mostly processor_pminfo[processor_pminfo36,1090
void cpufreq_residency_update(45,1498
void cpufreq_statistic_update(64,1994
int cpufreq_statistic_init(90,2664
void cpufreq_statistic_exit(153,4368
void cpufreq_statistic_reset(175,4882
int cpufreq_frequency_table_cpuinfo(212,5953
int cpufreq_frequency_table_verify(252,7231
int cpufreq_frequency_table_target(284,8201
int __cpufreq_driver_target(362,10566
int cpufreq_driver_getavg(380,11075
void cpufreq_enable_turbo(398,11468
void cpufreq_disable_turbo(407,11694
int cpufreq_get_turbo_status(416,11922
int __cpufreq_set_policy(432,12358

xen/drivers/cpufreq/cpufreq_misc_governors.c,791
static unsigned int cpu_set_freq[cpu_set_freq24,649
static int cpufreq_governor_userspace(26,693
int write_userspace_scaling_setspeed(64,1741
cpufreq_userspace_handle_option(82,2189
struct cpufreq_governor cpufreq_gov_userspace 94,2525
static int __init cpufreq_gov_userspace_init(100,2701
static void __exit cpufreq_gov_userspace_exit(106,2859
static int cpufreq_governor_performance(116,3053
struct cpufreq_governor cpufreq_gov_performance 140,3560
static int __init cpufreq_gov_performance_init(145,3689
static void __exit cpufreq_gov_performance_exit(151,3853
static int cpufreq_governor_powersave(161,4051
struct cpufreq_governor cpufreq_gov_powersave 185,4556
static int __init cpufreq_gov_powersave_init(190,4679
static void __exit cpufreq_gov_powersave_exit(196,4837

xen/drivers/passthrough/io.c,531
struct rangeset *__read_mostly mmio_ro_ranges;29,998
bool_t pt_irq_need_timer(33,1094
static void pt_irq_time_out(38,1213
void free_hvm_irq_dpci(88,2811
int pt_irq_create_bind_vtd(97,2988
int pt_irq_destroy_bind_vtd(308,11122
int hvm_do_IRQ_dpci(391,13698
static void __msi_pirq_eoi(407,14160
void hvm_dpci_msi_eoi(428,14754
static int hvm_pci_msi_assert(456,15764
static void hvm_dirq_assist(465,15962
static void __hvm_dpci_eoi(524,18032
void hvm_dpci_eoi(550,18836
static int __init setup_mmio_ro_ranges(578,19467

xen/drivers/passthrough/amd/iommu_map.c,825
static int queue_iommu_command(26,991
static void commit_iommu_command_buffer(53,1759
int send_iommu_command(63,2076
static void invalidate_iommu_page(74,2272
void flush_command_buffer(111,3724
static void clear_iommu_l1e_present(152,5272
static void set_iommu_l1e_present(169,5640
static void amd_iommu_set_page_directory_entry(213,7307
void amd_iommu_set_root_page_table(247,8727
void amd_iommu_set_intremap_table(287,10552
void amd_iommu_add_dev_table_entry(323,12080
u64 amd_iommu_get_next_table_from_pte(363,13936
static int amd_iommu_is_pte_present(381,14408
void invalidate_dev_table_entry(388,14627
static u64 iommu_l2e_from_pfn(407,15209
int amd_iommu_map_page(453,16599
int amd_iommu_unmap_page(480,17363
int amd_iommu_reserve_domain_unity_map(517,18338
void invalidate_all_iommu_pages(552,19276

xen/drivers/passthrough/amd/iommu_acpi.c,1666
static void add_ivrs_mapping_entry(35,1288
static struct amd_iommu * __init find_iommu_from_bdf_cap(88,3580
static void __init reserve_iommu_exclusion_range(100,3850
static void __init reserve_iommu_exclusion_range_all(117,4354
static void __init reserve_unity_map_for_device(125,4598
static int __init register_exclusion_range_for_all_devices(152,5524
static int __init register_exclusion_range_for_device(185,6653
static int __init register_exclusion_range_for_iommu_devices(228,8040
static int __init parse_ivmd_device_select(266,9364
static int __init parse_ivmd_device_range(282,9783
static int __init parse_ivmd_device_iommu(312,10634
static int __init parse_ivmd_block(332,11261
static u16 __init parse_ivhd_device_padding(398,13683
static u16 __init parse_ivhd_device_select(410,13970
static u16 __init parse_ivhd_device_range(427,14407
static u16 __init parse_ivhd_device_alias(473,15771
static u16 __init parse_ivhd_device_alias_range(507,16708
static u16 __init parse_ivhd_device_extended(562,18373
static u16 __init parse_ivhd_device_extended_range(587,19053
static u16 __init parse_ivhd_device_special(634,20474
static int __init parse_ivhd_block(660,21237
static int __init parse_ivrs_block(754,24642
static void __init dump_acpi_table_header(780,25397
static int __init parse_ivrs_table(816,26437
static int __init detect_iommu_acpi(857,27723
#define UPDATE_LAST_BDF(890,28817
static int __init get_last_bdf_ivhd(895,28916
static int __init get_last_bdf_acpi(967,31496
int __init amd_iommu_detect_acpi(986,32204
int __init amd_iommu_get_ivrs_dev_entries(991,32321
int __init amd_iommu_update_ivrs_mapping_acpi(997,32465

xen/drivers/passthrough/amd/iommu_detect.c,183
unsigned short last_bdf 30,1098
static int __init get_iommu_msi_capabilities(32,1128
static int __init get_iommu_capabilities(71,2218
int __init amd_iommu_detect_one_acpi(95,3166

xen/drivers/passthrough/amd/iommu_intr.c,975
#define INTREMAP_TABLE_ORDER 26,958
#define INTREMAP_LENGTH 27,992
#define INTREMAP_ENTRIES 28,1020
int ioapic_bdf[ioapic_bdf30,1069
void *shared_intremap_table;shared_intremap_table33,1183
static spinlock_t* get_intremap_lock(36,1259
static int get_intremap_requestor_id(43,1437
static int get_intremap_offset(49,1574
static u8 *get_intremap_entry(get_intremap_entry58,1836
static void free_intremap_entry(68,2058
static void update_intremap_entry(75,2218
void invalidate_interrupt_table(101,3522
static void update_intremap_entry_from_ioapic(117,4061
int __init amd_iommu_setup_ioapic_remapping(158,5341
void amd_iommu_ioapic_update_ire(217,7264
static void update_intremap_entry_from_msi_msg(264,8672
void amd_iommu_msi_msg_update_ire(340,11243
unsigned int amd_iommu_read_ioapic_from_ire(362,11772
void amd_iommu_read_msi_from_ire(369,11930
void __init amd_iommu_free_intremap_table(374,12021
void* __init amd_iommu_alloc_intremap_table(385,12263

xen/drivers/passthrough/amd/iommu_init.c,2111
static struct amd_iommu **irq_to_iommu;irq_to_iommu31,1107
static int nr_amd_iommus;32,1147
static long amd_iommu_cmd_buffer_entries 33,1173
static long amd_iommu_event_log_entries 34,1250
unsigned short ivrs_bdf_entries;36,1326
struct ivrs_mappings *ivrs_mappings;ivrs_mappings37,1359
struct list_head amd_iommu_head;38,1396
struct table_struct device_table;39,1429
static int __init map_iommu_mmio_region(41,1464
static void __init unmap_iommu_mmio_region(62,2094
static void register_iommu_dev_table_in_mmio_space(71,2275
static void register_iommu_cmd_buffer_in_mmio_space(94,3217
static void __init register_iommu_event_log_in_mmio_space(121,4301
static void set_iommu_translation_control(148,5392
static void set_iommu_command_buffer_control(185,7239
static void register_iommu_exclusion_range(206,8041
static void set_iommu_event_log_control(246,9702
static int amd_iommu_read_event_log(275,10923
static void amd_iommu_reset_event_log(309,12024
static void iommu_msi_set_affinity(348,13235
static void amd_iommu_msi_enable(390,14734
static void iommu_msi_unmask(406,15188
static void iommu_msi_mask(420,15563
static unsigned int iommu_msi_startup(437,16014
static void iommu_msi_end(443,16116
static hw_irq_controller iommu_msi_type 450,16213
static void parse_event_log_entry(461,16518
static void amd_iommu_page_fault(505,18151
static int set_iommu_interrupt_handler(535,19202
static void enable_iommu(563,19834
static void __init deallocate_iommu_table_struct(592,20651
static int __init allocate_iommu_table_struct(604,20936
static int __init allocate_cmd_buffer(623,21479
static int __init allocate_event_log(637,22099
static int __init amd_iommu_init_one(651,22695
static void __init amd_iommu_init_cleanup(683,23503
static int __init init_ivrs_mapping(730,24599
static int __init amd_iommu_setup_device_table(767,25943
int __init amd_iommu_init(822,27879
static void disable_iommu(864,28912
static void invalidate_all_domain_pages(887,29481
static void invalidate_all_devices(894,29618
void amd_iommu_suspend(915,30202
void amd_iommu_resume(923,30329

xen/drivers/passthrough/amd/pci_amd_iommu.c,1017
struct amd_iommu *find_iommu_for_device(find_iommu_for_device31,1123
int get_dma_requestor_id(45,1585
static int is_translation_valid(58,1887
static void disable_translation(68,2309
static void amd_iommu_setup_domain_device(82,2780
static void __init amd_iommu_setup_dom0_devices(120,3954
int __init amd_iov_detect(151,4825
static int allocate_domain_resources(170,5191
static int get_paging_mode(187,5583
static int amd_iommu_domain_init(206,5941
static void __init amd_iommu_dom0_init(226,6393
static void amd_iommu_disable_domain_device(248,6974
static int reassign_device(273,7797
static int amd_iommu_assign_device(308,8827
static void deallocate_next_page_table(326,9362
static void deallocate_iommu_page_tables(352,10057
static void amd_iommu_domain_destroy(366,10380
static int amd_iommu_return_device(372,10512
static int amd_iommu_add_device(378,10657
static int amd_iommu_remove_device(400,11233
static int amd_iommu_group_id(422,11815
const struct iommu_ops amd_iommu_ops 432,12016

xen/drivers/passthrough/iommu.c,1244
bool_t __read_mostly iommu_enabled 41,1642
bool_t __read_mostly force_iommu;42,1682
bool_t __initdata iommu_dom0_strict;43,1716
bool_t __read_mostly iommu_verbose;44,1753
bool_t __read_mostly iommu_workaround_bios_bug;45,1789
bool_t __read_mostly iommu_passthrough;46,1837
bool_t __read_mostly iommu_snoop 47,1877
bool_t __read_mostly iommu_qinval 48,1915
bool_t __read_mostly iommu_intremap 49,1954
bool_t __read_mostly iommu_hap_pt_share;50,1995
bool_t __read_mostly amd_iommu_debug;51,2036
bool_t __read_mostly amd_iommu_perdev_intremap;52,2074
static void __init parse_iommu_param(54,2123
int iommu_domain_init(90,3214
void __init iommu_dom0_init(105,3552
int iommu_add_device(134,4409
int iommu_remove_device(150,4732
int assign_device(163,5016
static int iommu_populate_page_table(187,5561
void iommu_domain_destroy(217,6396
int iommu_map_page(248,7172
int iommu_unmap_page(259,7465
int deassign_device(270,7734
int __init iommu_setup(309,8686
int iommu_get_device_group(342,9468
void iommu_update_ire_from_apic(382,10547
void iommu_update_ire_from_msi(388,10745
void iommu_read_msi_from_ire(395,10930
unsigned int iommu_read_apic_from_ire(402,11111
void iommu_resume(408,11289
void iommu_suspend(415,11413

xen/drivers/passthrough/pci.c,876
spinlock_t pcidevs_lock 34,1076
#define MAX_BUSES 36,1123
    u8 map;38,1161
    u8 bus;39,1173
    u8 devfn;40,1185
} bus2bridge[bus2bridge41,1199
static struct pci_dev *alloc_pdev(alloc_pdev46,1315
static void free_pdev(69,1903
struct pci_dev *pci_get_pdev(pci_get_pdev75,2004
struct pci_dev *pci_get_pdev_by_domain(pci_get_pdev_by_domain91,2362
void pci_enable_acs(110,2832
int pci_add_device(145,3614
int pci_remove_device(174,4219
int pci_add_device_ext(197,4864
static void pci_clean_dpci_irqs(239,5733
void pci_release_devices(283,7009
#define PCI_CLASS_BRIDGE_PCI 302,7569
int pdev_type(304,7610
int find_upstream_bridge(339,8746
int pci_device_detect(372,9349
int __init scan_pci_devices(388,9819
static void dump_pci_devices(460,12233
struct keyhandler dump_pci_devices_keyhandler 481,12822
static int __init setup_dump_pcidevs(487,12958

xen/drivers/passthrough/vtd/extern.h,30
#define _VTD_EXTERN_H_22,843

xen/drivers/passthrough/vtd/iommu.h,10727
#define _INTEL_IOMMU_H_21,789
#define    DMAR_VER_REG 29,913
#define    DMAR_CAP_REG 30,990
#define    DMAR_ECAP_REG 31,1062
#define    DMAR_GCMD_REG 32,1136
#define    DMAR_GSTS_REG 33,1202
#define    DMAR_RTADDR_REG 34,1267
#define    DMAR_CCMD_REG 35,1328
#define    DMAR_FSTS_REG 36,1390
#define    DMAR_FECTL_REG 37,1454
#define    DMAR_FEDATA_REG 38,1520
#define    DMAR_FEADDR_REG 39,1600
#define    DMAR_FEUADDR_REG 40,1680
#define    DMAR_AFLOG_REG 41,1745
#define    DMAR_PMEN_REG 42,1811
#define    DMAR_PLMBASE_REG 43,1884
#define    DMAR_PLMLIMIT_REG 44,1940
#define    DMAR_PHMBASE_REG 45,1998
#define    DMAR_PHMLIMIT_REG 46,2060
#define    DMAR_IQH_REG 47,2119
#define    DMAR_IQT_REG 48,2184
#define    DMAR_IQA_REG 49,2249
#define    DMAR_IRTA_REG 50,2314
#define OFFSET_STRIDE 52,2367
#define dmar_readl(53,2400
#define dmar_writel(54,2448
#define dmar_readq(55,2508
#define dmar_writeq(60,2681
#define VER_MAJOR(65,2846
#define VER_MINOR(66,2894
#define cap_read_drain(71,2975
#define cap_write_drain(72,3024
#define cap_max_amask_val(73,3073
#define cap_num_fault_regs(74,3125
#define cap_pgsel_inv(75,3183
#define cap_super_page_val(77,3233
#define cap_super_offset(78,3284
#define cap_sps_2mb(80,3419
#define cap_sps_1gb(81,3466
#define cap_sps_512gb(82,3513
#define cap_sps_1tb(83,3560
#define cap_fault_reg_offset(85,3608
#define cap_isoch(87,3673
#define cap_qos(88,3719
#define cap_mgaw(89,3763
#define cap_sagaw(90,3817
#define cap_caching_mode(91,3865
#define cap_phmr(92,3913
#define cap_plmr(93,3957
#define cap_rwbf(94,4001
#define cap_afl(95,4045
#define cap_ndoms(96,4088
#define ecap_niotlb_iunits(102,4186
#define ecap_iotlb_offset(103,4246
#define ecap_coherent(104,4307
#define ecap_queued_inval(105,4357
#define ecap_dev_iotlb(106,4407
#define ecap_intr_remap(107,4457
#define ecap_eim(108,4507
#define ecap_cache_hints(109,4557
#define ecap_pass_thru(110,4607
#define ecap_snp_ctl(111,4657
#define DMA_TLB_FLUSH_GRANU_OFFSET 114,4724
#define DMA_TLB_GLOBAL_FLUSH 115,4763
#define DMA_TLB_DSI_FLUSH 116,4809
#define DMA_TLB_PSI_FLUSH 117,4852
#define DMA_TLB_IIRG(118,4895
#define DMA_TLB_IAIG(119,4938
#define DMA_TLB_DID(120,4984
#define DMA_TLB_READ_DRAIN 122,5036
#define DMA_TLB_WRITE_DRAIN 123,5080
#define DMA_TLB_IVT 124,5125
#define DMA_TLB_IVA_ADDR(126,5163
#define DMA_TLB_IVA_HINT(127,5216
#define DMA_GCMD_TE 130,5282
#define DMA_GCMD_SRTP 131,5323
#define DMA_GCMD_SFL 132,5364
#define DMA_GCMD_EAFL 133,5405
#define DMA_GCMD_WBF 134,5446
#define DMA_GCMD_QIE 135,5487
#define DMA_GCMD_IRE 136,5528
#define DMA_GCMD_SIRTP 137,5569
#define DMA_GCMD_CFI 138,5610
#define DMA_GSTS_TES 141,5667
#define DMA_GSTS_RTPS 142,5708
#define DMA_GSTS_FLS 143,5749
#define DMA_GSTS_AFLS 144,5790
#define DMA_GSTS_WBFS 145,5831
#define DMA_GSTS_QIES 146,5872
#define DMA_GSTS_IRES 147,5912
#define DMA_GSTS_SIRTPS 148,5952
#define DMA_GSTS_CFIS 149,5993
#define DMA_PMEN_EPM 152,6049
#define DMA_PMEN_PRS 153,6090
#define DMA_CCMD_INVL_GRANU_OFFSET 156,6146
#define DMA_CCMD_ICC 157,6185
#define DMA_CCMD_GLOBAL_INVL 158,6225
#define DMA_CCMD_DOMAIN_INVL 159,6271
#define DMA_CCMD_DEVICE_INVL 160,6317
#define DMA_CCMD_FM(161,6363
#define DMA_CCMD_CIRG(162,6413
#define DMA_CCMD_MASK_NOBIT 163,6461
#define DMA_CCMD_MASK_1BIT 164,6491
#define DMA_CCMD_MASK_2BIT 165,6520
#define DMA_CCMD_MASK_3BIT 166,6549
#define DMA_CCMD_SID(167,6578
#define DMA_CCMD_DID(168,6632
#define DMA_CCMD_CAIG_MASK(170,6679
#define DMA_FECTL_IM 173,6757
#define DMA_FSTS_PFO 176,6811
#define DMA_FSTS_PPF 177,6846
#define DMA_FSTS_AFO 178,6881
#define DMA_FSTS_APF 179,6916
#define DMA_FSTS_IQE 180,6951
#define DMA_FSTS_ICE 181,6986
#define DMA_FSTS_ITE 182,7021
#define DMA_FSTS_FAULTS 183,7056
#define dma_fsts_fault_record_index(184,7186
#define DMA_FRCD_F 187,7277
#define dma_frcd_type(188,7313
#define dma_frcd_fault_reason(189,7354
#define dma_frcd_source_id(190,7398
#define dma_frcd_page_addr(191,7441
struct root_entry 199,7609
    u64    val;200,7629
    u64    rsvd1;201,7645
#define root_present(203,7666
#define set_root_present(204,7713
#define get_context_addr(205,7775
#define set_root_value(206,7834
struct context_entry 209,7931
    u64 lo;210,7954
    u64 hi;211,7966
#define ROOT_ENTRY_NR 213,7981
#define context_present(214,8044
#define context_fault_disable(215,8084
#define context_translation_type(216,8137
#define context_address_root(217,8193
#define context_address_width(218,8249
#define context_domain_id(219,8296
#define context_set_present(221,8360
#define context_clear_present(222,8418
#define context_set_fault_enable(223,8479
#define context_set_translation_type(226,8568
#define CONTEXT_TT_MULTI_LEVEL 230,8713
#define CONTEXT_TT_DEV_IOTLB 231,8746
#define CONTEXT_TT_PASS_THRU 232,8779
#define context_set_address_root(234,8813
#define context_set_address_width(236,8924
#define context_clear_entry(238,9029
#define LEVEL_STRIDE 241,9125
#define LEVEL_MASK 242,9156
#define PTE_NUM 243,9209
#define level_to_agaw(244,9256
#define agaw_to_level(245,9295
#define agaw_to_width(246,9334
#define width_to_agaw(247,9387
#define level_to_offset_bits(248,9438
#define address_level_offset(249,9500
#define level_mask(251,9609
#define level_size(252,9672
#define align_to_level(253,9725
struct dma_pte 263,9925
    u64 val;264,9942
#define DMA_PTE_READ 266,9958
#define DMA_PTE_WRITE 267,9983
#define DMA_PTE_SNP 268,10009
#define dma_clear_pte(269,10040
#define dma_set_pte_readable(270,10095
#define dma_set_pte_writable(271,10166
#define dma_set_pte_superpage(272,10238
#define dma_set_pte_snp(273,10306
#define dma_set_pte_prot(274,10372
#define dma_pte_addr(276,10477
#define dma_set_pte_addr(277,10526
#define dma_pte_present(279,10626
struct iremap_entry 282,10703
    u64 lo_val;284,10735
        u64 p 286,10764
            fpd 287,10789
            dm 288,10814
            rh 289,10839
            tm 290,10864
            dlm 291,10889
            avail 292,10914
            res_1 293,10939
            vector 294,10964
            res_2 295,10989
            dst 296,11014
    }lo;lo297,11040
    u64 hi_val;300,11064
        u64 sid 302,11093
            sq 303,11119
            svt 304,11144
            res_1 305,11169
    }hi;hi306,11195
#define IREMAP_PAGE_ORDER 311,11291
#define IREMAP_ARCH_PAGE_ORDER 317,11437
#define IREMAP_ARCH_PAGE_NR 318,11518
#define IREMAP_ENTRY_ORDER 323,11770
#define IREMAP_ENTRY_NR 324,11817
#define iremap_present(326,11881
#define iremap_fault_disable(327,11920
#define iremap_set_present(329,11973
#define iremap_clear_present(330,12030
#define GET_IREMAP_ENTRY(339,12304
struct qinval_entry 347,12747
            u64 lo;350,12798
            u64 hi;351,12818
        }val;val352,12838
                u64 type 355,12890
                    granu 356,12923
                    res_1 357,12956
                    did 358,12990
                    sid 359,13024
                    fm 360,13058
                    res_2 361,13091
            }lo;lo362,13125
                u64 res;364,13163
            }hi;hi365,13188
        }cc_inv_dsc;cc_inv_dsc366,13205
                u64 type 369,13264
                    granu 370,13297
                    dw 371,13330
                    dr 372,13363
                    res_1 373,13396
                    did 374,13429
                    res_2 375,13463
            }lo;lo376,13497
                u64 am 378,13535
                    ih 379,13568
                    res_1 380,13601
                    addr 381,13634
            }hi;hi382,13668
        }iotlb_inv_dsc;iotlb_inv_dsc383,13685
                u64 type 386,13747
                    res_1 387,13780
                    max_invs_pend:max_invs_pend388,13814
                    res_2 389,13852
                    sid 390,13886
                    res_3 391,13920
            }lo;lo392,13954
                u64 size 394,13992
                    res_1 395,14025
                    addr 396,14059
            }hi;hi397,14093
        }dev_iotlb_inv_dsc;dev_iotlb_inv_dsc398,14110
                u64 type 401,14176
                    granu 402,14209
                    res_1 403,14242
                    im 404,14276
                    iidx 405,14309
                    res_2 406,14343
            }lo;lo407,14377
                u64 res;409,14415
            }hi;hi410,14440
        }iec_inv_dsc;iec_inv_dsc411,14457
                u64 type 414,14517
                    iflag 415,14550
                    sw 416,14583
                    fn 417,14616
                    res_1 418,14649
                    sdata 419,14683
            }lo;lo420,14717
                u64 res_1 422,14755
                    saddr 423,14788
            }hi;hi424,14822
        }inv_wait_dsc;inv_wait_dsc425,14839
    }q;q426,14862
#define QINVAL_PAGE_ORDER 430,14924
#define QINVAL_ARCH_PAGE_ORDER 432,14955
#define QINVAL_ARCH_PAGE_NR 433,15036
#define QINVAL_ENTRY_ORDER 438,15285
#define QINVAL_ENTRY_NR 439,15332
#define QINVAL_STAT_INIT 442,15415
#define QINVAL_STAT_DONE 443,15443
#define QINVAL_INDEX_SHIFT 446,15513
#define qinval_present(448,15543
#define qinval_fault_disable(449,15582
#define qinval_set_present(451,15635
#define qinval_clear_present(452,15692
#define RESERVED_VAL 454,15753
#define TYPE_INVAL_CONTEXT 456,15784
#define TYPE_INVAL_IOTLB 457,15820
#define TYPE_INVAL_DEVICE_IOTLB 458,15856
#define TYPE_INVAL_IEC 459,15892
#define TYPE_INVAL_WAIT 460,15928
#define NOTIFY_TYPE_POLL 462,15965
#define NOTIFY_TYPE_INTR 463,15999
#define INTERRUTP_FLAG 464,16033
#define STATUS_WRITE 465,16067
#define FENCE_FLAG 466,16101
#define IEC_GLOBAL_INVL 468,16136
#define IEC_INDEX_INVL 469,16170
#define IRTA_REG_EIME_SHIFT 470,16204
#define IRTA_REG_TABLE_SIZE 473,16292
#define VTD_PAGE_TABLE_LEVEL_3 475,16351
#define VTD_PAGE_TABLE_LEVEL_4 476,16385
#define DEFAULT_DOMAIN_ADDRESS_WIDTH 478,16420
#define MAX_IOMMU_REGS 479,16460
struct qi_ctrl 485,16615
    u64 qinval_maddr;486,16632
    int qinval_index;487,16701
    spinlock_t qinval_lock;488,16773
struct ir_ctrl 491,16849
    u64 iremap_maddr;492,16866
    int iremap_num;493,16943
    spinlock_t iremap_lock;494,17022
struct iommu_flush 497,17095
    int (*context)context498,17116
    int (*iotlb)iotlb500,17249
struct intel_iommu 504,17405
    struct qi_ctrl qi_ctrl;505,17426
    struct ir_ctrl ir_ctrl;506,17454
    struct iommu_flush flush;507,17482
    struct acpi_drhd_unit *drhd;drhd508,17512

xen/drivers/passthrough/vtd/quirks.c,711
#define IOH_DEV 40,1193
#define IGD_DEV 41,1216
#define IGD_BAR_MASK 43,1240
#define GGC 44,1280
#define GGC_MEMORY_VT_ENABLED 45,1297
#define IS_CTG(47,1340
#define IS_ILK(48,1381
#define IS_CPT(49,1481
u32 ioh_id;51,1543
u32 igd_id;52,1555
bool_t rwbf_quirk;53,1567
static int is_cantiga_b3;54,1586
static u8 *igd_reg_va;igd_reg_va55,1612
int is_igd_vt_enabled_quirk(62,1837
static void cantiga_b3_errata_init(79,2273
static void map_igd_reg(107,3011
static int cantiga_vtd_ops_preamble(133,3724
void vtd_ops_preamble_quirk(153,4333
void vtd_ops_postamble_quirk(161,4497
void __init platform_quirks_init(167,4611
static void map_me_phantom_function(196,5465
void me_wifi_quirk(214,6047

xen/drivers/passthrough/vtd/vtd.h,1577
#define _VTD_H_22,836
#define MAP_ME_PHANTOM_FUNC 26,877
#define UNMAP_ME_PHANTOM_FUNC 27,912
struct IO_xAPIC_route_entry 30,990
    __u32   vector 31,1020
        delivery_mode 32,1050
        dest_mode 36,1231
        delivery_status 37,1293
        polarity 38,1323
        irr 39,1353
        trigger 40,1383
        mask 41,1439
        __reserved_2 42,1501
            __reserved_1 46,1567
            physical_dest 47,1601
            __reserved_2 48,1635
        } physical;49,1669
            __reserved_1 52,1713
            logical_dest 53,1747
        } logical;54,1781
            __reserved_1 58,1840
            dest_id 59,1874
    } dest;62,1926
struct IO_APIC_route_remap_entry 66,1968
        u64 val;68,2015
            u64 vector:vector70,2049
            delivery_mode:delivery_mode71,2075
            index_15:index_1572,2104
            delivery_status:delivery_status73,2128
            polarity:polarity74,2159
            irr:irr75,2183
            trigger:trigger76,2202
            mask:mask77,2225
            reserved:reserved78,2245
            format:format79,2270
            index_0_14:index_0_1480,2292
struct msi_msg_remap_entry 85,2341
        u32 val;87,2382
            u32 dontcare:dontcare89,2416
                index_15:index_1590,2444
                SHV:SHV91,2472
                format:format92,2495
                index_0_14:index_0_1493,2521
                addr_id_val:addr_id_val94,2552
    } address_lo;97,2686
    u32	address_hi;99,2748
    u32	data;100,2810

xen/drivers/passthrough/vtd/qinval.c,771
static void print_qi_regs(32,1011
static int qinval_next_index(46,1364
static int qinval_update_qtail(61,1742
static int gen_cc_inv_dsc(72,2055
int queue_invalidate_context(100,3146
static int gen_iotlb_inv_dsc(118,3681
int queue_invalidate_iotlb(150,4928
static int gen_wait_dsc(169,5469
static int queue_invalidate_wait(195,6584
int invalidate_sync(231,7621
static int gen_dev_iotlb_inv_dsc(244,7875
int qinval_device_iotlb(274,9107
static int gen_iec_inv_dsc(292,9641
int queue_invalidate_iec(319,10651
static int __iommu_flush_iec(335,11103
int iommu_flush_iec_global(349,11482
int iommu_flush_iec_index(354,11595
static int flush_context_qi(359,11726
static int flush_iotlb_qi(390,12621
int enable_qinval(432,13916
void disable_qinval(492,15800

xen/drivers/passthrough/vtd/intremap.c,1245
#define nr_ioapics 35,1096
#define nr_ioapic_registers(36,1154
#define nr_ioapic_registers(40,1262
#define SVT_NO_VERIFY 46,1364
#define SVT_VERIFY_SID_SQ 47,1431
#define SVT_VERIFY_BUS 48,1500
#define SQ_ALL_16 53,1600
#define SQ_13_IGNORE_1 54,1672
#define SQ_13_IGNORE_2 57,1853
#define SQ_13_IGNORE_3 60,2046
static int **apic_pin_2_ir_idx;apic_pin_2_ir_idx65,2300
static int init_apic_pin_2_ir_idx(67,2333
static u16 apicid_to_bdf(102,3209
static void set_ire_sid(115,3624
static void set_ioapic_source_id(123,3823
int iommu_supports_eim(129,3992
static void free_remap_entry(158,4809
static int alloc_remap_entry(183,5581
static int remap_entry_to_ioapic_rte(217,6483
static int ioapic_rte_to_remap_entry(265,7974
unsigned int io_apic_read_remap_rte(360,11122
void io_apic_write_remap_rte(402,12391
static void set_msi_source_id(462,14272
static int remap_entry_to_msi_msg(511,15741
static int msi_msg_to_remap_entry(580,17833
void msi_msg_read_remap_rte(678,21115
void msi_msg_write_remap_rte(697,21602
void msi_msg_read_remap_rte(716,22129
void msi_msg_write_remap_rte(722,22231
int enable_intremap(729,22341
void disable_intremap(802,24619
int iommu_enable_IR(827,25234
void iommu_disable_IR(884,26498

xen/drivers/passthrough/vtd/x86/ats.c,590
#define ATS_REG_CAP 33,1023
#define ATS_REG_CTL 34,1048
#define ATS_QUEUE_DEPTH_MASK 35,1073
#define ATS_ENABLE 36,1110
struct pci_ats_dev 38,1152
    struct list_head list;39,1173
    u8 bus;40,1200
    u8 devfn;41,1212
    u16 ats_queue_depth;42,1226
    spinlock_t lock;43,1296
bool_t __read_mostly ats_enabled 50,1429
static void __init parse_ats_param(52,1468
struct acpi_drhd_unit * find_ats_dev_drhd(75,1835
int ats_device(86,2086
int enable_ats_device(119,2959
int disable_ats_device(171,4598
static int device_in_domain(208,5638
int dev_invalidate_iotlb(245,6555

xen/drivers/passthrough/vtd/x86/vtd.c,488
static bool_t __initdata iommu_inclusive_mapping 37,1218
void *map_vtd_domain_page(map_vtd_domain_page40,1340
void unmap_vtd_domain_page(45,1434
unsigned int get_cache_line_size(50,1503
void cacheline_flush(55,1592
void flush_all_cache(60,1650
void *map_to_nocache_virt(map_to_nocache_virt65,1692
struct hvm_irq_dpci *domain_get_irq_dpci(domain_get_irq_dpci71,1882
int domain_set_irq_dpci(79,2037
void hvm_dpci_isairq_eoi(88,2222
void __init iommu_set_dom0_mapping(130,3428

xen/drivers/passthrough/vtd/dmar.h,1385
#define _DMAR_H_22,833
struct acpi_ioapic_unit 30,975
    struct list_head list;31,1001
    int apic_id;32,1028
        u16 info;34,1057
            u16 func:func36,1092
                dev:dev37,1117
                bus:bus38,1142
        }bdf;bdf39,1167
    }ioapic;ioapic40,1181
struct dmar_scope 43,1198
    DECLARE_BITMAP(44,1218
    u16    *devices;devices45,1289
    int    devices_cnt;46,1362
struct acpi_drhd_unit 49,1390
    struct dmar_scope scope;50,1414
    struct list_head list;51,1491
    u64    address;52,1518
    u8     include_all:include_all53,1598
    struct iommu *iommu;iommu54,1624
    struct list_head ioapic_list;55,1649
struct acpi_rmrr_unit 58,1687
    struct dmar_scope scope;59,1711
    struct list_head list;60,1788
    u64    base_address;61,1815
    u64    end_address;62,1840
    u8     allow_all:allow_all63,1864
struct acpi_atsr_unit 66,1892
    struct dmar_scope scope;67,1916
    struct list_head list;68,1993
    u8     all_ports:all_ports69,2020
struct acpi_rhsa_unit 72,2048
    struct list_head list;73,2072
    u64    address;74,2099
    u32    proximity_domain;75,2119
#define for_each_drhd_unit(78,2152
#define for_each_rmrr_device(81,2242
#define DMAR_TYPE 92,2824
#define RMRR_TYPE 93,2844
#define ATSR_TYPE 94,2864
#define DMAR_OPERATION_TIMEOUT 96,2885
#define IOMMU_WAIT_OP(98,2933

xen/drivers/passthrough/vtd/ia64/ats.c,214
bool_t __read_mostly ats_enabled 33,1005
struct acpi_drhd_unit * find_ats_dev_drhd(35,1044
int ats_device(40,1129
int enable_ats_device(45,1192
int disable_ats_device(50,1262
int dev_invalidate_iotlb(55,1333

xen/drivers/passthrough/vtd/ia64/vtd.c,556
int vector_irq[NR_VECTORS] __read_mostly 34,1078
u8 irq_vector[NR_IRQS] __read_mostly;38,1244
void *map_vtd_domain_page(map_vtd_domain_page40,1283
void unmap_vtd_domain_page(46,1440
unsigned int get_cache_line_size(51,1509
void cacheline_flush(56,1580
void flush_all_cache(63,1676
void * map_to_nocache_virt(68,1733
struct hvm_irq_dpci *domain_get_irq_dpci(domain_get_irq_dpci73,1844
int domain_set_irq_dpci(81,1999
void hvm_dpci_isairq_eoi(90,2184
static int __init do_dom0_iommu_mapping(95,2269
void __init iommu_set_dom0_mapping(123,3095

xen/drivers/passthrough/vtd/iommu.c,3830
#define nr_ioapics 45,1382
static int sharept 48,1448
int nr_iommus;51,1508
static int domain_iommu_domid(56,1622
#define DID_FIELD_WIDTH 77,2180
#define DID_HIGH_OFFSET 78,2207
static int context_set_domain_id(79,2233
static struct intel_iommu *__init alloc_intel_iommu(116,3215
static void __init free_intel_iommu(131,3565
struct qi_ctrl *iommu_qi_ctrl(iommu_qi_ctrl136,3651
struct ir_ctrl *iommu_ir_ctrl(iommu_ir_ctrl141,3757
struct iommu_flush *iommu_get_flush(iommu_get_flush146,3863
static int iommus_incoherent;151,3973
static void __iommu_flush_cache(152,4003
void iommu_flush_cache_entry(167,4338
void iommu_flush_cache_page(172,4440
u64 alloc_pgtable_maddr(178,4612
void free_pgtable_maddr(208,5336
static u64 bus_to_context_maddr(215,5476
static u64 addr_to_dma_page_maddr(242,6271
static void iommu_flush_write_buffer(319,8471
static int flush_context_reg(339,9066
static int inline iommu_flush_context_global(392,10565
static int inline iommu_flush_context_domain(400,10849
static int inline iommu_flush_context_device(408,11144
static int flush_iotlb_reg(419,11590
static int inline iommu_flush_iotlb_global(485,13752
static int inline iommu_flush_iotlb_dsi(503,14277
static int inline get_alignment(521,14808
static int inline iommu_flush_iotlb_psi(536,15034
static void iommu_flush_all(575,16339
static void dma_pte_clear_one(592,16759
static void iommu_free_pagetable(662,18783
static int iommu_set_root_entry(690,19431
static void iommu_enable_translation(725,20317
static void iommu_disable_translation(765,21624
enum faulttype 786,22272
    DMA_REMAP,787,22289
    INTR_REMAP,788,22304
    UNKNOWN,789,22320
static const char *dma_remap_fault_reasons[dma_remap_fault_reasons792,22337
static const char *intr_remap_fault_reasons[intr_remap_fault_reasons810,22883
static const char *iommu_get_fault_reason(iommu_get_fault_reason821,23375
static struct iommu **irq_to_iommu;irq_to_iommu841,23921
static int iommu_page_fault_do_one(842,23957
static void iommu_fault_status(876,25292
#define PRIMARY_FAULT_REG_LEN 901,26318
static void iommu_page_fault(902,26353
static void dma_msi_unmask(971,28566
static void dma_msi_mask(982,28866
static unsigned int dma_msi_startup(996,29250
static void dma_msi_end(1002,29348
static void dma_msi_set_affinity(1008,29440
static hw_irq_controller dma_msi_type 1060,31316
static int iommu_set_interrupt(1071,31601
int __init iommu_alloc(1101,32306
void __init iommu_free(1196,35034
#define guestwidth_to_adjustwidth(1223,35551
static int intel_iommu_domain_init(1230,35815
static void __init intel_iommu_dom0_init(1239,35997
int domain_context_mapping_one(1260,36396
static int domain_context_mapping(1368,39663
int domain_context_unmap_one(1439,41827
static int domain_context_unmap(1492,43285
static int reassign_device_ownership(1601,46291
void iommu_domain_teardown(1629,46871
static int intel_iommu_map_page(1645,47233
static int intel_iommu_unmap_page(1721,49463
void iommu_pte_flush(1732,49741
static int vtd_ept_page_compatible(1759,50589
void iommu_set_pgd(1775,50921
static int domain_rmrr_mapped(1789,51289
static int rmrr_identity_mapping(1805,51685
static int intel_iommu_add_device(1842,52697
static int intel_iommu_remove_device(1875,53524
static void __init setup_dom0_devices(1900,54148
void clear_fault_bits(1923,54722
static int init_vtd_hw(1935,55125
static void __init setup_dom0_rmrr(2063,58520
int __init intel_vtd_setup(2080,58929
#define P(2125,60181
#undef P2130,60431
int device_assigned(2154,60857
static int intel_iommu_assign_device(2170,61139
static int intel_iommu_group_id(2224,62379
static u32 iommu_state[iommu_state2233,62573
static void vtd_suspend(2234,62625
static void vtd_resume(2274,63723
const struct iommu_ops intel_iommu_ops 2307,64711

xen/drivers/passthrough/vtd/dmar.c,1378
#undef PREFIX37,1190
#define PREFIX 38,1204
#define DEBUG39,1242
#define MIN_SCOPE_LEN 41,1257
static u64 igd_drhd_address;49,1481
u8 dmar_host_address_width;50,1510
void dmar_scope_add_buses(52,1539
void dmar_scope_remove_buses(62,1762
static int __init acpi_register_drhd_unit(72,1990
static int __init acpi_register_rmrr_unit(85,2326
static void __init disable_all_dmar_units(91,2461
static int acpi_ioapic_device_match(114,3037
struct acpi_drhd_unit * ioapic_to_drhd(125,3310
struct acpi_drhd_unit * iommu_to_drhd(134,3576
struct iommu * ioapic_to_iommu(148,3856
static int __init acpi_register_atsr_unit(158,4122
struct acpi_drhd_unit * acpi_find_matched_drhd_unit(171,4454
struct acpi_atsr_unit * acpi_find_matched_atsr_unit(212,5402
struct acpi_rhsa_unit * drhd_to_rhsa(228,5782
int is_igd_drhd(243,6090
static int scope_device_count(252,6287
static int __init acpi_parse_dev_scope(280,6973
static int __init acpi_dmar_check_length(380,10232
acpi_parse_one_drhd(392,10539
acpi_parse_one_rmrr(504,13950
acpi_parse_one_atsr(603,17158
acpi_parse_one_rhsa(652,18558
static int __init acpi_parse_dmar(678,19339
#define parse_dmar_table(765,21920
#define parse_dmar_table(767,21980
int __init acpi_dmar_init(770,22051
static struct acpi_table_header *get_dmar(get_dmar775,22134
void acpi_dmar_reinstate(788,22469
void acpi_dmar_zap(797,22679

xen/drivers/passthrough/vtd/utils.c,247
int is_usb_device(35,1037
void disable_pmr(43,1276
void print_iommu_regs(63,1823
static u32 get_level_index(93,3344
void print_vtd_entries(101,3497
static void dump_iommu_info(188,5943
struct keyhandler dump_iommu_info_keyhandler 314,10621

xen/drivers/video/font_8x16.c,141
#define FONTDATAMAX 10,288
static const unsigned char fontdata_8x16[fontdata_8x1612,318
const struct font_desc font_vga_8x16 4624,108847

xen/drivers/video/vga.c,596
struct xen_vga_console_info vga_console_info;17,335
static int vgacon_keep;19,382
static unsigned int xpos,20,406
static unsigned int xpos, ypos;20,406
static unsigned char *video;video21,438
static void vga_noop_puts(24,510
static char __initdata opt_vga[opt_vga51,1422
static unsigned int columns,55,1527
static unsigned int columns, lines;55,1527
#define ATTRIBUTE 56,1563
#define vesa_early_init(62,1673
#define vesa_endboot(63,1709
void __init vga_init(66,1753
void __init vga_endboot(100,2706
static void vga_text_puts(125,3241
int __init fill_console_start_info(151,3856

xen/drivers/video/font_8x8.c,137
#define FONTDATAMAX 10,288
static const unsigned char fontdata_8x8[fontdata_8x812,317
const struct font_desc font_vga_8x8 2576,57645

xen/drivers/video/font_8x14.c,134
#define FONTDATAMAX 10,288
static unsigned char fontdata_8x14[fontdata_8x1412,318
const struct font_desc font_vga_8x14 4112,96041

xen/drivers/video/vesa.c,982
#define vlfb_info 16,311
#define text_columns 17,360
#define text_rows 18,413
static unsigned char *lfb,lfb23,560
static unsigned char *lfb, *lbuf,lbuf23,560
static unsigned char *lfb, *lbuf, *text_buf;text_buf23,560
static unsigned int *__initdata line_len;24,605
static const struct font_desc *font;font25,647
static bool_t vga_compat;26,684
static unsigned int pixel_on;27,710
static unsigned int xpos,28,740
static unsigned int xpos, ypos;28,740
static unsigned int vram_total;30,773
static unsigned int vram_remap;33,845
static int font_height;36,917
static void __init parse_font_height(37,941
void __init vesa_early_init(46,1194
void __init vesa_init(87,2842
void __init vesa_endboot(156,5023
static unsigned int vesa_mtrr;178,5457
void __init vesa_mtrr_init(181,5528
static void lfb_flush(208,6272
#define lfb_flush(216,6421
static void vesa_show_line(221,6524
static void __init vesa_redraw_puts(255,7527
static void vesa_scroll_puts(299,8830

xen/drivers/video/font.h,224
#define _XEN_FONT_H12,285
struct font_desc 14,306
    const char *name;name15,325
    unsigned width,16,347
    unsigned width, height,16,347
    unsigned width, height, count;16,347
    const void *data;data17,382

xen/common/tasklet.c,400
static bool_t tasklets_initialised;22,605
static void tasklet_enqueue(31,838
void tasklet_schedule_on_cpu(41,1166
void tasklet_schedule(60,1564
void do_tasklet(65,1662
void tasklet_kill(114,2902
static void migrate_tasklets_from_cpu(139,3427
void tasklet_init(159,3936
static int cpu_callback(169,4158
static struct notifier_block cpu_nfb 190,4579
void __init tasklet_subsys_init(195,4678

xen/common/shutdown.c,102
bool_t __read_mostly opt_noreboot;14,334
static void maybe_reboot(17,411
void dom0_shutdown(32,693

xen/common/domctl.c,294
int cpumask_to_xenctl_cpumap(34,806
int xenctl_cpumap_to_cpumask(57,1490
static inline int is_free_domid(81,2214
void getdomaininfo(95,2456
static unsigned int default_vcpu0_location(150,4315
bool_t domctl_lock_acquire(198,5847
void domctl_lock_release(219,6470
long do_domctl(225,6598

xen/common/lzo.c,955
#define LZO_VERSION 27,704
#define LZO_VERSION_STRING 28,732
#define LZO_VERSION_DATE 29,766
#define M1_MAX_OFFSET 31,806
#define M2_MAX_OFFSET 32,835
#define M3_MAX_OFFSET 33,864
#define M4_MAX_OFFSET 34,893
#define M1_MIN_LEN 36,923
#define M1_MAX_LEN 37,944
#define M2_MIN_LEN 38,965
#define M2_MAX_LEN 39,986
#define M3_MIN_LEN 40,1007
#define M3_MAX_LEN 41,1028
#define M4_MIN_LEN 42,1050
#define M4_MAX_LEN 43,1071
#define M1_MARKER 45,1093
#define M2_MARKER 46,1113
#define M3_MARKER 47,1134
#define M4_MARKER 48,1155
#define D_BITS 50,1177
#define D_MASK 51,1196
#define D_HIGH 52,1233
#define DX2(54,1270
#define DX3(56,1361
#define get_unaligned(73,1803
#define put_unaligned(74,1837
#define get_unaligned_le16(75,1881
_lzo1x_1_do_compress(78,1951
int lzo1x_1_compress(233,6263
#define HAVE_IP(293,7596
#define HAVE_OP(294,7657
#define HAVE_LB(295,7718
#define COPY4(297,7780
int lzo1x_decompress_safe(300,7872

xen/common/grant_table.c,2661
unsigned int max_nr_grant_frames 42,1464
#define MAX_MAPTRACK_TO_GRANTS_RATIO 50,1780
union grant_combo 56,1976
    uint32_t word;57,1996
        uint16_t flags;59,2028
        domid_t  domid;60,2052
    } shorts;61,2076
struct gnttab_unmap_common 65,2166
    uint64_t host_addr;67,2211
    uint64_t dev_bus_addr;68,2235
    uint64_t new_addr;69,2262
    grant_handle_t handle;70,2285
    int16_t status;73,2330
    u16 flags;76,2410
    unsigned long frame;77,2425
    struct grant_mapping *map;map78,2450
    struct domain *rd;rd79,2481
#define GNTTAB_UNMAP_BATCH_SIZE 83,2578
#define PIN_FAIL(86,2615
#define MAPTRACK_PER_PAGE 93,2884
#define maptrack_entry(94,2953
nr_maptrack_frames(98,3078
static unsigned inline int max_nr_maptrack_frames(103,3175
#define gfn_to_mfn_private(109,3319
#define gfn_to_mfn_private(117,3726
#define SHGNT_PER_PAGE_V1 120,3793
#define shared_entry_v1(121,3858
#define SHGNT_PER_PAGE_V2 123,3957
#define shared_entry_v2(124,4022
#define STGNT_PER_PAGE 126,4121
#define status_entry(127,4181
shared_entry_header(130,4298
#define ACGNT_PER_PAGE 138,4540
#define active_entry(139,4611
static int __get_paged_frame(143,4742
__get_maptrack_handle(176,5549
put_maptrack_handle(187,5796
get_maptrack_handle(195,5964
static unsigned int nr_grant_entries(247,7447
static int _set_status_v1(256,7742
static int _set_status_v2(328,10210
static int _set_status(414,12874
static void mapcount(429,13367
__gnttab_map_grant_ref(460,14310
gnttab_map_grant_ref(740,22942
__gnttab_unmap_common(761,23449
__gnttab_unmap_common_complete(880,26827
__gnttab_unmap_grant_ref(976,29203
gnttab_unmap_grant_ref(994,29619
__gnttab_unmap_and_replace(1039,30830
gnttab_unmap_and_replace(1056,31243
gnttab_populate_status_frames(1101,32484
gnttab_unpopulate_status_frames(1131,33330
gnttab_grow_table(1145,33650
gnttab_setup_table(1208,35452
gnttab_query_size(1303,37925
gnttab_prepare_for_transfer(1372,39495
gnttab_transfer(1446,41437
__release_grant_for_copy(1622,47055
static void __fixup_status_for_pin(1706,49403
__acquire_grant_for_copy(1721,49917
__gnttab_copy(1916,56815
gnttab_copy(2062,61648
gnttab_set_version(2082,62118
gnttab_get_status_frames(2159,64117
gnttab_get_version(2226,65798
do_grant_table_op(2252,66392
static unsigned int max_nr_active_grant_frames(2391,70146
grant_table_create(2399,70433
gnttab_release_mappings(2484,73191
grant_table_destroy(2589,76239
void gnttab_usage_print(2618,76893
static void gnttab_usage_print_all(2683,78649
static struct keyhandler gnttab_usage_print_all_keyhandler 2692,78886
static int __init gnttab_usage_init(2698,79048

xen/common/event_channel.c,1439
#define bucket_from_port(35,1044
#define port_is_valid(37,1118
#define evtchn_from_port(40,1235
#define ERROR_EXIT(43,1327
#define ERROR_EXIT_DOM(51,1835
static int virq_is_global(62,2402
static int get_free_port(87,2786
static long evtchn_alloc_unbound(124,3654
static long evtchn_bind_interdomain(160,4449
static long evtchn_bind_virq(229,6338
static long evtchn_bind_ipi(269,7266
static void link_pirq_port(298,7854
static void unlink_pirq_port(308,8171
static long evtchn_bind_pirq(323,8617
static long __evtchn_close(371,9642
static long evtchn_close(498,12791
int evtchn_send(503,12901
static int evtchn_set_pending(566,14440
int guest_enabled_event(609,15806
void send_guest_vcpu_virq(614,15921
void send_guest_global_virq(633,16276
int send_guest_pirq(662,16887
static long evtchn_status(684,17480
long evtchn_bind_vcpu(751,18997
int evtchn_unmask(810,20335
static long evtchn_reset(843,21140
long do_event_channel_op(869,21557
int alloc_unbound_xen_event_channel(984,24957
void free_xen_event_channel(1009,25486
void notify_via_xen_event_channel(1034,25968
int evtchn_init(1064,26674
void evtchn_destroy(1082,27088
void evtchn_destroy_final(1109,27739
void evtchn_move_pirqs(1118,27880
static void domain_dump_evtchn_info(1135,28306
static void dump_evtchn_info(1185,29815
static struct keyhandler dump_evtchn_info_keyhandler 1199,30101
static int __init dump_evtchn_info_key_init(1205,30244

xen/common/notifier.c,110
void notifier_chain_register(22,608
void notifier_chain_unregister(47,1299
int notifier_call_chain(69,2251

xen/common/kernel.c,395
int tainted;25,495
xen_commandline_t saved_cmdline;27,509
static void __init assign_integer_param(29,543
void __init cmdline_parse(51,1023
int __init parse_bool(132,3307
char *print_tainted(print_tainted160,3995
void add_taint(178,4457
void __init do_presmp_initcalls(185,4589
void __init do_initcalls(192,4749
# define DO(199,4900
DO(207,4968
DO(334,8521
DO(358,9024
DO(363,9130

xen/common/trace.c,1528
#define xen_t_buf 38,980
CHECK_t_buf;39,1004
#undef xen_t_buf40,1017
#define compat_t_rec 42,1040
static unsigned int opt_tbuf_size 46,1125
static struct t_info *t_info;t_info50,1277
#define T_INFO_PAGES 51,1307
#define T_INFO_SIZE 52,1368
static u32 data_size;56,1591
static u32 t_info_first_offset __read_mostly;57,1613
static u32 t_buf_highwater;61,1767
int tb_init_done __read_mostly;69,2107
static cpumask_t tb_cpu_mask 72,2179
static u32 tb_event_mask 75,2264
#define fit_to_type(79,2424
static void calc_tinfo_first_offset(81,2497
static int check_tbuf_size(92,2874
static int alloc_trace_bufs(114,3605
static int tb_set_size(244,7331
int trace_will_trace_event(276,8052
static int cpu_callback(302,8620
static struct notifier_block cpu_nfb 313,8869
void __init init_trace_bufs(324,9242
int tb_control(363,10148
static inline unsigned int calc_rec_size(425,11894
static inline bool_t bogus(435,12093
static inline u32 calc_unconsumed_bytes(448,12474
static inline u32 calc_bytes_to_wrap(467,12849
static inline u32 calc_bytes_avail(486,13216
static inline struct t_rec *next_record(next_record491,13332
static inline void __insert_record(509,13773
static inline void insert_wrap_record(563,15467
#define LOST_REC_SIZE 584,16102
static inline void insert_lost_records(586,16177
        u32 lost_records;589,16250
        u32 did:did590,16276
        u32 did:16, vid:vid590,16276
        u64 first_tsc;591,16304
static void trace_notify_dom0(609,16841
void __trace_var(624,17363

xen/common/xencomm.c,849
#undef DEBUG32,1176
#define xc_dprintk(34,1202
#define xc_dprintk(36,1265
xencomm_vaddr(40,1325
xencomm_get_page(47,1537
xencomm_desc_cross_page_boundary(71,2210
struct xencomm_ctxt 79,2408
    struct xencomm_desc __user *desc_in_paddr;desc_in_paddr80,2430
    uint32_t nr_addrs;81,2477
    struct page_info *page;page83,2501
    unsigned long *address;address84,2529
xencomm_ctxt_nr_addrs(88,2577
xencomm_ctxt_address(94,2686
xencomm_ctxt_init(100,2776
xencomm_ctxt_next(150,4509
xencomm_ctxt_done(179,5198
xencomm_copy_chunk_from(185,5285
xencomm_inline_from_guest(208,5760
xencomm_copy_from_guest(244,6690
xencomm_copy_chunk_to(301,8164
xencomm_inline_to_guest(325,8715
xencomm_copy_to_guest(361,9647
static int xencomm_inline_add_offset(417,11110
int xencomm_add_offset(425,11340
int xencomm_handle_is_null(474,12546

xen/common/bitmap.c,938
int __bitmap_empty(41,1411
int __bitmap_full(56,1696
int __bitmap_equal(71,1981
void __bitmap_complement(87,2330
void __bitmap_shift_right(109,2998
void __bitmap_shift_left(154,4282
void __bitmap_and(182,5080
void __bitmap_or(193,5328
void __bitmap_xor(204,5574
void __bitmap_andnot(215,5822
int __bitmap_intersects(226,6077
int __bitmap_subset(241,6436
int __bitmap_weight(257,6813
int __bitmap_weight(270,7079
#define CHUNKSZ	290,7511
#define nbits_to_hold_value(291,7533
#define roundup_power2(292,7575
#define unhex(293,7656
#define BASEDEC 294,7726
int bitmap_scnprintf(306,8155
static inline int bscnl_emit(342,9091
int bitmap_scnlistprintf(370,10104
int bitmap_find_free_region(405,11189
void bitmap_release_region(441,12127
int bitmap_allocate_region(452,12442
void bitmap_long_to_byte(474,13106
void bitmap_byte_to_long(489,13388
void bitmap_long_to_byte(506,13724
void bitmap_byte_to_long(511,13833

xen/common/vsprintf.c,525
unsigned long simple_strtoul(31,746
long simple_strtol(68,1663
unsigned long long simple_strtoull(83,2086
long long simple_strtoll(120,3096
static int skip_atoi(127,3286
#define ZEROPAD 136,3417
#define SIGN 137,3469
#define PLUS 138,3528
#define SPACE 139,3576
#define LEFT 140,3628
#define SPECIAL 141,3681
#define LARGE 142,3722
static char *number(number144,3794
int vsnprintf(257,6744
int vscnprintf(503,13693
int vsscanf(521,14055
int snprintf(744,21137
int scnprintf(769,21837
int sscanf(789,22265

xen/common/symbols-dummy.c,386
const unsigned int symbols_offsets[symbols_offsets10,202
const unsigned long symbols_addresses[symbols_addresses12,247
const unsigned int symbols_num_syms;14,296
const u8 symbols_names[symbols_names15,333
const u8 symbols_token_table[symbols_token_table17,361
const u16 symbols_token_index[symbols_token_index18,394
const unsigned int symbols_markers[symbols_markers20,429

xen/common/compat/grant_table.c,1838
#define xen_grant_entry_v1 8,152
CHECK_grant_entry_v1;9,194
#undef xen_grant_entry_v110,216
#define xen_grant_entry_header 12,243
CHECK_grant_entry_header;13,293
#undef xen_grant_entry_header14,319
#define xen_grant_entry_v2 16,350
CHECK_grant_entry_v2;17,392
#undef xen_grant_entry_v218,414
#define xen_gnttab_map_grant_ref 20,441
CHECK_gnttab_map_grant_ref;21,495
#undef xen_gnttab_map_grant_ref22,523
#define xen_gnttab_unmap_grant_ref 24,556
CHECK_gnttab_unmap_grant_ref;25,614
#undef xen_gnttab_unmap_grant_ref26,644
#define xen_gnttab_unmap_and_replace 28,679
CHECK_gnttab_unmap_and_replace;29,741
#undef xen_gnttab_unmap_and_replace30,773
#define xen_gnttab_dump_table 36,963
CHECK_gnttab_dump_table;37,1011
#undef xen_gnttab_dump_table38,1036
#define xen_gnttab_set_version 40,1066
CHECK_gnttab_set_version;41,1116
#undef xen_gnttab_set_version42,1142
#define xen_gnttab_get_version 46,1234
CHECK_gnttab_get_version;47,1284
#undef xen_gnttab_get_version48,1310
int compat_grant_table_op(50,1341
#define CASE(61,1630
#undef CASE101,2459
            XEN_GUEST_HANDLE(113,2682
            struct compat_gnttab_setup_table setup;120,2936
            struct compat_gnttab_transfer xfer;121,2988
            struct compat_gnttab_copy copy;122,3036
            struct compat_gnttab_get_status_frames get_status;123,3080
#define XLAT_gnttab_setup_table_HNDL_frame_list(150,4187
#undef XLAT_gnttab_setup_table_HNDL_frame_list153,4409
#define XLAT_gnttab_setup_table_HNDL_frame_list(160,4656
#undef XLAT_gnttab_setup_table_HNDL_frame_list173,5246
#define XLAT_gnttab_get_status_frames_HNDL_frame_list(287,9548
#undef XLAT_gnttab_get_status_frames_HNDL_frame_list290,9776
#define XLAT_gnttab_get_status_frames_HNDL_frame_list(297,10010
#undef XLAT_gnttab_get_status_frames_HNDL_frame_list310,10618

xen/common/compat/kernel.c,544
#define xen_extraversion 20,429
#define xen_extraversion_t 21,474
#define xen_compile_info 23,524
#define xen_compile_info_t 24,569
#define xen_platform_parameters 28,651
#define xen_platform_parameters_t 29,710
#undef HYPERVISOR_VIRT_START30,773
#define HYPERVISOR_VIRT_START 31,802
#define xen_changeset_info 33,879
#define xen_changeset_info_t 34,928
#define xen_feature_info 36,982
#define xen_feature_info_t 37,1027
#define xennmi_callback 41,1105
#define xennmi_callback_t 42,1149
#define DO(44,1198
#define COMPAT45,1229

xen/common/compat/schedule.c,483
#define COMPAT8,127
#define ret_t 9,142
#define do_sched_op 11,161
#define xen_sched_shutdown 13,198
CHECK_sched_shutdown;14,240
#undef xen_sched_shutdown15,262
#define xen_sched_remote_shutdown 17,289
CHECK_sched_remote_shutdown;18,345
#undef xen_sched_remote_shutdown19,374
static int compat_poll(21,408
#define XLAT_sched_poll_HNDL_ports(25,498
#undef XLAT_sched_poll_HNDL_ports28,640
#define do_poll 33,707
#define sched_poll 34,735
int compat_set_timer_op(38,799

xen/common/compat/xlat.c,1180
void xlat_start_info(12,261
void xlat_vcpu_runstate_info(21,519
#define xen_dom0_vga_console_info 29,750
CHECK_dom0_vga_console_info;30,806
#undef dom0_vga_console_info31,835
#define xen_evtchn_alloc_unbound 33,865
#define xen_evtchn_bind_interdomain 34,919
#define xen_evtchn_bind_ipi 35,979
#define xen_evtchn_bind_pirq 36,1023
#define xen_evtchn_bind_vcpu 37,1069
#define xen_evtchn_bind_virq 38,1115
#define xen_evtchn_close 39,1161
#define xen_evtchn_op 40,1199
#define xen_evtchn_send 41,1231
#define xen_evtchn_status 42,1267
#define xen_evtchn_unmask 43,1307
CHECK_evtchn_op;44,1347
#undef xen_evtchn_alloc_unbound45,1364
#undef xen_evtchn_bind_interdomain46,1396
#undef xen_evtchn_bind_ipi47,1431
#undef xen_evtchn_bind_pirq48,1458
#undef xen_evtchn_bind_vcpu49,1486
#undef xen_evtchn_bind_virq50,1514
#undef xen_evtchn_close51,1542
#undef xen_evtchn_op52,1566
#undef xen_evtchn_send53,1587
#undef xen_evtchn_status54,1610
#undef xen_evtchn_unmask55,1635
#define xen_mmu_update 57,1661
CHECK_mmu_update;58,1695
#undef xen_mmu_update59,1713
#define xen_vcpu_time_info 61,1736
CHECK_vcpu_time_info;62,1778
#undef xen_vcpu_time_info63,1800

xen/common/compat/xenoprof.c,488
#define COMPAT7,59
#define do_xenoprof_op 9,75
#define xen_oprof_init 11,118
CHECK_oprof_init;12,155
#undef xen_oprof_init13,173
#define xenoprof_get_buffer 15,196
#define xenoprof_op_get_buffer 16,248
#define xenoprof_arch_counter 17,306
#define xen_domid_t 19,363
#define compat_domid_t 20,391
#undef compat_domid_t22,448
#undef xen_domid_t23,470
#define xen_oprof_passive 25,490
CHECK_oprof_passive;26,533
#undef xen_oprof_passive27,554
#define xenoprof_counter 29,580

xen/common/compat/tmem_xen.c,54
#define xen_tmem_op 14,277
#undef xen_tmem_op16,324

xen/common/compat/multicall.c,311
#define COMPAT9,175
typedef int ret_t;10,190
#undef do_multicall_call11,209
static inline void xlat_multicall_entry(13,235
#define multicall_entry 21,442
#define multicall_entry_t 22,494
#define do_multicall_call 23,548
#define call 24,599
#define do_multicall(25,640
#define _XEN_GUEST_HANDLE(26,695

xen/common/compat/memory.c,527
#define xen_domid_t 10,203
#define compat_domid_t 11,231
#undef compat_domid_t13,288
#undef xen_domid_t14,310
int compat_memory_op(16,330
            XEN_GUEST_HANDLE(25,577
            struct compat_memory_reservation rsrv;30,743
            struct compat_memory_exchange xchg;31,794
#define XLAT_memory_reservation_HNDL_extent_start(60,1884
#undef XLAT_memory_reservation_HNDL_extent_start88,3077
#define XLAT_memory_reservation_HNDL_extent_start(136,5165
#undef XLAT_memory_reservation_HNDL_extent_start160,6130

xen/common/compat/domain.c,260
#define xen_vcpu_set_periodic_timer 14,275
CHECK_vcpu_set_periodic_timer;15,335
#undef xen_vcpu_set_periodic_timer16,366
int compat_vcpu_op(18,402
            struct vcpu_runstate_info nat;72,1641
            struct compat_vcpu_runstate_info cmp;73,1684

xen/common/wait.c,523
struct waitqueue_vcpu 27,998
    struct list_head list;28,1022
    struct vcpu *vcpu;vcpu29,1049
    void *esp;esp35,1262
    char stack[stack36,1277
int init_waitqueue_vcpu(40,1310
void destroy_waitqueue_vcpu(57,1608
void init_waitqueue_head(71,1843
void wake_up(77,1962
static void __prepare_to_wait(95,2302
static void __finish_wait(121,3466
void check_wakeup_from_wait(126,3546
#define __prepare_to_wait(144,3960
#define __finish_wait(145,4001
void prepare_to_wait(149,4047
void finish_wait(164,4380

xen/common/schedule.c,2510
static char __initdata opt_sched[opt_sched40,1153
bool_t sched_smt_power_savings 47,1414
static const struct scheduler *schedulers[schedulers64,2092
static struct scheduler __read_mostly ops;72,2246
#define SCHED_OP(74,2290
#define DOM2OP(78,2506
#define VCPU2OP(79,2586
#define VCPU2ONLINE(80,2631
static inline void trace_runstate_change(84,2832
    struct { uint32_t vcpu:vcpu86,2906
    struct { uint32_t vcpu:16, domain:domain86,2906
static inline void trace_continue_running(102,3265
    struct { uint32_t vcpu:vcpu104,3325
    struct { uint32_t vcpu:16, domain:domain104,3325
static inline void vcpu_urgent_count_update(115,3559
static inline void vcpu_runstate_change(140,4234
void vcpu_runstate_get(162,4798
uint64_t get_cpu_idle_time(178,5216
int sched_init_vcpu(190,5458
int sched_move_domain(230,6630
void sched_destroy_vcpu(299,8366
int sched_init_domain(310,8729
void sched_destroy_domain(315,8822
void vcpu_sleep_nosync(320,8915
void vcpu_sleep_sync(339,9348
void vcpu_wake(349,9516
void vcpu_unblock(372,10121
static void vcpu_migrate(393,10761
void vcpu_force_reschedule(446,12425
int cpu_disable_scheduler(464,12863
int vcpu_set_affinity(524,14360
static long do_block(558,15217
static long do_poll(579,15681
static long do_yield(652,17641
static void domain_watchdog_timeout(665,17932
static long domain_watchdog(676,18187
void watchdog_domain_init(717,19180
void watchdog_domain_destroy(729,19450
long do_sched_op_compat(737,19620
typedef long ret_t;770,20148
ret_t do_sched_op(774,20191
long do_set_timer_op(901,22866
int sched_id(939,24348
long sched_adjust(945,24451
long sched_adjust_global(992,25795
static void vcpu_periodic_timer_work(1013,26277
static void schedule(1039,26944
void context_saved(1142,29828
static void s_timer_fn(1159,30268
static void vcpu_periodic_timer_fn(1166,30447
static void vcpu_singleshot_timer_fn(1173,30635
static void poll_timer_fn(1180,30778
static int cpu_schedule_up(1188,30938
static void cpu_schedule_down(1215,31664
static int cpu_schedule_callback(1225,31901
static struct notifier_block cpu_schedule_nfb 1247,32353
void __init scheduler_init(1252,32488
void schedule_cpu_switch(1291,33498
struct scheduler *scheduler_get_default(scheduler_get_default1323,34512
struct scheduler *scheduler_alloc(scheduler_alloc1328,34580
void scheduler_free(1353,35132
void schedule_dump(1360,35256
void sched_tick_suspend(1380,35775
void sched_tick_resume(1389,35960
void wait(1398,36143

xen/common/bunzip2.c,1839
#define INT_MAX 50,1475
#define MAX_GROUPS	54,1545
#define GROUP_SIZE 55,1567
#define MAX_HUFCODE_BITS 56,1633
#define MAX_SYMBOLS 57,1697
#define SYMBOL_RUNA	58,1756
#define SYMBOL_RUNB	59,1779
#define RETVAL_OK	62,1830
#define RETVAL_LAST_BLOCK	63,1852
#define RETVAL_NOT_BZIP_DATA	64,1884
#define RETVAL_UNEXPECTED_INPUT_EOF	65,1919
#define RETVAL_UNEXPECTED_OUTPUT_EOF	66,1960
#define RETVAL_DATA_ERROR	67,2002
#define RETVAL_OUT_OF_MEMORY	68,2034
#define RETVAL_OBSOLETE_INPUT	69,2069
#define BZIP2_IOBUF_SIZE	72,2141
struct group_data 75,2232
	int limit[limit77,2325
	int base[base78,2357
	int permute[permute79,2386
	int minLen,80,2413
	int minLen, maxLen;80,2413
struct bunzip_data 85,2562
	int writeCopies,87,2625
	int writeCopies, writePos,87,2625
	int writeCopies, writePos, writeRunCountdown,87,2625
	int writeCopies, writePos, writeRunCountdown, writeCount,87,2625
	int writeCopies, writePos, writeRunCountdown, writeCount, writeCurrent;87,2625
	int (*fill)fill89,2764
	int inbufCount,90,2799
	int inbufCount, inbufPos 90,2799
	unsigned char *inbuf inbuf91,2842
	unsigned int inbufBitCount,92,2878
	unsigned int inbufBitCount, inbufBits;92,2878
	unsigned int crc32Table[crc32Table95,2997
	unsigned int crc32Table[256], headerCRC,95,2997
	unsigned int crc32Table[256], headerCRC, totalCRC,95,2997
	unsigned int crc32Table[256], headerCRC, totalCRC, writeCRC;95,2997
	unsigned int *dbuf,dbuf97,3110
	unsigned int *dbuf, dbufSize;97,3110
	unsigned char selectors[selectors99,3198
	struct group_data groups[groups100,3259
	int io_error;101,3326
static unsigned int INIT get_bits(107,3522
static int INIT get_next_block(147,4769
static int INIT read_bunzip(512,17551
static int INIT nofill(610,20441
static int INIT start_bunzip(618,20739
STATIC int INIT bunzip2(664,22073

xen/common/perfc.c,763
#define PERFCOUNTER(13,244
#define PERFCOUNTER_ARRAY(14,316
#define PERFSTATUS(15,391
#define PERFSTATUS_ARRAY(16,465
    const char *name;name18,564
    enum { TYPE_SINGLE,19,586
    enum { TYPE_SINGLE, TYPE_ARRAY,19,586
           TYPE_S_SINGLE,20,622
           TYPE_S_SINGLE, TYPE_S_ARRAY20,622
    } type;21,661
    unsigned int nr_elements;22,673
} perfc_info[perfc_info23,703
#define NR_PERFCTRS 27,754
void perfc_printall(31,878
void perfc_reset(119,3721
static xen_sysctl_perfc_desc_t perfc_d[perfc_d155,4632
static xen_sysctl_perfc_val_t *perfc_vals;perfc_vals156,4685
static unsigned int      perfc_nbr_vals;157,4728
static cpumask_t         perfc_cpumap;158,4769
static int perfc_copy_info(160,4809
int perfc_control(244,7268

xen/common/cpupool.c,1265
#define for_each_cpupool(22,601
struct cpupool *cpupool0;cpupool025,712
cpumask_t cpupool_free_cpus;26,785
static struct cpupool *cpupool_list;cpupool_list28,857
static int cpupool_moving_cpu 30,935
static struct cpupool *cpupool_cpu_moving cpupool_cpu_moving31,971
static cpumask_t cpupool_locked_cpus 32,1021
#define cpupool_dprintk(38,1159
static struct cpupool *alloc_cpupool_struct(alloc_cpupool_struct40,1200
static void free_cpupool_struct(45,1291
static struct cpupool *cpupool_find_by_id(cpupool_find_by_id56,1573
static struct cpupool *__cpupool_get_by_id(__cpupool_get_by_id69,1851
struct cpupool *cpupool_get_by_id(cpupool_get_by_id80,2117
void cpupool_put(85,2211
static struct cpupool *cpupool_create(cpupool_create101,2597
static int cpupool_destroy(172,4250
static int cpupool_assign_cpu_locked(203,4866
static long cpupool_unassign_cpu_helper(220,5341
int cpupool_unassign_cpu(255,6420
int cpupool_add_domain(327,8263
void cpupool_rm_domain(353,8866
static void cpupool_cpu_add(375,9430
static int cpupool_cpu_remove(389,9817
int cpupool_do_sysctl(406,10136
void dump_runq(559,14061
static int cpu_callback(585,14643
static struct notifier_block cpu_nfb 607,15091
static int __init cpupool_presmp_init(611,15170

xen/common/unlzma.c,3135
#define	MIN(34,1252
static long long INIT read_int(36,1297
#define ENDIAN_CONVERT(46,1469
#define LZMA_IOBUF_SIZE	59,1810
struct rc 61,1843
	int (*fill)fill62,1855
	uint8_t *ptr;ptr63,1890
	uint8_t *buffer;buffer64,1905
	uint8_t *buffer_end;buffer_end65,1923
	int buffer_size;66,1945
	uint32_t code;67,1963
	uint32_t range;68,1979
	uint32_t bound;69,1996
#define RC_TOP_BITS 73,2018
#define RC_MOVE_BITS 74,2041
#define RC_MODEL_TOTAL_BITS 75,2064
static int nofill(78,2097
static void INIT rc_read(84,2227
static inline void INIT rc_init(94,2481
static inline void INIT rc_init_code(111,2863
static inline void INIT rc_free(124,3093
static void INIT rc_do_normalize(130,3237
static inline void INIT rc_normalize(137,3396
static inline uint32_t INIT rc_is_bit_0_helper(147,3643
static inline int INIT rc_is_bit_0(153,3814
static inline void INIT rc_update_bit_0(160,3998
static inline void rc_update_bit_1(165,4152
static int INIT rc_get_bit(173,4332
static inline int INIT rc_direct_bit(187,4584
rc_bit_tree_decode(200,4802
struct lzma_header 220,5223
	uint8_t pos;221,5244
	uint32_t dict_size;222,5258
	uint64_t dst_size;223,5279
#define LZMA_BASE_SIZE 227,5330
#define LZMA_LIT_SIZE 228,5358
#define LZMA_NUM_POS_BITS_MAX 230,5385
#define LZMA_LEN_NUM_LOW_BITS 232,5418
#define LZMA_LEN_NUM_MID_BITS 233,5450
#define LZMA_LEN_NUM_HIGH_BITS 234,5482
#define LZMA_LEN_CHOICE 236,5516
#define LZMA_LEN_CHOICE_2 237,5542
#define LZMA_LEN_LOW 238,5590
#define LZMA_LEN_MID 239,5635
#define LZMA_LEN_HIGH 241,5738
#define LZMA_NUM_LEN_PROBS 243,5842
#define LZMA_NUM_STATES 245,5918
#define LZMA_NUM_LIT_STATES 246,5945
#define LZMA_START_POS_MODEL_INDEX 248,5976
#define LZMA_END_POS_MODEL_INDEX 249,6013
#define LZMA_NUM_FULL_DISTANCES 250,6049
#define LZMA_NUM_POS_SLOT_BITS 252,6121
#define LZMA_NUM_LEN_TO_POS_STATES 253,6154
#define LZMA_NUM_ALIGN_BITS 255,6192
#define LZMA_MATCH_MIN_LEN 257,6223
#define LZMA_IS_MATCH 259,6253
#define LZMA_IS_REP 260,6277
#define LZMA_IS_REP_G0 261,6358
#define LZMA_IS_REP_G1 262,6413
#define LZMA_IS_REP_G2 263,6471
#define LZMA_IS_REP_0_LONG 264,6529
#define LZMA_POS_SLOT 265,6591
#define LZMA_SPEC_POS 267,6690
#define LZMA_ALIGN 269,6795
#define LZMA_LEN_CODER 271,6891
#define LZMA_REP_LEN_CODER 272,6956
#define LZMA_LITERAL 273,7021
struct writer 276,7086
	uint8_t *buffer;buffer277,7102
	uint8_t previous_byte;278,7120
	size_t buffer_pos;279,7144
	int bufsize;280,7164
	size_t global_pos;281,7178
	int(*flush)flush282,7198
	struct lzma_header *header;header283,7233
struct cstate 286,7266
	int state;287,7282
	uint32_t rep0,288,7294
	uint32_t rep0, rep1,288,7294
	uint32_t rep0, rep1, rep2,288,7294
	uint32_t rep0, rep1, rep2, rep3;288,7294
static inline size_t INIT get_pos(291,7332
static inline uint8_t INIT peek_old_byte(297,7433
static inline void INIT write_byte(315,7835
static inline void INIT copy_byte(326,8152
static inline void INIT copy_bytes(331,8267
static inline void INIT process_bit0(340,8456
static inline void INIT process_bit1(383,9420
STATIC int INIT unlzma(527,12977

xen/common/decompress.h,171
#define STATIC9,170
#define INIT 10,185
#define set_error_fn(13,252
#define malloc 15,288
#define free 16,317
#define large_malloc 18,337
#define large_free 19,372

xen/common/tmem.c,10999
#define EXPORT 26,681
#define FORWARD27,750
#define TMEM_SPEC_VERSION 29,767
#define CLI_ID_NULL 33,870
#define cli_id_str 34,906
#define client_str 35,941
#define SENTINELS40,1066
#define NOINLINE 41,1084
#define NOINLINE43,1116
#define DECL_SENTINEL 47,1158
#define SET_SENTINEL(48,1204
#define INVERT_SENTINEL(49,1261
#define ASSERT_SENTINEL(50,1322
#define POOL_SENTINEL 53,1452
#define OBJ_SENTINEL 54,1485
#define OBJNODE_SENTINEL 55,1517
#define PGD_SENTINEL 56,1553
#define POOL_SENTINEL 58,1592
#define OBJ_SENTINEL 59,1633
#define OBJNODE_SENTINEL 60,1673
#define PGD_SENTINEL 61,1717
#define DECL_SENTINEL64,1771
#define SET_SENTINEL(65,1793
#define ASSERT_SENTINEL(66,1838
#define INVERT_SENTINEL(67,1886
static unsigned long total_tmem_ops 71,1991
static unsigned long errored_tmem_ops 72,2032
static unsigned long total_flush_pool 73,2075
static unsigned long alloc_failed 74,2118
static unsigned long evicted_pgs 75,2180
static unsigned long relinq_pgs 76,2238
static unsigned long max_evicts_per_relinq 77,2296
static unsigned long low_on_memory 78,2344
static unsigned long deduped_puts 79,2384
static unsigned long tot_good_eph_puts 80,2423
static int global_obj_count_max 81,2467
static int global_pgp_count_max 82,2504
static int global_pcd_count_max 83,2541
static int global_page_count_max 84,2578
static int global_rtree_node_count_max 85,2616
static long global_eph_count_max 86,2660
static unsigned long failed_copies;87,2698
static unsigned long pcd_tot_tze_size 88,2734
static unsigned long pcd_tot_csize 89,2777
#define MAX_POOLS_PER_DOMAIN 110,3317
#define MAX_GLOBAL_SHARED_POOLS 111,3349
struct client 116,3468
    struct list_head client_list;117,3484
    struct tm_pool *pools[pools118,3518
    tmh_client_t *tmh;tmh119,3567
    struct list_head ephemeral_page_list;120,3590
    long eph_count,121,3632
    long eph_count, eph_count_max;121,3632
    cli_id_t cli_id;122,3667
    uint32_t weight;123,3688
    uint32_t cap;124,3709
    bool_t compress;125,3727
    bool_t frozen;126,3748
    bool_t shared_auth_required;127,3767
    bool_t live_migrating;129,3837
    bool_t was_frozen;130,3864
    struct list_head persistent_invalidated_list;131,3887
    struct tmem_page_descriptor *cur_pgp;cur_pgp132,3937
    unsigned long compress_poor,134,4011
    unsigned long compress_poor, compress_nomem;134,4011
    unsigned long compressed_pages;135,4060
    uint64_t compressed_sum_size;136,4096
    uint64_t total_cycles;137,4130
    unsigned long succ_pers_puts,138,4157
    unsigned long succ_pers_puts, succ_eph_gets,138,4157
    unsigned long succ_pers_puts, succ_eph_gets, succ_pers_gets;138,4157
    uint64_t shared_auth_uuid[shared_auth_uuid140,4259
typedef struct client client_t;142,4321
struct share_list 144,4354
    struct list_head share_list;145,4374
    client_t *client;client146,4407
typedef struct share_list sharelist_t;148,4432
#define OBJ_HASH_BUCKETS 150,4472
#define OBJ_HASH_BUCKETS_MASK 151,4528
struct tm_pool 153,4580
    bool_t shared;154,4597
    bool_t persistent;155,4616
    bool_t is_dying;156,4639
    int pageshift;157,4660
    struct list_head pool_list;158,4696
    client_t *client;client159,4728
    uint64_t uuid[uuid160,4750
    uint32_t pool_id;161,4813
    rwlock_t pool_rwlock;162,4835
    struct rb_root obj_rb_root[obj_rb_root163,4861
    struct list_head share_list;164,4942
    int shared_count;165,4997
    struct list_head persistent_page_list;167,5078
    struct tmem_page_descriptor *cur_pgp;cur_pgp168,5121
    atomic_t pgp_count;170,5195
    int pgp_count_max;171,5219
    long obj_count;172,5242
    long obj_count_max;173,5317
    unsigned long objnode_count,174,5343
    unsigned long objnode_count, objnode_count_max;174,5343
    uint64_t sum_life_cycles;175,5395
    uint64_t sum_evicted_cycles;176,5425
    unsigned long puts,177,5458
    unsigned long puts, good_puts,177,5458
    unsigned long puts, good_puts, no_mem_puts;177,5458
    unsigned long dup_puts_flushed,178,5506
    unsigned long dup_puts_flushed, dup_puts_replaced;178,5506
    unsigned long gets,179,5561
    unsigned long gets, found_gets;179,5561
    unsigned long flushs,180,5597
    unsigned long flushs, flushs_found;180,5597
    unsigned long flush_objs,181,5637
    unsigned long flush_objs, flush_objs_found;181,5637
    DECL_SENTINEL182,5685
typedef struct tm_pool pool_t;184,5706
#define is_persistent(186,5738
#define is_ephemeral(187,5782
#define is_shared(188,5829
#define is_private(189,5869
struct oid 191,5913
    uint64_t oid[oid192,5926
typedef struct oid OID;194,5950
struct tmem_object_root 196,5975
    OID oid;198,6019
    struct rb_node rb_tree_node;199,6032
    unsigned long objnode_count;200,6102
    long pgp_count;201,6175
    struct radix_tree_root tree_root;202,6235
    pool_t *pool;pool203,6307
    cli_id_t last_client;204,6325
    spinlock_t obj_spinlock;205,6351
    bool_t no_evict;206,6380
typedef struct tmem_object_root obj_t;208,6460
typedef struct radix_tree_node rtn_t;210,6500
struct tmem_object_node 211,6538
    obj_t *obj;obj212,6564
    rtn_t rtn;214,6598
typedef struct tmem_object_node objnode_t;216,6616
struct tmem_page_descriptor 218,6660
        struct list_head global_eph_pages;220,6702
        struct list_head client_inv_pages;221,6745
                struct list_head client_eph_pages;226,6844
                struct list_head pool_pers_pages;227,6895
            obj_t *obj;obj229,6960
        } us;230,6984
        OID inv_oid;231,6998
    pagesize_t size;233,7060
    uint32_t index;235,7178
    uint16_t firstbyte;237,7274
    bool_t eviction_attempted;238,7339
    struct list_head pcd_siblings;239,7409
        pfp_t *pfp;pfp241,7456
        char *cdata;cdata242,7502
        struct tmem_page_content_descriptor *pcd;pcd243,7545
        uint64_t timestamp;246,7631
        uint32_t pool_id;247,7659
    DECL_SENTINEL249,7726
typedef struct tmem_page_descriptor pgp_t;251,7747
#define PCD_TZE_MAX_SIZE 253,7791
struct tmem_page_content_descriptor 255,7846
        pfp_t *pfp;pfp257,7896
        char *cdata;cdata258,7942
        char *tze;tze259,7992
    struct list_head pgp_list;261,8076
    struct rb_node pcd_rb_tree_node;262,8107
    uint32_t pgp_ref_count;263,8144
    pagesize_t size;264,8172
typedef struct tmem_page_content_descriptor pcd_t;268,8379
struct rb_root pcd_tree_roots[pcd_tree_roots269,8430
rwlock_t pcd_tree_rwlocks[pcd_tree_rwlocks270,8507
static pool_t *global_shared_pools[global_shared_pools277,8734
static bool_t global_shared_auth 278,8803
static atomic_t client_weight_total 279,8841
static int tmem_initialized 280,8895
#define tmem_spin_lock(289,9267
#define tmem_spin_unlock(290,9342
#define tmem_read_lock(291,9421
#define tmem_read_unlock(292,9496
#define tmem_write_lock(293,9575
#define tmem_write_unlock(294,9652
#define tmem_write_trylock(295,9733
#define tmem_spin_trylock(296,9802
#define ASSERT_SPINLOCK(298,9868
#define ASSERT_WRITELOCK(299,9939
static long global_eph_count 302,10072
static atomic_t global_obj_count 303,10152
static atomic_t global_pgp_count 304,10203
static atomic_t global_pcd_count 305,10254
static atomic_t global_page_count 306,10305
static atomic_t global_rtree_node_count 307,10357
#define atomic_inc_and_max(309,10416
#define atomic_dec_and_assert(315,10570
#define tmem_malloc(323,10759
#define tmem_malloc_bytes(326,10857
static NOINLINE void *_tmem_malloc(_tmem_malloc329,10936
static NOINLINE void tmem_free(342,11255
static NOINLINE pfp_t *tmem_page_alloc(tmem_page_alloc350,11466
static NOINLINE void tmem_page_free(365,11811
#define NOT_SHAREABLE 377,12142
static NOINLINE int pcd_copy_to_client(379,12182
static NOINLINE void pcd_disassociate(401,13018
static NOINLINE int pcd_associate(464,14986
static NOINLINE pgp_t *pgp_alloc(pgp_alloc601,19649
static pgp_t *pgp_lookup_in_obj(pgp_lookup_in_obj630,20386
static NOINLINE void pgp_free_data(640,20669
static NOINLINE void pgp_free(661,21259
static NOINLINE void pgp_free_from_inv_list(695,22273
static void pgp_delist(708,22649
static NOINLINE void pgp_delete(749,24094
static NOINLINE void pgp_destroy(763,24476
static int pgp_add_to_obj(778,24837
static NOINLINE pgp_t *pgp_delete_from_obj(pgp_delete_from_obj789,25095
static NOINLINE rtn_t *rtn_alloc(rtn_alloc809,25640
static void rtn_free(831,26334
int oid_compare(858,27138
void oid_set_invalid(882,27696
unsigned oid_hash(887,27788
static NOINLINE obj_t * obj_find(894,28020
static NOINLINE void obj_free(932,29102
static NOINLINE int obj_rb_insert(963,30148
static NOINLINE obj_t * obj_new(994,30928
static NOINLINE void obj_destroy(1022,31778
static void pool_destroy_objs(1030,32067
static pool_t * pool_alloc(1062,33027
static NOINLINE void pool_free(1090,33978
static int shared_pool_join(1101,34282
static NOINLINE void shared_pool_reassign(1117,34873
static NOINLINE int shared_pool_quit(1148,36067
static void pool_flush(1183,37167
static client_t *client_create(client_create1212,38185
static void client_free(1261,39742
static void client_flush(1269,39950
static bool_t client_over_quota(1286,40332
static void client_freeze(1298,40683
static bool_t tmem_try_to_evict_pgp(1305,40848
static int tmem_evict(1351,42324
static unsigned long tmem_relinquish_npages(1415,44102
static inline void tmem_ensure_avail_pages(1434,44716
static NOINLINE int do_tmem_put_compress(1449,45022
static NOINLINE int do_tmem_dup_put(1495,46363
static NOINLINE int do_tmem_put(1585,48961
static NOINLINE int do_tmem_get(1729,53322
static NOINLINE int do_tmem_flush_page(1814,55945
static NOINLINE int do_tmem_flush_object(1849,56709
static NOINLINE int do_tmem_destroy_pool(1869,57121
static NOINLINE int do_tmem_new_pool(1883,57462
static int tmemc_freeze_pools(2018,62079
static int tmemc_flush_mem(2042,62796
#define BSIZE 2068,63795
static int tmemc_list_client(2070,63815
static int tmemc_list_shared(2123,65954
static int tmemc_list_global_perf(2163,67508
#define tmemc_list_global_perf(2195,68785
static int tmemc_list_global(2198,68849
static int tmemc_list(2230,70215
static int tmemc_set_var_one(2251,70914
static int tmemc_set_var(2291,72163
static NOINLINE int tmemc_shared_pool_auth(2305,72572
static NOINLINE int tmemc_save_subop(2342,73696
static NOINLINE int tmemc_save_get_next_page(2423,76275
static NOINLINE int tmemc_save_get_next_inv(2474,77939
static int tmemc_restore_put_page(2515,79186
static int tmemc_restore_flush_page(2527,79619
static NOINLINE int do_tmem_control(2539,80006
EXPORT long do_tmem_op(2612,82460
EXPORT void tmem_destroy(2815,88561
EXPORT void tmem_freeze_all(2844,89231
#define MAX_EVICTS 2862,89588
EXPORT void *tmem_relinquish_pages(tmem_relinquish_pages2864,89658
EXPORT unsigned long tmem_freeable_pages(2916,90821
static int __init init_tmem(2922,90941

xen/common/sched_sedf.c,4039
#define SEDFLEVEL 17,435
#define PRINT(18,455
#define SEDF_CPUONLINE(24,674
#define SEDF_STATS28,833
#define CHECK(29,852
#define CHECK(36,1186
#define EXTRA_NONE 39,1222
#define EXTRA_AWARE 40,1245
#define EXTRA_RUN_PEN 41,1269
#define EXTRA_RUN_UTIL 42,1295
#define EXTRA_WANT_PEN_Q 43,1322
#define EXTRA_PEN_Q 44,1351
#define EXTRA_UTIL_Q 45,1375
#define SEDF_ASLEEP 46,1400
#define EXTRA_QUANTUM 48,1426
#define WEIGHT_PERIOD 49,1466
#define WEIGHT_SAFETY 50,1505
#define PERIOD_MAX 52,1543
#define PERIOD_MIN 53,1590
#define SLICE_MIN 54,1637
#define IMPLY(56,1685
#define EQ(57,1719
struct sedf_dom_info 60,1759
    struct domain  *domain;domain61,1782
struct sedf_vcpu_info 64,1814
    struct vcpu *vcpu;vcpu65,1838
    struct list_head list;66,1861
    struct list_head extralist[extralist67,1888
    s_time_t  period;70,1952
    s_time_t  slice;71,2000
    s_time_t  period_orig;75,2106
    s_time_t  slice_orig;76,2133
    s_time_t  latency;77,2159
    int       status;80,2209
    short     weight;82,2293
    short     extraweight;83,2315
    s_time_t  deadl_abs;85,2362
    s_time_t  sched_start_abs;86,2387
    s_time_t  cputime;87,2418
    s_time_t  block_abs;89,2480
    s_time_t  unblock_abs;90,2505
    int   score[score93,2607
    s_time_t  short_block_lost_tot;94,2627
    s_time_t  extra_time_tot;97,2684
    s_time_t  block_time_tot;100,2733
    s_time_t  penalty_time_tot;101,2763
    int   block_tot;102,2795
    int   short_block_tot;103,2816
    int   long_block_tot;104,2843
    int   short_cont;105,2869
    int   pen_extra_blocks;106,2891
    int   pen_extra_slices;107,2919
struct sedf_cpu_info 111,2958
    struct list_head runnableq;112,2981
    struct list_head waitq;113,3013
    struct list_head extraq[extraq114,3041
    s_time_t         current_slice_expires;115,3073
#define EDOM_INFO(118,3121
#define CPU_INFO(119,3189
#define LIST(121,3283
#define EXTRALIST(122,3328
#define RUNQ(123,3383
#define WAITQ(124,3434
#define EXTRAQ(125,3481
#define IDLETASK(126,3534
#define PERIOD_BEGIN(128,3575
#define DIV_UP(130,3637
#define extra_runs(132,3680
#define extra_get_cur_q(133,3729
#define sedf_runnable(134,3787
static inline int extraq_on(139,3931
static inline void extraq_add_head(145,4088
static inline void extraq_add_tail(151,4234
static inline void extraq_del(157,4385
static inline void extraq_add_sort_update(174,5085
static inline void extraq_check(220,6674
static inline void extraq_check_add_unblocked(250,7533
static inline int __task_on_queue(259,7821
static inline void __del_from_queue(264,7946
typedef int(*list_comparer)list_comparer275,8294
static inline void list_insert_sort(277,8370
#define DOMAIN_COMPARER(292,8814
static inline void __add_to_waitqueue_sort(311,9959
static inline void __add_to_runqueue_sort(326,10660
static void *sedf_alloc_vdata(sedf_alloc_vdata334,10920
sedf_alloc_pdata(383,12107
sedf_free_pdata(399,12501
static void sedf_free_vdata(407,12627
sedf_alloc_domdata(413,12732
static int sedf_init_domain(426,12972
static void sedf_free_domdata(435,13172
static void sedf_destroy_domain(440,13265
static int sedf_pick_cpu(445,13392
static void desched_edf_dom(459,13769
static void update_queues(525,15621
static void desched_extra_dom(627,19306
static struct task_slice sedf_do_extra_schedule(729,23018
static struct task_slice sedf_do_schedule(787,24766
static void sedf_sleep(882,27939
static void unblock_short_extra_support(979,31884
static void unblock_long_cons_b(1030,33654
#define DOMAIN_EDF 1039,33881
#define DOMAIN_EXTRA_PEN 1040,33904
#define DOMAIN_EXTRA_UTIL 1041,33932
#define DOMAIN_IDLE 1042,33961
static inline int get_run_type(1043,33985
static inline int should_switch(1065,34746
static void sedf_wake(1101,35921
static void sedf_dump_domain(1220,39338
static void sedf_dump_cpu_state(1255,40956
static int sedf_adjust_weights(1328,43290
static int sedf_adjust(1406,45650
const struct scheduler sched_sedf_def 1493,48751

xen/common/sort.c,80
static void u32_swap(9,150
static void generic_swap(16,273
void sort(44,1055

xen/common/sched_credit2.c,5876
#define PRI_stime 30,754
#define PRI_stime 32,784
#define d2printk(35,815
#define TRC_CSCHED2_TICK 38,865
#define TRC_CSCHED2_RUNQ_POS 39,917
#define TRC_CSCHED2_CREDIT_BURN 40,969
#define TRC_CSCHED2_CREDIT_ADD 41,1021
#define TRC_CSCHED2_TICKLE_CHECK 42,1073
#define TRC_CSCHED2_TICKLE 43,1126
#define TRC_CSCHED2_CREDIT_RESET 44,1179
#define TRC_CSCHED2_SCHED_TASKLET 45,1232
#define TRC_CSCHED2_UPDATE_LOAD 46,1286
#define TRC_CSCHED2_RUNQ_ASSIGN 47,1340
#define TRC_CSCHED2_UPDATE_VCPU_LOAD 48,1395
#define TRC_CSCHED2_UPDATE_RUNQ_LOAD 49,1455
#define CSCHED_DEFAULT_WEIGHT 113,3804
#define CSCHED_MIN_TIMER 116,3922
#define CSCHED_CREDIT_INIT 120,4116
#define CSCHED_CARRYOVER_MAX 123,4245
#define CSCHED_MIGRATE_RESIST 126,4382
#define CSCHED_MIGRATE_COMPENSATION 128,4509
#define CSCHED_CREDIT_RESET 130,4612
#define CSCHED_MAX_TIMER 132,4704
#define CSCHED_IDLE_CREDIT 135,4755
#define __CSFLAG_scheduled 149,5251
#define CSFLAG_scheduled 150,5280
#define __CSFLAG_delayed_runq_add 158,5678
#define CSFLAG_delayed_runq_add 159,5714
#define __CSFLAG_runq_migrate_request 164,5961
#define CSFLAG_runq_migrate_request 165,6001
int opt_migrate_resist=168,6074
#define CSCHED_PRIV(174,6194
#define CSCHED_VCPU(176,6276
#define CSCHED_DOM(177,6349
#define CSCHED_CPUONLINE(178,6420
#define c2r(181,6551
#define RQD(183,6652
#define LOADAVG_GRANULARITY_SHIFT 192,7041
int opt_load_window_shift=193,7080
#define  LOADAVG_WINDOW_SHIFT_MIN 194,7110
int opt_underload_balance_tolerance=196,7213
int opt_overload_balance_tolerance=198,7325
struct csched_runqueue_data 204,7464
    int id;205,7494
    spinlock_t lock;207,7507
    cpumask_t active;208,7563
    struct list_head runq;210,7628
    struct list_head svc;211,7690
    int max_weight;212,7767
    cpumask_t idle,214,7788
        tickled;215,7836
    int load;216,7927
    s_time_t load_last_update;217,8020
    s_time_t avgload;218,8088
    s_time_t b_avgload;219,8146
struct csched_private 225,8265
    spinlock_t lock;226,8289
    cpumask_t initialized;227,8310
    struct list_head sdom;229,8381
    int runq_map[runq_map231,8448
    cpumask_t active_queues;232,8475
    struct csched_runqueue_data rqd[rqd233,8544
    int load_window_shift;235,8591
struct csched_vcpu 241,8644
    struct list_head rqd_elem;242,8665
    struct list_head sdom_elem;243,8729
    struct list_head runq_elem;244,8791
    struct csched_runqueue_data *rqd;rqd245,8853
    struct csched_dom *sdom;sdom248,8947
    struct vcpu *vcpu;vcpu249,8976
    int weight;251,9000
    int credit;253,9017
    s_time_t start_time;254,9033
    unsigned flags;255,9105
    s_time_t load_last_update;258,9230
    s_time_t avgload;259,9298
    struct csched_runqueue_data *migrate_rqd;migrate_rqd261,9357
struct csched_dom 267,9469
    struct list_head vcpu;268,9489
    struct list_head sdom_elem;269,9516
    struct domain *dom;dom270,9548
    uint16_t weight;271,9572
    uint16_t nr_vcpus;272,9593
static s_time_t t2c(280,9701
static s_time_t c2t(285,9849
__vcpu_on_runq(295,10056
__runq_elem(301,10181
__update_runq_load(307,10294
            unsigned rq_load:rq_load337,11365
            unsigned rq_load:4, rq_avgload:rq_avgload337,11365
            unsigned rq_id:rq_id338,11412
            unsigned rq_id:4, b_avgload:b_avgload338,11412
__update_svc_load(351,11741
            unsigned dom:dom383,12649
            unsigned dom:16,vcpu:vcpu383,12649
            unsigned v_avgload:v_avgload384,12686
update_load(396,12994
__runq_insert(406,13272
runq_insert(442,14148
            unsigned dom:dom456,14537
            unsigned dom:16,vcpu:vcpu456,14537
            unsigned pos;457,14574
__runq_remove(471,14870
runq_tickle(482,15224
                unsigned dom:dom547,16963
                unsigned dom:16,vcpu:vcpu547,16963
                unsigned credit;548,17004
            unsigned cpu:cpu569,17603
static void reset_credit(586,17919
                unsigned dom:dom611,18640
                unsigned dom:16,vcpu:vcpu611,18640
                unsigned credit_start,612,18681
                unsigned credit_start, credit_end;612,18681
void burn_credits(627,19149
            unsigned dom:dom659,20039
            unsigned dom:16,vcpu:vcpu659,20039
            unsigned credit;660,20076
            int delta;661,20105
void update_max_weight(674,20452
__csched_vcpu_check(707,21528
#define CSCHED_VCPU_CHECK(724,21914
#define CSCHED_VCPU_CHECK(726,21979
csched_alloc_vdata(730,22032
__runq_assign(770,23000
            unsigned dom:dom784,23328
            unsigned dom:16,vcpu:vcpu784,23328
            unsigned rqi:rqi785,23365
runq_assign(798,23650
__runq_deassign(808,23852
runq_deassign(822,24148
csched_vcpu_insert(832,24348
csched_free_vdata(863,25141
csched_vcpu_remove(871,25270
csched_vcpu_sleep(897,25921
csched_vcpu_wake(916,26515
csched_context_saved(969,27957
#define MAX_LOAD 1003,29046
choose_cpu(1005,29086
static void balance_load(1111,32428
csched_cpu_pick(1342,39290
csched_dom_cntl(1371,40395
csched_alloc_domdata(1427,42030
csched_dom_init(1454,42685
csched_free_domdata(1473,43053
csched_dom_destroy(1488,43355
csched_runtime(1499,43626
runq_candidate(1541,44605
csched_schedule(1582,45809
csched_dump_vcpu(1714,49808
csched_dump_pcpu(1728,50125
csched_dump(1765,50996
static void activate_runqueue(1818,52492
static void deactivate_runqueue(1835,52847
static void init_pcpu(1848,53089
csched_alloc_pdata(1914,54674
csched_free_pdata(1928,55062
csched_cpu_starting(1970,56019
static int cpu_credit2_callback(1982,56238
static struct notifier_block cpu_credit2_nfb 2000,56594
csched_init(2005,56700
csched_deinit(2052,58098
static struct csched_private _csched_priv;2062,58251
const struct scheduler sched_credit2_def 2064,58295

xen/common/inflate.c,1967
#define DEBG(1,0
#define DEBG1(2,16
static char rcsid[rcsid107,5801
#define STATIC118,6029
#define INIT122,6079
#define slide 125,6101
struct huft 134,6581
    uch e;135,6595
    uch b;136,6661
        ush n;138,6744
        struct huft *t;t139,6817
    } v;140,6882
#define wp 165,7970
#define flush_output(166,7988
static const unsigned border[border169,8088
static const ush cplens[cplens171,8240
static const ush cplext[cplext175,8513
static const ush cpdist[cpdist178,8717
static const ush cpdext[cpdext182,8954
STATIC ulg bb;219,10497
STATIC unsigned bk;220,10553
STATIC const ush mask_bits[mask_bits222,10618
#define NEXTBYTE(228,10802
#define NEEDBITS(229,10882
#define DUMPBITS(230,10948
static unsigned long malloc_ptr;237,11129
static int malloc_count;238,11162
static void *malloc(malloc240,11188
static void free(261,11580
#define malloc(268,11698
#define free(269,11739
STATIC const int lbits 305,13611
STATIC const int dbits 306,13695
#define BMAX 310,13847
#define N_MAX 311,13925
STATIC unsigned hufts;314,13992
STATIC int INIT huft_build(317,14050
        unsigned c[c348,15938
        struct huft *u[u349,16005
        unsigned v[v350,16061
        unsigned x[x351,16135
STATIC int INIT huft_free(562,23051
STATIC int INIT inflate_codes(584,23550
STATIC int INIT inflate_stored(699,27730
STATIC int noinline INIT inflate_fixed(760,29234
STATIC int noinline INIT inflate_dynamic(824,30885
ret 1017,36038
ret 1023,36085
goto out;1024,36117
STATIC int INIT inflate_block(1029,36132
STATIC int INIT inflate(1080,36960
static ulg crc_32_tab[crc_32_tab1132,38104
static ulg crc;1133,38132
#define CRC_VALUE 1134,38203
makecrc(1142,38345
#define ASCII_FLAG 1178,39350
#define CONTINUATION 1179,39418
#define EXTRA_FIELD 1180,39498
#define ORIG_NAME 1181,39561
#define COMMENT 1182,39631
#define ENCRYPTED 1183,39695
#define RESERVED 1184,39756
static int INIT gunzip(1189,39841

xen/common/sched_credit.c,4216
#define CSCHED_STATS35,878
#define CSCHED_DEFAULT_WEIGHT 42,934
#define CSCHED_TICKS_PER_TSLICE 43,974
#define CSCHED_TICKS_PER_ACCT 44,1012
#define CSCHED_MSECS_PER_TICK 45,1050
#define CSCHED_MSECS_PER_TSLICE 46,1089
#define CSCHED_CREDITS_PER_MSEC 48,1181
#define CSCHED_CREDITS_PER_TSLICE 49,1220
#define CSCHED_CREDITS_PER_ACCT 51,1314
#define CSCHED_PRI_TS_BOOST 58,1453
#define CSCHED_PRI_TS_UNDER 59,1520
#define CSCHED_PRI_TS_OVER 60,1588
#define CSCHED_PRI_IDLE 61,1657
#define CSCHED_FLAG_VCPU_PARKED 67,1726
#define CSCHED_FLAG_VCPU_YIELD 68,1800
#define CSCHED_PRIV(74,1889
#define CSCHED_PCPU(76,1971
#define CSCHED_VCPU(78,2067
#define CSCHED_DOM(79,2140
#define RUNQ(80,2211
#define CSCHED_CPUONLINE(81,2268
#define CSCHED_STAT_CRANK(88,2390
#define CSCHED_VCPU_STATS_RESET(92,2473
#define CSCHED_VCPU_STAT_CRANK(98,2724
#define CSCHED_VCPU_STAT_SET(100,2790
#define CSCHED_VCPU_STATS_RESET(104,2887
#define CSCHED_VCPU_STAT_CRANK(105,2949
#define CSCHED_VCPU_STAT_SET(106,3011
static bool_t __read_mostly sched_credit_default_yield;114,3128
struct csched_pcpu 120,3281
    struct list_head runq;121,3302
    uint32_t runq_sort_last;122,3329
    struct timer ticker;123,3358
    unsigned int tick;124,3383
    unsigned int idle_bias;125,3406
struct csched_vcpu 131,3460
    struct list_head runq_elem;132,3481
    struct list_head active_vcpu_elem;133,3513
    struct csched_dom *sdom;sdom134,3552
    struct vcpu *vcpu;vcpu135,3581
    atomic_t credit;136,3604
    s_time_t start_time;137,3625
    uint16_t flags;138,3699
    int16_t pri;139,3719
        int credit_last;142,3769
        uint32_t credit_incr;143,3794
        uint32_t state_active;144,3824
        uint32_t state_idle;145,3855
        uint32_t migrate_q;146,3884
        uint32_t migrate_r;147,3912
    } stats;148,3940
struct csched_dom 155,3981
    struct list_head active_vcpu;156,4001
    struct list_head active_sdom_elem;157,4035
    struct domain *dom;dom158,4074
    uint16_t active_vcpu_count;159,4098
    uint16_t weight;160,4130
    uint16_t cap;161,4151
struct csched_private 167,4208
    spinlock_t lock;168,4232
    struct list_head active_sdom;169,4253
    uint32_t ncpus;170,4287
    struct timer  master_ticker;171,4307
    unsigned int master;172,4340
    cpumask_t idlers;173,4365
    cpumask_t cpus;174,4387
    uint32_t weight;175,4407
    uint32_t credit;176,4428
    int credit_balance;177,4449
    uint32_t runq_sort;178,4473
__vcpu_on_runq(185,4595
__runq_elem(191,4716
__runq_insert(197,4836
__runq_remove(228,5684
static void burn_credits(234,5800
static bool_t __read_mostly opt_tickle_one_idle 250,6288
__runq_tickle(256,6468
csched_free_pdata(318,8383
csched_alloc_pdata(348,9120
__csched_vcpu_check(394,10465
#define CSCHED_VCPU_CHECK(413,10887
#define CSCHED_VCPU_CHECK(415,10952
static unsigned int vcpu_migration_delay;424,11237
void set_vcpu_migration_delay(427,11341
unsigned int get_vcpu_migration_delay(432,11430
__csched_vcpu_is_cache_hot(438,11530
__csched_vcpu_is_migrateable(450,11768
_csched_cpu_pick(462,12128
csched_cpu_pick(548,15135
__csched_vcpu_acct_start(554,15262
__csched_vcpu_acct_stop_locked(580,15990
csched_vcpu_acct(601,16531
csched_alloc_vdata(645,17867
csched_vcpu_insert(669,18490
csched_free_vdata(678,18734
csched_vcpu_remove(688,18908
csched_vcpu_sleep(712,19532
csched_vcpu_wake(727,19921
csched_vcpu_yield(782,21582
csched_dom_cntl(794,21883
csched_alloc_domdata(834,22910
csched_dom_init(855,23413
csched_free_domdata(874,23744
csched_dom_destroy(880,23839
csched_runq_sort(894,24278
csched_acct(937,25279
csched_tick(1146,32210
csched_runq_steal(1173,32947
csched_load_balance(1220,34354
csched_schedule(1291,36302
csched_dump_vcpu(1382,38798
csched_dump_pcpu(1411,39543
#define cpustr 1417,39707
#undef cpustr1445,40418
csched_dump(1449,40447
#define idlers_buf 1454,40599
#undef idlers_buf1501,42108
csched_init(1505,42140
csched_deinit(1523,42490
static void csched_tick_suspend(1532,42642
static void csched_tick_resume(1541,42815
static struct csched_private _csched_priv;1552,43106
const struct scheduler sched_credit_def 1554,43150

xen/common/xmalloc_tlsf.c,2550
#define MAX_POOL_NAME_LEN 31,992
#define MEM_ALIGN 34,1065
#define MEM_ALIGN_MASK 35,1110
#define MAX_FLI 37,1154
#define MAX_LOG2_SLI 38,1183
#define MAX_SLI 39,1211
#define FLI_OFFSET 41,1256
#define SMALL_BLOCK 43,1351
#define REAL_FLI 44,1381
#define MIN_BLOCK_SIZE 45,1428
#define BHDR_OVERHEAD 46,1478
#define PTR_MASK 48,1542
#define BLOCK_SIZE_MASK 49,1587
#define GET_NEXT_BLOCK(51,1636
#define ROUNDUP_SIZE(53,1743
#define ROUNDDOWN_SIZE(54,1816
#define ROUNDUP_PAGE(55,1871
#define BLOCK_STATE 57,1940
#define PREV_STATE 58,1970
#define FREE_BLOCK 61,2031
#define USED_BLOCK 62,2061
#define PREV_FREE 65,2122
#define PREV_USED 66,2152
static spinlock_t pool_list_lock;68,2183
static struct list_head pool_list_head;69,2217
struct free_ptr 71,2258
    struct bhdr *prev;prev72,2276
    struct bhdr *next;next73,2299
struct bhdr 76,2326
    struct bhdr *prev_hdr;prev_hdr78,2413
    u32 size;84,2573
        struct free_ptr free_ptr;87,2656
        u8 buffer[buffer88,2690
    } ptr;89,2734
struct xmem_pool 92,2749
    u32 fl_bitmap;94,2813
    u32 sl_bitmap[sl_bitmap97,2863
    struct bhdr *matrix[matrix100,2914
    spinlock_t lock;102,2959
    unsigned long init_size;104,2981
    unsigned long max_size;105,3010
    unsigned long grow_size;106,3038
    unsigned long used_size;109,3090
    unsigned long num_regions;110,3119
    xmem_pool_get_memory *get_mem;get_mem113,3214
    xmem_pool_put_memory *put_mem;put_mem114,3249
    struct list_head list;116,3285
    void *init_region;init_region118,3313
    char name[name119,3336
static inline void MAPPING_SEARCH(129,3483
static inline void MAPPING_INSERT(157,4153
static inline struct bhdr *FIND_SUITABLE_BLOCK(FIND_SUITABLE_BLOCK176,4580
static inline void EXTRACT_BLOCK_HDR(203,5184
static inline void EXTRACT_BLOCK(223,5713
static inline void INSERT_BLOCK(248,6465
static inline void ADD_REGION(262,6896
struct xmem_pool *xmem_pool_create(xmem_pool_create286,7665
unsigned long xmem_pool_get_used_size(334,8965
unsigned long xmem_pool_get_total_size(339,9060
void xmem_pool_destroy(348,9290
void *xmem_pool_alloc(xmem_pool_alloc377,10116
void xmem_pool_free(455,12305
int xmem_pool_maxalloc(505,13777
static struct xmem_pool *xenpool;xenpool514,13910
static void *xmalloc_pool_get(xmalloc_pool_get516,13945
static void xmalloc_pool_put(522,14064
static void *xmalloc_whole_pages(xmalloc_whole_pages527,14133
static void tlsf_init(540,14452
void *_xmalloc(_xmalloc554,14723
void xfree(588,15472

xen/common/softirq.c,370
irq_cpustat_t irq_stat[irq_stat21,555
static softirq_handler softirq_handlers[softirq_handlers24,596
static void __do_softirq(26,651
void process_pending_softirqs(52,1275
asmlinkage void do_softirq(59,1478
void open_softirq(65,1563
void cpumask_raise_softirq(71,1685
void cpu_raise_softirq(82,1929
void raise_softirq(89,2127
void __init softirq_init(94,2223

xen/common/xenoprof.c,1852
#define MAX_OPROF_SHARED_PAGES 22,609
int pmu_owner 28,773
int pmu_hvm_refcount 29,792
static struct domain *active_domains[active_domains31,819
static int active_ready[active_ready32,876
static unsigned int adomains;33,920
static struct domain *passive_domains[passive_domains35,951
static unsigned int pdomains;36,1009
static unsigned int activated;38,1040
static struct domain *xenoprof_primary_profiler;xenoprof_primary_profiler39,1071
static int xenoprof_state 40,1120
static unsigned long backtrace_depth;41,1163
static u64 total_samples;43,1202
static u64 invalid_buffer_samples;44,1228
static u64 corrupted_buffer_samples;45,1263
static u64 lost_samples;46,1300
static u64 active_samples;47,1325
static u64 passive_samples;48,1352
static u64 idle_samples;49,1380
static u64 others_samples;50,1405
int acquire_pmu_ownership(52,1433
void release_pmu_ownship(73,1839
int is_active(83,2085
int is_passive(89,2232
static int is_profiled(95,2381
static void xenoprof_reset_stat(100,2471
static void xenoprof_reset_buf(112,2720
share_xenoprof_page_with_guest(136,3226
unshare_xenoprof_page_with_guest(160,3920
xenoprof_shared_gmfn_with_guest(175,4326
static int alloc_xenoprof_struct(187,4652
void free_xenoprof_pages(275,7184
static int active_index(294,7506
static int set_active(305,7678
static int reset_active(326,8026
static void reset_passive(352,8477
static void reset_active_list(367,8735
static void reset_passive_list(379,8939
static int add_active_list(393,9179
static int add_passive_list(411,9490
static int xenoprof_buf_space(470,10878
static int xenoprof_add_sample(481,11209
int xenoprof_add_trace(518,12200
void xenoprof_log_event(533,12617
static int xenoprof_op_init(593,14094
static int xenoprof_op_get_buffer(617,14797
#define NONPRIV_OP(663,16198
int do_xenoprof_op(668,16428

xen/common/page_alloc.c,2673
static char __initdata opt_badpage[opt_badpage49,1557
static bool_t opt_bootscrub __initdata 55,1707
static unsigned int dma_bitsize;62,1932
#define round_pgdown(65,2006
#define round_pgup(66,2049
static unsigned long __initdata first_valid_mfn 77,2333
static struct bootmem_region 79,2390
    unsigned long s,80,2421
    unsigned long s, e;80,2421
} *__initdata bootmem_region_list;81,2491
static unsigned int __initdata nr_bootmem_regions;82,2526
static void __init boot_bug(84,2578
#define BOOT_BUG_ON(88,2670
static void __init bootmem_region_add(90,2723
static void __init bootmem_region_zap(114,3469
void __init init_boot_pages(142,4058
unsigned long __init alloc_boot_pages(186,5130
#define MEMZONE_XEN 214,5683
#define NR_ZONES 215,5705
#define bits_to_zone(217,5752
#define page_to_zone(218,5832
typedef struct page_list_head heap_by_zone_and_order_t[heap_by_zone_and_order_t221,5953
static heap_by_zone_and_order_t *_heap[_heap222,6032
#define heap(223,6086
static unsigned long *avail[avail225,6149
static long total_avail_pages;226,6192
static long midsize_alloc_zone_pages;229,6302
#define MIDSIZE_ALLOC_FRAC 230,6340
static unsigned long init_node_heap(234,6408
static struct page_info *alloc_heap_pages(alloc_heap_pages297,8559
static int reserve_offlined_page(452,13473
static void free_heap_pages(527,15535
static unsigned long mark_page_offline(623,18769
static int reserve_heap_page(651,19486
int offline_page(676,20077
unsigned int online_page(763,22539
int query_page_offline(816,23666
static void init_heap_pages(849,24576
static unsigned long avail_heap_pages(884,25605
unsigned long total_free_pages(905,26101
void __init end_boot_allocator(910,26200
void __init scrub_heap_pages(957,27592
void init_xenheap_pages(1001,28470
void *alloc_xenheap_pages(alloc_xenheap_pages1023,29047
void free_xenheap_pages(1040,29432
void init_xenheap_pages(1054,29661
void *alloc_xenheap_pages(alloc_xenheap_pages1059,29746
void free_xenheap_pages(1076,30112
void init_domheap_pages(1102,30495
int assign_pages(1115,30742
struct page_info *alloc_domheap_pages(alloc_domheap_pages1168,32138
void free_domheap_pages(1199,33099
unsigned long avail_domheap_pages_region(1264,34988
unsigned long avail_domheap_pages(1278,35483
unsigned long avail_node_heap_pages(1285,35648
static void pagealloc_info(1291,35774
static struct keyhandler pagealloc_info_keyhandler 1318,36514
static __init int pagealloc_keyhandler_init(1324,36648
void scrub_one_page(1332,36815
static void dump_heap(1350,37219
static struct keyhandler dump_heap_keyhandler 1368,37671
static __init int register_heap_trigger(1374,37798

xen/common/tmem_xen.c,1777
#define EXPORT 16,361
EXPORT bool_t __read_mostly opt_tmem 18,431
EXPORT bool_t __read_mostly opt_tmem_compress 21,507
EXPORT bool_t __read_mostly opt_tmem_dedup 24,610
EXPORT bool_t __read_mostly opt_tmem_tze 27,704
EXPORT bool_t __read_mostly opt_tmem_shared_auth 30,792
EXPORT int __read_mostly opt_tmem_lock 33,904
EXPORT atomic_t freeable_page_count 36,992
#define LZO_WORKMEM_BYTES 49,1339
#define LZO_DSTMEM_PAGES 50,1386
void tmh_copy_page(58,1676
static inline void *cli_get_page(cli_get_page91,2780
static inline void cli_put_page(98,2965
static inline void *cli_get_page(cli_get_page104,3126
static inline void cli_put_page(127,3833
EXPORT int tmh_copy_from_client(141,4210
EXPORT int tmh_compress_from_client(177,5333
EXPORT int tmh_copy_to_client(205,6171
EXPORT int tmh_decompress_to_client(233,7110
EXPORT int tmh_copy_tze_to_client(257,7802
EXPORT struct xmem_pool *tmh_mempool tmh_mempool281,8517
EXPORT unsigned int tmh_mempool_maxalloc 282,8559
EXPORT unsigned long tmh_page_list_pages 286,8688
EXPORT void tmh_release_avail_pages_to_host(289,8792
EXPORT void tmh_scrub_page(304,9219
static noinline void *tmh_mempool_page_get(tmh_mempool_page_get313,9414
static void tmh_mempool_page_put(324,9670
static int __init tmh_mempool_init(330,9803
static void *tmh_persistent_pool_page_get(tmh_persistent_pool_page_get341,10128
static void tmh_persistent_pool_page_put(353,10433
EXPORT tmh_client_t *tmh_client_init(tmh_client_init366,10735
EXPORT void tmh_client_destroy(389,11339
static int dstmem_order,402,11617
static int dstmem_order, workmem_order;402,11617
static int cpu_callback(404,11658
static struct notifier_block cpu_nfb 447,12861
EXPORT int __init tmh_init(451,12940
EXPORT int __init tmh_init(474,13373

xen/common/rbtree.c,371
static void __rb_rotate_left(27,916
static void __rb_rotate_right(50,1461
void rb_insert_color(73,2000
static void __rb_erase_color(139,3834
void rb_erase(225,6718
struct rb_node *rb_first(rb_first296,8436
struct rb_node *rb_last(rb_last309,8654
struct rb_node *rb_next(rb_next322,8872
struct rb_node *rb_prev(rb_prev351,9730
void rb_replace_node(376,10347

xen/common/string.c,456
int strnicmp(18,349
size_t strlcpy(56,1183
size_t strlcat(81,1794
int strcmp(105,2211
int strncmp(125,2559
char * strchr(145,2932
char * strrchr(160,3232
size_t strlen(176,3547
size_t strnlen(192,3844
size_t strspn(209,4207
char * strpbrk(235,4656
char * strsep(261,5291
void * memset(286,5765
void * memcpy(307,6165
void * memmove(327,6565
int memcmp(355,7042
void * memscan(377,7553
char * strstr(397,7921
void *memchr(memchr425,8419

xen/common/radix-tree.c,698
static unsigned long height_to_maxindex[RADIX_TREE_MAX_PATH + 1] __read_mostly;41,1500
static inline unsigned long radix_tree_maxindex(47,1674
static int radix_tree_extend(55,1845
int radix_tree_insert(95,2848
static inline void **__lookup_slot(__lookup_slot150,4260
void **radix_tree_lookup_slot(radix_tree_lookup_slot189,5250
void *radix_tree_lookup(radix_tree_lookup202,5611
__lookup(212,5842
radix_tree_gang_lookup(277,7728
static inline void radix_tree_shrink(305,8583
void *radix_tree_delete(radix_tree_delete331,9361
radix_tree_node_destroy(393,10852
void radix_tree_destroy(415,11519
static unsigned long __init __maxindex(433,12071
void __init radix_tree_init(443,12345

xen/common/unlzo.c,399
static inline u16 INIT get_unaligned_be16(38,1331
static inline u32 INIT get_unaligned_be32(43,1412
static inline u16 INIT get_unaligned_be16(50,1526
static inline u32 INIT get_unaligned_be32(55,1626
static const unsigned char lzop_magic[lzop_magic61,1733
#define LZO_BLOCK_SIZE 64,1835
#define HEADER_HAS_FILTER 65,1877
static int INIT parse_header(67,1921
STATIC int INIT unlzo(104,2705

xen/common/symbols.c,273
#define symbols_address(23,616
#define symbols_address(26,735
static unsigned int symbols_expand_symbol(38,1140
static unsigned int get_symbol_offset(77,2123
const char *symbols_lookup(symbols_lookup96,2748
void __print_symbol(147,4301
#define BUFFER_SIZE 154,4501

xen/common/stop_machine.c,751
enum stopmachine_state 35,1247
    STOPMACHINE_START,36,1272
    STOPMACHINE_PREPARE,37,1295
    STOPMACHINE_DISABLE_IRQ,38,1320
    STOPMACHINE_INVOKE,39,1349
    STOPMACHINE_EXIT40,1373
struct stopmachine_data 43,1398
    unsigned int nr_cpus;44,1424
    enum stopmachine_state state;46,1451
    atomic_t done;47,1485
    unsigned int fn_cpu;49,1505
    int fn_result;50,1530
    int (*fn)fn51,1549
    void *fn_data;fn_data52,1572
static struct stopmachine_data stopmachine_data;56,1655
static void stopmachine_set_state(59,1747
int stop_machine_run(68,2009
static void stopmachine_action(123,3390
static int cpu_callback(158,4211
static struct notifier_block cpu_nfb 170,4517
static int __init cpu_stopmachine_init(174,4596

xen/common/cpu.c,560
#define MASK_DECLARE_1(17,449
#define MASK_DECLARE_2(18,497
#define MASK_DECLARE_4(19,562
#define MASK_DECLARE_8(20,627
const unsigned long cpu_bit_bitmap[cpu_bit_bitmap22,693
bool_t get_cpu_maps(34,1029
void put_cpu_maps(39,1117
bool_t cpu_hotplug_begin(44,1195
void cpu_hotplug_done(49,1258
void register_cpu_notifier(56,1345
static int take_cpu_down(64,1609
int cpu_down(73,1857
int cpu_up(116,2944
void notify_cpu_starting(158,3967
static cpumask_t frozen_cpus;166,4181
int disable_nonboot_cpus(168,4212
void enable_nonboot_cpus(197,4761

xen/common/rcupdate.c,832
struct rcu_ctrlblk rcu_ctrlblk 49,1750
static int blimit 58,1935
static int qhimark 59,1959
static int qlowmark 60,1987
static int rsinterval 61,2014
static void force_quiescent_state(63,2045
void fastcall call_rcu(91,3094
static void rcu_do_batch(114,3675
static void rcu_start_batch(159,5303
static void cpu_quiet(180,5927
static void rcu_check_quiescent_state(195,6354
static void __rcu_process_callbacks(229,7220
static void rcu_process_callbacks(273,8453
static int __rcu_pending(278,8567
int rcu_pending(302,9233
int rcu_needs_cpu(313,9587
void rcu_check_callbacks(320,9721
static void rcu_move_batch(325,9792
static void rcu_offline_cpu(335,10053
static void rcu_init_percpu_data(355,10703
static int cpu_callback(368,11078
static struct notifier_block cpu_nfb 390,11577
void __init rcu_init(394,11656

xen/common/timer.c,1616
static unsigned int timer_slop __read_mostly 27,649
struct timers 30,757
    spinlock_t     lock;31,773
    struct timer **heap;heap32,798
    struct timer  *list;list33,823
    struct timer  *running;running34,848
    struct list_head inactive;35,876
} __cacheline_aligned;36,907
static cpumask_t timer_valid_cpumask;40,978
#define GET_HEAP_SIZE(48,1163
#define SET_HEAP_SIZE(49,1219
#define GET_HEAP_LIMIT(51,1281
#define SET_HEAP_LIMIT(52,1337
static void down_heap(55,1438
static void up_heap(76,1951
static int remove_from_heap(93,2314
static int add_to_heap(120,2872
static int remove_from_list(141,3319
static int add_to_list(153,3565
static int remove_entry(171,3963
static int add_entry(193,4400
static inline void activate_timer(212,4922
static inline void deactivate_timer(222,5191
static inline bool_t timer_lock(231,5453
#define timer_lock_irqsave(251,5957
static inline void timer_unlock(259,6261
#define timer_unlock_irqrestore(264,6371
static bool_t active_timer(270,6526
void init_timer(278,6735
void set_timer(297,7218
void stop_timer(315,7533
void migrate_timer(329,7772
void kill_timer(379,9148
static void execute_timer(403,9646
static void timer_softirq_action(419,9986
s_time_t align_timer(492,12080
static void dump_timer(500,12255
static void dump_timerq(507,12484
static struct keyhandler dump_timerq_keyhandler 531,13106
static unsigned int migrate_timers_from_cpu(537,13240
static struct timer *dummy_heap;dummy_heap578,14218
static int cpu_callback(580,14252
static struct notifier_block cpu_nfb 611,15002
void __init timer_init(616,15101

xen/common/rangeset.c,1200
struct range 16,404
    struct list_head list;17,419
    unsigned long s,18,446
    unsigned long s, e;18,446
struct rangeset 21,474
    struct list_head rangeset_list;23,548
    struct domain   *domain;domain24,584
    struct list_head range_list;27,691
    spinlock_t       lock;28,724
    char             name[name31,784
    unsigned int     flags;34,843
static struct range *find_range(find_range42,1062
static struct range *first_range(first_range58,1378
static struct range *next_range(next_range67,1643
static void insert_range(76,1919
static void destroy_range(83,2121
int rangeset_add_range(94,2273
int rangeset_remove_range(166,3637
int rangeset_contains_range(238,5010
int rangeset_overlaps_range(254,5298
int rangeset_report_ranges(270,5586
int rangeset_add_singleton(288,6014
int rangeset_remove_singleton(294,6128
int rangeset_contains_singleton(300,6248
int rangeset_is_empty(306,6372
struct rangeset *rangeset_new(rangeset_new312,6480
void rangeset_destroy(346,7155
void rangeset_domain_initialise(367,7526
void rangeset_domain_destroy(374,7661
static void print_limit(395,8062
void rangeset_printk(400,8199
void rangeset_domain_printk(428,8689

xen/common/hvm/save.c,439
    hvm_save_handler save;35,1248
    hvm_load_handler load;36,1275
    const char *name;name37,1303
    size_t size;38,1325
    int kind;39,1342
} hvm_sr_handlers 40,1356
void hvm_register_savevm(43,1478
size_t hvm_save_size(59,2101
int hvm_save_one(81,2760
int hvm_save(127,4198
int hvm_load(185,5683
int _hvm_init_entry(247,7570
void _hvm_write_entry(267,8158
int _hvm_check_entry(274,8333
void _hvm_read_entry(298,9147

xen/common/multicall.c,85
typedef long ret_t;18,380
#define xlat_multicall_entry(19,400
do_multicall(23,448

xen/common/spinlock.c,2355
static atomic_t spin_debug __read_mostly 14,261
static void check_lock(16,321
void spin_debug_enable(33,735
void spin_debug_disable(38,798
#define check_lock(45,891
#define LOCK_PROFILE_REL 51,953
#define LOCK_PROFILE_VAR 54,1129
#define LOCK_PROFILE_BLOCK 55,1176
#define LOCK_PROFILE_GOT 56,1229
#define LOCK_PROFILE_REL66,1681
#define LOCK_PROFILE_VAR67,1706
#define LOCK_PROFILE_BLOCK68,1731
#define LOCK_PROFILE_GOT69,1758
void _spin_lock(73,1792
void _spin_lock_irq(88,2107
unsigned long _spin_lock_irqsave(107,2544
void _spin_unlock(127,3011
void _spin_unlock_irq(134,3130
void _spin_unlock_irqrestore(142,3277
int _spin_is_locked(150,3458
int _spin_trylock(156,3575
void _spin_barrier(168,3809
void _spin_barrier_irq(188,4249
int _spin_trylock_recursive(196,4402
void _spin_lock_recursive(219,4914
void _spin_unlock_recursive(225,5028
void _read_lock(234,5198
void _read_lock_irq(241,5320
unsigned long _read_lock_irqsave(250,5507
void _read_unlock(260,5716
void _read_unlock_irq(266,5811
void _read_unlock_irqrestore(273,5934
void _write_lock(280,6091
void _write_lock_irq(287,6215
unsigned long _write_lock_irqsave(296,6404
int _write_trylock(306,6615
void _write_unlock(315,6783
void _write_unlock_irq(321,6880
void _write_unlock_irqrestore(328,7005
int _rw_is_locked(335,7164
int _rw_is_write_locked(341,7275
struct lock_profile_anc 349,7419
    struct lock_profile_qhead *head_q;head_q350,7445
    char                      *name;name351,7516
typedef void lock_profile_subfunc(354,7596
static s_time_t lock_profile_start;360,7785
static struct lock_profile_anc lock_profile_ancs[lock_profile_ancs361,7821
static struct lock_profile_qhead lock_profile_glb_q;362,7888
static spinlock_t lock_profile_lock 363,7941
static void spinlock_profile_iterate(365,8000
static void spinlock_profile_print_elem(379,8439
void spinlock_profile_printall(392,8997
static void spinlock_profile_reset_elem(404,9355
void spinlock_profile_reset(413,9569
    xen_sysctl_lockprof_op_t *pc;pc425,9888
    int                      rc;426,9922
} spinlock_profile_ucopy_t;427,9955
static void spinlock_profile_ucopy_elem(429,9984
int spinlock_profile_control(456,10713
void _lock_profile_register_struct(482,11272
void _lock_profile_deregister_struct(493,11621
static int __init lock_prof_init(510,12005

xen/common/decompress.c,62
static void __init error(7,120
int __init decompress(12,192

xen/common/memory.c,276
struct memop_args 34,747
    struct domain *domain;domain36,783
    XEN_GUEST_HANDLE(37,843
static void populate_physmap(93,2590
int guest_remove_page(156,4555
static void decrease_reservation(207,5786
static long memory_exchange(255,7013
long do_memory_op(500,15046

xen/common/version.c,537
const char *xen_compile_date(xen_compile_date4,51
const char *xen_compile_time(xen_compile_time9,120
const char *xen_compile_by(xen_compile_by14,189
const char *xen_compile_domain(xen_compile_domain19,254
const char *xen_compile_host(xen_compile_host24,327
const char *xen_compiler(xen_compiler29,396
unsigned int xen_major_version(34,457
unsigned int xen_minor_version(39,523
const char *xen_extra_version(xen_extra_version44,592
const char *xen_changeset(xen_changeset49,662
const char *xen_banner(xen_banner54,725

xen/common/domain.c,2786
unsigned int xen_processor_pmbits 42,1029
static bool_t opt_dom0_vcpus_pin;45,1145
enum cpufreq_controller cpufreq_controller 49,1266
static void __init setup_cpufreq_option(51,1325
#define DOMAIN_HASH_SIZE 83,2122
#define DOMAIN_HASH(84,2151
static struct domain *domain_hash[domain_hash85,2210
struct domain *domain_list;domain_list86,2263
struct domain *dom0;dom088,2292
struct vcpu *idle_vcpu[NR_CPUS] __read_mostly;90,2314
vcpu_info_t dummy_vcpu_info;92,2362
int current_domain_id(94,2392
static void __domain_finalise_shutdown(99,2464
static void vcpu_check_shutdown(119,2927
struct vcpu *alloc_vcpu(alloc_vcpu137,3309
static unsigned int __read_mostly extra_dom0_irqs 203,4943
static unsigned int __read_mostly extra_domU_irqs 204,5000
static void __init parse_extra_guest_irqs(205,5056
struct domain *domain_create(domain_create214,5341
    enum { INIT_xsm 218,5465
    enum { INIT_xsm = 1u<u218,5465
    enum { INIT_xsm = 1u<<0, INIT_watchdog 218,5465
    enum { INIT_xsm = 1u<<0, INIT_watchdog = 1u<u218,5465
    enum { INIT_xsm = 1u<<0, INIT_watchdog = 1u<<1, INIT_rangeset 218,5465
    enum { INIT_xsm = 1u<<0, INIT_watchdog = 1u<<1, INIT_rangeset = 1u<u218,5465
           INIT_evtchn 219,5540
           INIT_evtchn = 1u<u219,5540
           INIT_evtchn = 1u<<3, INIT_gnttab 219,5540
           INIT_evtchn = 1u<<3, INIT_gnttab = 1u<u219,5540
           INIT_evtchn = 1u<<3, INIT_gnttab = 1u<<4, INIT_arch 219,5540
           INIT_evtchn = 1u<<3, INIT_gnttab = 1u<<4, INIT_arch = 1u<u219,5540
void domain_update_node_affinity(354,9329
struct domain *get_domain_by_id(get_domain_by_id375,9841
struct domain *rcu_lock_domain_by_id(rcu_lock_domain_by_id399,10306
int rcu_lock_target_domain_by_id(421,10744
int domain_kill(441,11117
void __domain_crash(479,11937
void __domain_crash_synchronous(501,12530
void domain_shutdown(512,12692
void domain_resume(550,13484
int vcpu_start_shutdown_deferral(577,14037
void vcpu_end_shutdown_deferral(590,14344
void domain_pause_for_debugger(598,14573
static void complete_domain_destroy(614,15025
void domain_destroy(664,16131
void vcpu_pause(695,17075
void vcpu_pause_nosync(702,17195
void vcpu_unpause(708,17298
void domain_pause(714,17407
void domain_unpause(726,17592
void domain_pause_by_systemcontroller(735,17760
void domain_unpause_by_systemcontroller(742,17926
int boot_vcpu(748,18075
void vcpu_reset(757,18263
long do_vcpu_op(786,18865
long vm_assist(918,21802
struct migrate_info 936,22159
    long (*func)func937,22181
    void *data;data938,22211
    struct vcpu *vcpu;vcpu939,22227
    unsigned int cpu;940,22250
    unsigned int nest;941,22272
static void continue_hypercall_tasklet_handler(946,22361
int continue_hypercall_on_cpu(967,22919

xen/common/time.c,174
#define __isleap(24,965
const unsigned short int __mon_lengths[__mon_lengths28,1095
#define SECS_PER_HOUR 35,1304
#define SECS_PER_DAY 36,1336
struct tm gmtime(38,1380

xen/common/lib.c,1049
const unsigned char _ctype[_ctype8,114
union uu 78,4007
    s64            q;79,4018
    s64            uq;80,4078
    long           sl[sl81,4139
    unsigned long  ul[ul82,4200
#define _QUAD_HIGHWORD 86,4287
#define _QUAD_LOWWORD 87,4312
#define _QUAD_HIGHWORD 89,4364
#define _QUAD_LOWWORD 90,4389
#define H 96,4462
#define L 97,4501
#define CHAR_BIT 104,4706
#define QUAD_BITS 105,4777
#define LONG_BITS 106,4826
#define HALF_BITS 107,4876
#define HHALF(118,5344
#define LHALF(119,5387
#define LHUP(120,5442
#define B 126,5598
#define COMBINE(129,5705
typedef u_long digit;132,5804
static void shl(139,6021
u64 __qdivrem(156,6560
s64 __divdi3(355,12271
u64 __udivdi3(369,12525
u64 __umoddi3(377,12642
s64 __moddi3(392,12891
uint64_t muldiv64(405,13180
        uint64_t ll;412,13361
            uint32_t high,415,13422
            uint32_t high, low;415,13422
            uint32_t low,417,13460
            uint32_t low, high;417,13460
        } l;419,13511
unsigned long long parse_size_and_unit(433,13795

xen/common/sysctl.c,23
long do_sysctl(36,887

xen/common/kexec.c,1817
static Elf_Note *xen_crash_note;xen_crash_note34,828
static cpumask_t crash_saved_cpus;36,862
static xen_kexec_image_t kexec_image[kexec_image38,898
#define KEXEC_FLAG_DEFAULT_POS 40,953
#define KEXEC_FLAG_CRASH_POS 41,1007
#define KEXEC_FLAG_IN_PROGRESS 42,1061
static unsigned long kexec_flags 44,1116
static spinlock_t kexec_lock 46,1200
static unsigned char vmcoreinfo_data[vmcoreinfo_data48,1252
static size_t vmcoreinfo_size 49,1308
xen_kexec_reserve_t kexec_crash_area;51,1344
    u64 start,53,1398
    u64 start, end;53,1398
    unsigned long size;54,1418
} ranges[16] __initdata;55,1442
static void __init parse_crashkernel(70,1722
void __init set_kexec_crash_area_size(135,3596
static void one_cpu_only(155,4110
void kexec_crash_save_cpu(163,4367
crash_xen_info_t *kexec_crash_save_info(kexec_crash_save_info182,4858
static void kexec_common_shutdown(206,5660
void kexec_crash(215,5828
static long kexec_reboot(231,6177
static void do_crashdump_trigger(242,6349
static struct keyhandler crashdump_trigger_keyhandler 249,6528
static __init int register_crashdump_trigger(254,6658
static void setup_note(261,6829
static int sizeof_note(270,7042
static int kexec_get_reserve(277,7211
static int kexec_get_cpu(288,7500
static int kexec_get_vmcoreinfo(332,8752
static int kexec_get_range_internal(339,8922
static int kexec_get_range(362,9398
static int kexec_get_range_compat(378,9741
static int kexec_load_get_bits(404,10352
void vmcoreinfo_append_str(422,10741
static void crash_save_vmcoreinfo(441,11209
static int kexec_load_unload_internal(477,12179
static int kexec_load_unload(522,13404
static int kexec_load_unload_compat(532,13641
static int kexec_exec(558,14438
int do_kexec_op_internal(590,15234
long do_kexec_op(631,16253
int compat_kexec_op(637,16389

xen/common/libelf/libelf-tools.c,994
uint64_t elf_access_unsigned(23,868
int64_t elf_access_signed(51,1529
uint64_t elf_round_up(79,2179
int elf_shdr_count(88,2420
int elf_phdr_count(93,2514
const elf_shdr *elf_shdr_by_name(elf_shdr_by_name98,2608
const elf_shdr *elf_shdr_by_index(elf_shdr_by_index115,3011
const elf_phdr *elf_phdr_by_index(elf_phdr_by_index129,3343
const char *elf_section_name(elf_section_name143,3689
const void *elf_section_start(elf_section_start150,3890
const void *elf_section_end(elf_section_end155,4028
const void *elf_segment_start(elf_segment_start161,4203
const void *elf_segment_end(elf_segment_end166,4340
const elf_sym *elf_sym_by_name(elf_sym_by_name172,4515
const elf_sym *elf_sym_by_index(elf_sym_by_index193,5117
const char *elf_note_name(elf_note_name202,5334
const void *elf_note_desc(elf_note_desc207,5459
uint64_t elf_note_numeric(214,5651
const elf_note *elf_note_next(elf_note_next230,5993
int elf_is_elfbinary(240,6335
int elf_phdr_is_loadable(247,6443

xen/common/libelf/libelf-loader.c,384
int elf_init(25,867
void elf_call_log_callback(91,2820
void elf_set_log(105,3155
void elf_set_verbose(113,3401
void elf_parse_bsdsyms(120,3551
static void elf_load_bsdsyms(152,4469
#define elf_hdr_elm(163,4701
#undef elf_ehdr_elm211,6635
void elf_parse_binary(214,6658
void elf_load_binary(242,7520
void *elf_get_ptr(elf_get_ptr268,8342
uint64_t elf_lookup_addr(273,8452

xen/common/libelf/libelf-relocate.c,454
static const char *rel_names_i386[rel_names_i38623,874
static int elf_reloc_i386(62,1688
static const char *rel_names_x86_64[rel_names_x86_6485,2192
static int elf_reloc_x86_64(112,2774
static struct relocs 170,4312
    const char **names;names171,4335
    int count;172,4359
    int (*func)func173,4374
} relocs[relocs175,4475
static const char *rela_name(rela_name193,4937
static int elf_reloc_section(204,5257
int elf_reloc(330,9124

xen/common/libelf/libelf-private.h,502
#define __LIBELF_PRIVATE_H_17,731
#define elf_msg(31,1044
#define elf_err(33,1126
#define strtoull(36,1191
#define bswap_16(37,1256
#define bswap_32(38,1286
#define bswap_64(39,1316
#define bswap_16(50,1512
#define bswap_32(51,1544
#define bswap_64(52,1576
#define bswap_16(55,1657
#define bswap_32(56,1688
#define bswap_64(57,1719
#define bswap_16(60,1805
#define bswap_32(61,1835
#define bswap_64(62,1865
#define elf_msg(74,2125
#define elf_err(76,2234
#define safe_strcpy(81,2425

xen/common/libelf/libelf-dominfo.c,444
static const char *const elf_xen_feature_names[elf_xen_feature_names24,957
static const int elf_xen_features 31,1337
int elf_xen_parse_features(34,1440
int elf_xen_parse_note(95,3147
        char *name;name101,3338
        int str;102,3358
static int elf_xen_parse_notes(206,6609
int elf_xen_parse_guest_info(231,7419
static int elf_xen_note_check(318,10203
static int elf_xen_addr_calc_check(355,11424
int elf_xen_parse(441,14629

xen/common/keyhandler.c,1900
static struct keyhandler *key_table[key_table20,445
static unsigned char keypress_key;21,487
static bool_t alt_key_handling;22,522
char keyhandler_scratch[keyhandler_scratch24,555
static void keypress_action(26,587
void handle_keypress(33,746
void register_keyhandler(53,1198
static void show_handlers(59,1341
static struct keyhandler show_handlers_keyhandler 69,1676
static cpumask_t dump_execstate_mask;74,1793
void dump_execstate(76,1832
static void dump_registers(110,2620
static struct keyhandler dump_registers_keyhandler 141,3460
static void dump_dom0_action(150,3677
static void dump_dom0_registers(168,4111
static struct keyhandler dump_dom0_registers_keyhandler 191,4708
static void reboot_machine(197,4860
static struct keyhandler reboot_machine_keyhandler 203,5019
static void cpuset_print(209,5162
static void periodic_timer_print(217,5333
static void dump_domains(230,5645
#define tmpstr 235,5767
#undef tmpstr309,8943
static struct keyhandler dump_domains_keyhandler 312,8960
static cpumask_t read_clocks_cpumask 318,9113
static void read_clocks_slave(322,9265
static void read_clocks(334,9614
static struct keyhandler read_clocks_keyhandler 400,11998
static struct keyhandler dump_runq_keyhandler 407,12185
static struct keyhandler perfc_printall_keyhandler 415,12381
static struct keyhandler perfc_reset_keyhandler 421,12573
static struct keyhandler spinlock_printall_keyhandler 429,12780
static struct keyhandler spinlock_reset_keyhandler 435,12994
static void run_all_nonirq_keyhandlers(441,13134
static void run_all_keyhandlers(465,13755
static struct keyhandler run_all_keyhandlers_keyhandler 490,14427
static void do_debug_key(496,14587
static struct keyhandler do_debug_key_keyhandler 505,14927
static void do_toggle_alt_key(511,15066
static struct keyhandler toggle_alt_keyhandler 518,15306
void __init initialize_keytable(524,15465

xen/common/sched_arinc653.c,1401
#define IDLETASK(46,1867
#define AVCPU(52,2028
#define SCHED_PRIV(57,2169
typedef struct arinc653_vcpu_s67,2576
    struct vcpu *       vc;71,2710
    bool_t              awake;73,2809
    struct list_head    list;76,2932
} arinc653_vcpu_t;77,2962
typedef struct sched_entry_s83,3074
    xen_domain_handle_t dom_handle;87,3210
    int                 vcpu_id;90,3342
    s_time_t            runtime;93,3512
    struct vcpu *       vc;95,3600
} sched_entry_t;96,3628
typedef struct a653sched_priv_s101,3732
    sched_entry_t schedule[schedule111,4147
    int num_schedule_entries;122,4590
    s_time_t major_frame;127,4693
    s_time_t next_major_frame;132,4785
    struct list_head vcpu_list;137,4901
} a653sched_priv_t;138,4933
static int dom_handle_cmp(156,5570
static struct vcpu *find_vcpu(find_vcpu175,6171
static void update_schedule_vcpus(198,6842
arinc653_sched_set(221,7542
arinc653_sched_get(304,10292
a653sched_init(340,11530
a653sched_deinit(369,12230
a653sched_alloc_vdata(382,12521
a653sched_free_vdata(412,13453
a653sched_alloc_pdata(435,13990
a653sched_free_pdata(447,14303
a653sched_alloc_domdata(463,14718
a653sched_free_domdata(475,15038
a653sched_vcpu_sleep(487,15341
a653sched_vcpu_wake(507,15977
a653sched_do_schedule(527,16607
a653sched_pick_cpu(615,19562
a653sched_adjust_global(630,20100
struct scheduler sched_arinc653_def 657,20896

xen/common/gdbstub.c,1207
#define dbg_printk(52,1813
#define GDB_RETRY_MAX 55,1888
struct gdb_cpu_info57,1916
    atomic_t paused;59,1938
    atomic_t ack;60,1959
static struct gdb_cpu_info gdb_cpu[gdb_cpu63,1981
static atomic_t gdb_smp_paused_count;64,2026
static char __initdata opt_gdb[opt_gdb69,2133
hex2char(76,2300
char2hex(83,2422
str2hex(97,2713
str2ulong(103,2819
str_to_native_ulong(120,3085
gdb_io_write(143,3484
gdb_io_write_char(152,3673
gdb_io_read(158,3798
attempt_receive_packet(166,3982
receive_command(204,4908
gdb_start_packet(221,5230
gdb_write_to_packet_char(229,5365
gdb_write_to_packet(237,5527
gdb_write_to_packet_str(245,5703
gdb_write_to_packet_hex(251,5827
gdb_check_ack(297,6815
gdb_send_packet(315,7124
gdb_send_reply(336,7632
gdb_cmd_signum(346,7836
gdb_cmd_read_mem(354,8028
gdb_cmd_write_mem(383,8694
gdbstub_attach(413,9418
gdbstub_detach(422,9641
process_command(432,9853
__gdb_ctx 542,12912
static struct gdb_context *gdb_ctx gdb_ctx547,12996
gdbstub_console_puts(550,13058
__trap_to_gdb(568,13456
static int __init initialise_gdb(643,15354
static void gdb_pause_this_cpu(663,15740
static void gdb_smp_pause(682,16172
static void gdb_smp_resume(715,17034

xen/xsm/acm/acm_ops.c,81
long do_acm_op(32,779
int acm_authorize_acm_ops(39,863
long do_acm_op(46,1037

xen/xsm/acm/acm_policy.c,562
acm_set_policy(49,1591
_acm_update_policy(83,2467
do_acm_set_policy(185,5899
acm_get_policy(235,7734
acm_dump_statistics(314,10427
acm_get_ssid(370,12257
acm_get_decision(439,14472
acm_check_used_ssidref(481,15342
oldssid_to_newssid(524,16515
acm_pri_policy_assign_ssidref(548,17064
acm_sec_policy_assign_ssidref(560,17382
acm_doms_change_ssidref(571,17698
acm_doms_restore_ssidref(606,18652
acm_check_deleted_ssidrefs(635,19276
acm_change_policy(662,20031
domid_to_newssid(775,22937
do_acm_relabel_doms(790,23286
acm_relabel_domains(824,24034

xen/xsm/acm/acm_simple_type_enforcement_hooks.c,1014
ssidref_t dom0_ste_ssidref 36,1137
struct ste_binary_policy ste_bin_pol;39,1219
static inline int have_common_type 41,1258
static inline int is_superset(59,1802
static int share_common_type(80,2373
int acm_init_ste_policy(108,3254
ste_init_domain_ssid(144,4599
ste_free_domain_ssid(176,5518
ste_dump_policy(184,5667
ste_init_state(222,7029
#define APP 299,9994
do_ste_init_state_curr(358,12439
_ste_update_policy(366,12597
ste_test_policy(454,15444
ste_set_policy(483,16525
ste_dump_stats(489,16635
ste_dump_ssid_types(516,17595
check_cache(541,18199
cache_result(570,18978
clean_id_from_cache(596,19776
ste_pre_domain_create(631,20686
ste_domain_create(656,21316
ste_domain_destroy(663,21465
ste_pre_eventchannel_unbound(671,21701
ste_pre_eventchannel_interdomain(719,22935
ste_pre_grant_map_ref 772,24192
ste_pre_grant_setup 809,25183
ste_sharing(853,26316
ste_authorization(862,26612
ste_is_default_policy(871,26909
struct acm_operations acm_simple_type_enforcement_ops 882,27280

xen/xsm/acm/acm_xsm_hooks.c,204
static int acm_grant_mapref(26,645
static int acm_evtchn_unbound(34,809
static int acm_evtchn_interdomain(42,992
static void acm_security_domaininfo(51,1206
struct xsm_operations acm_xsm_ops 62,1517

xen/xsm/acm/acm_core.c,602
u16 acm_active_security_policy 56,1576
struct acm_operations *acm_primary_ops acm_primary_ops59,1677
struct acm_operations *acm_secondary_ops acm_secondary_ops61,1777
struct acm_binary_policy acm_bin_pol;64,1908
char polname[polname69,2061
char *acm_accepted_boot_policy_name acm_accepted_boot_policy_name70,2079
static void __init set_dom0_ssidref(76,2224
acm_set_policy_reference(110,3189
acm_dump_policy_reference(135,4044
acm_init_binary_policy(153,4684
acm_is_policy(231,6826
acm_setup(244,7097
acm_init(276,7914
int acm_init_domain_ssid(327,9393
acm_free_domain_ssid(375,10831

xen/xsm/acm/acm_null_hooks.c,253
null_init_domain_ssid(18,440
null_free_domain_ssid(24,530
null_dump_binary_policy(30,592
null_test_binary_policy(36,670
null_set_binary_policy(43,828
null_dump_stats(49,912
null_dump_ssid_types(56,1016
struct acm_operations acm_null_ops 64,1174

xen/xsm/acm/acm_chinesewall_hooks.c,865
ssidref_t dom0_chwall_ssidref 45,1440
struct chwall_binary_policy chwall_bin_pol;48,1534
int acm_init_chwall_policy(54,1686
static int chwall_init_domain_ssid(96,3517
static void chwall_free_domain_ssid(122,4328
static int chwall_dump_policy(130,4483
chwall_init_state(195,7199
do_chwall_init_state_curr(281,10464
static int _chwall_update_policy(309,11560
static int chwall_test_policy(413,15364
static int chwall_set_policy(453,17003
static int chwall_dump_stats(458,17118
static int chwall_dump_ssid_types(464,17228
static int _chwall_pre_domain_create(493,17917
static void _chwall_post_domain_create(548,20027
static int chwall_domain_create(568,20720
static void chwall_domain_destroy(586,21192
static int chwall_is_default_policy(638,23123
static int chwall_is_in_conflictset(649,23470
struct acm_operations acm_chinesewall_ops 683,24429

xen/xsm/flask/hooks.c,4116
struct xsm_operations *original_ops original_ops32,776
static int domain_has_perm(34,821
static int domain_has_evtchn(45,1114
static int domain_has_xen(56,1399
static int flask_domain_alloc_security(64,1600
static void flask_domain_free_security(93,2137
static int flask_evtchn_unbound(104,2322
static int flask_evtchn_interdomain(148,3337
static void flask_evtchn_close_post(203,4840
static int flask_evtchn_send(211,5003
static int flask_evtchn_status(231,5341
static int flask_evtchn_reset(236,5468
static int flask_alloc_security_evtchn(241,5607
static void flask_free_security_evtchn(260,5969
static int flask_grant_mapref(276,6204
static int flask_grant_unmapref(287,6484
static int flask_grant_setup(292,6625
static int flask_grant_transfer(297,6763
static int flask_grant_copy(302,6907
static int flask_grant_query_size(307,7043
static int get_page_sid(312,7186
static int get_mfn_sid(350,7951
static int flask_memory_adjust_reservation(370,8354
static int flask_memory_stat_reservation(375,8503
static int flask_memory_pin_page(380,8648
static int flask_console_io(394,8963
static int flask_profile(413,9290
static int flask_kexec(445,10024
static int flask_schedop_shutdown(450,10114
static void flask_security_domaininfo(455,10262
static int flask_setvcpucontext(464,10494
static int flask_pausedomain(470,10666
static int flask_unpausedomain(475,10798
static int flask_resumedomain(480,10934
static int flask_domain_create(485,11068
static int flask_max_vcpus(513,11702
static int flask_destroydomain(519,11864
static int flask_vcpuaffinity(525,12028
static int flask_scheduler(544,12429
static int flask_getdomaininfo(556,12700
static int flask_getvcpucontext(562,12869
static int flask_getvcpuinfo(568,13041
static int flask_domain_settime(574,13206
static int flask_set_target(579,13343
static int flask_tbufcontrol(584,13483
static int flask_readconsole(589,13581
static int flask_sched_id(599,13771
static int flask_setdomainmaxmem(604,13868
static int flask_setdomainhandle(610,14041
static int flask_setdebugging(616,14214
static int flask_debug_keys(622,14381
static int flask_getcpuinfo(627,14476
static int flask_availheap(632,14576
static inline u32 resource_to_perm(637,14669
static int irq_has_perm(645,14815
static int iomem_has_perm(686,15739
static int flask_perfcontrol(724,16603
static int flask_shadow_control(730,16723
static int ioport_has_perm(758,17461
static int flask_getpageframeinfo(799,18387
static int flask_getmemlist(814,18708
static int flask_hypercall_init(819,18836
static int flask_hvmcontext(825,19002
static int flask_address_size(845,19419
static int flask_hvm_param(864,19818
static int flask_hvm_set_pci_intx_level(883,20178
static int flask_hvm_set_isa_irq_level(888,20318
static int flask_hvm_set_pci_link_route(893,20457
static int flask_apic(898,20597
static int flask_assign_vector(917,20922
static int flask_xen_settime(929,21212
static int flask_memtype(934,21310
static int flask_microcode(956,21714
static int flask_physinfo(961,21812
static int flask_platform_quirk(966,21908
static int flask_firmware_info(975,22146
static int flask_acpi_sleep(980,22247
static int flask_change_freq(985,22342
static int flask_getidletime(990,22442
static int flask_machine_memory_map(995,22540
static int flask_domain_memory_map(1004,22776
static int flask_mmu_normal_update(1009,22912
static int flask_mmu_machphys_update(1032,23494
static int flask_update_va_mapping(1046,23810
static int flask_add_to_physmap(1068,24363
static int flask_sendtrigger(1073,24502
static int flask_test_assign_device(1078,24636
static int flask_assign_device(1091,24979
static int flask_deassign_device(1117,25702
static int flask_bind_pt_irq 1134,26179
static int flask_pin_mem_cacheattr 1157,26800
static int flask_ext_vcpucontext 1162,26937
static int flask_vcpuextstate 1181,27358
static int io_has_perm(1201,27795
static int flask_add_range(1239,28624
static int flask_remove_range(1245,28789
static struct xsm_operations flask_ops 1253,29018
static __init int flask_init(1354,32780

xen/xsm/flask/avc.c,2565
static const struct av_perm_to_string av_perm_to_string[av_perm_to_string35,936
#define S_(36,998
#undef S_38,1062
static const char *class_to_string[class_to_string41,1076
#define S_(42,1117
#undef S_44,1163
#define TB_(47,1177
#define TE_(48,1221
#define S_(49,1239
#undef TB_51,1291
#undef TE_52,1302
#undef S_53,1313
static const struct av_inherit av_inherit[av_inherit55,1324
#define S_(56,1372
#undef S_59,1518
const struct selinux_class_perm selinux_class_perm 62,1532
#define AVC_CACHE_SLOTS 71,1843
#define AVC_DEF_CACHE_THRESHOLD 72,1882
#define AVC_CACHE_RECLAIM 73,1925
#define avc_cache_stats_incr(76,1985
#define avc_cache_stats_incr(81,2148
struct avc_entry 84,2211
    u32            ssid;85,2230
    u32            tsid;86,2255
    u16            tclass;87,2280
    struct av_decision    avd;88,2307
struct avc_node 91,2342
    struct avc_entry    ae;92,2360
    struct hlist_node   list;93,2388
    struct rcu_head     rhead;94,2456
struct avc_cache 97,2491
    struct hlist_head    slots[slots98,2510
    spinlock_t        slots_lock[slots_lock99,2589
    atomic_t        lru_hint;100,2662
    atomic_t        active_nodes;101,2727
    u32            latest_notif;102,2761
struct avc_callback_node 105,2838
    int (*callback)callback106,2865
    u32 events;109,3002
    u32 ssid;110,3018
    u32 tsid;111,3032
    u16 tclass;112,3046
    u32 perms;113,3062
    struct avc_callback_node *next;next114,3077
unsigned int avc_cache_threshold 118,3152
static struct avc_cache avc_cache;124,3301
static struct avc_callback_node *avc_callbacks;avc_callbacks125,3336
static inline int avc_hash(129,3429
static void avc_dump_av(139,3692
static void avc_dump_query(207,5177
void __init avc_init(239,5835
int avc_get_hash_stats(254,6149
static void avc_node_free(288,7078
static void avc_node_delete(295,7256
static void avc_node_kill(302,7428
static void avc_node_replace(309,7573
static inline int avc_reclaim_node(316,7781
static struct avc_node *avc_alloc_node(avc_alloc_node353,8846
static void avc_node_populate(374,9301
static inline struct avc_node *avc_search_node(avc_search_node383,9582
static struct avc_node *avc_lookup(avc_lookup420,10624
static int avc_latest_notif_update(435,10925
static struct avc_node *avc_insert(avc_insert478,12164
void avc_audit(539,14053
int avc_add_callback(593,15513
static inline int avc_sidcmp(618,16089
static int avc_update_node(634,16616
int avc_ss_reset(716,18538
int avc_has_perm_noaudit(775,20575
int avc_has_perm(840,22518

xen/xsm/flask/flask_op.c,1146
int flask_enforcing 23,542
int flask_enabled 28,649
#define MAX_POLICY_SIZE 32,727
#define FLASK_COPY_IN 33,761
#define FLASK_COPY_OUT 53,1325
static int bool_num 74,1894
static int *bool_pending_values bool_pending_values75,1919
static int domain_has_security(81,2033
static int flask_security_user(93,2328
static int flask_security_relabel(180,4260
static int flask_security_create(244,5752
static int flask_security_access(309,7183
static int flask_security_member(362,8448
static int flask_security_setenforce(427,9863
static int flask_security_context(450,10355
static int flask_security_sid(470,10760
int flask_disable(498,11279
static int flask_security_disable(524,11721
static int flask_security_setavc_threshold(546,12072
static int flask_security_set_bool(570,12533
static int flask_security_commit_bools(598,13046
static int flask_security_get_bool(623,13541
static int flask_security_make_bools(650,14089
static int flask_security_avc_cachestats(678,14574
static int flask_security_load(727,15665
static int flask_ocontext_del(753,16141
static int flask_ocontext_add(788,16833
long do_flask_op(840,17921

xen/xsm/flask/ss/conditional.h,742
#define _CONDITIONAL_H_11,378
#define COND_EXPR_MAXDEPTH 17,465
struct cond_expr 23,598
#define COND_BOOL 24,617
#define COND_NOT 25,657
#define COND_OR 26,691
#define COND_AND 27,735
#define COND_XOR 28,776
#define COND_EQ 29,816
#define COND_NEQ 30,860
#define COND_LAST 31,901
    __u32 expr_type;32,931
    __u32 bool;33,952
    struct cond_expr *next;next34,968
struct cond_av_list 42,1171
    struct avtab_node *node;node43,1193
    struct cond_av_list *next;next44,1222
struct cond_node 54,1563
    int cur_state;55,1582
    struct cond_expr *expr;expr56,1601
    struct cond_av_list *true_list;true_list57,1629
    struct cond_av_list *false_list;false_list58,1665
    struct cond_node *next;next59,1702

xen/xsm/flask/ss/symtab.h,113
#define _SS_SYMTAB_H_10,301
struct symtab 14,346
    struct hashtab *table;table15,362
    u32 nprim;16,429

xen/xsm/flask/ss/policydb.h,4707
#define _SS_POLICYDB_H_27,830
struct perm_datum 43,1206
    u32 value;44,1226
struct common_datum 48,1332
    u32 value;49,1354
    struct symtab permissions;50,1408
struct class_datum 54,1494
    u32 value;55,1515
    char *comkey;comkey56,1559
    struct common_datum *comdatum;comdatum57,1606
    struct symtab permissions;58,1663
    struct constraint_node *constraints;constraints59,1742
    struct constraint_node *validatetrans;validatetrans60,1825
struct role_datum 64,1928
    u32 value;65,1948
    u32 bounds;66,2000
    struct ebitmap dominates;67,2041
    struct ebitmap types;68,2116
struct role_trans 71,2192
    u32 role;72,2212
    u32 type;73,2252
    u32 new_role;74,2303
    struct role_trans *next;next75,2343
struct role_allow 78,2376
    u32 role;79,2396
    u32 new_role;80,2436
    struct role_allow *next;next81,2476
struct type_datum 85,2531
    u32 value;86,2551
    u32 bounds;87,2599
    unsigned char primary;88,2639
    unsigned char attribute;89,2689
#define TYPEDATUM_PROPERTY_PRIMARY	96,2841
#define TYPEDATUM_PROPERTY_ATTRIBUTE	97,2883
#define POLICYDB_BOUNDS_MAXDEPTH	100,2964
struct user_datum 103,3022
    u32 value;104,3042
    u32 bounds;105,3094
    struct ebitmap roles;106,3133
    struct mls_range range;107,3205
    struct mls_level dfltlevel;108,3277
struct level_datum 113,3385
    struct mls_level *level;level114,3406
    unsigned char isalias;115,3482
struct cat_datum 119,3590
    u32 value;120,3609
    unsigned char isalias;121,3663
struct range_trans 124,3740
    u32 source_type;125,3761
    u32 target_type;126,3782
    u32 target_class;127,3803
    struct mls_range target_range;128,3825
    struct range_trans *next;next129,3860
struct cond_bool_datum 133,3918
    __u32 value;134,3943
    int state;135,3993
struct ocontext 147,4346
        char *name;name149,4376
        u16 pirq;150,4450
        u32 device;151,4468
                u32 low_ioport;153,4505
                u32 high_ioport;154,4537
        } ioport;155,4570
                u32 low_iomem;157,4605
                u32 high_iomem;158,4636
        } iomem;159,4668
    } u;160,4685
    struct context context[context161,4694
    u32 sid[sid162,4754
    struct ocontext *next;next163,4786
#define SYM_COMMONS 167,4850
#define SYM_CLASSES 168,4872
#define SYM_ROLES 169,4894
#define SYM_TYPES 170,4916
#define SYM_USERS 171,4938
#define SYM_BOOLS 172,4960
#define SYM_LEVELS 173,4982
#define SYM_CATS 174,5004
#define SYM_NUM 175,5026
#define OCON_ISID 178,5084
#define OCON_PIRQ 179,5129
#define OCON_IOPORT 180,5175
#define OCON_IOMEM 181,5216
#define OCON_DEVICE 182,5258
#define OCON_NUM 183,5302
#define OCON_NUM_OLD 184,5325
struct policydb 187,5375
    struct symtab symtab[symtab189,5417
#define p_commons 190,5452
#define p_classes 191,5490
#define p_roles 192,5528
#define p_types 193,5562
#define p_users 194,5596
#define p_bools 195,5630
#define p_levels 196,5664
#define p_cats 197,5700
    char **sym_val_to_name[sym_val_to_name200,5779
#define p_common_val_to_name 201,5816
#define p_class_val_to_name 202,5874
#define p_role_val_to_name 203,5931
#define p_type_val_to_name 204,5985
#define p_user_val_to_name 205,6039
#define p_bool_val_to_name 206,6093
#define p_sens_val_to_name 207,6147
#define p_cat_val_to_name 208,6202
    struct class_datum **class_val_to_struct;class_val_to_struct211,6321
    struct role_datum **role_val_to_struct;role_val_to_struct212,6367
    struct user_datum **user_val_to_struct;user_val_to_struct213,6411
    struct type_datum **type_val_to_struct;type_val_to_struct214,6455
    struct avtab te_avtab;217,6558
    struct role_trans *role_tr;role_tr220,6613
    struct cond_bool_datum **bool_val_to_struct;bool_val_to_struct223,6685
    struct avtab te_cond_avtab;225,6804
    struct cond_node* cond_list;227,6896
    struct role_allow *role_allow;role_allow230,6952
    struct ocontext *ocontexts[ocontexts234,7118
    struct range_trans *range_tr;range_tr237,7189
    struct ebitmap *type_attr_map;type_attr_map240,7268
    struct ebitmap policycaps;242,7304
    struct ebitmap permissive_map;244,7336
    unsigned int policyvers;246,7372
    u16 target_type;248,7402
#define PERM_SYMTAB_SIZE 259,7901
#define POLICYDB_CONFIG_MLS 261,7930
#define OBJECT_R 263,7964
#define OBJECT_R_VAL 264,7992
#define POLICYDB_MAGIC 266,8016
#define POLICYDB_STRING 267,8051
#define POLICYDB_STRING_OLD 268,8086
#define TARGET_XEN 269,8125
#define TARGET_XEN_OLD 270,8146
struct policy_file 272,8172
    char *data;data273,8193
    size_t len;274,8209
static inline int next_entry(277,8229

xen/xsm/flask/ss/sidtab.h,478
#define _SS_SIDTAB_H_11,260
struct sidtab_node 16,331
    u32 sid;17,352
    struct context context;18,398
    struct sidtab_node *next;next19,462
#define SIDTAB_HASH_BITS 22,496
#define SIDTAB_HASH_BUCKETS 23,523
#define SIDTAB_HASH_MASK 24,575
#define SIDTAB_SIZE 26,625
struct sidtab 28,666
    struct sidtab_node **htable;htable29,682
    unsigned int nel;30,715
    unsigned int next_sid;31,765
    unsigned char shutdown;32,822
    spinlock_t lock;33,850

xen/xsm/flask/ss/services.c,1883
unsigned int policydb_loaded_version;55,1664
#define POLICY_RDLOCK 58,1740
#define POLICY_WRLOCK 59,1788
#define POLICY_RDUNLOCK 60,1837
#define POLICY_WRUNLOCK 61,1889
#define LOAD_LOCK 64,1977
#define LOAD_UNLOCK 65,2016
static struct sidtab sidtab;67,2060
struct policydb policydb;68,2089
int ss_initialized 69,2115
static u32 latest_granting 77,2330
static int constraint_expr_eval(100,3221
static int dump_masked_av_helper(285,9261
static void security_dump_masked_av(297,9523
static void type_attribute_bounds_av(369,11504
static int context_struct_compute_av(451,14185
static int security_validtrans_handle_fail(558,17555
int security_validate_transition(583,18318
int security_compute_av(665,20657
static int context_struct_to_string(714,21967
int security_sid_to_context(764,23725
int security_context_to_sid(814,25179
static int compute_sid_handle_invalid_context(935,27900
static int security_compute_sid(962,28726
int security_transition_sid(1123,33498
int security_member_sid(1141,34178
int security_change_sid(1159,34823
static int validate_classes(1168,35058
static int clone_sid(1290,39175
static inline int convert_context_handle_invalid_context(1297,39318
struct convert_context_args 1315,39676
    struct policydb *oldp;oldp1316,39706
    struct policydb *newp;newp1317,39733
static int convert_context(1327,39998
int security_load_policy(1405,41959
int security_pirq_sid(1521,44841
int security_iomem_sid(1562,45544
int security_ioport_sid(1602,46292
int security_device_sid(1643,47061
#define SIDS_NEL 1678,47651
int security_get_user_sids(1694,48125
int security_get_bools(1791,50592
int security_set_bools(1841,51668
int security_get_bool_value(1892,52685
static int security_preserve_bools(1912,52980
int determine_ocontext(1946,53751
int security_ocontext_add(1960,54121
int security_ocontext_del(2095,57572

xen/xsm/flask/ss/hashtab.c,211
struct hashtab *hashtab_create(hashtab_create14,259
int hashtab_insert(44,902
void *hashtab_search(hashtab_search85,1787
void hashtab_destroy(104,2190
int hashtab_map(130,2608
void hashtab_stat(156,3082

xen/xsm/flask/ss/symtab.c,86
static unsigned int symhash(15,284
static int symcmp(29,627
int symtab_init(39,807

xen/xsm/flask/ss/hashtab.h,460
#define _SS_HASHTAB_H_11,353
#define HASHTAB_MAX_NODES 13,377
struct hashtab_node 15,418
    void *key;key16,440
    void *datum;datum17,455
    struct hashtab_node *next;next18,472
struct hashtab 21,507
    struct hashtab_node **htable;htable22,524
    u32 size;23,578
    u32 nel;24,639
    u32 (*hash_value)hash_value25,702
    int (*keycmp)keycmp27,801
struct hashtab_info 31,929
    u32 slots_used;32,951
    u32 max_chain_len;33,971

xen/xsm/flask/ss/context.h,543
#define _SS_CONTEXT_H_19,651
struct context 29,850
    u32 user;30,867
    u32 role;31,881
    u32 type;32,895
    struct mls_range range;33,909
static inline void mls_context_init(36,941
static inline int mls_context_cpy(41,1045
static inline int mls_context_cpy_low(64,1648
static inline int mls_context_cmp(84,2175
static inline void mls_context_destroy(95,2578
static inline void context_init(105,2803
static inline int context_cpy(110,2889
static inline void context_destroy(118,3085
static inline int context_cmp(124,3209

xen/xsm/flask/ss/mls_types.h,359
#define _SS_MLS_TYPES_H_17,404
struct mls_level 21,453
    u32 sens;22,472
    struct ebitmap cat;23,511
struct mls_range 26,561
    struct mls_level level[level27,580
static inline int mls_level_eq(30,655
static inline int mls_level_dom(39,868
#define mls_level_incomp(48,1087
#define mls_level_between(51,1182
#define mls_range_contains(54,1280

xen/xsm/flask/ss/avtab.h,949
#define _SS_AVTAB_H_27,872
struct avtab_key 29,894
    u16 source_type;30,913
    u16 target_type;31,955
    u16 target_class;32,997
#define AVTAB_ALLOWED 33,1048
#define AVTAB_AUDITALLOW 34,1076
#define AVTAB_AUDITDENY 35,1104
#define AVTAB_AV 36,1132
#define AVTAB_TRANSITION 37,1210
#define AVTAB_MEMBER 38,1238
#define AVTAB_CHANGE 39,1266
#define AVTAB_TYPE 40,1294
#define AVTAB_ENABLED_OLD 41,1368
#define AVTAB_ENABLED 42,1446
    u16 specified;43,1516
struct avtab_datum 46,1572
    u32 data;47,1593
struct avtab_node 50,1645
    struct avtab_key key;51,1665
    struct avtab_datum datum;52,1691
    struct avtab_node *next;next53,1721
struct avtab 56,1754
    struct avtab_node **htable;htable57,1769
    u32 nel;58,1801
    u32 nslot;59,1842
    u16 mask;60,1889
#define MAX_AVTAB_HASH_BITS 85,2833
#define MAX_AVTAB_HASH_BUCKETS 86,2864
#define MAX_AVTAB_HASH_MASK 87,2922
#define MAX_AVTAB_SIZE 88,2977

xen/xsm/flask/ss/conditional.c,838
static int cond_evaluate_expr(29,867
int evaluate_cond_node(94,2716
int cond_policydb_init(126,3697
static void cond_av_list_destroy(136,3879
static void cond_node_destroy(147,4146
static void cond_list_destroy(161,4501
void cond_policydb_destroy(175,4754
int cond_init_bool_indexes(182,4915
int cond_destroy_bool(192,5189
int cond_index_bool(199,5297
static int bool_isvalid(216,5685
int cond_read_bool(223,5818
struct cond_insertf_data264,6707
    struct policydb *p;p266,6734
    struct cond_av_list *other;other267,6758
    struct cond_av_list *head;head268,6790
    struct cond_av_list *tail;tail269,6821
static int cond_insertf(272,6856
static int cond_read_av_list(365,9599
static int expr_isvalid(401,10314
static int cond_read_node(417,10712
int cond_read_list(478,12015
void cond_compute_av(522,12957

xen/xsm/flask/ss/policydb.c,2094
#define _DEBUG_HASHES37,986
static char *symtab_name[symtab_name40,1029
int flask_mls_enabled 52,1200
static unsigned int symtab_sizes[symtab_sizes54,1228
struct policydb_compat_info 65,1343
    int version;66,1373
    int sym_num;67,1390
    int ocon_num;68,1407
    int target_type;69,1425
static struct policydb_compat_info policydb_compat[policydb_compat73,1512
static struct policydb_compat_info *policydb_lookup_compat(policydb_lookup_compat142,3369
static int roles_init(163,3897
static int policydb_init(205,4710
static int common_index(255,5798
static int class_index(268,6123
static int role_index(282,6505
static int type_index(298,6906
static int user_index(319,7406
static int sens_index(335,7839
static int cat_index(354,8289
static int policydb_index_classes(391,9046
static void symtab_hash_eval(429,9828
static int policydb_index_others(452,10390
static int perm_destroy(525,12090
static int common_destroy(532,12200
static int class_destroy(544,12486
static int role_destroy(591,13585
static int type_destroy(603,13817
static int user_destroy(610,13927
static int sens_destroy(624,14283
static int cat_destroy(636,14522
static void ocontext_destroy(655,14861
void policydb_destroy(667,15130
int policydb_load_isids(751,17061
int policydb_class_isvalid(785,17854
int policydb_role_isvalid(792,18006
int policydb_type_isvalid(799,18152
int policydb_context_isvalid(810,18404
static int mls_read_range_helper(856,19525
static int context_read_and_validate(924,21059
static int perm_read(966,22100
static int common_read(1010,22941
static int read_cons_helper(1067,24126
static int class_read(1158,26609
static int role_read(1259,28969
static int type_read(1330,30502
static int mls_read_level(1398,31957
static int user_read(1424,32452
static int sens_read(1488,33858
static int cat_read(1544,34932
static int user_bounds_sanity_check(1602,36030
static int role_bounds_sanity_check(1642,37122
static int type_bounds_sanity_check(1682,38214
static int policydb_bounds_sanity_check(1713,38973
int policydb_read(1744,39662

xen/xsm/flask/ss/services.h,30
#define _SS_SERVICES_H_7,128

xen/xsm/flask/ss/ebitmap.h,910
#define _SS_EBITMAP_H_15,461
#define EBITMAP_UNIT_NUMS	19,510
#define EBITMAP_UNIT_SIZE	21,605
#define EBITMAP_SIZE	22,645
#define EBITMAP_BIT	23,707
#define EBITMAP_SHIFT_UNIT_SIZE(24,733
struct ebitmap_node 27,834
    struct ebitmap_node *next;next28,856
    unsigned long maps[maps29,887
    u32 startbit;30,930
struct ebitmap 33,952
    struct ebitmap_node *node;node34,969
    u32 highbit;35,1034
#define ebitmap_length(38,1101
#define ebitmap_startbit(39,1142
static inline unsigned int ebitmap_start_positive(41,1209
static inline void ebitmap_init(55,1600
static inline unsigned int ebitmap_next_positive(60,1686
#define EBITMAP_NODE_INDEX(79,2290
#define EBITMAP_NODE_OFFSET(81,2383
static inline int ebitmap_node_get_bit(84,2478
static inline void ebitmap_node_set_bit(96,2834
static inline void ebitmap_node_clr_bit(106,3151
#define ebitmap_for_each_positive_bit(116,3471

xen/xsm/flask/ss/ebitmap.c,196
int ebitmap_cmp(22,488
int ebitmap_cpy(44,908
int ebitmap_contains(75,1582
int ebitmap_get_bit(108,2222
int ebitmap_set_bit(126,2565
void ebitmap_destroy(205,4374
int ebitmap_read(225,4644

xen/xsm/flask/ss/avtab.c,584
static inline int avtab_hash(31,851
static struct avtab_node* avtab_insert_node(37,1028
static int avtab_insert(63,1722
struct avtab_node * avtab_insert_nonunique(104,3359
struct avtab_datum *avtab_search(avtab_search137,4726
struct avtab_node* avtab_search_node(172,5994
struct avtab_node* avtab_search_node_next(203,7149
void avtab_destroy(233,8298
int avtab_init(258,8744
int avtab_alloc(265,8833
void avtab_hash_eval(303,9611
static uint16_t spec_order[spec_order333,10379
int avtab_read_item(342,10535
static int avtab_insertf(486,14709
int avtab_read(492,14891

xen/xsm/flask/ss/mls.h,26
#define _SS_MLS_H_15,319

xen/xsm/flask/ss/constraint.h,982
#define _SS_CONSTRAINT_H_16,611
#define CEXPR_MAXDEPTH 20,660
struct constraint_expr 22,686
#define CEXPR_NOT 23,711
#define CEXPR_AND 24,753
#define CEXPR_OR 25,800
#define CEXPR_ATTR 26,845
#define CEXPR_NAMES 27,892
    u32 expr_type;28,941
#define CEXPR_USER 30,990
#define CEXPR_ROLE 31,1029
#define CEXPR_TYPE 32,1068
#define CEXPR_TARGET 33,1107
#define CEXPR_XTARGET 34,1175
#define CEXPR_L1L2 35,1251
#define CEXPR_L1H2 36,1314
#define CEXPR_H1L2 37,1378
#define CEXPR_H1H2 38,1443
#define CEXPR_L1H1 39,1509
#define CEXPR_L2H2 40,1574
    u32 attr;41,1640
#define CEXPR_EQ 43,1678
#define CEXPR_NEQ 44,1723
#define CEXPR_DOM 45,1762
#define CEXPR_DOMBY 46,1802
#define CEXPR_INCOMP 47,1845
    u32 op;48,1888
    struct ebitmap names;50,1927
    struct constraint_expr *next;next52,1969
struct constraint_node 55,2031
    u32 permissions;56,2056
    struct constraint_expr *expr;expr57,2110
    struct constraint_node *next;next58,2179

xen/xsm/flask/ss/sidtab.c,494
#define SIDTAB_HASH(17,326
#define INIT_SIDTAB_LOCK(19,377
#define SIDTAB_LOCK(20,430
#define SIDTAB_UNLOCK(21,473
int sidtab_init(23,521
int sidtab_insert(39,850
struct context *sidtab_search(sidtab_search99,1924
int sidtab_map(127,2579
void sidtab_map_remove_on_error(151,3063
static inline u32 sidtab_search_context(195,4044
int sidtab_context_to_sid(214,4491
void sidtab_hash_eval(251,5371
void sidtab_destroy(281,6096
void sidtab_set(307,6581
void sidtab_shutdown(317,6802

xen/xsm/flask/ss/mls.c,344
int mls_compute_context_len(30,671
void mls_sid_to_context(89,2236
int mls_level_isvalid(170,4475
int mls_range_isvalid(200,5191
int mls_context_isvalid(211,5528
int mls_context_to_sid(249,6516
static inline int mls_range_set(381,9925
int mls_setup_user_range(399,10382
int mls_convert_context(453,12244
int mls_compute_sid(494,13423

xen/xsm/flask/include/conditional.h,37
#define _FLASK_CONDITIONAL_H_14,433

xen/xsm/flask/include/security.h,894
#define _FLASK_SECURITY_H_11,186
#define SECSID_NULL 15,234
#define SECSID_WILD 16,298
#define SECCLASS_NULL 17,359
#define FLASK_MAGIC 19,415
#define POLICYDB_VERSION_BASE 22,494
#define POLICYDB_VERSION_BOOL 23,534
#define POLICYDB_VERSION_IPV6 24,574
#define POLICYDB_VERSION_NLCLASS 25,614
#define POLICYDB_VERSION_VALIDATETRANS 26,653
#define POLICYDB_VERSION_MLS 27,698
#define POLICYDB_VERSION_AVTAB 28,737
#define POLICYDB_VERSION_RANGETRANS	29,778
#define POLICYDB_VERSION_POLCAP	30,817
#define POLICYDB_VERSION_PERMISSIVE	31,853
#define POLICYDB_VERSION_BOUNDARY	32,892
#define POLICYDB_VERSION_MIN 35,974
#define POLICYDB_VERSION_MAX 36,1027
#define flask_enabled 41,1140
struct av_decision 48,1255
    u32 allowed;49,1276
    u32 auditallow;50,1293
    u32 auditdeny;51,1313
    u32 seqno;52,1332
    u32 flags;53,1347
#define AVD_FLAGS_PERMISSIVE	57,1405

xen/xsm/flask/include/avc.h,873
#define _FLASK_AVC_H_10,203
#define flask_enforcing 23,445
struct avc_audit_data 39,685
    char    type;40,709
#define AVC_AUDIT_DATA_DEV 41,727
    struct domain *d;d42,757
    unsigned long device;43,779
#define v4info 46,809
#define v6info 47,831
#define AVC_AUDIT_DATA_INIT(50,900
struct avc_cache_stats57,1068
    unsigned int lookups;59,1093
    unsigned int hits;60,1119
    unsigned int misses;61,1142
    unsigned int allocations;62,1167
    unsigned int reclaims;63,1197
    unsigned int frees;64,1224
#define AVC_CALLBACK_GRANT 82,1740
#define AVC_CALLBACK_TRY_REVOKE 83,1776
#define AVC_CALLBACK_REVOKE 84,1817
#define AVC_CALLBACK_RESET 85,1854
#define AVC_CALLBACK_AUDITALLOW_ENABLE 86,1890
#define AVC_CALLBACK_AUDITALLOW_DISABLE 87,1935
#define AVC_CALLBACK_AUDITDENY_ENABLE 88,1981
#define AVC_CALLBACK_AUDITDENY_DISABLE 89,2025

xen/xsm/flask/include/av_permissions.h,3924
#define XEN__SCHEDULER 2,58
#define XEN__SETTIME 3,121
#define XEN__TBUFCONTROL 4,184
#define XEN__READCONSOLE 5,247
#define XEN__CLEARCONSOLE 6,310
#define XEN__PERFCONTROL 7,373
#define XEN__MTRR_ADD 8,436
#define XEN__MTRR_DEL 9,499
#define XEN__MTRR_READ 10,562
#define XEN__MICROCODE 11,625
#define XEN__PHYSINFO 12,688
#define XEN__QUIRK 13,751
#define XEN__WRITECONSOLE 14,814
#define XEN__READAPIC 15,877
#define XEN__WRITEAPIC 16,940
#define XEN__PRIVPROFILE 17,1003
#define XEN__NONPRIVPROFILE 18,1066
#define XEN__KEXEC 19,1129
#define XEN__FIRMWARE 20,1192
#define XEN__SLEEP 21,1255
#define XEN__FREQUENCY 22,1318
#define XEN__GETIDLE 23,1381
#define XEN__DEBUG 24,1444
#define XEN__GETCPUINFO 25,1507
#define XEN__HEAP 26,1570
#define DOMAIN__SETVCPUCONTEXT 28,1634
#define DOMAIN__PAUSE 29,1697
#define DOMAIN__UNPAUSE 30,1760
#define DOMAIN__RESUME 31,1823
#define DOMAIN__CREATE 32,1886
#define DOMAIN__TRANSITION 33,1949
#define DOMAIN__MAX_VCPUS 34,2012
#define DOMAIN__DESTROY 35,2075
#define DOMAIN__SETVCPUAFFINITY 36,2138
#define DOMAIN__GETVCPUAFFINITY 37,2201
#define DOMAIN__SCHEDULER 38,2264
#define DOMAIN__GETDOMAININFO 39,2327
#define DOMAIN__GETVCPUINFO 40,2390
#define DOMAIN__GETVCPUCONTEXT 41,2453
#define DOMAIN__SETDOMAINMAXMEM 42,2516
#define DOMAIN__SETDOMAINHANDLE 43,2579
#define DOMAIN__SETDEBUGGING 44,2642
#define DOMAIN__HYPERCALL 45,2705
#define DOMAIN__SETTIME 46,2768
#define DOMAIN__SET_TARGET 47,2831
#define DOMAIN__SHUTDOWN 48,2894
#define DOMAIN__SETADDRSIZE 49,2957
#define DOMAIN__GETADDRSIZE 50,3020
#define DOMAIN__TRIGGER 51,3083
#define DOMAIN__GETEXTVCPUCONTEXT 52,3146
#define DOMAIN__SETEXTVCPUCONTEXT 53,3209
#define DOMAIN__GETVCPUEXTSTATE 54,3272
#define DOMAIN__SETVCPUEXTSTATE 55,3335
#define HVM__SETHVMC 57,3399
#define HVM__GETHVMC 58,3462
#define HVM__SETPARAM 59,3525
#define HVM__GETPARAM 60,3588
#define HVM__PCILEVEL 61,3651
#define HVM__IRQLEVEL 62,3714
#define HVM__PCIROUTE 63,3777
#define HVM__BIND_IRQ 64,3840
#define HVM__CACHEATTR 65,3903
#define EVENT__BIND 67,3967
#define EVENT__SEND 68,4030
#define EVENT__STATUS 69,4093
#define EVENT__NOTIFY 70,4156
#define EVENT__CREATE 71,4219
#define EVENT__VECTOR 72,4282
#define EVENT__RESET 73,4345
#define GRANT__MAP_READ 75,4409
#define GRANT__MAP_WRITE 76,4472
#define GRANT__UNMAP 77,4535
#define GRANT__TRANSFER 78,4598
#define GRANT__SETUP 79,4661
#define GRANT__COPY 80,4724
#define GRANT__QUERY 81,4787
#define MMU__MAP_READ 83,4851
#define MMU__MAP_WRITE 84,4914
#define MMU__PAGEINFO 85,4977
#define MMU__PAGELIST 86,5040
#define MMU__ADJUST 87,5103
#define MMU__STAT 88,5166
#define MMU__TRANSLATEGP 89,5229
#define MMU__UPDATEMP 90,5292
#define MMU__PHYSMAP 91,5355
#define MMU__PINPAGE 92,5418
#define MMU__MFNLIST 93,5481
#define MMU__MEMORYMAP 94,5544
#define SHADOW__DISABLE 96,5608
#define SHADOW__ENABLE 97,5671
#define SHADOW__LOGDIRTY 98,5734
#define RESOURCE__ADD 100,5798
#define RESOURCE__REMOVE 101,5861
#define RESOURCE__USE 102,5924
#define RESOURCE__ADD_IRQ 103,5987
#define RESOURCE__REMOVE_IRQ 104,6050
#define RESOURCE__ADD_IOPORT 105,6113
#define RESOURCE__REMOVE_IOPORT 106,6176
#define RESOURCE__ADD_IOMEM 107,6239
#define RESOURCE__REMOVE_IOMEM 108,6302
#define RESOURCE__STAT_DEVICE 109,6365
#define RESOURCE__ADD_DEVICE 110,6428
#define RESOURCE__REMOVE_DEVICE 111,6491
#define SECURITY__COMPUTE_AV 113,6555
#define SECURITY__COMPUTE_CREATE 114,6618
#define SECURITY__COMPUTE_MEMBER 115,6681
#define SECURITY__CHECK_CONTEXT 116,6744
#define SECURITY__LOAD_POLICY 117,6807
#define SECURITY__COMPUTE_RELABEL 118,6870
#define SECURITY__COMPUTE_USER 119,6933
#define SECURITY__SETENFORCE 120,6996
#define SECURITY__SETBOOL 121,7059
#define SECURITY__SETSECPARAM 122,7122
#define SECURITY__ADD_OCONTEXT 123,7185
#define SECURITY__DEL_OCONTEXT 124,7248

xen/xsm/flask/include/class_to_string.h,14
    S_(5,102

xen/xsm/flask/include/objsec.h,241
#define _FLASK_OBJSEC_H_14,429
struct domain_security_struct 20,515
    struct domain *d;d21,547
    u32 sid;22,610
    u32 create_sid;23,655
struct evtchn_security_struct 26,679
    struct evtchn *chn;chn27,711
    u32 sid;28,776

xen/xsm/flask/include/av_perm_to_string.h,12
   S_(2,58

xen/xsm/flask/include/initial_sid_to_string.h,63
static char *initial_sid_to_string[initial_sid_to_string2,58

xen/xsm/flask/include/avc_ss.h,579
#define _FLASK_AVC_SS_H_7,143
struct av_perm_to_string 13,219
    u16 tclass;14,246
    u32 value;15,262
    const char *name;name16,277
struct av_inherit 19,303
    const char **common_pts;common_pts20,323
    u32 common_base;21,352
    u16 tclass;22,373
struct selinux_class_perm 25,393
    const struct av_perm_to_string *av_perm_to_string;av_perm_to_string26,421
    u32 av_pts_len;27,476
    u32 cts_len;28,496
    const char **class_to_string;class_to_string29,513
    const struct av_inherit *av_inherit;av_inherit30,547
    u32 av_inherit_len;31,588

xen/xsm/flask/include/flask.h,716
#define _SELINUX_FLASK_H_3,84
#define SECCLASS_XEN 8,155
#define SECCLASS_DOMAIN 9,214
#define SECCLASS_HVM 10,273
#define SECCLASS_MMU 11,332
#define SECCLASS_RESOURCE 12,391
#define SECCLASS_SHADOW 13,450
#define SECCLASS_EVENT 14,509
#define SECCLASS_GRANT 15,568
#define SECCLASS_SECURITY 16,627
#define SECINITSID_XEN 21,746
#define SECINITSID_DOM0 22,804
#define SECINITSID_DOMU 23,862
#define SECINITSID_DOMIO 24,920
#define SECINITSID_DOMXEN 25,978
#define SECINITSID_UNLABELED 26,1036
#define SECINITSID_SECURITY 27,1094
#define SECINITSID_IOPORT 28,1152
#define SECINITSID_IOMEM 29,1210
#define SECINITSID_PIRQ 30,1268
#define SECINITSID_DEVICE 31,1327
#define SECINITSID_NUM 33,1387

xen/xsm/dummy.c,3732
static void dummy_security_domaininfo(16,431
static int dummy_setvcpucontext(22,579
static int dummy_pausedomain 27,648
static int dummy_unpausedomain 32,715
static int dummy_resumedomain 37,784
static int dummy_domain_create(42,852
static int dummy_max_vcpus(47,933
static int dummy_destroydomain 52,997
static int dummy_vcpuaffinity 57,1066
static int dummy_scheduler 62,1143
static int dummy_getdomaininfo 67,1208
static int dummy_getvcpucontext 72,1277
static int dummy_getvcpuinfo 77,1347
static int dummy_domain_settime 82,1414
static int dummy_set_target 87,1484
static int dummy_tbufcontrol 92,1568
static int dummy_readconsole 97,1623
static int dummy_sched_id 102,1688
static int dummy_setdomainmaxmem 107,1740
static int dummy_setdomainhandle 112,1811
static int dummy_setdebugging 117,1882
static int dummy_perfcontrol 122,1950
static int dummy_debug_keys 127,2005
static int dummy_getcpuinfo 132,2059
static int dummy_get_pmstat 137,2113
static int dummy_pm_op 142,2167
static int dummy_availheap 147,2216
static int dummy_alloc_security_domain 152,2269
static void dummy_free_security_domain 157,2346
static int dummy_grant_mapref 162,2421
static int dummy_grant_unmapref 168,2589
static int dummy_grant_setup 173,2679
static int dummy_grant_transfer 178,2766
static int dummy_grant_copy 183,2856
static int dummy_grant_query_size 188,2942
static int dummy_memory_adjust_reservation 193,3034
static int dummy_memory_stat_reservation 199,3195
static int dummy_console_io 204,3294
static int dummy_profile 209,3369
static int dummy_kexec 214,3440
static int dummy_schedop_shutdown 219,3489
static int dummy_memory_pin_page(224,3581
static int dummy_evtchn_unbound 229,3675
static int dummy_evtchn_interdomain 235,3846
static void dummy_evtchn_close_post 241,4016
static int dummy_evtchn_send 246,4090
static int dummy_evtchn_status 251,4177
static int dummy_evtchn_reset 256,4266
static int dummy_alloc_security_evtchn 261,4354
static void dummy_free_security_evtchn 266,4433
static long dummy___do_xsm_op(271,4510
static int dummy_add_range 276,4596
static int dummy_remove_range 281,4707
static int dummy_shadow_control 288,4912
static int dummy_getpageframeinfo 293,4995
static int dummy_getmemlist 298,5073
static int dummy_hypercall_init 303,5139
static int dummy_hvmcontext 308,5209
static int dummy_address_size 313,5289
static int dummy_machine_address_size 318,5371
static int dummy_hvm_param 323,5461
static int dummy_hvm_set_pci_intx_level 328,5544
static int dummy_hvm_set_isa_irq_level 333,5622
static int dummy_hvm_set_pci_link_route 338,5699
static int dummy_apic 343,5777
static int dummy_assign_vector 348,5846
static int dummy_xen_settime 353,5930
static int dummy_memtype 358,5985
static int dummy_microcode 363,6047
static int dummy_physinfo 368,6100
static int dummy_platform_quirk 373,6152
static int dummy_firmware_info 378,6220
static int dummy_acpi_sleep 383,6277
static int dummy_change_freq 388,6331
static int dummy_getidletime 393,6386
static int dummy_machine_memory_map 398,6441
static int dummy_domain_memory_map 403,6503
static int dummy_mmu_normal_update 408,6576
static int dummy_mmu_machphys_update 414,6747
static int dummy_update_va_mapping 419,6841
static int dummy_add_to_physmap 425,7011
static int dummy_sendtrigger 430,7101
static int dummy_test_assign_device 435,7168
static int dummy_assign_device 440,7246
static int dummy_deassign_device 445,7337
static int dummy_bind_pt_irq 450,7430
static int dummy_pin_mem_cacheattr 455,7534
static int dummy_ext_vcpucontext 460,7607
struct xsm_operations dummy_xsm_ops;467,7700
#define set_to_dummy_if_null(469,7738
void xsm_fixup_ops 479,8307

xen/xsm/xsm_policy.c,102
char *__initdata policy_buffer 25,636
u32 __initdata policy_size 26,675
int xsm_policy_init(28,708

xen/xsm/xsm_core.c,271
#define XSM_FRAMEWORK_VERSION 22,521
struct xsm_operations *xsm_ops;xsm_ops27,663
static inline int verify(29,696
static void __init do_xsm_initcalls(38,890
int __init xsm_init(49,1084
int register_xsm(82,1869
int unregister_xsm(100,2180
long do_xsm_op 117,2503

docs/misc/pvrdtscp.c,1079
#define __X86_64__40,1733
typedef unsigned short u16;41,1752
typedef unsigned int u32;42,1780
typedef unsigned long u64;43,1806
typedef int i32;44,1833
typedef long i64;45,1850
#define NSEC_PER_SEC 46,1868
#define __X86_32__48,1906
typedef unsigned int u16;49,1925
typedef unsigned long u32;50,1951
typedef unsigned long long u64;51,1978
typedef long i32;52,2010
typedef long long i64;53,2028
#define NSEC_PER_SEC 54,2051
static inline void hvm_cpuid(57,2092
static inline void pv_cpuid(65,2311
static inline u64 do_rdtscp(73,2570
static inline int get_xen_tsc_mode(84,2781
static inline int get_xen_vtsc(91,2928
static inline int get_xen_vtsc_khz(98,3075
static inline u32 get_xen_cpu_khz(105,3222
static inline u32 get_xen_incarnation(112,3380
static inline void get_xen_time_values(119,3539
static inline u64 scale_delta(127,3765
static inline u64 get_pvrdtscp_timestamp(159,4499
#define HVM 209,6085
#define PVM 210,6099
static int running_on_xen(212,6114
	union { char csig[csig215,6222
	union { char csig[16]; u32 u[u215,6222
main(237,6800

unmodified_drivers/linux-2.6/compat-include/xen/platform-compat.h,1312
#define COMPAT_INCLUDE_XEN_PLATFORM_COMPAT_H2,45
#define __always_inline 9,231
#define DEFINE_SPINLOCK(13,331
#define __init17,447
#define __read_mostly21,526
#define NET_IP_ALIGN 25,611
#define CHECKSUM_HW 29,696
#define IS_ERR_VALUE(33,793
#define gfp_t 44,1192
#define ATOMIC_NOTIFIER_HEAD(48,1288
#define atomic_notifier_chain_register(49,1351
#define atomic_notifier_chain_unregister(50,1434
#define atomic_notifier_call_chain(51,1521
#define BLOCKING_NOTIFIER_HEAD(55,1677
#define blocking_notifier_chain_register(56,1742
#define blocking_notifier_chain_unregister(57,1827
#define blocking_notifier_call_chain(58,1916
#define init_page_count(62,2058
#define __GFP_NOMEMALLOC 66,2176
#define nonseekable_open(70,2282
#define end_that_request_last(90,2992
#define capable(94,3152
extern char *kasprintf(kasprintf98,3261
#define handle_sysrq(103,3448
#define _PAGE_NX 107,3551
#define __supported_pte_mask 114,3857
#define netif_tx_lock_bh(122,4129
#define netif_tx_unlock_bh(123,4191
#define netif_tx_lock_bh(125,4302
#define netif_tx_unlock_bh(126,4364
#define DEFINE_SEQLOCK(131,4504
#define rw_lock_t 136,4707
#define DEFINE_RWLOCK(140,4801
typedef irqreturn_t (*irq_handler_t)irq_handler_t151,5233
#define setup_xen_features 157,5373
#define atomic_cmpxchg(161,5450

unmodified_drivers/linux-2.6/compat-include/asm-generic/pgtable-nopmd.h,159
#define _PGTABLE_NOPMD_H2,25
#define pud_t 8,178
#define pud_offset(9,210
#define pud_none(10,242
#define pud_present(11,274
#define PTRS_PER_PUD 12,306

unmodified_drivers/linux-2.6/compat-include/asm-generic/pgtable-nopud.h,183
#define _PGTABLE_NOPUD_H2,25
#define pud_t 8,178
#define pud_offset(9,210
#define pud_none(10,242
#define pud_present(11,274
#define pud_bad(12,306
#define PTRS_PER_PUD 13,338

unmodified_drivers/linux-2.6/compat-include/linux/mutex.h,236
#define __LINUX_MUTEX_H10,186
#define mutex 21,413
#define DEFINE_MUTEX(22,437
#define mutex_init(23,482
#define mutex_lock(24,522
#define mutex_lock_interruptible(25,556
#define mutex_trylock(28,755
#define mutex_unlock(29,801

unmodified_drivers/linux-2.6/compat-include/linux/io.h,25
#define _LINUX_IO_H2,20

unmodified_drivers/linux-2.6/compat-include/linux/scatterlist.h,34
#define _LINUX_SCATTERLIST_H2,29

unmodified_drivers/linux-2.6/platform-pci/panic-handler.c,140
xen_panic_hypercall(14,234
xen_panic_event(23,449
static struct notifier_block xen_panic_block 34,730
int xen_panic_handler_init(38,817

unmodified_drivers/linux-2.6/platform-pci/evtchn.c,869
void *shared_info_area;shared_info_area43,1740
#define is_valid_evtchn(45,1765
#define evtchn_from_irq(46,1803
	spinlock_t lock;49,1872
	irq_handler_t handler;50,1890
	void *dev_id;dev_id51,1914
	int evtchn;52,1929
	int close:close53,1942
	int inuse:inuse54,1997
	int in_handler:in_handler55,2011
} irq_evtchn[irq_evtchn56,2030
static int evtchn_to_irq[evtchn_to_irq57,2049
static int alloc_xen_irq(62,2177
static void free_xen_irq(88,2642
int irq_to_evtchn_port(95,2769
void mask_evtchn(101,2873
void unmask_evtchn(108,3013
int bind_listening_port_to_irqhandler(115,3175
int bind_caller_port_to_irqhandler(156,4080
void unbind_from_irqhandler(186,4648
void notify_remote_via_irq(216,5263
static inline unsigned long active_evtchns(229,5617
static irqreturn_t evtchn_interrupt(235,5785
void irq_resume(329,8249
int xen_irq_init(342,8492

unmodified_drivers/linux-2.6/platform-pci/machine_reboot.c,282
struct ap_suspend_info 9,181
	int      do_spin;10,206
	atomic_t nr_spinning;11,225
static void ap_suspend(21,444
#define initiate_ap_suspend(38,721
#define initiate_ap_suspend(40,797
#define initiate_ap_suspend(45,906
static int bp_suspend(49,948
int __xen_suspend(66,1197

unmodified_drivers/linux-2.6/platform-pci/xen_support.c,196
unsigned long __hypercall(34,1119
int HYPERVISOR_grant_table_op(49,1474
void balloon_update_driver_allowance(56,1716
void balloon_release_driver_page(62,1837
void xen_machphys_update(69,1979

unmodified_drivers/linux-2.6/platform-pci/platform-compat.c,335
static int system_state 11,207
void ctrl_alt_del(15,273
size_t strcspn(25,483
unsigned long vmalloc_to_pfn(48,1024
unsigned long wait_for_completion_timeout(56,1224
asmlinkage NORET_TYPE void do_exit(91,2378
signed long schedule_timeout_interruptible(102,2604
void *kzalloc(kzalloc116,3009
char *kasprintf(kasprintf128,3240

unmodified_drivers/linux-2.6/platform-pci/platform-pci.c,1942
#define DRV_NAME 53,1561
#define DRV_VERSION 54,1600
#define DRV_RELDATE 55,1627
static int max_hypercall_stub_pages,57,1661
static int max_hypercall_stub_pages, nr_hypercall_stub_pages;57,1661
char *hypercall_stubs;hypercall_stubs58,1723
static char *dev_unplug;dev_unplug67,2033
struct pci_dev *xen_platform_pdev;xen_platform_pdev72,2208
static unsigned long shared_info_frame;74,2244
static uint64_t callback_via;75,2284
static int __devinit init_xen_info(77,2315
static unsigned long platform_mmio;104,2893
static unsigned long platform_mmio_alloc;105,2929
static unsigned long platform_mmiolen;106,2971
unsigned long alloc_xen_mmio(108,3011
static uint32_t xen_cpuid_base(121,3242
static int init_hypercall_stubs(140,3671
static void resume_hypercall_stubs(193,4992
#define init_hypercall_stubs(216,5468
#define resume_hypercall_stubs(217,5504
static uint64_t get_callback_via(221,5556
static int set_callback_via(251,6271
#define XEN_IOPORT_BASE 267,6614
#define XEN_IOPORT_PLATFLAGS	269,6644
#define XEN_IOPORT_MAGIC	270,6721
#define XEN_IOPORT_UNPLUG	271,6792
#define XEN_IOPORT_DRVVER	272,6864
#define XEN_IOPORT_SYSLOG	274,6937
#define XEN_IOPORT_PROTOVER	275,7009
#define XEN_IOPORT_PRODNUM	276,7083
#define XEN_IOPORT_MAGIC_VAL 278,7157
#define XEN_IOPORT_LINUX_PRODNUM 279,7193
#define XEN_IOPORT_LINUX_DRVVER 280,7265
#define UNPLUG_ALL_IDE_DISKS 282,7333
#define UNPLUG_ALL_NICS 283,7364
#define UNPLUG_AUX_IDE_DISKS 284,7390
#define UNPLUG_ALL 285,7421
static int check_platform_magic(287,7443
static int __devinit platform_pci_init(352,8906
#define XEN_PLATFORM_VENDOR_ID 434,10560
#define XEN_PLATFORM_DEVICE_ID 435,10598
static struct pci_device_id platform_pci_tbl[] __devinitdata 436,10636
static struct pci_driver platform_driver 446,10942
static int pci_device_registered;452,11071
void platform_pci_resume(454,11106
static int __init platform_pci_module_init(471,11464

unmodified_drivers/linux-2.6/platform-pci/platform-pci.h,35
#define _XEN_PLATFORM_PCI_H23,938

tools/xenmon/setmask.c,130
typedef struct { int counter;36,1277
typedef struct { int counter; } atomic_t;36,1277
#define XENMON 39,1343
int main(41,1536

tools/xenmon/xenbaked.h,1326
#define __QOS_H__27,1057
#define million 30,1092
#define billion 31,1118
#define QOS_ADD(34,1201
#define QOS_INCR(35,1255
#define QOS_DECR(36,1306
#define MAX_NAME_SIZE 38,1359
#define IDLE_DOMAIN_ID 39,1384
#define NDOMAINS 42,1469
#define NSAMPLES 45,1526
#define ID(47,1548
#define DEFAULT_TBUF_SIZE 48,1594
  uint64_t last_update_time;53,1662
  uint64_t start_time;54,1691
  uint64_t runnable_start_time;55,1750
  uint64_t blocked_start_time;56,1817
  uint64_t ns_since_boot;57,1882
  uint64_t ns_oncpu_since_boot;58,1936
  int runnable_at_last_update;60,2051
  int runnable;61,2139
  int in_use;64,2304
  domid_t  id;65,2324
  char     name[name66,2339
} _domain_info;67,2371
    uint64_t ns_gotten[ns_gotten77,2500
    uint64_t ns_allocated[ns_allocated78,2572
    uint64_t ns_waiting[ns_waiting79,2639
    uint64_t ns_blocked[ns_blocked81,2805
    uint64_t switchin_count[switchin_count82,2861
    uint64_t io_count[io_count83,2939
    uint64_t ns_passed;84,2972
    uint64_t timestamp;85,3064
    uint64_t lost_records;86,3088
    uint64_t flip_free_periods;87,3160
  } qdata[qdata88,3251
  _domain_info domain_info[domain_info90,3275
  int next_datapoint;93,3341
  int ncpu;94,3363
  int structlen;95,3375
  int measurement_frequency;98,3409
} _new_qos_data;100,3456

tools/xenmon/xenbaked.c,2858
#define PERROR(47,1633
typedef struct { int counter;55,2042
typedef struct { int counter; } atomic_t;55,2042
#define _atomic_read(56,2084
#define NEW_DATA_THRESH 65,2329
#define POLL_SLEEP_MILLIS 68,2432
#define MS_PER_SAMPLE 71,2516
#define MHZ74,2563
#define CPU_FREQ 75,2575
typedef struct settings_st 79,2683
    struct timespec poll_sleep;80,2712
    unsigned long new_data_thresh;81,2744
    unsigned long ms_per_sample;82,2779
    double cpu_freq;83,2812
} settings_t;84,2833
struct t_struct 86,2848
    const struct t_info *t_info;t_info87,2866
    struct t_buf **meta;meta88,2957
    unsigned char **data;data89,3025
settings_t opts;92,3099
int interrupted 94,3117
int rec_count 95,3172
int wakeups 96,3191
time_t start_time;97,3208
int dom0_flips 98,3227
_new_qos_data *new_qos;new_qos100,3248
_new_qos_data **cpu_qos_data;cpu_qos_data101,3272
int global_cpu;103,3303
uint64_t global_now;104,3319
int *running running107,3395
int NCPU 110,3453
static void init_current(119,3643
static int is_current(126,3818
static int current(139,4062
static void set_current(145,4127
static void close_handler(152,4206
void dump_record(158,4276
static struct timespec millis_to_timespec(169,4578
    int event_count;182,4787
    int event_id;183,4808
    char *text;text184,4826
} stat_map_t;185,4842
stat_map_t stat_map[stat_map187,4857
static void check_gotten_sum(205,5499
static void dump_stats(229,6025
static void log_event(253,6615
int virq_port;270,6965
xc_evtchn *xce_handle xce_handle271,6980
static int eventchn_init(275,7083
static void wait_for_event(295,7510
static void get_tbufs(329,8368
static void disable_tracing(350,8772
static struct t_struct *map_tbufs(map_tbufs365,9197
static unsigned int get_num_cpus(434,11220
static int monitor_tbufs(457,11713
const char *program_version program_version549,14560
const char *program_bug_address program_bug_address550,14611
#define xstr(552,14670
#define str(553,14693
static void usage(555,14712
#define USAGE_STR 557,14738
static long argtol(582,15905
static void parse_args(603,16397
#define SHARED_MEM_FILE 648,17727
static void alloc_qos_data(649,17771
int main(695,19007
static void qos_init_domain(727,19785
static void global_init_domain(757,20825
static int indexof(772,21147
static int domain_runnable(829,22994
static void update_blocked_time(835,23096
static void advance_next_datapoint(856,23796
static void qos_update_thread(881,24570
static void qos_update_all(959,27455
static void qos_update_thread_stats(969,27668
static void qos_switch_in(982,28011
static void qos_switch_out(1005,28896
static void qos_state_sleeping(1043,30035
static void qos_kill_thread(1061,30550
static void qos_state_runnable(1074,30816
static void qos_count_packets(1094,31291
static int process_record(1111,31698

tools/console/client/main.c,494
	struct timeval tv;98,2501
	fd_set watch_fdset;99,2521
	int xs_fd 100,2542
	int start,101,2583
	int start, now;101,2583
	unsigned int len 102,2600
	char *pty_path,pty_path103,2623
	char *pty_path, **watch_paths;watch_paths103,2623
	start 105,2656
static void init_term(157,4119
static void restore_term(170,4322
static int console_loop(175,4411
       CONSOLE_INVAL,259,6008
       CONSOLE_PV,260,6030
       CONSOLE_SERIAL,261,6049
} console_type;262,6072
int main(264,6089

tools/console/daemon/io.c,2220
#define _GNU_SOURCE21,835
#define MAX(47,1319
#define MIN(48,1363
#define MAX_STRLEN(51,1484
#define RATE_LIMIT_ALLOWANCE 54,1612
#define RATE_LIMIT_PERIOD 56,1685
static int log_time_hv_needts 66,1890
static int log_time_guest_needts 67,1925
static int log_hv_fd 68,1963
static evtchn_port_or_error_t log_hv_evtchn 69,1990
static xc_interface *xch;xch70,2040
static xc_evtchn *xce_handle xce_handle71,2115
struct buffer 73,2153
	char *data;data74,2169
	size_t consumed;75,2182
	size_t size;76,2200
	size_t capacity;77,2214
	size_t max_capacity;78,2232
struct domain 81,2258
	int domid;82,2274
	int master_fd;83,2286
	int slave_fd;84,2302
	int log_fd;85,2317
	bool is_dead;86,2330
	struct buffer buffer;87,2345
	struct domain *next;next88,2368
	char *conspath;conspath89,2390
	int ring_ref;90,2407
	evtchn_port_or_error_t local_port;91,2422
	evtchn_port_or_error_t remote_port;92,2458
	xc_evtchn *xce_handle;xce_handle93,2495
	struct xencons_interface *interface;interface94,2519
	int event_count;95,2557
	long long next_period;96,2575
static struct domain *dom_head;dom_head99,2603
static int write_all(101,2636
static int write_with_timestamp(116,2872
static void buffer_append(147,3613
static bool buffer_empty(224,5722
static void buffer_advance(229,5802
static bool domain_is_valid(243,6173
static int create_hv_log(254,6350
static int create_domain_log(278,6981
static void domain_close_tty(323,8023
static int openpty(337,8250
void cfmakeraw(382,8988
static int domain_create_tty(396,9354
static int xs_gather(470,11055
static int domain_create_ring(504,11683
static bool watch_domain(591,13664
static struct domain *create_domain(create_domain611,14096
static struct domain *lookup_domain(lookup_domain675,15461
static void remove_domain(685,15635
static void cleanup_domain(700,15881
static void shutdown_domain(718,16129
void enum_domains(730,16398
static int ring_free_bytes(749,16746
static void handle_tty_read(765,17079
static void handle_tty_write(812,18058
static void handle_ring_read(837,18565
static void handle_xs(855,18886
static void handle_hv_logs(879,19385
static void handle_log_reload(906,20052
void handle_io(924,20354

tools/console/daemon/utils.h,23
#define dolog(44,1294

tools/console/daemon/utils.c,52
	fd 90,1860
	len 99,1999
bool xen_setup(109,2215

tools/console/testsuite/console-domU.c,49
static void canonicalize(9,155
int main(23,360

tools/console/testsuite/procpipe.c,308
#define PACKAGE_NAME 13,218
#define PACKAGE_VERSION 14,250
#define GPL_SHORT 16,283
#define PACKAGE_BUGS 20,462
#define PACKAGE_AUTHOR 21,505
#define PACKAGE_OWNER 22,546
#define PACKAGE_LICENSE 23,581
static void usage(25,616
static void version(36,902
static pid_t exec(47,1162
int main(64,1439

tools/console/testsuite/console-dom0.c,113
#define MIN(10,175
static void generate_random_buffer(12,220
static void canonicalize(21,360
int main(35,565

tools/ocaml/libs/mmap/mmap_stubs.h,95
#define C_MMAP_H18,693
struct mmap_interface27,863
	void *addr;addr29,887
	int len;30,900

tools/ocaml/libs/mmap/mmap_stubs.c,275
#define GET_C_STRUCT(31,954
static int mmap_interface_init(33,1009
CAMLprim value stub_mmap_init(42,1310
CAMLprim value stub_mmap_final(71,2156
CAMLprim value stub_mmap_read(84,2411
CAMLprim value stub_mmap_write(107,2933
CAMLprim value stub_mmap_getpagesize(129,3456

tools/ocaml/libs/xc/xc.h,916
typedef xen_domctl_getdomaininfo_t xc_domaininfo_t;30,984
typedef xen_domctl_getvcpuinfo_t xc_vcpuinfo_t;31,1036
typedef xen_sysctl_physinfo_t xc_physinfo_t;32,1084
struct xc_core_header 34,1130
	unsigned int xch_magic;35,1154
	unsigned int xch_nr_vcpus;36,1179
	unsigned int xch_nr_pages;37,1207
	unsigned int xch_ctxt_offset;38,1235
	unsigned int xch_index_offset;39,1266
	unsigned int xch_pages_offset;40,1298
	vcpu_guest_context_x86_64_t x64;45,1395
	vcpu_guest_context_x86_32_t x32;46,1429
	vcpu_guest_context_t c;48,1470
} vcpu_guest_context_any_t;49,1495
#define SAFEDIV(171,7997
#define COMPAT_FIELD_physinfo_get_nr_cpus(172,8053
#define COMPAT_FIELD_physinfo_get_sockets_per_node(173,8111
#define COMPAT_FIELD_physinfo_get_nr_cpus(176,8257
#define COMPAT_FIELD_physinfo_get_sockets_per_node(179,8402
#define COMPAT_FIELD_ADDRESS_BITS	183,8536
#define COMPAT_FIELD_ADDRESS_BITS	185,8587

tools/ocaml/libs/xc/xc_cpuid.h,523
#define XC_CPUID_H2,19
#define bitmaskof(8,96
#define clear_bit(9,145
#define set_bit(10,206
#define DEF_MAX_BASE 12,267
#define DEF_MAX_EXT 13,300
static void xc_cpuid(15,334
enum { CPU_BRAND_INTEL,28,715
enum { CPU_BRAND_INTEL, CPU_BRAND_AMD,28,715
enum { CPU_BRAND_INTEL, CPU_BRAND_AMD, CPU_BRAND_UNKNOWN 28,715
static int xc_cpuid_brand_get(30,776
static int hypervisor_is_64bit(49,1168
static void do_hvm_cpuid_policy(56,1361
static void do_pv_cpuid_policy(205,5554
static void do_cpuid_policy(275,7691

tools/ocaml/libs/xc/xc_stubs.c,3851
#define _XOPEN_SOURCE 17,676
#define CAML_NAME_SPACE20,723
#define PAGE_SHIFT	35,978
#define PAGE_SIZE 36,1001
#define PAGE_MASK 37,1053
#define _H(39,1103
#define _D(40,1134
#define Val_none 42,1176
#define string_of_option_array(44,1207
#define cpuid_input_of_val(49,1442
void failwith_xc(56,1714
CAMLprim value stub_sizeof_core_header(61,1814
CAMLprim value stub_sizeof_vcpu_guest_context(67,1942
CAMLprim value stub_sizeof_xen_pfn(73,2081
#define XC_CORE_MAGIC 79,2193
#define XC_CORE_MAGIC_HVM 80,2230
CAMLprim value stub_marshall_core_header(82,2268
CAMLprim value stub_xc_interface_open(102,2885
CAMLprim value stub_xc_interface_open_fake(112,3068
CAMLprim value stub_xc_using_injection(117,3143
CAMLprim value stub_xc_interface_close(126,3277
static int domain_create_flag_table[domain_create_flag_table138,3515
CAMLprim value stub_xc_domain_create(143,3609
CAMLprim value stub_xc_domain_setvmxassist(179,4499
CAMLprim value stub_xc_domain_max_vcpus(193,4798
value stub_xc_domain_sethandle(207,5103
static value dom_op(227,5546
CAMLprim value stub_xc_domain_pause(242,5895
CAMLprim value stub_xc_domain_unpause(248,6018
CAMLprim value stub_xc_domain_destroy(253,6144
CAMLprim value stub_xc_domain_resume_fast(258,6270
CAMLprim value stub_xc_domain_shutdown(263,6404
static value alloc_domaininfo(275,6658
CAMLprim value stub_xc_domain_getinfolist(310,8001
CAMLprim value stub_xc_domain_getinfo(352,9133
CAMLprim value stub_xc_vcpu_getinfo(367,9440
CAMLprim value stub_xc_vcpu_context_get(394,10218
CAMLprim value stub_xc_vcpu_setaffinity(410,10651
CAMLprim value stub_xc_vcpu_getaffinity(425,11071
CAMLprim value stub_xc_sched_id(441,11480
CAMLprim value stub_xc_evtchn_alloc_unbound(451,11667
CAMLprim value stub_xc_evtchn_reset(471,12291
#define RING_SIZE 483,12494
static char ring[ring484,12518
CAMLprim value stub_xc_readconsolering(486,12548
CAMLprim value stub_xc_send_debug_keys(504,12951
CAMLprim value stub_xc_physinfo(515,13169
CAMLprim value stub_xc_pcpu_info(553,14306
CAMLprim value stub_xc_domain_setmaxmem(589,15049
CAMLprim value stub_xc_domain_set_memmap_limit(606,15566
CAMLprim value stub_xc_domain_memory_increase_reservation(621,15940
CAMLprim value stub_xc_domain_set_machine_address_size(641,16631
CAMLprim value stub_xc_domain_get_machine_address_size(656,17029
CAMLprim value stub_xc_domain_cpuid_set(668,17355
CAMLprim value stub_xc_domain_cpuid_apply(705,18450
CAMLprim value stub_xc_cpuid_check(715,18712
CAMLprim value stub_xc_version_version(754,19675
CAMLprim value stub_xc_version_compile_info(781,20297
static value xc_version_single_string(807,20934
CAMLprim value stub_xc_version_changeset(824,21283
CAMLprim value stub_xc_version_capabilities(832,21442
CAMLprim value stub_pages_to_kib(840,21610
CAMLprim value stub_map_foreign_range(848,21752
CAMLprim value stub_sched_credit_domain_get(876,22571
CAMLprim value stub_sched_credit_domain_set(896,23064
CAMLprim value stub_shadow_allocation_get(914,23564
CAMLprim value stub_shadow_allocation_set(931,23923
CAMLprim value stub_xc_domain_get_pfn_list(948,24291
CAMLprim value stub_xc_domain_ioport_permission(980,25010
CAMLprim value stub_xc_domain_iomem_permission(1001,25546
CAMLprim value stub_xc_domain_irq_permission(1022,26085
CAMLprim value stub_xc_hvm_check_pvdriver(1041,26486
CAMLprim value stub_xc_domain_test_assign_device(1052,26720
CAMLprim value stub_xc_domain_assign_device(1068,27185
CAMLprim value stub_xc_domain_deassign_device(1086,27656
CAMLprim value stub_xc_domain_set_timer_mode(1104,28133
CAMLprim value stub_xc_domain_set_hpet(1115,28383
CAMLprim value stub_xc_domain_set_vpt_align(1126,28621
CAMLprim value stub_xc_watchdog(1137,28869
CAMLprim value stub_xc_domain_send_s3resume(1150,29162
CAMLprim value stub_xc_domain_get_acpi_s_state(1157,29338

tools/ocaml/libs/xc/xc_e820.h,235
#define __XC_E820_H__2,22
#define E820_RAM 9,125
#define E820_RESERVED 10,153
#define E820_ACPI 11,181
#define E820_NVS 12,209
struct e820entry 14,238
    uint64_t addr;15,257
    uint64_t size;16,276
    uint32_t type;17,295

tools/ocaml/libs/xc/xc_lib.c,3521
#define PAGE_SHIFT	32,941
#define PAGE_SIZE 33,964
#define PAGE_MASK 34,1016
#define MIN(36,1066
#define DECLARE_DOMCTL(38,1113
#define DECLARE_SYSCTL(45,1288
#define DECLARE_HYPERCALL2(51,1429
#define DECLARE_HYPERCALL0(57,1608
#define DECLARE_HYPERCALL1(58,1673
#define ERROR_STRLEN 62,1808
static char __error_str[__error_str64,1834
char * xc_error_get(66,1874
static void xc_error_set(71,1926
static void xc_error_dom_set(82,2152
void xc_error_clear(97,2573
char * xc_error_get(102,2651
#define xc_error_set(106,2693
#define xc_error_dom_set(107,2740
#define xc_error_clear(108,2795
#define xc_error_hypercall(111,2844
int xc_using_injection(114,2995
int xc_interface_open(120,3061
int xc_interface_close(151,3604
static int do_xen_hypercall(162,3798
static int do_domctl(167,3950
static int do_sysctl(185,4336
static int do_evtchnctl(203,4722
static int do_memctl_reservation(220,5112
static int do_ioctl(255,6284
static void * do_mmap(260,6374
int xc_get_hvm_param(266,6548
static int xc_set_hvm_param(290,7107
int xc_domain_create(315,7678
int xc_domain_pause(334,8238
int xc_domain_unpause(345,8453
int xc_hvm_check_pvdriver(357,8747
static int modify_returncode_register(379,9292
int xc_domain_resume_fast(427,10444
int xc_domain_destroy(444,10799
int xc_domain_shutdown(457,11064
static void bitmap_64_to_byte(481,11644
static void bitmap_byte_to_64(496,11978
int xc_vcpu_setaffinity(511,12326
int xc_vcpu_getaffinity(536,13076
int xc_vcpu_context_get(561,13831
int xc_domain_getinfolist(584,14480
int xc_domain_getinfo(612,15457
int xc_domain_setmaxmem(632,16034
int xc_domain_set_memmap_limit(644,16339
int xc_domain_set_time_offset(683,17293
int xc_domain_memory_increase_reservation(695,17621
int xc_domain_memory_decrease_reservation(721,18501
int xc_domain_memory_populate_physmap(751,19474
int xc_domain_setvmxassist(775,20286
int xc_domain_max_vcpus(790,20657
int xc_domain_sethandle(802,20941
int xc_vcpu_getinfo(815,21297
int xc_domain_ioport_permission(831,21694
int xc_vcpu_getcontext(843,22152
int xc_vcpu_setcontext(863,22697
int xc_domain_irq_permission(884,23243
int xc_domain_iomem_permission(899,23691
long long xc_domain_get_cpu_usage(916,24300
void *xc_map_foreign_range(xc_map_foreign_range929,24655
int xc_map_foreign_ranges(961,25547
int xc_readconsolering(980,25967
int xc_send_debug_keys(1008,26681
int xc_physinfo(1030,27205
int xc_pcpu_info(1044,27500
int xc_sched_id(1067,28091
int xc_version(1081,28359
int xc_evtchn_alloc_unbound(1118,29286
int xc_evtchn_reset(1136,29713
int xc_sched_credit_domain_set(1149,29973
int xc_sched_credit_domain_get(1164,30444
int xc_shadow_allocation_get(1181,30923
int xc_shadow_allocation_set(1196,31274
int xc_domain_get_pfn_list(1210,31616
#define MARSHALL_BDF(1232,32245
int xc_domain_assign_device(1235,32340
int xc_domain_deassign_device(1250,32766
int xc_domain_test_assign_device(1265,33202
int xc_domain_watchdog(1280,33653
int xc_domain_set_machine_address_size(1304,34165
int xc_domain_get_machine_address_size(1317,34473
int xc_domain_cpuid_set(1329,34784
int xc_domain_cpuid_apply(1395,36329
int xc_cpuid_check(1454,37723
#define HVM_PARAM_HPET_ENABLED 1496,38598
#define HVM_PARAM_ACPI_S_STATE 1500,38671
#define HVM_PARAM_VPT_ALIGN 1504,38741
int xc_domain_send_s3resume(1507,38780
int xc_domain_set_timer_mode(1512,38913
int xc_domain_set_hpet(1518,39099
int xc_domain_set_vpt_align(1523,39256
int xc_domain_get_acpi_s_state(1528,39425

tools/ocaml/libs/xc/xc_cpufeature.h,3305
#define __LIBXC_CPUFEATURE_H2,29
#define X86_FEATURE_FPU	5,130
#define X86_FEATURE_VME	6,183
#define X86_FEATURE_DE	7,248
#define X86_FEATURE_PSE 8,309
#define X86_FEATURE_TSC	9,371
#define X86_FEATURE_MSR	10,431
#define X86_FEATURE_PAE	11,511
#define X86_FEATURE_MCE	12,580
#define X86_FEATURE_CX8	13,648
#define X86_FEATURE_APIC	14,710
#define X86_FEATURE_SEP	15,764
#define X86_FEATURE_MTRR	16,822
#define X86_FEATURE_PGE	17,891
#define X86_FEATURE_MCA	18,951
#define X86_FEATURE_CMOV	19,1019
#define X86_FEATURE_PAT	20,1116
#define X86_FEATURE_PSE36	21,1178
#define X86_FEATURE_PN	22,1232
#define X86_FEATURE_CLFLSH	23,1296
#define X86_FEATURE_DS	24,1372
#define X86_FEATURE_ACPI	25,1424
#define X86_FEATURE_MMX	26,1478
#define X86_FEATURE_FXSR	27,1541
#define X86_FEATURE_XMM	29,1699
#define X86_FEATURE_XMM2	30,1766
#define X86_FEATURE_SELFSNOOP	31,1835
#define X86_FEATURE_HT	32,1896
#define X86_FEATURE_ACC	33,1952
#define X86_FEATURE_IA64	34,2017
#define X86_FEATURE_PBE	35,2074
#define X86_FEATURE_SYSCALL	39,2268
#define X86_FEATURE_MP	40,2327
#define X86_FEATURE_NX	41,2379
#define X86_FEATURE_MMXEXT	42,2435
#define X86_FEATURE_FFXSR 43,2497
#define X86_FEATURE_PAGE1GB	44,2577
#define X86_FEATURE_RDTSCP	45,2644
#define X86_FEATURE_LM	46,2694
#define X86_FEATURE_3DNOWEXT	47,2753
#define X86_FEATURE_3DNOW	48,2820
#define X86_FEATURE_RECOVERY	51,2939
#define X86_FEATURE_LONGRUN	52,3005
#define X86_FEATURE_LRTI	53,3071
#define X86_FEATURE_CXMMX	57,3265
#define X86_FEATURE_K6_MTRR	58,3328
#define X86_FEATURE_CYRIX_ARR	59,3397
#define X86_FEATURE_CENTAUR_MCR	60,3464
#define X86_FEATURE_K8	62,3573
#define X86_FEATURE_K7	63,3631
#define X86_FEATURE_P3	64,3678
#define X86_FEATURE_P4	65,3721
#define X86_FEATURE_CONSTANT_TSC 66,3764
#define X86_FEATURE_XMM3	69,3914
#define X86_FEATURE_DTES64	70,3983
#define X86_FEATURE_MWAIT	71,4045
#define X86_FEATURE_DSCPL	72,4109
#define X86_FEATURE_VMXE	73,4177
#define X86_FEATURE_SMXE	74,4245
#define X86_FEATURE_EST	75,4308
#define X86_FEATURE_TM2	76,4368
#define X86_FEATURE_SSSE3	77,4427
#define X86_FEATURE_CID	78,4510
#define X86_FEATURE_CX16 79,4562
#define X86_FEATURE_XTPR	80,4621
#define X86_FEATURE_PDCM	81,4690
#define X86_FEATURE_DCA	82,4757
#define X86_FEATURE_SSE4_1	83,4818
#define X86_FEATURE_SSE4_2	84,4891
#define X86_FEATURE_POPCNT	85,4964
#define X86_FEATURE_HYPERVISOR	86,5026
#define X86_FEATURE_XSTORE	89,5181
#define X86_FEATURE_XSTORE_EN	90,5257
#define X86_FEATURE_XCRYPT	91,5322
#define X86_FEATURE_XCRYPT_EN	92,5393
#define X86_FEATURE_ACE2	93,5461
#define X86_FEATURE_ACE2_EN	94,5534
#define X86_FEATURE_PHE	95,5593
#define X86_FEATURE_PHE_EN	96,5655
#define X86_FEATURE_PMM	97,5711
#define X86_FEATURE_PMM_EN	98,5783
#define X86_FEATURE_LAHF_LM	101,5907
#define X86_FEATURE_CMP_LEGACY	102,5974
#define X86_FEATURE_SVME 103,6053
#define X86_FEATURE_EXTAPICSPACE 104,6124
#define X86_FEATURE_ALTMOVCR	105,6193
#define X86_FEATURE_ABM	106,6264
#define X86_FEATURE_SSE4A	107,6331
#define X86_FEATURE_MISALIGNSSE	108,6406
#define X86_FEATURE_3DNOWPF	109,6476
#define X86_FEATURE_OSVW	110,6536
#define X86_FEATURE_IBS	111,6599
#define X86_FEATURE_SSE5	112,6668
#define X86_FEATURE_SKINIT	113,6742
#define X86_FEATURE_WDT	114,6809

tools/ocaml/libs/xl/xl_stubs.c,2286
#define CAML_NAME_SPACE18,655
struct caml_logger 31,888
	struct xentoollog_logger logger;32,909
	int log_offset;33,943
	char log_buf[log_buf34,960
typedef struct caml_gc 37,985
	int offset;38,1010
	void *ptrs[ptrs39,1023
} caml_gc;40,1040
void log_vmessage(42,1052
void log_destroy(51,1430
#define INIT_STRUCT(55,1486
#define INIT_CTX(57,1581
#define FREE_CTX(66,1882
static void * gc_calloc(71,1978
static char * dup_String_val(81,2172
static void gc_free(94,2425
void failwith_xl(102,2531
static int string_string_tuple_array_val 109,2692
static int domain_create_info_val 130,3226
static int domain_build_info_val 154,3945
static int device_disk_val(188,5276
static int device_nic_val(203,5729
static int device_console_val(230,6416
static int device_vkb_val(241,6692
static int device_vfb_val(251,6888
static int device_pci_val(270,7503
		unsigned int value;273,7587
			unsigned int reserved1:reserved1275,7620
			unsigned int reg:reg276,7649
			unsigned int func:func277,7672
			unsigned int dev:dev278,7696
			unsigned int bus:bus279,7719
			unsigned int reserved2:reserved2280,7742
			unsigned int enable:enable281,7771
		}fields;fields282,7797
static int sched_credit_val(302,8244
static int domain_build_state_val(310,8433
static value Val_sched_credit(322,8740
static value Val_domain_build_state(335,8963
static value Val_physinfo(350,9323
value stub_xl_domain_make(376,10128
value stub_xl_domain_build(397,10472
value stub_xl_disk_add(422,10964
value stub_xl_disk_remove(440,11325
value stub_xl_nic_add(458,11679
value stub_xl_nic_remove(476,12035
value stub_xl_console_add(494,12384
value stub_xl_vkb_add(515,12894
value stub_xl_vkb_clean_shutdown(534,13252
value stub_xl_vkb_hard_shutdown(549,13520
value stub_xl_vfb_add(564,13785
value stub_xl_vfb_clean_shutdown(583,14143
value stub_xl_vfb_hard_shutdown(598,14411
value stub_xl_pci_add(613,14676
value stub_xl_pci_remove(631,15002
value stub_xl_pci_shutdown(649,15340
value stub_xl_button_press(664,15590
value stub_xl_physinfo(679,15887
value stub_xl_sched_credit_domain_get(697,16207
value stub_xl_sched_credit_domain_set(715,16582
value stub_xl_send_trigger(733,16965
value stub_xl_send_sysrq(750,17342
value stub_xl_send_debug_keys(764,17613

tools/ocaml/libs/log/syslog_stubs.c,185
static int __syslog_level_table[__syslog_level_table23,798
static int __syslog_facility_table[__syslog_facility_table34,1045
value stub_syslog(59,1979
value stub_closelog(70,2271

tools/ocaml/libs/eventchn/eventchn_stubs.c,525
#define CAML_NAME_SPACE29,917
#define EVENTCHN_PATH 37,1093
static int do_ioctl(39,1134
static int do_read_port(44,1224
static int do_write_port(49,1364
int eventchn_do_open(54,1506
CAMLprim value stub_eventchn_init(59,1575
CAMLprim value stub_eventchn_notify(68,1748
CAMLprim value stub_eventchn_bind_interdomain(82,2048
CAMLprim value stub_eventchn_bind_virq(100,2550
CAMLprim value stub_eventchn_unbind(116,2873
CAMLprim value stub_eventchn_read_port(130,3173
CAMLprim value stub_eventchn_write_port(143,3410

tools/ocaml/libs/xb/xb_stubs.c,132
CAMLprim value stub_header_size(33,980
CAMLprim value stub_header_of_string(39,1088
CAMLprim value stub_string_of_header(56,1560

tools/ocaml/libs/xb/xs_ring_stubs.c,207
#define GET_C_STRUCT(36,1027
#define xen_mb(39,1097
static int xs_ring_read(42,1127
static int xs_ring_write(66,1727
CAMLprim value ml_interface_read(90,2403
CAMLprim value ml_interface_write(104,2737

tools/libaio/src/syscall-ppc.h,727
#define __NR_io_setup	4,44
#define __NR_io_destroy	5,71
#define __NR_io_getevents	6,100
#define __NR_io_submit	7,130
#define __NR_io_cancel	8,158
#define __syscall_nr(16,455
#define __sc_loadargs_0(45,1461
#define __sc_loadargs_1(47,1529
#define __sc_loadargs_2(50,1635
#define __sc_loadargs_3(53,1751
#define __sc_loadargs_4(56,1878
#define __sc_loadargs_5(59,2015
#define __sc_asm_input_0 63,2164
#define __sc_asm_input_1 64,2202
#define __sc_asm_input_2 65,2258
#define __sc_asm_input_3 66,2314
#define __sc_asm_input_4 67,2370
#define __sc_asm_input_5 68,2426
#define io_syscall1(70,2483
#define io_syscall2(76,2625
#define io_syscall3(82,2791
#define io_syscall4(88,2984
#define io_syscall5(94,3203

tools/libaio/src/io_queue_release.c,29
int io_queue_release(24,909

tools/libaio/src/io_queue_wait.c,62
#define NO_SYSCALL_ERRNO19,815
int io_queue_wait_0_4(27,942

tools/libaio/src/syscall-x86_64.h,348
#define __NR_io_setup	1,0
#define __NR_io_destroy	2,27
#define __NR_io_getevents	3,56
#define __NR_io_submit	4,86
#define __NR_io_cancel	5,114
#define __syscall_clobber 7,143
#define __syscall 8,191
#define io_syscall1(10,220
#define io_syscall2(20,488
#define io_syscall3(30,794
#define io_syscall4(41,1146
#define io_syscall5(52,1563

tools/libaio/src/io_queue_init.c,26
int io_queue_init(26,928

tools/libaio/src/syscall.h,91
#define _SYMSTR(4,46
#define SYMSTR(5,72
#define SYMVER(7,106
#define DEFSYMVER(10,244

tools/libaio/src/compat-0_1.c,106
int compat0_1_io_cancel(32,1091
int compat0_1_io_queue_wait(41,1346
int compat0_1_io_getevents(52,1656

tools/libaio/src/io_cancel.c,20
io_syscall3(22,859

tools/libaio/src/syscall-ia64.h,352
#define __NR_io_setup	1,0
#define __NR_io_destroy	2,28
#define __NR_io_getevents	3,58
#define __NR_io_submit	4,89
#define __NR_io_cancel	5,118
#define __ia64_raw_syscall(7,148
#define io_syscall0(23,612
#define io_syscall1(27,711
#define io_syscall2(31,842
#define io_syscall3(35,994
#define io_syscall4(39,1170
#define io_syscall5(43,1371

tools/libaio/src/libaio.h,2084
#define __LIBAIO_H24,920
typedef struct io_context *io_context_t;io_context_t38,1086
typedef enum io_iocb_cmd 40,1128
	IO_CMD_PREAD 41,1155
	IO_CMD_PWRITE 42,1174
	IO_CMD_FSYNC 44,1195
	IO_CMD_FDSYNC 45,1214
	IO_CMD_POLL 47,1235
	IO_CMD_NOOP 48,1253
} io_iocb_cmd_t;49,1271
#define PADDED(52,1340
#define PADDEDptr(53,1375
#define PADDEDul(54,1413
#define PADDED(56,1533
#define PADDEDptr(57,1559
#define PADDEDul(58,1585
#define PADDED(60,1679
#define PADDEDptr(61,1714
#define PADDEDul(62,1739
#define PADDED(64,1828
#define PADDEDptr(65,1863
#define PADDEDul(66,1901
#define PADDED(68,2003
#define PADDEDptr(69,2038
#define PADDEDul(70,2063
#define PADDED(72,2152
#define PADDEDptr(73,2187
#define PADDEDul(74,2225
struct io_iocb_poll 79,2305
	PADDED(80,2327
struct io_iocb_sockaddr 83,2419
	struct sockaddr *addr;addr84,2445
	int		len;85,2469
struct io_iocb_common 88,2547
	PADDEDptr(89,2571
	PADDEDul(90,2602
	long long	offset;91,2629
	long long	__pad3,92,2648
	long long	__pad3, __pad4;92,2648
struct io_iocb_vector 95,2730
	const struct iovec	*vec;vec96,2754
	int			nr;97,2780
	long long		offset;98,2791
struct iocb 101,2866
	PADDEDptr(102,2880
	PADDED(103,2952
	short		aio_lio_opcode;105,3025
	short		aio_reqprio;106,3050
	int		aio_fildes;107,3071
		struct io_iocb_common		c;110,3099
		struct io_iocb_vector		v;111,3127
		struct io_iocb_poll		poll;112,3155
		struct io_iocb_sockaddr	saddr;113,3184
	} u;114,3217
struct io_event 117,3227
	PADDEDptr(118,3245
	PADDEDptr(119,3277
	PADDEDul(120,3316
	PADDEDul(121,3341
#undef PADDED124,3370
#undef PADDEDptr125,3384
#undef PADDEDul126,3401
typedef void (*io_callback_t)io_callback_t128,3418
static inline void io_set_callback(145,4214
static inline void io_prep_pread(150,4317
static inline void io_prep_pwrite(161,4621
static inline void io_prep_poll(172,4927
static inline int io_poll(181,5152
static inline void io_prep_fsync(188,5353
static inline int io_fsync(196,5537
static inline void io_prep_fdsync(203,5720
static inline int io_fdsync(211,5906

tools/libaio/src/syscall-alpha.h,693
#define __NR_io_setup	1,0
#define __NR_io_destroy	2,27
#define __NR_io_getevents	3,56
#define __NR_io_submit	4,86
#define __NR_io_cancel	5,114
#define inline_syscall_r0_asm7,143
#define inline_syscall_r0_out_constraint 8,173
#define inline_syscall_clobbers 10,227
#define inline_syscall0(14,388
#define inline_syscall1(30,1294
#define inline_syscall2(48,2332
#define inline_syscall3(68,3502
#define inline_syscall4(91,4870
#define inline_syscall5(115,6304
#define inline_syscall6(141,7870
#define INLINE_SYSCALL1(169,9568
#define io_syscall1(180,10022
#define io_syscall2(186,10257
#define io_syscall3(192,10449
#define io_syscall4(198,10661
#define io_syscall5(204,10897

tools/libaio/src/syscall-s390.h,321
#define __NR_io_setup	1,0
#define __NR_io_destroy	2,27
#define __NR_io_getevents	3,56
#define __NR_io_submit	4,86
#define __NR_io_cancel	5,114
#define io_svc_clobber 7,143
#define io_syscall1(9,187
#define io_syscall2(29,707
#define io_syscall3(51,1314
#define io_syscall4(76,2024
#define io_syscall5(103,2822

tools/libaio/src/io_queue_run.c,25
int io_queue_run(24,893

tools/libaio/src/syscall-i386.h,289
#define __NR_io_setup	1,0
#define __NR_io_destroy	2,27
#define __NR_io_getevents	3,56
#define __NR_io_submit	4,86
#define __NR_io_cancel	5,114
#define io_syscall1(7,143
#define io_syscall2(19,438
#define io_syscall3(31,789
#define io_syscall4(44,1190
#define io_syscall5(57,1632

tools/libaio/src/io_getevents.c,400
#define AIO_RING_MAGIC 27,1069
io_syscall5(AIO_RING_MAGIC25,919
struct aio_ring 30,1153
	unsigned        id;31,1171
	unsigned        nr;32,1231
	unsigned        head;33,1282
	unsigned        tail;34,1305
	unsigned        magic;36,1330
	unsigned        compat_features;37,1354
	unsigned        incompat_features;38,1388
	unsigned        header_length;39,1424
int io_getevents_0_4(42,1484

tools/libaio/harness/main.c,118
#define KERNEL_RW_POINTER	14,207
#define KERNEL_RW_POINTER	17,322
char test_name[test_name21,386
int main(25,437

tools/libaio/harness/cases/common-7-8.h,39
#define SIZE	7,64
int test_main(9,82

tools/libaio/harness/cases/aio_setup.h,273
io_context_t	io_ctx;1,0
#define BAD_CTX	2,21
void aio_setup(4,57
int attempt_io_submit(14,231
int sync_submit(29,601
#define SETUP	54,1125
#define READ	57,1157
#define WRITE	58,1175
#define READ_SILENT	59,1194
#define WRITE_SILENT	60,1218
int attempt_rw(61,1243

tools/libfsimage/reiserfs/fsys_reiserfs.c,5749
#undef REISERDEBUG23,916
typedef __signed__ char __s8;30,1106
typedef unsigned char __u8;31,1136
typedef __signed__ short __s16;32,1164
typedef unsigned short __u16;33,1196
typedef __signed__ int __s32;34,1226
typedef unsigned int __u32;35,1256
typedef unsigned long long __u64;36,1284
typedef long linux_off_t;39,1344
#define __cpu_to_le64(42,1399
#define __le64_to_cpu(43,1438
#define __cpu_to_le32(44,1477
#define __le32_to_cpu(45,1516
#define __cpu_to_le16(46,1555
#define __le16_to_cpu(47,1594
struct reiserfs_super_block51,1732
  __u32 s_block_count;53,1762
  __u32 s_free_blocks;54,1814
  __u32 s_root_block;55,1881
  __u32 s_journal_block;56,1941
  __u32 s_journal_dev;57,2007
  __u32 s_journal_size;58,2070
  __u32 s_journal_trans_max;59,2180
  __u32 s_journal_magic;60,2266
  __u32 s_journal_max_batch;61,2345
  __u32 s_journal_max_commit_age;62,2434
  __u32 s_journal_max_trans_age;63,2523
  __u16 s_blocksize;64,2610
  __u16 s_oid_maxsize;65,2677
  __u16 s_oid_cursize;66,2737
  __u16 s_state;67,2800
  char s_magic[s_magic68,2867
  __u16 s_tree_height;69,2974
  __u16 s_bmap_nr;70,3040
  __u16 s_version;71,3154
  char s_unused[s_unused72,3173
#define REISERFS_MAX_SUPPORTED_VERSION 75,3233
#define REISERFS_SUPER_MAGIC_STRING 76,3274
#define REISER2FS_SUPER_MAGIC_STRING 77,3321
#define REISER3FS_SUPER_MAGIC_STRING 78,3370
#define MAX_HEIGHT 80,3420
#define JOURNAL_TRANS_HALF 83,3506
struct reiserfs_journal_desc 86,3579
  __u32 j_trans_id;87,3610
  __u32 j_len;88,3651
  __u32 j_mount_id;89,3720
  __u32 j_realblock[j_realblock90,3770
  char j_magic[j_magic91,3853
struct reiserfs_journal_commit 95,3914
  __u32 j_trans_id;96,3947
  __u32 j_len;97,4017
  __u32 j_realblock[j_realblock98,4046
  char j_digest[j_digest99,4128
struct reiserfs_journal_header 108,4534
  __u32 j_last_flush_trans_id;110,4612
  __u32 j_first_unflushed_offset;112,4708
  __u32 j_mount_id;114,4791
#define JOURNAL_DESC_MAGIC 118,4869
struct offset_v1124,4966
  __u32 k_offset;137,5511
  __u32 k_uniqueness;138,5529
struct offset_v2141,5555
  __u64 k_offset:k_offset154,6100
  __u64 k_type:k_type155,6121
struct key159,6145
  __u32 k_dir_id;162,6222
  __u32 k_objectid;164,6266
    struct offset_v1 v1;168,6350
    struct offset_v2 v2;169,6375
  u;171,6404
#define KEY_SIZE 174,6413
struct block_head178,6591
  __u16 blk_level;180,6618
  __u16 blk_nr_item;181,6680
  __u16 blk_free_space;182,6745
  struct key  blk_right_delim_key;183,6804
#define BLKH_SIZE 186,6932
#define DISK_LEAF_NODE_LEVEL 187,6979
struct item_head189,7057
  struct key ih_key;191,7076
    __u16 ih_free_space;195,7188
    __u16 ih_entry_count;199,7511
  u;202,7658
  __u16 ih_item_len;203,7663
  __u16 ih_item_location;204,7745
  __u16 ih_version;205,7827
#define IH_SIZE 211,8065
#define ITEM_VERSION_1 213,8110
#define ITEM_VERSION_2 214,8135
#define IH_KEY_OFFSET(215,8160
#define IH_KEY_ISTYPE(219,8298
struct disk_child223,8468
  __u32		dc_block_number;225,8488
  __u16		dc_size;226,8548
#define DC_SIZE 229,8605
struct stat_data236,8804
  __u16 sd_mode;238,8823
  __u16 sd_notused1[sd_notused1239,8869
  __u32 sd_size;240,8929
  __u32 sd_size_hi;241,8962
struct reiserfs_de_head244,9033
  __u32 deh_offset;246,9059
  __u32 deh_dir_id;247,9129
  __u32 deh_objectid;249,9245
  __u16 deh_location;251,9358
  __u16 deh_state;252,9418
#define DEH_SIZE 257,9547
#define DEH_Statdata 259,9600
#define DEH_Visible 260,9651
#define SD_OFFSET 262,9682
#define SD_UNIQUENESS 263,9703
#define DOT_OFFSET 264,9727
#define DOT_DOT_OFFSET 265,9748
#define DIRENTRY_UNIQUENESS 266,9773
#define V1_TYPE_STAT_DATA 268,9806
#define V1_TYPE_DIRECT 269,9836
#define V1_TYPE_INDIRECT 270,9870
#define V1_TYPE_DIRECTORY_MAX 271,9906
#define V2_TYPE_STAT_DATA 272,9947
#define V2_TYPE_INDIRECT 273,9975
#define V2_TYPE_DIRECT 274,10002
#define V2_TYPE_DIRENTRY 275,10027
#define REISERFS_ROOT_OBJECTID 277,10056
#define REISERFS_ROOT_PARENT_OBJECTID 278,10089
#define REISERFS_DISK_OFFSET_IN_BYTES 279,10129
#define REISERFS_OLD_DISK_OFFSET_IN_BYTES 281,10245
#define REISERFS_OLD_BLOCKSIZE 282,10298
#define S_ISREG(284,10335
#define S_ISDIR(285,10389
#define S_ISLNK(286,10443
#define PATH_MAX 288,10498
#define MAX_LINK_COUNT 289,10555
#define FSYSREISER_CACHE_SIZE 292,10658
#define FSYSREISER_MIN_BLOCKSIZE 293,10696
#define FSYSREISER_MAX_BLOCKSIZE 294,10741
struct fsys_reiser_fileinfo297,10840
  __u32 k_dir_id;299,10870
  __u32 k_objectid;300,10888
struct fsys_reiser_info304,10972
  struct item_head *current_ih;current_ih307,11030
  char *current_item;current_item309,11089
  struct fsys_reiser_fileinfo fileinfo;311,11165
  __u32 journal_block;313,11238
  __u32 journal_block_count;315,11293
  __u32 journal_first_desc;318,11407
  __u16 version;321,11466
  __u16 tree_depth;323,11529
  __u8  blocksize_shift;325,11602
  __u8  fullblocksize_shift;327,11675
  __u16 blocksize;329,11760
  __u16 cached_slots;331,11819
  __u16 journal_transactions;333,11893
  unsigned int blocks[blocks335,11926
  unsigned int next_key_nr[next_key_nr336,11961
#define ROOT 342,12097
#define CACHE(343,12134
#define LEAF 344,12195
#define BLOCKHEAD(346,12242
#define ITEMHEAD 347,12297
#define KEY(348,12374
#define DC(349,12452
#define INFO 353,12593
#define JOURNAL_START 363,13016
#define JOURNAL_END 364,13064
#define log2 366,13127
is_power_of_two 369,13173
journal_read 375,13260
block_read 386,13601
journal_init 463,15943
reiserfs_mount 559,18752
read_tree_node 682,23118
next_key 718,24054
search_stat 810,26718
reiserfs_read 876,28283
reiserfs_dir 984,31334
reiserfs_embed 1205,36939
fsi_init_plugin(1230,37877

tools/libfsimage/iso9660/iso9660.h,5142
#define _ISO9660_H_30,1075
#define ISO_SECTOR_BITS 32,1096
#define ISO_SECTOR_SIZE 33,1138
#define	ISO_REGULAR	35,1197
#define	ISO_DIRECTORY	36,1238
#define	ISO_OTHER	37,1278
#define	RR_FLAG_PX	39,1334
#define RR_FLAG_PN	40,1391
#define RR_FLAG_SL	41,1435
#define	RR_FLAG_NM	42,1479
#define RR_FLAG_CL	43,1536
#define RR_FLAG_PL	44,1577
#define RR_FLAG_RE	45,1619
#define RR_FLAG_TF	46,1670
#define	POSIX_S_IFMT	49,1766
#define	POSIX_S_IFREG	50,1794
#define	POSIX_S_IFDIR	51,1823
#define ISO_VD_PRIMARY 54,1883
#define ISO_VD_END 55,1908
#define ISO_STANDARD_ID 57,1932
typedef		 int	 int8_t	63,2027
typedef unsigned int   u_int8_t	64,2076
typedef		 int	int16_t	65,2135
typedef unsigned int  u_int16_t	66,2184
typedef		 int	int32_t	67,2243
typedef unsigned int  u_int32_t	68,2292
typedef		 char  int8_t;72,2382
typedef		 short int16_t;73,2406
typedef		 int   int32_t;74,2431
typedef unsigned char  u_int8_t;76,2481
typedef unsigned short u_int16_t;77,2514
typedef unsigned int   u_int32_t;78,2548
  u_int8_t l,82,2618
  u_int8_t l,b;82,2618
}	iso_8bit_t;83,2634
struct __iso_16bit 85,2649
  u_int16_t l,86,2670
  u_int16_t l, b;86,2670
typedef	struct __iso_16bit iso_16bit_t;88,2716
struct __iso_32bit 90,2757
  u_int32_t l,91,2778
  u_int32_t l, b;91,2778
typedef	struct __iso_32bit iso_32bit_t;93,2824
typedef u_int8_t		iso_date_t[iso_date_t95,2865
struct iso_directory_record 97,2899
  iso_8bit_t	length;98,2929
  iso_8bit_t	ext_attr_length;99,2950
  iso_32bit_t	extent;100,2980
  iso_32bit_t	size;101,3002
  iso_date_t	date;102,3022
  iso_8bit_t	flags;103,3041
  iso_8bit_t	file_unit_size;104,3061
  iso_8bit_t	interleave;105,3090
  iso_16bit_t	volume_seq_number;106,3115
  iso_8bit_t	name_len;107,3148
  u_int8_t	name[name108,3171
struct iso_primary_descriptor 111,3220
  iso_8bit_t	type;112,3252
  u_int8_t	id[id113,3271
  iso_8bit_t	version;114,3289
  u_int8_t	_unused1[_unused1115,3311
  u_int8_t	system_id[system_id116,3335
  u_int8_t	volume_id[volume_id117,3361
  u_int8_t	_unused2[_unused2118,3387
  iso_32bit_t	volume_space_size;119,3411
  u_int8_t	_unused3[_unused3120,3444
  iso_16bit_t	volume_set_size;121,3469
  iso_16bit_t	volume_seq_number;122,3500
  iso_16bit_t	logical_block_size;123,3533
  iso_32bit_t	path_table_size;124,3567
  u_int8_t	type_l_path_table[type_l_path_table125,3598
  u_int8_t	opt_type_l_path_table[opt_type_l_path_table126,3631
  u_int8_t	type_m_path_table[type_m_path_table127,3668
  u_int8_t	opt_type_m_path_table[opt_type_m_path_table128,3701
  struct iso_directory_record root_directory_record;129,3738
  u_int8_t	volume_set_id[volume_set_id130,3791
  u_int8_t	publisher_id[publisher_id131,3822
  u_int8_t	preparer_id[preparer_id132,3852
  u_int8_t	application_id[application_id133,3881
  u_int8_t	copyright_file_id[copyright_file_id134,3913
  u_int8_t	abstract_file_id[abstract_file_id135,3947
  u_int8_t	bibliographic_file_id[bibliographic_file_id136,3980
  u_int8_t	creation_date[creation_date137,4018
  u_int8_t	modification_date[modification_date138,4048
  u_int8_t	expiration_date[expiration_date139,4082
  u_int8_t	effective_date[effective_date140,4114
  iso_8bit_t	file_structure_version;141,4145
  u_int8_t	_unused4[_unused4142,4182
  u_int8_t	application_data[application_data143,4206
  u_int8_t	_unused5[_unused5144,4240
struct rock_ridge 147,4295
  u_int16_t	signature;148,4315
  u_int8_t	len;149,4338
  u_int8_t	version;150,4354
    struct SP 152,4384
      u_int16_t	magic;153,4400
      u_int8_t	skip;154,4423
    } sp;155,4444
    struct CE 156,4454
      iso_32bit_t	extent;157,4470
      iso_32bit_t	offset;158,4496
      iso_32bit_t	size;159,4522
    } ce;160,4546
    struct ER 161,4556
      u_int8_t	len_id;162,4572
      u_int8_t	len_des;163,4595
      u_int8_t	len_src;164,4619
      u_int8_t	ext_ver;165,4643
      u_int8_t	data[data166,4667
    } er;167,4691
    struct RR 168,4701
      iso_8bit_t	flags;169,4717
    } rr;170,4741
    struct PX 171,4751
      iso_32bit_t	mode;172,4767
      iso_32bit_t	nlink;173,4791
      iso_32bit_t	uid;174,4816
      iso_32bit_t	gid;175,4839
    } px;176,4862
    struct PN 177,4872
      iso_32bit_t	dev_high;178,4888
      iso_32bit_t	dev_low;179,4916
    } pn;180,4943
    struct SL 181,4953
      iso_8bit_t flags;182,4969
      struct SL_component 183,4993
	iso_8bit_t	flags;184,5021
	u_int8_t		len;185,5040
	u_int8_t		text[text186,5056
      } link;187,5076
    } sl;188,5090
    struct NM 189,5100
      iso_8bit_t	flags;190,5116
      u_int8_t	name[name191,5140
    } nm;192,5164
    struct CL 193,5174
      iso_32bit_t	location;194,5190
    } cl;195,5218
    struct PL 196,5228
      iso_32bit_t	location;197,5244
    } pl;198,5272
    struct TF 199,5282
      iso_8bit_t	flags;200,5298
      iso_date_t	times[times201,5322
    } tf;202,5349
  } u;203,5359
typedef	union RR_ptr 206,5395
  struct rock_ridge *rr;rr207,5418
  char		  *ptr;ptr208,5443
  int		   i;209,5459
} RR_ptr_t;210,5472
#define	RRMAGIC(212,5485
#define	CHECK2(214,5527

tools/libfsimage/iso9660/fsys_iso9660.c,453
#define	MAXINT 37,1192
struct iso_sb_info 40,1257
  unsigned long vol_sector;41,1278
struct iso_inode_info 46,1345
  unsigned long file_start;47,1369
#define ISO_SUPER	50,1401
#define INODE	52,1460
#define PRIMDESC 54,1546
#define DIRREC 55,1623
#define RRCONT_BUF 56,1698
#define NAME_BUF 57,1759
#define log2 60,1822
iso9660_devread 63,1857
iso9660_mount 105,2927
iso9660_dir 145,3940
iso9660_read 417,10639
fsi_init_plugin(452,11305

tools/libfsimage/zfs/filesys.h,26
#define _FILESYS_H24,962

tools/libfsimage/zfs/fsys_zfs.h,1825
#define	_FSYS_ZFS_H24,963
typedef unsigned long long uint64_t;29,1017
typedef unsigned int uint32_t;30,1054
typedef unsigned short uint16_t;31,1085
typedef unsigned char uint8_t;32,1118
typedef unsigned char uchar_t;33,1149
typedef	unsigned long size_t;36,1220
typedef	unsigned int size_t;38,1256
#define	MOS	65,1969
#define	DNODE	67,2067
#define	ZFS_SCRATCH	68,2128
#define	VERIFY_DN_TYPE(74,2260
#define	VERIFY_OS_TYPE(83,2464
#define	ZPOOL_PROP_BOOTFS	89,2592
#define	BSWAP_8(92,2650
#define	BSWAP_16(93,2682
#define	BSWAP_32(94,2742
#define	BSWAP_64(95,2806
#define	P2ROUNDUP(96,2870
#define	UBERBLOCK_SIZE	102,3043
#define	VDEV_UBERBLOCK_SHIFT	103,3093
#define	VDEV_UBERBLOCK_OFFSET(105,3158
typedef struct uberblock uberblock_t;108,3260
typedef struct uberblock_phys 111,3357
	uberblock_t	ubp_uberblock;112,3389
				sizeof (zioeof (zi114,3472
	zio_eck_t	ubp_zec;115,3497
} uberblock_phys_t;116,3517
#define	P2PHASE(121,3585
#define	DVA_OFFSET_TO_PHYS_SECTOR(122,3634
#define	P2ALIGN(132,3985
#define	NV_ENCODE_NATIVE	137,4081
#define	NV_ENCODE_XDR	138,4108
#define	HOST_ENDIAN	139,4133
#define	DATA_TYPE_UINT64	140,4178
#define	DATA_TYPE_STRING	141,4205
#define	DATA_TYPE_NVLIST	142,4232
#define	DATA_TYPE_NVLIST_ARRAY	143,4260
#define	NBBY	149,4345
typedef int zfs_decomp_func_t(152,4368
typedef struct decomp_entry 154,4460
	char *name;name155,4490
	zfs_decomp_func_t *decomp_func;decomp_func156,4503
} decomp_entry_t;157,4536
#define	ZFS_CRC64_POLY 162,4589
#define	ZAP_HASH_IDX(163,4665
#define	CHAIN_END	164,4737
#define	ZAP_LEAF_ARRAY_BYTES 170,4931
#define	ZAP_LEAF_HASH_SHIFT(172,4986
#define	ZAP_LEAF_HASH_NUMENTRIES(173,5027
#define	LEAF_HASH(174,5095
#define	ZAP_LEAF_NUMCHUNKS(183,5381
#define	ZAP_LEAF_CHUNK(192,5650
#define	ZAP_LEAF_ENTRY(194,5758

tools/libfsimage/zfs/fsi_zfs.h,719
#define _FSI_ZFS_H24,962
#define	BOOTSIGN_DIR	38,1205
#define	BOOTSIGN_BACKUP	39,1248
#define	RAW_ADDR(42,1352
#define	RAW_SEG(43,1376
#define	ZFS_SCRATCH_SIZE	46,1476
#define	MAXPATHLEN	48,1511
#define	MAXNAMELEN	49,1535
#define	MIN(50,1558
#define	MAXUINT	52,1601
#undef NULL54,1630
#define NULL 55,1642
#define grub_printf 57,1677
#define grub_strcmp 58,1704
#define grub_strncmp 59,1731
#define grub_strstr 60,1760
#define grub_strlen 61,1787
#define grub_memmove 62,1814
#undef	filemax76,2196
#undef	filepos77,2211
typedef unsigned char	uchar_t;86,2358
typedef struct fsi_file *fsi_file_handle_t;fsi_file_handle_t89,2397
#undef	devread94,2574
#define devread(95,2589
#undef	errnum97,2652

tools/libfsimage/zfs/zfs_lzjb.c,109
#define	MATCH_BITS	28,1003
#define	MATCH_MIN	29,1024
#define	OFFSET_MASK	30,1044
lzjb_decompress(35,1114

tools/libfsimage/zfs/zfs_sha256.c,263
#define	Ch(44,1467
#define	Maj(45,1515
#define	Rot32(46,1572
#define	SIGMA0(47,1625
#define	SIGMA1(48,1687
#define	sigma0(49,1749
#define	sigma1(50,1809
static const uint32_t SHA256_K[SHA256_K52,1872
SHA256Transform(72,2710
zio_checksum_SHA256(98,3390

tools/libfsimage/zfs/zfs_fletcher.c,112
fletcher_2_native(30,1009
fletcher_2_byteswap(47,1349
fletcher_4_native(64,1711
fletcher_4_byteswap(81,2026

tools/libfsimage/zfs/fsys_zfs.c,1351
static void *file_buf file_buf52,1788
static uint64_t file_start 53,1818
static uint64_t file_end 54,1850
static dnode_phys_t *dnode_buf dnode_buf57,1911
static dnode_phys_t *dnode_mdn dnode_mdn58,1950
static uint64_t dnode_start 59,1989
static uint64_t dnode_end 60,2022
static uint64_t pool_guid 62,2054
static uberblock_t current_uberblock;63,2085
static char *stackbase;stackbase64,2123
decomp_entry_t decomp_table[decomp_table66,2148
zfs_bcmp(81,2547
zfs_log2(100,2846
zio_checksum_off(114,2985
zio_checksum_info_t zio_checksum_table[zio_checksum_table120,3125
zio_checksum_verify(143,3925
vdev_label_start(184,4975
vdev_uberblock_compare(201,5651
uberblock_verify(228,6224
find_bestub(256,6849
zio_read_gang(288,7547
zio_read_data(337,8760
zio_read(375,9574
dmu_read(427,10684
mzap_lookup(468,11552
zap_hash(486,11921
zap_leaf_array_equal(528,12880
zap_leaf_lookup(558,13542
fzap_lookup(619,14946
zap_lookup(663,16084
dnode_get(704,17038
is_top_dataset_file(750,18252
dnode_get_path(779,18847
get_default_bootfsobj(840,20190
get_objset_mdn(884,21394
nvlist_unpack(1016,24742
nvlist_array(1028,24983
nvlist_lookup_value(1046,25370
vdev_validate(1115,26876
vdev_get_bootpath(1135,27401
check_pool_label(1211,29206
zfs_mount(1279,31094
zfs_open(1381,33939
zfs_read(1482,36183
zfs_embed(1540,37445

tools/libfsimage/zfs/zfs-include/dnode.h,1166
#define	_SYS_DNODE_H25,965
#define	DNODE_SHIFT	30,1014
#define	DN_MIN_INDBLKSHIFT	31,1053
#define	DN_MAX_INDBLKSHIFT	32,1092
#define	DNODE_BLOCK_SHIFT	33,1132
#define	DNODE_CORE_SIZE	34,1171
#define	DN_MAX_OBJECT_SHIFT	35,1237
#define	DN_MAX_OFFSET_SHIFT	36,1305
#define	DNODE_SIZE	41,1394
#define	DN_MAX_NBLKPTR	42,1432
#define	DN_MAX_BONUSLEN	43,1507
#define	DN_MAX_OBJECT	44,1587
#define	DNODES_PER_BLOCK_SHIFT	46,1640
#define	DNODES_PER_BLOCK	47,1705
#define	DNODES_PER_LEVEL_SHIFT	48,1763
#define	DNODE_FLAG_SPILL_BLKPTR 50,1834
#define	DN_BONUS(52,1874
typedef struct dnode_phys 55,1975
	uint8_t dn_type;56,2003
	uint8_t dn_indblkshift;57,2046
	uint8_t dn_nlevels;58,2103
	uint8_t dn_nblkptr;59,2156
	uint8_t dn_bonustype;60,2204
	uint8_t	dn_checksum;61,2263
	uint8_t	dn_compress;62,2310
	uint8_t dn_flags;63,2357
	uint16_t dn_datablkszsec;64,2396
	uint16_t dn_bonuslen;65,2461
	uint8_t dn_pad2[dn_pad266,2510
	uint64_t dn_maxblkid;69,2579
	uint64_t dn_used;70,2636
	uint64_t dn_pad3[dn_pad372,2696
	blkptr_t dn_blkptr[dn_blkptr74,2719
	uint8_t dn_bonus[dn_bonus75,2743
	blkptr_t dn_spill;76,2799
} dnode_phys_t;77,2819

tools/libfsimage/zfs/zfs-include/dmu.h,2130
#define	_SYS_DMU_H25,963
typedef enum dmu_object_type 34,1160
	DMU_OT_NONE,35,1191
	DMU_OT_OBJECT_DIRECTORY,37,1221
	DMU_OT_OBJECT_ARRAY,38,1257
	DMU_OT_PACKED_NVLIST,39,1293
	DMU_OT_PACKED_NVLIST_SIZE,40,1357
	DMU_OT_BPLIST,41,1398
	DMU_OT_BPLIST_HDR,42,1429
	DMU_OT_SPACE_MAP_HEADER,44,1475
	DMU_OT_SPACE_MAP,45,1514
	DMU_OT_INTENT_LOG,47,1559
	DMU_OT_DNODE,49,1605
	DMU_OT_OBJSET,50,1634
	DMU_OT_DSL_DIR,52,1677
	DMU_OT_DSL_DIR_CHILD_MAP,53,1709
	DMU_OT_DSL_DS_SNAP_MAP,54,1746
	DMU_OT_DSL_PROPS,55,1782
	DMU_OT_DSL_DATASET,56,1812
	DMU_OT_ZNODE,58,1859
	DMU_OT_OLDACL,59,1888
	DMU_OT_PLAIN_FILE_CONTENTS,60,1920
	DMU_OT_DIRECTORY_CONTENTS,61,1961
	DMU_OT_MASTER_NODE,62,1999
	DMU_OT_UNLINKED_SET,63,2031
	DMU_OT_ZVOL,65,2077
	DMU_OT_ZVOL_PROP,66,2105
	DMU_OT_PLAIN_OTHER,68,2167
	DMU_OT_UINT64_OTHER,69,2201
	DMU_OT_ZAP_OTHER,70,2237
	DMU_OT_ERROR_LOG,72,2292
	DMU_OT_SPA_HISTORY,73,2322
	DMU_OT_SPA_HISTORY_OFFSETS,74,2356
	DMU_OT_POOL_PROPS,75,2406
	DMU_OT_DSL_PERMS,76,2437
	DMU_OT_ACL,77,2467
	DMU_OT_SYSACL,78,2492
	DMU_OT_FUID,79,2523
	DMU_OT_FUID_SIZE,80,2578
	DMU_OT_NEXT_CLONES,81,2627
	DMU_OT_SCRUB_QUEUE,82,2659
	DMU_OT_USERGROUP_USED,83,2691
	DMU_OT_USERGROUP_QUOTA,84,2726
	DMU_OT_USERREFS,85,2762
	DMU_OT_DDT_ZAP,86,2791
	DMU_OT_DDT_STATS,87,2820
	DMU_OT_SA,88,2850
	DMU_OT_SA_MASTER_NODE,89,2882
	DMU_OT_SA_ATTR_REGISTRATION,90,2917
	DMU_OT_SA_ATTR_LAYOUTS,91,2957
	DMU_OT_NUMTYPES92,2993
} dmu_object_type_t;93,3010
typedef enum dmu_objset_type 95,3032
	DMU_OST_NONE,96,3063
	DMU_OST_META,97,3078
	DMU_OST_ZFS,98,3093
	DMU_OST_ZVOL,99,3107
	DMU_OST_OTHER,100,3122
	DMU_OST_ANY,101,3164
	DMU_OST_NUMTYPES102,3198
} dmu_objset_type_t;103,3216
#define	DMU_POOL_DIRECTORY_OBJECT	108,3309
#define	DMU_POOL_CONFIG	109,3345
#define	DMU_POOL_ROOT_DATASET	110,3380
#define	DMU_POOL_SYNC_BPLIST	111,3426
#define	DMU_POOL_ERRLOG_SCRUB	112,3470
#define	DMU_POOL_ERRLOG_LAST	113,3516
#define	DMU_POOL_SPARES	114,3560
#define	DMU_POOL_DEFLATE	115,3595
#define	DMU_POOL_HISTORY	116,3631
#define	DMU_POOL_PROPS	117,3667
#define	DMU_POOL_L2CACHE	118,3705

tools/libfsimage/zfs/zfs-include/vdev_impl.h,654
#define	_SYS_VDEV_IMPL_H25,969
#define	VDEV_PAD_SIZE 27,995
#define	VDEV_SKIP_SIZE	29,1081
#define	VDEV_PHYS_SIZE	30,1123
#define	VDEV_UBERBLOCK_RING	31,1159
typedef struct vdev_phys 33,1200
	char		vp_nvlist[vp_nvlist34,1227
	zio_eck_t	vp_zbt;35,1282
} vdev_phys_t;36,1301
typedef struct vdev_label 38,1317
	char		vl_pad1[vl_pad139,1345
	char		vl_pad2[vl_pad240,1388
	vdev_phys_t	vl_vdev_phys;41,1431
	char		vl_uberblock[vl_uberblock42,1472
} vdev_label_t;43,1525
#define	VDEV_BOOT_OFFSET	49,1706
#define	VDEV_BOOT_SIZE	50,1759
#define	VDEV_LABEL_START_SIZE	55,1884
#define	VDEV_LABEL_END_SIZE	56,1959
#define	VDEV_LABELS	57,2015

tools/libfsimage/zfs/zfs-include/dmu_objset.h,334
#define	_SYS_DMU_OBJSET_H25,970
typedef struct objset_phys 27,997
	dnode_phys_t os_meta_dnode;28,1026
	zil_header_t os_zil_header;29,1055
	uint64_t os_type;30,1084
	uint64_t os_flags;31,1103
	    sizeof (izeof 33,1169
	dnode_phys_t os_userused_dnode;34,1220
	dnode_phys_t os_groupused_dnode;35,1253
} objset_phys_t;36,1287

tools/libfsimage/zfs/zfs-include/zap_impl.h,1243
#define	_SYS_ZAP_IMPL_H25,968
#define	ZAP_MAGIC 27,993
#define	MZAP_ENT_LEN	29,1027
#define	MZAP_NAME_LEN	30,1052
#define	MZAP_MAX_BLKSHIFT	31,1102
#define	MZAP_MAX_BLKSZ	32,1146
typedef struct mzap_ent_phys 34,1196
	uint64_t mze_value;35,1227
	uint32_t mze_cd;36,1248
	uint16_t mze_pad;37,1266
	char mze_name[mze_name38,1329
} mzap_ent_phys_t;39,1360
typedef struct mzap_phys 41,1380
	uint64_t mz_block_type;42,1407
	uint64_t mz_salt;43,1448
	uint64_t mz_pad[mz_pad44,1467
	mzap_ent_phys_t mz_chunk[mz_chunk45,1488
} mzap_phys_t;47,1572
#define	ZBT_LEAF	61,1917
#define	ZBT_HEADER	62,1954
#define	ZBT_MICRO	63,1993
#define	ZAP_EMBEDDED_PTRTBL_SHIFT(70,2170
#define	ZAP_EMBEDDED_PTRTBL_ENT(77,2442
typedef struct zap_phys 85,2657
	uint64_t zap_block_type;86,2683
	uint64_t zap_magic;87,2726
	struct zap_table_phys 89,2765
		uint64_t zt_blk;90,2790
		uint64_t zt_numblks;91,2837
		uint64_t zt_shift;92,2883
		uint64_t zt_nextblk;93,2927
		uint64_t zt_blks_copied;94,2987
	} zap_ptrtbl;95,3048
	uint64_t zap_freeblk;97,3064
	uint64_t zap_num_leafs;98,3114
	uint64_t zap_num_entries;99,3162
	uint64_t zap_salt;100,3213
	uint64_t zap_normflags;101,3272
	uint64_t zap_flags;102,3332
} zap_phys_t;109,3594

tools/libfsimage/zfs/zfs-include/zfs_znode.h,769
#define	_SYS_FS_ZFS_ZNODE_H25,972
#define	MASTER_NODE_OBJ	27,1001
#define	ZFS_ROOT_OBJ	28,1027
#define	ZPL_VERSION_STR	29,1056
#define	ZFS_SA_ATTRS	30,1091
#define	ZPL_VERSION	32,1125
#define	ZFS_DIRENT_OBJ(34,1152
typedef struct znode_phys 41,1369
	uint64_t zp_atime[zp_atime42,1397
	uint64_t zp_mtime[zp_mtime43,1454
	uint64_t zp_ctime[zp_ctime44,1517
	uint64_t zp_crtime[zp_crtime45,1574
	uint64_t zp_gen;46,1624
	uint64_t zp_mode;47,1683
	uint64_t zp_size;48,1729
	uint64_t zp_parent;49,1773
	uint64_t zp_links;50,1830
	uint64_t zp_xattr;51,1886
	uint64_t zp_rdev;52,1941
	uint64_t zp_flags;53,2001
	uint64_t zp_uid;54,2051
	uint64_t zp_gid;55,2093
	uint64_t zp_pad[zp_pad56,2137
	zfs_znode_acl_t zp_acl;57,2178
} znode_phys_t;67,2571

tools/libfsimage/zfs/zfs-include/sa_impl.h,254
#define	_SYS_SA_IMPL_H24,966
typedef struct sa_hdr_phys 26,990
	uint32_t sa_magic;27,1019
	uint16_t sa_layout_info;28,1039
	uint16_t sa_lengths[sa_lengths29,1065
} sa_hdr_phys_t;30,1090
#define	SA_HDR_SIZE(32,1108
#define	SA_SIZE_OFFSET	33,1180

tools/libfsimage/zfs/zfs-include/zfs_acl.h,805
#define	_SYS_FS_ZFS_ACL_H25,970
#define	_UID_T30,1048
typedef	unsigned int uid_t;31,1063
typedef struct zfs_oldace 34,1129
	uint32_t	z_fuid;35,1157
	uint32_t	z_access_mask;36,1188
	uint16_t	z_flags;37,1232
	uint16_t	z_type;38,1280
} zfs_oldace_t;39,1330
#define	ACE_SLOT_CNT	41,1347
typedef struct zfs_znode_acl_v0 43,1371
	uint64_t	z_acl_extern_obj;44,1405
	uint32_t	z_acl_count;45,1456
	uint16_t	z_acl_version;46,1503
	uint16_t	z_acl_pad;47,1549
	zfs_oldace_t	z_ace_data[z_ace_data48,1583
} zfs_znode_acl_v0_t;49,1645
#define	ZFS_ACE_SPACE	51,1668
typedef struct zfs_znode_acl 53,1730
	uint64_t	z_acl_extern_obj;54,1761
	uint32_t	z_acl_size;55,1812
	uint16_t	z_acl_version;56,1866
	uint16_t	z_acl_count;57,1912
	uint8_t		z_ace_data[z_ace_data58,1954
} zfs_znode_acl_t;59,2021

tools/libfsimage/zfs/zfs-include/dsl_dir.h,554
#define	_SYS_DSL_DIR_H25,967
typedef struct dsl_dir_phys 29,1027
	uint64_t dd_creation_time;30,1057
	uint64_t dd_head_dataset_obj;31,1109
	uint64_t dd_parent_obj;32,1140
	uint64_t dd_clone_parent_obj;33,1165
	uint64_t dd_child_dir_zapobj;34,1196
	uint64_t dd_used_bytes;39,1348
	uint64_t dd_compressed_bytes;40,1373
	uint64_t dd_uncompressed_bytes;41,1404
	uint64_t dd_quota;43,1473
	uint64_t dd_reserved;45,1535
	uint64_t dd_props_zapobj;46,1558
	uint64_t dd_deleg_zapobj;47,1585
	uint64_t dd_pad[dd_pad48,1638
} dsl_dir_phys_t;49,1704

tools/libfsimage/zfs/zfs-include/dsl_dataset.h,716
#define	_SYS_DSL_DATASET_H25,971
typedef struct dsl_dataset_phys 29,1035
	uint64_t ds_dir_obj;30,1069
	uint64_t ds_prev_snap_obj;31,1091
	uint64_t ds_prev_snap_txg;32,1119
	uint64_t ds_next_snap_obj;33,1147
	uint64_t ds_snapnames_zapobj;34,1175
	uint64_t ds_num_children;35,1244
	uint64_t ds_creation_time;36,1311
	uint64_t ds_creation_txg;37,1364
	uint64_t ds_deadlist_obj;38,1391
	uint64_t ds_used_bytes;39,1418
	uint64_t ds_compressed_bytes;40,1443
	uint64_t ds_uncompressed_bytes;41,1474
	uint64_t ds_unique_bytes;42,1507
	uint64_t ds_fsid_guid;48,1763
	uint64_t ds_guid;49,1787
	uint64_t ds_flags;50,1806
	blkptr_t ds_bp;51,1826
	uint64_t ds_pad[ds_pad52,1843
} dsl_dataset_phys_t;53,1908

tools/libfsimage/zfs/zfs-include/zio_checksum.h,272
#define	_SYS_ZIO_CHECKSUM_H25,972
typedef void zio_checksum_t(30,1045
typedef struct zio_checksum_info 35,1178
	zio_checksum_t	*ci_func[ci_func36,1213
	int		ci_correctable;37,1285
	int		ci_eck;38,1340
	char		*ci_name;ci_name39,1389
} zio_checksum_info_t;40,1429

tools/libfsimage/zfs/zfs-include/zfs.h,2188
#define	_SYS_FS_ZFS_H25,966
#define	SPA_VERSION	30,1023
#define	ZPOOL_CONFIG_VERSION	36,1157
#define	ZPOOL_CONFIG_POOL_NAME	37,1197
#define	ZPOOL_CONFIG_POOL_STATE	38,1236
#define	ZPOOL_CONFIG_POOL_TXG	39,1277
#define	ZPOOL_CONFIG_POOL_GUID	40,1314
#define	ZPOOL_CONFIG_CREATE_TXG	41,1358
#define	ZPOOL_CONFIG_TOP_GUID	42,1404
#define	ZPOOL_CONFIG_VDEV_TREE	43,1446
#define	ZPOOL_CONFIG_TYPE	44,1490
#define	ZPOOL_CONFIG_CHILDREN	45,1524
#define	ZPOOL_CONFIG_ID	46,1566
#define	ZPOOL_CONFIG_GUID	47,1597
#define	ZPOOL_CONFIG_PATH	48,1631
#define	ZPOOL_CONFIG_DEVID	49,1665
#define	ZPOOL_CONFIG_METASLAB_ARRAY	50,1701
#define	ZPOOL_CONFIG_METASLAB_SHIFT	51,1754
#define	ZPOOL_CONFIG_ASHIFT	52,1807
#define	ZPOOL_CONFIG_ASIZE	53,1845
#define	ZPOOL_CONFIG_DTL	54,1881
#define	ZPOOL_CONFIG_STATS	55,1913
#define	ZPOOL_CONFIG_WHOLE_DISK	56,1949
#define	ZPOOL_CONFIG_ERRCOUNT	57,1995
#define	ZPOOL_CONFIG_NOT_PRESENT	58,2040
#define	ZPOOL_CONFIG_SPARES	59,2087
#define	ZPOOL_CONFIG_IS_SPARE	60,2125
#define	ZPOOL_CONFIG_NPARITY	61,2167
#define	ZPOOL_CONFIG_PHYS_PATH	62,2207
#define	ZPOOL_CONFIG_L2CACHE	63,2251
#define	ZPOOL_CONFIG_HOLE_ARRAY	64,2291
#define	ZPOOL_CONFIG_VDEV_CHILDREN	65,2337
#define	ZPOOL_CONFIG_IS_HOLE	66,2388
#define	ZPOOL_CONFIG_DDT_HISTOGRAM	67,2428
#define	ZPOOL_CONFIG_DDT_OBJ_STATS	68,2479
#define	ZPOOL_CONFIG_DDT_STATS	69,2533
#define	ZPOOL_CONFIG_OFFLINE	75,2772
#define	ZPOOL_CONFIG_FAULTED	76,2812
#define	ZPOOL_CONFIG_DEGRADED	77,2852
#define	ZPOOL_CONFIG_REMOVED	78,2894
#define	VDEV_TYPE_ROOT	80,2935
#define	VDEV_TYPE_MIRROR	81,2967
#define	VDEV_TYPE_REPLACING	82,3002
#define	VDEV_TYPE_RAIDZ	83,3043
#define	VDEV_TYPE_DISK	84,3077
#define	VDEV_TYPE_FILE	85,3109
#define	VDEV_TYPE_MISSING	86,3141
#define	VDEV_TYPE_HOLE	87,3178
#define	VDEV_TYPE_SPARE	88,3210
#define	VDEV_TYPE_L2CACHE	89,3244
typedef enum pool_state 97,3535
	POOL_STATE_ACTIVE 98,3561
	POOL_STATE_EXPORTED,99,3607
	POOL_STATE_DESTROYED,100,3657
	POOL_STATE_SPARE,101,3709
	POOL_STATE_L2CACHE,102,3762
	POOL_STATE_UNINITIALIZED,103,3810
	POOL_STATE_UNAVAIL,104,3865
	POOL_STATE_POTENTIALLY_ACTIVE	105,3915
} pool_state_t;106,3974

tools/libfsimage/zfs/zfs-include/zil.h,304
#define	_SYS_ZIL_H25,963
typedef struct zil_header 43,1650
	uint64_t zh_claim_txg;44,1678
	uint64_t zh_replay_seq;45,1745
	blkptr_t zh_log;46,1809
	uint64_t zh_claim_seq;47,1843
	uint64_t zh_flags;48,1905
	uint64_t zh_pad[zh_pad49,1944
} zil_header_t;50,1965
#define	ZIL_REPLAY_NEEDED 55,2014

tools/libfsimage/zfs/zfs-include/spa.h,2738
#define	_SYS_SPA_H25,963
#define	BF32_DECODE(30,1047
#define	BF64_DECODE(31,1115
#define	BF32_ENCODE(32,1185
#define	BF64_ENCODE(33,1255
#define	BF32_GET(35,1328
#define	BF64_GET(36,1384
#define	BF32_SET(38,1441
#define	BF64_SET(40,1530
#define	BF32_GET_SB(43,1620
#define	BF64_GET_SB(45,1715
#define	BF32_SET_SB(48,1811
#define	BF64_SET_SB(50,1916
#define	SPA_MINBLOCKSHIFT	58,2232
#define	SPA_MAXBLOCKSHIFT	59,2260
#define	SPA_MINBLOCKSIZE	60,2289
#define	SPA_MAXBLOCKSIZE	61,2342
#define	SPA_BLOCKSIZES	63,2396
#define	SPA_CONFIG_BLOCKSIZE	68,2538
#define	SPA_LSIZEBITS	77,2906
#define	SPA_PSIZEBITS	78,2967
#define	SPA_ASIZEBITS	79,3028
typedef struct dva 85,3242
	uint64_t	dva_word[dva_word86,3263
} dva_t;87,3286
typedef struct zio_cksum 92,3383
	uint64_t	zc_word[zc_word93,3410
} zio_cksum_t;94,3432
#define	SPA_BLKPTRSHIFT	156,6010
#define	SPA_DVAS_PER_BP	157,6065
typedef struct blkptr 159,6122
	dva_t		blk_dva[blk_dva160,6146
	uint64_t	blk_prop;161,6209
	uint64_t	blk_pad[blk_pad162,6268
	uint64_t	blk_phys_birth;163,6327
	uint64_t	blk_birth;164,6392
	uint64_t	blk_fill;165,6450
	zio_cksum_t	blk_cksum;166,6493
} blkptr_t;167,6545
#define	DVA_GET_ASIZE(172,6613
#define	DVA_SET_ASIZE(174,6704
#define	DVA_GET_GRID(177,6802
#define	DVA_SET_GRID(178,6864
#define	DVA_GET_VDEV(180,6933
#define	DVA_SET_VDEV(181,6996
#define	DVA_GET_OFFSET(183,7066
#define	DVA_SET_OFFSET(185,7158
#define	DVA_GET_GANG(188,7257
#define	DVA_SET_GANG(189,7319
#define	BP_GET_LSIZE(191,7388
#define	BP_SET_LSIZE(193,7473
#define	BP_GET_PSIZE(196,7565
#define	BP_SET_PSIZE(198,7651
#define	BP_GET_COMPRESS(201,7744
#define	BP_SET_COMPRESS(202,7805
#define	BP_GET_CHECKSUM(204,7873
#define	BP_SET_CHECKSUM(205,7934
#define	BP_GET_TYPE(207,8002
#define	BP_SET_TYPE(208,8060
#define	BP_GET_LEVEL(210,8124
#define	BP_SET_LEVEL(211,8182
#define	BP_GET_PROP_BIT_61(213,8247
#define	BP_SET_PROP_BIT_61(214,8311
#define	BP_GET_DEDUP(216,8381
#define	BP_SET_DEDUP(217,8439
#define	BP_GET_BYTEORDER(219,8504
#define	BP_SET_BYTEORDER(220,8572
#define	BP_PHYSICAL_BIRTH(222,8641
#define	BP_SET_BIRTH(225,8740
#define	BP_GET_ASIZE(231,8901
#define	BP_GET_UCSIZE(235,9039
#define	BP_GET_NDVAS(239,9175
#define	BP_COUNT_GANG(244,9321
#define	DVA_EQUAL(249,9459
#define	BP_EQUAL(253,9587
#define	ZIO_CHECKSUM_EQUAL(259,9837
#define	DVA_IS_VALID(265,10054
#define	ZIO_SET_CHECKSUM(267,10107
#define	BP_IDENTITY(275,10283
#define	BP_IS_GANG(276,10328
#define	BP_IS_HOLE(277,10382
#define	BP_IS_RAIDZ(280,10481
#define	BP_ZERO(283,10567
#define	ZFS_HOST_BYTEORDER	305,11186
#define	ZFS_HOST_BYTEORDER	307,11226
#define	BP_SHOULD_BYTESWAP(310,11269
#define	BP_SPRINTF_LEN	312,11346

tools/libfsimage/zfs/zfs-include/uberblock_impl.h,305
#define	_SYS_UBERBLOCK_IMPL_H25,974
#define	UBERBLOCK_MAGIC	39,1522
#define	UBERBLOCK_SHIFT	40,1577
struct uberblock 42,1623
	uint64_t	ub_magic;43,1642
	uint64_t	ub_version;44,1685
	uint64_t	ub_txg;45,1727
	uint64_t	ub_guid_sum;46,1770
	uint64_t	ub_timestamp;47,1821
	blkptr_t	ub_rootbp;48,1873

tools/libfsimage/zfs/zfs-include/zio.h,1026
#define	_ZIO_H25,959
#define	ZEC_MAGIC	27,975
typedef struct zio_eck 29,1040
	uint64_t	zec_magic;30,1065
	zio_cksum_t	zec_cksum;31,1119
} zio_eck_t;32,1167
#define	SPA_GANGBLOCKSIZE	38,1275
#define	SPA_GBH_NBLKPTRS	39,1318
#define	SPA_GBH_FILLER	41,1409
#define	ZIO_GET_IOSIZE(46,1546
typedef struct zio_gbh 50,1657
	blkptr_t		zg_blkptr[zg_blkptr51,1682
	uint64_t		zg_filler[zg_filler52,1722
	zio_eck_t		zg_tail;53,1760
} zio_gbh_phys_t;54,1781
enum zio_checksum 56,1800
	ZIO_CHECKSUM_INHERIT 57,1820
	ZIO_CHECKSUM_ON,58,1847
	ZIO_CHECKSUM_OFF,59,1865
	ZIO_CHECKSUM_LABEL,60,1884
	ZIO_CHECKSUM_GANG_HEADER,61,1905
	ZIO_CHECKSUM_ZILOG,62,1932
	ZIO_CHECKSUM_FLETCHER_2,63,1953
	ZIO_CHECKSUM_FLETCHER_4,64,1979
	ZIO_CHECKSUM_SHA256,65,2005
	ZIO_CHECKSUM_ZILOG2,66,2027
	ZIO_CHECKSUM_FUNCTIONS67,2049
enum zio_compress 70,2077
	ZIO_COMPRESS_INHERIT 71,2097
	ZIO_COMPRESS_ON,72,2124
	ZIO_COMPRESS_OFF,73,2142
	ZIO_COMPRESS_LZJB,74,2161
	ZIO_COMPRESS_EMPTY,75,2181
	ZIO_COMPRESS_FUNCTIONS76,2202

tools/libfsimage/zfs/zfs-include/zap_leaf.h,1421
#define	_SYS_ZAP_LEAF_H25,968
#define	ZAP_LEAF_MAGIC 29,1029
#define	ZAP_LEAF_CHUNKSIZE 32,1091
#define	ZAP_LEAF_ARRAY_BYTES 38,1261
typedef enum zap_chunk_type 40,1316
	ZAP_CHUNK_FREE 41,1346
	ZAP_CHUNK_ENTRY 42,1369
	ZAP_CHUNK_ARRAY 43,1393
	ZAP_CHUNK_TYPE_MAX 44,1417
} zap_chunk_type_t;45,1443
typedef struct zap_leaf_phys 51,1558
	struct zap_leaf_header 52,1589
		uint64_t lh_block_type;53,1615
		uint64_t lh_pad1;54,1657
		uint64_t lh_prefix;55,1677
		uint32_t lh_magic;56,1731
		uint16_t lh_nfree;57,1774
		uint16_t lh_nentries;58,1821
		uint16_t lh_prefix_len;59,1870
		uint16_t lh_freelist;63,1990
		uint8_t lh_pad2[lh_pad264,2045
	} l_hdr;65,2068
	uint16_t l_hash[l_hash75,2373
} zap_leaf_phys_t;76,2394
typedef union zap_leaf_chunk 78,2414
	struct zap_leaf_entry 79,2445
		uint8_t le_type;80,2470
		uint8_t le_int_size;81,2520
		uint16_t le_next;82,2563
		uint16_t le_name_chunk;83,2615
		uint16_t le_name_length;84,2672
		uint16_t le_value_chunk;85,2730
		uint16_t le_value_length;86,2788
		uint32_t le_cd;87,2843
		uint64_t le_hash;88,2894
	} l_entry;89,2944
	struct zap_leaf_array 90,2956
		uint8_t la_type;91,2981
		uint8_t la_array[la_array92,3030
		uint16_t la_next;93,3072
	} l_array;94,3121
	struct zap_leaf_free 95,3133
		uint8_t lf_type;96,3157
		uint8_t lf_pad[lf_pad97,3205
		uint16_t lf_next;98,3245
	} l_free;99,3303
} zap_leaf_chunk_t;100,3314

tools/libfsimage/zfs/mb_info.h,2611
struct mod_list24,903
  unsigned long mod_start;27,998
  unsigned long mod_end;28,1025
  unsigned long cmdline;31,1081
  unsigned long pad;34,1163
struct AddrRangeDesc45,1427
  unsigned long size;47,1450
  unsigned long long BaseAddr;48,1472
  unsigned long long Length;49,1503
  unsigned long Type;50,1532
#define MB_ARD_MEMORY	56,1680
struct drive_info60,1736
  unsigned long size;63,1793
  unsigned char drive_number;66,1848
  unsigned char drive_mode;69,1917
  unsigned short drive_cylinders;72,1974
  unsigned char drive_heads;73,2008
  unsigned char drive_sectors;74,2037
  unsigned short drive_ports[drive_ports77,2121
#define MB_DI_CHS_MODE	81,2177
#define MB_DI_LBA_MODE	82,2203
struct apm_info86,2253
  unsigned short version;88,2271
  unsigned short cseg;89,2297
  unsigned long offset;90,2320
  unsigned short cseg_16;91,2344
  unsigned short dseg_16;92,2370
  unsigned short cseg_len;93,2396
  unsigned short cseg_16_len;94,2423
  unsigned short dseg_16_len;95,2453
struct multiboot_info106,2641
  unsigned long flags;109,2703
  unsigned long mem_lower;112,2764
  unsigned long mem_upper;113,2791
  unsigned long boot_device;116,2846
  unsigned long cmdline;119,2906
  unsigned long mods_count;122,2959
  unsigned long mods_addr;123,2987
      unsigned long tabsize;130,3091
      unsigned long strsize;131,3120
      unsigned long addr;132,3149
      unsigned long pad;133,3175
    a;135,3206
      unsigned long num;140,3281
      unsigned long size;141,3306
      unsigned long addr;142,3332
      unsigned long shndx;143,3358
    e;145,3391
  syms;147,3402
  unsigned long mmap_length;150,3443
  unsigned long mmap_addr;151,3472
  unsigned long drives_length;154,3528
  unsigned long drives_addr;155,3559
  unsigned long config_table;158,3623
  unsigned long boot_loader_name;161,3681
  unsigned long apm_table;164,3734
  unsigned long vbe_control_info;167,3776
  unsigned long vbe_mode_info;168,3810
  unsigned short vbe_mode;169,3841
  unsigned short vbe_interface_seg;170,3868
  unsigned short vbe_interface_off;171,3904
  unsigned short vbe_interface_len;172,3940
#define MB_INFO_MEMORY	180,4092
#define MB_INFO_BOOTDEV	182,4162
#define MB_INFO_CMDLINE	184,4234
#define MB_INFO_MODS	186,4317
#define MB_INFO_AOUT_SYMS	191,4435
#define MB_INFO_ELF_SHDR	193,4517
#define MB_INFO_MEM_MAP	196,4589
#define MB_INFO_DRIVE_INFO	199,4655
#define MB_INFO_CONFIG_TABLE	202,4727
#define MB_INFO_BOOT_LOADER_NAME	205,4805
#define MB_INFO_APM_TABLE	208,4879
#define MB_INFO_VIDEO_INFO	211,4953
#define MULTIBOOT_VALID	217,5062

tools/libfsimage/zfs/fsi_zfs.c,972
#undef filemax33,1077
#undef filepos34,1092
#undef errnum35,1107
#define	MAXNAMELEN	38,1123
#define	MAXPATHLEN	39,1146
char current_rootpool[current_rootpool42,1204
char current_bootfs[current_bootfs43,1239
uint64_t current_bootfs_obj;44,1272
char current_bootpath[current_bootpath45,1301
char current_devid[current_devid46,1336
int is_zfs_mount;47,1368
unsigned long best_drive;48,1386
unsigned long best_part;49,1412
int find_best_root;50,1437
unsigned long part_length;51,1457
uint64_t filemax;54,1516
uint64_t filepos;55,1534
struct multiboot_info mbi;57,1553
fsi_file_t *zfs_ffi;zfs_ffi58,1580
int errnum;59,1601
char *bootstring bootstring60,1613
#define	ZFS_SCRATCH_SIZE	66,1746
#define	FSI_MOS_SHIFT	67,1780
#define	FSI_MOS_MASK	68,1805
unsigned char fsi_mos_buf[fsi_mos_buf69,1853
#define	FSI_MOS_ALIGN(71,1918
#define	FSI_MOS(73,2003
fsi_zfs_mount(77,2115
fsi_zfs_open(93,2436
fsi_zfs_read(129,3093
fsi_init_plugin(145,3315

tools/libfsimage/zfs/shared.h,25
#define _SHARED_H24,961

tools/libfsimage/ext2fs-lib/ext2fs-lib.c,166
ext2lib_mount(30,1292
ext2lib_umount(57,1758
ext2lib_open(70,1944
ext2lib_read(105,2487
ext2lib_pread(121,2738
ext2lib_close(151,3286
fsi_init_plugin(160,3429

tools/libfsimage/ext2fs/fsys_ext2fs.c,5858
#define	mapblock1 22,852
#define	mapblock2 23,888
#define DEV_BSIZE 26,1005
#define BLOCK_SIZE 29,1053
#define WHICH_SUPER 31,1185
#define SBLOCK 33,1242
typedef __signed__ char __s8;36,1338
typedef unsigned char __u8;37,1368
typedef __signed__ short __s16;38,1396
typedef unsigned short __u16;39,1428
typedef __signed__ int __s32;40,1458
typedef unsigned int __u32;41,1488
#define EXT2_NDIR_BLOCKS 46,1581
#define EXT2_IND_BLOCK 47,1624
#define EXT2_DIND_BLOCK 48,1681
#define EXT2_TIND_BLOCK 49,1742
#define EXT2_N_BLOCKS 50,1804
#define EXT4_EXTENTS_FL 53,1885
struct ext2_super_block56,1992
    __u32 s_inodes_count;58,2020
    __u32 s_blocks_count;59,2065
    __u32 s_r_blocks_count;60,2110
    __u32 s_free_blocks_count;61,2166
    __u32 s_free_inodes_count;62,2221
    __u32 s_first_data_block;63,2276
    __u32 s_log_block_size;64,2329
    __s32 s_log_frag_size;65,2374
    __u32 s_blocks_per_group;66,2421
    __u32 s_frags_per_group;67,2476
    __u32 s_inodes_per_group;68,2533
    __u32 s_mtime;69,2588
    __u32 s_wtime;70,2625
    __u16 s_mnt_count;71,2662
    __s16 s_max_mnt_count;72,2704
    __u16 s_magic;73,2757
    __u16 s_state;74,2799
    __u16 s_errors;75,2843
    __u16 s_pad;76,2902
    __u32 s_lastcheck;77,2919
    __u32 s_checkinterval;78,2968
    __u32 s_creator_os;79,3026
    __u32 s_rev_level;80,3060
    __u16 s_def_resuid;81,3105
    __u16 s_def_resgid;82,3168
    __u32 s_first_ino;96,3809
    __u16 s_inode_size;97,3864
    __u16 s_block_group_nr;98,3919
    __u32 s_feature_compat;99,3986
    __u32 s_feature_incompat;100,4043
    __u32 s_feature_ro_compat;101,4104
    __u8  s_uuid[s_uuid102,4173
    char  s_volume_name[s_volume_name103,4226
    char  s_last_mounted[s_last_mounted104,4273
    __u32 s_algorithm_usage_bitmap;105,4338
    __u8  s_prealloc_blocks;110,4540
    __u8  s_prealloc_dir_blocks;111,4609
    __u16 s_reserved_gdt_blocks;112,4675
    __u8 s_journal_uuid[s_journal_uuid116,4834
    __u32 s_journal_inum;117,4896
    __u32 s_journal_dev;118,4957
    __u32 s_last_orphan;119,5018
    __u32 s_hash_seed[s_hash_seed120,5083
    __u8  s_def_hash_version;121,5131
    __u8  s_jnl_backup_type;122,5195
    __u16 s_reserved_word_pad;123,5262
    __u32 s_default_mount_opts;124,5293
    __u32 s_first_meta_bg;125,5325
    __u32 s_mkfs_time;126,5380
    __u32 s_jnl_blocks[s_jnl_blocks127,5442
    __u32 s_reserved[s_reserved128,5505
struct ext2_group_desc131,5576
    __u32 bg_block_bitmap;133,5603
    __u32 bg_inode_bitmap;134,5656
    __u32 bg_inode_table;135,5709
    __u16 bg_free_blocks_count;136,5760
    __u16 bg_free_inodes_count;137,5816
    __u16 bg_used_dirs_count;138,5872
    __u16 bg_pad;139,5926
    __u32 bg_reserved[bg_reserved140,5944
struct ext2_inode143,5976
    __u16 i_mode;145,5998
    __u16 i_uid;146,6033
    __u32 i_size;147,6067
    __u32 i_atime;148,6109
    __u32 i_ctime;149,6147
    __u32 i_mtime;150,6191
    __u32 i_dtime;151,6235
    __u16 i_gid;152,6279
    __u16 i_links_count;153,6312
    __u32 i_blocks;154,6359
    __u32 i_flags;155,6399
	    __u32 l_i_reserved1;160,6471
	linux1;162,6502
	    __u32 h_i_translator;165,6524
	hurd1;167,6556
	    __u32 m_i_reserved1;170,6577
	masix1;172,6608
    osd1;174,6625
    __u32 i_block[i_block175,6658
    __u32 i_version;176,6721
    __u32 i_file_acl;177,6772
    __u32 i_dir_acl;178,6810
    __u32 i_faddr;179,6852
	    __u8 l_i_frag;184,6926
	    __u8 l_i_fsize;185,6968
	    __u16 i_pad1;186,7009
	    __u32 l_i_reserved2[l_i_reserved2187,7028
	linux2;189,7062
	    __u8 h_i_frag;192,7084
	    __u8 h_i_fsize;193,7126
	    __u16 h_i_mode_high;194,7167
	    __u16 h_i_uid_high;195,7193
	    __u16 h_i_gid_high;196,7218
	    __u32 h_i_author;197,7243
	hurd2;199,7271
	    __u8 m_i_frag;202,7292
	    __u8 m_i_fsize;203,7334
	    __u16 m_pad1;204,7375
	    __u32 m_i_reserved2[m_i_reserved2205,7394
	masix2;207,7428
    osd2;209,7445
#define NAME_MAX 213,7505
typedef long linux_off_t;216,7589
#define EXT2_NAME_LEN 219,7637
struct ext2_dir_entry220,7663
    __u32 inode;222,7689
    __u16 rec_len;223,7726
    __u8 name_len;224,7775
    __u8 file_type;225,7813
    char name[name226,7833
#define EXT2_DIR_PAD 235,8009
#define EXT2_DIR_ROUND 236,8051
#define EXT2_DIR_REC_LEN(237,8110
struct ext4_extent 245,8366
    __u32 ee_block;246,8387
    __u16 ee_len;247,8453
    __u16 ee_start_hi;248,8520
    __u32 ee_start;249,8583
struct ext4_extent_idx 256,8742
    __u32 ei_block;257,8767
    __u32 ei_leaf;258,8840
    __u16 ei_leaf_hi;260,8992
    __u16 ei_unused;261,9055
struct ext4_extent_header 267,9153
    __u16  eh_magic;268,9181
    __u16  eh_entries;269,9254
    __u16  eh_max;270,9311
    __u16  eh_depth;271,9373
    __u32  eh_generation;272,9439
#define EXT4_EXT_MAGIC 275,9499
#define log2(278,9558
#define EXT2_SUPER_MAGIC 280,9588
#define EXT2_ROOT_INO 281,9655
#define PATH_MAX 282,9722
#define MAX_LINK_COUNT 283,9788
#define SUPERBLOCK 287,9952
#define GROUP_DESC 289,10017
#define INODE 292,10133
#define DATABLOCK1 294,10228
#define DATABLOCK2 296,10308
#define EXT2_ADDR_PER_BLOCK(300,10418
#define EXT2_ADDR_PER_BLOCK_BITS(301,10496
#define EXT2_INODE_SIZE(303,10565
#define EXT2_INODES_PER_BLOCK(304,10620
#define EXT2_BLOCK_SIZE_BITS(307,10716
#define EXT2_BLOCK_SIZE(309,10816
#define EXT2_DESC_PER_BLOCK(311,10895
#define S_IFMT 314,11007
#define S_IFLNK 315,11032
#define S_IFREG 316,11057
#define S_IFDIR 317,11082
#define S_ISLNK(318,11107
#define S_ISREG(319,11154
#define S_ISDIR(320,11206
ext2fs_mount 324,11338
ext2_rdfsb 344,12057
ext4_recurse_extent_index(355,12435
ext2fs_block_map 380,13253
ext2fs_read 506,17391
int ext2_is_fast_symlink 598,19368
ext2fs_dir 613,19921
fsi_init_plugin(906,28112

tools/libfsimage/common/fsimage.h,105
#define	_FSIMAGE_H25,1203
typedef struct fsi fsi_t;35,1325
typedef struct fsi_file fsi_file_t;36,1351

tools/libfsimage/common/fsimage_priv.h,512
#define	_FSIMAGE_PRIV_H25,1208
struct fsi_plugin 36,1345
	const char *fp_name;fp_name37,1365
	void *fp_dlh;fp_dlh38,1387
	fsi_plugin_ops_t *fp_ops;fp_ops39,1402
	struct fsi_plugin *fp_next;fp_next40,1429
	void *fp_data;fp_data41,1458
struct fsi 44,1478
	int f_fd;45,1491
	uint64_t f_off;46,1502
	void *f_data;f_data47,1519
	fsi_plugin_t *f_plugin;f_plugin48,1534
	char *f_bootstring;f_bootstring49,1559
struct fsi_file 52,1584
	fsi_t *ff_fsi;ff_fsi53,1602
	void *ff_data;ff_data54,1618

tools/libfsimage/common/fsimage_plugin.h,496
#define	_FSIMAGE_PLUGIN_H25,1210
#define	FSIMAGE_PLUGIN_VERSION 35,1321
typedef struct fsi_plugin fsi_plugin_t;37,1355
typedef struct fsi_plugin_ops 39,1396
	int fpo_version;40,1428
	int (*fpo_mount)fpo_mount41,1446
	int (*fpo_umount)fpo_umount42,1502
	fsi_file_t *(*fpo_open)fpo_open43,1531
	ssize_t (*fpo_read)fpo_read44,1580
	ssize_t (*fpo_pread)fpo_pread45,1632
	int (*fpo_close)fpo_close46,1695
} fsi_plugin_ops_t;47,1728
    (*fsi_plugin_init_t)fsi_plugin_init_t50,1776

tools/libfsimage/common/fsimage.c,384
static pthread_mutex_t fsi_lock 37,1424
fsi_t *fsi_open_fsimage(fsi_open_fsimage39,1486
void fsi_close_fsimage(73,2052
int fsi_file_exists(82,2251
fsi_file_t *fsi_open_file(fsi_open_file93,2422
int fsi_close_file(106,2671
ssize_t fsi_read_file(119,2896
ssize_t fsi_pread_file(132,3166
fsi_bootstring_alloc(146,3464
fsi_bootstring_free(157,3664
fsi_fs_bootstring(166,3800

tools/libfsimage/common/fsimage_grub.h,1145
#define	_FSIMAGE_GRUB_H25,1208
typedef struct fsig_plugin_ops 39,1404
	int fpo_version;40,1437
	int (*fpo_mount)fpo_mount41,1455
	int (*fpo_dir)fpo_dir42,1502
	int (*fpo_read)fpo_read43,1541
} fsig_plugin_ops_t;44,1586
#define	STAGE1_546,1608
#define FSYS_BUFLEN 47,1625
#define	SECTOR_BITS 48,1653
#define	SECTOR_SIZE 49,1675
#define	FSYS_BUF 51,1702
#define	filepos 52,1740
#define	filemax 53,1777
#define	devread 54,1814
#define substring 55,1843
#define	errnum 56,1876
#define	disk_read_func 57,1911
#define	disk_read_hook 58,1959
#define	print_possibilities 59,2007
#define	noisy_printf60,2037
#define	grub_memset 62,2059
#define	grub_memmove 63,2086
#define grub_log2 64,2115
#define	ERR_FSYS_CORRUPT 69,2226
#define	ERR_OUTSIDE_PART 70,2253
#define	ERR_SYMLINK_LOOP 71,2280
#define	ERR_FILELENGTH 72,2307
#define	ERR_BAD_FILETYPE 73,2332
#define	ERR_FILE_NOT_FOUND 74,2359
#define	ERR_BAD_ARGUMENT 75,2388
#define	ERR_FILESYSTEM_NOT_FOUND 76,2415
#define	ERR_NO_BOOTPATH 77,2450
#define	ERR_DEV_VALUES 78,2476
#define	ERR_WONT_FIT 79,2501
#define	ERR_READ 80,2524
#define	ERR_NEWER_VERSION 81,2543

tools/libfsimage/common/fsimage_plugin.c,300
static fsi_plugin_t *plugins;plugins35,1378
fsip_fs_set_data(38,1414
fsip_file_alloc(44,1494
fsip_file_free(58,1720
fsip_fs(64,1777
fsip_fs_offset(70,1839
fsip_fs_data(76,1900
fsip_file_data(82,1960
static int init_plugin(87,2021
static int load_plugins(122,2660
int find_plugin(194,4008

tools/libfsimage/common/fsimage_grub.c,1169
#define	_XOPEN_SOURCE 25,1200
static char *disk_read_junk;disk_read_junk34,1347
typedef struct fsig_data 36,1377
	char fd_buf[fd_buf37,1404
} fsig_data_t;38,1431
typedef struct fsig_file_data 40,1447
	char ffd_buf[ffd_buf41,1479
	uint64_t ffd_curpos;42,1507
	uint64_t ffd_filepos;43,1529
	uint64_t ffd_filemax;44,1552
	int ffd_int1;45,1575
	int ffd_int2;46,1590
	int ffd_errnum;47,1605
} fsig_file_data_t;48,1622
fsig_file_alloc(51,1656
fsig_fs_buf(71,2010
fsig_file_buf(78,2118
fsig_filepos(85,2245
fsig_filemax(92,2368
fsig_int1(99,2486
fsig_int2(106,2598
fsig_errnum(113,2710
fsig_disk_read_junk(120,2828
#define BSF 128,2947
#define BSF 130,2972
fsig_log2 133,3012
# define ia64_popcnt(144,3209
# define ia64_popcnt(146,3262
fsig_log2 155,3599
#define PPC_CNTLZL 166,3770
#define PPC_CNTLZL 168,3804
#define BITS_PER_LONG 170,3839
__ilog2(173,3892
fsig_log2 182,4031
fsig_log2 190,4138
fsig_devread(204,4301
fsig_substring(254,5313
fsig_mount(270,5499
fsig_umount(301,6129
fsig_open(309,6238
fsig_pread(330,6603
fsig_read(349,7064
fsig_close(360,7304
static fsi_plugin_ops_t fsig_grub_ops 367,7393
fsig_init(378,7651

tools/libfsimage/ufs/fsys_ufs.c,358
#define SUPERBLOCK 32,1063
#define	INODE 33,1117
#define DIRENT 34,1171
#define MAXBSIZE 35,1206
#define INDIRBLK1 36,1252
#define	INDIRBLK0 37,1329
#define	indirblk0 39,1422
#define	indirblk1 40,1458
ufs_mount(48,1710
ufs_dir(66,2210
ufs_read(106,3080
ufs_embed 140,3745
openi(151,3932
sbmap(169,4455
dlook(230,5878
fsi_init_plugin(267,6691

tools/libfsimage/ufs/ufs.h,4695
#define _GRUB_UFS_H_7,127
#define UFS_SBLOCK	10,178
#define UFS_SBSIZE	11,200
#define	UFS_MAGIC	12,224
#define	ROOTINO	13,251
#define UFS_NDADDR	14,298
#define	UFS_NIADDR	15,340
#define	MAXMNTLEN	16,383
#define	MAXCSBUFS	17,405
#define	MAXNAMELEN	18,426
#define	IFMT	21,467
#define	IFREG	22,488
#define	IFDIR	23,510
typedef unsigned char	grub_uchar_t;25,533
typedef	unsigned short	grub_ushort_t;26,569
typedef	unsigned short	grub_o_mode_t;27,607
typedef	unsigned short	grub_o_uid_t;28,645
typedef	unsigned short	grub_o_gid_t;29,682
typedef	uint32_t	grub_ino_t;30,719
typedef	int32_t		grub_int32_t;31,748
typedef	int32_t		grub_uid_t;32,779
typedef	int32_t		grub_gid_t;33,808
typedef uint32_t	grub_uint32_t;34,837
typedef uint32_t	grub_daddr32_t;35,869
typedef	uint32_t	grub_time32_t;36,902
typedef struct { int val[val37,934
typedef struct { int val[2]; } grub_quad_t;37,934
struct timeval32 39,979
  	grub_time32_t	tv_sec;40,998
	grub_int32_t	tv_usec;41,1023
struct csum 53,1380
	grub_int32_t	cs_ndir;54,1394
	grub_int32_t	cs_nbfree;55,1445
	grub_int32_t	cs_nifree;56,1498
	grub_int32_t	cs_nffree;57,1551
struct fs 61,1629
	grub_uint32_t	fs_link;62,1641
	grub_uint32_t	fs_rolled;63,1699
	grub_daddr32_t	fs_sblkno;64,1761
	grub_daddr32_t	fs_cblkno;65,1825
	grub_daddr32_t	fs_iblkno;66,1889
	grub_daddr32_t	fs_dblkno;67,1956
	grub_int32_t	fs_cgoffset;68,2019
	grub_int32_t	fs_cgmask;69,2086
	grub_time32_t	fs_time;70,2143
	grub_int32_t	fs_size;71,2191
	grub_int32_t	fs_dsize;72,2243
	grub_int32_t	fs_ncg;73,2301
	grub_int32_t	fs_bsize;74,2356
	grub_int32_t	fs_fsize;75,2413
	grub_int32_t	fs_frag;76,2469
	grub_int32_t	fs_minfree;78,2573
	grub_int32_t	fs_rotdelay;79,2639
	grub_int32_t	fs_rps;80,2705
	grub_int32_t	fs_bmask;82,2814
	grub_int32_t	fs_fmask;83,2875
	grub_int32_t	fs_bshift;84,2938
	grub_int32_t	fs_fshift;85,3002
	grub_int32_t	fs_maxcontig;87,3109
	grub_int32_t	fs_maxbpg;88,3173
	grub_int32_t	fs_fragshift;90,3289
	grub_int32_t	fs_fsbtodb;91,3343
	grub_int32_t	fs_sbsize;92,3410
	grub_int32_t	fs_csmask;93,3468
	grub_int32_t	fs_csshift;94,3517
	grub_int32_t	fs_nindir;95,3567
	grub_int32_t	fs_inopb;96,3614
	grub_int32_t	fs_nspf;97,3659
	grub_int32_t	fs_optim;99,3745
	grub_int32_t	fs_state;114,4416
	grub_int32_t	fs_si;115,4475
	grub_int32_t	fs_trackskew;116,4534
	grub_int32_t	fs_id[fs_id121,4852
	grub_daddr32_t	fs_csaddr;123,4966
	grub_int32_t	fs_cssize;124,5032
	grub_int32_t	fs_cgsize;125,5092
	grub_int32_t	fs_ntrak;127,5193
	grub_int32_t	fs_nsect;128,5243
	grub_int32_t	fs_spc;129,5291
	grub_int32_t	fs_ncyl;131,5393
	grub_int32_t	fs_cpg;133,5499
	grub_int32_t	fs_ipg;134,5548
	grub_int32_t	fs_fpg;135,5594
	struct csum	fs_cstotal;137,5701
	char		fs_fmod;139,5807
	char		fs_clean;140,5855
	char		fs_ronly;141,5901
	char		fs_flags;142,5947
	char		fs_fsmnt[fs_fsmnt143,5992
	grub_int32_t	fs_cgrotor;145,6103
		grub_uint32_t	fs_csp_pad[fs_csp_pad153,6420
		struct csum	*fs_csp;fs_csp154,6459
	} fs_u;155,6482
	grub_int32_t	fs_cpc;156,6491
	short		fs_opostbl[fs_opostbl157,6544
	grub_int32_t	fs_sparecon[fs_sparecon158,6607
	grub_int32_t	fs_version;159,6677
	grub_int32_t	fs_logbno;160,6734
	grub_int32_t	fs_reclaim;161,6789
	grub_int32_t	fs_sparecon2;162,6849
	grub_int32_t	fs_npsect;164,6942
	grub_quad_t	fs_qbmask;165,7006
	grub_quad_t	fs_qfmask;166,7071
	grub_int32_t	fs_postblformat;167,7136
	grub_int32_t	fs_nrpos;168,7205
	grub_int32_t	fs_postbloff;169,7265
	grub_int32_t	fs_rotbloff;170,7332
	grub_int32_t	fs_magic;172,7416
	grub_uchar_t	fs_space[fs_space173,7459
struct icommon 177,7552
	grub_o_mode_t	ic_smode;178,7569
	short		ic_nlink;179,7625
	grub_o_uid_t	ic_suid;180,7676
	grub_o_gid_t	ic_sgid;181,7724
	grub_uint32_t	ic_sizelo;182,7773
	grub_uint32_t	ic_sizehi;183,7832
	struct timeval32 ic_atime;184,7892
	struct timeval32 ic_mtime;185,7949
	struct timeval32 ic_ctime;186,8006
	grub_daddr32_t	ic_db[ic_db187,8068
	grub_daddr32_t	ic_ib[ic_ib188,8134
	grub_int32_t	ic_flags;189,8195
	grub_int32_t	ic_blocks;190,8237
	grub_int32_t	ic_gen;191,8303
	grub_int32_t	ic_shadow;192,8355
	grub_uid_t	ic_uid;193,8404
	grub_gid_t	ic_gid;194,8460
	grub_uint32_t	ic_oeftflag;195,8516
struct direct 199,8613
	grub_ino_t	d_ino;200,8629
	grub_ushort_t	d_reclen;201,8648
	grub_ushort_t	d_namelen;202,8673
	char		d_name[d_name203,8699
#define INOPB(207,8753
#define itoo(208,8794
#define	itog(209,8847
#define itod(210,8903
#define	UFS_NINDIR(215,9092
#define blkoff(216,9154
#define lblkno(217,9211
#define fsbtodb(219,9296
#define blkstofrags(220,9363
#define cgbase(223,9448
#define	cgimin(224,9509
#define cgstart(225,9584

tools/libfsimage/fat/fsys_fat.c,716
struct fat_superblock 24,888
  int fat_offset;26,913
  int fat_length;27,931
  int fat_size;28,949
  int root_offset;29,965
  int root_max;30,984
  int data_offset;31,1000
  int num_sectors;33,1022
  int num_clust;34,1041
  int clust_eof_marker;35,1058
  int sects_per_clust;36,1082
  int sectsize_bits;37,1105
  int clustsize_bits;38,1126
  int root_cluster;39,1148
  int cached_fat;41,1171
  int file_cluster;42,1189
  int current_cluster_num;43,1209
  int current_cluster;44,1236
#define FAT_SUPER 48,1322
#define FAT_BUF 50,1419
#define NAME_BUF 51,1484
#define FAT_CACHE_SIZE 53,1558
#define log2 55,1587
fat_mount 58,1622
fat_read 183,5192
fat_dir 277,7722
fsi_init_plugin(474,12098

tools/libfsimage/fat/fat.h,1373
typedef __signed__ char __s8;26,918
typedef unsigned char __u8;27,948
typedef __signed__ short __s16;28,976
typedef unsigned short __u16;29,1008
typedef __signed__ int __s32;30,1038
typedef unsigned int __u32;31,1068
struct fat_bpb 36,1200
	__s8	ignored[ignored37,1217
	__s8	system_id[system_id38,1271
	__u8	bytes_per_sect[bytes_per_sect40,1365
	__u8	sects_per_clust;41,1421
	__u8	reserved_sects[reserved_sects42,1465
	__u8	num_fats;43,1513
	__u8	dir_entries[dir_entries44,1550
	__u8	short_sectors[short_sectors45,1601
	__u8	media;46,1649
	__u16	fat_length;47,1689
	__u16	secs_track;48,1726
	__u16	heads;49,1769
	__u32	hidden;50,1806
	__u32	long_sectors;51,1852
	__u32	fat32_length;54,1973
	__u16	flags;55,2012
	__u8	version[version56,2073
	__u32	root_cluster;57,2129
	__u16	info_sector;58,2188
	__u16	backup_boot;59,2237
	__u16	reserved2[reserved260,2282
#define FAT_CVT_U16(63,2320
#define FAT_MAX_12BIT_CLUST 69,2436
#define FAT_ATTRIB_OK_MASK 75,2541
#define FAT_ATTRIB_NOT_OK_MASK 76,2580
#define FAT_ATTRIB_DIR 77,2619
#define FAT_ATTRIB_LONGNAME 78,2658
#define FAT_DIRENTRY_LENGTH 84,2744
#define FAT_DIRENTRY_ATTRIB(86,2782
#define FAT_DIRENTRY_VALID(88,2846
#define FAT_DIRENTRY_FIRST_CLUSTER(92,3018
#define FAT_DIRENTRY_FILELENGTH(94,3124
#define FAT_LONGDIR_ID(97,3194
#define FAT_LONGDIR_ALIASCHECKSUM(99,3250

tools/fs-back/fs-xenbus.c,533
#undef NDEBUG1,0
static bool xenbus_printf(15,247
bool xenbus_create_request_node(35,835
int xenbus_register_export(53,1214
int xenbus_get_watch_fd(105,2550
int xenbus_read_mount_request(125,2945
static int get_self_id(172,4361
bool xenbus_write_backend_node(186,4649
bool xenbus_write_backend_state(203,5309
void xenbus_free_backend_node(214,5619
bool xenbus_watch_frontend_state(225,5870
bool xenbus_unwatch_frontend_state(234,6112
int xenbus_frontend_state_changed(243,6358
char* xenbus_read_frontend_state(264,6884

tools/fs-back/fs-ops.c,1286
#undef NDEBUG1,0
#define BUFFER_SIZE 25,440
static int check_export_path(27,466
static unsigned short get_request(46,926
static int get_fd(57,1257
static void dispatch_file_open(68,1421
static void dispatch_file_close(119,3082
#define MAX_GNTS 149,4010
static void dispatch_file_read(150,4030
static void end_file_read(204,6002
static void dispatch_file_write(226,6732
static void end_file_write(282,8753
static void dispatch_stat(304,9488
static void dispatch_truncate(355,11060
static void dispatch_remove(387,12038
static void dispatch_rename(429,13486
static void dispatch_create(475,15197
static void dispatch_list(539,17254
static void dispatch_chmod(614,19848
static void dispatch_fs_space(645,20779
static void dispatch_file_sync(689,22287
static void end_file_sync(725,23458
struct fs_op fopen_op 740,23939
struct fs_op fclose_op 743,24128
struct fs_op fread_op 746,24319
struct fs_op fwrite_op 749,24517
struct fs_op fstat_op 752,24718
struct fs_op ftruncate_op 755,24897
struct fs_op fremove_op 758,25089
struct fs_op frename_op 761,25272
struct fs_op fcreate_op 764,25455
struct fs_op flist_op 767,25638
struct fs_op fchmod_op 770,25821
struct fs_op fspace_op 773,26002
struct fs_op fsync_op 776,26189
struct fs_op *fsops[fsops781,26389

tools/fs-back/fs-debug.h,73
#define __FS_DEBUG__2,21
#define FS_DEBUG(7,76
#define FS_DEBUG(9,164

tools/fs-back/sys-queue.h,1647
#define _SYS_QUEUE_H_40,1900
#define LIST_HEAD(74,3427
#define LIST_HEAD_INITIALIZER(79,3652
#define LIST_ENTRY(82,3744
#define LIST_INIT(91,4069
#define LIST_INSERT_AFTER(95,4243
#define LIST_INSERT_BEFORE(103,4713
#define LIST_INSERT_HEAD(110,5109
#define LIST_REMOVE(117,5505
#define LIST_FOREACH(124,5901
#define LIST_EMPTY(132,6203
#define LIST_FIRST(133,6270
#define LIST_NEXT(134,6329
#define _TAILQ_HEAD(140,6428
#define TAILQ_HEAD(145,6726
#define TAILQ_HEAD_INITIALIZER(147,6791
#define _TAILQ_ENTRY(150,6902
#define TAILQ_ENTRY(155,7206
#define TAILQ_INIT(160,7298
#define TAILQ_INSERT_HEAD(165,7546
#define TAILQ_INSERT_TAIL(175,8164
#define TAILQ_INSERT_AFTER(182,8560
#define TAILQ_INSERT_BEFORE(192,9178
#define TAILQ_REMOVE(199,9574
#define TAILQ_FOREACH(208,10118
#define TAILQ_FOREACH_REVERSE(213,10390
#define TAILQ_EMPTY(221,10743
#define TAILQ_FIRST(222,10811
#define TAILQ_NEXT(223,10871
#define TAILQ_LAST(225,10936
#define TAILQ_PREV(227,11036
#define CIRCLEQ_HEAD(234,11187
#define CIRCLEQ_HEAD_INITIALIZER(240,11486
#define CIRCLEQ_ENTRY(243,11602
#define CIRCLEQ_INIT(252,11937
#define CIRCLEQ_INSERT_AFTER(257,12185
#define CIRCLEQ_INSERT_BEFORE(267,12803
#define CIRCLEQ_INSERT_HEAD(277,13421
#define CIRCLEQ_INSERT_TAIL(287,14039
#define CIRCLEQ_REMOVE(297,14657
#define CIRCLEQ_FOREACH(310,15497
#define CIRCLEQ_FOREACH_REVERSE(315,15769
#define CIRCLEQ_EMPTY(323,16082
#define CIRCLEQ_FIRST(324,16160
#define CIRCLEQ_LAST(325,16220
#define CIRCLEQ_NEXT(326,16279
#define CIRCLEQ_PREV(327,16343
#define CIRCLEQ_LOOP_NEXT(329,16408
#define CIRCLEQ_LOOP_PREV(333,16667

tools/fs-back/fs-backend.h,1467
#define __LIB_FS_BACKEND__2,27
#define ROOT_NODE 12,222
#define EXPORTS_SUBNODE 13,264
#define EXPORTS_NODE 14,302
#define WATCH_NODE 15,358
#define MAX_FDS 16,410
#define MAX_RING_SIZE 17,441
struct fs_export19,473
    int export_id;21,492
    char *export_path;export_path22,511
    char *name;name23,534
    struct fs_export *next;next24,550
struct fs_request27,583
    struct fs_mount *mount;mount29,603
    int id;30,631
    int active;31,643
    void *page;page32,659
    int count;33,729
    struct fsif_request req_shadow;34,744
    struct aiocb aiocb;35,780
struct fs_mount39,810
    struct fs_export *export;export41,828
    int dom_id;42,858
    char *frontend;frontend43,874
    int mount_id;44,894
    grant_ref_t grefs[grefs45,951
    evtchn_port_t remote_evtchn;46,989
    xc_interface *xch;xch47,1022
    xc_evtchn *evth;evth48,1086
    evtchn_port_t local_evtchn;49,1155
    xc_gnttab *gnth;gnth50,1187
    int shared_ring_size;51,1208
    struct fsif_back_ring ring;52,1261
    int nr_entries;53,1293
    struct fs_request *requests;requests54,1313
    unsigned short *freelist;freelist55,1346
    int fds[fds56,1376
    LIST_ENTRY(57,1398
struct fs_op78,2241
    int type;80,2256
    void (*dispatch_handler)dispatch_handler82,2370
    void (*response_handler)response_handler83,2450
static inline void add_id_to_freelist(89,2626
static inline unsigned short get_id_from_freelist(95,2770

tools/fs-back/fs-backend.c,612
#undef NDEBUG1,0
struct xs_handle *xsh xsh19,357
static struct fs_export *fs_exports fs_exports20,387
static int export_id 21,431
static int mount_id 22,457
static int pipefds[pipefds23,482
static LIST_HEAD(24,505
static void handle_aio_event(52,1290
static void allocate_request_array(74,1997
static void handle_mount(95,2654
void terminate_mount_request(147,4237
static void free_mount_request(180,5230
static void handle_connection(190,5517
static void await_connections(296,9016
static struct fs_export* create_export(419,14104
static void aio_signal_handler(438,14675
int main(447,15005

tools/vtpm_manager/crypto/sym_crypto.h,178
#define _SYM_CRYPTO_H41,1893
typedef struct symkey_t 46,1962
  buffer_t key;47,1988
  EVP_CIPHER_CTX context;49,2007
  const EVP_CIPHER * cipher;50,2033
} symkey_t;51,2062

tools/vtpm_manager/crypto/crypto.h,619
#define __CRYPTO_H__41,1903
#define CRYPTO_MAX_SIG_SIZE 50,2029
#define CRYPTO_MAX_RSA_KEY_SIZE 51,2068
#define OAEP_P 53,2123
#define OAEP_P_SIZE 54,2145
#define CRYPTO_ALGORITH_RSA 57,2237
#define CRYPTO_ES_NONE 60,2325
#define CRYPTO_ES_RSAESPKCSv15 61,2355
#define CRYPTO_ES_RSAESOAEP_SHA1_MGF1 62,2393
#define CRYPTO_SS_NONE 65,2492
#define CRYPTO_SS_RSASSAPKCS1v15_SHA1 66,2522
#define CRYPTO_SS_RSASSAPKCS1v15_DER 67,2567
typedef struct CRYPTO_INFO 69,2612
  void *keyInfo;keyInfo70,2641
  UINT32 algorithmID;71,2658
  UINT32 encScheme;72,2680
  UINT32 sigScheme;73,2700
} CRYPTO_INFO;74,2720

tools/vtpm_manager/crypto/rsa.c,334
void Crypto_RSACreateKey(56,2197
void Crypto_RSABuildCryptoInfo(92,3505
void Crypto_RSABuildCryptoInfoPublic(125,4737
int Crypto_RSAEnc(152,5668
int Crypto_RSADec(204,6806
int Crypto_RSASign(270,8688
bool Crypto_RSAVerify(301,9585
TPM_RESULT Crypto_RSAPackCryptoInfo 335,10620
TPM_RESULT Crypto_RSAUnpackCryptoInfo 393,12040

tools/vtpm_manager/crypto/crypto.c,83
void Crypto_Init(53,2152
void Crypto_Exit(68,2439
void Crypto_GetRandom(80,2605

tools/vtpm_manager/crypto/sym_crypto.c,455
typedef enum crypt_op_type_t 46,1983
  CRYPT_ENCRYPT,47,2014
  CRYPT_DECRYPT48,2031
} crypt_op_type_t;49,2047
const EVP_CIPHER * SYM_CIPHER 59,2355
const BYTE ZERO_IV[ZERO_IV61,2394
TPM_RESULT Crypto_symcrypto_initkey 64,2441
TPM_RESULT Crypto_symcrypto_genkey 85,2805
TPM_RESULT Crypto_symcrypto_encrypt 113,3408
TPM_RESULT Crypto_symcrypto_decrypt 151,4286
TPM_RESULT Crypto_symcrypto_freekey 186,5138
TPM_RESULT ossl_symcrypto_op 196,5326

tools/vtpm_manager/crypto/hash.c,270
static SHA_CTX g_shaContext;53,2186
void Crypto_HMAC(55,2216
TPM_RESULT Crypto_HMAC_buf 66,2549
void Crypto_SHA1Full(82,2897
TPM_RESULT Crypto_SHA1Full_buf 103,3337
void Crypto_SHA1Start(120,3733
void Crypto_SHA1Update(133,4048
void Crypto_SHA1Complete(148,4466

tools/vtpm_manager/migration/vtpm_migratord_handler.c,267
#define VTPM_SH_CMD_HDR 43,1894
#define VTPM_SH_CMD_FTR 44,1992
#define VTPM_SH_GETINST 45,2022
#define VTPM_SH_ADD 46,2077
#define VTPM_SH_RESUME 47,2126
#define VTPM_SH_CMD_SIZE 50,2237
void handle_vtpm_mig_step2(52,2349
void handle_vtpm_mig_step3(100,3749

tools/vtpm_manager/migration/vtpm_manager_if.c,276
#define VTPM_TX_HP_FNAME 53,2146
#define VTPM_RX_HP_FNAME 54,2213
static vtpm_ipc_handle_t tx_ipc_h,56,2279
static vtpm_ipc_handle_t tx_ipc_h, rx_ipc_h;56,2279
TPM_RESULT vtpm_manager_open(58,2325
void vtpm_manager_close(69,2670
TPM_RESULT vtpm_manager_command(76,2761

tools/vtpm_manager/migration/vtpm_migrator_if.c,150
static int sock_desc;56,2241
TPM_RESULT vtpm_migratord_open(59,2265
void vtpm_migratord_close(108,3364
TPM_RESULT vtpm_migratord_command(113,3418

tools/vtpm_manager/migration/vtpm_migratord.c,48
void build_error_msg(47,1966
int main(59,2316

tools/vtpm_manager/migration/vtpm_migrator.h,376
#define __VTPM_MIGRATOR_H__41,1923
#define VTPM_MTAG_REQ 43,1952
#define VTPM_MTAG_RSP 44,1981
#define VTPM_COMMAND_HEADER_SIZE 47,2029
#define VTPM_MIG_PORT 51,2206
#define VTPM_MORD_MIG_STEP1 54,2305
#define VTPM_MORD_MIG_STEP2 55,2342
#define VTPM_MORD_MIG_STEP3 56,2379
#define VTPM_MORD_MIG_STEP4 57,2416
#define VTPM_SUCCESS 60,2523
#define VTPM_FAIL 61,2560

tools/vtpm_manager/migration/vtpm_migratorc.c,104
TPM_RESULT handle_vtpm_mig_step2(44,1898
TPM_RESULT handle_vtpm_mig_step3(100,3571
int main(171,5826

tools/vtpm_manager/util/log.h,598
#define __VTPM_LOG_H__35,1771
#define VTPM_LOG_CRYPTO 43,1997
#define VTPM_LOG_BSG 44,2028
#define VTPM_LOG_TXDATA 45,2059
#define VTPM_LOG_TCS 46,2090
#define VTPM_LOG_TCS_DEEP 47,2121
#define VTPM_LOG_VTSP 48,2152
#define VTPM_LOG_VTPM 49,2183
#define VTPM_LOG_VTPM_DEEP 50,2214
#define VTPM_LOG_VTSP_DEEP 51,2245
static char *module_names[module_names53,2277
#define LOGGING_MODULES 67,2762
#define BITMASK(71,2840
#define GETBIT(72,2882
#define SETBIT(73,2942
#define CLEARBIT(74,2990
#define vtpmloginfo(76,3045
#define vtpmloginfomore(81,3218
#define vtpmlogerror(86,3404

tools/vtpm_manager/util/buffer.c,465
TPM_RESULT buffer_init 51,2012
TPM_RESULT buffer_init_convert 73,2456
TPM_RESULT buffer_init_copy 84,2678
TPM_RESULT buffer_init_const 94,2897
TPM_RESULT buffer_init_alias 107,3302
TPM_RESULT buffer_init_alias_convert 129,3863
TPM_RESULT buffer_copy 143,4100
BOOL buffer_eq 163,4458
void buffer_memset 168,4596
TPM_RESULT buffer_append_raw 173,4683
tpm_size_t buffer_len 193,5059
TPM_RESULT buffer_free 197,5128
TPM_RESULT buffer_priv_realloc 208,5341

tools/vtpm_manager/util/hashtable_itr.c,202
hashtable_iterator(44,1928
hashtable_iterator_key(85,2990
hashtable_iterator_value(89,3066
hashtable_iterator_advance(97,3333
hashtable_iterator_remove(159,4771
hashtable_iterator_search(194,5772

tools/vtpm_manager/util/hashtable_private.h,545
#define __HASHTABLE_PRIVATE_CWC22_H__36,1690
struct entry44,1887
    void *k,k46,1902
    void *k, *v;v46,1902
    unsigned int h;47,1919
    struct entry *next;next48,1939
struct hashtable 51,1967
    unsigned int tablelength;52,1986
    struct entry **table;table53,2016
    unsigned int entrycount;54,2042
    unsigned int loadlimit;55,2071
    unsigned int primeindex;56,2099
    unsigned int (*hashfn)hashfn57,2128
    int (*eqfn)eqfn58,2166
    pthread_mutex_t mutex;60,2230
indexFor(71,2520
#define freekey(84,2883

tools/vtpm_manager/util/bsg.c,1414
static int g_log_recursion_level 49,2052
#define BSG_MAX_BUF_SIZE 53,2189
#define bsglog(55,2223
#define __FMT_CONST 86,3596
#define __FMT_DATA 87,3652
#define __FMT_SIZE 88,3727
#define __FMT_HSIZE 89,3795
#define __FMT_PACKED 90,3850
#define __FMT_MASK 96,4214
#define __FMT_MASK_SIZE(97,4282
#define __FMT_MASK_FORMAT(98,4336
#define FMT_U8 101,4421
#define FMT_U16 102,4456
#define FMT_U32 103,4492
#define FMT_SIZEOF(106,4568
#define FMT_DATA(110,4697
#define FMT_SIZE16_DATA 113,4817
#define FMT_SIZE32_DATA 114,4860
#define FMT_SIZE16_HANDLES 117,4945
#define DIGEST_SIZE 119,4993
typedef BSG_UINT32 BSG_HANDLE;120,5017
#define MAX_FIELDS 123,5077
typedef struct BSG_Format124,5099
  BSG_Type type;126,5127
  const char* name;127,5144
  BSG_UINT32 fields[fields128,5164
} BSG_Format;129,5201
static BSG_Format s_fmt[s_fmt136,5376
static const BSG_Format* find_format 292,10504
BOOL BSG_static_selfcheck 320,11307
static int BSG_Pack_private(348,12105
static int BSG_Unpack_private(480,15714
static void BSG_Destroy_private(603,19073
int BSG_Pack(643,20180
int BSG_Unpack(649,20338
void BSG_Destroy(655,20499
void BSG_PackConst(667,20789
BSG_UINT32 BSG_UnpackConst(692,21449
int BSG_PackList(717,22045
int BSG_UnpackList(739,22641
void BSG_DestroyList(761,23174
TPM_RESULT BSG_DestroyTuple 783,23643
int BSG_PackMalloc 798,23941
int BSG_PackListMalloc(811,24210

tools/vtpm_manager/util/hashtable.c,335
static const unsigned int primes[primes47,1923
const unsigned int prime_table_length 56,2170
const float max_load_factor 57,2244
create_hashtable(61,2380
hash(92,3527
hashtable_expand(104,3837
hashtable_count(163,5853
hashtable_insert(178,6190
hashtable_search(210,7284
hashtable_remove(239,8071
hashtable_destroy(279,9088

tools/vtpm_manager/util/hashtable_itr.h,258
#define __HASHTABLE_ITR_CWC22__37,1685
struct hashtable_itr44,1983
    struct hashtable *h;h46,2006
    struct entry *e;e47,2031
    struct entry *parent;parent48,2052
    unsigned int index;49,2078
#define DEFINE_HASHTABLE_ITERATOR_SEARCH(96,3770

tools/vtpm_manager/util/bsg.h,1990
#define __BSG_H__41,1919
typedef unsigned int BSG_UINT32;46,1979
typedef unsigned char BSG_BYTE;47,2012
typedef enum BSG_Type62,2303
  BSG_TYPE_FIRST 64,2328
  BSG_TYPE_UINT32 65,2350
  BSG_TYPE_UINT16,67,2467
  BSG_TYPE_BYTE,68,2486
  BSG_TYPE_BOOL,69,2503
  BSG_TPM_SIZE32_DATA,70,2520
  BSG_TPM_TAG,73,2708
  BSG_TPM_HANDLE,74,2723
  BSG_TPM_RESULT,75,2741
  BSG_TPM_RESOURCE_TYPE,76,2759
  BSG_TPM_COMMAND_CODE,77,2784
  BSG_TPM_AUTH_DATA_USAGE,78,2808
  BSG_TPM_ALGORITHM_ID,79,2835
  BSG_TPM_PROTOCOL_ID,80,2859
  BSG_TPM_KEY_USAGE,81,2882
  BSG_TPM_ENC_SCHEME,82,2903
  BSG_TPM_SIG_SCHEME,83,2925
  BSG_TPM_MIGRATE_SCHEME,84,2947
  BSG_TPM_KEY_FLAGS,85,2973
  BSG_TPM_AUTHDATA,86,2994
  BSG_TPM_SECRET,87,3014
  BSG_TPM_ENCAUTH,88,3032
  BSG_TPM_PAYLOAD_TYPE,89,3051
  BSG_TPM_VERSION,91,3078
  BSG_TPM_DIGEST,92,3097
  BSG_TPM_COMPOSITE_HASH,93,3115
  BSG_TPM_CHOSENID_HASH,94,3141
  BSG_TPM_NONCE,95,3166
  BSG_TPM_KEY_HANDLE,96,3183
  BSG_TPM_KEY_HANDLE_LIST,97,3205
  BSG_TPM_KEY_PARMS,98,3232
  BSG_TPM_RSA_KEY_PARMS,99,3253
  BSG_TPM_STORE_PUBKEY,100,3278
  BSG_TPM_PUBKEY,101,3302
  BSG_TPM_KEY,102,3320
  BSG_TPM_MIGRATIONKEYAUTH,104,3338
  BSG_TCPA_AUDIT_EVENT,105,3366
  BSG_TCPA_EVENT_CERT,106,3390
  BSG_TPM_PCR_SELECTION,107,3413
  BSG_TPM_PCR_COMPOSITE,108,3438
  BSG_TPM_PCR_INFO,109,3463
  BSG_TPM_STORED_DATA,110,3483
  BSG_TPM_SYMMETRIC_KEY,111,3506
  BSG_TPM_STORE_PRIVKEY,112,3531
  BSG_TPM_STORE_ASYMKEY,113,3556
  BSG_TPM_MIGRATE_ASYMKEY,114,3581
  BSG_TPM_QUOTE_INFO,115,3608
  BSG_TPM_IDENTITY_CONTENTS,116,3630
  BSG_TPM_PCRVALUE,117,3659
  BSG_TCPA_PCR_FLAGS,118,3679
  BSG_TCS_AUTH,119,3701
  BSG_TPM_KEY_NONSENSITIVE,122,3782
  BSG_PACKED,124,3813
  BSG_TYPE_MAX126,3830
} BSG_Type;127,3845
struct pack_const_tuple_t 129,3858
  BSG_Type type;130,3886
  const void * addr;131,3903
typedef struct pack_tuple_t 135,3929
  BSG_Type type;136,3959
  void * addr;137,3976
} pack_tuple_t;138,3991

tools/vtpm_manager/util/hashtable.h,164
#define __HASHTABLE_CWC22_H__37,1683
#define DEFINE_HASHTABLE_INSERT(134,5455
#define DEFINE_HASHTABLE_SEARCH(152,5999
#define DEFINE_HASHTABLE_REMOVE(170,6585

tools/vtpm_manager/util/buffer.h,230
#define __VTPM_BUFFER_H__35,1774
typedef UINT32 tpm_size_t;40,1871
#define NULL_BUF 44,1947
  tpm_size_t size,48,2007
  tpm_size_t size, alloc_size;48,2007
  BYTE * bytes;49,2038
  BOOL is_owner;51,2057
} buffer_t;52,2134

tools/vtpm_manager/util/log.c,244
typedef struct error_code_entry_t 43,1919
  TPM_RESULT code;44,1955
  char * code_name;45,1974
  char * msg;46,1994
} error_code_entry_t;47,2008
static const error_code_entry_t error_msgs 49,2031
const char* tpm_get_error_name 134,10086

tools/vtpm_manager/util/tcg.h,12805
#define __TCG_H__41,1918
typedef unsigned char BYTE;47,2087
typedef unsigned char BOOL;48,2115
typedef unsigned short UINT16;49,2143
typedef unsigned int UINT32;50,2174
typedef unsigned long long UINT64;51,2203
typedef UINT32 TPM_RESULT;53,2239
typedef UINT32 TPM_PCRINDEX;54,2266
typedef UINT32 TPM_DIRINDEX;55,2295
typedef UINT32 TPM_HANDLE;56,2324
typedef TPM_HANDLE TPM_AUTHHANDLE;57,2351
typedef TPM_HANDLE TCPA_HASHHANDLE;58,2386
typedef TPM_HANDLE TCPA_HMACHANDLE;59,2422
typedef TPM_HANDLE TCPA_ENCHANDLE;60,2458
typedef TPM_HANDLE TPM_KEY_HANDLE;61,2493
typedef TPM_HANDLE TCPA_ENTITYHANDLE;62,2528
typedef UINT32 TPM_RESOURCE_TYPE;63,2566
typedef UINT32 TPM_COMMAND_CODE;64,2600
typedef UINT16 TPM_PROTOCOL_ID;65,2633
typedef BYTE TPM_AUTH_DATA_USAGE;66,2665
typedef UINT16 TPM_ENTITY_TYPE;67,2699
typedef UINT32 TPM_ALGORITHM_ID;68,2731
typedef UINT16 TPM_KEY_USAGE;69,2764
typedef UINT16 TPM_STARTUP_TYPE;70,2794
typedef UINT32 TPM_CAPABILITY_AREA;71,2827
typedef UINT16 TPM_ENC_SCHEME;72,2863
typedef UINT16 TPM_SIG_SCHEME;73,2894
typedef UINT16 TPM_MIGRATE_SCHEME;74,2925
typedef UINT16 TPM_PHYSICAL_PRESENCE;75,2960
typedef UINT32 TPM_KEY_FLAGS;76,2998
#define TPM_DIGEST_SIZE 78,3029
typedef BYTE TPM_AUTHDATA[TPM_AUTHDATA79,3078
typedef TPM_AUTHDATA TPM_SECRET;80,3122
typedef TPM_AUTHDATA TPM_ENCAUTH;81,3155
typedef BYTE TPM_PAYLOAD_TYPE;82,3189
typedef UINT16 TPM_TAG;83,3220
typedef UINT32 TCS_AUTHHANDLE;86,3270
typedef UINT32 TCS_CONTEXT_HANDLE;87,3347
typedef UINT32 TCS_KEY_HANDLE;88,3406
typedef struct TPM_VERSION 92,3535
  BYTE major;93,3564
  BYTE minor;94,3578
  BYTE revMajor;95,3592
  BYTE revMinor;96,3609
} TPM_VERSION;97,3626
static const TPM_VERSION TPM_STRUCT_VER_1_1 99,3643
typedef struct TPM_DIGEST 101,3703
  BYTE digest[digest102,3731
} TPM_DIGEST;103,3763
typedef TPM_DIGEST TPM_PCRVALUE;105,3778
typedef TPM_DIGEST TPM_COMPOSITE_HASH;106,3811
typedef TPM_DIGEST TPM_DIRVALUE;107,3850
typedef TPM_DIGEST TPM_HMAC;108,3883
typedef TPM_DIGEST TPM_CHOSENID_HASH;109,3912
typedef struct TPM_NONCE 111,3951
  BYTE nonce[nonce112,3978
} TPM_NONCE;113,4009
typedef struct TPM_KEY_PARMS 115,4023
  TPM_ALGORITHM_ID algorithmID;116,4054
  TPM_ENC_SCHEME encScheme;117,4086
  TPM_SIG_SCHEME sigScheme;118,4114
  UINT32 parmSize;119,4142
  BYTE* parms;120,4161
} TPM_KEY_PARMS;121,4176
typedef struct TPM_RSA_KEY_PARMS 123,4194
  UINT32 keyLength;124,4231
  UINT32 numPrimes;125,4252
  UINT32 exponentSize;126,4273
  BYTE* exponent;127,4296
} TPM_RSA_KEY_PARMS;128,4314
typedef struct TPM_STORE_PUBKEY 130,4336
  UINT32 keyLength;131,4370
  BYTE* key;132,4390
} TPM_STORE_PUBKEY;133,4403
typedef struct TPM_PUBKEY 135,4424
  TPM_KEY_PARMS algorithmParms;136,4452
  TPM_STORE_PUBKEY pubKey;137,4484
} TPM_PUBKEY;138,4511
typedef struct TPM_KEY 140,4526
  TPM_VERSION         ver;141,4551
  TPM_KEY_USAGE       keyUsage;142,4578
  TPM_KEY_FLAGS       keyFlags;143,4610
  TPM_AUTH_DATA_USAGE authDataUsage;144,4642
  TPM_KEY_PARMS       algorithmParms;145,4679
  UINT32              PCRInfoSize;146,4718
  BYTE*               PCRInfo;147,4753
  TPM_STORE_PUBKEY    pubKey;148,4826
  UINT32              encDataSize;149,4856
  BYTE*               encData;150,4891
} TPM_KEY;151,4922
typedef struct TPM_PCR_SELECTION 153,4934
  UINT16 sizeOfSelect;154,4970
  BYTE* pcrSelect;155,5013
} TPM_PCR_SELECTION;156,5032
typedef struct TPM_PCR_COMPOSITE 158,5054
  TPM_PCR_SELECTION select;159,5090
  UINT32 valueSize;160,5118
  TPM_PCRVALUE* pcrValue;161,5138
} TPM_PCR_COMPOSITE;162,5164
typedef struct TPM_PCR_INFO 165,5187
  TPM_PCR_SELECTION pcrSelection;166,5217
  TPM_COMPOSITE_HASH digestAtRelease;167,5251
  TPM_COMPOSITE_HASH digestAtCreation;168,5289
} TPM_PCR_INFO;169,5328
typedef struct TPM_BOUND_DATA 172,5346
  TPM_VERSION ver;173,5378
  TPM_PAYLOAD_TYPE payload;174,5397
  BYTE* payloadData;175,5425
} TPM_BOUND_DATA;176,5446
typedef struct TPM_STORED_DATA 178,5465
  TPM_VERSION ver;179,5499
  UINT32 sealInfoSize;180,5518
  BYTE* sealInfo;181,5541
  UINT32 encDataSize;182,5559
  BYTE* encData;183,5581
} TPM_STORED_DATA;184,5598
typedef struct TCS_AUTH 186,5618
  TCS_AUTHHANDLE  AuthHandle;187,5644
  TPM_NONCE   NonceOdd;188,5674
  TPM_NONCE   NonceEven;189,5711
  BOOL   fContinueAuthSession;190,5746
  TPM_AUTHDATA  HMAC;191,5777
} TCS_AUTH;192,5799
typedef struct pack_buf_t 196,5898
  UINT32 size;197,5926
  BYTE * data;198,5941
} pack_buf_t;199,5956
typedef struct pack_constbuf_t 201,5971
  UINT32 size;202,6004
  const BYTE* data;203,6019
} pack_constbuf_t;204,6039
#define TRUE 211,6153
#define FALSE 212,6171
#define TCPA_MAX_BUFFER_LENGTH 214,6191
#define TPM_PROTECTED_ORDINAL 218,6260
#define TPM_UNPROTECTED_ORDINAL 219,6303
#define TPM_CONNECTION_ORDINAL 220,6348
#define TPM_VENDOR_ORDINAL 221,6392
#define TPM_ORD_OIAP 223,6433
#define TPM_ORD_OSAP 224,6505
#define TPM_ORD_ChangeAuth 225,6577
#define TPM_ORD_TakeOwnership 226,6649
#define TPM_ORD_ChangeAuthAsymStart 227,6721
#define TPM_ORD_ChangeAuthAsymFinish 228,6793
#define TPM_ORD_ChangeAuthOwner 229,6865
#define TPM_ORD_Extend 230,6937
#define TPM_ORD_PcrRead 231,7009
#define TPM_ORD_Quote 232,7081
#define TPM_ORD_Seal 233,7153
#define TPM_ORD_Unseal 234,7225
#define TPM_ORD_DirWriteAuth 235,7297
#define TPM_ORD_DirRead 236,7369
#define TPM_ORD_UnBind 237,7441
#define TPM_ORD_CreateWrapKey 238,7513
#define TPM_ORD_LoadKey 239,7585
#define TPM_ORD_GetPubKey 240,7657
#define TPM_ORD_EvictKey 241,7729
#define TPM_ORD_CreateMigrationBlob 242,7801
#define TPM_ORD_ReWrapKey 243,7873
#define TPM_ORD_ConvertMigrationBlob 244,7945
#define TPM_ORD_AuthorizeMigrationKey 245,8017
#define TPM_ORD_CreateMaintenanceArchive 246,8089
#define TPM_ORD_LoadMaintenanceArchive 247,8161
#define TPM_ORD_KillMaintenanceFeature 248,8233
#define TPM_ORD_LoadManuMaintPub 249,8305
#define TPM_ORD_ReadManuMaintPub 250,8377
#define TPM_ORD_CertifyKey 251,8449
#define TPM_ORD_Sign 252,8521
#define TPM_ORD_GetRandom 253,8593
#define TPM_ORD_StirRandom 254,8665
#define TPM_ORD_SelfTestFull 255,8737
#define TPM_ORD_SelfTestStartup 256,8809
#define TPM_ORD_CertifySelfTest 257,8881
#define TPM_ORD_ContinueSelfTest 258,8953
#define TPM_ORD_GetTestResult 259,9025
#define TPM_ORD_Reset 260,9097
#define TPM_ORD_OwnerClear 261,9169
#define TPM_ORD_DisableOwnerClear 262,9241
#define TPM_ORD_ForceClear 263,9313
#define TPM_ORD_DisableForceClear 264,9385
#define TPM_ORD_GetCapabilitySigned 265,9457
#define TPM_ORD_GetCapability 266,9530
#define TPM_ORD_GetCapabilityOwner 267,9603
#define TPM_ORD_OwnerSetDisable 268,9676
#define TPM_ORD_PhysicalEnable 269,9749
#define TPM_ORD_PhysicalDisable 270,9822
#define TPM_ORD_SetOwnerInstall 271,9895
#define TPM_ORD_PhysicalSetDeactivated 272,9968
#define TPM_ORD_SetTempDeactivated 273,10041
#define TPM_ORD_CreateEndorsementKeyPair 274,10114
#define TPM_ORD_MakeIdentity 275,10187
#define TPM_ORD_ActivateIdentity 276,10260
#define TPM_ORD_ReadPubek 277,10333
#define TPM_ORD_OwnerReadPubek 278,10406
#define TPM_ORD_DisablePubekRead 279,10479
#define TPM_ORD_GetAuditEvent 280,10552
#define TPM_ORD_GetAuditEventSigned 281,10625
#define TPM_ORD_GetOrdinalAuditStatus 282,10698
#define TPM_ORD_SetOrdinalAuditStatus 283,10771
#define TPM_ORD_Terminate_Handle 284,10844
#define TPM_ORD_Init 285,10917
#define TPM_ORD_SaveState 286,10990
#define TPM_ORD_Startup 287,11063
#define TPM_ORD_SetRedirection 288,11136
#define TPM_ORD_SHA1Start 289,11209
#define TPM_ORD_SHA1Update 290,11282
#define TPM_ORD_SHA1Complete 291,11355
#define TPM_ORD_SHA1CompleteExtend 292,11428
#define TPM_ORD_FieldUpgrade 293,11501
#define TPM_ORD_SaveKeyContext 294,11574
#define TPM_ORD_LoadKeyContext 295,11647
#define TPM_ORD_SaveAuthContext 296,11720
#define TPM_ORD_LoadAuthContext 297,11793
#define TSC_ORD_PhysicalPresence 298,11866
#define TPM_BASE 307,12029
#define TPM_VENDOR_ERROR 308,12085
#define TPM_NON_FATAL 309,12209
#define TPM_SUCCESS 311,12308
#define TPM_AUTHFAIL 312,12381
#define TPM_BADINDEX 313,12445
#define TPM_BAD_PARAMETER 314,12542
#define TPM_AUDITFAILURE 315,12617
#define TPM_CLEAR_DISABLED 316,12741
#define TPM_DEACTIVATED 317,12871
#define TPM_DISABLED 318,12938
#define TPM_DISABLED_CMD 319,13000
#define TPM_FAIL 320,13082
#define TPM_BAD_ORDINAL 321,13142
#define TPM_INSTALL_DISABLED 322,13227
#define TPM_INVALID_KEYHANDLE 323,13319
#define TPM_KEYNOTFOUND 324,13404
#define TPM_INAPPROPRIATE_ENC 325,13478
#define TPM_MIGRATEFAIL 326,13557
#define TPM_INVALID_PCR_INFO 327,13633
#define TPM_NOSPACE 328,13722
#define TPM_NOSRK 329,13785
#define TPM_NOTSEALED_BLOB 330,13846
#define TPM_OWNER_SET 331,13954
#define TPM_RESOURCES 332,14024
#define TPM_SHORTRANDOM 333,14145
#define TPM_SIZE 334,14220
#define TPM_WRONGPCRVAL 335,14318
#define TPM_BAD_PARAM_SIZE 336,14421
#define TPM_SHA_THREAD 337,14531
#define TPM_SHA_ERROR 338,14611
#define TPM_FAILEDSELFTEST 339,14760
#define TPM_AUTH2FAIL 340,14855
#define TPM_BADTAG 341,14977
#define TPM_IOERROR 342,15066
#define TPM_ENCRYPT_ERROR 343,15165
#define TPM_DECRYPT_ERROR 344,15250
#define TPM_INVALID_AUTHHANDLE 345,15338
#define TPM_NO_ENDORSEMENT 346,15414
#define TPM_INVALID_KEYUSAGE 347,15494
#define TPM_WRONG_ENTITYTYPE 348,15576
#define TPM_INVALID_POSTINIT 349,15665
#define TPM_INAPPROPRIATE_SIG 350,15810
#define TPM_BAD_KEY_PROPERTY 351,15912
#define TPM_BAD_MIGRATION 353,16027
#define TPM_BAD_SCHEME 354,16127
#define TPM_BAD_DATASIZE 355,16270
#define TPM_BAD_MODE 356,16405
#define TPM_BAD_PRESENCE 357,16625
#define TPM_BAD_VERSION 358,16750
#define TPM_NO_WRAP_TRANSPORT 359,16850
#define TPM_AUDITFAIL_UNSUCCESSFUL 360,16955
#define TPM_AUDITFAIL_SUCCESSFUL 361,17098
#define TPM_NOTRESETABLE 362,17229
#define TPM_NOTLOCAL 363,17352
#define TPM_BAD_TYPE 364,17503
#define TPM_INVALID_RESOURCE 365,17585
#define TPM_NOTFIPS 366,17711
#define TPM_INVALID_FAMILY 367,17830
#define TPM_NO_NV_PERMISSION 368,17933
#define TPM_REQUIRES_SIGN 369,18044
#define TPM_KEY_NOTSUPPORTED 370,18132
#define TPM_AUTH_CONFLICT 371,18216
#define TPM_AREA_LOCKED 372,18323
#define TPM_BAD_LOCALITY 373,18409
#define TPM_READ_ONLY 374,18510
#define TPM_PER_NOWRITE 375,18604
#define TPM_FAMILYCOUNT 376,18701
#define TPM_WRITE_LOCKED 377,18785
#define TPM_BAD_ATTRIBUTES 378,18872
#define TPM_INVALID_STRUCTURE 379,18953
#define TPM_KEY_OWNER_CONTROL 380,19062
#define TPM_BAD_COUNTER 381,19197
#define TPM_NOT_FULLWRITE 382,19275
#define TPM_CONTEXT_GAP 383,19369
#define TPM_MAXNVWRITES 384,19465
#define TPM_NOOPERATOR 385,19578
#define TPM_RESOURCEMISSING 386,19663
#define TPM_DELEGATE_LOCK 387,19761
#define TPM_DELEGATE_FAMILY 388,19847
#define TPM_DELEGATE_ADMIN 389,19955
#define TPM_TRANSPORT_EXCLUSIVE 390,20044
#define TPM_ST_CLEAR 393,20195
#define TPM_ST_STATE 394,20223
#define TPM_ST_DEACTIVATED 395,20251
#define TPM_TAG_RQU_COMMAND 398,20303
#define TPM_TAG_RQU_AUTH1_COMMAND 399,20338
#define TPM_TAG_RQU_AUTH2_COMMAND 400,20379
#define TPM_TAG_RSP_COMMAND 401,20420
#define TPM_TAG_RSP_AUTH1_COMMAND 402,20455
#define TPM_TAG_RSP_AUTH2_COMMAND 403,20496
#define TPM_PT_ASYM 406,20565
#define TPM_PT_BIND 407,20590
#define TPM_PT_MIGRATE 408,20615
#define TPM_PT_MAINT 409,20643
#define TPM_PT_SEAL 410,20669
#define TPM_ET_KEYHANDLE 413,20721
#define TPM_ET_OWNER 414,20753
#define TPM_ET_DATA 415,20781
#define TPM_ET_SRK 416,20808
#define TPM_ET_KEY 417,20834
#define TPM_RT_KEY 420,20883
#define TPM_RT_AUTH 421,20918
#define TPM_RT_TRANS 422,20953
#define TPM_RT_CONTEXT 423,20988
#define TPM_PID_OIAP 426,21050
#define TPM_PID_OSAP 427,21078
#define TPM_PID_ADIP 428,21106
#define TPM_PID_ADCP 429,21134
#define TPM_PID_OWNER 430,21162
#define TPM_ALG_RSA 433,21219
#define TPM_ALG_DES 434,21250
#define TPM_ALG_3DES 435,21281
#define TPM_ALG_SHA 436,21313
#define TPM_ALG_HMAC 437,21344
#define TCPA_ALG_AES 438,21376
#define TPM_ES_NONE 441,21434
#define TPM_ES_RSAESPKCSv15 442,21461
#define TPM_ES_RSAESOAEP_SHA1_MGF1 443,21496
#define TPM_SS_NONE 446,21564
#define TPM_SS_RSASSAPKCS1v15_SHA1 447,21591
#define TPM_SS_RSASSAPKCS1v15_DER 448,21633
#define TPM_KEY_EK 451,21699
#define TPM_KEY_SIGNING 452,21726
#define TPM_KEY_STORAGE 453,21757
#define TPM_KEY_IDENTITY 454,21788
#define TPM_KEY_AUTHCHANGE 455,21820
#define TPM_KEY_BIND 456,21854
#define TPM_KEY_LEGACY 457,21882
#define TPM_AUTH_NEVER 460,21943
#define TPM_AUTH_ALWAYS 461,21971
#define TPM_OWNER_KEYHANDLE 464,22032
#define TPM_SRK_KEYHANDLE 465,22071
#define ERRORDIE(476,22444
#define TPMTRY(484,22856
#define TPMTRYRETURN(493,23297

tools/vtpm_manager/manager/dmictl.c,223
#define TPM_EMULATOR_PATH 52,2102
TPM_RESULT init_dmi(57,2320
TPM_RESULT close_dmi(105,3541
TPM_RESULT VTPM_Handle_New_DMI(120,3866
TPM_RESULT VTPM_Handle_Close_DMI(187,6251
TPM_RESULT VTPM_Handle_Delete_DMI(229,7280

tools/vtpm_manager/manager/vtsp.h,60
#define __VTSP_H__41,1893
#define KEY_BUFFER_SIZE 46,1948

tools/vtpm_manager/manager/vtsp.c,607
#define  RSA_KEY_SIZE 49,2040
TPM_RESULT GenerateAuth(64,2795
TPM_RESULT VerifyAuth(117,5064
TPM_RESULT VTSP_OIAP(160,6680
TPM_RESULT VTSP_OSAP(182,7204
TPM_RESULT VTSP_TerminateHandle(227,8389
TPM_RESULT VTSP_ReadPubek(245,8841
TPM_RESULT VTSP_TakeOwnership(302,10186
TPM_RESULT VTSP_DisablePubekRead(406,13471
TPM_RESULT VTSP_CreateWrapKey(446,14621
TPM_RESULT VTSP_LoadKey(586,19227
TPM_RESULT VTSP_Unbind(682,22167
TPM_RESULT VTSP_Bind(751,24179
TPM_RESULT VTSP_Seal(815,26217
TPM_RESULT VTSP_Unseal(927,30227
TPM_RESULT VTSP_SaveState(1004,33010
TPM_RESULT VTSP_RawTransmit(1017,33292

tools/vtpm_manager/manager/vtpmd.c,1052
#define TPM_EMULATOR_PATH 54,2126
#define VTPM_BE_FNAME 56,2170
#define VTPM_DUMMY_TX_BE_FNAME 57,2213
#define VTPM_DUMMY_RX_BE_FNAME 58,2277
#define VTPM_TX_TPM_FNAME 59,2340
#define VTPM_RX_TPM_FNAME 60,2408
#define VTPM_TX_VTPM_FNAME 61,2479
#define VTPM_RX_VTPM_FNAME 62,2548
#define VTPM_TX_HP_FNAME 63,2620
#define VTPM_RX_HP_FNAME 64,2685
#define VTPM_TYPE_PVM_STRING 66,2753
#define VTPM_TYPE_HVM_STRING 67,2788
struct vtpm_thread_params_s 69,2824
  vtpm_ipc_handle_t *tx_ipc_h;tx_ipc_h70,2854
  vtpm_ipc_handle_t *rx_ipc_h;rx_ipc_h71,2885
  BOOL fw_tpm;72,2916
  vtpm_ipc_handle_t *fw_tx_ipc_h;fw_tx_ipc_h73,2931
  vtpm_ipc_handle_t *fw_rx_ipc_h;fw_rx_ipc_h74,2965
  BOOL is_priv;75,2999
  char *thread_name;thread_name76,3015
static vtpm_ipc_handle_t *g_rx_tpm_ipc_h;g_rx_tpm_ipc_h81,3146
void *vtpm_manager_thread(vtpm_manager_thread83,3189
void signal_handler(95,3615
struct sigaction ctl_c_handler;108,4028
TPM_RESULT VTPM_New_DMI_Extra(110,4061
TPM_RESULT VTPM_Close_DMI_Extra(210,7462
int main(249,8702

tools/vtpm_manager/manager/vtpm_lock.c,197
static pthread_rwlock_t vtpm_lock;41,1928
void vtpm_lock_init(43,1964
void vtpm_lock_destroy(48,2034
void vtpm_lock_rdlock(52,2101
void vtpm_lock_wrlock(56,2166
void vtpm_lock_unlock(60,2231

tools/vtpm_manager/manager/vtpmpriv.h,1856
#define __VTPMPRIV_H__41,1918
#define VTPM_MANAGER_GEN 50,2065
#define STATE_FILE 53,2233
#define DMI_NVM_FILE 54,2277
#define VTPM_CTL_DM 55,2332
typedef struct VTPM_DMI_RESOURCE_T 58,2433
  vtpm_ipc_handle_t      *tx_vtpm_ipc_h;tx_vtpm_ipc_h60,2529
  vtpm_ipc_handle_t      *rx_vtpm_ipc_h;rx_vtpm_ipc_h61,2599
  vtpm_ipc_handle_t      *tx_tpm_ipc_h;tx_tpm_ipc_h62,2672
  vtpm_ipc_handle_t      *rx_tpm_ipc_h;rx_tpm_ipc_h63,2742
  pid_t                 dmi_pid;66,2838
  bool                  connected;70,2911
  UINT32                dmi_domain_id;71,2946
  TCS_CONTEXT_HANDLE    TCSContext;72,2985
  char                  *NVMLocation;NVMLocation73,3039
  UINT32                dmi_id;76,3208
  BYTE                  dmi_type;77,3240
  TPM_DIGEST            NVM_measurement;78,3274
  TPM_DIGEST            DMI_measurement;79,3349
} VTPM_DMI_RESOURCE;80,3432
typedef struct tdVTPM_MIGKEY_LIST 82,3454
  UINT32                name_size;83,3490
  BYTE                  *name;name84,3525
  CRYPTO_INFO           key;85,3607
  struct tdVTPM_MIGKEY_LIST *next;next86,3636
} VTPM_MIGKEY_LIST;87,3671
typedef struct tdVTPM_GLOBALS 90,3693
  pid_t               master_pid;93,3772
  int                 connected_dmis;96,3814
  struct hashtable    *dmi_map;dmi_map98,3905
  VTPM_MIGKEY_LIST    *mig_keys;mig_keys99,4012
  TCS_CONTEXT_HANDLE  manager_tcs_handle;105,4353
  TPM_HANDLE          storageKeyHandle;106,4429
  CRYPTO_INFO         storageKey;107,4507
  CRYPTO_INFO         bootKey;108,4580
  TCS_AUTH            keyAuth;109,4646
  TPM_AUTHDATA        owner_usage_auth;112,4750
  buffer_t            storageKeyWrap;113,4821
  TPM_AUTHDATA        srk_usage_auth;114,4897
  TPM_AUTHDATA        storage_key_usage_auth;115,4935
  buffer_t            bootKeyWrap;117,4983
}VTPM_GLOBALS;VTPM_GLOBALS119,5059

tools/vtpm_manager/manager/vtpm_manager.h,1056
#define __VTPM_MANAGER_H__41,1919
#define VTPM_TAG_REQ 43,1947
#define VTPM_TAG_RSP 44,1975
#define COMMAND_BUFFER_SIZE 45,2003
#define VTPM_COMMAND_HEADER_SIZE_CLT 48,2086
#define VTPM_COMMAND_HEADER_SIZE_SRV 50,2202
#define VTPM_ORD_BASE 54,2416
#define VTPM_PRIV_MASK 55,2451
#define VTPM_PRIV_BASE 56,2518
#define VTPM_ORD_SAVENVM 59,2626
#define VTPM_ORD_LOADNVM 60,2697
#define VTPM_ORD_TPMCOMMAND 61,2768
#define VTPM_ORD_GET_MIG_KEY 62,2847
#define VTPM_ORD_LOAD_MIG_KEY 63,2928
#define VTPM_ORD_OPEN 66,3062
#define VTPM_ORD_CLOSE 67,3136
#define VTPM_ORD_DELETE 68,3203
#define VTPM_ORD_MIGRATE_IN 69,3281
#define VTPM_ORD_MIGRATE_OUT 70,3354
#define VTPM_TYPE_PVM 73,3500
#define VTPM_TYPE_HVM 74,3550
#define VTPM_SUCCESS 77,3658
#define VTPM_FAIL 78,3695
#define VTPM_UNSUPPORTED 79,3732
#define VTPM_FORBIDDEN 80,3769
#define VTPM_RESTORE_CONTEXT_FAILED 81,3806
#define VTPM_INVALID_REQUEST 82,3847
#define VTPM_TYPE_NON_MIGRATABLE 85,3954
#define VTPM_TYPE_MIGRATABLE 86,3993
#define VTPM_TYPE_MIGRATED 87,4032

tools/vtpm_manager/manager/migration.c,191
TPM_RESULT VTPM_Handle_Migrate_In(50,2053
TPM_RESULT VTPM_Handle_Migrate_Out(119,4434
TPM_RESULT VTPM_Handle_Get_Migration_key(221,7390
TPM_RESULT VTPM_Handle_Load_Migration_key(263,8695

tools/vtpm_manager/manager/vtpm_lock.h,32
#define __VTPM_LOCK_H__39,1907

tools/vtpm_manager/manager/tpmpassthrough.c,44
TPM_RESULT VTPM_Handle_TPM_Command(46,2004

tools/vtpm_manager/manager/vtpm_ipc.h,200
#define __VTPM_IO_H__40,1928
#define VTPM_IPC_CLOSED 44,1969
typedef struct vtpm_ipc_handle_t 47,2047
  int fh;48,2082
  int flags;49,2119
  char *name;name51,2254
} vtpm_ipc_handle_t;53,2366

tools/vtpm_manager/manager/vtpm_manager.c,322
VTPM_GLOBALS *vtpm_globals=vtpm_globals54,2139
const TPM_AUTHDATA SRK_AUTH 57,2248
static BYTE FIXED_OWNER_AUTH[FIXED_OWNER_AUTH61,2464
static unsigned int hashfunc32(68,2738
static int equals32(72,2812
TPM_RESULT VTPM_Create_Manager(78,2975
TPM_RESULT VTPM_Init_Manager(184,6591
void VTPM_Stop_Manager(257,8780

tools/vtpm_manager/manager/securestorage.c,245
TPM_RESULT envelope_encrypt(57,2215
TPM_RESULT envelope_decrypt(117,4321
TPM_RESULT VTPM_Handle_Save_NVM(183,6456
TPM_RESULT VTPM_Handle_Load_NVM(224,7910
TPM_RESULT VTPM_SaveManagerData(297,10137
TPM_RESULT VTPM_LoadManagerData(400,14056

tools/vtpm_manager/manager/vtpm_manager_handler.c,255
#define vtpmhandlerloginfo(54,2165
#define vtpmhandlerloginfomore(55,2270
#define vtpmhandlerlogerror(56,2361
TPM_RESULT VTPM_Manager_Handler(74,3232
TPM_RESULT vtpm_manager_handle_vtpm_cmd(279,11686
TPM_RESULT vtpm_manager_handle_tpm_cmd(354,13750

tools/vtpm_manager/manager/vtpm_ipc.c,142
int vtpm_ipc_init(44,2013
int vtpm_ipc_create(57,2375
int vtpm_ipc_read(78,2810
int vtpm_ipc_write(106,3478
void vtpm_ipc_close(134,4160

tools/vtpm_manager/tcs/tcs.c,1156
static int TCS_m_nCount 54,2155
#define TCPA_MAX_BUFFER_LENGTH 56,2185
static BYTE InBuf 58,2224
static BYTE OutBuf[OutBuf59,2268
struct hashtable *context_ht;context_ht61,2313
static unsigned int hashfunc32(65,2417
static int equals32(69,2491
CONTEXT_HANDLE *LookupContext(LookupContext73,2581
TPM_RESULT TCS_create(80,2941
void TCS_destroy(104,3462
TPM_RESULT TCS_Malloc(131,4217
TPM_RESULT TCS_FreeMemory(146,4673
TPM_RESULT TCS_OpenContext(159,5073
TPM_RESULT TCS_CloseContext(198,6221
int packAuth(232,7380
int unpackAuth(248,7861
TPM_RESULT TCSP_OIAP(259,8234
TPM_RESULT TCSP_OSAP(317,10164
TPM_RESULT TCSP_TakeOwnership(384,12438
TPM_RESULT TCSP_DisablePubekRead 467,15294
TPM_RESULT TCSP_TerminateHandle(515,16939
TPM_RESULT TCSP_Extend(565,18624
TPM_RESULT TCSP_Seal(615,20422
TPM_RESULT TCSP_Unseal(690,23311
TPM_RESULT TCSP_UnBind(758,25948
TPM_RESULT TCSP_CreateWrapKey(822,28302
TPM_RESULT TCSP_LoadKeyByBlob(893,30844
TPM_RESULT TCSP_EvictKey(959,33354
TPM_RESULT TCSP_GetRandom(1006,35000
TPM_RESULT TCSP_ReadPubek(1063,36992
TPM_RESULT TCSP_SaveState(1129,39388
TPM_RESULT TCSP_RawTransmitData(1171,40951

tools/vtpm_manager/tcs/contextmgr.c,153
BYTE* AddMemBlock(48,2052
BOOL DeleteMemBlock(90,3067
BOOL AddHandleToList(135,4360
BOOL DeleteHandleFromList(160,4983
BOOL FreeHandleList(196,5998

tools/vtpm_manager/tcs/tpmddl.h,288
#define __TPMDDL_H__41,1898
#define TDDL_CAP_PROP_MANUFACTURER 43,1920
#define TDDL_E_FAIL 45,1963
#define TDDL_E_SUCCESS 46,1985
#define TDDL_SUCCESS 47,2010
typedef unsigned int TDDL_UINT32;49,2034
typedef TDDL_UINT32 TDDL_RESULT;50,2068
typedef unsigned char TDDL_BYTE;51,2101

tools/vtpm_manager/tcs/tcs.h,55
#define __TCS_H__41,1892
#define HANDLE_NULL 47,1973

tools/vtpm_manager/tcs/contextmgr.h,553
#define __CONTEXTMGR_H__41,1936
#define BLOCK_SIZE 45,1980
typedef struct block 47,2004
  int nBlockSize;48,2027
  BYTE* aMemory;49,2045
  struct block* pNextBlock;50,2062
} BLOCK;51,2090
typedef struct handle_List 53,2100
  TPM_HANDLE handle;54,2129
  TPM_RESOURCE_TYPE type;55,2150
  struct handle_List* pNextHandle;56,2176
} HANDLE_LIST;57,2211
typedef struct context_handle 59,2227
  TCS_CONTEXT_HANDLE handle;60,2259
  int nBlockCount;61,2288
  BLOCK* pTopBlock;62,2307
  HANDLE_LIST* pHandleList;63,2327
} CONTEXT_HANDLE;64,2355

tools/vtpm_manager/tcs/transmit.c,346
static int g_TDDL_open 45,1947
static int g_tx_fd 46,1975
 #define TPM_TX_FNAME 49,2053
 static int *g_rx_fdp g_rx_fdp50,2087
 #define TPM_TX_FNAME 52,2127
 #define TPM_RX_FNAME 53,2172
 static int g_rx_fd 54,2218
 static int *g_rx_fdp g_rx_fdp55,2244
TDDL_TransmitData(59,2331
TPM_RESULT TDDL_Open(107,3495
void TDDL_Close(129,3863

tools/xenbackendd/xenbackendd.c,489
#define DEVTYPE_UNKNOWN 33,1108
#define DEVTYPE_VIF 34,1134
#define DEVTYPE_VBD 35,1156
#define DOMAIN_PATH 37,1179
#define VBD_SCRIPT 44,1302
#define LOG_FILE 47,1368
#define PID_FILE 50,1440
struct xs_handle *xs;xs54,1493
int fflag 56,1516
int dflag 57,1531
const char *vbd_script vbd_script59,1547
const char *log_file log_file60,1578
const char *pidfile pidfile61,1607
dolog(64,1648
dodebug(78,1874
doexec(92,2055
usage(112,2461
xen_setup(121,2622
main(146,3000

tools/tests/test_x86_emulator.c,333
#define MMAP_SZ 11,186
#define EFLG_OF 14,239
#define EFLG_DF 15,263
#define EFLG_SF 16,287
#define EFLG_ZF 17,310
#define EFLG_AF 18,333
#define EFLG_PF 19,356
#define EFLG_CF 20,379
static int read(22,403
static int write(33,618
static int cmpxchg(44,834
static struct x86_emulate_ops emulops 56,1061
int main(63,1207

tools/tests/blowfish.c,365
    uint32_t P[P39,1184
    uint32_t S[S40,1208
} BLOWFISH_CTX;41,1232
#define N 43,1249
static const uint32_t ORIG_P[ORIG_P45,1277
static const uint32_t ORIG_S[ORIG_S53,1575
static uint32_t F(313,16994
static void Blowfish_Encrypt(332,17355
static void Blowfish_Decrypt(362,17820
static void Blowfish_Init(393,18346
uint64_t blowfish_test(432,19274

tools/tests/mce-test/tools/xen-mceinj.c,2038
#define _GNU_SOURCE24,919
#define MCi_type_CTL 43,1289
#define MCi_type_STATUS 44,1321
#define MCi_type_ADDR 45,1353
#define MCi_type_MISC 46,1385
#define MCi_type_CTL2 47,1417
#define INVALID_MSR 49,1450
#define MSR_IA32_MCG_CAP 52,1501
#define MSR_IA32_MCG_STATUS 53,1545
#define MSR_IA32_MCG_CTL 54,1589
#define MSR_IA32_MC0_CTL 55,1633
#define MSR_IA32_MC0_STATUS 56,1677
#define MSR_IA32_MC0_ADDR 57,1721
#define MSR_IA32_MC0_MISC 58,1765
#define MSR_IA32_MC0_CTL2 59,1809
#define MCG_STATUS_SRAO_LLC_VAL 62,1918
#define MCE_SRAO_LLC_BANK 63,1955
#define MCi_STATUS_SRAO_LLC_VAL 64,1992
#define MCi_MISC_SRAO_LLC_VAL 65,2046
#define MCG_STATUS_SRAO_MEM_VAL 68,2122
#define MCE_SRAO_MEM_BANK 69,2159
#define MCi_STATUS_SRAO_MEM_VAL 70,2196
#define MCi_MISC_SRAO_MEM_VAL 71,2250
#define MCG_STATUS_UCNA_LLC_VAL 74,2316
#define CMCI_UCNA_LLC_BANK 75,2353
#define MCi_STATUS_UCNA_LLC_VAL 76,2390
#define MCi_MISC_UCNA_LLC_VAL 77,2444
#define MCE_SRAO_MEM 80,2503
#define MCE_SRAO_LLC 81,2535
#define CMCI_UCNA_LLC 82,2567
#define LOGFILE 84,2600
int dump;86,2624
struct xen_mc_msrinject msr_inj;87,2634
static void Lprintf(89,2668
static void err(101,2872
static void init_msr_inj(117,3166
static int flush_msr_inj(122,3244
static int mca_cpuinfo(133,3479
static int inject_cmci(144,3692
static int inject_mce(165,4242
static uint64_t bank_addr(178,4542
static int add_msr_intpose(201,5012
static int add_msr_bank_intpose(230,5753
#define MCE_INVALID_MFN 245,6217
#define mfn_valid(246,6246
#define mfn_to_pfn(247,6296
static uint64_t guest_mfn(248,6340
static uint64_t mca_gpfn_to_mfn(317,8392
static int inject_mcg_status(337,8995
static int inject_mci_status(345,9270
static int inject_mci_misc(354,9602
static int inject_mci_addr(363,9930
static int inject_llc_srao(372,10258
static int inject_mem_srao(413,11632
static int inject_llc_ucna(454,13006
static long xs_get_dom_mem(495,14384
static struct option opts[opts520,14839
static void help(530,15046
int main(549,15798

tools/xenpaging/xc.h,324
#define __XC_H__25,930
#define ASSERT(34,1028
#define ASSERT(38,1172
#define BITS_PER_LONG 42,1210
typedef struct xc_platform_info 45,1237
    unsigned long max_mfn;46,1271
    unsigned long hvirt_start;47,1298
    unsigned int  pt_levels;48,1329
    unsigned int  guest_width;49,1358
} xc_platform_info_t;50,1389

tools/xenpaging/policy.h,39
#define __XEN_PAGING_POLICY_H__25,961

tools/xenpaging/file_ops.c,135
#define page_offset(29,992
static int file_op(32,1056
static ssize_t my_read(61,1559
int read_page(66,1667
int write_page(71,1756

tools/xenpaging/spinlock.h,258
#define __SPINLOCK_H__25,947
#define SPIN_LOCK_UNLOCKED 31,994
typedef int spinlock_t;34,1025
static inline void spin_lock(37,1051
static inline void spin_lock_init(42,1144
static inline void spin_unlock(47,1233
static inline int spin_trylock(52,1319

tools/xenpaging/file_ops.h,30
#define __FILE_OPS_H__25,949

tools/xenpaging/policy_default.c,455
#define MRU_SIZE 29,989
static unsigned long mru[mru32,1020
static unsigned int i_mru;33,1056
static unsigned long *bitmap;bitmap34,1083
static unsigned long *unconsumed;unconsumed35,1113
static unsigned long current_gfn;36,1147
static unsigned long bitmap_size;37,1181
static unsigned long max_pages;38,1215
int policy_init(41,1249
int policy_choose_victim(70,1913
void policy_notify_paged_out(99,2610
void policy_notify_paged_in(105,2740

tools/xenpaging/bitops.h,1712
#define _X86_BITOPS_H2,22
#define LOCK_PREFIX 11,133
#define LOCK_PREFIX 13,169
#define ADDR 25,669
#define CONST_ADDR 26,708
#define bitop_bad_size(29,796
static inline void set_bit(41,1211
#define set_bit(49,1398
static inline void __set_bit(63,1879
#define __set_bit(70,2048
static inline void clear_bit(85,2620
#define clear_bit(93,2809
static inline void __clear_bit(107,3291
#define __clear_bit(114,3462
#define smp_mb__before_clear_bit(119,3640
#define smp_mb__after_clear_bit(120,3685
static inline void __change_bit(131,4043
#define __change_bit(138,4215
static inline void change_bit(152,4679
#define change_bit(160,4869
static inline int test_and_set_bit(173,5258
#define test_and_set_bit(184,5518
static inline int __test_and_set_bit(198,6013
#define __test_and_set_bit(208,6255
static inline int test_and_clear_bit(221,6648
#define test_and_clear_bit(232,6910
static inline int __test_and_clear_bit(246,7409
#define __test_and_clear_bit(256,7653
static inline int __test_and_change_bit(262,7882
#define __test_and_change_bit(272,8127
static inline int test_and_change_bit(285,8522
#define test_and_change_bit(296,8785
static inline int constant_test_bit(301,8963
static inline int variable_test_bit(307,9139
#define test_bit(318,9380
static inline unsigned int __scanbit(334,10081
#define find_first_bit(348,10518
#define find_next_bit(359,10947
#define find_first_zero_bit(372,11466
#define find_next_zero_bit(383,11906
static inline unsigned int find_first_set_bit(395,12357
static inline int ffs(408,12661
static inline int fls(426,12963
#define hweight64(443,13320
#define hweight32(444,13362
#define hweight16(445,13404
#define hweight8(446,13446

tools/xenpaging/xenpaging.c,509
#define _XOPEN_SOURCE	22,915
static char filename[filename42,1240
static int interrupted;43,1266
static void close_handler(44,1290
static void *init_page(init_page51,1402
xenpaging_t *xenpaging_init(xenpaging_init76,1860
int xenpaging_teardown(246,6459
static int get_request(292,7452
static int put_response(315,7975
int xenpaging_evict_page(338,8498
static int xenpaging_resume_page(389,9641
static int xenpaging_populate_page(412,10318
static int evict_victim(467,11614
int main(511,12709

tools/xenpaging/xc.c,180
int alloc_bitmap(34,1104
int xc_mem_paging_flush_ioemu_cache(49,1411
int xc_wait_for_event_or_timeout(68,1806
int xc_wait_for_event(109,2634
int xc_get_platform_info(114,2751

tools/xenpaging/mem_event.h,489
#define __XEN_MEM_EVENT_H__25,953
#define mem_event_ring_lock_init(36,1106
#define mem_event_ring_lock(37,1177
#define mem_event_ring_unlock(38,1243
typedef struct mem_event 41,1313
    domid_t domain_id;42,1340
    xc_evtchn *xce_handle;xce_handle43,1363
    int port;44,1390
    mem_event_back_ring_t back_ring;45,1404
    mem_event_shared_page_t *shared_page;shared_page46,1441
    void *ring_page;ring_page47,1483
    spinlock_t ring_lock;48,1504
} mem_event_t;49,1530

tools/xenpaging/xenpaging.h,536
#define __XEN_PAGING2_H__25,945
typedef struct xenpaging 38,1120
    xc_interface *xc_handle;xc_handle39,1147
    xc_platform_info_t *platform_info;platform_info41,1177
    xc_domaininfo_t    *domain_info;domain_info42,1216
    unsigned long  bitmap_size;44,1254
    unsigned long *bitmap;bitmap45,1286
    mem_event_t mem_event;47,1314
} xenpaging_t;48,1341
typedef struct xenpaging_victim 51,1358
    domid_t domain_id;53,1434
    unsigned long gfn;55,1496
    unsigned long mfn;57,1553
} xenpaging_victim_t;58,1576

tools/security/secpol_tool.c,424
#define PERROR(42,1059
void usage(46,1184
void acm_dump_chinesewall_buffer(60,1559
void acm_dump_ste_buffer(136,4522
void acm_dump_policy_buffer(169,5733
int acm_get_ssidref(241,8537
int acm_domain_getpolicy(266,9418
static int load_file(304,10627
static int acm_domain_dumppolicy(354,11778
int acm_domain_loadpolicy(374,12322
void dump_ste_stats(409,13373
int acm_domain_dumpstats(427,14132
int main(500,16552

tools/misc/xen-hvmcrash.c,14
main(47,1574

tools/misc/xenperf.c,115
#define X(20,525
const char *hypercall_name_table[hypercall_name_table21,571
#undef X69,1495
int main(71,1505

tools/misc/nsplitd/nsplitd.c,481
#define FALSE 68,1953
#define TRUE 71,1989
#define LOG_DAEMON 75,2031
#define DB(78,2060
static char *prog_name;prog_name84,2162
static void usage(86,2187
static void fault(96,2439
static int getservice(115,2860
static int connect_host 135,3195
static int startlistening(170,4201
static void noblock(195,4851
#define FD_SET_rjb(208,5220
#define FD_ISSET_rjb(214,5327
#define MAXSIZE	216,5402
static int debug;223,5723
static void doit(225,5742
int main(558,13538

tools/misc/xenlockprof.c,17
int main(21,554

tools/misc/gtracestat.c,2077
#define CHECK_DUP_CX 33,1043
#define MAX_CPU_NR 36,1098
#define MAX_CX_NR 37,1121
#define MAX_MODE_NR 38,1143
#define MAX_PX_NR	39,1166
struct rec 42,1222
    uint64_t tsc;43,1235
    int cpu;44,1253
    unsigned char cx;45,1266
    unsigned char irqs[irqs46,1288
    unsigned int predicted;47,1315
    unsigned int expected;48,1343
    int px;49,1370
struct rec *data;data68,1858
int64_t data_nr,69,1876
int64_t data_nr, data_cur;69,1876
int max_cx_num 71,1950
int px_freq_table[px_freq_table72,1989
int max_px_num 73,2019
int is_menu_gov_enabled 75,2040
uint64_t tsc2ms 78,2108
uint64_t tsc2us 79,2137
uint64_t tsc2phase 80,2163
int width 83,2225
struct rec *evt[evt86,2269
int evt_len[evt_len87,2298
static inline uint64_t min(90,2349
static inline uint64_t max(94,2430
int is_px 99,2512
int main(101,2528
static int data_cmp(250,6235
#define LIST_PX 264,6616
int load_file(265,6634
void show_version(436,11986
void show_help(441,12072
static inline int len_of_number(463,13361
int determine_cx(476,13567
int process(503,14172
void nr_putchar(536,14850
#define MAX_INTERVAL_ENTRY	543,14948
void single_digest(545,15039
void do_digest(592,16584
struct cond_rec 621,17364
    uint64_t min;622,17382
    uint64_t max;623,17400
    uint64_t cnt;624,17418
    uint64_t res;625,17436
void cond_rec_init(628,17458
void cond_rec_inc(635,17582
void do_count_per_cpu(648,17842
struct cond_rec *make_cond_rec(make_cond_rec668,18360
uint64_t max_res[max_res688,18757
uint64_t min_res[min_res689,18798
uint64_t max_tm[max_tm690,18839
uint64_t min_tm[min_tm691,18879
void do_maxmin_per_cpu(693,18920
void do_maxmin(716,19495
void do_count(746,20421
static void do_px_count_per_cpu(802,22326
void do_px_count(819,22715
void do_breakevents(905,25295
void do_cstate(977,27277
void single_cstate(1012,28384
void do_average_per_cpu(1064,29735
void do_average(1100,30677
static void do_exp_ratio_per_cpu(1108,30785
void do_exp_ratio(1146,31815
static void do_exp_pred_per_cpu(1160,32114
void do_exp_pred(1196,33081

tools/misc/xen-hptool.c,477
#define ARRAY_SIZE(6,86
static xc_interface *xch;xch8,140
void show_help(10,167
static int help_func(26,764
static int hp_mem_online_func(32,845
static int hp_mem_query_func(64,1650
static int suspend_guest(101,2559
static int hp_mem_offline_func(142,3570
static int hp_cpu_online_func(245,7507
static int hp_cpu_offline_func(267,7974
    const char *name;name289,8453
    int (*function)function290,8475
} main_options[main_options291,8520
int main(301,8783

tools/misc/lomount/lomount.c,766
	ERR_USAGE 40,1504
	ERR_USAGE = 0x80,x8040,1504
	ERR_PART_PARSE,41,1542
	ERR_NO_PART,42,1595
	ERR_NO_EPART,43,1631
	ERR_MOUNT	44,1677
#define BUF 55,1869
#define SECSIZE 57,1887
struct pentry 59,1908
	unsigned char bootable;61,1925
	unsigned char start_head;62,1951
	unsigned int start_cylinder;63,1978
	unsigned char start_sector;64,2008
	unsigned char system;65,2037
	unsigned char end_head;66,2060
	unsigned int  end_cylinder;67,2085
	unsigned char end_sector;68,2114
	unsigned long long start_sector_abs;69,2141
	unsigned long long no_of_sectors_abs;70,2179
disp_entry 74,2234
read_le4 84,2453
read_le8 93,2640
check_gpt 107,3051
load_gpt 120,3314
read_mbr_record 214,5307
int load_mbr(229,5834
void usage(317,7492
int main(325,7781

tools/misc/xen-tmem-list-parse.c,448
#define BUFSIZE 15,360
#define PAGE_SIZE 16,381
unsigned long long parse(18,405
unsigned long long parse_hex(32,660
unsigned long long parse2(46,919
void parse_string(55,1101
void parse_sharers(69,1356
void parse_global(90,1763
#define PARSE_CYC_COUNTER(156,5037
#define PRINTF_CYC_COUNTER(161,5264
void parse_time_stats(167,5486
void parse_client(190,6376
void parse_pool(222,7824
void parse_shared_pool(263,9582
int main(305,11416

tools/misc/xen-detect.c,291
static void cpuid(36,1460
static int check_for_xen(49,1848
static jmp_buf sigill_jmp;75,2462
void sigill_handler(76,2489
static void usage(81,2551
int main(92,3005
    enum { XEN_PV 94,3039
    enum { XEN_PV = 1, XEN_HVM 94,3039
    enum { XEN_PV = 1, XEN_HVM = 2, XEN_NONE 94,3039

tools/misc/xenpm.c,2185
#define MAX_NR_CPU 18,779
#define ARRAY_SIZE(32,1008
#define CPUFREQ_TURBO_DISABLED 34,1062
#define CPUFREQ_TURBO_UNSUPPORTED 35,1101
#define CPUFREQ_TURBO_ENABLED 36,1139
static xc_interface *xc_handle;xc_handle38,1178
static int max_cpu_nr;39,1210
void show_help(42,1253
void help_func(75,3669
static void print_cxstat(80,3730
static int get_cxstat_by_cpuid(106,4772
static int show_max_cstate(142,5613
static int show_cxstat_by_cpuid(154,5850
void cxstat_func(170,6191
static void print_pxstat(194,6698
static int get_pxstat_by_cpuid(220,7603
static int get_avgfreq_by_cpuid(258,8518
static int show_pxstat_by_cpuid(271,8748
void pxstat_func(287,9080
static uint64_t usec_start,309,9554
static uint64_t usec_start, usec_end;309,9554
static struct xc_cx_stat *cxstat,cxstat310,9592
static struct xc_cx_stat *cxstat, *cxstat_start,cxstat_start310,9592
static struct xc_cx_stat *cxstat, *cxstat_start, *cxstat_end;cxstat_end310,9592
static struct xc_px_stat *pxstat,pxstat311,9654
static struct xc_px_stat *pxstat, *pxstat_start,pxstat_start311,9654
static struct xc_px_stat *pxstat, *pxstat_start, *pxstat_end;pxstat_end311,9654
static int *avgfreq;avgfreq312,9716
static uint64_t *sum,sum313,9737
static uint64_t *sum, *sum_cx,sum_cx313,9737
static uint64_t *sum, *sum_cx, *sum_px;sum_px313,9737
static void signal_int_handler(315,9778
void start_gather_func(506,16859
static void print_cpufreq_para(607,19551
static int show_cpufreq_para_by_cpuid(672,21940
void cpufreq_para_func(746,24229
void scaling_max_freq_func(768,24737
void scaling_min_freq_func(795,25535
void scaling_speed_func(822,26334
void scaling_sampling_rate_func(849,27126
void scaling_up_threshold_func(877,27963
void scaling_governor_func(905,28819
void cpu_topology_func(949,29753
void set_sched_smt_func(995,31394
void set_vcpu_migration_delay_func(1025,31942
void get_vcpu_migration_delay_func(1050,32420
void set_max_cstate_func(1073,32849
void enable_turbo_mode(1090,33220
void disable_turbo_mode(1112,33701
    const char *name;name1135,34195
    void (*function)function1136,34217
} main_options[main_options1137,34263
int main(1158,35174

tools/misc/gtraceview.c,2389
#define MAX_CPU_NR 41,1169
#define MAX_MODE_NR 42,1192
#define MAX_STRING_LEN 43,1215
    FLAG_FUZZY 47,1297
    FLAG_LEVEL,48,1317
    FLAG_EDGE,49,1333
    FLAG_UNKNOWN,50,1348
    NR_FLAGS51,1366
struct string 54,1383
    int len;55,1399
    char str[str56,1412
void string_nr_addch(60,1471
int string_print(68,1640
struct cpu 81,1881
    unsigned char cx;82,1894
    unsigned char flag;84,1946
    unsigned char irqs[irqs85,1970
    unsigned int expected;86,1997
    unsigned int predicted;87,2024
struct state 90,2056
    uint64_t tsc;91,2071
    struct cpu cpu[cpu92,2089
struct mode 95,2125
    const char *name;name96,2139
    int offset;97,2161
    int width;98,2177
    int row;99,2192
    int scroll_h;100,2205
    struct state *state;state101,2223
    int state_nr;102,2248
    uint64_t time_scale;103,2266
    uint64_t start_time;104,2291
    int cpu_bitmap[cpu_bitmap105,2316
    int initialized;106,2348
    int (*init)init107,2369
    void (*show)show108,2392
    void (*exit)exit109,2416
struct rec 113,2477
    uint64_t tsc;114,2490
    int cpu;115,2508
    unsigned int expected;116,2521
    unsigned int predicted;117,2548
    unsigned char cx;118,2576
    unsigned char irqs[irqs119,2598
struct rec *data;data141,3116
int64_t data_nr,142,3134
int64_t data_nr, data_cur;142,3134
int max_cx_num 144,3208
int is_irq_enabled 145,3247
int is_menu_gov_enabled 146,3272
int is_link 147,3302
uint64_t tsc2us 148,3319
struct rec *data_evt;data_evt150,3346
struct rec *evt[evt151,3368
int evt_len[evt_len152,3397
int cur_row 154,3423
struct mode modes[modes155,3440
struct mode *this this170,3796
static inline int min(173,3848
#define MIN(178,3915
int main(182,4006
static int evt_data_cmp(380,9976
static int data_cmp(389,10217
int load_file(401,10531
void show_version(541,14749
void show_help(546,14835
void crt_done(557,15217
void help_screen(563,15273
void crt_init(585,16287
void nr_addch(622,17294
int event_mode_init(634,17479
static inline int len_of_number(707,19611
static inline void display_number(719,19775
void draw_cpu_state(738,20206
void event_mode_show(791,21774
void event_mode_exit(904,25485
void mode_exit(910,25567
int mode_init(922,25770
int time_mode_rebuild(941,26067
int time_mode_init(1052,29590
void choose_cpus(1065,29948
int num_of_cpus(1108,31075

tools/misc/miniterm/miniterm.c,194
#define DEFAULT_BAUDRATE 37,1198
#define DEFAULT_SERDEVICE 38,1232
#define ENDMINITERM 39,1272
volatile int stop 41,1305
void child_handler(43,1329
int cook_baud(48,1374
int main(74,2283

tools/misc/xenwatchdogd.c,129
xc_interface *h;h13,203
int id 14,220
void daemonize(16,233
void catch_exit(39,707
void catch_usr1(46,795
int main(53,881

tools/misc/xen-hvmctx.c,1323
#define BITS_PER_LONG 41,1509
#define BITS_TO_LONGS(42,1542
#define DECLARE_BITMAP(44,1621
static uint8_t *buf buf52,1799
static uint32_t len;53,1827
static uint32_t off;54,1848
#define READ(56,1870
static void dump_header(67,2576
struct fpu_mm 79,3016
    uint64_t lo;80,3032
    uint16_t hi;81,3049
    uint16_t pad[pad82,3066
struct fpu_xmm 85,3115
    uint64_t lo;86,3132
    uint64_t hi;87,3149
struct fpu_regs 90,3170
    uint16_t fcw;91,3188
    uint16_t fsw;92,3206
    uint8_t ftw;93,3224
    uint8_t res0;94,3241
    uint16_t fop;95,3259
    uint64_t fpuip;96,3277
    uint64_t fpudp;97,3297
    uint32_t mxcsr;98,3317
    uint32_t mxcsr_mask;99,3337
    struct fpu_mm mm[mm100,3362
    struct fpu_xmm xmm[xmm101,3387
    uint64_t res1[res1102,3415
static void dump_fpu(105,3466
static void dump_cpu(133,4523
static void dump_pic(209,8913
static void dump_ioapic(227,9598
static void dump_lapic(241,9992
static void dump_lapic_regs(249,10221
static void dump_pci_irq(263,10616
static void dump_isa_irq(271,10821
static void dump_pci_link(279,10984
static void dump_pit(287,11168
static void dump_rtc(308,12067
static void dump_hpet(321,12616
static void dump_pmtimer(343,13372
static void dump_mtrr(351,13591
static void dump_viridian(369,14275
int main(378,14532

tools/xenstore/tdb.c,3697
#undef HAVE_MMAP48,1439
#define TDB_MAGIC_FOOD 57,1604
#define TDB_VERSION 58,1640
#define TDB_MAGIC 59,1677
#define TDB_FREE_MAGIC 60,1709
#define TDB_DEAD_MAGIC 61,1745
#define TDB_ALIGNMENT 62,1781
#define MIN_REC_SIZE 63,1805
#define DEFAULT_HASH_SIZE 64,1873
#define TDB_PAGE_SIZE 65,1903
#define FREELIST_TOP 66,1932
#define TDB_ALIGN(67,1981
#define TDB_BYTEREV(68,2031
#define TDB_DEAD(69,2119
#define TDB_BAD_MAGIC(70,2170
#define TDB_HASH_TOP(71,2237
#define TDB_DATA_START(72,2314
#define TDB_LOG(78,2523
#define GLOBAL_LOCK 81,2576
#define ACTIVE_LOCK 82,2598
#define MAP_FILE 85,2638
#define MAP_FAILED 89,2684
#  define discard_const(94,2807
#  define discard_const(96,2871
# define discard_const_p(98,2924
#define SAFE_FREE(103,3078
#define BUCKET(106,3195
TDB_DATA tdb_null;107,3249
static TDB_CONTEXT *tdbs tdbs110,3341
static int tdb_munmap(112,3375
static void tdb_mmap(128,3626
static void *convert(convert157,4277
#define DOCONV(164,4424
#define CONVERT(165,4468
struct list_struct 169,4655
	tdb_off next;170,4676
	tdb_len rec_len;171,4735
	tdb_len key_len;172,4787
	tdb_len data_len;173,4830
	uint32_t full_hash;174,4875
	uint32_t magic;175,4934
static int tdb_brlock(193,5376
static int tdb_lock(237,6515
static int tdb_unlock(264,7369
static uint32_t default_tdb_hash(297,8169
static int tdb_oob(314,8755
static int tdb_write(351,9677
static int tdb_read(374,10346
static int tdb_key_eq(399,11033
static char *tdb_alloc_read(tdb_alloc_read426,11599
static int ofs_read(445,12061
static int ofs_write(449,12194
static int rec_read(456,12369
static int rec_write(468,12803
static int rec_free_read(475,13030
static int update_tailer(503,13926
static tdb_off tdb_dump_record(514,14209
static int tdb_dump_chain(540,15091
void tdb_dump_all(562,15471
int tdb_printfreelist(572,15649
static int remove_from_freelist(617,16763
static int tdb_free(637,17343
static int expand_file(731,19846
static int tdb_expand(782,21246
static tdb_off tdb_allocate_ofs(856,23045
static tdb_off tdb_allocate(917,24623
		tdb_off rec_ptr,922,24769
		tdb_off rec_ptr, last_ptr;922,24769
		tdb_len rec_len;923,24798
static int tdb_new_database(989,26371
static tdb_off tdb_find(1033,27564
static tdb_off tdb_find_lock_hash(1061,28267
enum TDB_ERROR tdb_error(1073,28591
static struct tdb_errname 1078,28659
	enum TDB_ERROR ecode;1079,28687
	enum TDB_ERROR ecode; const char *estring;estring1079,28687
} emap[emap1080,28731
const char *tdb_errorstr(tdb_errorstr1090,29113
static int tdb_update_hash(1104,29474
TDB_DATA tdb_fetch(1139,30349
static int tdb_exists_hash(1164,31036
int tdb_exists(1174,31276
static int lock_record(1181,31448
static int write_lock_record(1191,31747
static int write_unlock_record(1205,32083
static int unlock_record(1210,32262
static int do_delete(1224,32613
static int tdb_next_lock(1259,33583
int tdb_traverse(1379,37245
TDB_DATA tdb_firstkey(1439,38843
TDB_DATA tdb_nextkey(1460,39484
static int tdb_delete_hash(1516,41363
int tdb_delete(1530,41753
int tdb_store(1541,42015
static int tdb_append_inplace(1625,44392
int tdb_append(1656,45199
static int tdb_already_open(1746,47514
TDB_CONTEXT *tdb_open(tdb_open1770,48139
static void null_log_fn(1777,48363
TDB_CONTEXT *tdb_open_ex(tdb_open_ex1784,48522
int tdb_close(1970,53624
int tdb_lockall(2001,54124
void tdb_unlockall(2023,54577
int tdb_chainlock(2032,54843
int tdb_chainunlock(2037,54958
int tdb_chainlock_read(2042,55077
int tdb_chainunlock_read(2047,55197
void tdb_logging_function(2054,55355
int tdb_reopen(2062,55638
TDB_CONTEXT *tdb_copy(tdb_copy2101,56716
int tdb_reopen_all(2139,57424

tools/xenstore/xenstored_core.h,1222
#define _XENSTORED_CORE_H21,854
struct buffered_data34,1062
	struct list_head list;36,1085
	bool inhdr;39,1148
	unsigned int used;42,1185
		struct xsd_sockmsg msg;45,1215
		char raw[raw46,1241
	} hdr;47,1281
	char *buffer;buffer50,1314
typedef int connwritefn_t(54,1352
typedef int connreadfn_t(55,1428
struct connection57,1498
	struct list_head list;59,1518
	int fd;62,1585
	unsigned int id;65,1638
	bool can_write;68,1696
	struct buffered_data *in;in71,1745
	struct list_head out_list;74,1801
	struct transaction *transaction;transaction77,1893
	struct list_head transaction_list;80,1969
	uint32_t next_transaction_id;81,2005
	unsigned int transaction_started;82,2036
	struct domain *domain;domain85,2119
        struct connection *target;target88,2204
	struct list_head watches;91,2259
	connwritefn_t *write;write94,2360
	connreadfn_t *read;read95,2383
struct node 99,2445
	const char *name;name100,2459
	TDB_CONTEXT *tdb;tdb103,2507
	struct node *parent;parent106,2552
	unsigned int num_perms;109,2595
	struct xs_permissions *perms;perms110,2620
	unsigned int datalen;113,2669
	void *data;data114,2692
	unsigned int childlen;117,2744
	char *children;children118,2768

tools/xenstore/xs.h,157
#define _XS_H21,878
#define XBT_NULL 25,914
#define XS_OPEN_READONLY	27,934
#define XS_OPEN_SOCKETONLY 28,966
typedef uint32_t xs_transaction_t;31,1024

tools/xenstore/hashtable_private.h,493
#define __HASHTABLE_PRIVATE_CWC22_H__4,122
struct entry9,265
    void *k,k11,280
    void *k, *v;v11,280
    unsigned int h;12,297
    struct entry *next;next13,317
struct hashtable 16,345
    unsigned int tablelength;17,364
    struct entry **table;table18,394
    unsigned int entrycount;19,420
    unsigned int loadlimit;20,449
    unsigned int primeindex;21,477
    unsigned int (*hashfn)hashfn22,506
    int (*eqfn)eqfn23,544
indexFor(33,838
#define freekey(46,1201

tools/xenstore/xenstored_transaction.c,917
struct changed_node39,1222
	struct list_head list;42,1313
	char *node;node45,1367
	bool recurse;48,1415
struct changed_domain51,1434
	struct list_head list;54,1529
	unsigned int domid;57,1595
	int nbentry;60,1681
struct transaction63,1699
	struct list_head list;66,1779
	uint32_t id;69,1861
	unsigned int generation;72,1920
	TDB_CONTEXT *tdb;tdb75,1983
	char *tdb_name;tdb_name76,2002
	struct list_head changes;79,2050
	struct list_head changed_domains;82,2153
static unsigned int generation;86,2226
TDB_CONTEXT *tdb_transaction_context(tdb_transaction_context89,2312
void add_change_node(96,2542
static int destroy_transaction(116,2973
struct transaction *transaction_lookup(transaction_lookup127,3190
void do_transaction_start(141,3457
void do_transaction_end(188,4806
void transaction_entry_inc(236,5968
void transaction_entry_dec(252,6320
void conn_delete_all_transactions(268,6673

tools/xenstore/xenstored_linux.c,180
#define XENSTORED_PROC_KVA 21,562
#define XENSTORED_PROC_PORT 22,610
evtchn_port_t xenbus_evtchn(24,660
void *xenbus_map(xenbus_map51,1024
void xenbus_notify_running(71,1293

tools/xenstore/hashtable.c,337
static const unsigned int primes[primes16,369
const unsigned int prime_table_length 25,616
const unsigned int max_load_factor 26,690
create_hashtable(30,848
hash(68,1905
hashtable_expand(82,2341
hashtable_count(141,4315
hashtable_insert(148,4467
hashtable_search(174,5420
hashtable_remove(192,5962
hashtable_destroy(227,6836

tools/xenstore/xenstored_domain.c,1753
static xc_interface **xc_handle;xc_handle36,1136
static evtchn_port_t virq_port;37,1169
xc_evtchn *xce_handle xce_handle39,1202
struct domain41,1233
	struct list_head list;43,1249
	unsigned int domid;46,1303
	evtchn_port_t port;49,1351
	evtchn_port_t remote_port;53,1474
	unsigned long mfn;57,1610
	char *path;path60,1660
	struct xenstore_domain_interface *interface;interface63,1694
	struct connection *conn;conn66,1785
	int shutdown;69,1865
	int nbentry;72,1934
	int nbwatch;75,1988
static bool check_indexes(80,2034
static void *get_output_chunk(get_output_chunk85,2160
static const void *get_input_chunk(get_input_chunk95,2475
static int writechn(105,2751
static int readchn(136,3388
static int destroy_domain(166,4014
static void domain_cleanup(185,4389
void handle_event(212,5057
bool domain_can_read(226,5345
bool domain_is_unprivileged(232,5507
bool domain_can_write(237,5625
static char *talloc_domain_path(talloc_domain_path243,5811
static struct domain *new_domain(new_domain248,5944
static struct domain *find_domain_by_domid(find_domain_by_domid281,6677
static void domain_conn_reset(292,6862
void do_introduce(314,7439
void do_set_target(385,9056
void do_release(431,9953
void do_resume(468,10495
void do_get_domain_path(505,11031
void do_is_domain_introduced(521,11319
static int close_xc_handle(540,11687
const char *get_implicit_path(get_implicit_path547,11865
void restore_existing_connections(555,12043
static int dom0_init(559,12088
void domain_init(583,12460
void domain_entry_inc(610,13134
void domain_entry_dec(636,13660
void domain_entry_fix(662,14223
int domain_entry(671,14388
void domain_watch_inc(678,14507
void domain_watch_dec(685,14624
int domain_watch(693,14770

tools/xenstore/xenstored_transaction.h,40
#define _XENSTORED_TRANSACTION_H20,857

tools/xenstore/xs.c,2909
struct xs_stored_msg 39,1236
	struct list_head list;40,1259
	struct xsd_sockmsg hdr;41,1283
	char *body;body42,1308
struct xs_handle 49,1367
	int fd;51,1436
	pthread_t read_thr;57,1562
	int read_thr_exists;58,1583
	struct list_head watch_list;64,1767
	pthread_mutex_t watch_mutex;65,1797
	pthread_cond_t watch_condvar;66,1827
	int watch_pipe[watch_pipe69,1929
	struct list_head reply_list;76,2162
	pthread_mutex_t reply_mutex;77,2192
	pthread_cond_t reply_condvar;78,2222
	pthread_mutex_t request_mutex;81,2284
#define mutex_lock(98,2848
#define mutex_unlock(99,2893
#define condvar_signal(100,2942
#define condvar_wait(101,2991
#define cleanup_push(102,3040
#define cleanup_pop(109,3369
#define read_thread_exists(111,3438
struct xs_handle 117,3563
	int fd;118,3582
	struct list_head reply_list;119,3591
	struct list_head watch_list;120,3621
	int watch_pipe[watch_pipe122,3721
#define mutex_lock(125,3745
#define mutex_unlock(126,3778
#define condvar_signal(127,3813
#define condvar_wait(128,3849
#define cleanup_push(129,3885
#define cleanup_pop(130,3922
#define read_thread_exists(131,3957
int xs_fileno(137,4047
static int get_socket(155,4419
static int get_dev(185,4965
static struct xs_handle *get_handle(get_handle193,5143
struct xs_handle *xs_daemon_open(xs_daemon_open241,6081
struct xs_handle *xs_daemon_open_readonly(xs_daemon_open_readonly246,6145
struct xs_handle *xs_domain_open(xs_domain_open251,6233
struct xs_handle *xs_open(xs_open256,6297
static void close_free_msgs(271,6618
static void close_fds_free(285,6901
void xs_daemon_destroy_postfork(296,7084
void xs_daemon_close(302,7197
void xs_close(324,7615
static bool read_all(330,7691
#define read_all 354,8062
#define xs_write_all 355,8095
static int get_error(358,8141
static void *read_reply(read_reply369,8439
static void *xs_talkv(xs_talkv408,9404
static void free_no_errno(480,10861
static void *xs_single(xs_single488,11013
static bool xs_bool(500,11315
char **xs_directory(xs_directory508,11410
void *xs_read(xs_read540,12234
bool xs_write(549,12453
bool xs_mkdir(566,12905
bool xs_rm(575,13171
struct xs_permissions *xs_get_permissions(xs_get_permissions584,13419
bool xs_set_permissions(618,14159
bool xs_restrict(655,14983
bool xs_watch(668,15384
char **xs_read_watch(xs_read_watch698,16193
bool xs_unwatch(768,18015
xs_transaction_t xs_transaction_start(785,18518
bool xs_transaction_end(805,18980
bool xs_introduce_domain(822,19399
bool xs_set_target(846,20122
static void * single_with_domid(865,20653
bool xs_release_domain(876,20914
bool xs_resume_domain(882,21091
char *xs_get_domain_path(xs_get_domain_path887,21216
bool xs_is_domain_introduced(896,21448
int xs_suspend_evtchn_port(905,21652
char *xs_debug_command(xs_debug_command931,22156
static int read_message(945,22472
static void *read_thread(read_thread1021,24311

tools/xenstore/xenstored_watch.h,34
#define _XENSTORED_WATCH_H21,846

tools/xenstore/talloc.c,3851
#undef malloc39,1350
#undef realloc42,1386
#define HAVE_VA_COPY53,1569
#define ALWAYS_REALLOC 58,1702
#define MAX_TALLOC_SIZE 61,1729
#define TALLOC_MAGIC 62,1764
#define TALLOC_FLAG_FREE 63,1796
#define TALLOC_FLAG_LOOP 64,1826
#define TALLOC_MAGIC_REFERENCE 65,1856
#define TALLOC_ABORT(70,2057
# define discard_const_p(75,2184
# define discard_const_p(77,2254
static const void *null_context;null_context85,2468
static void *cleanup_context;cleanup_context86,2501
struct talloc_reference_handle 89,2533
	struct talloc_reference_handle *next,next90,2566
	struct talloc_reference_handle *next, *prev;prev90,2566
	void *ptr;ptr91,2612
typedef int (*talloc_destructor_t)talloc_destructor_t94,2628
struct talloc_chunk 96,2673
	struct talloc_chunk *next,next97,2695
	struct talloc_chunk *next, *prev;prev97,2695
	struct talloc_chunk *parent,parent98,2730
	struct talloc_chunk *parent, *child;child98,2730
	struct talloc_reference_handle *refs;refs99,2768
	unsigned int null_refs;100,2807
	talloc_destructor_t destructor;101,2867
	const char *name;name102,2900
	size_t size;103,2919
	unsigned flags;104,2933
#define TC_HDR_SIZE 108,3007
#define TC_PTR_FROM_CHUNK(109,3066
static struct talloc_chunk *talloc_chunk_from_ptr(talloc_chunk_from_ptr112,3173
#define _TLIST_ADD(126,3604
#define _TLIST_REMOVE(140,3909
static struct talloc_chunk *talloc_parent_chunk(talloc_parent_chunk156,4265
void *talloc_parent(talloc_parent163,4441
void *_talloc(_talloc172,4647
void talloc_set_destructor(219,5548
void talloc_increase_ref_count(228,5769
static int talloc_reference_destructor(240,5965
void *talloc_reference(talloc_reference262,6702
static int talloc_unreference(287,7533
int talloc_unlink(323,8271
static void talloc_set_name_v(375,9117
void talloc_set_name(389,9503
void talloc_set_name_const(401,9755
void *talloc_named(talloc_named412,10065
void *talloc_named_const(talloc_named_const432,10485
const char *talloc_get_name(talloc_get_name449,10753
void *talloc_check_name(talloc_check_name466,11089
void *talloc_init(talloc_init481,11404
static void talloc_free_children(503,11844
int talloc_free(543,12987
void *_talloc_realloc(_talloc_realloc607,14044
void *talloc_steal(talloc_steal678,15477
off_t talloc_total_size(733,16584
off_t talloc_total_blocks(766,17108
static int talloc_reference_count(790,17532
void talloc_report_depth(805,17836
void talloc_report_full(837,18830
void talloc_report(856,19249
static void talloc_report_null(884,19957
static void talloc_report_null_full(894,20144
void talloc_enable_null_tracking(904,20327
static void talloc_report_depth_str(917,20630
char *talloc_describe_all(talloc_describe_all955,21738
void talloc_enable_leak_report(982,22274
void talloc_enable_leak_report_full(991,22420
void *_talloc_zero(_talloc_zero1000,22568
void *_talloc_memdup(_talloc_memdup1015,22771
char *talloc_strdup(talloc_strdup1029,22994
char *talloc_append_string(talloc_append_string1045,23232
char *talloc_strndup(talloc_strndup1069,23634
#define VA_COPY(1086,23942
#define VA_COPY(1088,24018
#define VA_COPY(1090,24072
char *talloc_vasprintf(talloc_vasprintf1094,24129
char *talloc_asprintf(talloc_asprintf1123,24684
static char *talloc_vasprintf_append(talloc_vasprintf_append1141,25043
char *talloc_asprintf_append(talloc_asprintf_append1184,26115
void *_talloc_array(_talloc_array1197,26352
void *_talloc_zero_array(_talloc_zero_array1208,26636
void *_talloc_realloc_array(_talloc_realloc_array1220,26917
void *talloc_realloc_fn(talloc_realloc_fn1233,27396
static void talloc_autofree(1239,27522
void *talloc_autofree_context(talloc_autofree_context1249,27731
size_t talloc_get_size(1258,27928
void *talloc_find_parent_byname(talloc_find_parent_byname1273,28166
void talloc_show_parents(1295,28566

tools/xenstore/xenstored_solaris.c,171
evtchn_port_t xenbus_evtchn(29,720
void *xenbus_map(xenbus_map44,939
void xenbus_notify_running(64,1207
static pid_t cred(75,1353
mangle(98,1769
dtrace_io(125,2329

tools/xenstore/list.h,2525
#define _LINUX_LIST_H2,22
#undef LIST_HEAD_INIT6,134
#undef LIST_HEAD7,156
#undef INIT_LIST_HEAD8,173
#define LIST_POISON1 15,362
#define LIST_POISON2 16,406
#define container_of(18,451
struct list_head 32,958
	struct list_head *next,next33,977
	struct list_head *next, *prev;prev33,977
#define LIST_HEAD_INIT(36,1013
#define LIST_HEAD(38,1064
#define INIT_LIST_HEAD(41,1137
#define list_top(45,1230
static inline void __list_add(57,1573
static inline void list_add(75,1970
static inline void list_add_tail(88,2292
static __inline__ void __list_add_rcu(99,2580
static __inline__ void list_add_rcu(117,2998
static __inline__ void list_add_tail_rcu(130,3358
static inline void __list_del(142,3675
static inline void list_del(154,3996
static inline void list_del_rcu(172,4553
static inline void list_del_init(182,4803
static inline void list_move(193,5075
static inline void list_move_tail(204,5380
static inline int list_empty(215,5634
static inline void __list_splice(220,5720
static inline void list_splice(239,6124
static inline void list_splice_init(252,6462
#define list_entry(267,6848
#define list_for_each(275,7060
#define list_for_each_prev(283,7307
#define list_for_each_safe(292,7655
#define list_for_each_entry(302,7987
#define list_for_each_entry_reverse(313,8426
#define list_for_each_entry_continue(326,8900
#define list_for_each_entry_safe(338,9418
struct hlist_head 352,9910
	struct hlist_node *first;first353,9931
struct hlist_node 356,9964
	struct hlist_node *next,next357,9985
	struct hlist_node *next, **pprev;pprev357,9985
#define HLIST_HEAD_INIT 360,10026
#define HLIST_HEAD(361,10069
#define INIT_HLIST_HEAD(362,10138
#define INIT_HLIST_NODE(363,10190
static __inline__ int hlist_unhashed(365,10262
static __inline__ int hlist_empty(370,10348
static __inline__ void __hlist_del(375,10431
static __inline__ void hlist_del(384,10624
static inline void hlist_del_rcu(402,11174
static __inline__ void hlist_del_init(408,11277
#define hlist_del_rcu_init 416,11406
static __inline__ void hlist_add_head(418,11449
static __inline__ void hlist_add_head_rcu(428,11676
static __inline__ void hlist_add_before(439,11933
static __inline__ void hlist_add_after(447,12112
#define hlist_entry(455,12276
#define hlist_for_each(458,12392
#define hlist_for_each_safe(461,12479
#define hlist_for_each_entry(472,12861
#define hlist_for_each_entry_continue(483,13309
#define hlist_for_each_entry_from(494,13753
#define hlist_for_each_entry_safe(506,14275

tools/xenstore/tdb.h,2143
#define __TDB_H__2,18
#define TDB_REPLACE 36,1108
#define TDB_INSERT 37,1130
#define TDB_MODIFY 38,1151
#define TDB_DEFAULT 41,1200
#define TDB_CLEAR_IF_FIRST 42,1260
#define TDB_INTERNAL 43,1289
#define TDB_NOLOCK 44,1338
#define TDB_NOMMAP 45,1388
#define TDB_CONVERT 46,1432
#define TDB_BIGENDIAN 47,1491
#define TDB_ERRCODE(49,1559
enum TDB_ERROR 52,1638
enum TDB_ERROR {TDB_SUCCESS=TDB_SUCCESS52,1638
enum TDB_ERROR {TDB_SUCCESS=0, TDB_ERR_CORRUPT,52,1638
enum TDB_ERROR {TDB_SUCCESS=0, TDB_ERR_CORRUPT, TDB_ERR_IO,52,1638
enum TDB_ERROR {TDB_SUCCESS=0, TDB_ERR_CORRUPT, TDB_ERR_IO, TDB_ERR_LOCK,52,1638
		TDB_ERR_OOM,53,1713
		TDB_ERR_OOM, TDB_ERR_EXISTS,53,1713
		TDB_ERR_OOM, TDB_ERR_EXISTS, TDB_ERR_NOLOCK,53,1713
		TDB_ERR_OOM, TDB_ERR_EXISTS, TDB_ERR_NOLOCK, TDB_ERR_LOCK_TIMEOUT,53,1713
		TDB_ERR_NOEXIST}TDB_ERR_NOEXIST54,1782
#define uint32_t 57,1820
typedef struct TDB_DATA 60,1854
	char *dptr;dptr61,1880
	size_t dsize;62,1893
} TDB_DATA;63,1908
typedef uint32_t tdb_len;65,1921
typedef uint32_t tdb_off;66,1947
struct tdb_header 69,2026
	char magic_food[magic_food70,2046
	uint32_t version;71,2089
	uint32_t hash_size;72,2134
	tdb_off rwlocks;73,2184
	tdb_off reserved[reserved74,2202
struct tdb_lock_type 77,2229
	uint32_t count;78,2252
	uint32_t ltype;79,2269
struct tdb_traverse_lock 82,2290
	struct tdb_traverse_lock *next;next83,2317
	uint32_t off;84,2350
	uint32_t hash;85,2365
#define PRINTF_ATTRIBUTE(89,2410
typedef struct tdb_context 93,2516
	char *name;name94,2545
	void *map_ptr;map_ptr95,2589
	int fd;96,2640
	tdb_len map_size;97,2693
	int read_only;98,2749
	struct tdb_lock_type *locked;locked99,2788
	enum TDB_ERROR ecode;100,2846
	struct tdb_header header;101,2905
	uint32_t flags;102,2966
	struct tdb_traverse_lock travlocks;103,3018
	struct tdb_context *next;next104,3085
	dev_t device;105,3151
	ino_t inode;106,3201
	void (*log_fn)log_fn107,3250
} TDB_CONTEXT;110,3469
typedef int (*tdb_traverse_func)tdb_traverse_func112,3485
typedef void (*tdb_log_func)tdb_log_func113,3562
typedef uint32_t (*tdb_hash_func)tdb_hash_func114,3632

tools/xenstore/talloc.h,1105
#define _TALLOC_H_2,19
typedef void TALLOC_CTX;29,1125
#define _STRING_LINE_(34,1220
#define _STRING_LINE2_(35,1251
#define __LINESTR__ 36,1296
#define __location__ 37,1347
#define TALLOC_DEPRECATED 40,1420
#define talloc(44,1511
#define talloc_size(45,1590
#define talloc_new(47,1666
#define talloc_zero(49,1747
#define talloc_zero_size(50,1825
#define talloc_zero_array(52,1900
#define talloc_array(53,2004
#define talloc_array_size(54,2098
#define talloc_realloc(56,2189
#define talloc_realloc_size(57,2299
#define talloc_memdup(59,2390
#define malloc_p(61,2466
#define malloc_array_p(62,2518
#define realloc_p(63,2603
#define data_blob(67,2721
#define data_blob_talloc(68,2804
#define data_blob_dup_talloc(69,2911
#define talloc_set_type(72,3044
#define talloc_get_type(73,3113
#define talloc_find_parent_bytype(75,3187
#define talloc_zero_p(79,3302
#define talloc_p(80,3358
#define talloc_array_p(81,3404
#define talloc_realloc_p(82,3476
#define talloc_destroy(83,3558
#define PRINTF_ATTRIBUTE(92,3876
#define PRINTF_ATTRIBUTE(94,3961
void talloc_set_name(105,4345

tools/xenstore/xs_lib.h,369
#define _XS_LIB_H21,887
enum xs_perm_type 30,1045
	XS_PERM_NONE 31,1065
	XS_PERM_READ 32,1084
	XS_PERM_WRITE 33,1103
	XS_PERM_ENOENT_OK 35,1144
	XS_PERM_OWNER 36,1168
struct xs_permissions39,1192
	unsigned int id;41,1216
	enum xs_perm_type perms;42,1234
#define MAX_STRLEN(46,1340
struct expanding_buffer 71,2342
	char *buf;buf72,2368
	int avail;73,2380

tools/xenstore/hashtable.h,162
#define __HASHTABLE_CWC22_H__4,108
#define DEFINE_HASHTABLE_INSERT(101,3880
#define DEFINE_HASHTABLE_SEARCH(119,4424
#define DEFINE_HASHTABLE_REMOVE(137,5010

tools/xenstore/xenstore_control.c,15
int main(8,78

tools/xenstore/xenstore_client.c,792
#define PATH_SEP 25,503
#define MAX_PATH_LEN 26,524
#define MAX_PERMS 28,550
enum mode 30,572
    MODE_unknown,31,584
    MODE_chmod,32,602
    MODE_exists,33,618
    MODE_list,34,635
    MODE_ls,35,650
    MODE_read,36,663
    MODE_rm,37,678
    MODE_write,38,691
    MODE_watch,39,707
static char *output_buf output_buf42,727
static int output_pos 43,759
static int output_size 45,787
output(48,828
usage(72,1360
do_rm(107,2492
#define STRING_MAX 118,2701
static int max_width 119,2747
static int desired_width 120,2774
static int show_whole_path 121,2805
#define TAG 123,2838
#define TAG_LEN 124,2863
#define MIN(126,2892
static void do_ls(128,2936
do_chmod(224,5721
do_watch(271,6777
perform(290,7116
static enum mode lookup_mode(469,12541
main(495,13147

tools/xenstore/xenstored_netbsd.c,180
#define XENSTORED_PROC_KVA 21,562
#define XENSTORED_PROC_PORT 22,605
evtchn_port_t xenbus_evtchn(24,655
void *xenbus_map(xenbus_map51,1019
void xenbus_notify_running(71,1288

tools/xenstore/xenstored_domain.h,35
#define _XENSTORED_DOMAIN_H21,858

tools/xenstore/utils.h,311
#define _UTILS_H2,17
#define streq(8,114
#define strstarts(11,185
static inline bool strends(14,267
#define ARRAY_SIZE(22,419
void barf(24,477
void barf_perror(25,536
#define eprintf(29,643
static inline void *ERR_PTR(ERR_PTR35,776
static inline long PTR_ERR(40,844
static inline long IS_ERR(45,912

tools/xenstore/xenstored_core.c,3362
static bool verbose 57,1610
static int tracefd 59,1663
static bool recovery 60,1688
static bool remove_local 61,1717
static int reopen_log_pipe[reopen_log_pipe62,1750
static char *tracefile tracefile63,1781
static TDB_CONTEXT *tdb_ctx;tdb_ctx64,1812
#define log(69,1942
int quota_nb_entry_per_domain 78,2133
int quota_nb_watch_per_domain 79,2171
int quota_max_entry_size 80,2208
int quota_max_transaction 81,2250
TDB_CONTEXT *tdb_context(tdb_context83,2283
bool replace_tdb(91,2491
static char *sockmsg_string(sockmsg_string100,2710
void trace(128,3618
static void trace_io(156,4133
void trace_create(185,4772
void trace_destroy(190,4869
static void trigger_reopen_log(200,5165
static void reopen_log(208,5308
static bool write_messages(224,5552
static int destroy_conn(273,6524
static void set_fd(300,7103
static int initialize_set(310,7229
static int destroy_fd(345,8031
bool is_child(353,8155
static struct node *read_node(read_node369,8539
static bool write_node(412,9587
static enum xs_perm_type perm_for_conn(455,10755
static char *get_parent(get_parent478,11441
static enum xs_perm_type ask_parents(487,11668
static int errno_from_parents(509,12293
struct node *get_node(get_node522,12625
static struct buffered_data *new_buffer(new_buffer547,13196
static unsigned int get_string(562,13510
unsigned int get_strings(583,14110
void send_reply(598,14373
void send_ack(625,15235
void send_error(630,15352
static bool valid_chars(645,15713
bool is_valid_nodename(654,15940
static const char *onearg(onearg677,16434
static char *perms_to_strings(perms_to_strings684,16575
char *canonicalize(canonicalize704,17079
bool check_event_node(716,17368
static void send_directory(725,17503
static void do_read(739,17797
static void delete_node_single(753,18074
static char *basename(basename768,18402
static struct node *construct_node(construct_node773,18479
static int destroy_node(819,19800
static struct node *create_node(create_node834,20064
static void do_write(864,20730
static void do_mkdir(907,21744
static void delete_node(932,22272
static void memdel(961,23048
static bool remove_child_entry(967,23185
static bool delete_child(977,23471
static int _rm(992,23842
static void internal_rm(1013,24341
static void do_rm(1024,24554
static void do_get_perms(1058,25230
static void do_set_perms(1078,25659
static void do_debug(1131,26859
static void process_message(1159,27435
static void consider_message(1254,28991
static void handle_input(1269,29386
static void handle_output(1316,30322
struct connection *new_connection(new_connection1322,30427
static int writefd(1351,31067
static int readfd(1367,31309
static void accept_connection(1389,31673
#define TDB_FLAGS 1406,31947
static void manual_node(1409,32008
static void setup_structure(1427,32458
static unsigned int hash_from_key_fn(1476,33872
static int keys_equal_fn(1489,34063
static char *child_name(child_name1495,34167
static void remember_string(1506,34359
static void check_store_(1527,35108
static int clean_store_(1593,36622
static void clean_store(1616,37105
static void check_store(1622,37214
static void corrupt(1640,37664
static void write_pidfile(1657,38018
static void daemonize(1677,38466
static void usage(1705,39055
static struct option options[options1731,40142
int main(1749,40674

tools/xenstore/xenstored_watch.c,373
struct watch36,1137
	struct list_head list;39,1186
	struct list_head events;42,1269
	const char *relative_path;relative_path45,1352
	char *token;token47,1381
	char *node;node48,1395
static void add_event(51,1412
void fire_watches(89,2563
static int destroy_watch(109,3079
void do_watch(115,3167
void do_unwatch(176,4580
void conn_delete_all_watches(199,5110

tools/xenstore/utils.c,103
#define _GNU_SOURCE1,0
static void default_xprintf(13,220
void barf(25,433
void barf_perror(44,689

tools/xenstore/xs_lib.c,791
const char *xs_daemon_rootdir(xs_daemon_rootdir30,1076
const char *xs_daemon_rundir(xs_daemon_rundir36,1197
static const char *xs_daemon_path(xs_daemon_path42,1316
const char *xs_daemon_tdb(xs_daemon_tdb54,1559
const char *xs_daemon_socket(xs_daemon_socket61,1697
const char *xs_daemon_socket_ro(xs_daemon_socket_ro66,1763
const char *xs_domain_dev(xs_domain_dev77,1985
bool xs_write_all(93,2276
bool xs_strings_to_perms(111,2591
bool xs_perm_to_string(149,3338
unsigned int xs_count_strings(174,3867
char *expanding_buffer_ensure(expanding_buffer_ensure186,4071
char *sanitise_value(sanitise_value207,4423
#define ADD(213,4558
#define ADDF(214,4599
#undef ADD253,5331
#undef ADDF254,5342
void unsanitise_value(257,5357
#define GETF(268,5564
#undef GETF287,6172

tools/xenstore/xs_tdb_dump.c,235
struct record_hdr 13,247
	uint32_t num_perms;14,267
	uint32_t datalen;15,288
	uint32_t childlen;16,307
	struct xs_permissions perms[perms17,327
static uint32_t total_size(20,364
static char perm_to_char(26,525
int main(35,733

tools/blktap2/lvm/lvm-util.c,296
#define _NAME 35,1697
static char line[line36,1719
lvm_read_line(39,1762
lvm_next_line(46,1892
lvm_copy_name(52,1982
lvm_parse_pv(62,2141
lvm_open_vg(100,2685
lvm_parse_lv_devices(170,3980
lvm_scan_lvs(197,4542
lvm_free_vg(275,5951
lvm_scan_vg(283,6048
usage(304,6312
main(311,6387

tools/blktap2/vhd/vhd-util.c,361
#define DFPRINTF(36,1718
#define DFPRINTF(38,1779
typedef int (*vhd_util_func_t)vhd_util_func_t41,1825
struct command 43,1873
	char               *name;name44,1890
	vhd_util_func_t     func;45,1917
struct command commands[commands48,1948
#define print_commands(64,2762
TEST_FAIL_EXTERN_VARS;75,3054
help(78,3083
get_command(86,3193
main(103,3446

tools/blktap2/vhd/vhd-update.c,248
usage(45,2195
update_creator_version(55,2386
journal_bitmaps(62,2563
old_test_bit(80,2897
#define BIT_MASK 90,3166
new_set_bit 92,3207
convert_bitmap(98,3315
update_vhd(110,3505
open_journal(153,4241
close_journal(167,4492
main(181,4730

tools/blktap2/vhd/lib/relative-path.c,160
#define sfree(34,1697
count_nodes(44,1885
next_node(66,2224
count_common_nodes(110,2891
up_nodes(157,3586
node_offset(191,4087
relative_path_to(212,4396

tools/blktap2/vhd/lib/vhd-util-revert.c,25
vhd_util_revert(53,2630

tools/blktap2/vhd/lib/vhd-util-create.c,25
vhd_util_create(35,1694

tools/blktap2/vhd/lib/vhd-util-coalesce.c,85
__raw_io_write(36,1720
vhd_util_coalesce_block(62,2379
vhd_util_coalesce(127,3609

tools/blktap2/vhd/lib/vhd-util-check.c,710
#define TIMESTAMP_MAX_SLACK 42,1934
vhd_util_check_zeros(45,1979
vhd_util_check_footer_opened(59,2134
vhd_util_check_validate_footer(75,2379
vhd_util_check_validate_header(147,4219
vhd_util_check_validate_differencing_header(195,5332
vhd_util_check_validate_batmap(232,6180
vhd_util_check_validate_parent_locator(269,7106
vhd_util_check_validate_parent(308,7887
vhd_util_check_footer(334,8356
vhd_util_check_header(455,10850
vhd_util_check_differencing_header(501,11703
vhd_util_check_bat(515,11944
vhd_util_check_batmap(608,13712
vhd_util_check_parent_locators(645,14378
vhd_util_dump_headers(794,17110
vhd_util_check_vhd(804,17350
vhd_util_check_parents(880,18764
vhd_util_check(925,19487

tools/blktap2/vhd/lib/vhd-util-scan.c,3027
#define VHD_SCAN_FAST 43,1872
#define VHD_SCAN_PRETTY 44,1906
#define VHD_SCAN_VOLUME 45,1940
#define VHD_SCAN_NOFAIL 46,1974
#define VHD_SCAN_VERBOSE 47,2008
#define VHD_SCAN_PARENTS 48,2042
#define VHD_TYPE_RAW_FILE 50,2077
#define VHD_TYPE_VHD_FILE 51,2111
#define VHD_TYPE_RAW_VOLUME 52,2145
#define VHD_TYPE_VHD_VOLUME 53,2179
target_volume(56,2232
target_vhd(62,2353
struct target 67,2451
	char                 name[name68,2467
	char                 device[device69,2513
	uint64_t             size;70,2561
	uint64_t             start;71,2589
	uint64_t             end;72,2618
	uint8_t              type;73,2645
struct iterator 76,2677
	int                  cur;77,2695
	int                  cur_size;78,2722
	int                  max_size;79,2754
	struct target       *targets;targets80,2786
struct vhd_image 83,2821
	char                *name;name84,2840
	char                *parent;parent85,2868
	uint64_t             capacity;86,2898
	off_t                size;87,2930
	uint8_t              hidden;88,2958
	int                  error;89,2988
	char                *message;message90,3017
	struct target       *target;target92,3049
	struct list_head     sibling;94,3080
	struct list_head     children;95,3111
	struct vhd_image    *parent_image;parent_image96,3143
struct vhd_scan 99,3183
	int                  cur;100,3201
	int                  size;101,3228
	int                  lists_cur;103,3257
	int                  lists_size;104,3290
	struct vhd_image   **images;images106,3325
	struct vhd_image   **lists;lists107,3355
static int flags;110,3388
static struct vg vg;111,3406
static struct vhd_scan scan;112,3427
vhd_util_scan_pretty_allocate_list(115,3468
vhd_util_scan_pretty_free_list(157,4177
vhd_util_scan_pretty_add_image(172,4398
vhd_util_scan_pretty_image_compare(244,5814
vhd_util_scan_print_image_indent(255,6026
vhd_util_scan_pretty_print_tree(284,6814
vhd_util_scan_pretty_print_images(306,7344
vhd_util_scan_print_image(368,8563
vhd_util_scan_error(387,8905
vhd_util_scan_get_parent_locator(407,9247
copy_name(431,9681
vhd_util_scan_extract_volume_name(444,9975
vhd_util_scan_get_volume_parent(479,10564
vhd_util_scan_get_parent(511,11226
vhd_util_scan_get_hidden(551,12121
vhd_util_scan_get_size(571,12407
vhd_util_scan_open_file(584,12660
vhd_util_scan_read_volume_headers(607,13115
vhd_util_scan_open_volume(679,14684
vhd_util_scan_open(718,15516
vhd_util_scan_init_file_target(743,16090
vhd_util_scan_init_volume_target(770,16541
iterator_init(795,17048
iterator_next(813,17407
iterator_add_file(822,17542
iterator_add_volume(842,17960
iterator_add(873,18536
iterator_free(907,19187
vhd_util_scan_add_parent(914,19292
vhd_util_scan_targets(933,19745
vhd_util_scan_targets_pretty(1011,21201
vhd_util_scan_find_file_targets(1030,21576
swap_volume(1114,23064
vhd_util_scan_sort_volumes(1130,23333
vhd_util_scan_find_volume_targets(1164,23867
vhd_util_scan_find_targets(1223,24964
vhd_util_scan(1236,25335

tools/blktap2/vhd/lib/libvhd.c,3372
#define _GNU_SOURCE28,1610
static int libvhd_dbg 44,1886
libvhd_set_log_level(47,1919
#define VHDLOG(53,1986
#define BIT_MASK 60,2146
const char* ENV_VAR_FAIL[ENV_VAR_FAIL63,2199
int TEST_FAIL[TEST_FAIL72,2516
test_bit 76,2599
set_bit 82,2717
clear_bit 88,2821
old_test_bit(94,2927
old_set_bit(100,3049
old_clear_bit(106,3164
vhd_footer_in(112,3268
vhd_footer_out(128,3636
vhd_header_in(144,4016
vhd_header_out(167,4525
vhd_batmap_header_in(190,5046
vhd_batmap_header_out(199,5257
vhd_bat_in(208,5473
vhd_bat_out(217,5580
vhd_checksum_footer(226,5693
vhd_validate_footer(245,6040
vhd_checksum_header(289,7108
vhd_validate_header(308,7455
vhd_validate_bat(349,8433
vhd_checksum_batmap(358,8526
vhd_validate_batmap_header(380,8924
vhd_validate_batmap(392,9154
vhd_batmap_header_offset(407,9377
vhd_validate_platform_code(423,9628
vhd_parent_locator_count(441,9944
vhd_hidden(447,10064
vhd_chain_depth(472,10558
vhd_batmap_test(526,11228
vhd_batmap_set(538,11489
vhd_batmap_clear(550,11737
vhd_bitmap_test(562,11988
vhd_bitmap_set(572,12201
vhd_bitmap_clear(582,12411
vhd_end_of_headers(596,12720
vhd_end_of_data(655,13997
vhd_time(698,14670
vhd_time_to_string(717,15007
vhd_chs(746,15561
vhd_get_footer(786,16191
vhd_get_header(795,16333
vhd_get_bat(807,16523
vhd_get_batmap(820,16717
vhd_put_footer(833,16928
vhd_put_header(839,17021
vhd_put_bat(845,17114
vhd_put_batmap(855,17259
vhd_read_short_footer(871,17503
vhd_read_footer_at(922,18318
vhd_read_footer(959,18947
vhd_read_header_at(987,19429
vhd_read_header(1029,20122
vhd_read_bat(1044,20388
vhd_read_batmap_header(1092,21216
vhd_read_batmap_map(1137,22006
vhd_read_batmap(1173,22621
vhd_has_batmap(1207,23144
vhd_test_file_fixed(1239,23848
vhd_find_parent(1253,24056
vhd_macx_encode_location(1307,24945
vhd_w2u_encode_location(1368,25915
vhd_macx_decode_location(1460,27333
vhd_w2u_decode_location(1492,27820
vhd_header_decode_parent(1529,28420
vhd_parent_locator_read(1544,28761
vhd_parent_locator_get(1632,30233
vhd_parent_locator_write_at(1667,30851
vhd_footer_offset_at_eof(1784,33012
vhd_read_bitmap(1794,33206
vhd_read_block(1843,33942
vhd_write_footer_at(1903,34905
vhd_write_footer(1942,35563
vhd_write_header_at(1965,35944
vhd_write_header(2009,36666
vhd_write_bat(2022,36884
vhd_write_batmap(2065,37606
vhd_write_bitmap(2141,38936
vhd_write_block(2180,39593
namedup(2219,40262
vhd_seek(2234,40471
vhd_position(2249,40744
vhd_read(2255,40823
vhd_write(2272,41102
vhd_offset(2289,41384
vhd_open_fast(2312,41773
vhd_open(2361,42805
vhd_close(2430,44081
vhd_initialize_footer(2441,44272
vhd_initialize_header_parent_name(2461,44995
get_file_size(2515,45835
vhd_initialize_header(2531,46093
vhd_write_parent_locators(2587,47591
vhd_change_parent(2628,48331
vhd_create_batmap(2708,49991
vhd_create_bat(2747,50911
vhd_initialize_fixed_disk(2777,51582
vhd_get_phys_size(2808,52101
vhd_set_phys_size(2819,52271
__vhd_create(2838,52679
vhd_create(2950,54797
vhd_snapshot(2956,54939
__vhd_io_fixed_read(2963,55112
__vhd_io_dynamic_copy_data(2976,55366
__vhd_io_dynamic_read_link(3000,55825
__raw_read_link(3055,56762
__vhd_io_dynamic_read(3102,57765
vhd_io_read(3176,58945
__vhd_io_fixed_write(3188,59248
__vhd_io_allocate_block(3201,59504
__vhd_io_dynamic_write(3250,60388
vhd_io_write(3343,62041

tools/blktap2/vhd/lib/vhd-util-read.c,634
#define nsize 37,1753
static char nbuf[nbuf38,1774
__xconv(41,1821
__dconv(48,1926
#define conv(54,2008
vhd_print_header(58,2103
vhd_print_footer(94,3307
code_name(165,5627
vhd_print_parent(188,6058
vhd_print_parent_locators(203,6322
vhd_print_batmap_header(232,7046
check_block_range(252,7657
vhd_print_headers(264,7881
vhd_dump_headers(291,8356
vhd_print_logical_to_physical(319,8878
vhd_print_bat(354,9720
write_full(376,10179
vhd_print_bitmap(398,10493
vhd_test_bitmap(430,11047
vhd_print_batmap(479,11933
vhd_test_batmap(497,12240
vhd_print_data(521,12701
vhd_read_data(552,13226
vhd_util_read(584,13846

tools/blktap2/vhd/lib/vhd-util-resize.c,1050
#define DFPRINTF(40,1807
#define DFPRINTF(42,1867
#define EPRINTF(45,1913
typedef struct vhd_block 51,2048
	uint32_t block;52,2075
	uint32_t offset;53,2092
} vhd_block_t;54,2110
TEST_FAIL_EXTERN_VARS;56,2126
secs_to_blocks_down(59,2173
secs_to_blocks_up(65,2274
vhd_fixed_shrink(77,2440
vhd_write_zeros(98,2848
vhd_fixed_grow(132,3378
vhd_fixed_resize(172,4016
swap(193,4486
partition(203,4615
quicksort(223,4936
vhd_move_block(237,5197
vhd_clobber_block(300,6337
vhd_defrag_shrink(331,7059
vhd_clear_bat_entries(403,8700
vhd_dynamic_shrink(474,10354
vhd_first_data_block(543,11590
vhd_next_block_offset(563,11950
in_range(584,12297
#define SKIP_HEADER 589,12392
#define SKIP_BAT 590,12417
#define SKIP_BATMAP 591,12442
#define SKIP_PLOC 592,12467
#define SKIP_DATA 593,12492
skip_check(596,12536
vhd_check_for_clobber(602,12604
vhd_shift_metadata(679,14195
vhd_add_bat_entries(775,16018
vhd_dynamic_grow(878,18778
vhd_dynamic_resize(995,21886
vhd_util_resize_check_creator(1031,22540
vhd_util_resize(1052,22921

tools/blktap2/vhd/lib/libvhd-journal.c,2460
#define VHD_JOURNAL_ENTRY_TYPE_FOOTER_P 37,1759
#define VHD_JOURNAL_ENTRY_TYPE_FOOTER_C 38,1802
#define VHD_JOURNAL_ENTRY_TYPE_HEADER 39,1845
#define VHD_JOURNAL_ENTRY_TYPE_LOCATOR 40,1888
#define VHD_JOURNAL_ENTRY_TYPE_BAT 41,1931
#define VHD_JOURNAL_ENTRY_TYPE_BATMAP_H 42,1974
#define VHD_JOURNAL_ENTRY_TYPE_BATMAP_M 43,2017
#define VHD_JOURNAL_ENTRY_TYPE_DATA 44,2060
typedef struct vhd_journal_entry 46,2104
	uint64_t                         cookie;47,2139
	uint32_t                         type;48,2181
	uint32_t                         size;49,2221
	uint64_t                         offset;50,2261
	uint32_t                         checksum;51,2303
} vhd_journal_entry_t;52,2347
vhd_journal_seek(55,2389
vhd_journal_position(67,2578
vhd_journal_read(73,2676
vhd_journal_write(87,2892
vhd_journal_truncate(101,3111
vhd_journal_sync(113,3277
vhd_journal_header_in(125,3412
vhd_journal_header_out(135,3696
vhd_journal_validate_header(145,3978
vhd_journal_read_journal_header(172,4529
vhd_journal_write_header(192,4904
vhd_journal_add_journal_header(219,5373
vhd_journal_entry_in(250,6038
vhd_journal_entry_out(260,6232
vhd_journal_checksum_entry(270,6436
vhd_journal_validate_entry(293,6900
vhd_journal_read_entry(308,7152
vhd_journal_write_entry(321,7410
vhd_journal_validate_entry_data(341,7767
vhd_journal_update(356,8032
vhd_journal_add_footer(413,9300
vhd_journal_add_header(459,10128
vhd_journal_add_locators(484,10524
vhd_journal_add_bat(542,11467
vhd_journal_add_batmap(572,11961
vhd_journal_add_metadata(611,12726
__vhd_journal_read_footer(649,13321
vhd_journal_read_footer(674,13767
vhd_journal_read_footer_copy(681,13932
vhd_journal_read_header(688,14102
vhd_journal_read_locators(712,14551
vhd_journal_read_bat(780,15683
vhd_journal_read_batmap_header(825,16515
vhd_journal_read_batmap_map(861,17212
vhd_journal_read_batmap(895,17878
vhd_journal_restore_footer(918,18236
vhd_journal_restore_footer_copy(925,18401
vhd_journal_restore_header(931,18538
vhd_journal_restore_locators(943,18755
vhd_journal_restore_bat(974,19351
vhd_journal_restore_batmap(980,19462
vhd_journal_restore_metadata(986,19588
vhd_journal_disable_vhd(1104,21651
vhd_journal_enable_vhd(1127,22036
vhd_journal_close(1152,22435
vhd_journal_remove(1164,22561
vhd_journal_open(1185,22804
vhd_journal_create(1257,23943
vhd_journal_add_block(1344,25330
vhd_journal_commit(1412,26502
vhd_journal_revert(1438,27021

tools/blktap2/vhd/lib/vhd-util-query.c,24
vhd_util_query(36,1713

tools/blktap2/vhd/lib/atomicio.c,18
atomicio(35,1552

tools/blktap2/vhd/lib/vhd-util-snapshot.c,97
vhd_util_find_snapshot_target(36,1720
vhd_util_check_depth(89,2518
vhd_util_snapshot(105,2749

tools/blktap2/vhd/lib/vhd-util-repair.c,25
vhd_util_repair(36,1713

tools/blktap2/vhd/lib/vhd-util-set-field.c,28
vhd_util_set_field(36,1713

tools/blktap2/vhd/lib/vhd-util-modify.c,56
TEST_FAIL_EXTERN_VARS;51,2595
vhd_util_modify(54,2623

tools/blktap2/vhd/lib/vhd-util-fill.c,23
vhd_util_fill(36,1713

tools/blktap2/include/atomicio.h,24
#define vwrite 33,1559

tools/blktap2/include/libvhd.h,3123
#define _VHD_LIB_H_28,1610
#define O_LARGEFILE	43,1857
  #define BE16_IN(48,1942
  #define BE32_IN(49,2005
  #define BE64_IN(50,2068
  #define BE16_OUT(51,2131
  #define BE32_OUT(52,2194
  #define BE64_OUT(53,2257
  #define BE16_IN(55,2346
  #define BE32_IN(56,2408
  #define BE64_IN(57,2470
  #define BE16_OUT(58,2532
  #define BE32_OUT(59,2594
  #define BE64_OUT(60,2656
  #define BE16_IN(63,2731
  #define BE32_IN(64,2754
  #define BE64_IN(65,2777
  #define BE32_OUT(66,2800
  #define BE32_OUT(67,2824
  #define BE64_OUT(68,2848
#define MIN(71,2880
#define MAX(72,2941
#define VHD_MAX_NAME_LEN 74,3003
#define VHD_BLOCK_SHIFT 76,3044
#define VHD_BLOCK_SIZE 77,3082
#define UTF_16 79,3144
#define UTF_16LE 80,3188
#define UTF_16BE 81,3234
#define VHD_OPEN_RDONLY 83,3281
#define VHD_OPEN_RDWR 84,3324
#define VHD_OPEN_FAST 85,3367
#define VHD_OPEN_STRICT 86,3410
#define VHD_OPEN_IGNORE_DISABLED 87,3453
#define VHD_FLAG_CREAT_PARENT_RAW 89,3497
#define vhd_flag_set(91,3547
#define vhd_flag_clear(92,3607
#define vhd_flag_test(93,3668
#define ENABLE_FAILURE_TESTING96,3729
#define FAIL_REPARENT_BEGIN 97,3760
#define FAIL_REPARENT_LOCATOR 98,3797
#define FAIL_REPARENT_END 99,3834
#define FAIL_RESIZE_BEGIN 100,3871
#define FAIL_RESIZE_DATA_MOVED 101,3908
#define FAIL_RESIZE_METADATA_MOVED 102,3945
#define FAIL_RESIZE_END 103,3982
#define NUM_FAIL_TESTS 104,4019
#define TEST_FAIL_AT(107,4087
#define TEST_FAIL_EXTERN_VARS 110,4210
#define TEST_FAIL_AT(114,4324
#define TEST_FAIL_EXTERN_VARS115,4352
static const char                  VHD_POISON_COOKIE[VHD_POISON_COOKIE119,4417
typedef struct hd_ftr              vhd_footer_t;121,4487
typedef struct dd_hdr              vhd_header_t;122,4536
typedef struct vhd_bat             vhd_bat_t;123,4585
typedef struct vhd_batmap          vhd_batmap_t;124,4631
typedef struct dd_batmap_hdr       vhd_batmap_header_t;125,4680
typedef struct prt_loc             vhd_parent_locator_t;126,4736
typedef struct vhd_context         vhd_context_t;127,4793
typedef uint32_t                   vhd_flag_creat_t;128,4843
struct vhd_bat 130,4897
	uint32_t                   spb;131,4914
	uint32_t                   entries;132,4947
	uint32_t                  *bat;bat133,4984
struct vhd_batmap 136,5021
	vhd_batmap_header_t        header;137,5041
	char                      *map;map138,5077
struct vhd_context 141,5114
	int                        fd;142,5135
	char                      *file;file143,5167
	int                        oflags;144,5201
	int                        is_block;145,5237
	uint32_t                   spb;147,5276
	uint32_t                   bm_secs;148,5309
	vhd_header_t               header;150,5347
	vhd_footer_t               footer;151,5383
	vhd_bat_t                  bat;152,5419
	vhd_batmap_t               batmap;153,5452
secs_round_up(157,5515
secs_round_up_no_zero(163,5636
vhd_sectors_to_bytes(169,5740
vhd_bytes_padded(175,5844
vhd_type_dynamic(181,5960
vhd_creator_tapdisk(188,6105
vhd_disabled(194,6218
vhd_parent_locator_size(201,6366
vhd_parent_raw(217,6705

tools/blktap2/include/blk_uuid.h,749
#define __BLKTAP2_UUID_H__28,1617
    uuid_t uuid;35,1710
} blk_uuid_t;36,1727
static inline int blk_uuid_is_nil(38,1742
static inline void blk_uuid_generate(43,1833
static inline void blk_uuid_to_string(48,1921
static inline void blk_uuid_from_string(53,2038
static inline void blk_uuid_copy(58,2146
static inline void blk_uuid_clear(63,2252
static inline int blk_uuid_compare(68,2334
typedef uuid_t blk_uuid_t;79,2546
static inline int blk_uuid_is_nil(81,2574
static inline void blk_uuid_generate(87,2695
static inline void blk_uuid_to_string(93,2812
static inline void blk_uuid_from_string(102,3024
static inline void blk_uuid_copy(108,3169
static inline void blk_uuid_clear(113,3296
static inline int blk_uuid_compare(118,3397

tools/blktap2/include/blktaplib.h,4670
#define __BLKTAPLIB_H__33,1671
#define BLK_RING_SIZE 40,1786
#define BLKTAP_VMA_PAGES 43,1907
#define BLKTAP_IOCTL_KICK_FE 46,2020
#define BLKTAP_IOCTL_KICK_BE 47,2059
#define BLKTAP_IOCTL_SETMODE 48,2098
#define BLKTAP_IOCTL_SENDPID	49,2137
#define BLKTAP_IOCTL_NEWINTF	50,2173
#define BLKTAP_IOCTL_MINOR	51,2209
#define BLKTAP_IOCTL_MAJOR	52,2243
#define BLKTAP_QUERY_ALLOC_REQS 53,2277
#define BLKTAP_IOCTL_FREEINTF	54,2316
#define BLKTAP_IOCTL_PRINT_IDXS 55,2353
#define BLKTAP_IOCTL_BACKDEV_SETUP 56,2395
#define PRIO_SPECIAL_IO 58,2437
#define BLKTAP_MODE_PASSTHROUGH 61,2555
#define BLKTAP_MODE_INTERCEPT_FE 62,2629
#define BLKTAP_MODE_INTERCEPT_BE 63,2677
#define BLKTAP_MODE_INTERPOSE 65,2726
static inline int BLKTAP_MODE_VALID(68,2824
#define MAX_REQUESTS 76,3017
#define BLKTAP_IOCTL_KICK 78,3064
#define MAX_PENDING_REQS	79,3098
#define BLKTAP_DEV_DIR 80,3137
#define BLKTAP_DEV_NAME 81,3180
#define BACKDEV_NAME 82,3221
#define BLKTAP_DEV_MINOR 83,3263
#define BLKTAP_CTRL_DIR 84,3297
#define BLKTAP_RING_PAGES 88,3371
#define BLKTAP_MMAP_REGION_SIZE 89,3417
	blkif_request_t  req;95,3534
	int              submitting;96,3557
	int              secs_pending;97,3587
        int16_t          status;98,3619
	int              num_retries;99,3652
	struct timeval   last_try;100,3683
} pending_req_t;101,3711
typedef struct blkif 103,3729
	domid_t domid;104,3752
	long int handle;105,3768
	long int pdev;107,3788
	long int readonly;108,3804
	enum { DISCONNECTED,110,3826
	enum { DISCONNECTED, DISCONNECTING,110,3826
	enum { DISCONNECTED, DISCONNECTING, CONNECTED 110,3826
	enum { DISCONNECTED, DISCONNECTING, CONNECTED } state;110,3826
	struct blkif_ops *ops;ops112,3884
	struct blkif *hash_next;hash_next113,3908
	void *prv;prv115,3936
	struct blkif_info *info;info116,3976
	pending_req_t pending_list[pending_list117,4031
	int devnum;118,4074
	int fds[fds119,4087
	int be_id;120,4100
	char *backend_path;backend_path121,4112
	int major;122,4133
	int minor;123,4145
	pid_t tappid;124,4157
	int drivertype;125,4172
	uint16_t cookie;126,4189
	int err;127,4207
} blkif_t;128,4217
typedef struct blkif_info 130,4229
	char *params;params131,4257
	int   readonly;132,4272
	int   storage;133,4289
} blkif_info_t;134,4305
typedef struct tapdev_info 136,4322
	int fd;137,4351
	char *mem;mem138,4360
	blkif_sring_t *sring;sring139,4372
	blkif_back_ring_t  fe_ring;140,4395
	unsigned long vstart;141,4424
	blkif_t *blkif;blkif142,4447
} tapdev_info_t;143,4464
typedef struct domid_translate 145,4482
	unsigned short domid;146,4515
	unsigned short busid;147,4538
} domid_translate_t 148,4561
typedef struct image 150,4584
	unsigned long long size;151,4607
	unsigned long secsize;152,4633
	unsigned int info;153,4657
} image_t;154,4677
typedef struct msg_hdr 156,4689
	uint16_t   type;157,4714
	uint16_t   len;158,4732
	uint16_t   drivertype;159,4749
	uint16_t   cookie;160,4773
} msg_hdr_t;161,4793
typedef struct msg_params 163,4807
	uint8_t    readonly;164,4835
	int        path_off;165,4857
	int        path_len;166,4879
	int        storage;167,4901
} msg_params_t;168,4922
typedef struct msg_newdev 170,4939
	uint8_t     devnum;171,4967
	uint16_t    domid;172,4988
} msg_newdev_t;173,5008
typedef struct msg_pid 175,5025
	pid_t     pid;176,5050
} msg_pid_t;177,5066
typedef struct msg_cp 179,5080
	int       cp_uuid_off;180,5104
	int       cp_uuid_len;181,5128
	int       cp_drivertype;182,5152
} msg_cp_t;183,5178
typedef struct msg_lock 185,5191
	int       ro;186,5217
	int       enforce;187,5232
	int       uuid_off;188,5252
	int       uuid_len;189,5273
} msg_lock_t;190,5294
#define READ 192,5309
#define WRITE 193,5324
#define CTLMSG_PARAMS 196,5389
#define CTLMSG_IMG 197,5422
#define CTLMSG_IMG_FAIL 198,5455
#define CTLMSG_NEWDEV 199,5488
#define CTLMSG_NEWDEV_RSP 200,5521
#define CTLMSG_NEWDEV_FAIL 201,5554
#define CTLMSG_CLOSE 202,5587
#define CTLMSG_CLOSE_RSP 203,5620
#define CTLMSG_PID 204,5653
#define CTLMSG_PID_RSP 205,5686
#define CTLMSG_CHECKPOINT 206,5720
#define CTLMSG_CHECKPOINT_RSP 207,5754
#define CTLMSG_LOCK 208,5788
#define CTLMSG_LOCK_RSP 209,5822
#define CTLMSG_PAUSE 210,5856
#define CTLMSG_PAUSE_RSP 211,5890
#define CTLMSG_RESUME 212,5924
#define CTLMSG_RESUME_RSP 213,5958
#define TAPDISK_STORAGE_TYPE_NFS 215,5993
#define TAPDISK_STORAGE_TYPE_EXT 216,6034
#define TAPDISK_STORAGE_TYPE_LVM 217,6075
#define TAPDISK_STORAGE_TYPE_DEFAULT 218,6116
#define MAX_TAP_DEV 221,6240
#define MMAP_PAGES 224,6309
#define MMAP_VADDR(226,6437
static char *blkif_op_name[blkif_op_name235,6770

tools/blktap2/include/vhd-util.h,29
#define _VHD_UTIL_H_28,1611

tools/blktap2/include/libvhd-journal.h,1026
#define _VHD_JOURNAL_H_28,1614
#define VHD_JOURNAL_METADATA 34,1683
#define VHD_JOURNAL_DATA 35,1723
#define VHD_JOURNAL_HEADER_COOKIE 37,1764
#define VHD_JOURNAL_ENTRY_COOKIE 38,1810
typedef struct vhd_journal_header 40,1865
	char                       cookie[cookie41,1901
	blk_uuid_t                 uuid;42,1940
	uint64_t                   vhd_footer_offset;43,1974
	uint32_t                   journal_data_entries;44,2021
	uint32_t                   journal_metadata_entries;45,2071
	uint64_t                   journal_data_offset;46,2125
	uint64_t                   journal_metadata_offset;47,2174
	uint64_t                   journal_eof;48,2227
	char                       pad[pad49,2268
} vhd_journal_header_t;50,2306
typedef struct vhd_journal 52,2331
	char                      *jname;jname53,2360
	int                        jfd;54,2395
	int                        is_block;55,2428
	vhd_journal_header_t       header;56,2494
	vhd_context_t              vhd;57,2530
} vhd_journal_t;58,2563

tools/blktap2/include/blktap2.h,1177
#define _BLKTAP_2_H_29,1615
#define BLKTAP2_MAX_MESSAGE_LEN 31,1637
#define BLKTAP2_RING_MESSAGE_PAUSE 33,1681
#define BLKTAP2_RING_MESSAGE_RESUME 34,1722
#define BLKTAP2_RING_MESSAGE_CLOSE 35,1763
#define BLKTAP2_IOCTL_KICK_FE 37,1805
#define BLKTAP2_IOCTL_ALLOC_TAP 38,1846
#define BLKTAP2_IOCTL_FREE_TAP 39,1889
#define BLKTAP2_IOCTL_CREATE_DEVICE 40,1932
#define BLKTAP2_IOCTL_SET_PARAMS 41,1975
#define BLKTAP2_IOCTL_PAUSE 42,2018
#define BLKTAP2_IOCTL_REOPEN 43,2061
#define BLKTAP2_IOCTL_RESUME 44,2104
#define BLKTAP2_SYSFS_DIR 46,2148
#define BLKTAP2_CONTROL_NAME 47,2208
#define BLKTAP2_CONTROL_DIR 48,2264
#define BLKTAP2_CONTROL_SOCKET 49,2335
#define BLKTAP2_DIRECTORY 50,2380
#define BLKTAP2_CONTROL_DEVICE 51,2439
#define BLKTAP2_RING_DEVICE 52,2506
#define BLKTAP2_IO_DEVICE 53,2572
struct blktap2_handle 55,2639
	unsigned int                   ring;56,2663
	unsigned int                   device;57,2701
	unsigned int                   minor;58,2741
struct blktap2_params 61,2784
	char                           name[name62,2808
	unsigned long long             capacity;63,2871
	unsigned long                  sector_size;64,2913

tools/blktap2/include/list.h,862
#define __LIST_H__10,177
#define LIST_POISON1 12,197
#define LIST_POISON2 13,241
struct list_head 15,286
        struct list_head *next,next16,305
        struct list_head *next, *prev;prev16,305
#undef LIST_HEAD_INIT23,471
#undef LIST_HEAD26,518
#define LIST_HEAD_INIT(29,543
#define LIST_HEAD(31,595
static inline void INIT_LIST_HEAD(34,675
static inline void __list_add(40,778
static inline void list_add(50,1048
static inline void list_add_tail(55,1171
static inline void __list_del(60,1292
static inline void list_del(66,1431
static inline void list_del_init(73,1607
static inline int list_empty(79,1733
static inline int list_is_last(84,1825
static inline void __list_splice(90,1959
static inline void list_splice(104,2246
#define list_entry(111,2411
#define list_for_each_entry(114,2558
#define list_for_each_entry_safe(119,2852

tools/blktap2/include/relative-path.h,116
#define _RELATIVE_PATH_H_28,1616
#define DELIMITER 32,1664
#define MAX_NAME_LEN 33,1689
#define EPRINTF(35,1716

tools/blktap2/include/tapdisk-message.h,3462
#define _TAPDISK_MESSAGE_H_28,1618
#define TAPDISK_MESSAGE_MAX_PATH_LENGTH 33,1693
#define TAPDISK_MESSAGE_STRING_LENGTH 34,1738
#define TAPDISK_MESSAGE_MAX_MINORS 36,1784
#define TAPDISK_MESSAGE_FLAG_SHARED 39,1877
#define TAPDISK_MESSAGE_FLAG_RDONLY 40,1923
#define TAPDISK_MESSAGE_FLAG_ADD_CACHE 41,1969
#define TAPDISK_MESSAGE_FLAG_VHD_INDEX 42,2015
#define TAPDISK_MESSAGE_FLAG_LOG_DIRTY 43,2061
typedef struct tapdisk_message           tapdisk_message_t;45,2108
typedef uint8_t                          tapdisk_message_flag_t;46,2168
typedef struct tapdisk_message_image     tapdisk_message_image_t;47,2233
typedef struct tapdisk_message_params    tapdisk_message_params_t;48,2299
typedef struct tapdisk_message_string    tapdisk_message_string_t;49,2366
typedef struct tapdisk_message_response  tapdisk_message_response_t;50,2433
typedef struct tapdisk_message_minors    tapdisk_message_minors_t;51,2502
typedef struct tapdisk_message_list      tapdisk_message_list_t;52,2569
struct tapdisk_message_params 54,2635
	tapdisk_message_flag_t           flags;55,2667
	uint8_t                          storage;57,2709
	uint32_t                         devnum;58,2752
	uint32_t                         domid;59,2794
	uint16_t                         path_len;60,2835
	char                             path[path61,2879
struct tapdisk_message_image 64,2956
	uint64_t                         sectors;65,2987
	uint32_t                         sector_size;66,3030
	uint32_t                         info;67,3077
struct tapdisk_message_string 70,3121
	char                             text[text71,3153
struct tapdisk_message_response 74,3228
	int                              error;75,3262
	char                             message[message76,3303
struct tapdisk_message_minors 79,3381
	int                              count;80,3413
	int                              list[list81,3454
struct tapdisk_message_list 84,3526
	int                              count;85,3556
	int                              minor;86,3597
	int                              state;87,3638
	char                             path[path88,3679
struct tapdisk_message 91,3756
	uint16_t                         type;92,3781
	uint16_t                         cookie;93,3821
		pid_t                    tapdisk_pid;96,3873
		tapdisk_message_image_t  image;97,3913
		tapdisk_message_params_t params;98,3947
		tapdisk_message_string_t string;99,3982
		tapdisk_message_minors_t minors;100,4017
		tapdisk_message_response_t response;101,4052
		tapdisk_message_list_t   list;102,4091
	} u;103,4124
enum tapdisk_message_id 106,4134
	TAPDISK_MESSAGE_ERROR 107,4160
	TAPDISK_MESSAGE_RUNTIME_ERROR,108,4188
	TAPDISK_MESSAGE_PID,109,4220
	TAPDISK_MESSAGE_PID_RSP,110,4242
	TAPDISK_MESSAGE_ATTACH,111,4268
	TAPDISK_MESSAGE_ATTACH_RSP,112,4293
	TAPDISK_MESSAGE_OPEN,113,4322
	TAPDISK_MESSAGE_OPEN_RSP,114,4345
	TAPDISK_MESSAGE_PAUSE,115,4372
	TAPDISK_MESSAGE_PAUSE_RSP,116,4396
	TAPDISK_MESSAGE_RESUME,117,4424
	TAPDISK_MESSAGE_RESUME_RSP,118,4449
	TAPDISK_MESSAGE_CLOSE,119,4478
	TAPDISK_MESSAGE_CLOSE_RSP,120,4502
	TAPDISK_MESSAGE_DETACH,121,4530
	TAPDISK_MESSAGE_DETACH_RSP,122,4555
	TAPDISK_MESSAGE_LIST_MINORS,123,4584
	TAPDISK_MESSAGE_LIST_MINORS_RSP,124,4614
	TAPDISK_MESSAGE_LIST,125,4648
	TAPDISK_MESSAGE_LIST_RSP,126,4671
	TAPDISK_MESSAGE_FORCE_SHUTDOWN,127,4698
	TAPDISK_MESSAGE_EXIT,128,4731
tapdisk_message_name(132,4779

tools/blktap2/include/lvm-util.h,921
#define _LVM_UTIL_H_29,1616
#define MAX_NAME_SIZE 33,1661
#define LVM_SEG_TYPE_LINEAR 35,1699
#define LVM_SEG_TYPE_UNKNOWN 36,1734
struct lv_segment 38,1770
	uint8_t                  type;39,1790
	char                     device[device40,1822
	uint64_t                 pe_start;41,1871
	uint64_t                 pe_size;42,1907
struct lv 45,1946
	char                     name[name46,1958
	uint64_t                 size;47,2005
	uint32_t                 segments;48,2037
	struct lv_segment        first_segment;49,2073
struct pv 52,2118
	char                     name[name53,2130
	uint64_t                 start;54,2177
struct vg 57,2214
	char                     name[name58,2226
	uint64_t                 extent_size;59,2273
	int                      pv_cnt;61,2313
	struct pv               *pvs;pvs62,2347
	int                      lv_cnt;64,2379
	struct lv               *lvs;lvs65,2413

tools/blktap2/include/vhd.h,2613
#define __VHD_H__28,1608
typedef uint32_t u32;32,1650
typedef uint64_t u64;33,1672
#define DEBUG 35,1695
#define VHD_SECTOR_SIZE 41,1944
#define VHD_SECTOR_SHIFT 42,1973
struct hd_ftr 48,2235
  char   cookie[cookie49,2251
  u32    features;50,2328
  u32    ff_version;51,2405
  u64    data_offset;52,2482
  u32    timestamp;53,2559
  char   crtr_app[crtr_app54,2636
  u32    crtr_ver;55,2713
  u32    crtr_os;56,2790
  u64    orig_size;57,2867
  u64    curr_size;58,2944
  u32    geometry;59,3021
  u32    type;60,3098
  u32    checksum;61,3175
  blk_uuid_t uuid;62,3252
  char   saved;63,3329
  char   hidden;64,3406
  char   reserved[reserved65,3483
static const char HD_COOKIE[HD_COOKIE69,3589
#define HD_NO_FEATURES 72,3668
#define HD_TEMPORARY 73,3706
#define HD_RESERVED 74,3782
#define HD_FF_VERSION 77,3889
#define HD_CR_OS_WINDOWS 80,3981
#define HD_CR_OS_MACINTOSH 81,4032
#define VHD_VERSION(89,4242
#define VHD_CURRENT_VERSION 90,4320
#define GEOM_GET_CYLS(96,4518
#define GEOM_GET_HEADS(97,4569
#define GEOM_GET_SPT(98,4618
#define GEOM_ENCODE(100,4660
#define HD_TYPE_NONE 103,4756
#define HD_TYPE_FIXED 104,4785
#define HD_TYPE_DYNAMIC 105,4843
#define HD_TYPE_DIFF 106,4892
static const char *HD_TYPE_STR[HD_TYPE_STR109,4978
#define HD_TYPE_MAX 119,5321
struct prt_loc 121,5344
  u32    code;122,5361
  u32    data_space;123,5438
  u32    data_len;124,5515
  u32    res;125,5592
  u64    data_offset;126,5669
#define PLAT_CODE_NONE 130,5771
#define PLAT_CODE_WI2R 131,5799
#define PLAT_CODE_WI2K 132,5876
#define PLAT_CODE_W2RU 133,5953
#define PLAT_CODE_W2KU 134,6030
#define PLAT_CODE_MAC 135,6107
#define PLAT_CODE_MACX 136,6184
struct dd_hdr 142,6494
  char   cookie[cookie143,6510
  u64    data_offset;144,6587
  u64    table_offset;145,6664
  u32    hdr_ver;146,6741
  u32    max_bat_size;147,6818
  u32    block_size;148,6895
  u32    checksum;149,6972
  blk_uuid_t prt_uuid;150,7049
  u32    prt_ts;151,7126
  u32    res1;152,7203
  char   prt_name[prt_name153,7280
  struct prt_loc loc[loc154,7357
  char   res2[res2155,7434
static const char DD_COOKIE[DD_COOKIE159,7540
#define DD_VERSION 162,7618
#define DD_BLOCKSIZE_DEFAULT 165,7683
#define DD_BLK_UNUSED 167,7724
struct dd_batmap_hdr 169,7758
  char   cookie[cookie170,7781
  u64    batmap_offset;171,7858
  u32    batmap_size;172,7935
  u32    batmap_version;173,8012
  u32    checksum;174,8089
static const char VHD_BATMAP_COOKIE[VHD_BATMAP_COOKIE177,8170
#define VHD_BATMAP_VERSION(182,8268
#define VHD_BATMAP_CURRENT_VERSION 183,8353

tools/blktap2/control/tap-ctl-unpause.c,25
tap_ctl_unpause(38,1739

tools/blktap2/control/tap-ctl-spawn.c,128
__tap_ctl_spawn(40,1772
tap_ctl_get_pid(85,2501
tap_ctl_wait(101,2777
tap_ctl_get_child_id(130,3351
tap_ctl_spawn(154,3718

tools/blktap2/control/tap-ctl-attach.c,24
tap_ctl_attach(37,1719

tools/blktap2/control/tap-ctl-major.c,27
tap_ctl_blk_major(35,1660

tools/blktap2/control/tap-ctl-allocate.c,161
tap_ctl_prepare_directory(45,1899
tap_ctl_make_device(85,2411
tap_ctl_check_environment(119,2945
tap_ctl_allocate_device(157,3660
tap_ctl_allocate(227,5020

tools/blktap2/control/tap-ctl-close.c,48
__tap_ctl_close(38,1746
tap_ctl_close(67,2377

tools/blktap2/control/tap-ctl.h,319
#define __TAP_CTL_H__29,1616
#define DBG(38,1749
#define DPRINTF(44,1850
#define EPRINTF(45,1904
#define  PERROR(46,1982
	int         id;67,2814
	pid_t       pid;68,2831
	int         minor;69,2849
	int         state;70,2869
	char       *type;type71,2889
	char       *path;path72,2908
} tap_list_t;73,2927

tools/blktap2/control/tap-ctl-list.c,647
free_list(41,1785
_parse_params(57,1971
init_list(85,2342
tap_ctl_free_list(103,2673
tap_ctl_alloc_list(114,2842
tap_ctl_list_length(149,3299
_tap_minor_cmp(162,3472
_tap_ctl_find_minors(168,3555
struct tapdisk 228,4496
	int    id;229,4513
	pid_t  pid;230,4525
	struct list_head list;231,4538
_tap_tapdisk_cmp(235,4577
_tap_ctl_find_tapdisks(241,4694
struct tapdisk_list 311,5872
	int  minor;312,5894
	int  state;313,5907
	char *params;params314,5920
	struct list_head entry;315,5935
_tap_ctl_list_tapdisk(319,5968
_tap_ctl_free_tapdisks(383,7140
_tap_list_join3(400,7425
tap_ctl_list(474,8717
tap_ctl_find_minor(509,9312

tools/blktap2/control/tap-ctl-pause.c,23
tap_ctl_pause(37,1719

tools/blktap2/control/tap-ctl-destroy.c,25
tap_ctl_destroy(39,1759

tools/blktap2/control/tap-ctl.c,1125
typedef int (*tap_ctl_func_t)tap_ctl_func_t37,1717
struct command 39,1764
	char                     *name;name40,1781
	tap_ctl_func_t            func;41,1814
tap_cli_list_usage(45,1863
tap_ctl_list_row(52,1995
tap_ctl_list_dict(73,2451
tap_cli_list(101,2943
tap_cli_allocate_usage(172,4072
tap_cli_allocate(178,4182
tap_cli_free_usage(211,4661
tap_cli_free(217,4756
tap_cli_create_usage(248,5169
tap_cli_create(254,5284
tap_cli_destroy_usage(294,5839
tap_cli_destroy(300,5949
tap_cli_spawn_usage(335,6457
tap_cli_spawn(341,6543
tap_cli_attach_usage(372,6999
tap_cli_attach(378,7107
tap_cli_detach_usage(413,7611
tap_cli_detach(419,7719
tap_cli_close_usage(454,8223
tap_cli_close(460,8340
tap_cli_pause_usage(499,8904
tap_cli_pause(505,9010
tap_cli_unpause_usage(540,9510
tap_cli_unpause(546,9623
tap_cli_major_usage(586,10213
tap_cli_major(592,10304
tap_cli_open_usage(634,10831
tap_cli_open(640,10945
tap_cli_check_usage(680,11532
tap_cli_check(687,11678
struct command commands[commands705,11898
#define print_commands(722,12772
help(734,13069
get_command(742,13178
main(759,13431

tools/blktap2/control/tap-ctl-create.c,24
tap_ctl_create(38,1740

tools/blktap2/control/tap-ctl-free.c,22
tap_ctl_free(40,1782

tools/blktap2/control/tap-ctl-check.c,53
tap_ctl_check_blktap(37,1720
tap_ctl_check(65,2154

tools/blktap2/control/tap-ctl-detach.c,24
tap_ctl_detach(37,1719

tools/blktap2/control/tap-ctl-open.c,22
tap_ctl_open(39,1762

tools/blktap2/control/tap-ctl-ipc.c,251
int tap_ctl_debug 41,1825
tap_ctl_read_message(44,1853
tap_ctl_write_message(90,2686
tap_ctl_send_and_receive(137,3579
tap_ctl_socket_name(159,4024
tap_ctl_connect(171,4200
tap_ctl_connect_id(200,4737
tap_ctl_connect_send_and_receive(225,5070

tools/blktap2/drivers/log.h,982
#define __LOG_H__ 32,1659
#define LOGCMD_SHMP 40,1770
#define LOGCMD_PEEK 41,1798
#define LOGCMD_CLEAR 42,1826
#define LOGCMD_GET 43,1854
#define LOGCMD_KICK 44,1882
#define CTLRSPLEN_SHMP 46,1911
#define CTLRSPLEN_PEEK 47,1939
#define CTLRSPLEN_CLEAR 48,1965
#define CTLRSPLEN_GET 49,1991
#define CTLRSPLEN_KICK 50,2017
#define SHMSIZE 56,2255
#define SRINGSIZE 57,2289
static inline void* bmstart(64,2551
static inline void* bmend(69,2609
static inline void* sringstart(74,2677
static inline void* sdatastart(79,2745
static inline void* sdataend(84,2830
struct log_ctlmsg 90,2955
  char msg[msg91,2975
  char params[params92,2990
struct disk_range 96,3037
  uint64_t sector;97,3057
  uint32_t count;98,3076
struct log_extent 108,3457
  uint64_t sector;109,3477
  uint32_t count;110,3496
  uint32_t offset;111,3514
typedef struct log_extent log_request_t;116,3653
typedef struct log_extent log_response_t;117,3694
#define LOG_HEADER_PAGES 121,3793

tools/blktap2/drivers/tapdisk-disktype.c,738
static const disk_info_t aio_disk 36,1721
static const disk_info_t sync_disk 42,1813
static const disk_info_t vmdk_disk 48,1908
static const disk_info_t vhdsync_disk 54,2006
static const disk_info_t vhd_disk 60,2131
static const disk_info_t ram_disk 67,2235
static const disk_info_t qcow_disk 73,2331
static const disk_info_t block_cache_disk 79,2426
static const disk_info_t vhd_index_disk 85,2532
static const disk_info_t log_disk 91,2638
static disk_info_t remus_disk 97,2715
const disk_info_t *tapdisk_disk_types[tapdisk_disk_types103,2819
const struct tap_disk *tapdisk_disk_drivers[tapdisk_disk_drivers130,3664
tapdisk_disktype_find(147,4168
tapdisk_disktype_parse_params(166,4447
tapdisk_parse_disk_type(193,4883

tools/blktap2/drivers/tapdisk-utils.h,64
#define _TAPDISK_UTILS_H_29,1621
#define MAX_NAME_LEN 33,1671

tools/blktap2/drivers/qcow-create.c,119
#define DFPRINTF(45,1719
#define DFPRINTF(47,1784
#define MAX_NAME_LEN 50,1830
void help(52,1857
int main(61,2048

tools/blktap2/drivers/hashtable_itr.c,351
struct hashtable_itr 8,206
	struct hashtable *h;h9,229
	struct entry *e;e10,251
	struct entry *parent;parent11,269
	unsigned int index;12,292
hashtable_iterator(19,472
hashtable_iterator_key(49,1211
hashtable_iterator_value(53,1287
hashtable_iterator_advance(61,1554
hashtable_iterator_remove(106,2567
hashtable_iterator_search(135,3343

tools/blktap2/drivers/bswap.h,1243
#define BSWAP_H2,16
#define bswap_16(13,210
#define bswap_32(14,240
#define bswap_64(15,270
#define bswap_16(22,359
#define bswap_32(30,533
#define bswap_64(40,833
static inline uint16_t bswap16(56,1551
static inline uint32_t bswap32(61,1623
static inline uint64_t bswap64(66,1696
static inline void bswap16s(71,1769
static inline void bswap32s(76,1837
static inline void bswap64s(81,1905
#define be_bswap(89,2010
#define le_bswap(90,2040
#define be_bswaps(91,2083
#define le_bswaps(92,2110
#define le_bswap(94,2167
#define be_bswap(95,2197
#define le_bswaps(96,2240
#define be_bswaps(97,2267
#define CPU_CONVERT(100,2326
CPU_CONVERT(131,2993
#define cpu_to_le16wu(143,3291
#define cpu_to_le32wu(144,3338
#define le16_to_cpupu(145,3385
#define le32_to_cpupu(146,3426
#define cpu_to_be16wu(148,3468
#define cpu_to_be32wu(149,3515
static inline void cpu_to_le32wu(161,3701
static inline uint16_t le16_to_cpupu(171,3874
static inline uint32_t le32_to_cpupu(177,4012
static inline void cpu_to_be16wu(183,4182
static inline void cpu_to_be32wu(191,4313
#define cpu_to_32wu 204,4517
#define cpu_to_32wu 206,4557
#undef le_bswap209,4599
#undef be_bswap210,4615
#undef le_bswaps211,4631
#undef be_bswaps212,4648

tools/blktap2/drivers/tapdisk-diff.c,2561
#define POLL_READ 44,1919
#define POLL_WRITE 45,1962
#define SPB_SHIFT 47,2006
struct tapdisk_stream_poll 49,2058
	int                              pipe[pipe50,2087
	int                              set;51,2130
struct tapdisk_stream_request 54,2173
	uint64_t                         sec;55,2205
	uint32_t                         secs;56,2244
	uint64_t                         seqno;57,2284
	blkif_request_t                  blkif_req;58,2325
	struct list_head                 next;59,2370
struct tapdisk_stream 62,2414
	td_vbd_t                        *vbd;vbd63,2438
	unsigned int                     id;65,2478
	int                              err;67,2517
	uint64_t                         cur;69,2557
	uint64_t                         start;70,2596
	uint64_t                         end;71,2637
	uint64_t                         started;73,2677
	uint64_t                         completed;74,2720
	struct tapdisk_stream_poll       poll;76,2766
	event_id_t                       enqueue_event_id;77,2806
	struct list_head                 free_list;79,2859
	struct list_head                 pending_list;80,2904
	struct list_head                 completed_list;81,2952
	struct tapdisk_stream_request    requests[requests83,3003
static unsigned int tapdisk_stream_count;86,3065
static char *program;program90,3174
static struct tapdisk_stream stream1,91,3196
static struct tapdisk_stream stream1, stream2;91,3196
static vhd_context_t vhd1;92,3243
usage(95,3283
open_vhd(102,3405
tapdisk_stream_poll_initialize(124,3749
tapdisk_stream_poll_open(131,3888
tapdisk_stream_poll_close(159,4342
tapdisk_stream_poll_clear(169,4581
tapdisk_stream_poll_set(178,4738
tapdisk_stream_stop(189,4919
tapdisk_stream_initialize_request(197,5102
tapdisk_stream_request_idx(204,5255
tapdisk_stream_get_request(211,5430
tapdisk_stream_queue_completed(228,5756
tapdisk_result_compare(243,6109
tapdisk_stream_process_data(264,6709
tapdisk_stream_dequeue(316,8058
tapdisk_stream_enqueue_copy(343,8751
tapdisk_stream_enqueue1(391,9953
tapdisk_stream_enqueue2(466,11647
tapdisk_diff_done(497,12261
tapdisk_diff_stop(503,12376
tapdisk_stream_enqueue(510,12495
tapdisk_stream_open_image(537,13003
tapdisk_stream_close_image(583,13834
tapdisk_stream_initialize_requests(599,14120
tapdisk_stream_register_enqueue_event(627,14779
tapdisk_stream_unregister_enqueue_event(652,15255
tapdisk_stream_initialize(662,15497
tapdisk_stream_open(671,15696
tapdisk_stream_release(701,16241
tapdisk_stream_run(708,16383
main(716,16549

tools/blktap2/drivers/qcow.h,2145
#define _QCOW_H_30,1612
#define QCOW_MAGIC 36,1781
#define XEN_MAGIC 37,1848
#define QCOW_VERSION 38,1915
#define QCOW_CRYPT_NONE 40,1939
#define QCOW_CRYPT_AES 41,1968
#define QCOW_OFLAG_COMPRESSED 43,1998
#define SPARSE_FILE 44,2040
#define EXTHDR_L1_BIG_ENDIAN 45,2065
#define O_BINARY 48,2117
#define ROUNDUP(51,2144
typedef struct QCowHeader 57,2243
	uint32_t magic;58,2271
	uint32_t version;59,2288
	uint64_t backing_file_offset;60,2307
	uint32_t backing_file_size;61,2338
	uint32_t mtime;62,2367
	uint64_t size;63,2384
	uint8_t cluster_bits;64,2415
	uint8_t l2_bits;65,2438
	uint32_t crypt_method;66,2456
	uint64_t l1_table_offset;67,2480
} QCowHeader;68,2507
typedef struct QCowHeader_ext 71,2563
        uint32_t xmagic;72,2595
        uint32_t cksum;73,2620
        uint32_t min_cluster_alloc;74,2644
        uint32_t flags;75,2680
} QCowHeader_ext;76,2704
#define L2_CACHE_SIZE 82,2880
struct tdqcow_state 84,2936
        int fd;85,2958
	uint64_t fd_end;86,3028
	char *name;name87,3101
	uint32_t backing_file_size;88,3160
	uint64_t backing_file_offset;89,3189
	uint8_t extended;90,3220
	int encrypted;91,3286
	int cluster_bits;92,3359
	int cluster_size;94,3456
	int cluster_sectors;95,3510
	int cluster_alloc;96,3576
	int min_cluster_alloc;98,3658
	int sparse;99,3725
	int l2_bits;100,3802
	int l2_size;101,3861
	int l1_size;102,3913
	uint64_t cluster_offset_mask;103,3963
	uint64_t l1_table_offset;104,3998
	uint64_t *l1_table;l1_table106,4080
	uint64_t *l2_cache;l2_cache107,4133
	uint64_t l2_cache_offsets[l2_cache_offsets109,4239
	uint32_t l2_cache_counts[l2_cache_counts110,4307
	uint8_t *cluster_cache;cluster_cache111,4378
	uint8_t *cluster_data;cluster_data112,4413
	uint64_t cluster_cache_offset;113,4437
	uint32_t crypt_method;114,4474
	uint32_t crypt_method_header;116,4556
	AES_KEY aes_encrypt_key;117,4593
	AES_KEY aes_decrypt_key;118,4637
	int                  aio_free_count;121,4709
	int                  max_aio_reqs;122,4748
	struct qcow_request   *aio_requests;aio_requests123,4784
	struct qcow_request  **aio_free_list;aio_free_list124,4822

tools/blktap2/drivers/img2qcow.c,551
#define DFPRINTF(57,1984
#define DFPRINTF(59,2049
#define O_LARGEFILE	64,2145
#define BLOCK_PROCESSSZ 67,2175
#define QCOW_VBD 68,2204
#define PROGRESS_QUANT 69,2223
static int running 71,2249
static int returned_events 72,2287
static uint32_t read_idx 73,2338
td_driver_t *ddqcow;ddqcow74,2368
td_vbd_t* qcow_vbd;75,2389
static uint64_t prev 76,2409
static char output[output77,2448
static void print_bytes(82,2529
static void debug_output(98,2857
static int get_image_info(112,3231
void send_responses(152,4195
int main(164,4369

tools/blktap2/drivers/hashtable_utility.c,25
hashtable_change(19,501

tools/blktap2/drivers/tapdisk-filter.c,461
#define RSEED 38,1752
#define PRE_CHECK 39,1773
#define POST_CHECK 40,1794
#define WRITE_INTEGRITY 42,1816
#define READ_INTEGRITY 43,1881
#define DBG(45,1944
inject_fault(52,2143
fault_injected(68,2419
recover_fault(78,2710
chksum(90,2979
check_hash(103,3156
insert_hash(125,3723
check_sector(135,3913
check_data(156,4344
tapdisk_init_tfilter(171,4672
tapdisk_free_tfilter(217,5637
tapdisk_filter_iocbs(229,5799
tapdisk_filter_events(252,6199

tools/blktap2/drivers/block-ram.c,460
char *img;img44,1882
long int   disksector_size;45,1893
long int   disksize;46,1921
long int   diskinfo;47,1942
static int connections 48,1963
struct tdram_state 50,1992
        int fd;51,2013
static int get_image_info(55,2061
int tdram_open 111,3516
void tdram_queue_read(201,5853
void tdram_queue_write(212,6180
int tdram_close(225,6599
int tdram_get_parent_id(234,6735
int tdram_validate_parent(239,6825
struct tap_disk tapdisk_ram 245,6938

tools/blktap2/drivers/md5.c,466
struct MD5Context 22,793
        uint32_t buf[buf23,813
        uint32_t bits[bits24,838
        uint8_t in[in25,864
typedef struct MD5Context MD5_CTX;35,1202
void md5_sum(44,1386
#define byteReverse(55,1591
static void byteReverse(60,1708
void MD5Init(76,2097
void MD5Update(91,2394
void MD5Final(139,3578
#define F1(183,4891
#define F2(184,4931
#define F3(185,4963
#define F4(186,4995
#define MD5STEP(189,5084
static void MD5Transform(197,5406

tools/blktap2/drivers/tapdisk-utils.c,254
tapdisk_start_logging(48,1962
tapdisk_stop_logging(58,2199
tapdisk_set_resource_limits(65,2263
#define CORE_DUMP85,2650
tapdisk_namedup(96,2817
tapdisk_get_image_size(112,3055
int tapdisk_linux_version(153,3890
int tapdisk_linux_version(172,4221

tools/blktap2/drivers/io-optimize.c,1105
#define DBG(40,1804
#define DBG(42,1879
#define DBG(44,1926
opio_free(51,2076
opio_init(67,2307
alloc_opio(95,3000
free_opio(103,3148
restore_iocb(110,3302
iocb_optimized(120,3473
contiguous_sectors(130,3756
contiguous_buffers(136,3888
contiguous_iocbs(142,4014
init_opio_list(150,4191
opio_iocb_init(156,4286
opio_get(177,4622
merge_tail(186,4796
merge(206,5164
io_merge(218,5394
expand_iocb(245,5875
io_expand_iocbs(264,6167
expand_event(288,6598
io_split(321,7188
__print_iocb(349,7827
static char *null_prefix null_prefix361,8198
#define print_iocb(362,8229
print_iocbs(365,8305
print_optimized_iocbs(380,8576
print_merged_iocbs(392,8793
print_events(413,9232
#define hmask 429,9628
#define smask 430,9655
#define make_data(431,9682
#define data_idx(433,9800
#define data_is_head(434,9876
#define data_is_sparse(435,9950
usage(438,10037
static int xalloc_cnt,445,10172
static int xalloc_cnt, xfree_cnt;445,10172
xalloc(447,10227
xfree(459,10393
randomize_iocbs(466,10453
simulate_io(519,11490
process_events(541,11896
init_optest(562,12412
main(575,12685

tools/blktap2/drivers/block-cache.c,4216
#define DBG(41,1845
#define DBG(43,1905
#define WARN(46,1946
#define RADIX_TREE_PAGE_SHIFT 48,2003
#define RADIX_TREE_PAGE_SIZE 49,2061
#define RADIX_TREE_NODE_SHIFT 51,2131
#define RADIX_TREE_NODE_SIZE 52,2190
#define RADIX_TREE_NODE_MASK 53,2259
#define BLOCK_CACHE_NODES_PER_PAGE 55,2327
#define BLOCK_CACHE_MAX_SIZE 57,2423
#define BLOCK_CACHE_REQUESTS 58,2492
#define BLOCK_CACHE_PAGE_IDLETIME 59,2561
typedef struct radix_tree               radix_tree_t;61,2605
typedef struct radix_tree_node          radix_tree_node_t;62,2659
typedef struct radix_tree_link          radix_tree_link_t;63,2718
typedef struct radix_tree_leaf          radix_tree_leaf_t;64,2777
typedef struct radix_tree_page          radix_tree_page_t;65,2836
typedef struct block_cache              block_cache_t;67,2896
typedef struct block_cache_request      block_cache_request_t;68,2951
typedef struct block_cache_stats        block_cache_stats_t;69,3014
struct radix_tree_page 71,3076
	char                           *buf;buf72,3101
	size_t                          size;73,3139
	uint64_t                        sec;74,3178
	radix_tree_link_t              *owners[owners75,3216
struct radix_tree_leaf 78,3289
	radix_tree_page_t              *page;page79,3314
	char                           *buf;buf80,3353
struct radix_tree_link 83,3395
	uint32_t                        time;84,3420
		radix_tree_node_t      *next;next86,3468
		radix_tree_leaf_t       leaf;87,3500
	} u;88,3532
struct radix_tree_node 91,3542
	int                             height;92,3567
	radix_tree_link_t               links[links93,3608
struct radix_tree 96,3674
	int                             height;97,3694
	uint64_t                        size;98,3735
	uint32_t                        nodes;99,3774
	radix_tree_node_t              *root;root100,3814
	block_cache_t                  *cache;cache102,3854
struct block_cache_request 105,3898
	int                             err;106,3927
	char                           *buf;buf107,3965
	uint64_t                        secs;108,4003
	td_request_t                    treq;109,4042
	block_cache_t                  *cache;cache110,4081
struct block_cache_stats 113,4125
	uint64_t                        reads;114,4152
	uint64_t                        hits;115,4192
	uint64_t                        misses;116,4231
	uint64_t                        prunes;117,4272
struct block_cache 120,4317
	int                             ptype;121,4338
	char                           *name;name122,4378
	uint64_t                        sectors;124,4418
	block_cache_request_t           requests[requests126,4461
	block_cache_request_t          *request_free_list[request_free_list127,4526
	int                             requests_free;128,4600
	event_id_t                      timeout_id;130,4649
	radix_tree_t                    tree;132,4695
	block_cache_stats_t             stats;134,4735
radix_tree_calculate_size(138,4802
radix_tree_calculate_height(145,4942
radix_tree_index(159,5237
radix_tree_node_contains_leaves(166,5406
radix_tree_node_is_root(172,5535
radix_tree_size(178,5672
radix_tree_clear_link(184,5794
radix_tree_allocate_node(191,5937
radix_tree_allocate_child_node(206,6189
radix_tree_free_node(212,6337
radix_tree_allocate_page(222,6494
radix_tree_free_page(240,6803
radix_tree_remove_page(259,7309
radix_tree_insert_leaf(273,7554
radix_tree_find_leaf(294,7949
radix_tree_add_leaf(320,8428
radix_tree_add_leaves(354,9158
radix_tree_delete_branch(379,9655
radix_tree_destroy(402,10110
radix_tree_prune_branch(412,10295
radix_tree_prune(457,11198
radix_tree_initialize(475,11550
radix_tree_free(486,11798
block_cache_prune_event(492,11878
block_cache_get_request(504,12115
block_cache_put_request(513,12287
block_cache_open(520,12485
block_cache_close(573,13735
block_cache_hash(591,14070
block_cache_hit(609,14330
block_cache_populate_cache(628,14763
block_cache_miss(667,15625
block_cache_queue_read(710,16490
block_cache_queue_write(735,17034
block_cache_get_parent_id(741,17150
block_cache_validate_parent(747,17248
block_cache_debug(763,17569
struct tap_disk tapdisk_block_cache 776,17918

tools/blktap2/drivers/blk.h,29
#define O_LARGEFILE	35,1739

tools/blktap2/drivers/td.c,1027
#define DFPRINTF(44,1860
#define DFPRINTF(46,1925
	TD_FIELD_HIDDEN 50,1986
	TD_FIELD_INVALID 51,2009
} td_field_t;52,2031
struct vdi_field 54,2046
	char       *name;name55,2065
	td_field_t  id;56,2084
static struct vdi_field td_vdi_fields[td_vdi_fields59,2105
	TD_CMD_CREATE 64,2229
	TD_CMD_SNAPSHOT,65,2252
	TD_CMD_QUERY,67,2299
	TD_CMD_SET,69,2344
	TD_CMD_INVALID,73,2444
} td_command_t;74,2461
struct command 76,2478
	td_command_t  id;77,2495
	char         *name;name78,2514
	int           needs_type;79,2535
struct command commands[commands82,2566
	TD_TYPE_VHD 95,3254
	TD_TYPE_AIO,96,3280
	TD_TYPE_INVALID,97,3294
} td_disk_t;98,3312
const char *td_disk_types[td_disk_types100,3326
#define print_commands(105,3393
#define print_disk_types(115,3681
#define print_field_names(125,3971
help(136,4279
get_command(146,4475
get_field(158,4654
get_driver_type(170,4824
td_create(185,5043
td_snapshot(279,6766
td_coalesce(357,8345
td_query(405,9290
td_set_field(546,11822
main(599,12915

tools/blktap2/drivers/blk_netbsd.c,58
int blk_getimagesize(9,153
int blk_getsectorsize(26,424

tools/blktap2/drivers/hashtable.c,330
static const unsigned int primes[primes15,349
const unsigned int prime_table_length 24,603
const float max_load_factor 25,677
create_hashtable(29,813
hash(57,1819
hashtable_expand(71,2231
hashtable_count(130,3867
hashtable_insert(137,4016
hashtable_search(163,4891
hashtable_remove(181,5388
hashtable_destroy(216,6130

tools/blktap2/drivers/block-vhd.c,7046
unsigned int SPB;63,2994
#define DEBUGGING 65,3013
#define ASSERTING 66,3035
#define MICROSOFT_COMPAT67,3057
#define VHD_BATMAP_MAX_RETRIES 69,3083
#define __TRACE(71,3118
#define __ASSERT(81,3457
  #define DBG(92,3751
  #define ERR(93,3806
  #define TRACE(94,3880
  #define DBG(96,3950
  #define ERR(97,4015
  #define TRACE(98,4076
  #define DBG(100,4130
  #define ERR(101,4177
  #define TRACE(102,4224
  #define ASSERT(106,4300
  #define ASSERT(108,4356
#define VHD_CACHE_SIZE 112,4437
#define VHD_REQS_DATA 114,4478
#define VHD_REQS_META 115,4537
#define VHD_REQS_TOTAL 116,4595
#define VHD_OP_BAT_WRITE 118,4665
#define VHD_OP_DATA_READ 119,4704
#define VHD_OP_DATA_WRITE 120,4743
#define VHD_OP_BITMAP_READ 121,4782
#define VHD_OP_BITMAP_WRITE 122,4821
#define VHD_OP_ZERO_BM_WRITE 123,4860
#define VHD_BM_BAT_LOCKED 125,4900
#define VHD_BM_BAT_CLEAR 126,4939
#define VHD_BM_BIT_CLEAR 127,4978
#define VHD_BM_BIT_SET 128,5017
#define VHD_BM_NOT_CACHED 129,5056
#define VHD_BM_READ_PENDING 130,5095
#define VHD_FLAG_OPEN_RDONLY 132,5135
#define VHD_FLAG_OPEN_NO_CACHE 133,5174
#define VHD_FLAG_OPEN_QUIET 134,5213
#define VHD_FLAG_OPEN_STRICT 135,5252
#define VHD_FLAG_OPEN_QUERY 136,5291
#define VHD_FLAG_OPEN_PREALLOCATE 137,5331
#define VHD_FLAG_BAT_LOCKED 139,5372
#define VHD_FLAG_BAT_WRITE_STARTED 140,5411
#define VHD_FLAG_BM_UPDATE_BAT 142,5451
#define VHD_FLAG_BM_WRITE_PENDING 143,5490
#define VHD_FLAG_BM_READ_PENDING 144,5529
#define VHD_FLAG_BM_LOCKED 145,5568
#define VHD_FLAG_REQ_UPDATE_BAT 147,5608
#define VHD_FLAG_REQ_UPDATE_BITMAP 148,5647
#define VHD_FLAG_REQ_QUEUED 149,5686
#define VHD_FLAG_REQ_FINISHED 150,5725
#define VHD_FLAG_TX_LIVE 152,5765
#define VHD_FLAG_TX_UPDATE_BAT 153,5804
typedef uint8_t vhd_flag_t;155,5844
struct vhd_req_list 160,5912
	struct vhd_request       *head;head161,5934
	struct vhd_request       *tail;tail162,5967
struct vhd_transaction 165,6004
	int                       error;166,6029
	int                       closed;167,6063
	int                       started;168,6098
	int                       finished;169,6134
	vhd_flag_t                status;170,6171
	struct vhd_req_list       requests;171,6206
struct vhd_request 174,6247
	int                       error;175,6268
	uint8_t                   op;176,6302
	vhd_flag_t                flags;177,6333
	td_request_t              treq;178,6367
	struct tiocb              tiocb;179,6400
	struct vhd_state         *state;state180,6434
	struct vhd_request       *next;next181,6468
	struct vhd_transaction   *tx;tx182,6501
struct vhd_bat_state 185,6536
	vhd_bat_t                 bat;186,6559
	vhd_batmap_t              batmap;187,6591
	vhd_flag_t                status;188,6626
	uint32_t                  pbw_blk;189,6661
	uint64_t                  pbw_offset;190,6732
	struct vhd_request        req;191,6798
	struct vhd_request        zero_req;192,6866
	char                     *bat_buf;bat_buf193,6937
struct vhd_bitmap 196,6977
	u32                       blk;197,6997
	u64                       seqno;198,7029
	vhd_flag_t                status;199,7095
	char                     *map;map201,7131
	char                     *shadow;shadow203,7243
	struct vhd_transaction    tx;207,7436
	struct vhd_req_list       queue;210,7569
	struct vhd_req_list       waiting;212,7664
	struct vhd_request        req;215,7817
struct vhd_state 218,7853
	vhd_flag_t                flags;219,7872
	vhd_context_t             vhd;222,7931
	u32                       spp;223,7963
        u32                       spb;224,8026
        u64                       next_db;225,8097
	struct vhd_bat_state      bat;228,8204
	u64                       bm_lru;230,8237
	u32                       bm_secs;231,8303
	struct vhd_bitmap        *bitmap[bitmap232,8376
	int                       bm_free_count;234,8428
	struct vhd_bitmap        *bitmap_free[bitmap_free235,8470
	struct vhd_bitmap         bitmap_list[bitmap_list236,8526
	int                       vreq_free_count;238,8583
	struct vhd_request       *vreq_free[vreq_free239,8627
	struct vhd_request        vreq_list[vreq_list240,8680
	td_driver_t              *driver;driver242,8734
	uint64_t                  queued;244,8770
	uint64_t                  completed;245,8805
	uint64_t                  returned;246,8843
	uint64_t                  reads;247,8880
	uint64_t                  read_size;248,8914
	uint64_t                  writes;249,8952
	uint64_t                  write_size;250,8987
#define test_vhd_flag(253,9030
#define set_vhd_flag(254,9083
#define clear_vhd_flag(255,9137
#define bat_entry(257,9193
static struct vhd_state  *_vhd_master;_vhd_master262,9389
static unsigned long      _vhd_zsize;263,9428
static char              *_vhd_zeros;_vhd_zeros264,9466
vhd_initialize(267,9516
vhd_free(290,9975
_get_vhd_zeros(302,10166
#define vhd_zeros(313,10400
set_batmap(316,10475
test_batmap(325,10675
vhd_kill_footer(333,10830
find_next_free_block(368,11375
vhd_free_bat(390,11763
vhd_initialize_bat(399,11930
vhd_free_bitmap_cache(454,12961
vhd_initialize_bitmap_cache(470,13261
vhd_initialize_dynamic_disk(509,14008
vhd_check_version(547,14769
vhd_log_open(566,15211
__vhd_open(597,15899
_vhd_open(678,17636
vhd_log_close(703,18351
_vhd_close(725,18785
vhd_validate_parent(772,19814
vhd_get_parent_id(823,21101
clear_req_list(851,21644
add_to_tail(857,21743
remove_from_req_list(866,21922
init_vhd_request(894,22383
init_tx(901,22532
add_to_transaction(907,22640
transaction_completed(923,23064
init_bat(929,23177
lock_bat(940,23381
unlock_bat(946,23486
bat_locked(952,23594
init_vhd_bitmap(958,23709
get_bitmap(972,24083
lock_bitmap(987,24311
unlock_bitmap(993,24417
bitmap_locked(999,24526
bitmap_valid(1005,24641
bitmap_in_use(1011,24762
bitmap_full(1020,25066
remove_lru_bitmap(1034,25315
alloc_vhd_bitmap(1058,25701
__bitmap_lru_seqno(1080,26065
touch_bitmap(1101,26401
install_bitmap(1107,26518
free_vhd_bitmap(1122,26749
read_bitmap_cache(1139,27061
read_bitmap_cache_span(1185,28065
alloc_vhd_request(1214,28673
free_vhd_request(1229,28937
aio_read(1236,29112
aio_write(1252,29479
reserve_new_block(1268,29856
schedule_bat_write(1285,30254
schedule_zero_bm_write(1323,31058
update_bat(1347,31725
allocate_block(1381,32366
schedule_data_read(1446,33750
schedule_data_write(1490,34760
schedule_bitmap_read(1554,36180
schedule_bitmap_write(1597,37095
__vhd_queue_request(1642,38245
vhd_queue_read(1674,38878
vhd_queue_write(1747,40480
signal_completion(1833,42407
start_new_bitmap_transaction(1861,42897
finish_bat_transaction(1903,43808
finish_bitmap_transaction(1929,44225
finish_data_transaction(1972,45333
finish_bat_write(1987,45626
finish_zero_bm_write(2028,46671
finish_bitmap_read(2062,47371
finish_bitmap_write(2114,48456
finish_data_read(2140,49040
finish_data_write(2150,49268
vhd_complete(2190,50280
vhd_debug(2240,51227
struct tap_disk tapdisk_vhd 2311,53320

tools/blktap2/drivers/tapdisk-driver.h,549
#define _TAPDISK_DRIVER_H_29,1622
#define TD_DRIVER_OPEN 35,1722
#define TD_DRIVER_RDONLY 36,1766
struct td_driver_handle 38,1811
	int                          type;39,1837
	char                        *name;name40,1873
	int                          storage;42,1910
	int                          refcnt;44,1950
	td_flag_t                    state;45,1988
	td_disk_info_t               info;47,2026
	void                        *data;data49,2063
	const struct tap_disk       *ops;ops50,2099
	struct list_head             next;52,2135

tools/blktap2/drivers/tapdisk-vbd.c,2439
#define DBG(49,2008
#define ERR(50,2068
#define ASSERT(53,2203
#define ASSERT(62,2409
#define TD_VBD_EIO_RETRIES 66,2447
#define TD_VBD_EIO_SLEEP 67,2486
#define TD_VBD_WATCHDOG_TIMEOUT 68,2524
tapdisk_vbd_initialize_vreq(78,2735
tapdisk_vbd_free(85,2871
tapdisk_vbd_create(96,3025
tapdisk_vbd_initialize(135,3822
tapdisk_vbd_set_callback(153,4075
tapdisk_vbd_validate_chain(160,4223
tapdisk_vbd_close_vdi(183,4630
tapdisk_vbd_add_block_cache(199,4912
tapdisk_vbd_add_dirty_log(264,6119
tapdisk_vbd_open_level(308,6813
__tapdisk_vbd_open_vdi(383,8373
tapdisk_vbd_parse_stack(446,9804
tapdisk_vbd_free_stack(502,10881
tapdisk_vbd_open_stack(517,11198
tapdisk_vbd_open_vdi(541,11543
tapdisk_vbd_register_event_watches(579,12237
tapdisk_vbd_unregister_events(595,12509
tapdisk_vbd_map_device(602,12650
tapdisk_vbd_unmap_device(647,13634
tapdisk_vbd_detach(662,13864
tapdisk_vbd_attach(672,13996
tapdisk_vbd_open(695,14303
tapdisk_vbd_queue_count(719,14728
tapdisk_vbd_shutdown(749,15288
tapdisk_vbd_close(780,16139
tapdisk_vbd_debug(811,16797
tapdisk_vbd_drop_log(832,17524
tapdisk_vbd_get_image_info(843,17717
tapdisk_vbd_queue_ready(861,18055
tapdisk_vbd_retry_needed(870,18304
tapdisk_vbd_lock(876,18408
tapdisk_vbd_quiesce_queue(882,18460
tapdisk_vbd_start_queue(895,18737
tapdisk_vbd_kill_queue(903,18895
tapdisk_vbd_open_image(911,19032
tapdisk_vbd_close_and_reopen_image(933,19387
tapdisk_vbd_pause(954,19713
tapdisk_vbd_resume(973,20016
tapdisk_vbd_kick(1011,20758
tapdisk_vbd_write_response_to_ring(1037,21280
tapdisk_vbd_callback(1049,21582
tapdisk_vbd_make_response(1056,21735
tapdisk_vbd_check_state(1079,22262
tapdisk_vbd_check_progress(1108,23053
tapdisk_vbd_check_queue(1134,23548
tapdisk_vbd_complete_vbd_request(1167,24144
tapdisk_vbd_breq_get_sector(1181,24613
__tapdisk_vbd_complete_td_request(1195,24948
__tapdisk_vbd_reissue_td_request(1239,26061
tapdisk_vbd_forward_request(1317,27822
tapdisk_vbd_complete_td_request(1336,28237
tapdisk_vbd_issue_request(1356,28774
tapdisk_vbd_reissue_failed_requests(1443,30701
tapdisk_vbd_issue_new_requests(1502,32037
tapdisk_vbd_kill_requests(1517,32291
tapdisk_vbd_issue_requests(1535,32709
tapdisk_vbd_pull_ring_requests(1553,33039
tapdisk_vbd_pause_ring(1589,33753
tapdisk_vbd_resume_ring(1618,34336
tapdisk_vbd_check_ring_message(1682,35724
tapdisk_vbd_ring_event(1706,36150
tapdisk_vbd_first_image(1720,36433

tools/blktap2/drivers/block-aio.c,738
#define MAX_AIO_REQS 44,1863
struct aio_request 48,1936
	td_request_t         treq;49,1957
	struct tiocb         tiocb;50,1985
	struct tdaio_state  *state;state51,2014
struct tdaio_state 54,2047
	int                  fd;55,2068
	td_driver_t         *driver;driver56,2094
	int                  aio_free_count;58,2125
	struct aio_request   aio_requests[aio_requests59,2164
	struct aio_request  *aio_free_list[aio_free_list60,2214
static int tdaio_get_image_info(64,2297
int tdaio_open(113,3542
void tdaio_complete(162,4733
void tdaio_queue_read(171,4981
void tdaio_queue_write(199,5605
int tdaio_close(227,6235
int tdaio_get_parent_id(236,6371
int tdaio_validate_parent(241,6461
struct tap_disk tapdisk_aio 247,6574

tools/blktap2/drivers/profile.h,828
#define __TAP_PROFILE_H__30,1621
  #define _GNU_SOURCE33,1668
#define TAPPROF_IN 49,1918
#define TAPPROF_OUT 50,1940
struct profile_times 52,1963
	char    *fn_name;fn_name53,1986
	uint64_t in,54,2005
	uint64_t in, out_sum,54,2005
	uint64_t in, out_sum, cnt;54,2005
struct profile_info 57,2037
	FILE                 *log;log58,2059
	int                   size;59,2087
	char                 *name;name60,2116
	unsigned long long    seq;61,2145
	struct profile_times *pt;pt62,2173
tp_open(68,2241
tp_close(82,2645
tp_get_id(107,3118
tp_fn_id(113,3199
__tp_in(130,3478
#define tp_in(143,3750
__tp_out(146,3814
#define tp_out(161,4126
__tp_log(164,4192
#define tp_log(181,4591
#define tp_open(184,4674
#define tp_close(185,4727
#define tp_in(186,4780
#define tp_out(187,4833
#define tp_log(188,4886

tools/blktap2/drivers/tapdisk2.c,29
usage(43,1851
main(50,1972

tools/blktap2/drivers/tapdisk-vbd.h,3282
#define _TAPDISK_VBD_H_29,1618
#define TD_VBD_MAX_RETRIES 39,1785
#define TD_VBD_RETRY_INTERVAL 40,1825
#define TD_VBD_DEAD 42,1864
#define TD_VBD_CLOSED 43,1907
#define TD_VBD_QUIESCE_REQUESTED 44,1950
#define TD_VBD_QUIESCED 45,1993
#define TD_VBD_PAUSE_REQUESTED 46,2036
#define TD_VBD_PAUSED 47,2079
#define TD_VBD_SHUTDOWN_REQUESTED 48,2122
#define TD_VBD_LOCKING 49,2165
#define TD_VBD_RETRY_NEEDED 50,2208
#define TD_VBD_LOG_DROPPED 51,2251
typedef struct td_ring              td_ring_t;53,2295
typedef struct td_vbd_request       td_vbd_request_t;54,2342
typedef struct td_vbd_driver_info   td_vbd_driver_info_t;55,2396
typedef struct td_vbd_handle        td_vbd_t;56,2454
typedef void (*td_vbd_cb_t)td_vbd_cb_t57,2500
struct td_ring 59,2566
	int                         fd;60,2583
	char                       *mem;mem61,2616
	blkif_sring_t              *sring;sring62,2650
	blkif_back_ring_t           fe_ring;63,2686
	unsigned long               vstart;64,2724
struct td_vbd_request 67,2765
	blkif_request_t             req;68,2789
	int16_t                     status;69,2823
	int                         error;71,2861
	int                         blocked;72,2897
	int                         submitting;73,2965
	int                         secs_pending;74,3006
	int                         num_retries;75,3049
	struct timeval              last_try;76,3091
	td_vbd_t                   *vbd;vbd78,3131
	struct list_head            next;79,3165
struct td_vbd_driver_info 82,3204
	char                       *params;params83,3232
	int                         type;84,3269
	struct list_head            next;85,3304
struct td_vbd_handle 88,3343
	char                       *name;name89,3366
	td_uuid_t                   uuid;91,3402
	int                         minor;92,3437
	struct list_head            driver_stack;94,3474
	int                         storage;96,3518
	uint8_t                     reopened;98,3557
	uint8_t                     reactivated;99,3596
	td_flag_t                   flags;100,3638
	td_flag_t                   state;101,3674
	struct list_head            images;103,3711
	struct list_head            new_requests;105,3749
	struct list_head            pending_requests;106,3792
	struct list_head            failed_requests;107,3839
	struct list_head            completed_requests;108,3885
	td_vbd_request_t            request_list[request_list110,3935
	td_ring_t                   ring;112,3993
	event_id_t                  ring_event_id;113,4028
	td_vbd_cb_t                 callback;115,4073
	void                       *argument;argument116,4112
	struct list_head            next;118,4152
	struct timeval              ts;120,4188
	uint64_t                    received;122,4222
	uint64_t                    returned;123,4261
	uint64_t                    kicked;124,4300
	uint64_t                    secs_pending;125,4337
	uint64_t                    retries;126,4380
	uint64_t                    errors;127,4418
#define tapdisk_vbd_for_each_request(130,4459
#define tapdisk_vbd_for_each_image(133,4587
tapdisk_vbd_move_request(137,4727
tapdisk_vbd_add_image(145,4913
tapdisk_vbd_is_last_image(151,5036
tapdisk_vbd_last_image(160,5232
tapdisk_vbd_next_image(166,5358

tools/blktap2/drivers/io-optimize.h,812
#define __IO_OPTIMIZE_H__30,1621
struct opio_list 36,1683
	struct opio        *head;head37,1702
	struct opio        *tail;tail38,1729
struct opio 41,1760
	char               *buf;buf42,1774
	unsigned long       nbytes;43,1800
	long long           offset;44,1829
	void               *data;data45,1858
	struct iocb        *iocb;iocb46,1885
	struct io_event     event;47,1912
	struct opio        *head;head48,1940
	struct opio        *next;next49,1967
	struct opio_list    list;50,1994
struct opioctx 53,2025
	int                 num_opios;54,2042
	int                 free_opio_cnt;55,2074
	struct opio        *opios;opios56,2110
	struct opio       **free_opios;free_opios57,2138
	struct iocb       **iocb_queue;iocb_queue58,2171
	struct io_event    *event_queue;event_queue59,2204

tools/blktap2/drivers/libaio-compat.h,813
#define __LIBAIO_COMPAT30,1149
struct __compat_io_iocb_common 36,1240
	char             __pad_buf[__pad_buf37,1273
	char             __pad_nbytes[__pad_nbytes38,1305
	long long	offset;39,1340
	long long	__pad3;40,1359
	unsigned	flags;41,1378
	unsigned	resfd;42,1395
static inline void __io_set_eventfd(45,1416
#  define __NR_eventfd	56,1684
#  define __NR_eventfd	58,1736
#  define __NR_eventfd	60,1809
#  define __NR_eventfd	62,1863
#  define __NR_eventfd	64,1916
#  define __NR_eventfd	67,1997
#  define __NR_eventfd	68,2040
#  define __NR_eventfd	69,2083
#  define __NR_eventfd	71,2151
#  define __NR_eventfd	73,2244
#  define __NR_eventfd	75,2319
#  define __NR_eventfd	77,2373
#  define __NR_eventfd	79,2428
#define SYS_eventfd 84,2499
static inline int tapdisk_sys_eventfd(87,2540

tools/blktap2/drivers/hashtable_itr.h,88
#define __HASHTABLE_ITR_CWC22__4,116
#define DEFINE_HASHTABLE_ITERATOR_SEARCH(55,1923

tools/blktap2/drivers/tapdisk-filter.h,629
#define TAPDISK_FILTER_H29,1619
#define TD_INJECT_FAULTS 35,1706
#define TD_CHECK_INTEGRITY 36,1778
#define TD_FAULT_RATE 38,1844
struct dhash 40,1876
	uint64_t             hash;41,1891
	struct timeval       time;42,1919
struct fiocb 45,1951
	size_t               bytes;46,1966
	void                *data;data47,1995
struct tfilter 50,2027
	int                  mode;51,2044
	uint64_t             secs;52,2072
	int                  iocbs;53,2100
	struct dhash        *dhash;dhash55,2130
	int                  ffree;57,2160
	struct fiocb        *fiocbs;fiocbs58,2189
	struct fiocb       **flist;flist59,2219

tools/blktap2/drivers/tapdisk-server.c,1129
#define DBG(40,1836
#define ERR(41,1902
 tapdisk_server_t server;43,1967
#define tapdisk_server_for_each_vbd(45,1994
tapdisk_server_get_shared_image(49,2122
tapdisk_server_get_all_vbds(67,2506
tapdisk_server_get_vbd(73,2578
tapdisk_server_add_vbd(85,2743
tapdisk_server_remove_vbd(91,2833
tapdisk_server_queue_tiocb(99,2967
tapdisk_server_debug(105,3073
tapdisk_server_check_state(118,3256
tapdisk_server_register_event(125,3354
tapdisk_server_unregister_event(133,3549
tapdisk_server_set_max_timeout(139,3671
tapdisk_server_assert_locks(145,3788
tapdisk_server_set_retry_timeout(151,3840
tapdisk_server_check_progress(163,4070
tapdisk_server_submit_tiocbs(175,4269
tapdisk_server_kick_responses(181,4368
tapdisk_server_check_vbds(191,4516
tapdisk_server_stop_vbds(200,4659
tapdisk_server_init_aio(209,4799
tapdisk_server_close_aio(216,4934
tapdisk_server_close(222,5022
tapdisk_server_iterate(228,5088
__tapdisk_server_run(246,5466
tapdisk_server_signal_handler(253,5558
tapdisk_server_init(281,5988
tapdisk_server_complete(292,6146
tapdisk_server_initialize(310,6332
tapdisk_server_run(328,6523

tools/blktap2/drivers/md5.h,19
#define MD5_H2,14

tools/blktap2/drivers/tapdisk-image.h,499
#define _TAPDISK_IMAGE_H_29,1621
struct td_image_handle 34,1696
	int                          type;35,1721
	char                        *name;name36,1757
    uint16_t                     memshr_id;37,1793
	td_flag_t                    flags;39,1838
	int                          storage;40,1875
	td_driver_t                 *driver;driver42,1915
	td_disk_info_t               info;43,1953
	void                        *private;private45,1990
	struct list_head             next;47,2030

tools/blktap2/drivers/scheduler.c,867
#define DBG(37,1746
#define SCHEDULER_MAX_TIMEOUT 39,1815
#define SCHEDULER_POLL_FD 40,1856
#define MIN(44,1993
#define MAX(45,2054
#define scheduler_for_each_event(47,2116
typedef struct event 50,2225
	char                         mode;51,2248
	event_id_t                   id;52,2284
	int                          fd;54,2319
	int                          timeout;55,2353
	int                          deadline;56,2392
	event_cb_t                   cb;58,2433
	void                        *private;private59,2467
	struct list_head             next;61,2507
} event_t;62,2543
scheduler_prepare_events(65,2567
scheduler_event_callback(109,3502
scheduler_run_events(121,3764
scheduler_register_event(164,4776
scheduler_unregister_event(201,5469
scheduler_set_max_timeout(218,5724
scheduler_wait_for_events(225,5856
scheduler_initialize(254,6349

tools/blktap2/drivers/tapdisk-client.c,998
#define BDPRINTF(45,1879
#define BWPRINTF(47,1949
struct writelog 49,2019
  char* shmpath;50,2037
  uint32_t shmsize;51,2054
  void* shm;52,2074
  void* cur;55,2134
  unsigned int inflight;56,2147
  void* dhd;59,2238
  void* dtl;60,2251
  log_sring_t* sring;62,2265
  log_front_ring_t fring;63,2287
static inline unsigned int dring_avail(67,2351
static inline void* dring_advance(80,2734
static void usage(92,2982
static int tdctl_open(98,3101
static int ctl_talk(121,3635
static int ctl_get_shmem(147,4244
static void ctlmsg_init(171,4811
static int ctl_get_writes(177,4941
static int ctl_peek_writes(193,5206
static int ctl_kick(210,5505
static int ctl_clear_writes(225,5725
static int writelog_map(241,5999
static int writelog_dump(272,6783
static int writelog_enqueue_requests(292,7235
static int writelog_dequeue_responses(331,8104
static int writelog_free(351,8584
int get_writes(365,8795
int await_responses(382,9008
int read_loop(418,9881
int main(442,10336

tools/blktap2/drivers/hashtable_utility.h,44
#define __HASHTABLE_CWC22_UTILITY_H__4,116

tools/blktap2/drivers/tapdisk-server.h,319
#define _TAPDISK_SERVER_H_29,1622
#define TAPDISK_TIOCBS 58,2456
typedef struct tapdisk_server 60,2522
	int                          run;61,2554
	struct list_head             vbds;62,2589
	scheduler_t                  scheduler;63,2625
	struct tqueue                aio_queue;64,2666
} tapdisk_server_t;65,2707

tools/blktap2/drivers/aes.h,202
#define QEMU_AES_H2,19
#define AES_MAXNR 6,60
#define AES_BLOCK_SIZE 7,81
struct aes_key_st 9,108
    uint32_t rd_key[rd_key10,128
    int rounds;11,169
typedef struct aes_key_st AES_KEY;13,188

tools/blktap2/drivers/lock.c,767
#define unlikely(46,1923
#define LF_POSTFIX 49,2013
#define LFXL_FORMAT 50,2041
#define LFFL_FORMAT 51,2085
#define RETRY_MAX 52,2129
#define LOG(55,2169
#define LOG(57,2254
#define XSLEEP 61,2328
typedef int (*eval_func)eval_func63,2371
static char *create_lockfn(create_lockfn65,2424
static char *create_lockfn_link(create_lockfn_link82,2842
static int NFSnormalizedStatTime(109,3705
static int writer_eval(147,4738
static int reader_eval(152,4837
static int lock_holder(157,4949
int lock(268,8935
int unlock(624,23440
int lock_delta(652,24208
static void usage(760,27933
static void test_file(775,28632
static void random_locks(797,29259
static void perf_lock(871,32622
int main(891,33094
static void usage(945,34925
int main(959,35668

tools/blktap2/drivers/blk_linux.c,58
int blk_getimagesize(8,131
int blk_getsectorsize(22,340

tools/blktap2/drivers/atomicio.c,18
atomicio(35,1552

tools/blktap2/drivers/tapdisk-interface.h,38
#define _TAPDISK_INTERFACE_H_29,1625

tools/blktap2/drivers/block-remus.c,4121
#define HEARTBEAT_MS 62,1948
#define RAMDISK_HASHSIZE 63,1974
#define REMUS_CONNRETRY_TIMEOUT 66,2042
#define RPRINTF(68,2078
enum tdremus_mode 70,2146
	mode_invalid 71,2166
	mode_unprotected,72,2185
	mode_primary,73,2204
	mode_backup74,2219
struct tdremus_req 77,2236
	uint64_t sector;78,2257
	int nb_sectors;79,2275
	char buf[buf80,2292
struct req_ring 83,2313
	struct tdremus_req requests[requests85,2391
	unsigned int head;86,2443
	unsigned int tail;87,2463
td_vbd_t *device_vbd device_vbd98,2900
td_image_t *remus_image remus_image99,2929
struct tap_disk tapdisk_remus;100,2961
struct ramdisk 102,2993
	size_t sector_size;103,3010
	struct hashtable* h;104,3031
	struct hashtable* prev;109,3316
	size_t inflight;111,3397
struct ramdisk_cbdata 121,3648
	td_callback_t cb;122,3672
	void* private;123,3691
	char* buf;124,3707
	struct tdremus_state* state;125,3719
struct ramdisk_write_cbdata 128,3753
	struct tdremus_state* state;129,3783
	char* buf;130,3813
typedef void (*queue_rw_t)queue_rw_t133,3829
typedef struct poll_fd 136,3964
	int        fd;137,3989
	event_id_t id;138,4005
} poll_fd_t;139,4021
struct tdremus_state 141,4035
	void* driver_data;143,4087
	td_driver_t *tdremus_driver;tdremus_driver147,4241
	char*     ctl_path;150,4343
	poll_fd_t ctl_fd;151,4401
	char*     msg_path;152,4458
	poll_fd_t msg_fd;153,4516
	struct sockaddr_in sa;156,4561
	poll_fd_t server_fd;157,4585
	poll_fd_t stream_fd;158,4635
	struct req_ring write_ring;161,4743
	struct ramdisk ramdisk;164,4792
	enum tdremus_mode mode;167,4838
	int (*queue_flush)queue_flush168,4863
typedef struct tdremus_wire 171,4909
	uint32_t op;172,4939
	uint64_t id;173,4953
	uint64_t sec;174,4967
	uint32_t secs;175,4982
} tdremus_wire_t;176,4998
#define TDREMUS_READ 178,5017
#define TDREMUS_WRITE 179,5045
#define TDREMUS_SUBMIT 180,5074
#define TDREMUS_COMMIT 181,5104
#define TDREMUS_DONE 182,5134
#define TDREMUS_FAIL 183,5162
static inline unsigned int ring_next(203,5953
static inline int ring_isempty(211,6098
static inline int ring_isfull(216,6191
replicated_write_callback(224,6357
create_write_request(249,6985
static unsigned int uint64_hash(288,7877
static int rd_hash_equal(302,8132
static int ramdisk_read(312,8276
static int ramdisk_write_hash(332,8755
static inline int ramdisk_write(364,9383
static int ramdisk_write_cb(380,9696
static int uint64_compare(414,10497
static int ramdisk_get_sectors(425,10808
static char* merge_requests(450,11338
static int ramdisk_flush(481,12141
static int ramdisk_start_flush(539,13605
static int ramdisk_start(582,14744
static int mread(602,15252
static int mwrite(647,16123
static void inline close_stream_fd(696,17079
static int primary_do_connect(709,17545
static int primary_blocking_connect(743,18585
static void primary_queue_read(796,19814
static void primary_queue_write(809,20315
static int client_flush(848,21419
static int primary_start(867,21832
static void remus_retry_connect_event(884,22206
static void remus_connect_event(924,23626
static void remus_client_event(979,25463
static void remus_server_accept(1009,26204
static int remus_bind(1042,27132
static inline int server_writes_inflight(1089,28451
void backup_queue_read(1103,28858
void backup_queue_write(1121,29311
static int backup_start(1135,29777
static int server_do_wreq(1149,30092
static int server_do_sreq(1192,31073
static int server_do_creq(1203,31266
static void remus_server_event(1220,31658
void unprotected_queue_read(1254,32478
void unprotected_queue_write(1271,33017
static int unprotected_start(1286,33424
static inline int resolve_address(1312,34024
static int get_args(1334,34432
static int switch_mode(1395,35870
static void ctl_request(1427,36578
static int ctl_respond(1465,37575
static int ctl_open(1480,37993
static void ctl_close(1540,39692
static int ctl_register(1561,40064
static int tdremus_open(1578,40431
static int tdremus_close(1630,41653
static int tdremus_get_parent_id(1652,42033
static int tdremus_validate_parent(1658,42172
struct tap_disk tapdisk_remus 1664,42290

tools/blktap2/drivers/block-qcow.c,1569
#define O_LARGEFILE 51,1290
#define ASSERT(55,1330
#define ASSERT(59,1474
struct pending_aio 62,1511
        td_callback_t cb;63,1532
        int id;64,1558
        void *private;private65,1574
	int nb_sectors;66,1597
	char *buf;buf67,1614
	uint64_t sector;68,1626
#undef IOCB_IDX71,1648
#define IOCB_IDX(72,1664
#define ZERO_TEST(74,1717
struct qcow_request 76,1752
	td_request_t         treq;77,1774
	struct tiocb         tiocb;78,1802
	struct tdqcow_state  *state;state79,1831
uint32_t gen_cksum(84,1946
static void free_aio_state(95,2112
static int init_aio_state(101,2217
int get_filesize(130,3046
static int qcow_set_key(166,3772
void tdqcow_complete(207,4650
static void async_read(217,4897
static void async_write(245,5526
static void encrypt_sectors(278,6305
		uint64_t ll[ll284,6558
		uint8_t b[b285,6576
int qtruncate(300,6827
static uint64_t get_cluster_offset(380,8905
static int qcow_is_allocated(615,16025
static int decompress_buffer(630,16467
static int decompress_cluster(657,17128
tdqcow_read_header(680,17725
tdqcow_load_l1_table(731,18681
int tdqcow_open 866,21886
void tdqcow_queue_read(982,24691
void tdqcow_queue_write(1051,26476
tdqcow_update_checksum(1112,27936
int tdqcow_close(1160,28879
int qcow_create(1177,29193
static int qcow_make_empty(1320,33488
static int qcow_get_cluster_size(1340,34082
static int qcow_compress_cluster(1347,34284
tdqcow_get_image_type(1403,35670
int tdqcow_get_parent_id(1427,36082
int tdqcow_validate_parent(1464,37004
struct tap_disk tapdisk_qcow 1488,37543

tools/blktap2/drivers/tapdisk-log.h,222
#define _TAPDISK_LOG_H_29,1618
#define TLOG_WARN 31,1643
#define TLOG_INFO 32,1669
#define TLOG_DBG 33,1695
void __tlog_write(40,1864
void __tlog_error(42,1974
#define tlog_write(45,2083
#define tlog_error(48,2168

tools/blktap2/drivers/qcow2raw.c,853
#define DFPRINTF(54,1932
#define DFPRINTF(56,1997
#define O_LARGEFILE 62,2094
#define BLOCK_PROCESSSZ 65,2124
#define QCOW_VBD 66,2153
#define AIO_VBD 67,2172
#define WINDOW 68,2190
#define PROGRESS_QUANT 69,2208
static int running 71,2234
static int returned_read_events 72,2273
static int submit_events 73,2337
static uint32_t read_idx 74,2367
td_driver_t *ddqcow,ddqcow75,2397
td_driver_t *ddqcow, *ddaio;ddaio75,2397
td_vbd_t* qcow_vbd,76,2426
td_vbd_t* qcow_vbd, *aio_vbd;aio_vbd76,2426
static uint64_t prev 77,2456
static char output[output78,2495
struct request_info 82,2575
  void* buf;83,2597
  uint64_t logical_sec;84,2610
  int pending;85,2634
static void print_bytes(88,2653
static void debug_output(104,2983
static void send_write_responses(118,3319
static void send_read_responses(145,3890
int main(199,5286

tools/blktap2/drivers/lock.h,451
#define DEFAULT_LEASE_TIME_SECS 29,1595
    LOCK_OK 36,1892
    LOCK_EBADPARM 37,1919
    LOCK_ENOMEM 38,1946
    LOCK_ESTAT 39,1973
    LOCK_EHELD_WR 40,2000
    LOCK_EHELD_RD 41,2027
    LOCK_EOPEN 42,2054
    LOCK_EXLOCK_OPEN 43,2081
    LOCK_EXLOCK_WRITE=44,2108
    LOCK_EINODE 45,2135
    LOCK_EUPDATE 46,2162
    LOCK_EREAD 47,2190
    LOCK_EREMOVE 48,2218
    LOCK_ENOLOCK 49,2246
    LOCK_EUSAGE 50,2274
} lock_error;51,2302

tools/blktap2/drivers/tapdisk-ring.c,566
tapdisk_uring_create_ctlfd(33,1653
tapdisk_uring_destroy_ctlfd(77,2434
tapdisk_uring_connect_ctlfd(92,2670
tapdisk_uring_disconnect_ctlfd(124,3262
tapdisk_uring_create_shmem(133,3418
tapdisk_uring_destroy_shmem(163,3899
tapdisk_uring_connect_shmem(178,4161
tapdisk_uring_disconnect_shmem(228,5115
tapdisk_uring_create(237,5283
tapdisk_uring_destroy(281,6191
tapdisk_uring_connect(289,6323
tapdisk_uring_disconnect(323,6865
tapdisk_ring_read_message(331,7013
tapdisk_ring_write_message(373,7764
tapdisk_uring_poll(415,8515
tapdisk_uring_kick(431,8766

tools/blktap2/drivers/tapdisk-image.c,164
#define ERR(39,1780
tapdisk_image_allocate(42,1850
tapdisk_image_free(71,2382
tapdisk_image_check_td_request(87,2612
tapdisk_image_check_ring_request(120,3276

tools/blktap2/drivers/tapdisk-interface.c,328
td_load(38,1780
__td_open(62,2233
td_open(101,3084
td_close(107,3152
td_get_parent_id(128,3585
td_validate_parent(143,3849
td_queue_write(161,4243
td_queue_read(189,4669
td_forward_request(217,5093
td_complete_request(223,5177
td_queue_tiocb(229,5273
td_prep_read(235,5384
td_prep_write(242,5584
td_debug(249,5786

tools/blktap2/drivers/tapdisk-queue.c,1534
#define WARN(47,1933
#define DBG(48,1989
#define ERR(49,2043
#define REQUEST_ASYNC_FD 56,2320
queue_tiocb(59,2383
deferred_tiocbs(73,2666
defer_tiocb(79,2768
queue_deferred_tiocb(93,3037
queue_deferred_tiocbs(110,3331
complete_tiocb(120,3529
cancel_tiocbs(136,3808
fail_tiocbs(161,4301
struct rwio 178,4687
	struct io_event *aio_events;aio_events179,4701
tapdisk_rwio_destroy(183,4747
tapdisk_rwio_setup(194,4926
tapdisk_rwio_rw(207,5165
tapdisk_rwio_submit(226,5598
static const struct tio td_tio_rwio 263,6429
struct lio 275,6614
	io_context_t     aio_ctx;276,6627
	struct io_event *aio_events;aio_events277,6654
	int              event_fd;279,6685
	int              event_id;280,6713
	int              flags;282,6742
#define LIO_FLAG_EVENTFD 285,6771
tapdisk_lio_check_resfd(288,6822
tapdisk_lio_destroy_aio(298,6977
__lio_setup_aio_poll(314,7225
__lio_setup_aio_eventfd(345,7730
tapdisk_lio_setup_aio(366,8070
tapdisk_lio_destroy(400,8808
tapdisk_lio_set_eventfd(421,9141
tapdisk_lio_ack_event(432,9385
tapdisk_lio_event(442,9576
tapdisk_lio_setup(474,10336
tapdisk_lio_submit(509,10927
static const struct tio td_tio_lio 542,11736
tapdisk_queue_free_io(551,11958
tapdisk_queue_init_io(566,12206
tapdisk_init_queue(608,12834
tapdisk_free_queue(643,13363
tapdisk_debug_queue(654,13520
tapdisk_prep_tiocb(677,14203
tapdisk_queue_tiocb(694,14578
tapdisk_submit_tiocbs(707,14792
tapdisk_submit_all_tiocbs(713,14884
tapdisk_cancel_tiocbs(728,15119
tapdisk_cancel_all_tiocbs(734,15208

tools/blktap2/drivers/tapdisk-control.c,1099
struct tapdisk_control 51,2067
	char              *path;path52,2092
	int                socket;53,2118
	int                event_id;54,2146
struct tapdisk_control_connection 57,2180
	int                socket;58,2216
	event_id_t         event_id;59,2244
static struct tapdisk_control td_control;62,2278
tapdisk_control_initialize(65,2333
tapdisk_control_close(74,2458
tapdisk_control_allocate_connection(89,2729
tapdisk_control_close_connection(105,3003
tapdisk_control_read_message(113,3202
tapdisk_control_write_message(160,4090
tapdisk_control_validate_request(207,4999
tapdisk_control_list_minors(218,5223
tapdisk_control_list(249,5973
tapdisk_control_get_pid(295,7141
tapdisk_control_attach_vbd(310,7559
tapdisk_control_detach_vbd(374,8696
tapdisk_control_open_image(406,9368
tapdisk_control_close_image(502,11556
tapdisk_control_pause_vbd(545,12515
tapdisk_control_resume_vbd(579,13187
tapdisk_control_handle_request(630,14211
tapdisk_control_accept(686,15932
tapdisk_control_mkdir(717,16670
tapdisk_control_create_socket(758,17219
tapdisk_control_open(829,18792

tools/blktap2/drivers/scheduler.h,781
#define _SCHEDULER_H_29,1617
#define SCHEDULER_POLL_READ_FD 35,1684
#define SCHEDULER_POLL_WRITE_FD 36,1725
#define SCHEDULER_POLL_EXCEPT_FD 37,1766
#define SCHEDULER_POLL_TIMEOUT 38,1807
typedef int                          event_id_t;40,1849
typedef void (*event_cb_t)event_cb_t41,1898
typedef struct scheduler 43,1978
	fd_set                       read_fds;44,2005
	fd_set                       write_fds;45,2045
	fd_set                       except_fds;46,2086
	struct list_head             events;48,2129
	int                          uuid;50,2168
	int                          max_fd;51,2204
	int                          timeout;52,2242
	int                          restart;53,2281
	int                          max_timeout;54,2320
} scheduler_t;55,2363

tools/blktap2/drivers/tapdisk-stream.c,2368
#define POLL_READ 42,1857
#define POLL_WRITE 43,1900
#define MIN(45,1944
struct tapdisk_stream_poll 47,2010
	int                              pipe[pipe48,2039
	int                              set;49,2082
struct tapdisk_stream_request 52,2125
	uint64_t                         sec;53,2157
	uint32_t                         secs;54,2196
	uint64_t                         seqno;55,2236
	blkif_request_t                  blkif_req;56,2277
	struct list_head                 next;57,2322
struct tapdisk_stream 60,2366
	td_vbd_t                        *vbd;vbd61,2390
	unsigned int                     id;63,2430
	int                              in_fd;64,2468
	int                              out_fd;65,2509
	int                              err;67,2552
	uint64_t                         cur;69,2592
	uint64_t                         start;70,2631
	uint64_t                         end;71,2672
	uint64_t                         started;73,2712
	uint64_t                         completed;74,2755
	struct tapdisk_stream_poll       poll;76,2801
	event_id_t                       enqueue_event_id;77,2841
	struct list_head                 free_list;79,2894
	struct list_head                 pending_list;80,2939
	struct list_head                 completed_list;81,2987
	struct tapdisk_stream_request    requests[requests83,3038
static unsigned int tapdisk_stream_count;86,3100
usage(91,3221
tapdisk_stream_poll_initialize(99,3390
tapdisk_stream_poll_open(106,3529
tapdisk_stream_poll_close(134,3983
tapdisk_stream_poll_clear(144,4222
tapdisk_stream_poll_set(153,4379
tapdisk_stream_stop(164,4560
tapdisk_stream_initialize_request(170,4702
tapdisk_stream_request_idx(177,4855
tapdisk_stream_get_request(184,5030
tapdisk_stream_print_request(201,5349
tapdisk_stream_write_data(210,5653
tapdisk_stream_queue_completed(227,6023
tapdisk_stream_dequeue(242,6376
tapdisk_stream_enqueue(262,6888
tapdisk_stream_open_image(331,8403
tapdisk_stream_close_image(369,9068
tapdisk_stream_set_position(385,9354
tapdisk_stream_initialize_requests(414,9944
tapdisk_stream_register_enqueue_event(442,10603
tapdisk_stream_unregister_enqueue_event(467,11079
tapdisk_stream_initialize(477,11321
tapdisk_stream_open_fds(487,11548
tapdisk_stream_open(499,11759
tapdisk_stream_release(530,12297
tapdisk_stream_run(538,12458
main(546,12624

tools/blktap2/drivers/tapdisk-control.h,38
#define __TAPDISK_CONTROL_H__30,1625

tools/blktap2/drivers/tapdisk-log.c,825
#define MAX_ENTRY_LEN 41,1804
#define MAX_ERROR_MESSAGES 42,1835
struct error 44,1866
	int            cnt;45,1881
	int            err;46,1902
	char          *func;func47,1923
	char           msg[msg48,1945
struct ehandle 51,1985
	int            cnt;52,2002
	int            dropped;53,2023
	struct error   errors[errors54,2048
struct tlog 57,2096
	char          *p;p58,2110
	int            size;59,2129
	uint64_t       cnt;60,2151
	char          *buf;buf61,2172
	int            level;62,2193
	char          *file;file63,2216
	int            append;64,2238
static struct ehandle tapdisk_err;67,2266
static struct tlog tapdisk_log;68,2301
open_tlog(71,2339
close_tlog(92,2816
__tlog_write(107,3016
__tlog_error(146,3853
tlog_print_errors(189,4725
tlog_flush_errors(206,5107
tlog_flush(224,5502

tools/blktap2/drivers/block-log.c,1847
#define MAX_CONNECTIONS 56,2184
typedef struct poll_fd 58,2211
  int          fd;59,2236
  event_id_t   id;60,2255
} poll_fd_t;61,2274
struct tdlog_state 63,2288
  uint64_t     size;64,2309
  void*        writelog;66,2331
  char*        ctlpath;68,2357
  poll_fd_t    ctl;69,2381
  int          connected;71,2402
  poll_fd_t    connections[connections72,2428
  char*        shmpath;74,2474
  void*        shm;75,2498
  log_sring_t* sring;77,2519
  log_back_ring_t bring;78,2541
#define BDPRINTF(81,2570
#define BWPRINTF(83,2642
#define BITS_PER_LONG 92,2951
#define BITS_TO_LONGS(93,3001
#define BITMAP_ENTRY(95,3071
#define BITMAP_SHIFT(96,3151
static inline int test_bit(98,3202
static inline void clear_bit(103,3313
static inline void set_bit(108,3423
static inline int bitmap_size(113,3530
static int writelog_create(118,3596
static int writelog_free(134,3922
static int writelog_set(142,4030
int writelog_clear(153,4242
static uint64_t writelog_export(171,4684
static inline void path_escape(212,5613
static char* ctl_makepath(220,5774
static int shmem_open(241,6186
static int shmem_close(279,7063
static int ctl_open(296,7293
static int ctl_close(347,8560
static int ctl_close_sock(381,9380
static void ctl_accept(400,9809
static int ctl_get_shmpath(431,10608
static int ctl_peek_writes(455,11179
static int ctl_clear_writes(471,11459
static int ctl_get_writes(488,11795
static int ctl_kick(506,12128
static int ctl_do_request(549,13255
static inline int ctl_find_connection(567,13829
static void ctl_request(579,14095
static int tdlog_open(611,14854
static int tdlog_close(642,15482
static void tdlog_queue_read(653,15660
static void tdlog_queue_write(658,15762
static int tdlog_get_parent_id(667,15977
static int tdlog_validate_parent(672,16070
struct tap_disk tapdisk_log 678,16184

tools/blktap2/drivers/tapdisk-queue.h,1300
#define TAPDISK_QUEUE_H30,1619
typedef void (*td_queue_callback_t)td_queue_callback_t40,1745
struct tiocb 43,1820
	td_queue_callback_t   cb;44,1835
	void                 *arg;arg45,1862
	struct iocb           iocb;47,1891
	struct tiocb         *next;next48,1920
struct tlist 51,1953
	struct tiocb         *head;head52,1968
	struct tiocb         *tail;tail53,1997
struct tqueue 56,2030
	int                   size;57,2046
	const struct tio     *tio;tio59,2076
	void                 *tio_data;tio_data60,2104
	struct opioctx        opioctx;62,2138
	int                   queued;64,2171
	struct iocb         **iocbs;iocbs65,2202
	int                   iocbs_pending;68,2281
	int                   tiocbs_pending;73,2451
	struct tlist          deferred;78,2641
	int                   tiocbs_deferred;79,2674
	struct tfilter       *filter;filter82,2746
	uint64_t              deferrals;84,2778
struct tio 87,2816
	const char           *name;name88,2829
	size_t                data_size;89,2858
	int  (*tio_setup)tio_setup91,2893
	void (*tio_destroy)tio_destroy92,2949
	int  (*tio_submit)tio_submit93,2995
	TIO_DRV_LIO 97,3052
	TIO_DRV_RWIO 98,3074
#define tapdisk_queue_count(110,3464
#define tapdisk_queue_empty(111,3509
#define tapdisk_queue_full(112,3559

tools/blktap2/drivers/tapdisk-disktype.h,635
#define __DISKTYPES_H__30,1625
#define DISK_TYPE_AIO 32,1650
#define DISK_TYPE_SYNC 33,1682
#define DISK_TYPE_VMDK 34,1714
#define DISK_TYPE_VHDSYNC 35,1746
#define DISK_TYPE_VHD 36,1778
#define DISK_TYPE_RAM 37,1810
#define DISK_TYPE_QCOW 38,1842
#define DISK_TYPE_BLOCK_CACHE 39,1874
#define DISK_TYPE_LOG 40,1906
#define DISK_TYPE_REMUS 41,1938
#define DISK_TYPE_VINDEX 42,1971
#define DISK_TYPE_NAME_MAX 44,2005
typedef struct disk_info 46,2039
	const char     *name;name47,2066
	char           *desc;desc48,2119
	unsigned int    flags;49,2166
} disk_info_t;50,2191
#define DISK_TYPE_SINGLE_CONTROLLER 56,2373

tools/blktap2/drivers/tapdisk-driver.c,128
tapdisk_driver_allocate(35,1717
tapdisk_driver_free(73,2418
tapdisk_driver_queue_tiocb(91,2720
tapdisk_driver_debug(97,2835

tools/blktap2/drivers/tapdisk-ring.h,1373
#define _TAPDISK_RING_H_29,1620
typedef struct td_uring             td_uring_t;36,1716
typedef struct td_uring_header      td_uring_header_t;37,1764
typedef struct td_uring_request     td_uring_request_t;38,1819
typedef struct td_uring_response    td_uring_response_t;39,1875
struct td_uring 41,1933
	int                         ctlfd;42,1951
	char                       *shmem_path;shmem_path44,1988
	char                       *ctlfd_path;ctlfd_path45,2029
	void                       *shmem;shmem47,2071
	void                       *ring_area;ring_area48,2107
	void                       *data_area;data_area49,2147
struct td_uring_header 52,2191
	char                        cookie[cookie53,2216
	uint32_t                    version;54,2256
	uint32_t                    shmem_size;55,2294
	uint32_t                    ring_size;56,2335
	uint32_t                    data_size;57,2375
	char                        reserved[reserved58,2415
struct td_uring_request 61,2464
	uint8_t                     op;62,2490
	uint64_t                    id;63,2523
	uint64_t                    sec;64,2556
	uint32_t                    secs;65,2590
	uint32_t                    offset;66,2625
struct td_uring_response 69,2666
	uint8_t                     op;70,2693
	uint64_t                    id;71,2726
	uint8_t                     status;72,2759

tools/blktap2/drivers/aes.c,788
typedef uint32_t u32;38,1369
typedef uint16_t u16;39,1392
typedef uint8_t u8;40,1415
#define MAXKC 42,1438
#define MAXKB 43,1464
#define MAXNR 44,1489
#undef FULL_UNROLL47,1561
# define GETU32(48,1581
# define PUTU32(49,1688
static const u32 Te0[Te065,2175
static const u32 Te1[Te1131,5858
static const u32 Te2[Te2197,9541
static const u32 Te3[Te3263,13224
static const u32 Te4[Te4330,16909
static const u32 Td0[Td0396,20592
static const u32 Td1[Td1462,24275
static const u32 Td2[Td2528,27958
static const u32 Td3[Td3595,31643
static const u32 Td4[Td4661,35326
static const u32 rcon[rcon727,39009
int AES_set_encrypt_key(736,39311
int AES_set_decrypt_key(837,41697
void AES_encrypt(890,43349
void AES_decrypt(1081,52285
void AES_cbc_encrypt(1270,61278

tools/blktap2/drivers/tapdisk.h,2723
#define _TAPDISK_H_57,2826
#define DPRINTF(67,2980
#define EPRINTF(68,3044
#define PERROR(69,3132
#define MAX_SEGMENTS_PER_REQ 71,3212
#define SECTOR_SHIFT 72,3252
#define DEFAULT_SECTOR_SIZE 73,3291
#define TAPDISK_DATA_REQUESTS 75,3333
#define TD_NO_PARENT 78,3453
#define MAX_RAMDISK_SIZE 80,3493
#define TD_OP_READ 82,3560
#define TD_OP_WRITE 83,3599
#define TD_OPEN_QUIET 85,3639
#define TD_OPEN_QUERY 86,3684
#define TD_OPEN_RDONLY 87,3729
#define TD_OPEN_STRICT 88,3774
#define TD_OPEN_SHAREABLE 89,3819
#define TD_OPEN_ADD_CACHE 90,3864
#define TD_OPEN_VHD_INDEX 91,3909
#define TD_OPEN_LOG_DIRTY 92,3954
#define TD_CREATE_SPARSE 94,4000
#define TD_CREATE_MULTITYPE 95,4045
#define td_flag_set(97,4091
#define td_flag_clear(98,4147
#define td_flag_test(99,4204
typedef uint16_t                     td_uuid_t;101,4260
typedef uint32_t                     td_flag_t;102,4308
typedef uint64_t                     td_sector_t;103,4356
typedef struct td_disk_id            td_disk_id_t;104,4406
typedef struct td_disk_info          td_disk_info_t;105,4457
typedef struct td_request            td_request_t;106,4510
typedef struct td_driver_handle      td_driver_t;107,4561
typedef struct td_image_handle       td_image_t;108,4611
struct td_disk_id 110,4661
	char                        *name;name111,4681
	int                          drivertype;112,4717
struct td_disk_info 115,4763
	td_sector_t                  size;116,4785
        uint64_t                     sector_size;117,4821
	uint32_t                     info;118,4871
struct td_request 121,4911
	int                          op;122,4931
	char                        *buf;buf123,4965
	td_sector_t                  sec;124,5000
	int                          secs;125,5035
	uint8_t                      blocked;127,5072
	td_image_t                  *image;image129,5142
	void * /*td_callback_t*/     cb;131,5180
	void                        *cb_data;cb_data132,5214
	uint64_t                     id;134,5254
	int                          sidx;135,5288
	void                        *private;private136,5324
	uint64_t                     memshr_hnd;139,5382
typedef void (*td_callback_t)td_callback_t146,5506
struct tap_disk 152,5700
	const char                  *disk_type;disk_type153,5718
	td_flag_t                    flags;154,5759
	int                          private_data_size;155,5796
	int (*td_open)td_open156,5845
	int (*td_close)td_close157,5917
	int (*td_get_parent_id)td_get_parent_id158,5964
	int (*td_validate_parent)td_validate_parent159,6027
	void (*td_queue_read)td_queue_read160,6100
	void (*td_queue_write)td_queue_write161,6161
	void (*td_debug)td_debug162,6222

tools/xenstat/libxenstat/src/xenstat_solaris.c,888
#define DEVICE_NIC 28,831
#define DEVICE_XDB 29,852
typedef struct stdevice 31,874
	int domid;32,900
	int used;33,912
	int type;34,923
	char name[name35,934
	int instance;36,951
	uint64_t stats[stats37,966
	struct stdevice *next;next38,989
} stdevice_t;39,1013
typedef struct priv_data 41,1028
	kstat_ctl_t *kc;kc42,1055
	stdevice_t *devs;devs43,1073
} priv_data_t;44,1092
static priv_data_t *get_priv_data(get_priv_data46,1108
static int kstat_get(69,1498
static void gc_devs(78,1697
static void xenstat_uninit_devs(98,2017
static int update_dev_stats(116,2343
static int init_dev(161,3486
static int update_nic(186,3977
collect_dom_networks(212,4828
int xenstat_collect_networks(268,5902
void xenstat_uninit_networks(292,6343
static int update_xdb(297,6443
collect_dom_vbds(319,7052
int xenstat_collect_vbds(378,8213
void xenstat_uninit_vbds(402,8646

tools/xenstat/libxenstat/src/xenstat_linux.c,472
#define SYSFS_VBD_PATH 35,1100
struct priv_data 37,1155
	FILE *procnetdev;procnetdev38,1174
	DIR *sysfsvbd;sysfsvbd39,1193
get_priv_data(43,1239
static const char PROCNETDEV_HEADER[PROCNETDEV_HEADER59,1600
char *getBridge(getBridge67,2046
int parseNetDevLine(94,2707
int xenstat_collect_networks(239,6754
void xenstat_uninit_networks(358,10481
static int read_attributes_vbd(365,10664
int xenstat_collect_vbds(382,11120
void xenstat_uninit_vbds(478,13282

tools/xenstat/libxenstat/src/xenstat_netbsd.c,399
#define SYSFS_VBD_PATH 34,1079
struct priv_data 36,1131
	FILE *procnetdev;procnetdev37,1150
	DIR *sysfsvbd;sysfsvbd38,1169
get_priv_data(42,1215
static const char PROCNETDEV_HEADER[PROCNETDEV_HEADER58,1576
int xenstat_collect_networks(65,1889
void xenstat_uninit_networks(72,2056
static int read_attributes_vbd(79,2239
int xenstat_collect_vbds(86,2409
void xenstat_uninit_vbds(92,2509

tools/xenstat/libxenstat/src/xenstat_priv.h,2067
#define XENSTAT_PRIV_H24,913
#define SHORT_ASC_LEN 32,1020
#define VERSION_SIZE 33,1082
struct xenstat_handle 35,1161
	xc_interface *xc_handle;xc_handle36,1185
	struct xs_handle *xshandle;xshandle37,1211
	int page_size;38,1262
	void *priv;priv39,1278
	char xen_version[xen_version40,1291
struct xenstat_node 43,1367
	xenstat_handle *handle;handle44,1389
	unsigned int flags;45,1414
	unsigned long long cpu_hz;46,1435
	unsigned int num_cpus;47,1463
	unsigned long long tot_mem;48,1487
	unsigned long long free_mem;49,1516
	unsigned int num_domains;50,1546
	xenstat_domain *domains;domains51,1573
	long freeable_mb;52,1633
struct xenstat_tmem 55,1656
	unsigned long long curr_eph_pages;56,1678
	unsigned long long succ_eph_gets;57,1714
	unsigned long long succ_pers_puts;58,1749
	unsigned long long succ_pers_gets;59,1785
struct xenstat_domain 62,1825
	unsigned int id;63,1849
	char *name;name64,1867
	unsigned int state;65,1880
	unsigned long long cpu_ns;66,1901
	unsigned int num_vcpus;67,1929
	xenstat_vcpu *vcpus;vcpus68,1993
	unsigned long long cur_mem;69,2048
	unsigned long long max_mem;70,2110
	unsigned int ssid;71,2166
	unsigned int num_networks;72,2186
	xenstat_network *networks;networks73,2214
	unsigned int num_vbds;74,2277
	xenstat_vbd *vbds;vbds75,2301
	xenstat_tmem tmem_stats;76,2321
struct xenstat_vcpu 79,2351
	unsigned int online;80,2373
	unsigned long long ns;81,2395
struct xenstat_network 84,2423
	unsigned int id;85,2448
	unsigned long long rbytes;87,2482
	unsigned long long rpackets;88,2510
	unsigned long long rerrs;89,2540
	unsigned long long rdrop;90,2567
	unsigned long long tbytes;92,2613
	unsigned long long tpackets;93,2641
	unsigned long long terrs;94,2671
	unsigned long long tdrop;95,2698
struct xenstat_vbd 98,2729
	unsigned int back_type;99,2750
	unsigned int dev;100,2775
	unsigned long long oo_reqs;101,2794
	unsigned long long rd_reqs;102,2823
	unsigned long long wr_reqs;103,2852
	unsigned long long rd_sects;104,2881
	unsigned long long wr_sects;105,2911

tools/xenstat/libxenstat/src/xenstat.c,3877
typedef int (*xenstat_collect_func)xenstat_collect_func38,1382
typedef void (*xenstat_free_func)xenstat_free_func42,1651
typedef void (*xenstat_uninit_func)xenstat_uninit_func47,1968
typedef struct xenstat_collector 48,2030
	unsigned int flag;49,2065
	xenstat_collect_func collect;50,2085
	xenstat_free_func free;51,2116
	xenstat_uninit_func uninit;52,2141
} xenstat_collector;53,2170
static xenstat_collector collectors[collectors66,2816
#define NUM_COLLECTORS 77,3242
xenstat_handle *xenstat_init(xenstat_init82,3338
void xenstat_uninit(121,4159
static inline unsigned long long parse(134,4432
void domain_get_tmem_stats(148,4669
xenstat_node *xenstat_get_node(xenstat_get_node161,5132
#define DOMAIN_CHUNK_SIZE 163,5210
void xenstat_free_node(285,8452
xenstat_domain *xenstat_node_domain(xenstat_node_domain304,8811
xenstat_domain *xenstat_node_domain_by_index(xenstat_node_domain_by_index317,9127
const char *xenstat_node_xen_version(xenstat_node_xen_version325,9322
unsigned long long xenstat_node_tot_mem(330,9420
unsigned long long xenstat_node_free_mem(335,9509
long xenstat_node_freeable_mb(340,9600
unsigned int xenstat_node_num_domains(345,9683
unsigned int xenstat_node_num_cpus(350,9774
unsigned long long xenstat_node_cpu_hz(356,9901
unsigned xenstat_domain_id(362,10028
char *xenstat_domain_name(xenstat_domain_name368,10146
unsigned long long xenstat_domain_cpu_ns(374,10284
unsigned int xenstat_domain_num_vcpus(380,10423
xenstat_vcpu *xenstat_domain_vcpu(xenstat_domain_vcpu385,10518
unsigned long long xenstat_domain_cur_mem(393,10750
unsigned long long xenstat_domain_max_mem(399,10905
unsigned int xenstat_domain_ssid(405,11031
unsigned int xenstat_domain_dying(411,11140
unsigned int xenstat_domain_crashed(416,11268
unsigned int xenstat_domain_shutdown(423,11509
unsigned int xenstat_domain_paused(430,11751
unsigned int xenstat_domain_blocked(435,11882
unsigned int xenstat_domain_running(440,12016
unsigned int xenstat_domain_num_networks(446,12202
xenstat_network *xenstat_domain_network(xenstat_domain_network452,12356
unsigned int xenstat_domain_num_vbds(461,12627
xenstat_vbd *xenstat_domain_vbd(xenstat_domain_vbd467,12765
static int xenstat_collect_vcpus(479,13014
static void xenstat_free_vcpus(522,14082
static void xenstat_uninit_vcpus(530,14283
unsigned int xenstat_vcpu_online(535,14375
unsigned long long xenstat_vcpu_ns(541,14477
static void xenstat_free_networks(551,14616
unsigned int xenstat_network_id(559,14794
unsigned long long xenstat_network_rbytes(565,14917
unsigned long long xenstat_network_rpackets(571,15056
unsigned long long xenstat_network_rerrs(577,15198
unsigned long long xenstat_network_rdrop(583,15333
unsigned long long xenstat_network_tbytes(589,15469
unsigned long long xenstat_network_tpackets(595,15609
unsigned long long xenstat_network_terrs(601,15752
unsigned long long xenstat_network_tdrop(607,15898
static int xenstat_collect_xen_version(617,16066
static void xenstat_free_xen_version(643,16798
static void xenstat_uninit_xen_version(648,16922
static void xenstat_free_vbds(657,17043
unsigned int xenstat_vbd_type(665,17245
unsigned int xenstat_vbd_dev(671,17364
unsigned long long xenstat_vbd_oo_reqs(677,17479
unsigned long long xenstat_vbd_rd_reqs(683,17602
unsigned long long xenstat_vbd_wr_reqs(689,17726
unsigned long long xenstat_vbd_rd_sects(695,17848
unsigned long long xenstat_vbd_wr_sects(701,17973
xenstat_tmem *xenstat_domain_tmem(xenstat_domain_tmem710,18086
unsigned long long xenstat_tmem_curr_eph_pages(716,18227
unsigned long long xenstat_tmem_succ_eph_gets(722,18379
unsigned long long xenstat_tmem_succ_pers_puts(728,18530
unsigned long long xenstat_tmem_succ_pers_gets(734,18683
static char *xenstat_get_domain_name(xenstat_get_domain_name740,18786
static void xenstat_prune_domain(758,19236

tools/xenstat/libxenstat/src/xenstat.h,541
#define XENSTAT_H21,823
typedef struct xenstat_handle xenstat_handle;24,863
typedef struct xenstat_domain xenstat_domain;25,909
typedef struct xenstat_node xenstat_node;26,955
typedef struct xenstat_vcpu xenstat_vcpu;27,997
typedef struct xenstat_network xenstat_network;28,1039
typedef struct xenstat_vbd xenstat_vbd;29,1087
typedef struct xenstat_tmem xenstat_tmem;30,1127
#define XENSTAT_VCPU 40,1522
#define XENSTAT_NETWORK 41,1547
#define XENSTAT_XEN_VERSION 42,1575
#define XENSTAT_VBD 43,1607
#define XENSTAT_ALL 44,1631

tools/xenstat/xentop/xentop.c,4207
#define XENTOP_VERSION 38,1265
#define XENTOP_DISCLAIMER 40,1295
#define XENTOP_BUGSTO 44,1544
#define _GNU_SOURCE46,1619
#define KEY_ESCAPE 53,1752
#undef ERR59,1908
#define ERR 60,1919
#define curses_str_t 61,1936
#define curses_str_t 63,1970
static void print(76,2239
typedef enum field_id 136,5344
	FIELD_DOMID,137,5368
	FIELD_NAME,138,5382
	FIELD_STATE,139,5395
	FIELD_CPU,140,5409
	FIELD_CPU_PCT,141,5421
	FIELD_MEM,142,5437
	FIELD_MEM_PCT,143,5449
	FIELD_MAXMEM,144,5465
	FIELD_MAX_PCT,145,5480
	FIELD_VCPUS,146,5496
	FIELD_NETS,147,5510
	FIELD_NET_TX,148,5523
	FIELD_NET_RX,149,5538
	FIELD_VBDS,150,5553
	FIELD_VBD_OO,151,5566
	FIELD_VBD_RD,152,5581
	FIELD_VBD_WR,153,5596
	FIELD_VBD_RSECT,154,5611
	FIELD_VBD_WSECT,155,5629
	FIELD_SSID156,5647
} field_id;157,5659
typedef struct field 159,5672
	field_id num;160,5695
	const char *header;header161,5710
	unsigned int default_width;162,5731
	int (*compare)compare163,5760
	void (*print)print164,5827
} field;165,5867
field fields[fields167,5877
const unsigned int NUM_FIELDS 189,7292
struct timeval curtime,192,7369
struct timeval curtime, oldtime;192,7369
xenstat_handle *xhandle xhandle193,7402
xenstat_node *prev_node prev_node194,7434
xenstat_node *cur_node cur_node195,7466
field_id sort_field 196,7497
unsigned int first_domain_index 197,7532
unsigned int delay 198,7569
unsigned int batch 199,7593
unsigned int loop 200,7617
unsigned int iterations 201,7640
int show_vcpus 202,7669
int show_networks 203,7689
int show_vbds 204,7712
int show_tmem 205,7731
int repeat_header 206,7750
int show_full_name 207,7773
#define PROMPT_VAL_LEN 208,7797
char *prompt prompt209,7823
char prompt_val[prompt_val210,7844
int prompt_val_len 211,7877
static WINDOW *cwin;cwin214,7940
static void usage(223,8071
static void version(243,8967
static void cleanup(251,9173
static void fail(264,9457
static int current_row(273,9624
static int lines(281,9750
static void print(290,9930
static void xentop_attron(307,10207
static void xentop_attroff(313,10277
static void attr_addstr(320,10401
static void set_delay(328,10604
static void set_prompt(338,10838
static int handle_key(347,11076
static int compare(409,12360
static int compare_domains(420,12593
int compare_name(428,12811
void print_name(434,12988
	unsigned int (*get)get443,13163
	char ch;444,13203
} state_funcs[state_funcs445,13213
const unsigned int NUM_STATES 453,13445
static int compare_state(456,13584
static void print_state(471,13932
static int compare_cpu(480,14213
static void print_cpu(487,14417
static double get_cpu_pct(493,14590
static int compare_cpu_pct(517,15345
static void print_cpu_pct(523,15527
static int compare_mem(529,15693
static void print_mem(536,15910
static void print_mem_pct(543,16113
static int compare_maxmem(550,16361
static void print_maxmem(557,16594
static void print_max_pct(568,16916
static int compare_vcpus(579,17269
static void print_vcpus(586,17500
static int compare_nets(593,17690
static void print_nets(600,17930
static int compare_net_tx(607,18128
static void print_net_tx(614,18362
static int compare_net_rx(621,18562
static void print_net_rx(628,18794
static unsigned long long tot_net_bytes(636,19000
static int compare_vbds(661,19651
static void print_vbds(668,19888
static int compare_vbd_oo(675,20083
static void print_vbd_oo(682,20316
static int compare_vbd_rd(689,20520
static void print_vbd_rd(696,20753
static int compare_vbd_wr(703,20958
static void print_vbd_wr(710,21192
static int compare_vbd_rsect(717,21395
static void print_vbd_rsect(724,21636
static int compare_vbd_wsect(731,21847
static void print_vbd_wsect(738,22089
static unsigned long long tot_vbd_reqs(751,22511
static int compare_ssid(787,23289
static void print_ssid(794,23482
void do_summary(801,23664
#define TIME_STR_LEN 803,23688
void do_header(855,25670
void do_bottom_line(876,26172
void do_domain(920,27117
void do_vcpu(936,27420
void do_network(961,27930
void do_vbd(992,28787
void do_tmem(1031,29722
static void top(1047,30375
static int signal_exit;1103,31731
static void signal_exit_handler(1105,31756
int main(1110,31820

tools/flask/utils/setenforce.c,43
static void usage 21,465
int main 27,614

tools/flask/utils/getenforce.c,43
static void usage 21,464
int main 27,578

tools/flask/utils/loadpolicy.c,67
#define USE_MMAP22,525
static void usage 24,543
int main 30,671

tools/flask/libflask/flask_op.c,630
int flask_load(24,562
int flask_context_to_sid(39,825
int flask_sid_to_context(56,1156
int flask_getenforce(73,1485
int flask_setenforce(93,1828
int flask_add_pirq(112,2160
int flask_add_ioport(141,2806
int flask_add_iomem(171,3513
int flask_add_device(201,4214
int flask_del_pirq(230,4862
int flask_del_ioport(259,5459
int flask_del_iomem(288,6095
int flask_del_device(317,6726
int flask_access(345,7309
#define MAX_SHORT_DEC_LEN 352,7648
int flask_avc_hashstats(409,8873
int flask_avc_cachestats(427,9176
int flask_policyvers(445,9481
int flask_getavc_threshold(463,9776
int flask_setavc_threshold(483,10146

tools/flask/libflask/include/libflask.h,353
#define __LIBFLASK_H__12,335
#define flask_add_single_ioport(44,2135
#define flask_add_single_iomem(45,2205
#define flask_del_single_ioport(46,2273
#define flask_del_single_iomem(47,2337
#define OCON_PIRQ_STR 49,2401
#define OCON_IOPORT_STR 50,2432
#define OCON_IOMEM_STR 51,2465
#define OCON_DEVICE_STR 52,2497
#define INITCONTEXTLEN 53,2533

tools/xentrace/setsize.c,15
int main(6,80

tools/xentrace/xentrace.c,2464
#define PERROR(34,704
#define POLL_SLEEP_MILLIS 46,1271
#define DEFAULT_TBUF_SIZE 48,1302
typedef struct settings_st 51,1412
    char *outfile;outfile52,1441
    unsigned long poll_sleep;53,1460
    uint32_t evt_mask;54,1532
    uint32_t cpu_mask;55,1555
    unsigned long tbuf_size;56,1578
    unsigned long disk_rsvd;57,1607
    unsigned long timeout;58,1636
    unsigned long memory_buffer;59,1663
    uint8_t discard:discard60,1696
        disable_tracing:disable_tracing61,1719
        start_disabled:start_disabled62,1746
} settings_t;63,1772
struct t_struct 65,1787
    const struct t_info *t_info;t_info66,1805
    struct t_buf **meta;meta67,1896
    unsigned char **data;data68,1964
settings_t opts;71,2038
int interrupted 73,2056
static xc_interface *xc_handle;xc_handle75,2112
static xc_evtchn *xce_handle xce_handle76,2144
static int virq_port 77,2181
static int outfd 78,2208
static void close_handler(80,2231
    char * buf;86,2311
    unsigned long prod,87,2327
    unsigned long prod, cons,87,2327
    unsigned long prod, cons, size;87,2327
    unsigned long pending_size,88,2363
    unsigned long pending_size, pending_prod;88,2363
} membuf 89,2409
#define MEMBUF_INDEX_RESET_THRESHOLD 91,2428
#define MEMBUF_POINTER(94,2531
#define MEMBUF_CONS_INCREMENT(95,2594
#define MEMBUF_PROD_SET(99,2759
struct cpu_change_record 116,3899
    uint32_t header;117,3926
        int cpu;119,3960
        unsigned window_size;120,3977
    } data;121,4007
#define CPU_CHANGE_HEADER 124,4023
void membuf_alloc(129,4266
void membuf_reserve_window(149,4716
void membuf_write(234,7312
void membuf_dump(278,8371
static void write_buffer(343,9987
static void disable_tbufs(425,12092
static void get_tbufs(447,12476
static struct t_struct *map_tbufs(map_tbufs471,13049
static void set_mask(534,14995
static unsigned int get_num_cpus(556,15546
static void event_init(575,15906
static void wait_for_event_or_timeout(597,16425
static int monitor_tbufs(637,17552
#define xstr(769,21580
#define str(770,21603
const char *program_version program_version772,21622
const char *program_bug_address program_bug_address773,21673
static void usage(775,21741
#define USAGE_STR 777,21767
#define MB 826,24341
#define KB 827,24364
long sargtol(828,24382
static long argtol(872,25208
static int parse_evtmask(892,25668
static void parse_args(913,26230
#define O_LARGEFILE	997,28755
int main(1000,28785

tools/xentrace/xenctx.c,2979
xc_interface *xc_handle xc_handle31,642
int domid 32,671
int frame_ptrs 33,686
int stack_trace 34,706
int disp_all 35,727
typedef unsigned long long guest_word_t;38,793
#define FMT_32B_WORD 39,834
#define FMT_64B_WORD 40,864
int guest_word_size 42,948
int ctxt_word_size 44,1050
int guest_protected_mode 45,1095
#define NO_TRANSLATION48,1222
typedef size_t guest_word_t;49,1245
int disp_cr_regs;52,1319
int disp_ar_regs;53,1337
int disp_br_regs;54,1355
int disp_bank_regs;55,1373
int disp_tlb;56,1393
struct symbol 59,1415
    guest_word_t address;60,1431
    char type;61,1457
    char *name;name62,1472
    struct symbol *next;next63,1488
} *symbol_table symbol_table64,1513
guest_word_t kernel_stext,66,1538
guest_word_t kernel_stext, kernel_etext,66,1538
guest_word_t kernel_stext, kernel_etext, kernel_sinittext,66,1538
guest_word_t kernel_stext, kernel_etext, kernel_sinittext, kernel_einittext,66,1538
guest_word_t kernel_stext, kernel_etext, kernel_sinittext, kernel_einittext, kernel_hypercallpage;66,1538
unsigned long long kernel_start 69,1662
unsigned long long kernel_start 71,1714
static int is_kernel_text(74,1778
static void free_symbol(92,2188
static void insert_symbol(102,2355
static struct symbol *lookup_symbol(lookup_symbol129,3039
static void print_symbol(142,3287
static void read_symbol_table(160,3609
#define CR0_PE 211,5054
char *flag_values[flag_values212,5074
static void print_flags(238,6179
static void print_special(251,6439
static void print_ctx_32(265,6847
static void print_ctx_32on64(294,7705
static void print_ctx_64(323,8677
static void print_ctx(367,10107
#define NONPROT_MODE_SEGMENT_SHIFT 377,10343
static guest_word_t instr_pointer(379,10381
static guest_word_t stack_pointer(395,10717
static guest_word_t frame_pointer(411,11057
#define PTE_ED_SHIFT 421,11270
#define PTE_ED_MASK 422,11307
#define PTE_PPN_SHIFT 423,11344
#define PTE_PPN_MASK 424,11381
#define PTE_AR_SHIFT 425,11418
#define PTE_AR_MASK 426,11455
#define PTE_PL_SHIFT 427,11492
#define PTE_PL_MASK 428,11529
#define PTE_D_SHIFT 429,11566
#define PTE_D_MASK 430,11603
#define PTE_A_SHIFT 431,11640
#define PTE_A_MASK 432,11677
#define PTE_MA_SHIFT 433,11714
#define PTE_MA_MASK 434,11751
#define PTE_P_SHIFT 435,11788
#define PTE_P_MASK 436,11825
#define ITIR_KEY_SHIFT 437,11862
#define ITIR_KEY_MASK 438,11899
#define ITIR_PS_SHIFT 439,11936
#define ITIR_PS_MASK 440,11973
#define ITIR_PS_MIN 441,12010
#define ITIR_PS_MAX 442,12047
#define RR_RID_SHIFT 443,12084
#define RR_RID_MASK 444,12121
#define PSR_BN 445,12158
#define CFM_SOF_MASK 446,12195
static void print_tr(448,12233
void print_ctx(481,13701
static void *map_page(map_page664,21174
static guest_word_t read_stack_word(691,21838
static void print_stack_word(699,22013
static void print_code(707,22178
static void print_stack(727,22631
static void dump_ctx(820,25469
static void usage(900,27831
int main(923,28662

tools/blktap/lib/xenbus.c,943
#define DPRINTF(57,2051
#define DPRINTF(59,2106
struct backend_info62,2151
	blkif_t *blkif;blkif65,2207
	long int frontend_id;67,2226
	long int pdev;68,2249
	long int readonly;69,2265
	char *backpath;backpath71,2287
	char *frontpath;frontpath72,2304
	struct list_head list;74,2324
static int strsep_len(79,2379
static int get_be_id(92,2594
static int get_be_domid(110,2909
static struct backend_info *be_lookup_be(be_lookup_be128,3236
static int be_exists_be(138,3462
static struct backend_info *be_lookup_fe(be_lookup_fe143,3551
static int backend_remove(153,3778
static const char *get_image_path(get_image_path171,4144
static int check_sharing(189,4504
static int check_image(290,6781
static void ueblktap_setup(321,7441
static void ueblktap_probe(448,10509
static int add_blockdevice_probe_watch(540,12407
static void check_dom(563,13067
static int watch_for_domid(578,13392
int setup_probe_watch(605,13988

tools/blktap/lib/blkif.c,455
#define DPRINTF(42,1690
#define DPRINTF(44,1745
#define BLKIF_HASHSZ 47,1790
#define BLKIF_HASH(48,1816
static blkif_t      *blkif_hash[blkif_hash50,1884
blkif_t *blkif_find_by_handle(blkif_find_by_handle52,1932
blkif_t *alloc_blkif(alloc_blkif61,2191
void register_new_devmap_hook(76,2540
void register_new_unmap_hook(82,2678
void register_new_blkif_hook(88,2814
int blkif_init(93,2897
void free_blkif(156,4195
void __init_blkif(182,4689

tools/blktap/lib/blktaplib.h,4209
#define __BLKTAPLIB_H__33,1509
#define BLK_RING_SIZE 45,1732
#define BLKTAP_VMA_PAGES 48,1853
#define BLKTAP_IOCTL_KICK_FE 51,1965
#define BLKTAP_IOCTL_KICK_BE 52,2004
#define BLKTAP_IOCTL_SETMODE 53,2043
#define BLKTAP_IOCTL_SENDPID	54,2082
#define BLKTAP_IOCTL_NEWINTF	55,2118
#define BLKTAP_IOCTL_MINOR	56,2154
#define BLKTAP_IOCTL_MAJOR	57,2188
#define BLKTAP_QUERY_ALLOC_REQS 58,2222
#define BLKTAP_IOCTL_FREEINTF	59,2261
#define BLKTAP_IOCTL_NEWINTF_EXT 60,2298
#define BLKTAP_IOCTL_PRINT_IDXS 61,2338
#define BLKTAP_MODE_PASSTHROUGH 64,2457
#define BLKTAP_MODE_INTERCEPT_FE 65,2531
#define BLKTAP_MODE_INTERCEPT_BE 66,2579
#define BLKTAP_MODE_INTERPOSE 68,2628
static inline int BLKTAP_MODE_VALID(71,2726
#define MAX_REQUESTS 79,2919
#define BLKTAP_IOCTL_KICK 81,2966
#define MAX_PENDING_REQS	82,2994
#define BLKTAP_DEV_DIR 83,3033
#define BLKTAP_DEV_NAME 84,3069
#define BLKTAP_DEV_MINOR 85,3103
#define BLKTAP_CTRL_DIR 86,3130
#define BLKTAP_RING_PAGES 90,3198
#define BLKTAP_MMAP_REGION_SIZE 91,3244
	blkif_request_t  req;96,3342
	struct blkif    *blkif;blkif97,3365
	int              submitting;98,3390
	int              secs_pending;99,3420
        int16_t          status;100,3452
} pending_req_t;101,3485
struct blkif_ops 103,3503
	unsigned long long (*get_size)get_size104,3522
	unsigned long (*get_secsize)get_secsize105,3576
	unsigned int (*get_info)get_info106,3628
typedef struct blkif 109,3680
	domid_t domid;110,3703
	long int handle;111,3719
	long int pdev;113,3739
	long int readonly;114,3755
	enum { DISCONNECTED,116,3777
	enum { DISCONNECTED, DISCONNECTING,116,3777
	enum { DISCONNECTED, DISCONNECTING, CONNECTED 116,3777
	enum { DISCONNECTED, DISCONNECTING, CONNECTED } state;116,3777
	struct blkif_ops *ops;ops118,3835
	struct blkif *hash_next;hash_next119,3859
	void *prv;prv121,3887
	void *info;info122,3927
	pending_req_t pending_list[pending_list123,3969
	int devnum;124,4012
	int fds[fds125,4025
	int be_id;126,4038
	int major;127,4050
	int minor;128,4062
	pid_t tappid;129,4074
	int drivertype;130,4089
	uint16_t cookie;131,4106
} blkif_t;132,4124
typedef struct blkif_info 134,4136
	char *params;params135,4164
} blkif_info_t;136,4179
typedef struct busy_state 148,4630
	int seg_idx;149,4658
	blkif_request_t *req;req150,4672
} busy_state_t;151,4695
typedef struct tapdev_info 153,4712
	int fd;154,4741
	char *mem;mem155,4750
	blkif_sring_t *sring;sring156,4762
	blkif_back_ring_t  fe_ring;157,4785
	unsigned long vstart;158,4814
	blkif_t *blkif;blkif159,4837
	busy_state_t busy;160,4854
} tapdev_info_t;161,4874
typedef struct domid_translate 163,4892
	unsigned short domid;164,4925
	unsigned short busid;165,4948
} domid_translate_t 166,4971
typedef struct domid_translate_ext 168,4994
	unsigned short domid;169,5031
	uint32_t busid;170,5054
} domid_translate_ext_t 171,5071
typedef struct image 173,5098
	unsigned long long size;174,5121
	unsigned long secsize;175,5147
	unsigned int info;176,5171
} image_t;177,5191
typedef struct msg_hdr 180,5274
	uint16_t   type;181,5299
	uint16_t   len;182,5317
	uint16_t   drivertype;183,5334
	uint16_t   cookie;184,5358
	uint8_t    readonly;185,5378
	uint8_t    pad[pad186,5400
} msg_hdr_t;187,5420
typedef struct msg_newdev 189,5434
	uint8_t     devnum;190,5462
	uint16_t    domid;191,5483
} msg_newdev_t;192,5503
typedef struct msg_pid 194,5520
	pid_t     pid;195,5545
} msg_pid_t;196,5561
#define READ 198,5575
#define WRITE 199,5590
#define CTLMSG_PARAMS 202,5655
#define CTLMSG_IMG 203,5684
#define CTLMSG_IMG_FAIL 204,5713
#define CTLMSG_NEWDEV 205,5742
#define CTLMSG_NEWDEV_RSP 206,5771
#define CTLMSG_NEWDEV_FAIL 207,5800
#define CTLMSG_CLOSE 208,5829
#define CTLMSG_CLOSE_RSP 209,5858
#define CTLMSG_PID 210,5887
#define CTLMSG_PID_RSP 211,5916
#define MAX_DISK_TYPES 214,5971
#define DISK_TYPE_AIO 216,6002
#define DISK_TYPE_SYNC 217,6031
#define DISK_TYPE_VMDK 218,6060
#define DISK_TYPE_RAM 219,6089
#define DISK_TYPE_QCOW 220,6118
#define DISK_TYPE_QCOW2 221,6147
#define DOMNAME 224,6200
#define MAX_TAP_DEV 229,6332
#define MMAP_PAGES 232,6401
#define MMAP_VADDR(234,6523

tools/blktap/lib/xs_api.c,441
#define DPRINTF(51,1783
#define DPRINTF(53,1838
#define BASE_DEV_VAL 57,1910
int xs_gather(59,1937
int xs_printf(117,2985
int xs_exists(144,3416
char *get_dom_domid(get_dom_domid169,3872
int convert_dev_name_to_num(212,4716
static struct xenbus_watch *find_watch(find_watch264,5860
int register_xenbus_watch(280,6171
int unregister_xenbus_watch(301,6608
void reregister_xenbus_watches(323,7057
int xs_fire_next_watch(337,7355

tools/blktap/lib/xs_api.h,142
struct xenbus_watch32,1451
        struct list_head list;34,1473
        char *node;node35,1504
        void (*callback)callback36,1524

tools/blktap/lib/list.h,497
#define __LIST_H__9,118
#undef LIST_HEAD12,155
#define LIST_POISON1 15,180
#define LIST_POISON2 16,224
struct list_head 18,269
        struct list_head *next,next19,288
        struct list_head *next, *prev;prev19,288
#define LIST_HEAD_INIT(22,332
#define LIST_HEAD(24,384
static inline void __list_add(27,464
static inline void list_add(37,734
static inline void __list_del(41,856
static inline void list_del(46,994
#define list_entry(52,1169
#define list_for_each_entry(54,1315

tools/blktap/drivers/qcow-create.c,126
#define DFPRINTF(44,1701
#define DFPRINTF(46,1766
#define MAX_NAME_LEN 49,1812
static void help(51,1839
int main(60,2049

tools/blktap/drivers/bswap.h,1243
#define BSWAP_H2,16
#define bswap_16(13,210
#define bswap_32(14,240
#define bswap_64(15,270
#define bswap_16(22,359
#define bswap_32(30,533
#define bswap_64(40,833
static inline uint16_t bswap16(56,1551
static inline uint32_t bswap32(61,1623
static inline uint64_t bswap64(66,1696
static inline void bswap16s(71,1769
static inline void bswap32s(76,1837
static inline void bswap64s(81,1905
#define be_bswap(89,2010
#define le_bswap(90,2040
#define be_bswaps(91,2083
#define le_bswaps(92,2110
#define le_bswap(94,2167
#define be_bswap(95,2197
#define le_bswaps(96,2240
#define be_bswaps(97,2267
#define CPU_CONVERT(100,2326
CPU_CONVERT(131,2993
#define cpu_to_le16wu(143,3291
#define cpu_to_le32wu(144,3338
#define le16_to_cpupu(145,3385
#define le32_to_cpupu(146,3426
#define cpu_to_be16wu(148,3468
#define cpu_to_be32wu(149,3515
static inline void cpu_to_le32wu(161,3701
static inline uint16_t le16_to_cpupu(171,3874
static inline uint32_t le32_to_cpupu(177,4012
static inline void cpu_to_be16wu(183,4182
static inline void cpu_to_be32wu(191,4313
#define cpu_to_32wu 204,4517
#define cpu_to_32wu 206,4557
#undef le_bswap209,4599
#undef be_bswap210,4615
#undef le_bswaps211,4631
#undef be_bswaps212,4648

tools/blktap/drivers/img2qcow.c,551
#define DFPRINTF(45,1751
#define DFPRINTF(47,1816
#define O_LARGEFILE	52,1912
#define TAPDISK 56,1943
#define BLOCK_PROCESSSZ 57,1961
static int maxfds,59,1991
static int maxfds, *io_fd,io_fd59,1991
static int maxfds, *io_fd, running 59,1991
static int returned_events 60,2045
static uint64_t prev 61,2096
static char output[output62,2122
static void print_bytes(64,2147
static void debug_output(80,2475
static inline void LOCAL_FD_SET(94,2751
static int get_image_info(102,2869
static int send_responses(141,3780
int main(152,4008

tools/blktap/drivers/tapaio.c,409
#define REQUEST_ASYNC_FD 42,1821
tap_aio_completion_thread(64,2741
tap_aio_continue(89,3227
tap_aio_setup(101,3495
tap_aio_get_events(149,4872
int tap_aio_more_events(176,5710
int tap_aio_init(182,5890
void tap_aio_free(245,7518
int tap_aio_can_lock(262,7874
int tap_aio_lock(267,7985
void tap_aio_unlock(272,8084
int tap_aio_read(281,8230
int tap_aio_write(311,8856
int tap_aio_submit(341,9483

tools/blktap/drivers/block-ram.c,706
#define MAX_DISK_SIZE 45,1731
#define O_LARGEFILE	49,1833
char *img;img52,1863
long int   disksector_size;53,1874
long int   disksize;54,1902
long int   diskinfo;55,1923
static int connections 56,1944
struct tdram_state 58,1973
        int fd;59,1994
	int poll_pipe[poll_pipe60,2010
static int get_image_info(64,2091
static inline void init_fds(118,3421
static int tdram_open 130,3708
static int tdram_queue_read(223,6002
static int tdram_queue_write(237,6455
static int tdram_submit(253,7003
static int tdram_close(258,7068
static int tdram_do_callbacks(267,7213
static int tdram_get_parent_id(273,7321
static int tdram_validate_parent(278,7423
struct tap_disk tapdisk_ram 284,7553

tools/blktap/drivers/block-sync.c,529
#define O_LARGEFILE	45,1760
struct tdsync_state 48,1790
	int fd;49,1812
	int poll_pipe[poll_pipe50,1821
static int get_image_info(54,1903
static inline void init_fds(100,2972
static int tdsync_open 112,3241
static int tdsync_queue_read(152,4339
static int tdsync_queue_write(175,4990
static int tdsync_submit(198,5650
static int tdsync_close(203,5716
static int tdsync_do_callbacks(214,5919
static int tdsync_get_parent_id(220,6028
static int tdsync_validate_parent(225,6131
struct tap_disk tapdisk_sync 231,6263

tools/blktap/drivers/blktapctrl_linux.c,107
static void make_blktap_dev(11,154
int blktap_interface_create(36,893
int blktap_interface_open(80,2434

tools/blktap/drivers/block-vmdk.c,1963
#define O_LARGEFILE	51,1761
#define safer_free(54,1791
#define VMDK3_MAGIC 62,1960
#define VMDK4_MAGIC 63,2027
    uint32_t version;66,2112
    uint32_t flags;67,2134
    uint32_t disk_sectors;68,2154
    uint32_t granularity;69,2181
    uint32_t l1dir_offset;70,2207
    uint32_t l1dir_size;71,2234
    uint32_t file_sectors;72,2259
    uint32_t cylinders;73,2286
    uint32_t heads;74,2310
    uint32_t sectors_per_track;75,2330
} VMDK3Header;76,2362
    uint32_t version;79,2395
    uint32_t flags;80,2417
    int64_t capacity;81,2437
    int64_t granularity;82,2459
    int64_t desc_offset;83,2484
    int64_t desc_size;84,2509
    int32_t num_gtes_per_gte;85,2532
    int64_t rgd_offset;86,2562
    int64_t gd_offset;87,2586
    int64_t grain_offset;88,2609
    char filler[filler89,2635
    char check_bytes[check_bytes90,2655
} __attribute__((packed)) VMDK4Header;91,2680
#define L2_CACHE_SIZE 93,2720
struct tdvmdk_state 95,2746
        int fd;96,2768
	int poll_pipe[poll_pipe97,2784
    	unsigned int l1_size;99,2835
    	int64_t l1_table_offset;100,2862
    	int64_t l1_backup_table_offset;101,2892
    	uint32_t l1_entry_sectors;102,2929
    	unsigned int l2_size;103,2961
    	uint32_t *l1_table;l1_table105,2990
    	uint32_t *l1_backup_table;l1_backup_table106,3015
    	uint32_t *l2_cache;l2_cache107,3047
    	uint32_t l2_cache_offsets[l2_cache_offsets108,3072
    	uint32_t l2_cache_counts[l2_cache_counts109,3119
    	unsigned int cluster_sectors;111,3171
static inline void init_fds(114,3210
static int tdvmdk_open 126,3500
static uint64_t get_cluster_offset(241,7292
static int tdvmdk_queue_read(314,9986
static  int tdvmdk_queue_write(348,11085
static int tdvmdk_submit(382,12150
static int tdvmdk_close(387,12216
static int tdvmdk_do_callbacks(400,12524
static int tdvmdk_get_parent_id(406,12633
static int tdvmdk_validate_parent(411,12736
struct tap_disk tapdisk_vmdk 417,12868

tools/blktap/drivers/tapaio.h,1325
#define __TAPAIO_H__31,1500
#define IOCB_IDX(39,1606
struct tap_aio_internal_context 41,1663
        io_context_t     aio_ctx;42,1697
        struct io_event *aio_events;aio_events44,1732
        int              max_aio_events;45,1769
        pthread_t        aio_thread;47,1811
        int              command_fd[command_fd48,1848
        int              completion_fd[completion_fd49,1888
        int              pollfd;50,1931
        unsigned int     poll_in_thread 51,1964
typedef struct tap_aio_internal_context tap_aio_internal_context_t;55,2015
struct pending_aio 58,2085
	td_callback_t cb;59,2106
	int id;60,2125
	void *private;private61,2134
	int nb_sectors;62,2150
	char *buf;buf63,2167
	uint64_t sector;64,2179
struct tap_aio_context 68,2203
	tap_aio_internal_context_t    aio_ctx;69,2228
	int                  max_aio_reqs;71,2269
	struct iocb         *iocb_list;iocb_list72,2305
	struct iocb        **iocb_free;iocb_free73,2338
	struct pending_aio  *pending_aio;pending_aio74,2371
	int                  iocb_free_count;75,2406
	struct iocb        **iocb_queue;iocb_queue76,2445
	int	             iocb_queued;77,2479
	struct io_event     *aio_events;aio_events78,2510
	uint8_t *sector_lock;sector_lock81,2588
typedef struct tap_aio_context tap_aio_context_t;84,2620

tools/blktap/drivers/block-aio.c,547
#define MAX_AIO_REQS 48,1779
#define O_LARGEFILE	52,1889
struct tdaio_state 55,1919
	int fd;56,1940
	tap_aio_context_t aio;57,1949
static int get_image_info(62,2006
static inline void init_fds(109,3135
static int tdaio_open 121,3408
static int tdaio_queue_read(164,4521
static int tdaio_queue_write(177,4981
static int tdaio_submit(190,5441
static int tdaio_close(197,5595
static int tdaio_do_callbacks(207,5779
static int tdaio_get_parent_id(237,6536
static int tdaio_validate_parent(242,6638
struct tap_disk tapdisk_aio 248,6768

tools/blktap/drivers/blktapctrl.c,1269
#define PIDFILE 62,2196
#define NUM_POLL_FDS 64,2239
#define MSG_SIZE 65,2262
#define MAX_TIMEOUT 66,2284
#define MAX_RAND_VAL 67,2307
#define MAX_ATTEMPTS 68,2335
int run 70,2360
int max_timeout 71,2373
int ctlfd 72,2404
int blktap_major;74,2420
static driver_list_entry_t *active_disks[active_disks79,2602
static unsigned long long tapdisk_get_size(82,2662
static unsigned long tapdisk_get_secsize(88,2784
static unsigned int tapdisk_get_info(94,2907
struct blkif_ops tapdisk_ops 100,3023
static void init_driver_list(107,3160
static void init_rng(116,3282
static int get_tapdisk_pid(127,3429
static int test_path(153,4113
static void add_disktype(217,5995
static int qemu_instance_has_disks(236,6343
static int del_disktype(254,6662
static int write_msg(290,7583
static int read_msg(404,10037
static int launch_tapdisk_provider(491,11874
static int launch_tapdisk(519,12405
static int launch_tapdisk_ioemu(529,12591
static int connect_qemu(543,13039
static int connect_tapdisk(609,14691
static int blktapctrl_new_blkif(652,15577
static int map_new_blktapctrl(725,17405
static int unmap_blktapctrl(742,17853
int open_ctrl_socket(760,18237
static void print_drivers(785,18715
static void write_pidfile(795,18927
int main(831,19689

tools/blktap/drivers/aes.h,202
#define QEMU_AES_H2,19
#define AES_MAXNR 6,60
#define AES_BLOCK_SIZE 7,81
struct aes_key_st 9,108
    uint32_t rd_key[rd_key10,128
    int rounds;11,169
typedef struct aes_key_st AES_KEY;13,188

tools/blktap/drivers/blk_linux.c,58
int blk_getimagesize(7,106
int blk_getsectorsize(21,315

tools/blktap/drivers/block-qcow2.c,5589
#define USE_AIO40,1429
#define qemu_malloc 42,1446
#define qemu_mallocz(43,1473
#define qemu_free 44,1516
#define O_BINARY 47,1557
#define O_LARGEFILE 52,1634
#define BLOCK_FLAG_ENCRYPT 55,1669
#define QCOW_MAGIC 76,2310
#define QCOW_VERSION 77,2377
#define QCOW_CRYPT_NONE 79,2401
#define QCOW_CRYPT_AES	80,2427
#define QCOW_OFLAG_COPIED	83,2528
#define QCOW_OFLAG_COMPRESSED 85,2648
#define REFCOUNT_SHIFT 87,2691
#define offsetof(90,2765
typedef struct QCowHeader 93,2834
	uint32_t magic;94,2862
	uint32_t version;95,2879
	uint64_t backing_file_offset;96,2898
	uint32_t backing_file_size;97,2929
	uint32_t cluster_bits;98,2958
	uint64_t size;99,2982
	uint32_t crypt_method;101,3014
	uint32_t l1_size;102,3038
	uint64_t l1_table_offset;103,3102
	uint64_t refcount_table_offset;104,3129
	uint32_t refcount_table_clusters;105,3162
	uint32_t nb_snapshots;106,3197
	uint64_t snapshots_offset;107,3221
} QCowHeader;108,3249
typedef struct __attribute__((packed)) QCowSnapshotHeader 110,3264
	uint64_t l1_table_offset;112,3356
	uint32_t l1_size;114,3384
	uint16_t id_str_size;115,3403
	uint16_t name_size;116,3426
	uint32_t date_sec;118,3448
	uint32_t date_nsec;119,3468
	uint64_t vm_clock_nsec;121,3490
	uint32_t vm_state_size;123,3516
	uint32_t extra_data_size;124,3541
} QCowSnapshotHeader;128,3657
#define L2_CACHE_SIZE 130,3680
typedef struct QCowSnapshot 132,3706
	uint64_t l1_table_offset;133,3736
	uint32_t l1_size;134,3763
	char *id_str;id_str135,3782
	char *name;name136,3797
	uint32_t vm_state_size;137,3810
	uint32_t date_sec;138,3835
	uint32_t date_nsec;139,3855
	uint64_t vm_clock_nsec;140,3876
} QCowSnapshot;141,3901
typedef struct BDRVQcowState 143,3918
	int fd;146,3974
	int poll_pipe[poll_pipe147,3983
	char* name;148,4032
	int encrypted;149,4045
	char backing_file[backing_file150,4061
	struct disk_driver* backing_hd;151,4087
	int64_t total_sectors;153,4121
	tap_aio_context_t async;155,4146
	int cluster_bits;158,4204
	int cluster_size;159,4223
	int cluster_sectors;160,4242
	int l2_bits;161,4264
	int l2_size;162,4278
	int l1_size;163,4292
	int l1_vm_state_index;164,4306
	int csize_shift;165,4330
	int csize_mask;166,4348
	uint64_t cluster_offset_mask;167,4365
	uint64_t l1_table_offset;168,4396
	uint64_t *l1_table;l1_table169,4423
	uint64_t *l2_cache;l2_cache170,4444
	uint64_t l2_cache_offsets[l2_cache_offsets171,4465
	uint32_t l2_cache_counts[l2_cache_counts172,4508
	uint8_t *cluster_cache;cluster_cache173,4550
	uint8_t *cluster_data;cluster_data174,4575
	uint64_t cluster_cache_offset;175,4599
	uint64_t *refcount_table;refcount_table177,4632
	uint64_t refcount_table_offset;178,4659
	uint32_t refcount_table_size;179,4692
	uint64_t refcount_block_cache_offset;180,4723
	uint16_t *refcount_block_cache;refcount_block_cache181,4762
	int64_t free_cluster_index;182,4795
	int64_t free_byte_offset;183,4824
	uint32_t crypt_method;185,4852
	uint32_t crypt_method_header;186,4920
	AES_KEY aes_encrypt_key;187,4951
	AES_KEY aes_decrypt_key;188,4977
	uint64_t snapshots_offset;189,5003
	int snapshots_size;190,5031
	int nb_snapshots;191,5052
	QCowSnapshot *snapshots;snapshots192,5071
} BDRVQcowState;193,5097
static int bdrv_pread(226,6242
static int bdrv_pwrite(257,6937
static int bdrv_read(271,7206
static int bdrv_write(279,7371
static int qcow_probe(285,7502
static int qcow_open(297,7810
static int qcow_set_key(505,13111
static void encrypt_sectors(550,14145
		uint64_t ll[ll556,14314
		uint8_t b[b557,14332
static int copy_sectors(572,14582
static void l2_cache_reset(601,15163
static inline int l2_cache_new_entry(610,15458
static int64_t align_offset(628,15848
static int grow_l1_table(634,15959
static uint64_t get_cluster_offset(716,17987
static int qcow_is_allocated(865,22315
static int decompress_buffer(881,22764
static int decompress_cluster(908,23358
static int backing_read1(932,24092
static int qcow_read(951,24536
static int qcow_write(1017,26446
static int qcow_queue_read(1069,27893
static int qcow_queue_write(1141,29746
static int qcow_close(1201,31122
typedef struct QCowCreateState 1222,31549
	int cluster_size;1223,31582
	int cluster_bits;1224,31601
	uint16_t *refcount_block;refcount_block1225,31620
	uint64_t *refcount_table;refcount_table1226,31647
	int64_t l1_table_offset;1227,31674
	int64_t refcount_table_offset;1228,31700
	int64_t refcount_block_offset;1229,31732
} QCowCreateState;1230,31764
static void create_refcount_update(1232,31784
static int qcow_submit(1250,32270
static void qcow_free_snapshots(1263,32523
static int qcow_read_snapshots(1277,32811
static int refcount_init(1336,34436
static void refcount_close(1361,35127
static int load_refcount_block(1369,35285
static int get_refcount(1382,35627
static int64_t alloc_clusters_noref(1405,36423
static int64_t alloc_clusters(1434,37144
static int64_t alloc_bytes(1445,37451
static void free_clusters(1483,38590
static int grow_refcount_table(1489,38717
static int update_cluster_refcount(1563,41101
static void update_refcount(1626,43250
static void inc_refcounts(1648,43860
static int check_refcounts_l1(1675,44579
static void check_refcounts(1763,47183
static int qcow_sync_read(1824,48793
static int qcow_sync_write(1841,49166
static int qcow_do_callbacks(1855,49464
static int qcow_do_callbacks(1862,49549
static int get_filesize(1907,50581
static int qcow_get_parent_id(1949,51459
static int qcow_validate_parent(1962,51742
int qcow2_create(1984,52187
struct tap_disk tapdisk_qcow2 2082,55457

tools/blktap/drivers/block-qcow.c,3111
#define O_LARGEFILE	44,1143
#define ASSERT(48,1179
#define ASSERT(52,1323
#define ROUNDUP(55,1360
#undef IOCB_IDX61,1469
#define IOCB_IDX(62,1485
#define ZERO_TEST(64,1538
#define QCOW_MAGIC 69,1707
#define XEN_MAGIC 70,1774
#define QCOW_VERSION 71,1841
#define QCOW_CRYPT_NONE 73,1865
#define QCOW_CRYPT_AES 74,1894
#define QCOW_OFLAG_COMPRESSED 76,1924
#define SPARSE_FILE 77,1966
#define EXTHDR_L1_BIG_ENDIAN 78,1991
#define O_BINARY 81,2043
typedef struct QCowHeader 84,2070
	uint32_t magic;85,2098
	uint32_t version;86,2115
	uint64_t backing_file_offset;87,2134
	uint32_t backing_file_size;88,2165
	uint32_t mtime;89,2194
	uint64_t size;90,2211
	uint8_t cluster_bits;91,2242
	uint8_t l2_bits;92,2265
	uint32_t crypt_method;93,2283
	uint64_t l1_table_offset;94,2307
} QCowHeader;95,2334
typedef struct QCowHeader_ext 98,2390
        uint32_t xmagic;99,2422
        uint32_t cksum;100,2447
        uint32_t min_cluster_alloc;101,2471
        uint32_t flags;102,2507
} QCowHeader_ext;103,2531
#define L2_CACHE_SIZE 105,2550
struct tdqcow_state 107,2606
        int fd;108,2628
	uint64_t fd_end;109,2698
	char *name;name110,2771
	uint32_t backing_file_size;111,2830
	uint64_t backing_file_offset;112,2859
	int encrypted;113,2890
	int cluster_bits;114,2963
	int cluster_size;116,3060
	int cluster_sectors;117,3114
	int cluster_alloc;118,3180
	int min_cluster_alloc;120,3262
	int sparse;121,3329
	int l2_bits;122,3406
	int l2_size;123,3465
	int l1_size;124,3517
	uint64_t cluster_offset_mask;125,3567
	uint64_t l1_table_offset;126,3602
	uint64_t *l1_table;l1_table128,3684
	uint64_t *l2_cache;l2_cache129,3737
	uint64_t l2_cache_offsets[l2_cache_offsets131,3843
	uint32_t l2_cache_counts[l2_cache_counts132,3911
	uint8_t *cluster_cache;cluster_cache133,3982
	uint8_t *cluster_data;cluster_data134,4017
	uint64_t cluster_cache_offset;135,4041
	uint32_t crypt_method;136,4078
	uint32_t crypt_method_header;138,4160
	AES_KEY aes_encrypt_key;139,4197
	AES_KEY aes_decrypt_key;140,4241
	tap_aio_context_t	aio;143,4314
static uint32_t gen_cksum(152,4463
static uint32_t gen_cksum(177,4950
static int get_filesize(208,5525
static int qcow_set_key(243,6210
static void encrypt_sectors(289,7232
		uint64_t ll[ll295,7485
		uint8_t b[b296,7503
static int qtruncate(311,7754
static uint64_t get_cluster_offset(392,9840
static void init_cluster_cache(628,16992
static int qcow_is_allocated(647,17597
static int decompress_buffer(662,18039
static int decompress_cluster(689,18700
static inline void init_fds(711,19286
static int tdqcow_open 723,19558
static int tdqcow_queue_read(945,25830
static int tdqcow_queue_write(1007,27663
static int tdqcow_submit(1065,29393
static int tdqcow_close(1072,29554
static int tdqcow_do_callbacks(1100,30297
int qcow_create(1142,31483
static int qcow_make_empty(1285,35777
static int qcow_get_cluster_size(1305,36371
static int qcow_compress_cluster(1312,36573
static int tdqcow_get_parent_id(1367,37948
static int tdqcow_validate_parent(1401,38826
struct tap_disk tapdisk_qcow 1423,39276

tools/blktap/drivers/qcow2raw.c,788
#define DFPRINTF(46,1760
#define DFPRINTF(48,1825
#define O_LARGEFILE 54,1922
#define TAPDISK 57,1952
#define BLOCK_PROCESSSZ 58,1970
static int maxfds,60,2000
static int maxfds, *qcowio_fd,qcowio_fd60,2000
static int maxfds, *qcowio_fd, *aio_fd,aio_fd60,2000
static int maxfds, *qcowio_fd, *aio_fd, running 60,2000
static int returned_read_events 61,2068
static int submit_events 62,2132
static uint32_t read_idx 63,2162
struct disk_driver ddqcow,64,2207
struct disk_driver ddqcow, ddaio;64,2207
static uint64_t prev 65,2241
static char output[output66,2280
static void print_bytes(68,2305
static void debug_output(84,2635
static inline void LOCAL_FD_SET(98,2913
static int send_write_responses(108,3111
static int send_read_responses(124,3461
int main(149,4045

tools/blktap/drivers/tapdisk.c,1294
#define MSG_SIZE 10,178
#define TAPDISK11,200
#define ASSERT(34,688
#define ASSERT(38,832
#define INPUT 41,870
#define OUTPUT 42,886
static int maxfds,44,904
static int maxfds, fds[fds44,904
static int maxfds, fds[2], run 44,904
static pid_t process;46,941
int connected_disks 47,963
fd_list_entry_t *fd_start fd_start48,988
#define td_for_each_disk(53,1130
static void usage(56,1229
static void daemonize(63,1384
static void free_driver(83,1728
static void unmap_disk(92,1858
static void sig_handler(124,2419
static inline int LOCAL_FD_SET(131,2563
static inline fd_list_entry_t *add_fd_entry(add_fd_entry154,3036
static inline struct td_state *get_state(get_state177,3476
static struct tap_disk *get_driver(get_driver189,3678
static struct td_state *state_init(state_init196,3816
static int map_new_dev(214,4180
static struct disk_driver *disk_init(disk_init270,5430
static int open_disk(294,5858
static int read_msg(370,7246
static inline int write_rsp_to_ring(492,10030
static inline void kick_responses(504,10342
static void io_done(515,10592
segment_start(528,10864
uint64_t sends,539,11072
uint64_t sends, responds;539,11072
static int send_responses(540,11098
int do_cow_read(592,12247
static void get_io_request(627,13192
int main(765,16671

tools/blktap/drivers/aes.c,788
typedef uint32_t u32;38,1332
typedef uint16_t u16;39,1354
typedef uint8_t u8;40,1376
#define MAXKC 42,1397
#define MAXKB 43,1422
#define MAXNR 44,1446
#undef FULL_UNROLL47,1515
# define GETU32(48,1534
# define PUTU32(49,1640
static const u32 Te0[Te065,2111
static const u32 Te1[Te1131,5728
static const u32 Te2[Te2197,9345
static const u32 Te3[Te3263,12962
static const u32 Te4[Te4330,16580
static const u32 Td0[Td0396,20197
static const u32 Td1[Td1462,23814
static const u32 Td2[Td2528,27431
static const u32 Td3[Td3595,31049
static const u32 Td4[Td4661,34666
static const u32 rcon[rcon727,38283
int AES_set_encrypt_key(736,38576
int AES_set_decrypt_key(837,40861
void AES_encrypt(890,42460
void AES_decrypt(1081,51205
void AES_cbc_encrypt(1270,60009

tools/blktap/drivers/tapdisk.h,2456
#define TAPDISK_H_57,2348
#define DPRINTF(66,2506
#define DPRINTF(68,2598
#define MAX_SEGMENTS_PER_REQ 73,2736
#define SECTOR_SHIFT 74,2771
#define DEFAULT_SECTOR_SIZE 75,2806
#define MAX_IOFD 77,2842
#define BLK_NOT_ALLOCATED 79,2878
#define TD_NO_PARENT 80,2913
typedef uint32_t td_flag_t;82,2949
#define TD_RDONLY 84,2978
struct disk_id 89,3049
	char *name;name90,3066
	int drivertype;91,3079
struct disk_driver 94,3100
	int early;95,3121
	char *name;name96,3133
	void *private;private97,3146
	td_flag_t flags;98,3162
	int io_fd[io_fd99,3180
	struct tap_disk *drv;drv100,3202
	struct td_state *td_state;td_state101,3225
	struct disk_driver *next;next102,3253
struct td_state 106,3363
	struct disk_driver *disks;disks107,3381
	void *blkif;blkif108,3409
	void *image;image109,3423
	void *ring_info;ring_info110,3437
	void *fd_entry;fd_entry111,3455
	uint64_t sector_size;112,3472
	uint64_t size;113,3495
	unsigned int       info;114,3511
typedef int (*td_callback_t)td_callback_t118,3620
struct tap_disk 123,3906
	const char *disk_type;disk_type124,3924
	int private_data_size;125,3948
	int (*td_open)td_open126,3972
	int (*td_queue_read)td_queue_read128,4066
	int (*td_queue_write)td_queue_write131,4211
	int (*td_submit)td_submit134,4357
	int (*td_close)td_close135,4409
	int (*td_do_callbacks)td_do_callbacks136,4461
	int (*td_get_parent_id)td_get_parent_id137,4522
	int (*td_validate_parent)td_validate_parent138,4594
typedef struct disk_info 142,4697
	int  idnum;143,4724
	char name[name144,4737
	char handle[handle145,4780
	int  single_handler;146,4832
	int  use_ioemu;148,4949
	struct tap_disk *drv;drv151,5034
} disk_info_t;153,5065
static disk_info_t aio_disk 166,5389
static disk_info_t sync_disk 177,5514
static disk_info_t vmdk_disk 188,5644
static disk_info_t ram_disk 199,5777
static disk_info_t qcow_disk 210,5906
static disk_info_t qcow2_disk 221,6036
static disk_info_t *dtypes[dtypes233,6198
typedef struct driver_list_entry 242,6312
	struct blkif *blkif;blkif243,6347
	struct driver_list_entry **pprev,pprev244,6369
	struct driver_list_entry **pprev, *next;next244,6369
} driver_list_entry_t;245,6411
typedef struct fd_list_entry 247,6435
	int cookie;248,6466
	int  tap_fd;249,6479
	struct td_state *s;s250,6493
	struct fd_list_entry **pprev,pprev251,6514
	struct fd_list_entry **pprev, *next;next251,6514
} fd_list_entry_t;252,6552

tools/firmware/hvmloader/smbios_types.h,4155
#define SMBIOS_TYPES_H27,1003
struct smbios_entry_point 34,1154
	char anchor_string[anchor_string35,1182
	uint8_t checksum;36,1206
	uint8_t length;37,1225
	uint8_t smbios_major_version;38,1242
	uint8_t smbios_minor_version;39,1273
	uint16_t max_structure_size;40,1304
	uint8_t entry_point_revision;41,1334
	uint8_t formatted_area[formatted_area42,1365
	char intermediate_anchor_string[intermediate_anchor_string43,1393
	uint8_t intermediate_checksum;44,1430
	uint16_t structure_table_length;45,1462
	uint32_t structure_table_address;46,1496
	uint16_t number_of_structures;47,1531
	uint8_t smbios_bcd_revision;48,1563
struct smbios_structure_header 52,1682
	uint8_t type;53,1715
	uint8_t length;54,1730
	uint16_t handle;55,1747
struct smbios_type_0 59,1833
	struct smbios_structure_header header;60,1856
	uint8_t vendor_str;61,1896
	uint8_t version_str;62,1917
	uint16_t starting_address_segment;63,1939
	uint8_t release_date_str;64,1975
	uint8_t rom_size;65,2002
	uint8_t characteristics[characteristics66,2022
	uint8_t characteristics_extension_bytes[characteristics_extension_bytes67,2051
	uint8_t major_release;68,2096
	uint8_t minor_release;69,2120
	uint8_t embedded_controller_major;70,2144
	uint8_t embedded_controller_minor;71,2180
struct smbios_type_1 75,2286
	struct smbios_structure_header header;76,2309
	uint8_t manufacturer_str;77,2349
	uint8_t product_name_str;78,2376
	uint8_t version_str;79,2403
	uint8_t serial_number_str;80,2425
	uint8_t uuid[uuid81,2453
	uint8_t wake_up_type;82,2472
	uint8_t sku_str;83,2495
	uint8_t family_str;84,2513
struct smbios_type_3 88,2602
	struct smbios_structure_header header;89,2625
	uint8_t manufacturer_str;90,2665
	uint8_t type;91,2692
	uint8_t version_str;92,2707
	uint8_t serial_number_str;93,2729
	uint8_t asset_tag_str;94,2757
	uint8_t boot_up_state;95,2781
	uint8_t power_supply_state;96,2805
	uint8_t thermal_state;97,2834
	uint8_t security_status;98,2858
struct smbios_type_4 102,2957
	struct smbios_structure_header header;103,2980
	uint8_t socket_designation_str;104,3020
	uint8_t processor_type;105,3053
	uint8_t processor_family;106,3078
	uint8_t manufacturer_str;107,3105
	uint32_t cpuid[cpuid108,3132
	uint8_t version_str;109,3152
	uint8_t voltage;110,3174
	uint16_t external_clock;111,3192
	uint16_t max_speed;112,3218
	uint16_t current_speed;113,3239
	uint8_t status;114,3264
	uint8_t upgrade;115,3281
struct smbios_type_11 119,3363
   struct smbios_structure_header header;120,3387
   uint8_t count;121,3429
struct smbios_type_16 127,3572
	struct smbios_structure_header header;128,3596
	uint8_t location;129,3636
	uint8_t use;130,3655
	uint8_t error_correction;131,3669
	uint32_t maximum_capacity;132,3696
	uint16_t memory_error_information_handle;133,3724
	uint16_t number_of_memory_devices;134,3767
struct smbios_type_17 140,3904
	struct smbios_structure_header header;141,3928
	uint16_t physical_memory_array_handle;142,3968
	uint16_t memory_error_information_handle;143,4008
	uint16_t total_width;144,4051
	uint16_t data_width;145,4074
	uint16_t size;146,4096
	uint8_t form_factor;147,4112
	uint8_t device_set;148,4134
	uint8_t device_locator_str;149,4155
	uint8_t bank_locator_str;150,4184
	uint8_t memory_type;151,4211
	uint16_t type_detail;152,4233
struct smbios_type_19 156,4336
	struct smbios_structure_header header;157,4360
	uint32_t starting_address;158,4400
	uint32_t ending_address;159,4428
	uint16_t memory_array_handle;160,4454
	uint8_t partition_width;161,4485
struct smbios_type_20 165,4592
	struct smbios_structure_header header;166,4616
	uint32_t starting_address;167,4656
	uint32_t ending_address;168,4684
	uint16_t memory_device_handle;169,4710
	uint16_t memory_array_mapped_address_handle;170,4742
	uint8_t partition_row_position;171,4788
	uint8_t interleave_position;172,4821
	uint8_t interleaved_data_depth;173,4851
struct smbios_type_32 177,4960
	struct smbios_structure_header header;178,4984
	uint8_t reserved[reserved179,5024
	uint8_t boot_status;180,5046
struct smbios_type_127 184,5135
	struct smbios_structure_header header;185,5160

tools/firmware/hvmloader/config.h,1591
#define __HVMLOADER_CONFIG_H__2,31
#define PAGE_SHIFT 4,63
#define PAGE_SIZE 5,85
#define IOAPIC_BASE_ADDRESS 7,125
#define IOAPIC_ID 8,164
#define IOAPIC_VERSION 9,197
#define LAPIC_BASE_ADDRESS 11,231
#define LAPIC_ID(12,270
#define PCI_ISA_DEVFN 14,315
#define PCI_ISA_IRQ_MASK 15,369
#define PCI_MEM_START 18,519
#define PCI_MEM_END 19,558
#define RESERVED_MEMBASE 23,701
#define RESERVED_MEMSIZE 24,740
#define ROMBIOS_SEG 26,780
#define ROMBIOS_BEGIN 27,818
#define ROMBIOS_SIZE 28,860
#define ROMBIOS_MAXOFFSET 29,902
#define ROMBIOS_END 30,944
#define SCRATCH_PHYSICAL_ADDRESS 33,1025
#define HYPERCALL_PHYSICAL_ADDRESS 34,1074
#define VGABIOS_PHYSICAL_ADDRESS 35,1123
#define OPTIONROM_PHYSICAL_ADDRESS 36,1172
#define OPTIONROM_PHYSICAL_END 37,1221
#define BIOS_INFO_PHYSICAL_ADDRESS 38,1270
#define ACPI_PHYSICAL_ADDRESS 39,1319
#define E820_PHYSICAL_ADDRESS 40,1368
#define SMBIOS_PHYSICAL_ADDRESS 41,1417
#define SMBIOS_MAXIMUM_SIZE 42,1466
#define ROMBIOS_PHYSICAL_ADDRESS 43,1515
#define E820_NR_OFFSET 46,1607
#define E820_OFFSET 47,1649
#define XEN_PF_IOBASE 50,1718
#define PFFLAG_ROM_LOCK 51,1747
struct bios_info 54,1866
    uint8_t  com1_present:com1_present55,1885
    uint8_t  com2_present:com2_present56,1947
    uint8_t  lpt1_present:lpt1_present57,2009
    uint8_t  hpet_present:hpet_present58,2071
    uint32_t pci_min,59,2133
    uint32_t pci_min, pci_len;59,2133
    uint32_t madt_csum_addr;60,2202
    uint32_t madt_lapic0_addr;61,2272
    uint32_t bios32_entry;62,2352
#define BIOSINFO_OFF_bios32_entry 64,2428

tools/firmware/hvmloader/xenbus.c,363
static struct xenstore_domain_interface *rings;rings28,978
static evtchn_port_t event;29,1054
static char payload[payload30,1130
void xenbus_setup(34,1299
void xenbus_shutdown(57,2013
static void ring_wait(72,2404
static void ring_write(86,2795
static void ring_read(112,3661
static int xenbus_send(143,4724
char *xenstore_read(xenstore_read194,6395

tools/firmware/hvmloader/hypercall.h,521
#define __HVMLOADER_HYPERCALL_H__32,1554
#define hypercall_pa 42,1791
#define _hypercall0(44,1857
#define _hypercall1(55,2098
#define _hypercall2(66,2377
#define _hypercall3(77,2696
#define _hypercall4(90,3075
#define _hypercall5(103,3494
hypercall_sched_op(118,3980
hypercall_memory_op(125,4090
hypercall_multicall(132,4211
hypercall_event_channel_op(139,4345
hypercall_xen_version(146,4471
hypercall_console_io(153,4587
hypercall_vm_assist(160,4719
hypercall_vcpu_op(167,4849
hypercall_hvm_op(174,4991

tools/firmware/hvmloader/e820.h,287
#define __HVMLOADER_E820_H__2,29
#define E820_RAM 9,139
#define E820_RESERVED 10,167
#define E820_ACPI 11,195
#define E820_NVS 12,223
struct e820entry 14,252
    uint64_t addr;15,271
    uint64_t size;16,290
    uint32_t type;17,309
#define E820_NR 20,356
#define E820 21,427

tools/firmware/hvmloader/util.c,1225
void wrmsr(29,985
uint64_t rdmsr(36,1131
void outb(47,1309
void outw(52,1418
void outl(57,1528
uint8_t inb(62,1639
uint16_t inw(69,1768
uint32_t inl(76,1899
uint8_t cmos_inb(83,2031
void cmos_outb(89,2109
char *itoa(itoa95,2197
int strcmp(115,2467
int strncmp(125,2632
void *memcpy(memcpy134,2812
void *memmove(memmove154,3238
strcpy(165,3490
strncpy(175,3629
strlen(199,4061
memset(208,4156
memcmp(219,4333
cpuid(237,4644
byte_to_hex(248,4961
uuid_to_string(269,5396
void *mem_alloc(mem_alloc306,6016
uint32_t ioapic_read(365,7690
void ioapic_write(371,7855
uint32_t lapic_read(377,8030
void lapic_write(382,8130
#define PCI_CONF1_ADDRESS(387,8240
uint32_t pci_read(390,8345
void pci_write(403,8605
static char *printnum(printnum415,8913
static void _doprint(426,9143
static void putchar(508,11287
int printf(513,11339
int vprintf(524,11480
void __assert_failed(530,11572
void __bug(538,11777
static void validate_hvm_info(545,11915
struct hvm_info_table *get_hvm_info_table(get_hvm_info_table573,12436
struct shared_info *get_shared_info(get_shared_info590,12720
uint16_t get_cpu_mhz(609,13207
int uart_exists(642,14127
int lpt_exists(657,14372
int hpet_exists(665,14568

tools/firmware/hvmloader/cacheattr.c,591
#define MSR_MTRRphysBase(26,862
#define MSR_MTRRphysMask(27,912
#define MSR_MTRRcap 28,966
#define MSR_MTRRfix64K_00000 29,1002
#define MSR_MTRRfix16K_80000 30,1038
#define MSR_MTRRfix16K_A0000 31,1074
#define MSR_MTRRfix4K_C0000 32,1110
#define MSR_MTRRfix4K_C8000 33,1146
#define MSR_MTRRfix4K_D0000 34,1182
#define MSR_MTRRfix4K_D8000 35,1218
#define MSR_MTRRfix4K_E0000 36,1254
#define MSR_MTRRfix4K_E8000 37,1290
#define MSR_MTRRfix4K_F0000 38,1326
#define MSR_MTRRfix4K_F8000 39,1362
#define MSR_PAT 40,1398
#define MSR_MTRRdefType 41,1434
void cacheattr_init(43,1471

tools/firmware/hvmloader/acpi/build.c,460
#define align16(25,877
#define fixed_strcpy(26,924
uint32_t madt_csum_addr,29,1048
uint32_t madt_csum_addr, madt_lapic0_addr;29,1048
static unsigned int nr_processor_objects;49,1761
static void set_checksum(51,1804
static uint8_t battery_port_exists(66,2061
static int construct_madt(71,2139
static int construct_hpet(152,4872
static int construct_secondary_tables(174,5621
static void __acpi_build_tables(245,8063
void acpi_build_tables(357,12225

tools/firmware/hvmloader/acpi/acpi2_0.h,8648
#define _ACPI_2_0_H_19,736
#define ASCII32(24,800
#define ASCII64(26,895
struct acpi_header 34,1053
    uint32_t signature;35,1074
    uint32_t length;36,1098
    uint8_t  revision;37,1119
    uint8_t  checksum;38,1142
    char     oem_id[oem_id39,1165
    char     oem_table_id[oem_table_id40,1189
    uint32_t oem_revision;41,1219
    uint32_t creator_id;42,1246
    uint32_t creator_revision;43,1271
#define ACPI_OEM_ID 46,1306
#define ACPI_OEM_TABLE_ID 47,1344
#define ACPI_OEM_REVISION 48,1382
#define ACPI_CREATOR_ID 50,1417
#define ACPI_CREATOR_REVISION 51,1490
struct acpi_20_generic_address 56,1578
    uint8_t  address_space_id;57,1611
    uint8_t  register_bit_width;58,1642
    uint8_t  register_bit_offset;59,1675
    uint8_t  reserved;60,1709
    uint64_t address;61,1732
#define ACPI_SYSTEM_MEMORY 67,1803
#define ACPI_SYSTEM_IO 68,1832
#define ACPI_PCI_CONFIGURATION_SPACE 69,1857
#define ACPI_EMBEDDED_CONTROLLER 70,1896
#define ACPI_SMBUS 71,1931
#define ACPI_FUNCTIONAL_FIXED_HARDWARE 72,1952
struct acpi_10_rsdp 77,2062
    uint64_t signature;78,2084
    uint8_t  checksum;79,2108
    char     oem_id[oem_id80,2131
    uint8_t  reserved;81,2155
    uint32_t rsdt_address;82,2178
struct acpi_20_rsdp 88,2262
    uint64_t signature;89,2284
    uint8_t  checksum;90,2308
    char     oem_id[oem_id91,2331
    uint8_t  revision;92,2355
    uint32_t rsdt_address;93,2378
    uint32_t length;94,2405
    uint64_t xsdt_address;95,2426
    uint8_t  extended_checksum;96,2453
    uint8_t  reserved[reserved97,2485
#define ACPI_MAX_NUM_TABLES 103,2571
struct acpi_20_rsdt 108,2650
    struct acpi_header header;109,2672
    uint32_t entry[entry110,2703
struct acpi_20_xsdt 116,2782
    struct acpi_header header;117,2804
    uint64_t entry[entry118,2835
struct acpi_20_tcpa 124,2908
    struct acpi_header header;125,2930
    uint16_t platform_class;126,2961
    uint32_t laml;127,2990
    uint64_t lasa;128,3009
#define ACPI_2_0_TCPA_LAML_SIZE 130,3031
struct acpi_10_fadt 135,3143
    struct acpi_header header;136,3165
    uint32_t firmware_ctrl;137,3196
    uint32_t dsdt;138,3224
    uint8_t  reserved0;139,3243
    uint8_t  preferred_pm_profile;140,3267
    uint16_t sci_int;141,3302
    uint32_t smi_cmd;142,3324
    uint8_t  acpi_enable;143,3346
    uint8_t  acpi_disable;144,3372
    uint8_t  s4bios_req;145,3399
    uint8_t  pstate_cnt;146,3424
    uint32_t pm1a_evt_blk;147,3449
    uint32_t pm1b_evt_blk;148,3476
    uint32_t pm1a_cnt_blk;149,3503
    uint32_t pm1b_cnt_blk;150,3530
    uint32_t pm2_cnt_blk;151,3557
    uint32_t pm_tmr_blk;152,3583
    uint32_t gpe0_blk;153,3608
    uint32_t gpe1_blk;154,3631
    uint8_t  pm1_evt_len;155,3654
    uint8_t  pm1_cnt_len;156,3680
    uint8_t  pm2_cnt_len;157,3706
    uint8_t  pm_tmr_len;158,3732
    uint8_t  gpe0_blk_len;159,3757
    uint8_t  gpe1_blk_len;160,3784
    uint8_t  gpe1_base;161,3811
    uint8_t  cst_cnt;162,3835
    uint16_t p_lvl2_lat;163,3857
    uint16_t p_lvl3_lat;164,3882
    uint16_t flush_size;165,3907
    uint16_t flush_stride;166,3932
    uint8_t  duty_offset;167,3959
    uint8_t  duty_width;168,3985
    uint8_t  day_alrm;169,4010
    uint8_t  mon_alrm;170,4033
    uint8_t  century;171,4056
    uint16_t iapc_boot_arch;172,4078
    uint8_t  reserved1;173,4107
    uint32_t flags;174,4131
struct acpi_20_fadt 180,4212
    struct acpi_header header;181,4234
    uint32_t firmware_ctrl;182,4265
    uint32_t dsdt;183,4293
    uint8_t  reserved0;184,4312
    uint8_t  preferred_pm_profile;185,4336
    uint16_t sci_int;186,4371
    uint32_t smi_cmd;187,4393
    uint8_t  acpi_enable;188,4415
    uint8_t  acpi_disable;189,4441
    uint8_t  s4bios_req;190,4468
    uint8_t  pstate_cnt;191,4493
    uint32_t pm1a_evt_blk;192,4518
    uint32_t pm1b_evt_blk;193,4545
    uint32_t pm1a_cnt_blk;194,4572
    uint32_t pm1b_cnt_blk;195,4599
    uint32_t pm2_cnt_blk;196,4626
    uint32_t pm_tmr_blk;197,4652
    uint32_t gpe0_blk;198,4677
    uint32_t gpe1_blk;199,4700
    uint8_t  pm1_evt_len;200,4723
    uint8_t  pm1_cnt_len;201,4749
    uint8_t  pm2_cnt_len;202,4775
    uint8_t  pm_tmr_len;203,4801
    uint8_t  gpe0_blk_len;204,4826
    uint8_t  gpe1_blk_len;205,4853
    uint8_t  gpe1_base;206,4880
    uint8_t  cst_cnt;207,4904
    uint16_t p_lvl2_lat;208,4926
    uint16_t p_lvl3_lat;209,4951
    uint16_t flush_size;210,4976
    uint16_t flush_stride;211,5001
    uint8_t  duty_offset;212,5028
    uint8_t  duty_width;213,5054
    uint8_t  day_alrm;214,5079
    uint8_t  mon_alrm;215,5102
    uint8_t  century;216,5125
    uint16_t iapc_boot_arch;217,5147
    uint8_t  reserved1;218,5176
    uint32_t flags;219,5200
    struct acpi_20_generic_address reset_reg;220,5220
    uint8_t  reset_value;221,5266
    uint8_t  reserved2[reserved2222,5292
    uint64_t x_firmware_ctrl;223,5319
    uint64_t x_dsdt;224,5349
    struct acpi_20_generic_address x_pm1a_evt_blk;225,5370
    struct acpi_20_generic_address x_pm1b_evt_blk;226,5421
    struct acpi_20_generic_address x_pm1a_cnt_blk;227,5472
    struct acpi_20_generic_address x_pm1b_cnt_blk;228,5523
    struct acpi_20_generic_address x_pm2_cnt_blk;229,5574
    struct acpi_20_generic_address x_pm_tmr_blk;230,5624
    struct acpi_20_generic_address x_gpe0_blk;231,5673
    struct acpi_20_generic_address x_gpe1_blk;232,5720
#define ACPI_LEGACY_DEVICES 238,5811
#define ACPI_8042 239,5848
#define ACPI_WBINVD 244,5922
#define ACPI_WBINVD_FLUSH 245,5959
#define ACPI_PROC_C1 246,5996
#define ACPI_P_LVL2_UP 247,6033
#define ACPI_PWR_BUTTON 248,6070
#define ACPI_SLP_BUTTON 249,6107
#define ACPI_FIX_RTC 250,6144
#define ACPI_RTC_S4 251,6181
#define ACPI_TMR_VAL_EXT 252,6218
#define ACPI_DCK_CAP 253,6255
#define ACPI_RESET_REG_SUP 254,6292
#define ACPI_SEALED_CASE 255,6330
#define ACPI_HEADLESS 256,6368
#define ACPI_CPU_SW_SLP 257,6406
#define ACPI_USE_PLATFORM_CLOCK 258,6444
struct acpi_20_facs 263,6537
    uint32_t signature;264,6559
    uint32_t length;265,6583
    uint32_t hardware_signature;266,6604
    uint32_t firmware_waking_vector;267,6637
    uint32_t global_lock;268,6674
    uint32_t flags;269,6700
    uint64_t x_firmware_waking_vector;270,6720
    uint8_t  version;271,6759
    uint8_t  reserved[reserved272,6781
#define ACPI_2_0_FACS_VERSION 275,6812
struct acpi_20_madt 280,6916
    struct acpi_header header;281,6938
    uint32_t lapic_addr;282,6969
    uint32_t flags;283,6994
struct acpi_20_hpet 290,7052
    struct acpi_header header;291,7074
    uint32_t           timer_block_id;292,7105
    struct acpi_20_generic_address addr;293,7144
    uint8_t            hpet_number;294,7185
    uint16_t           min_tick;295,7221
    uint8_t            page_protect;296,7254
#define ACPI_HPET_ADDRESS 298,7294
#define ACPI_PCAT_COMPAT 303,7365
#define ACPI_PROCESSOR_LOCAL_APIC 308,7464
#define ACPI_IO_APIC 309,7513
#define ACPI_INTERRUPT_SOURCE_OVERRIDE 310,7562
#define ACPI_NON_MASKABLE_INTERRUPT_SOURCE 311,7611
#define ACPI_LOCAL_APIC_NMI 312,7660
#define ACPI_LOCAL_APIC_ADDRESS_OVERRIDE 313,7709
#define ACPI_IO_SAPIC 314,7758
#define ACPI_PROCESSOR_LOCAL_SAPIC 315,7807
#define ACPI_PLATFORM_INTERRUPT_SOURCES 316,7856
struct acpi_20_madt_lapic 325,7998
    uint8_t  type;326,8026
    uint8_t  length;327,8045
    uint8_t  acpi_processor_id;328,8066
    uint8_t  apic_id;329,8098
    uint32_t flags;330,8120
#define ACPI_LOCAL_APIC_ENABLED 336,8216
struct acpi_20_madt_ioapic 341,8287
    uint8_t  type;342,8316
    uint8_t  length;343,8335
    uint8_t  ioapic_id;344,8356
    uint8_t  reserved;345,8380
    uint32_t ioapic_addr;346,8403
    uint32_t gsi_base;347,8429
struct acpi_20_madt_intsrcovr 350,8456
    uint8_t  type;351,8488
    uint8_t  length;352,8507
    uint8_t  bus;353,8528
    uint8_t  source;354,8546
    uint32_t gsi;355,8567
    uint16_t flags;356,8585
#define ACPI_2_0_RSDP_SIGNATURE 362,8637
#define ACPI_2_0_FACS_SIGNATURE 363,8710
#define ACPI_2_0_FADT_SIGNATURE 364,8767
#define ACPI_2_0_MADT_SIGNATURE 365,8824
#define ACPI_2_0_RSDT_SIGNATURE 366,8881
#define ACPI_2_0_XSDT_SIGNATURE 367,8938
#define ACPI_2_0_TCPA_SIGNATURE 368,8995
#define ACPI_2_0_HPET_SIGNATURE 369,9052
#define ACPI_2_0_RSDP_REVISION 374,9144
#define ACPI_2_0_FADT_REVISION 375,9180
#define ACPI_2_0_MADT_REVISION 376,9216
#define ACPI_2_0_RSDT_REVISION 377,9252
#define ACPI_2_0_XSDT_REVISION 378,9288
#define ACPI_2_0_TCPA_REVISION 379,9324
#define ACPI_2_0_HPET_REVISION 380,9360
#define ACPI_1_0_FADT_REVISION 381,9396

tools/firmware/hvmloader/acpi/mk_dsdt.c,262
static unsigned int indent_level;6,96
static void indent(8,131
static void _stmt(15,246
#define stmt(32,504
#define push_block(38,721
static void pop_block(45,988
static void pci_hotplug_notify(52,1074
static void decision_tree(57,1178
int main(74,1559

tools/firmware/hvmloader/acpi/static_tables.c,441
struct acpi_20_facs Facs 27,887
#define ACPI_PM1A_EVT_BLK_BIT_WIDTH 38,1096
#define ACPI_PM1A_EVT_BLK_BIT_OFFSET 39,1145
#define ACPI_PM1A_CNT_BLK_BIT_WIDTH 40,1194
#define ACPI_PM1A_CNT_BLK_BIT_OFFSET 41,1243
#define ACPI_PM_TMR_BLK_BIT_WIDTH 42,1292
#define ACPI_PM_TMR_BLK_BIT_OFFSET 43,1341
struct acpi_20_fadt Fadt 45,1391
struct acpi_20_rsdt Rsdt 106,3549
struct acpi_20_xsdt Xsdt 119,3968
struct acpi_20_rsdp Rsdp 133,4387

tools/firmware/hvmloader/tests.c,489
#define TEST_FAIL 25,832
#define TEST_PASS 26,852
#define TEST_SKIP 27,872
#define PD_START 36,1120
#define PT_START 37,1149
static void setup_paging(39,1185
static void start_paging(55,1579
static void stop_paging(64,1792
static int rep_io_test(76,2090
        unsigned long addr;83,2219
        uint32_t expected;84,2247
static int shadow_gs_test(135,3534
void perform_tests(193,5637
        int (* const test)198,5713
        const char *description;description199,5747

tools/firmware/hvmloader/32bitbios_support.c,78
static uint32_t relocate_32bitbios(35,1092
uint32_t highbios_setup(147,4501

tools/firmware/hvmloader/option_rom.h,1443
#define __HVMLOADER_OPTION_ROM_H__2,35
struct option_rom_header 6,92
    uint8_t signature[signature7,119
    uint8_t rom_size;8,162
    uint32_t entry_point;9,210
    uint8_t reserved[reserved10,236
    uint16_t pci_header_offset;11,262
    uint16_t expansion_header_offset;12,294
struct option_rom_pnp_header 15,361
    uint8_t signature[signature16,392
    uint8_t structure_revision;17,431
    uint8_t structure_length;18,463
    uint16_t next_header_offset;19,518
    uint8_t reserved;20,551
    uint8_t checksum;21,573
    uint32_t device_id;22,595
    uint16_t manufacturer_name_offset;23,619
    uint16_t product_name_offset;24,658
    uint8_t device_type_code[device_type_code25,692
    uint8_t device_indicators;26,725
    uint16_t boot_connection_vector;27,756
    uint16_t disconnect_vector;28,793
    uint16_t bootstap_entry_vector;29,825
    uint16_t reserved2;30,861
    uint16_t static_resource_information_vector;31,885
struct option_rom_pci_header 35,972
    uint8_t signature[signature36,1003
    uint16_t vendor_id;37,1042
    uint16_t device_id;38,1066
    uint16_t vital_product_data_offset;39,1090
    uint16_t structure_length;40,1130
    uint8_t structure_revision;41,1161
    uint8_t class_code[class_code42,1193
    uint16_t image_length;43,1220
    uint16_t image_revision;44,1247
    uint8_t code_type;45,1276
    uint8_t indicator;46,1299
    uint16_t reserved;47,1322

tools/firmware/hvmloader/smbios.c,540
get_cpu_manufacturer(72,2513
write_smbios_tables(89,2913
#define do_struct(103,3376
#undef do_struct135,4757
get_memsize(148,5127
hvm_write_smbios_tables(166,5620
smbios_entry_point_init(246,8108
smbios_type_0_init(284,9278
smbios_type_1_init(335,10851
smbios_type_3_init(393,12326
smbios_type_4_init(423,13095
smbios_type_11_init(473,14330
smbios_type_16_init(512,15367
smbios_type_17_init(536,16100
smbios_type_19_init(572,17059
smbios_type_20_init(594,17695
smbios_type_32_init(620,18470
smbios_type_127_init(639,18937

tools/firmware/hvmloader/smp.c,228
#define AP_BOOT_EIP 27,898
static int ap_callin,30,970
static int ap_callin, ap_cpuid;30,970
/*static*/ void ap_start(73,2672
static void lapic_wait_ready(82,2822
static void boot_cpu(88,2934
void smp_initialise(122,3891

tools/firmware/hvmloader/apic_regs.h,3645
#define __ASM_APICDEF_H2,24
#define APIC_DEFAULT_PHYS_BASE 4,49
#define APIC_ID 6,93
#define     APIC_ID_MASK 7,120
#define     GET_APIC_ID(8,169
#define     SET_APIC_ID(9,224
#define APIC_LVR 10,273
#define     APIC_LVR_MASK 11,300
#define     GET_APIC_VERSION(12,346
#define     GET_APIC_MAXLVT(13,394
#define     APIC_INTEGRATED(14,448
#define     APIC_XAPIC(15,496
#define APIC_TASKPRI 16,547
#define     APIC_TPRI_MASK 17,574
#define APIC_ARBPRI 18,616
#define     APIC_ARBPRI_MASK 19,643
#define APIC_PROCPRI 20,685
#define APIC_EOI 21,712
#define     APIC_EIO_ACK 22,739
#define APIC_RRR 23,780
#define APIC_LDR 24,807
#define     APIC_LDR_MASK 25,834
#define     GET_APIC_LOGICAL_ID(26,882
#define     SET_APIC_LOGICAL_ID(27,936
#define     APIC_ALL_CPUS 28,985
#define APIC_DFR 29,1027
#define     APIC_DFR_CLUSTER 30,1054
#define     APIC_DFR_FLAT 31,1104
#define APIC_SPIV 32,1154
#define     APIC_SPIV_FOCUS_DISABLED 33,1181
#define     APIC_SPIV_APIC_ENABLED 34,1225
#define APIC_ISR 35,1269
#define APIC_TMR 36,1297
#define     APIC_IRR 37,1325
#define     APIC_ESR 38,1368
#define     APIC_ESR_SEND_CS 39,1411
#define     APIC_ESR_RECV_CS 40,1456
#define     APIC_ESR_SEND_ACC 41,1501
#define     APIC_ESR_RECV_ACC 42,1546
#define     APIC_ESR_SENDILL 43,1591
#define     APIC_ESR_RECVILL 44,1636
#define     APIC_ESR_ILLREGA 45,1681
#define APIC_ICR 46,1726
#define     APIC_DEST_SELF 47,1754
#define     APIC_DEST_ALLINC 48,1799
#define     APIC_DEST_ALLBUT 49,1844
#define     APIC_ICR_RR_MASK 50,1889
#define     APIC_ICR_RR_INVALID 51,1934
#define     APIC_ICR_RR_INPROG 52,1979
#define     APIC_ICR_RR_VALID 53,2024
#define     APIC_INT_LEVELTRIG 54,2069
#define     APIC_INT_ASSERT 55,2114
#define     APIC_ICR_BUSY 56,2159
#define     APIC_DEST_LOGICAL 57,2204
#define     APIC_DEST_PHYSICAL 58,2249
#define     APIC_DM_FIXED 59,2294
#define     APIC_DM_LOWEST 60,2339
#define     APIC_DM_SMI 61,2384
#define     APIC_DM_REMRD 62,2429
#define     APIC_DM_NMI 63,2474
#define     APIC_DM_INIT 64,2519
#define     APIC_DM_STARTUP 65,2564
#define     APIC_DM_EXTINT 66,2609
#define     APIC_VECTOR_MASK 67,2654
#define APIC_ICR2 68,2699
#define     GET_APIC_DEST_FIELD(69,2727
#define     SET_APIC_DEST_FIELD(70,2781
#define APIC_LVTT 71,2828
#define APIC_LVTTHMR 72,2856
#define APIC_LVTPC 73,2884
#define APIC_LVT0 74,2912
#define     APIC_LVT_TIMER_BASE_MASK 75,2940
#define     GET_APIC_TIMER_BASE(76,2987
#define     SET_APIC_TIMER_BASE(77,3040
#define     APIC_TIMER_BASE_CLKIN 78,3089
#define     APIC_TIMER_BASE_TMBASE 79,3130
#define     APIC_TIMER_BASE_DIV 80,3171
#define     APIC_LVT_TIMER_PERIODIC 81,3212
#define     APIC_LVT_MASKED 82,3257
#define     APIC_LVT_LEVEL_TRIGGER 83,3302
#define     APIC_LVT_REMOTE_IRR 84,3347
#define     APIC_INPUT_POLARITY 85,3392
#define     APIC_SEND_PENDING 86,3437
#define     APIC_MODE_MASK 87,3482
#define     GET_APIC_DELIVERY_MODE(88,3525
#define     SET_APIC_DELIVERY_MODE(89,3578
#define         APIC_MODE_FIXED 90,3642
#define         APIC_MODE_NMI 91,3687
#define         APIC_MODE_EXTINT 92,3732
#define APIC_LVT1 93,3777
#define APIC_LVTERR 94,3805
#define APIC_TMICT 95,3833
#define APIC_TMCCT 96,3861
#define APIC_TDCR 97,3889
#define     APIC_TDR_DIV_TMBASE 98,3917
#define     APIC_TDR_DIV_1 99,3961
#define     APIC_TDR_DIV_2 100,4002
#define     APIC_TDR_DIV_4 101,4043
#define     APIC_TDR_DIV_8 102,4084
#define     APIC_TDR_DIV_16 103,4125
#define     APIC_TDR_DIV_32 104,4166
#define     APIC_TDR_DIV_64 105,4207
#define     APIC_TDR_DIV_128 106,4248

tools/firmware/hvmloader/mp_tables.c,3024
#define NR_NONPROC_ENTRIES 35,1428
#define ENTRY_TYPE_PROCESSOR 37,1463
#define ENTRY_TYPE_BUS 38,1496
#define ENTRY_TYPE_IOAPIC 39,1529
#define ENTRY_TYPE_IO_INTR 40,1562
#define ENTRY_TYPE_LOCAL_INTR 41,1595
#define CPU_FLAG_ENABLED 43,1629
#define CPU_FLAG_BSP 44,1665
#define CPU_SIG_FAMILY 47,1778
#define CPU_SIG_MODEL 48,1814
#define CPU_SIG_STEPPING 49,1850
#define CPU_SIGNATURE 50,1886
#define CPU_FEATURE_FPU 53,2047
#define CPU_FEATURE_MCE 54,2087
#define CPU_FEATURE_CX8 55,2127
#define CPU_FEATURE_APIC 56,2167
#define CPU_FEATURES 57,2207
#define BUS_TYPE_LENGTH 59,2275
#define BUS_TYPE_STR_ISA 60,2308
#define BUS_ID_ISA 61,2348
#define INTR_TYPE_INT 63,2382
#define INTR_TYPE_NMI 64,2415
#define INTR_TYPE_SMI 65,2448
#define INTR_TYPE_EXTINT 66,2481
#define INTR_MAX_NR 68,2515
struct mp_floating_pointer_struct 77,2692
    uint8_t signature[signature78,2728
    uint32_t mp_table;79,2754
    uint8_t length;80,2777
    uint8_t revision;81,2797
    uint8_t checksum;82,2819
    uint8_t feature[feature83,2841
struct mp_config_table 87,2898
    uint8_t signature[signature88,2923
    uint16_t length;89,2949
    uint8_t revision;90,2970
    uint8_t checksum;91,2992
    uint8_t oem_id[oem_id92,3014
    uint8_t vendor_id[vendor_id93,3037
    uint32_t oem_table;94,3064
    uint16_t oem_table_sz;95,3088
    uint16_t nr_entries;96,3115
    uint32_t lapic;97,3140
    uint16_t extended_length;98,3160
    uint8_t extended_checksum;99,3190
    uint8_t reserved;100,3221
struct mp_proc_entry 104,3272
    uint8_t type;105,3295
    uint8_t lapic_id;106,3313
    uint8_t lapic_version;107,3335
    uint8_t cpu_flags;108,3362
    uint32_t cpu_signature;109,3385
    uint32_t feature_flags;110,3413
    uint8_t reserved[reserved111,3441
struct mp_bus_entry 115,3489
    uint8_t type;116,3511
    uint8_t bus_id;117,3529
    uint8_t bus_type_str[bus_type_str118,3549
struct mp_ioapic_entry 122,3604
    uint8_t type;123,3629
    uint8_t ioapic_id;124,3647
    uint8_t ioapic_version;125,3670
    uint8_t ioapic_flags;126,3698
    uint32_t ioapic_addr;127,3724
struct mp_io_intr_entry 131,3782
    uint8_t type;132,3808
    uint8_t intr_type;133,3826
    uint16_t io_intr_flags;134,3849
    uint8_t src_bus_id;135,3877
    uint8_t src_bus_irq;136,3901
    uint8_t dst_ioapic_id;137,3926
    uint8_t dst_ioapic_intin;138,3953
struct mp_local_intr_entry 142,4018
    uint8_t type;143,4047
    uint8_t intr_type;144,4065
    uint16_t local_intr_flags;145,4088
    uint8_t src_bus_id;146,4119
    uint8_t src_bus_irq;147,4143
    uint8_t dst_lapic_id;148,4168
    uint8_t dst_lapic_lintin;149,4194
static void fill_mp_config_table(153,4229
static void fill_mp_proc_entry(200,5721
static void fill_mp_bus_entry(214,6162
static void fill_mp_ioapic_entry(226,6495
static void fill_mpfps(237,6813
static void *get_mp_table_start(get_mp_table_start269,7679
static void reset_bios_checksum(286,8033
void create_mp_tables(299,8378

tools/firmware/hvmloader/pci_regs.h,2703
#define __HVMLOADER_PCI_REGS_H__18,408
#define PCI_VENDOR_ID	20,442
#define PCI_DEVICE_ID	21,484
#define PCI_COMMAND	22,526
#define  PCI_COMMAND_IO	23,566
#define  PCI_COMMAND_MEMORY	24,630
#define  PCI_COMMAND_MASTER	25,700
#define  PCI_COMMAND_SPECIAL	26,759
#define  PCI_COMMAND_INVALIDATE	27,832
#define  PCI_COMMAND_VGA_PALETTE 28,907
#define  PCI_COMMAND_PARITY	29,975
#define  PCI_COMMAND_WAIT 30,1037
#define  PCI_COMMAND_SERR	31,1104
#define  PCI_COMMAND_FAST_BACK	32,1154
#define  PCI_COMMAND_INTX_DISABLE 33,1224
#define PCI_STATUS	35,1294
#define  PCI_STATUS_CAP_LIST	36,1333
#define  PCI_STATUS_66MHZ	37,1397
#define  PCI_STATUS_UDF	38,1461
#define  PCI_STATUS_FAST_BACK	39,1540
#define  PCI_STATUS_PARITY	40,1606
#define  PCI_STATUS_DEVSEL_MASK	41,1667
#define  PCI_STATUS_DEVSEL_FAST	42,1725
#define  PCI_STATUS_DEVSEL_MEDIUM	43,1764
#define  PCI_STATUS_DEVSEL_SLOW	44,1804
#define  PCI_STATUS_SIG_TARGET_ABORT	45,1843
#define  PCI_STATUS_REC_TARGET_ABORT	46,1912
#define  PCI_STATUS_REC_MASTER_ABORT	47,1978
#define  PCI_STATUS_SIG_SYSTEM_ERROR	48,2048
#define  PCI_STATUS_DETECTED_PARITY	49,2121
#define PCI_CLASS_REVISION	51,2191
#define PCI_REVISION_ID	52,2268
#define PCI_CLASS_PROG	53,2316
#define PCI_CLASS_DEVICE	54,2384
#define PCI_CACHE_LINE_SIZE	56,2434
#define PCI_LATENCY_TIMER	57,2480
#define PCI_HEADER_TYPE	58,2524
#define  PCI_HEADER_TYPE_NORMAL	59,2567
#define  PCI_HEADER_TYPE_BRIDGE	60,2602
#define  PCI_HEADER_TYPE_CARDBUS	61,2637
#define PCI_BIST	63,2673
#define  PCI_BIST_CODE_MASK	64,2709
#define  PCI_BIST_START	65,2762
#define  PCI_BIST_CAPABLE	66,2830
#define PCI_BASE_ADDRESS_0	74,3090
#define PCI_BASE_ADDRESS_1	75,3136
#define PCI_BASE_ADDRESS_2	76,3199
#define PCI_BASE_ADDRESS_3	77,3260
#define PCI_BASE_ADDRESS_4	78,3306
#define PCI_BASE_ADDRESS_5	79,3352
#define  PCI_BASE_ADDRESS_SPACE	80,3398
#define  PCI_BASE_ADDRESS_SPACE_IO	81,3462
#define  PCI_BASE_ADDRESS_SPACE_MEMORY	82,3502
#define  PCI_BASE_ADDRESS_MEM_TYPE_MASK	83,3546
#define  PCI_BASE_ADDRESS_MEM_TYPE_32	84,3591
#define  PCI_BASE_ADDRESS_MEM_TYPE_1M	85,3655
#define  PCI_BASE_ADDRESS_MEM_TYPE_64	86,3724
#define  PCI_BASE_ADDRESS_MEM_PREFETCH	87,3788
#define  PCI_BASE_ADDRESS_MEM_MASK	88,3852
#define  PCI_BASE_ADDRESS_IO_MASK	89,3897
#define PCI_CARDBUS_CIS	93,4024
#define PCI_SUBSYSTEM_VENDOR_ID	94,4054
#define PCI_SUBSYSTEM_ID	95,4091
#define PCI_ROM_ADDRESS	96,4121
#define  PCI_ROM_ADDRESS_ENABLE	97,4197
#define PCI_ROM_ADDRESS_MASK	98,4234
#define PCI_CAPABILITY_LIST	100,4275
#define PCI_INTERRUPT_LINE	103,4382
#define PCI_INTERRUPT_PIN	104,4427
#define PCI_MIN_GNT	105,4471
#define PCI_MAX_LAT	106,4510

tools/firmware/hvmloader/hvmloader.c,1034
unsigned long pci_mem_start 114,4460
unsigned long pci_mem_end 115,4505
static enum { VGA_none,117,4547
static enum { VGA_none, VGA_std,117,4547
static enum { VGA_none, VGA_std, VGA_cirrus,117,4547
static enum { VGA_none, VGA_std, VGA_cirrus, VGA_pt 117,4547
static enum { VGA_none, VGA_std, VGA_cirrus, VGA_pt } virtual_vga 117,4547
static void init_hypercalls(119,4626
static void apic_setup(153,5633
static void pci_setup(168,6176
    struct resource 175,6421
        uint32_t base,176,6443
        uint32_t base, max;176,6443
    struct bars 180,6584
        uint32_t devfn,181,6602
        uint32_t devfn, bar_reg,181,6602
        uint32_t devfn, bar_reg, bar_sz;181,6602
#define round_option_rom(384,13914
static int scan_option_rom(385,13965
static int scan_etherboot_nic(471,16956
static int pci_load_option_roms(497,17734
static void cmos_write_memory_size(537,19076
static void init_vm86_tss(567,20213
static void dump_e820_table(581,20540
static void build_e820_table(629,21836
int main(700,23968

tools/firmware/hvmloader/util.h,1016
#define __HVMLOADER_UTIL_H__2,29
#define __STR(8,136
#define STR(9,168
#define SEL_CODE16 12,232
#define SEL_DATA16 13,267
#define SEL_CODE32 14,302
#define SEL_DATA32 15,337
#define SEL_CODE64 16,372
#undef offsetof18,408
#define offsetof(19,424
#undef NULL21,478
#define NULL 22,490
void __assert_failed(24,515
#define ASSERT(26,606
void __bug(28,698
#define BUG(29,758
#define BUG_ON(30,798
#define BUILD_BUG_ON(31,847
static inline int test_bit(33,908
static inline int test_and_clear_bit(38,1016
#define pci_readb(74,1983
#define pci_readw(75,2049
#define pci_readl(76,2115
#define pci_writeb(78,2255
#define pci_writew(79,2333
#define pci_writel(80,2411
static inline uint64_t rdtsc(98,2952
static inline void cpu_relax(106,3133
#define barrier(112,3245
#define rmb(113,3298
#define wmb(114,3326
#define mb(115,3354
#define do_div(122,3589
#define hvm_info 141,4656
int printf(164,5574
#define virt_to_phys(169,5793
#define perform_tests(195,6562
#define isdigit(198,6604

tools/firmware/rombios/biossums.c,1345
typedef unsigned char byte;6,82
#define LEN_BIOS_DATA 10,152
#define MAX_OFFSET 11,182
#define BIOS_OFFSET 14,226
#define _32__LEN 22,492
#define _32__CHKSUM 23,519
#define _32__MINHDR 25,547
#define _MP__LEN 33,813
#define _MP__CHKSUM 34,840
#define _MP__MINHDR 36,868
#define PCMP_BASELEN 44,1134
#define PCMP_CHKSUM 45,1161
#define PCMP_EXT_LEN 46,1188
#define PCMP_EXT_CHKSUM 47,1215
#define PCMP_MINHDR 49,1243
#define _PIR_LEN 57,1509
#define _PIR_CHKSUM 58,1536
#define _PIR_MINHDR 60,1564
byte bios_data[bios_data68,1830
int main(71,1863
void check(216,6170
long chksum_bios_get_offset(225,6304
byte chksum_bios_calc_value(231,6391
byte chksum_bios_get_value(245,6650
void chksum_bios_set_value(251,6748
byte chksum__32__calc_value(257,6856
long chksum__32__get_offset(277,7320
byte chksum__32__get_value(297,7762
void chksum__32__set_value(304,7952
byte chksum__mp__calc_value(311,8151
long chksum__mp__get_offset(331,8600
byte chksum__mp__get_value(351,9042
void chksum__mp__set_value(358,9225
byte chksum_pcmp_calc_value(365,9418
long chksum_pcmp_get_offset(391,10152
byte chksum_pcmp_get_value(411,10594
void chksum_pcmp_set_value(418,10779
byte chksum__pir_calc_value(425,10974
long chksum__pir_get_offset(446,11482
byte chksum__pir_get_value(466,11924
void chksum__pir_set_value(473,12110

tools/firmware/rombios/tcgbios.c,101
	add sp,35,1226
tcpa_do_measure_POSTs(40,1257
#define TCG_MAGIC 58,1610
int1a_function32(60,1647

tools/firmware/rombios/32bitgateway.c,2311
#define MAX_ARG_BYTES 40,1668
#define REAL_MODE_CODE_OFFSET 42,1694
#define PM_32BIT_CS 45,1786
#define PM_16BIT_CS 46,1842
#define PM_32BIT_DS 47,1898
#define PM_16BIT_DS 48,1954
    .word word52,2035
    .byte byte53,2049
    .word 0xffff,xffff55,2090
    .byte 0x00,x0056,2115
    .byte 0x00, 0x9b,x9b56,2115
    .byte 0x00, 0x9b, 0xcf,xcf56,2115
    .word 0xffff,xffff58,2171
    .byte REAL_MODE_CODE_OFFSET >> 16, 0x9b,x9b59,2196
    .byte REAL_MODE_CODE_OFFSET >> 16, 0x9b, 0x8f,x8f59,2196
    .word 0xffff,xffff61,2274
    .byte 0x0,x062,2299
    .byte 0x0, 0x93,x9362,2299
    .byte 0x0, 0x93, 0xcf,xcf62,2299
    .word 0xffff,xffff64,2353
    .byte 0x0,x065,2378
    .byte 0x0, 0x93,x9365,2378
    .byte 0x0, 0x93, 0x8f,x8f65,2378
Upcall:Upcall76,2578
    ; Do an upcall into 32 bit space77,2586
    ; Input:Input79,2629
    ; bx: index of function to call80,2642
    ; Ouput:Ouput81,2678
    ; dx,82,2691
    ; Save caller state,84,2757
#define esp_off 85,2815
#define ss_off 86,2837
#define es_off 87,2859
#define ds_off 88,2881
#define flags_off 89,2903
#define retaddr_off 90,2926
#define args_off 91,2949
    push esp97,3026
    and esp,100,3086
    xor eax,101,3107
    mov ax,102,3124
    shl eax,103,3139
    add esp,104,3155
    add esp, eax104,3155
    mov eax,109,3241
    or al,110,3258
    or al, #0x1 x1110,3258
    mov cr0,111,3295
    mov ax,115,3392
    mov ds,116,3417
    mov es,117,3432
    mov ss,118,3447
    mov ss, ax118,3447
    mov ecx,121,3512
    mov eax,125,3607
    add esp,127,3690
    mov ecx,128,3718
    mov ecx, eax 128,3718
    mov ecx, eax  ; Result in ecx128,3718
    xor eax,131,3791
    mov ax,132,3808
    mov bx,133,3832
    mov bx, ax 133,3832
    shl eax,134,3871
    sub esp,135,3886
    sub esp, eax135,3886
    jmpf upcall3,138,3930
    mov ax,141,3980
    mov ds,142,4005
    mov es,143,4020
    mov ss,144,4035
    mov eax,145,4050
    and al,146,4067
    and al, #0xfe xfe146,4067
    mov cr0,147,4106
    jmpf upcall4,148,4123
    lgdt realmode_gdtdesc151,4187
    mov ss,154,4241
    mov ss, bx154,4241
    mov eax,157,4296
    ror eax,158,4313
    mov dx,159,4330
    ror eax,160,4345
    mov bx,171,4489
#define X(175,4526
#undef X177,4607

tools/firmware/rombios/rombios.c,50861
#define uint8_t 29,1224
#define uint16_t 30,1254
#define uint32_t 31,1286
#define HVMASSIST34,1351
#undef HVMTEST35,1369
#undef NO_PIO3239,1500
#define DEBUG_ATA 139,5574
#define DEBUG_INT13_HD 140,5603
#define DEBUG_INT13_CD 141,5632
#define DEBUG_INT13_ET 142,5661
#define DEBUG_INT13_FL 143,5690
#define DEBUG_INT15 144,5719
#define DEBUG_INT16 145,5748
#define DEBUG_INT1A 146,5777
#define DEBUG_INT74 147,5806
#define DEBUG_APM 148,5835
#define BX_CPU 150,5865
#define BX_USE_PS2_MOUSE 151,5892
#define BX_CALL_INT15_4F 152,5919
#define BX_USE_EBDA 153,5946
#define BX_SUPPORT_FLOPPY 154,5973
#define BX_FLOPPY_ON_CNT 155,6001
#define BX_PCIBIOS 156,6047
#define BX_APM 157,6074
#define BX_USE_ATADRV 159,6102
#define BX_ELTORITO_BOOT 160,6129
#define BX_TCGBIOS 162,6157
#define BX_PMM 164,6223
#define BX_MAX_ATA_INTERFACES 166,6279
#define BX_MAX_ATA_DEVICES 167,6313
#define BX_VIRTUAL_PORTS 169,6372
#define BX_DEBUG_SERIAL 170,6434
#define SYS_MODEL_ID 173,6513
#define SYS_SUBMODEL_ID 174,6543
#define BIOS_REVISION 175,6573
#define BIOS_CONFIG_TABLE 176,6600
#  define BIOS_BUILD_DATE 179,6658
#define E820_SEG 182,6703
#define EBDA_SEG 186,6882
#define EBDA_SIZE 187,6916
#define BASE_MEM_IN_K 188,6968
#define IPL_TABLE_OFFSET 191,7081
#define IPL_TABLE_ENTRIES 192,7141
#define IPL_COUNT_OFFSET 193,7172
#define IPL_SEQUENCE_OFFSET 194,7250
#define IPL_BOOTFIRST_OFFSET 195,7315
#define IPL_SIZE 196,7384
#define IPL_TYPE_FLOPPY 197,7418
#define IPL_TYPE_HARDDISK 198,7452
#define IPL_TYPE_CDROM 199,7486
#define IPL_TYPE_BEV 200,7520
#define PCI_FIXED_HOST_BRIDGE 223,8255
#define ASM_START 240,8687
#define ASM_END 241,8710
MACRO HALT254,8814
  ;; The line number is then sent to the PANIC_PORT,256,8894
  ;; The line number is then sent to the PANIC_PORT, causing Bochs/PlexPlex256,8894
  ;; to print a BX_PANIC message.  This will normally halt the simulation257,8966
  ;; However,259,9106
  mov dx,261,9197
  mov ax,262,9218
  out dx,263,9231
  mov dx,265,9249
  mov ax,266,9264
  out dx,267,9277
  mov ax,278,9368
  mov ax,280,9396
typedef unsigned char  Bit8u;286,9441
typedef unsigned short Bit16u;287,9471
typedef unsigned short bx_bool;288,9502
typedef unsigned long  Bit32u;289,9534
  memsetb(298,9742
  memcpyb(337,10310
  memcpyd(384,11035
  read_dword(434,11855
  write_dword(460,12259
  ASM_START489,12797
      and ax,495,12858
      and bx,497,12887
    ret498,12906
      add ax,504,12963
      adc bx,506,12992
    ret507,13011
    and eax,512,13057
    shl ebx,513,13082
    or  eax,514,13099
    shr ebx,515,13116
      cmp eax,517,13144
    ret518,13174
    sub ax,524,13231
    sbb bx,526,13258
    ret527,13275
    and eax,532,13321
    shl ebx,533,13346
    or  eax,534,13363
    mul eax,536,13391
    mov ebx,537,13419
    shr ebx,538,13436
    ret539,13453
    ret546,13533
    or  ax,552,13587
    or  bx,554,13614
    ret555,13631
    ret562,13711
    and eax,567,13757
    shl ebx,568,13782
    or  eax,569,13799
    shr ebx,570,13816
    test eax,571,13833
    ret572,13851
    mov  cx,576,13886
    and  eax,578,13919
    shl  ebx,579,13945
    or   eax,580,13963
    shr  eax,582,13993
    mov  ebx,584,14028
    shr  ebx,585,14046
    ret587,14076
    mov  cx,592,14119
    and  eax,594,14152
    shl  ebx,595,14178
    or   eax,596,14196
    shl  eax,598,14226
    mov  ebx,600,14261
    shr  ebx,601,14279
    xor dx,611,14366
    and  eax,616,14410
    shl  ebx,617,14436
    or   eax,618,14454
    xor  edx,619,14472
    mov  bx,621,14501
    shl  ebx,622,14521
    mov  bx,624,14550
    mov  ebx,626,14582
    shr  ebx,627,14600
  unsigned char filler1[filler1636,14739
  unsigned char filler2[filler2637,14771
  Bit16u ticks_low;638,14802
  Bit16u ticks_high;639,14822
  Bit8u  midnight_flag;640,14843
  } bios_data_t;641,14867
#define BiosData 643,14885
    Bit16u heads;647,14961
    Bit16u cylinders;648,14995
    Bit16u spt;649,15033
    } chs_t;650,15077
    Bit16u iobase1;654,15131
    Bit16u iobase2;655,15151
    Bit8u  prefix;656,15171
    Bit8u  unused;657,15190
    Bit8u  irq;658,15209
    Bit8u  blkcount;659,15225
    Bit8u  dma;660,15246
    Bit8u  pio;661,15262
    Bit16u options;662,15278
    Bit16u reserved;663,15298
    Bit8u  revision;664,15319
    Bit8u  checksum;665,15340
    } dpte_t;666,15361
    Bit8u  iface;669,15395
    Bit16u iobase1;670,15434
    Bit16u iobase2;671,15472
    Bit8u  irq;672,15510
    } ata_channel_t;673,15542
    Bit8u  type;676,15583
    Bit8u  device;677,15657
    Bit8u  removable;678,15732
    Bit8u  lock;679,15782
    Bit8u  mode;680,15838
    Bit16u blksize;681,15921
    Bit8u  translation;683,15961
    chs_t  lchs;684,16009
    chs_t  pchs;685,16049
    Bit32u sectors_low;687,16091
    Bit32u sectors_high;688,16139
    } ata_device_t;689,16164
    ata_channel_t channels[channels693,16229
    ata_device_t  devices[devices696,16305
    Bit8u  hdcount,699,16415
    Bit8u  hdcount, hdidmap[hdidmap699,16415
    Bit8u  cdcount,702,16521
    Bit8u  cdcount, cdidmap[cdidmap702,16521
    dpte_t dpte;705,16600
    Bit16u trsfsectors;708,16664
    Bit32u trsfbytes;709,16688
    } ata_t;711,16711
    Bit8u  active;716,16801
    Bit8u  media;717,16820
    Bit8u  emulated_drive;718,16838
    Bit8u  controller_index;719,16865
    Bit16u device_spec;720,16894
    Bit32u ilba;721,16918
    Bit16u buffer_segment;722,16935
    Bit16u load_segment;723,16962
    Bit16u sector_count;724,16987
    chs_t  vdevice;727,17035
    } cdemu_t;728,17055
#define X(731,17098
#undef X733,17166
    unsigned char ebda_size;742,17529
    unsigned char cmos_shutdown_status;743,17558
    unsigned char filler1[filler1744,17598
    unsigned char fdpt0[fdpt0747,17688
    unsigned char fdpt1[fdpt1748,17719
    unsigned char filler2[filler2750,17751
    ata_t   ata;753,17808
    cdemu_t cdemu;757,17879
    } ebda_data_t;759,17925
  #define EBDA_CMOS_SHUTDOWN_STATUS_OFFSET 761,17945
  #define EbdaData 762,17990
    Bit8u  size;766,18091
    Bit8u  reserved;767,18108
    Bit16u count;768,18129
    Bit16u offset;769,18147
    Bit16u segment;770,18166
    Bit32u lba1;771,18186
    Bit32u lba2;772,18203
    } int13ext_t;773,18220
  #define Int13Ext 775,18239
    Bit16u  size;779,18333
    Bit16u  infos;780,18351
    Bit32u  cylinders;781,18370
    Bit32u  heads;782,18393
    Bit32u  spt;783,18412
    Bit32u  sector_count1;784,18429
    Bit32u  sector_count2;785,18456
    Bit16u  blksize;786,18483
    Bit16u  dpte_offset;787,18504
    Bit16u  dpte_segment;788,18529
    Bit16u  key;789,18555
    Bit8u   dpi_length;790,18572
    Bit8u   reserved1;791,18596
    Bit16u  reserved2;792,18619
    Bit8u   host_bus[host_bus793,18642
    Bit8u   iface_type[iface_type794,18667
    Bit8u   iface_path[iface_path795,18694
    Bit8u   device_path[device_path796,18721
    Bit8u   reserved3;797,18749
    Bit8u   checksum;798,18772
    } dpt_t;799,18794
  #define Int13DPT 801,18808
      Bit16u di,808,18907
      Bit16u di, si,808,18907
      Bit16u di, si, bp,808,18907
      Bit16u di, si, bp, sp;808,18907
      Bit16u bx,809,18936
      Bit16u bx, dx,809,18936
      Bit16u bx, dx, cx,809,18936
      Bit16u bx, dx, cx, ax;809,18936
      } r16;810,18965
      Bit16u filler[filler812,18991
      Bit8u  bl,813,19015
      Bit8u  bl, bh,813,19015
      Bit8u  bl, bh, dl,813,19015
      Bit8u  bl, bh, dl, dh,813,19015
      Bit8u  bl, bh, dl, dh, cl,813,19015
      Bit8u  bl, bh, dl, dh, cl, ch,813,19015
      Bit8u  bl, bh, dl, dh, cl, ch, al,813,19015
      Bit8u  bl, bh, dl, dh, cl, ch, al, ah;813,19015
      } r8;814,19060
    } u;815,19072
  } pusha_regs_t;816,19081
    Bit32u edi,821,19137
    Bit32u edi, esi,821,19137
    Bit32u edi, esi, ebp,821,19137
    Bit32u edi, esi, ebp, esp;821,19137
    Bit32u ebx,822,19168
    Bit32u ebx, edx,822,19168
    Bit32u ebx, edx, ecx,822,19168
    Bit32u ebx, edx, ecx, eax;822,19168
    } r32;823,19199
    Bit16u di,825,19221
    Bit16u di, filler1,825,19221
    Bit16u di, filler1, si,825,19221
    Bit16u di, filler1, si, filler2,825,19221
    Bit16u di, filler1, si, filler2, bp,825,19221
    Bit16u di, filler1, si, filler2, bp, filler3,825,19221
    Bit16u di, filler1, si, filler2, bp, filler3, sp,825,19221
    Bit16u di, filler1, si, filler2, bp, filler3, sp, filler4;825,19221
    Bit16u bx,826,19284
    Bit16u bx, filler5,826,19284
    Bit16u bx, filler5, dx,826,19284
    Bit16u bx, filler5, dx, filler6,826,19284
    Bit16u bx, filler5, dx, filler6, cx,826,19284
    Bit16u bx, filler5, dx, filler6, cx, filler7,826,19284
    Bit16u bx, filler5, dx, filler6, cx, filler7, ax,826,19284
    Bit16u bx, filler5, dx, filler6, cx, filler7, ax, filler8;826,19284
    } r16;827,19347
    Bit32u filler[filler829,19369
    Bit8u  bl,830,19391
    Bit8u  bl, bh;830,19391
    Bit16u filler1;831,19410
    Bit8u  dl,832,19430
    Bit8u  dl, dh;832,19430
    Bit16u filler2;833,19449
    Bit8u  cl,834,19469
    Bit8u  cl, ch;834,19469
    Bit16u filler3;835,19488
    Bit8u  al,836,19508
    Bit8u  al, ah;836,19508
    Bit16u filler4;837,19527
    } r8;838,19547
  } u;839,19557
} pushad_regs_t;840,19564
      Bit16u flags;845,19622
      } r16;846,19642
      Bit8u  flagsl;848,19668
      Bit8u  flagsh;849,19689
      } r8;850,19710
    } u;851,19722
  } flags_t;852,19731
#define SetCF(854,19745
#define SetZF(855,19786
#define ClearCF(856,19827
#define ClearZF(857,19868
#define GetCF(858,19909
  Bit16u ip;861,19969
  Bit16u cs;862,19982
  flags_t flags;863,19995
  } iret_addr_t;864,20012
  Bit16u type;867,20047
  Bit16u flags;868,20062
  Bit32u vector;869,20078
  Bit32u description;870,20095
  Bit32u reserved;871,20117
  } ipl_entry_t;872,20136
static char bios_cvs_version_string[bios_cvs_version_string967,22967
#define BIOS_COPYRIGHT_STRING 969,23059
#  define BX_DEBUG_ATA(972,23175
#  define BX_DEBUG_ATA(974,23222
#  define BX_DEBUG_INT13_HD(977,23277
#  define BX_DEBUG_INT13_HD(979,23329
#  define BX_DEBUG_INT13_CD(982,23389
#  define BX_DEBUG_INT13_CD(984,23441
#  define BX_DEBUG_INT13_ET(987,23501
#  define BX_DEBUG_INT13_ET(989,23553
#  define BX_DEBUG_INT13_FL(992,23613
#  define BX_DEBUG_INT13_FL(994,23665
#  define BX_DEBUG_INT15(997,23722
#  define BX_DEBUG_INT15(999,23771
#  define BX_DEBUG_INT16(1002,23825
#  define BX_DEBUG_INT16(1004,23874
#  define BX_DEBUG_INT1A(1007,23928
#  define BX_DEBUG_INT1A(1009,23977
#  define BX_DEBUG_INT74(1012,24031
#  define BX_DEBUG_INT74(1014,24080
#define SET_AL(1017,24119
#define SET_BL(1018,24170
#define SET_CL(1019,24221
#define SET_DL(1020,24272
#define SET_AH(1021,24323
#define SET_BH(1022,24381
#define SET_CH(1023,24439
#define SET_DH(1024,24497
#define GET_AL(1026,24556
#define GET_BL(1027,24589
#define GET_CL(1028,24622
#define GET_DL(1029,24655
#define GET_AH(1030,24688
#define GET_BH(1031,24717
#define GET_CH(1032,24746
#define GET_DH(1033,24775
#define GET_ELDL(1035,24805
#define GET_ELDH(1036,24842
#define SET_CF(1038,24876
#define CLEAR_CF(1039,24913
#define GET_CF(1040,24950
#define SET_ZF(1042,24989
#define CLEAR_ZF(1043,25026
#define GET_ZF(1044,25063
#define UNSUPPORTED_FUNCTION 1046,25102
#define none 1048,25137
#define MAX_SCAN_CODE 1049,25152
  Bit16u normal;1052,25196
  Bit16u shift;1053,25213
  Bit16u control;1054,25229
  Bit16u alt;1055,25247
  Bit8u lock_flags;1056,25261
  } scan_to_scanascii[scan_to_scanascii1057,25281
inb(1150,30454
inw(1168,30624
outb(1186,30781
outw(1208,31012
outb_cmos(1230,31233
inb_cmos(1248,31449
init_rtc(1264,31617
rtc_updating(1273,31729
read_byte(1296,32425
read_word(1319,32718
write_byte(1342,33009
write_word(1368,33363
get_CS(1394,33720
get_SS(1402,33775
fixup_base_mem_in_k(1411,33843
void enable_rom_write_access(1421,34220
void disable_rom_write_access(1426,34284
#define BX_DEBUG_PORT 1435,34434
#define UART_RBR 1438,34475
#define UART_THR 1439,34497
#define UART_IER 1442,34534
#define UART_IIR 1443,34556
#define UART_FCR 1444,34578
#define UART_LCR 1445,34600
#define UART_MCR 1446,34622
#define UART_DLL 1447,34644
#define UART_DLM 1448,34666
#define UART_LSR 1451,34702
#define UART_MSR 1452,34724
#define UART_SCR 1453,34746
int uart_can_tx_byte(1455,34769
void uart_wait_to_tx_byte(1461,34873
void uart_wait_until_sent(1467,34979
void uart_tx_byte(1473,35092
wrch(1484,35296
send(1503,35466
put_int(1525,35898
put_uint(1541,36204
put_luint(1558,36538
void put_str(1574,36865
delay_ticks(1588,37061
check_for_keystroke(1629,37790
get_keystroke(1644,37942
delay_ticks_and_check_for_keystroke(1654,38031
bios_printf(1674,38589
keyboard_init(1798,42015
keyboard_panic(1951,46209
#define CMOS_SHUTDOWN_S3 1960,46392
machine_reset(1965,46600
clobber_entry_point(1994,47738
shutdown_status_panic(2008,48254
void s3_resume_panic(2014,48373
print_bios_banner(2024,48656
static char drivetypes[drivetypes2065,49774
init_boot_vectors(2068,49864
get_boot_vector(2105,51000
interactive_bootkey(2121,51436
print_boot_device(2198,53326
print_boot_failure(2223,54146
print_cdromboot_failure(2244,54742
nmi_handler_msg(2253,54905
int18_panic_msg(2259,54969
log_bios_start(2265,55034
set_enable_a20(2274,55211
debugger_on(2294,55520
debugger_off(2300,55568
s3_resume(2306,55614
#define ATA_CB_DATA 2344,56650
#define ATA_CB_ERR 2345,56719
#define ATA_CB_FR 2346,56788
#define ATA_CB_SC 2347,56857
#define ATA_CB_SN 2348,56926
#define ATA_CB_CL 2349,56995
#define ATA_CB_CH 2350,57064
#define ATA_CB_DH 2351,57133
#define ATA_CB_STAT 2352,57202
#define ATA_CB_CMD 2353,57271
#define ATA_CB_ASTAT 2354,57340
#define ATA_CB_DC 2355,57409
#define ATA_CB_DA 2356,57478
#define ATA_CB_ER_ICRC 2358,57548
#define ATA_CB_ER_BBK 2359,57604
#define ATA_CB_ER_UNC 2360,57652
#define ATA_CB_ER_MC 2361,57708
#define ATA_CB_ER_IDNF 2362,57759
#define ATA_CB_ER_MCR 2363,57810
#define ATA_CB_ER_ABRT 2364,57869
#define ATA_CB_ER_NTK0 2365,57923
#define ATA_CB_ER_NDAM 2366,57979
#define ATA_CB_ER_P_SNSKEY 2368,58041
#define ATA_CB_ER_P_MCR 2369,58101
#define ATA_CB_ER_P_ABRT 2370,58165
#define ATA_CB_ER_P_EOM 2371,58222
#define ATA_CB_ER_P_ILI 2372,58278
#define ATA_CB_SC_P_TAG 2375,58411
#define ATA_CB_SC_P_REL 2376,58465
#define ATA_CB_SC_P_IO 2377,58516
#define ATA_CB_SC_P_CD 2378,58563
#define ATA_CB_DH_DEV0 2381,58654
#define ATA_CB_DH_DEV1 2382,58704
#define ATA_CB_DH_LBA 2383,58754
#define ATA_CB_STAT_BSY 2386,58838
#define ATA_CB_STAT_RDY 2387,58877
#define ATA_CB_STAT_DF 2388,58917
#define ATA_CB_STAT_WFT 2389,58964
#define ATA_CB_STAT_SKC 2390,59021
#define ATA_CB_STAT_SERV 2391,59069
#define ATA_CB_STAT_DRQ 2392,59111
#define ATA_CB_STAT_CORR 2393,59158
#define ATA_CB_STAT_IDX 2394,59202
#define ATA_CB_STAT_ERR 2395,59242
#define ATA_CB_STAT_CHK 2396,59288
#define ATA_CB_DC_HD15 2399,59372
#define ATA_CB_DC_SRST 2400,59438
#define ATA_CB_DC_NIEN 2401,59483
#define ATA_CMD_CFA_ERASE_SECTORS 2404,59594
#define ATA_CMD_CFA_REQUEST_EXT_ERR_CODE 2405,59644
#define ATA_CMD_CFA_TRANSLATE_SECTOR 2406,59694
#define ATA_CMD_CFA_WRITE_MULTIPLE_WO_ERASE 2407,59744
#define ATA_CMD_CFA_WRITE_SECTORS_WO_ERASE 2408,59794
#define ATA_CMD_CHECK_POWER_MODE1 2409,59844
#define ATA_CMD_CHECK_POWER_MODE2 2410,59894
#define ATA_CMD_DEVICE_RESET 2411,59944
#define ATA_CMD_EXECUTE_DEVICE_DIAGNOSTIC 2412,59994
#define ATA_CMD_FLUSH_CACHE 2413,60044
#define ATA_CMD_FORMAT_TRACK 2414,60094
#define ATA_CMD_IDENTIFY_DEVICE 2415,60144
#define ATA_CMD_IDENTIFY_DEVICE_PACKET 2416,60194
#define ATA_CMD_IDENTIFY_PACKET_DEVICE 2417,60244
#define ATA_CMD_IDLE1 2418,60294
#define ATA_CMD_IDLE2 2419,60344
#define ATA_CMD_IDLE_IMMEDIATE1 2420,60394
#define ATA_CMD_IDLE_IMMEDIATE2 2421,60444
#define ATA_CMD_INITIALIZE_DRIVE_PARAMETERS 2422,60494
#define ATA_CMD_INITIALIZE_DEVICE_PARAMETERS 2423,60544
#define ATA_CMD_NOP 2424,60594
#define ATA_CMD_PACKET 2425,60644
#define ATA_CMD_READ_BUFFER 2426,60694
#define ATA_CMD_READ_DMA 2427,60744
#define ATA_CMD_READ_DMA_QUEUED 2428,60794
#define ATA_CMD_READ_MULTIPLE 2429,60844
#define ATA_CMD_READ_SECTORS 2430,60894
#define ATA_CMD_READ_VERIFY_SECTORS 2431,60944
#define ATA_CMD_RECALIBRATE 2432,60994
#define ATA_CMD_REQUEST_SENSE 2433,61044
#define ATA_CMD_SEEK 2434,61094
#define ATA_CMD_SET_FEATURES 2435,61144
#define ATA_CMD_SET_MULTIPLE_MODE 2436,61194
#define ATA_CMD_SLEEP1 2437,61244
#define ATA_CMD_SLEEP2 2438,61294
#define ATA_CMD_STANDBY1 2439,61344
#define ATA_CMD_STANDBY2 2440,61394
#define ATA_CMD_STANDBY_IMMEDIATE1 2441,61444
#define ATA_CMD_STANDBY_IMMEDIATE2 2442,61494
#define ATA_CMD_WRITE_BUFFER 2443,61544
#define ATA_CMD_WRITE_DMA 2444,61594
#define ATA_CMD_WRITE_DMA_QUEUED 2445,61644
#define ATA_CMD_WRITE_MULTIPLE 2446,61694
#define ATA_CMD_WRITE_SECTORS 2447,61744
#define ATA_CMD_WRITE_VERIFY 2448,61794
#define ATA_IFACE_NONE 2450,61845
#define ATA_IFACE_ISA 2451,61876
#define ATA_IFACE_PCI 2452,61907
#define ATA_TYPE_NONE 2454,61939
#define ATA_TYPE_UNKNOWN 2455,61970
#define ATA_TYPE_ATA 2456,62001
#define ATA_TYPE_ATAPI 2457,62032
#define ATA_DEVICE_NONE 2459,62064
#define ATA_DEVICE_HD 2460,62094
#define ATA_DEVICE_CDROM 2461,62124
#define ATA_MODE_NONE 2463,62155
#define ATA_MODE_PIO16 2464,62185
#define ATA_MODE_PIO32 2465,62215
#define ATA_MODE_ISADMA 2466,62245
#define ATA_MODE_PCIDMA 2467,62275
#define ATA_MODE_USEIRQ 2468,62305
#define ATA_TRANSLATION_NONE 2470,62336
#define ATA_TRANSLATION_LBA 2471,62368
#define ATA_TRANSLATION_LARGE 2472,62400
#define ATA_TRANSLATION_RECHS 2473,62432
#define ATA_DATA_NO 2475,62465
#define ATA_DATA_IN 2476,62495
#define ATA_DATA_OUT 2477,62525
void ata_init(2482,62751
#define TIMEOUT 2525,64751
#define BSY 2526,64769
#define NOT_BSY 2527,64783
#define NOT_BSY_DRQ 2528,64801
#define NOT_BSY_NOT_DRQ 2529,64823
#define NOT_BSY_RDY 2530,64849
#define IDE_TIMEOUT 2532,64872
static int await_ide(2535,64946
void ata_detect(2581,66549
void   ata_reset(2897,78246
Bit16u ata_cmd_non_data(2951,79746
Bit16u ata_cmd_data_in(2966,80266
Bit16u ata_cmd_data_out(3117,85165
Bit16u ata_cmd_packet(3266,89953
atapi_get_sense(3543,97388
atapi_is_ready(3565,97827
atapi_is_cdrom(3644,100116
cdemu_init(3674,100911
cdemu_isactive(3683,101084
cdemu_emulated_drive(3691,101214
static char isotag[isotag3698,101350
static char eltorito[eltorito3699,101381
cdrom_boot(3704,101494
int14_function(3866,107692
int15_function(3942,109841
int15_function_mouse(4254,118577
void set_e820_range(4571,130059
int15_function32(4594,130561
       break;4872,140229
      regs.u.r8.ah ah4879,140466
      break;4880,140509
int16_function(4886,140561
dequeue_key(5033,144894
static char panic_msg_keyb_buffer_full[panic_msg_keyb_buffer_full5073,145796
inhibit_mouse_int_and_events(5076,145884
enable_mouse_int_and_events(5098,146573
send_to_mouse_ctrl(5118,147168
get_mouse_data(5133,147423
set_kbd_command_byte(5150,147640
int09_function(5162,147881
enqueue_key(5350,153409
int74_function(5383,154137
#define SET_DISK_RET_STATUS(5428,155300
int13_harddisk(5433,155398
int13_cdrom(5842,170543
int13_eltorito(6196,182549
int13_cdemu(6266,185378
outLBA(6470,192207
int13_harddisk(6523,193288
static char panic_msg_reg12h[panic_msg_reg12h7046,207567
static char panic_msg_reg19h[panic_msg_reg19h7047,207634
get_hd_geometry(7050,207727
void floppy_reset_controller(7099,208831
void floppy_prepare_controller(7114,209099
floppy_media_known(7160,210009
floppy_media_sense(7187,210477
floppy_drive_recal(7303,213532
floppy_drive_exists(7350,214459
int13_diskette_function(7368,214739
int13_diskette_function(8065,236389
set_diskette_ret_status(8090,236894
set_diskette_current_cyl(8097,236989
determine_floppy_media(8107,237181
int17_function(8152,238061
int18_function(8197,239216
int1a_function(8397,244538
int70_function(8601,251747
ASM_START8654,253259
  push ds 8661,253430
  push #0x00 x008662,253459
  jcxz int74_done8669,253727
  push 0x040E x040E8674,253800
  push 0x040E     ;; push 0000:040E E8674,253800
  push  dx8736,255049
  jmp   _int13_cdemu 8762,255454
  and   dl,8765,255516
  and   dl,#0xE0 xE08765,255516
  cmp   al,8766,255591
  cmp   al,dl 8766,255591
  jne   int13_cdemu_inactive 8767,255642
  push  dx 8799,256040
  pop   ds8808,256180
  ;; now the 16-bit registers can be restored with:with8810,256192
  ;; pop ds;8811,256244
  ;; pop ds; pop es;8811,256244
  ;; pop ds; pop es; popa;8811,256244
  ;; pop ds; pop es; popa; iret8811,256244
  ;; arguments passed to functions should be8812,256276
  ;; DS,8813,256321
  ;; DS, ES,8813,256321
  ;; DS, ES, DI,8813,256321
  ;; DS, ES, DI, SI,8813,256321
  ;; DS, ES, DI, SI, BP,8813,256321
  ;; DS, ES, DI, SI, BP, ELDX,8813,256321
  ;; DS, ES, DI, SI, BP, ELDX, BX,8813,256321
  ;; DS, ES, DI, SI, BP, ELDX, BX, DX,8813,256321
  ;; DS, ES, DI, SI, BP, ELDX, BX, DX, CX,8813,256321
  ;; DS, ES, DI, SI, BP, ELDX, BX, DX, CX, AX,8813,256321
  ;; DS, ES, DI, SI, BP, ELDX, BX, DX, CX, AX, IP,8813,256321
  ;; DS, ES, DI, SI, BP, ELDX, BX, DX, CX, AX, IP, CS,8813,256321
  test  dl,8815,256383
  cmp   dl,8825,256513
  shr   ebx,8831,256684
  shl   ebx,8837,256746
int13_disk:int13_disk8845,256806
  shr   eax,8847,256864
  shl   eax,8851,256927
  iret8857,256981
int18_handler:int18_handler8862,257025
  mov  ax,8865,257109
  mov  sp,8866,257128
  mov  ax,8867,257142
  mov  ss,8868,257161
  mov  ss, ax8868,257161
  ;; The first time we do this it will have been set to -1 so 8870,257176
  xor  ax,8872,257273
  mov  ds,8873,257287
  mov  bx,8874,257301
  mov  bx, word ptr 8874,257301
  mov  ds,8875,257351
  mov  ds, bx 8875,257351
  mov  bx,8876,257400
  mov  bx, IPL_SEQUENCE_OFFSET 8876,257400
  inc  bx 8877,257467
  mov  IPL_SEQUENCE_OFFSET,8878,257507
  mov  IPL_SEQUENCE_OFFSET, bx 8878,257507
  mov  ds,8879,257558
  mov  ds, ax 8879,257558
  int  #0x18x188887,257763
int19_relocated:int19_relocated8892,257813
int19_relocated: ;; Boot function,8892,257813
int19_relocated: ;; Boot function, relocated8892,257813
  ;; *** Warning: INT 19h resets the whole machine 8895,257864
  ;; Because PV drivers in HVM guests detach some of the emulated devices,8897,257925
  ;; it is not safe to do a soft reboot by just dropping to real mode and8898,258001
  ;; reset the whole machine.  When it comes back up,8901,258210
  ;; reset the whole machine.  When it comes back up, the normal BIOS 8901,258210
  ;; boot sequence will start,8902,258281
  mov  ax,8906,258386
  mov  sp,8907,258405
  mov  ax,8908,258419
  mov  ss,8909,258438
  call _machine_reset8911,258453
int1c_handler:int1c_handler8916,258512
  iret8917,258546
  xor  ax,8924,258646
  mov  ds,8925,258660
  mov  al,8927,258675
  mov  0x043e,x043e8928,258692
  mov  0x043e, al 8928,258692
  mov  0x043e, al ;; drive 0 & 1 uncalibrated,8928,258692
  mov  0x043f,x043f8930,258766
  mov  0x043f, al 8930,258766
  mov  0x043f, al  ;; diskette motor status: read op,8930,258766
  mov  0x043f, al  ;; diskette motor status: read op, drive0,8930,258766
  mov  0x0440,x04408932,258840
  mov  0x0440, al 8932,258840
  mov  0x0441,x04418933,258905
  mov  0x0441, al 8933,258905
  mov  0x0443,x04438936,259034
  mov  0x0443, al 8936,259034
  mov  0x0444,x04448937,259094
  mov  0x0444, al 8937,259094
  mov  0x0445,x04458938,259154
  mov  0x0445, al 8938,259154
  mov  0x0446,x04468939,259212
  mov  0x0446, al 8939,259212
  mov  0x0447,x04478940,259266
  mov  0x0447, al 8940,259266
  mov  0x0448,x04488941,259322
  mov  0x0448, al 8941,259322
  mov  0x048b,x048b8943,259379
  mov  0x048b, al 8943,259379
  mov  0x048b, al  ;; diskette configuration data8943,259379
  ;; (048F) diskette controller information8946,259501
  mov  al,8948,259550
  mov  al, #0x10 x108948,259550
  out  0x70,x708949,259601
  in   AL,8950,259617
  mov  ah,8951,259633
  mov  ah, al 8951,259633
  shr  al,8954,259685
  mov  bl, #0x07   ;; drive0 determined,8956,259778
  mov  bl, #0x07   ;; drive0 determined, multi-rate,rate8956,259778
  mov  bl,8959,259879
  mov  bl, #0x00 x008959,259879
  mov  al,8962,259925
  mov  al, ah 8962,259925
  and  al,8963,259963
  and  al, #0x0f x0f8963,259963
  or   bl, #0x70   ;; drive1 determined,8965,260059
  or   bl, #0x70   ;; drive1 determined, multi-rate,rate8965,260059
f1_missing:f1_missing8966,260129
  mov  0x048f,x048f8968,260191
  mov  0x048f, bl 8968,260191
  mov  al,8971,260338
  mov  0x0490,x04908972,260355
  mov  0x0490, al 8972,260355
  mov  0x0491,x04918973,260400
  mov  0x0491, al 8973,260400
  mov  0x0491, al  ;; diskette 1 media state8973,260400
                   ;; diskette 8975,260446
                   ;; diskette 0,1 operational starting state8975,260446
                   ;; drive type has not been determined,8976,260508
  mov  0x0492,x04928978,260618
  mov  0x0493,x04938979,260636
  mov  0x0494,x04948981,260655
  mov  0x0494, al 8981,260655
  mov  0x0495,x04958982,260705
  mov  0x0495, al 8982,260705
  mov  al,8984,260756
  out  #0x0a,x0a8985,260773
  out  #0x0a, al 8985,260773
  SET_INT_VECTOR(8987,260827
  mov  al,9066,263124
  out  #0x70,x709067,263141
  in   al,9068,263158
  mov   (0x003d + 0x08), al 9069,263175
  mov  al,9071,263226
  out  #0x70,x709072,263243
  in   al,9073,263260
  mov  ah,9074,263277
  mov  al,9075,263291
  out  #0x70,x709076,263308
  in   al,9077,263325
  mov   (0x003d + 0x0C), ax 9078,263342
  mov  al,9080,263392
  mov  al, #0x1c x1c9080,263392
  out  #0x70,x709081,263439
  in   al,9082,263456
  in   al, #0x71 x719082,263456
  mov  ah,9083,263488
  mov  al,9084,263502
  out  #0x70,x709085,263519
  in   al,9086,263536
  in   al, #0x71 x719086,263536
  mov  bx,9087,263567
  mov  bx, ax 9087,263567
  mov  bx, ax      ;; BX 9087,263567
  mov  cl, al      ;; CL 9092,263656
  mov  dl, al      ;; DL 9097,263741
  ;; no logical CHS mapping used,9103,263895
  ;; no logical CHS mapping used, just physical CHS9103,263895
  ;; use Standard Fixed Disk Parameter Table 9104,263947
  cmp al,9175,265867
  HALT(9177,265905
  ;; CMOS  purpose                  param table offset9188,266172
  ;; 0x24    cylinders low 9189,266227
  ;; 0x25    cylinders high 9190,266267
  ;; 0x26    heads 9191,266307
  ;; 0x27    write pre-comp low 9192,266347
  ;; 0x28    write pre-comp high 9193,266387
  ;; 0x2a    landing zone low         C9195,266467
  ;; 0x2b    landing zone high        D9196,266507
  ;; 0x2c    sectors/track            E9197,266547
  mov  ds,9202,266696
  mov  al,9203,266710
  out  #0x70,x709204,266727
  in   al,9205,266744
  mov  ah,9206,266761
  mov  al,9207,266775
  out  #0x70,x709208,266792
  in   al,9209,266809
  mov   (0x004d + 0x05), ax 9210,266826
  mov  al,9212,266877
  out  #0x70,x709213,266894
  in   al,9214,266911
  mov   (0x004d + 0x08), al 9215,266928
  mov  al,9217,266979
  out  #0x70,x709218,266996
  in   al,9219,267013
  mov  ah,9220,267030
  mov  al,9221,267044
  out  #0x70,x709222,267061
  in   al,9223,267078
  mov   (0x004d + 0x0C), ax 9224,267095
  mov  al,9226,267145
  mov  al, #0x25 x259226,267145
  out  #0x70,x709227,267192
  in   al,9228,267209
  in   al, #0x71 x719228,267209
  mov  ah,9229,267241
  mov  al,9230,267255
  out  #0x70,x709231,267272
  in   al,9232,267289
  in   al, #0x71 x719232,267289
  mov  bx,9233,267320
  mov  bx, ax 9233,267320
  mov  bx, ax      ;; BX 9233,267320
  mov  cl, al      ;; CL 9238,267409
  mov  dl, al      ;; DL 9243,267494
  ;; no logical CHS mapping used,9249,267648
  ;; no logical CHS mapping used, just physical CHS9249,267648
  ;; use Standard Fixed Disk Parameter Table 9250,267700
;- POST: EBDA segment9313,269401
  mov ax,9318,269536
  mov ds,9319,269556
  mov byte ptr 9320,269569
  xor ax,9322,269609
  xor ax, ax 9322,269609
  mov ds,9323,269657
  mov word ptr 9324,269670
  ret;9325,269704
  xor ax,9344,270060
  mov ds,9345,270073
  mov sp,9347,270087
  mov ss,9348,270105
  xor ax,9352,270148
  mov ds,9353,270161
  mov sp,9355,270175
  mov ss,9356,270193
  mov bl,9364,270292
  and ax,9365,270308
  call _s3_resume_panic9367,270338
  mov   al,9371,270400
  out   #0xA0,xA09372,270418
  out   #0xA0, al 9372,270418
  mov   al,9374,270470
  out   #0x20,x209375,270488
  out   #0x20, al 9375,270488
  ret9376,270524
BcdToBin:BcdToBin9379,270553
  ;; in:  AL in BCD format9380,270563
  ;; out: AL in binary format,9381,270590
  ;; out: AL in binary format, AH will always be 9381,270590
  mov  bl,9383,270657
  and  bl,9384,270671
  and  bl, #0x0f x0f9384,270671
  shr  al,9385,270708
  mov  bh,9386,270746
  mul  al,9387,270761
  mul  al, bh 9387,270761
  mul  al, bh    ;; multiply high digit by 9387,270761
  ;; at 18.2hz since midnight up to this point.  Calculating9397,271120
  ;; this is a little complicated.  Here are the factors I gather9398,271181
  ;; regarding this.  14,318,180 hz was the original clock speed,9399,271247
  ;; chosen so it could be divided by either 3 to drive the 5Mhz CPU9400,271313
  ;; at the time,9401,271382
  ;; at the time, or 4 to drive the CGA video adapter.  The div39401,271382
  ;; source was divided again by 4 to feed a 1.193Mhz signal to9402,271447
  ;; the timer.  With a maximum 16bit timer count,9403,271511
  ;; the timer.  With a maximum 16bit timer count, this is again9403,271511
  ;; 14,318,180 Hz clock9406,271619
  ;;   /65536 (maximum timer count)9409,271731
  ;; 1 second 9410,271794
  ;; 1 minute 9411,271828
  ;; 1 hour 9412,271862
  ;; Given the values in the CMOS clock,9414,271901
  ;; Given the values in the CMOS clock, one could calculate9414,271901
  ;; the number of ticks by the following:following9415,271962
  ;;   ticks 9416,272005
  ;; To get a little more accuracy,9419,272148
  ;; To get a little more accuracy, since Im using integer9419,272148
  ;; arithmatic,9420,272207
  ;; arithmatic, I use:use9420,272207
  ;;   ticks 9421,272231
  ;; assuming DS=9425,272399
  xor  eax,9428,272444
  xor  eax, eax 9428,272444
  mov  al,9429,272473
  out  #0x70,x709430,272490
  in   al,9431,272507
  in   al, #0x71 x719431,272507
  call BcdToBin 9432,272554
  mov  edx,9433,272604
  mul  eax,9434,272626
  mov  ebx,9435,272642
  xor  edx,9436,272663
  div  eax,9437,272679
  mov  ecx,9438,272695
  mov  ecx, eax 9438,272695
  mov  ecx, eax  ;; ECX will accumulate total ticks9438,272695
  xor  eax,9441,272770
  xor  eax, eax 9441,272770
  mov  al,9442,272799
  out  #0x70,x709443,272816
  in   al,9444,272833
  in   al, #0x71 x719444,272833
  call BcdToBin 9445,272880
  mov  edx,9446,272930
  mul  eax,9447,272952
  mov  ebx,9448,272968
  xor  edx,9449,272987
  div  eax,9450,273003
  add  ecx,9451,273019
  add  ecx, eax 9451,273019
  add  ecx, eax  ;; add to total ticks9451,273019
  xor  eax,9454,273079
  xor  eax, eax 9454,273079
  mov  al,9455,273108
  out  #0x70,x709456,273125
  in   al,9457,273142
  in   al, #0x71 x719457,273142
  call BcdToBin 9458,273187
  mov  edx,9459,273235
  mul  eax,9460,273257
  mov  ebx,9461,273273
  xor  edx,9462,273291
  div  eax,9463,273307
  add  ecx,9464,273323
  add  ecx, eax 9464,273323
  mov  0x46C,x46C9466,273363
  mov  0x46C, ecx 9466,273363
  xor  al,9467,273402
  mov  0x470,x4709468,273416
  mov  0x470, al 9468,273416
  ret9469,273463
int76_handler:int76_handler9472,273492
  mov   ax,9476,273579
  mov   ds,9477,273599
  mov   0x008E,x008E9478,273614
  iret9482,273680
#define APM_PROT329489,273733
#define APM_PROT169493,273784
#define APM_REAL9496,273825
ASM_START9504,273927
  db 0x5f,x5f9511,274013
  db 0x5f, 0x33,x339511,274013
  db 0x5f, 0x33, 0x32,x329511,274013
  db 0x5f, 0x33, 0x32, 0x5f x5f9511,274013
  dw bios32_entry_point,9512,274062
  dw bios32_entry_point, 0xf xf9512,274062
  db 9513,274118
  db 0             ;; revision level9513,274118
  db 9517,274333
  cmp eax,9522,274404
  cmp eax, #0x49435024 x494350249522,274404
  mov eax,9524,274459
  mov dx,9525,274482
  out dx,9526,274500
  mov dx,9527,274514
  in  eax,9528,274532
  cmp eax,9530,274575
  jne unknown_service9531,274609
  mov bx,9559,275085
  mov cx,9560,275103
  mov edx,9561,275116
  mov edx, #0x20494350 x204943509561,275116
  mov al,9562,275149
pci_pro_f02:pci_pro_f029564,275182
  cmp al,9565,275214
  shl ecx,9567,275248
  mov cx,9568,275263
  xor bx,9569,275276
  mov di,9570,275289
  mov dx,9573,275348
  in  eax,9574,275366
  cmp eax,9575,275380
  cmp si,9577,275417
  cmp bx,9582,275482
  mov ah,9584,275522
pci_pro_f03:pci_pro_f039586,275557
  cmp al,9587,275589
  xor bx,9589,275623
  mov di,9590,275636
  mov dx,9593,275696
  in  eax,9594,275714
  shr eax,9595,275728
  cmp eax,9596,275742
  cmp si,9598,275780
  cmp bx,9603,275846
  mov ah,9605,275887
pci_pro_f08:pci_pro_f089607,275922
  cmp al,9608,275962
  mov dx,9612,276033
  and dx,9613,276046
  add dx,9614,276062
  in  al,9615,276080
  mov cl,9617,276103
pci_pro_f09:pci_pro_f099619,276133
  cmp al,9620,276173
  mov dx,9624,276244
  and dx,9625,276257
  add dx,9626,276273
  in  ax,9627,276291
  mov cx,9629,276314
pci_pro_f0a:pci_pro_f0a9631,276344
  cmp al,9632,276385
  mov dx,9636,276456
  in  eax,9637,276474
  mov ecx,9639,276498
pci_pro_f0b:pci_pro_f0b9641,276530
  cmp al,9642,276571
  mov dx,9646,276642
  and dx,9647,276655
  add dx,9648,276671
  mov al,9649,276689
  out dx,9650,276702
pci_pro_f0c:pci_pro_f0c9653,276742
  cmp al,9654,276783
  mov dx,9658,276854
  and dx,9659,276867
  add dx,9660,276883
  mov ax,9661,276901
  out dx,9662,276914
pci_pro_f0d:pci_pro_f0d9665,276954
  cmp al,9666,276996
  mov dx,9670,277071
  mov eax,9671,277089
  out dx,9672,277104
  mov ah,9676,277162
  and dword ptr[ptr9681,277227
  and dword ptr[esp+8],0xfffffffc xfffffffc9681,277227
  mov ax,9738,278082
  mov bx,9739,278100
  mov cx,9740,278118
  mov edx,9741,278131
  mov edx, #0x20494350 x204943509741,278131
  mov edi,9742,278164
  mov di,9743,278184
pci_real_f02:pci_real_f029746,278225
  cmp al,9749,278280
  shl ecx,9751,278315
  mov cx,9752,278330
  xor bx,9753,278343
  mov di,9754,278356
  mov dx,9757,278417
  in  eax,9758,278435
  cmp eax,9759,278449
  cmp si,9761,278487
  cmp bx,9766,278554
  mov dx,9768,278595
  shr ecx,9769,278608
  mov ax,9770,278623
pci_real_f03:pci_real_f039772,278661
  cmp al,9773,278694
  xor bx,9775,278729
  mov di,9776,278742
  mov dx,9779,278804
  in  eax,9780,278822
  shr eax,9781,278836
  cmp eax,9782,278850
  cmp si,9784,278889
  cmp bx,9789,278957
  mov dx,9791,278999
  shr ecx,9792,279012
  mov ax,9793,279027
pci_real_f08:pci_real_f089795,279065
  cmp al,9796,279106
  mov dx,9800,279178
  and dx,9801,279191
  add dx,9802,279207
  in  al,9803,279225
  mov cl,9805,279247
pci_real_f09:pci_real_f099807,279278
  cmp al,9808,279319
  mov dx,9812,279391
  and dx,9813,279404
  add dx,9814,279420
  in  ax,9815,279438
  mov cx,9817,279460
pci_real_f0a:pci_real_f0a9819,279491
  cmp al,9820,279533
  mov dx,9824,279605
  in  eax,9825,279623
  mov ecx,9827,279646
pci_real_f0b:pci_real_f0b9829,279679
  cmp al,9830,279721
  mov dx,9834,279793
  and dx,9835,279806
  add dx,9836,279822
  mov al,9837,279840
  out dx,9838,279853
pci_real_f0c:pci_real_f0c9841,279893
  cmp al,9842,279935
  mov dx,9846,280007
  and dx,9847,280020
  add dx,9848,280036
  mov ax,9849,280054
  out dx,9850,280067
pci_real_f0d:pci_real_f0d9853,280107
  cmp al,9854,280150
  mov dx,9858,280222
  mov eax,9859,280240
  out dx,9860,280255
pci_real_f0e:pci_real_f0e9863,280296
  cmp al,9864,280337
  cmp word ptr 9867,280385
  mov word ptr 9870,280508
  mov si,9878,280662
  mov cx,9882,280735
  mov es,9884,280761
  mov di,9885,280778
  mov cx,9886,280791
  mov bx,9895,280940
  mov word ptr 9899,281046
  mov ah,9900,281136
  mov ah,9904,281191
  xor ah,9911,281267
  mov eax,9919,281344
  mov ax,9920,281365
  shl eax,9921,281379
  and di,9922,281393
  or  ax,9923,281410
  and al,9924,281424
  mov dx,9925,281441
  out dx,9926,281460
  db 0x24,x249932,281530
  db 0x24, 0x50,x509932,281530
  db 0x24, 0x50, 0x49,x499932,281530
  db 0x24, 0x50, 0x49, 0x52 x529932,281530
  db 9933,281579
  db 9935,281633
  db 0x08 x089936,281668
  dw 0x0000 x00009937,281710
  dw 0x8086 x80869938,281744
  dw 0x122e x122e9939,281801
  dw 9940,281858
  db 9941,281884
  db 0x37 x379942,281923
pci_routing_table_structure_start:pci_routing_table_structure_start9943,281945
  ;; first slot entry PCI-to-ISA ISA9944,281980
  mov  bx,10049,284955
  mov  dl,10051,284993
  mov  dx,10053,285038
  in   ax,10054,285057
  cmp  ax,10055,285071
  mov  dl,10057,285110
  mov  dl, #0x04 x0410057,285110
  mov  dx,10059,285194
  in   al,10060,285213
  and  al,10061,285227
  out  dx,10062,285244
  mov  dl,10064,285277
  mov  dx,10066,285323
  in   eax,10067,285342
  test al,10068,285357
  mov  ecx,10070,285394
  mov  eax,10071,285410
  out  dx,10072,285434
  in   eax,10073,285449
  cmp  eax,10074,285464
  xor  eax,10076,285501
  mov  ecx,10077,285525
  mov  eax,10078,285541
  out  dx,10079,285560
  add  eax,10080,285575
  add  eax, ecx 10080,285575
  add  eax,10081,285623
  and  eax,10082,285647
  mov 10083,285671
  mov  cx,10086,285725
  mov  ax,10087,285739
  out  dx,10088,285758
  in   ax,10089,285772
  cmp  ax,10090,285786
  xor  ax,10092,285821
  mov  cx,10093,285840
  mov  ax,10094,285854
  out  dx,10095,285872
  add  ax,10096,285886
  add  ax, cx 10096,285886
  add  ax,10097,285932
  and  ax,10098,285951
  mov 10099,285970
  mov  al,10101,286003
  add  al,10102,286021
  cmp  al,10103,286038
  mov  byte ptr[ptr10105,286081
  mov  dl,10108,286152
  mov  dl, #0x04 x0410108,286152
  mov  al,10148,286810
  out  dx,10149,286827
  out  dx,10151,286851
  mov  si,10152,286865
  mov  bh,10153,286905
  mov  bl,10154,286923
  mov  dl,10155,286941
  mov  dx,10157,286986
  in   eax,10158,287005
  cmp  eax,10159,287020
  mov  dl,10161,287080
  push bx 10163,287127
  mov  dx,10164,287170
  mov  ax,10165,287189
  out  dx,10166,287208
  out  dx, ax 10166,287208
  add  dx,10167,287250
  out  dx,10168,287264
  mov  ax,10169,287278
  sub  ax,10170,287296
  shr  ax,10171,287313
  mov  cx,10172,287327
  add  si,10173,287341
  add  si, #0x20 x2010173,287341
  mov  bp,10174,287386
  mov  ax,10175,287400
  xor  ax,10177,287435
  mov  bh,10180,287479
  mov  bl,10181,287495
  mov  dl,10183,287533
  mov  dx,10185,287578
  in   ax,10186,287597
  cmp  ax,10187,287611
  test bl,10189,287654
  mov  dl,10193,287732
  mov  dx,10195,287777
  in   al,10196,287796
  and  al,10197,287810
  dec  al 10199,287848
  mov  dl,10200,287880
  mul  al,10201,287897
  add  al,10202,287911
  xor  ah,10203,287928
  mov  bx,10204,287942
  mov  al,10205,287956
  mov  dl,10206,287975
  mov  bx,10207,287989
  mov  dx,10209,288033
  and  al,10210,288052
  add  dl,10211,288069
  in   al,10212,288083
  cmp  al,10213,288097
  mov  bx,10215,288132
  mov  al,10216,288174
  out  dx,10217,288190
  mov 10219,288214
  mov  bh,10222,288273
  mov  bl,10223,288289
  add  bl,10224,288307
  mov  dl,10225,288348
  mov  dx,10227,288393
  out  dx,10228,288412
  test bl,10232,288473
  add  si,10235,288532
  mov  byte ptr[ptr10236,288549
  mov  sp,10238,288604
rombios32_init:rombios32_init10248,288731
  in al,10250,288775
  or al,10252,288799
  out 0x92,x9210253,288814
  out 0x92, al10253,288814
  xor ax,10256,288857
  mov ds,10257,288870
  mov 0x0469,x046910258,288883
  mov 0x0467,x046710259,288900
    lgdt 10264,288962
  mov  eax,10266,289013
  or   al,10267,289029
  mov  cr0,10268,289046
  mov  cr0, eax10268,289046
  db 0x66,x6610270,289121
  dw 0x000f x000f10272,289155
rombios32_05:rombios32_0510276,289219
  mov eax,10278,289257
  mov ds,10279,289274
  mov es,10280,289287
  mov ss,10281,289300
  xor eax,10282,289313
  mov fs,10283,289328
  mov gs,10284,289341
  cld10285,289354
  mov ax,10288,289409
  shl eax,10289,289428
  mov esp,10290,289442
  add esp,10291,289460
  add esp, eax10291,289460
  push #0x04b2x04b210295,289561
  mov eax,10298,289602
  call eax10299,289625
  mov ax,10309,289786
  mov ds,10310,289802
  mov es,10311,289815
  mov ss,10312,289828
  mov fs,10313,289841
  mov gs,10314,289854
  mov gs, ax10314,289854
  mov  eax,10317,289893
  and  al,10318,289909
  mov  cr0,10319,289926
  mov  cr0, eax10319,289926
  JMP_AP(10322,290006
  ;;   Video ROM:   from 0xC0000..0xC7FFF in 2k increments10502,293456
  ;;   General ROM: from 0xC8000..0xE9FFF in 2k increments10503,293515
  ;;   System  ROM: only 0xF0000xF000010504,293574
  ;; Header:Header10506,293612
  ;;   Offset    Value10507,293625
  ;;   0         0x55x5510508,293648
  ;;   1         0xAAxAA10509,293670
  ;;   2         ROM length in 512-byte blocks10510,293692
  ;;   3         ROM initialization entry point 10511,293739
  mov  al, [2]  ;; change increment to ROM length in 512-byte blocks10527,294149
  ;; We want our increment in 512-byte quantities,10529,294219
  ;; We want our increment in 512-byte quantities, rounded to10529,294219
  ;; the nearest 2k quantity,10530,294281
  test al,10531,294347
  and  al,10533,294391
  and  al, #0xfc xfc10533,294391
  add  al,10534,294429
  xor ax,10541,294514
  mov ds,10542,294527
  and ecx,10543,294540
  push ecx 10544,294559
  add sp,10546,294681
  pop ecx 10547,294712
  push ax 10551,294768
  push di 10552,294795
  push di       ;; Save DI10552,294795
  push cx 10554,294856
  push #0x0003 x000310555,294884
  push #0x0003  ;; Push offset10555,294884
  mov  bl,10558,294972
  mov  al,10559,294987
  shr  al,10560,295001
  cmp  al,10561,295015
  mov  ax,10563,295046
  mov  ax, ds 10563,295046
  add  ax,10564,295118
  mov  ds,10565,295137
  shl  bx,10567,295162
  xor  ax,10568,295176
  mov  al,10569,295190
  ;; That should stop it grabbing INT 19h;h10572,295279
  mov  bx,10573,295351
  mov  es,10574,295370
  lea  di,10575,295384
  xor  bx,10577,295407
  xor  bx, bx 10577,295407
  mov  ds,10578,295451
  mov  bp,10580,295466
  mov  bp, sp 10580,295466
  db   0xff xff10581,295530
  cli 10584,295589
  add  sp,10585,295647
  pop  cx 10586,295683
  ;; Look at the ROM's PnP Expansion header.  Properly, we're supposed10588,295730
  ;; to init all the ROMs and then go back and build an IPL table of10589,295801
  ;; all the bootable devices,10590,295870
  mov  ds,10591,295936
  mov  ds, cx 10591,295936
  mov  bx,10592,295968
  mov  bx, 0x001a x001a10592,295968
  mov  ax,10593,296043
  mov  ax, [bx]     ;; the offset of PnP expansion header,10593,296043
  cmp  ax,10594,296111
  cmp  ax, #0x5024 x502410594,296111
  cmp  ax,10601,296296
  je   no_bcv10602,296315
  push cx 10605,296367
  push ax 10606,296395
  push ax       ;; Push offset10606,296395
  mov  bx,10609,296499
  mov  es,10610,296518
  lea  di,10611,296532
  mov  bp,10613,296597
  mov  bp, sp 10613,296597
  db   0xff xff10614,296660
  cli 10617,296719
  add  sp,10618,296777
  pop  cx 10619,296813
  pop  cx       ;; Pop seg value 10619,296813
  mov  di,10628,297151
  mov  di, 0x10[x1010628,297151
  mov  ds,10632,297311
  mov  ds, bx 10632,297311
  mov  bx,10633,297389
  mov  bx, IPL_COUNT_OFFSET 10633,297389
  cmp  bx,10634,297457
  je   no_bev 10635,297487
  shl  bx, #0x4                ;; Turn count into offset 10636,297550
  out 0x20,x2010724,299875
  out 0xa0,xa010725,299890
  mov al,10726,299905
  out 0x21,x2110727,299921
  mov al,10728,299936
  out 0xa1,xa110729,299952
  mov al,10730,299967
  out 0x21,x2110731,299983
  mov al,10732,299998
  out 0xa1,xa110733,300014
  mov al,10734,300029
  out 0x21,x2110735,300045
  out 0xa1,xa110736,300060
  mov  al,10737,300075
  out  0x21,x2110738,300092
  out  0x21, AL 10738,300092
  out  0x21, AL ;master pic: unmask IRQ 10738,300092
  mov  al,10740,300164
  mov  al,10742,300187
  out  0xa1,xa110744,300211
  out  0xa1, AL 10744,300211
  out  0xa1, AL ;slave  pic: unmask IRQ 10744,300211
  db 10750,300302
  db 10751,300333
  db 10752,300365
  db 10753,300397
  db 0,0,0,0,0,0,0   ; 31 bytes10753,300397
  db 0x5F,x5F10758,300537
  db 0x5F, 0x5F,x5F10758,300537
  db 0x5F, 0x5F, 0x5F,x5F10758,300537
  db 0x5F, 0x5F, 0x5F, 0x48,x4810758,300537
  db 0x5F, 0x5F, 0x5F, 0x48, 0x56,x5610758,300537
  db 0x5F, 0x5F, 0x5F, 0x48, 0x56, 0x4D,x4D10758,300537
  db 0x5F, 0x5F, 0x5F, 0x48, 0x56, 0x4D, 0x4D,x4D10758,300537
  db 0x5F, 0x5F, 0x5F, 0x48, 0x56, 0x4D, 0x4D, 0x50 x5010758,300537
  dd bios_table_area_end - bios_table_area_start10759,300601
.org 0xe05b xe05b10764,300681
  xor ax,10767,300719
  xor ax, ax10767,300719
  out 0x0d,x0d10770,300770
  out 0xda,xda10771,300784
  out 0xda,al10771,300784
  mov al,10774,300840
  out 0xD6,xD610775,300856
  out 0xD6, al 10775,300856
  mov al,10776,300907
  out 0xD4,xD410777,300923
  out 0xD4, al 10777,300923
  out 0xD4, al ; unmask channel 10777,300923
  mov AL,10780,300993
  out 0x70,x7010781,301009
  in  AL,10782,301024
  in  AL, 0x71x7110782,301024
  mov bl,10785,301059
  mov bl, al10785,301059
  mov AL,10788,301106
  out 0x70,x7010789,301122
  out 0x70, AL 10789,301122
  mov AL,10790,301172
  out 0x71,x7110791,301188
  out 0x71, AL 10791,301188
  out 0x71, AL          ; set shutdown action to normal10791,301188
  mov al,10794,301280
  mov al, bl10794,301280
  ;; 0x00,x0010796,301294
  ;; 0x00, 0x09,x0910796,301294
  ;; 0x05 x0510804,301435
  ;; 0x0A x0A10808,301514
  ;; 0x0B x0B10812,301589
  ;; 0x0C x0C10816,301661
  ;;  0x01,x0110821,301768
  ;;  0x01,0x02,x0210821,301768
  ;;  0x01,0x02,0x03,x0310821,301768
  ;;  0x01,0x02,0x03,0x04,x0410821,301768
  ;;  0x01,0x02,0x03,0x04,0x06,x0610821,301768
  ;;  0x01,0x02,0x03,0x04,0x06,0x07,x0710821,301768
  ;;  0x01,0x02,0x03,0x04,0x06,0x07,0x08 x0810821,301768
  ;  0xb0,xb010829,301919
  ;  0xb0, 0x20,x2010829,301919
  ;  0xe6,xe610830,301962
  ;  0xe6, 0x20,x2010830,301962
  ;#endifendif10831,302024
normal_post:normal_post10839,302078
  mov  ax,10843,302125
  mov  sp,10844,302144
  mov  ax,10845,302158
  mov  ss,10846,302177
  mov  ss, ax10846,302177
  mov 0x04b0,x04b010849,302218
  cmp bl,10851,302236
  jz s3_post10852,302252
  mov  es,10855,302310
  mov  cx,10856,302324
  mov  cx, #0x0080 x008010856,302324
  mov  di,10857,302356
  call _log_bios_start10862,302398
  xor  bx,10865,302465
  xor  bx, bx 10865,302465
  mov  cx,10866,302503
  mov  cx, #0x0100 x010010866,302503
  mov  cx, #0x0100    ;; counter 10866,302503
nmi:nmi11106,307900
  ;; FIXME the NMI handler should not panic11107,307905
  ;; but iret when called from int75 11108,307949
; b2:b211150,309120
; b1:b111151,309157
; b0:b011152,309196
; Feature byte 11161,309383
; b7:b711162,309400
; b6:b611163,309429
; b5:b511164,309466
; b4:b411165,309510
; b3:b311166,309558
; b2:b211167,309600
; b1:b111168,309631
; Feature byte 11178,309803
; b7: not used11179,309820
; b6: reserved11180,309835
; b5: reserved11181,309850
; b4: POST supports ROM-to-RAM enable/disabledisable11182,309865
; b3: SCSI on system board11183,309911
; b2: info panel installed11184,309938
; b1: Initial Machine Load 11185,309965
  out #0x64,x6411360,313173
  iret11362,313198
  jmp int13_noeltorito11370,313361
.org 0xef57 xef5711375,313526
  mov  dx,11379,313617
  in   al,11380,313636
  and  al,11381,313650
  cmp  al,11382,313667
  mov  dx,11384,313704
  mov  al,11385,313723
  mov  al, #0x08 x0811385,313723
  out  dx,11386,313765
  mov  dx,11388,313792
  in   al,11389,313811
  and  al,11390,313825
  cmp  al,11391,313842
  mov  dx,11394,313891
  in   al,11395,313910
  mov  dx,11396,313924
  in   al,11397,313943
  and  al,11398,313957
  cmp  al,11399,313974
  xor  ax,11403,314032
  xor  ax, ax 11403,314032
  mov  ds,11404,314062
  mov  al,11406,314098
  or   al,11407,314116
  or   al, #0x80 x8011407,314116
  mov  0x043e,x043e11408,314168
.org 0xefc7 xefc711415,314225
diskette_param_table:diskette_param_table11416,314275
db  0x02 x0211421,314452
db  0x02 ;; head load time 11421,314452
db  0x08x0811430,314569
  xor  ax,11440,314751
  mov  ds,11441,314765
diskette_param_table2:diskette_param_table211447,314827
;;  New diskette parameter table adding 3 parameters from IBM11448,314850
db  0x02 x0211453,315067
db  0x02 ;; head load time 11453,315067
db 11463,315193
db 11464,315219
db 11465,315250
.org 0xf045 xf04511467,315282
  HALT(11468,315330
.org 0xf84d xf84d11497,315856
  mov  ax,11500,315938
  mov  ds,11501,315957
  mov  ax,11502,315971
  iret11504,315999
.org 0xf859 xf85911509,316043
  cmp ah,11513,316127
  cmp  ah,11518,316186
  cmp  ah,11520,316224
  cmp  ah,11524,316291
  jmp int15_handler32_ret11550,316684
;; Protected mode IDT descriptor11552,316711
;; I just make the limit 11554,316747
;; I just make the limit 0, so the machine will shutdown11554,316747
;; Set base to f0000 to correspond to beginning of BIOS,11558,316876
;; in case I actually define an IDT later11559,316933
dw 0x0000 x000011563,317010
dw 0x0000 x000011564,317036
db 0x0f x0f11565,317062
db 0x0f    ;; base 11565,317062
;; Real mode IDT descriptor11567,317089
;; base 11570,317156
;; limit 11571,317174
dw 0x0000 x000011575,317235
db 0x00 x0011576,317261
db 0x00    ;; base 11576,317261
.org 0xfe6e xfe6e11582,317325
  cmp  ah,11585,317409
  cmp  ah,11600,317572
  mov  bl,11606,317674
  mov  ah,11607,317688
  mov ax,11610,317723
  mov ax, ss 11610,317723
  mov ax, ss  ; set readable descriptor to ds,11610,317723
  xor  ax,11617,317896
  mov  ds,11618,317910
  iret11623,317984
;; int70h: IRQ8 - CMOS RTC11626,317995
  xor  ax,11631,318059
  mov  ds,11632,318073
  iret11636,318128
.org 0xfea5 xfea511641,318169
  xor ax,11646,318262
  mov ds,11647,318275
  mov ds, ax11647,318275
  mov  al,11650,318321
  or   al,11651,318338
  mov  0x0440,x044011654,318385
  jnz  int08_floppy_off11655,318402
  ;; turn motor(11656,318426
.org 0xff53 xff5311697,319326
  HALT(11702,319468

tools/firmware/rombios/32bitprotos.h,7
X(1,0

tools/firmware/rombios/32bit/tcgbios/tpm_drivers.c,820
#define STS_VALID 30,1137
#define STS_COMMAND_READY 31,1194
#define STS_TPM_GO 32,1251
#define STS_DATA_AVAILABLE 33,1308
#define STS_EXPECT 34,1365
#define STS_RESPONSE_RETRY 35,1422
#define ACCESS_TPM_REG_VALID_STS 37,1480
#define ACCESS_ACTIVE_LOCALITY 38,1537
#define ACCESS_BEEN_SEIZED 39,1594
#define ACCESS_SEIZE 40,1651
#define ACCESS_PENDING_REQUEST 41,1708
#define ACCESS_REQUEST_USE 42,1765
#define ACCESS_TPM_ESTABLISHMENT 43,1822
static uint32_t tis_wait_sts(45,1880
static uint32_t tis_activate(61,2181
static uint32_t tis_ready(78,2622
static uint32_t tis_senddata(89,2858
static uint32_t tis_readresp(130,3527
static uint32_t tis_waitdatavalid(150,3938
static uint32_t tis_waitrespready(160,4158
static uint32_t tis_probe(173,4524
struct tpm_driver tpm_drivers[tpm_drivers185,4774

tools/firmware/rombios/32bit/tcgbios/tcgbios.c,2970
struct ptti_cust 31,1173
	uint16_t    ipblength;32,1192
	uint16_t    reserved;33,1216
	uint16_t    opblength;34,1239
	uint16_t    reserved2;35,1263
	uint8_t     tpmoperandin[tpmoperandin36,1287
struct ptti_cust CMD_TPM_Startup_0x01_IPB 39,1346
struct ptti_cust CMD_TSC_PhysicalPresence_0x20_IPB 44,1507
struct ptti_cust CMD_TSC_PhysicalPresence_0x08_IPB 49,1677
struct ptti_cust CMD_TSC_PhysicalPresence_0x100_IPB 54,1847
struct ptti_cust CMD_TSC_PhysicalPresence_0x10_IPB 59,2018
struct ptti_cust CMD_TPM_PhysicalEnable_IPB 64,2188
struct ptti_cust CMD_TPM_PhysicalSetDeactivated_0x00_IPB 69,2339
struct ptti_cust CMD_TPM_SHA1Start_IPB 73,2507
struct ptti_cust CMD_TPM_GetCap_Version_IPB 78,2653
struct ptti_cust *TCG_CommandList[TCG_CommandList84,2857
static inline uint32_t bswap(123,4457
	struct acpi_20_tcpa_clisrv *tcpa_ptr;tcpa_ptr136,4822
	unsigned char       *lasa_last_ptr;lasa_last_ptr137,4861
	uint16_t            entry_count;138,4898
	uint16_t            flags;139,4932
} tcpa_acpi_t;140,4960
static tcpa_acpi_t tcpa_acpi;142,4976
static int tpm_driver_to_use 146,5046
uint32_t MA_IsTPMPresent(149,5105
uint32_t MA_InitTPM(165,5371
uint32_t MA_Transmit(184,5894
uint8_t acpi_validate_entry(247,7055
void tcpa_acpi_init(265,7412
static void tcpa_reset_acpi_log(311,8381
uint32_t tcpa_extend_acpi_log(329,8816
unsigned char *tcpa_get_lasa_last_ptr(tcpa_get_lasa_last_ptr378,9958
unsigned char *tcpa_get_lasa_base_ptr(tcpa_get_lasa_base_ptr384,10047
uint32_t tcpa_get_laml(402,10504
tcpa_add_measurement_to_log(432,11250
uint16_t tcpa_add_pcpes_to_log(473,12376
uint16_t tcpa_add_measurement_to_log_simple(510,13372
static const char ev_action[ev_action542,14307
static char evt_separator[evt_separator560,14645
static char wake_event_1[wake_event_1561,14699
static void tcpa_add_measurement(570,14981
void tcpa_calling_int19h(599,15709
void tcpa_returned_int19h(607,15842
void tcpa_add_event_separators(615,15975
void tcpa_wake_event(628,16170
void tcpa_add_bootdevice(641,16505
void tcpa_start_option_rom_scan(663,17030
void tcpa_option_rom(672,17168
void tcpa_ipl(716,18412
void tcpa_measure_post(751,19267
uint32_t SendCommand32(770,19657
uint32_t tcpa_initialize_tpm(808,20453
static uint16_t TCG_IsShutdownPreBootInterface(853,21522
uint32_t _TCG_TPM_Extend(860,21636
uint32_t HashLogExtendEvent32(905,22730
uint32_t PassThroughToTPM32(996,24861
uint32_t TCG_ShutdownPreBootInterface(1047,25844
uint32_t HashLogEvent32(1061,26118
uint32_t HashAll32(1156,28194
uint32_t TSS32(1197,28986
uint32_t CompactHashLogExtendEvent32(1217,29356
typedef struct _sha1_ctx 1281,30978
	uint32_t h[h1282,31005
} sha1_ctx;1283,31021
static inline uint32_t rol(1286,31035
static const uint32_t sha_ko[sha_ko1291,31139
static void sha1_block(1297,31335
void sha1_do(1355,32234
static const uint32_t sha_const[sha_const1396,33134
void sha1(1405,33248
uint32_t TCGInterruptHandler(1415,33440

tools/firmware/rombios/32bit/tcgbios/tpm_drivers.h,384
struct tpm_driver 3,59
	uint32_t baseaddr;4,79
	uint32_t (*activate)activate5,99
	uint32_t (*ready)ready6,141
	uint32_t (*senddata)senddata7,180
	uint32_t (*readresp)readresp8,257
	uint32_t (*waitdatavalid)waitdatavalid9,336
	uint32_t (*waitrespready)waitrespready10,383
	uint32_t (*probe)probe11,448
#define TPM_NUM_DRIVERS 14,491
#define TPM_INVALID_DRIVER 16,523

tools/firmware/rombios/32bit/tcgbios/tcgbios.h,5863
#define TCGBIOS_H2,18
#define TCPA_ACPI_CLASS_CLIENT 5,65
#define TCPA_ACPI_CLASS_SERVER 6,107
#define TCG_PC_OK 9,180
#define TCG_PC_TPMERROR 10,224
#define TCG_PC_LOGOVERFLOW 11,268
#define TCG_PC_UNSUPPORTED 12,312
#define TPM_ALG_SHA 14,357
#define TCG_MAGIC 16,402
#define TCG_VERSION_MAJOR 17,454
#define TCG_VERSION_MINOR 18,496
#define TPM_OK 20,539
#define TPM_RET_BASE 21,583
#define TCG_GENERAL_ERROR 22,627
#define TCG_TPM_IS_LOCKED 23,688
#define TCG_NO_RESPONSE 24,749
#define TCG_INVALID_RESPONSE 25,810
#define TCG_INVALID_ACCESS_REQUEST 26,871
#define TCG_FIRMWARE_ERROR 27,932
#define TCG_INTEGRITY_CHECK_FAILED 28,993
#define TCG_INVALID_DEVICE_ID 29,1054
#define TCG_INVALID_VENDOR_ID 30,1115
#define TCG_UNABLE_TO_OPEN 31,1176
#define TCG_UNABLE_TO_CLOSE 32,1237
#define TCG_RESPONSE_TIMEOUT 33,1298
#define TCG_INVALID_COM_REQUEST 34,1359
#define TCG_INVALID_ADR_REQUEST 35,1420
#define TCG_WRITE_BYTE_ERROR 36,1481
#define TCG_READ_BYTE_ERROR 37,1542
#define TCG_BLOCK_WRITE_TIMEOUT 38,1603
#define TCG_CHAR_WRITE_TIMEOUT 39,1665
#define TCG_CHAR_READ_TIMEOUT 40,1727
#define TCG_BLOCK_READ_TIMEOUT 41,1789
#define TCG_TRANSFER_ABORT 42,1851
#define TCG_INVALID_DRV_FUNCTION 43,1913
#define TCG_OUTPUT_BUFFER_TOO_SHORT 44,1975
#define TCG_FATAL_COM_ERROR 45,2037
#define TCG_INVALID_INPUT_PARA 46,2099
#define TCG_TCG_COMMAND_ERROR 47,2161
#define TCG_INTERFACE_SHUTDOWN 48,2223
#define TCG_PC_TPM_NOT_PRESENT 50,2347
#define TCG_PC_TPM_DEACTIVATED 51,2409
#define TPM_INVALID_ADR_REQUEST 54,2473
#define TPM_IS_LOCKED 55,2538
#define TPM_INVALID_DEVICE_ID 56,2597
#define TPM_INVALID_VENDOR_ID 57,2660
#define TPM_FIRMWARE_ERROR 59,2757
#define TPM_UNABLE_TO_OPEN 60,2817
#define TPM_UNABLE_TO_CLOSE 61,2877
#define TPM_INVALID_RESPONSE 62,2938
#define TPM_RESPONSE_TIMEOUT 63,3000
#define TPM_INVALID_ACCESS_REQUEST 64,3062
#define TPM_TRANSFER_ABORT 65,3130
#define TPM_GENERAL_ERROR 66,3190
#define TPM_ST_CLEAR 68,3250
#define TPM_ST_STATE 69,3296
#define TPM_ST_DEACTIVATED 70,3342
#define EV_POST_CODE 73,3426
#define EV_SEPARATOR 74,3461
#define EV_ACTION 75,3496
#define EV_EVENT_TAG 76,3531
#define EV_COMPACT_HASH 77,3566
#define EV_IPL 78,3601
#define EV_IPL_PARTITION_DATA 79,3636
#define CODE_MAInitTPM 83,3694
#define CODE_MAHashAllExtendTPM 84,3741
#define CODE_MAPhysicalPresenceTPM 85,3788
#define CODE_MAIsTPMPresent 87,3862
#define CODE_MAHashAll 88,3909
#define CODE_MATransmit 89,3956
#define IDX_CMD_TPM_Startup_0x01 95,4090
#define IDX_CMD_TSC_PhysicalPresence_0x20 96,4140
#define IDX_CMD_TSC_PhysicalPresence_0x08 97,4190
#define IDX_CMD_TSC_PhysicalPresence_0x100 98,4240
#define IDX_CMD_TSC_PhysicalPresence_0x10 99,4290
#define IDX_CMD_TPM_PhysicalEnable 100,4340
#define IDX_CMD_TPM_PhysicalSetDeactivated_0x00 101,4390
#define IDX_CMD_TPM_SHA1Start 102,4440
#define TPM_ACCESS 106,4529
#define TPM_INT_ENABLE 107,4568
#define TPM_INT_VECTOR 108,4607
#define TPM_INT_STATUS 109,4646
#define TPM_INTF_CAPABILITY 110,4686
#define TPM_STS 111,4726
#define TPM_DATA_FIFO 112,4766
#define TPM_DID_VID 113,4806
#define TPM_RID 114,4847
#define TPM_TIS_BASE_ADDRESS 117,4923
#define STATUS_FLAG_SHUTDOWN 119,4971
struct hleei_short123,5082
	uint16_t   ipblength;125,5103
	uint16_t   reserved;126,5126
	uint32_t   hashdataptr;127,5148
	uint32_t   hashdatalen;128,5173
	uint32_t   pcrindex;129,5198
	uint32_t   logdataptr;130,5220
	uint32_t   logdatalen;131,5244
struct hleei_long134,5296
	uint16_t   ipblength;136,5316
	uint16_t   reserved;137,5339
	uint32_t   hashdataptr;138,5361
	uint32_t   hashdatalen;139,5386
	uint32_t   pcrindex;140,5411
	uint32_t   reserved2;141,5433
	uint32_t   logdataptr;142,5456
	uint32_t   logdatalen;143,5480
struct hleeo146,5532
	uint16_t    opblength;148,5547
	uint16_t    reserved;149,5571
	uint32_t    eventnumber;150,5594
	uint8_t     hashvalue[hashvalue151,5620
struct pttti156,5678
	uint16_t    ipblength;158,5693
	uint16_t    reserved;159,5717
	uint16_t    opblength;160,5740
	uint16_t    reserved2;161,5764
	uint8_t     tpmoperandin[tpmoperandin162,5788
struct pttto165,5846
	uint16_t    opblength;167,5861
	uint16_t    reserved;168,5885
	uint8_t     tpmoperandout[tpmoperandout169,5908
struct hlei173,5944
	uint16_t    ipblength;175,5958
	uint16_t    reserved;176,5982
	uint32_t    hashdataptr;177,6005
	uint32_t    hashdatalen;178,6031
	uint32_t    pcrindex;179,6057
	uint32_t    logeventtype;180,6080
	uint32_t    logdataptr;181,6107
	uint32_t    logdatalen;182,6132
struct hleo185,6185
	uint16_t    opblength;187,6199
	uint16_t    reserved;188,6223
	uint32_t    eventnumber;189,6246
struct hai192,6300
	uint16_t    ipblength;194,6313
	uint16_t    reserved;195,6337
	uint32_t    hashdataptr;196,6360
	uint32_t    hashdatalen;197,6386
	uint32_t    algorithmid;198,6412
struct ti201,6466
	uint16_t    ipblength;203,6478
	uint16_t    reserved;204,6502
        uint16_t    opblength;205,6525
        uint16_t    reserved2;206,6556
        uint8_t     tssoperandin[tssoperandin207,6587
struct to210,6652
	uint16_t    opblength;212,6664
	uint16_t    reserved;213,6688
	uint8_t     tssoperandout[tssoperandout214,6711
struct pcpes218,6771
	uint32_t    pcrindex;220,6786
	uint32_t    eventtype;221,6809
	uint8_t     digest[digest222,6833
	uint32_t    eventdatasize;223,6858
	uint32_t    event;224,6886
struct acpi_20_tcpa_client 227,6934
	uint32_t laml;228,6963
	uint64_t lasa;229,6979
struct acpi_20_tcpa_server 232,7023
	uint16_t reserved;233,7052
	uint32_t laml;234,7072
	uint64_t lasa;235,7088
struct acpi_20_tcpa_clisrv 239,7149
	struct acpi_header header;240,7178
	uint16_t platform_class;241,7206
		struct acpi_20_tcpa_client client;243,7241
		struct acpi_20_tcpa_server server;244,7278
	} u;245,7315

tools/firmware/rombios/32bit/32bitbios.c,36
#define X(31,1157
#undef X33,1232

tools/firmware/rombios/32bit/util.c,722
#define isdigit(26,955
void outb(28,1002
void outw(33,1116
void outl(38,1231
uint8_t inb(43,1347
uint16_t inw(50,1484
uint32_t inl(57,1623
char *itoa(itoa64,1763
int strcmp(84,2033
int strncmp(94,2198
void *memcpy(memcpy103,2402
void *memmove(memmove123,2836
strcpy(142,3141
strncpy(152,3280
strlen(176,3712
memset(185,3807
memcmp(196,3984
cpuid(214,4295
byte_to_hex(225,4620
uuid_to_string(246,5055
static char *printnum(printnum283,5675
static void _doprint(294,5905
static void putchar(376,8049
int printf(381,8101
void mssleep(392,8242
static struct acpi_20_rsdp *__find_rsdp(__find_rsdp411,8719
struct acpi_20_rsdp *find_rsdp(find_rsdp425,9102
uint32_t get_s3_waking_vector(438,9400

tools/firmware/rombios/32bit/pmm.c,2501
#define DEBUG_PMM 72,2658
#define __stringify(74,2679
#define stringify(75,2705
#define ASSERT(77,2742
# define PMM_DEBUG(85,3098
# define PMM_DEBUG(87,3164
struct pmmAllocArgs 90,3205
    uint16_t function;91,3227
    uint32_t length;92,3250
    uint32_t handle;93,3271
    uint16_t flags;94,3292
struct pmmFindArgs 97,3341
    uint16_t function;98,3362
    uint32_t handle;99,3385
struct pmmDeallocateArgs 102,3435
    uint16_t function;103,3462
    uint32_t buffer;104,3485
#define PMM_FUNCTION_ALLOCATE 107,3535
#define PMM_FUNCTION_FIND 108,3569
#define PMM_FUNCTION_DEALLOC 109,3612
#define PARAGRAPH_LENGTH 111,3647
#define PMM_HANDLE_ANONYMOUS 113,3702
#define PMM_FLAGS_MEMORY_TYPE_MASK 115,3746
#define PMM_FLAGS_MEMORY_INVALID 116,3793
#define PMM_FLAGS_MEMORY_CONVENTIONAL 117,3835
#define PMM_FLAGS_MEMORY_EXTENDED 118,3890
#define PMM_FLAGS_MEMORY_ANY 119,3947
#define PMM_FLAGS_ALIGINMENT 120,4016
#define PMM_ENOMEM 123,4081
#define PMM_EINVAL 124,4148
#define ALIGN_UP(126,4201
#define ALIGN_DOWN(127,4269
typedef struct memblk 129,4325
    uint32_t magic;130,4349
    struct memblk *next;next131,4396
    uint32_t handle;132,4460
    uint32_t __fill;133,4513
    uint8_t buffer[buffer134,4572
} memblk_t;135,4595
typedef struct heap 137,4608
    memblk_t *head;head138,4630
    memblk_t *end;end139,4679
} heap_t;140,4726
#define HEAP_NOT_INITIALIZED 142,4737
#define HEAP_ALIGNMENT 143,4784
    heap_t heap;160,5363
    heap_t ext_heap;161,5407
} pmm_data 162,5447
#define MEMBLK_MAGIC_INUSE 165,5563
#define MEMBLK_MAGIC_AVAIL 166,5614
#define memblk_is_inuse(168,5666
#define memblk_is_avail(169,5733
static void set_inuse(171,5801
static void set_avail(177,5920
#define MEMBLK_HEADER_SIZE 183,6036
#define MIN_MEMBLK_SIZE 184,6099
#define memblk_size(186,6169
#define memblk_buffer(187,6238
#define memblk_bufsize(188,6296
#define buffer_memblk(190,6366
#define memblk_loop_mbondition(192,6438
#define for_each_memblk(195,6558
#define for_remain_memblk(200,6739
split_memblk(219,7638
collect_avail_memblks(246,8481
pmm_init_heap(257,8686
pmm_initalize(269,8969
pmm_max_avail_length(291,9587
first_fit(310,9959
pmm_find_handle(358,11176
pmmAllocate(398,12565
pmmFind(453,13852
pmmDeallocate(475,14382
union pmm_args 487,14555
    uint16_t function;488,14572
    struct pmmAllocArgs alloc;489,14595
    struct pmmFindArgs find;490,14626
    struct pmmDeallocateArgs dealloc;491,14655
pmm(502,14953

tools/firmware/rombios/32bit/rombios_compat.h,2109
#define ROMBIOS_COMPAT2,23
#define ADDR_FROM_SEG_OFF(10,186
typedef uint8_t  Bit8u;12,267
typedef uint16_t Bit16u;13,291
typedef uint32_t Bit32u;14,316
#define SetCF(16,342
#define SetZF(17,386
#define ClearCF(18,430
#define ClearZF(19,474
#define GetCF(20,518
#define SET_CF(22,564
#define CLEAR_CF(23,602
#define GET_CF(24,640
#define SET_ZF(26,680
#define CLEAR_ZF(27,718
    Bit32u edi,33,795
    Bit32u edi, esi,33,795
    Bit32u edi, esi, ebp,33,795
    Bit32u edi, esi, ebp, esp;33,795
    Bit32u ebx,34,826
    Bit32u ebx, edx,34,826
    Bit32u ebx, edx, ecx,34,826
    Bit32u ebx, edx, ecx, eax;34,826
    } r32;35,857
    Bit16u di,37,879
    Bit16u di, filler1,37,879
    Bit16u di, filler1, si,37,879
    Bit16u di, filler1, si, filler2,37,879
    Bit16u di, filler1, si, filler2, bp,37,879
    Bit16u di, filler1, si, filler2, bp, filler3,37,879
    Bit16u di, filler1, si, filler2, bp, filler3, sp,37,879
    Bit16u di, filler1, si, filler2, bp, filler3, sp, filler4;37,879
    Bit16u bx,38,942
    Bit16u bx, filler5,38,942
    Bit16u bx, filler5, dx,38,942
    Bit16u bx, filler5, dx, filler6,38,942
    Bit16u bx, filler5, dx, filler6, cx,38,942
    Bit16u bx, filler5, dx, filler6, cx, filler7,38,942
    Bit16u bx, filler5, dx, filler6, cx, filler7, ax,38,942
    Bit16u bx, filler5, dx, filler6, cx, filler7, ax, filler8;38,942
    } r16;39,1005
    Bit32u filler[filler41,1027
    Bit8u  bl,42,1049
    Bit8u  bl, bh;42,1049
    Bit16u filler1;43,1068
    Bit8u  dl,44,1088
    Bit8u  dl, dh;44,1088
    Bit16u filler2;45,1107
    Bit8u  cl,46,1127
    Bit8u  cl, ch;46,1127
    Bit16u filler3;47,1146
    Bit8u  al,48,1166
    Bit8u  al, ah;48,1166
    Bit16u filler4;49,1185
    } r8;50,1205
  } u;51,1215
} __attribute__((packed)) pushad_regs_t;52,1222
static inline Bit32u read_dword(56,1266
static inline Bit16u read_word(62,1400
static inline Bit8u read_byte(68,1533
static inline void write_dword(74,1663
static inline void write_word(80,1807
static inline void write_byte(86,1950
#define X(92,2090
#undef X94,2163

tools/firmware/rombios/32bit/util.h,148
#define UTIL_H2,15
static inline uint8_t mmio_readb(29,1000
static inline uint16_t mmio_readw(34,1088
static inline uint32_t mmio_readl(39,1179

tools/firmware/rombios/apmbios.S,112
_apm32_entry:_apm32_entry146,2876
_apm16_entry:_apm16_entry149,2921
_apmreal_entry:_apmreal_entry154,2975

tools/firmware/rombios/rombios.h,779
#define LEGACY23,1065
#  define BX_ROMBIOS32 26,1096
#  define BX_ROMBIOS32 28,1131
#define DEBUG_ROMBIOS 30,1167
#define PANIC_PORT 32,1195
#define PANIC_PORT2 33,1221
#define INFO_PORT 34,1247
#define DEBUG_PORT 35,1273
#define BIOS_PRINTF_HALT 37,1300
#define BIOS_PRINTF_SCREEN 38,1331
#define BIOS_PRINTF_INFO 39,1362
#define BIOS_PRINTF_DEBUG 40,1393
#define BIOS_PRINTF_ALL 41,1424
#define BIOS_PRINTF_DEBHALT 42,1493
#define printf(44,1582
#  define BX_DEBUG(50,1839
#  define BX_DEBUG(52,1922
#define BX_INFO(54,1962
#define BX_PANIC(55,2037
#define ACPI_DATA_SIZE 57,2116
#define PM_IO_BASE 58,2154
#define SMB_IO_BASE 59,2187
#  define BX_APPNAME 63,2275
#  define BX_APPNAME 65,2331
#  define BX_APPNAME 67,2381
#  define BX_APPNAME 69,2417

tools/firmware/vgabios/vgabios.c,12822
#define USE_BX_INFO57,2398
#define ASM_START 117,4283
#define ASM_END 118,4306
  xor ax,124,4375
  mov ds,125,4388
  mov ax,126,4401
  mov ax,128,4429
.byte	0x55,x55143,4538
.byte   0x0a,x0a180,5093
.byte	0x0a,x0a185,5193
.byte	0x0a,x0a190,5296
.byte	0x0a,x0a191,5312
.byte	0x0a,x0a196,5381
.byte	0x0a,0x0dx0d196,5381
;;.byte	0x0a,x0a198,5434
.byte	0x0a,x0a200,5493
.byte	0x0a,x0a202,5551
.byte	0x0a,x0a203,5567
.word word224,5975
;; Init Entry point230,6103
  call init_vga_card236,6259
  call init_bios_area239,6305
  call vbe_init 243,6363
  SET_INT_VECTOR(247,6407
  mov dx,422,9576
  mov al,423,9593
  outb dx,424,9609
  mov dx,425,9622
  mov al,426,9639
  outb dx,427,9655
  mov  bx,430,9712
.byte 0x0d,x0d441,9927
.byte 0x0d,0x0a,x0a441,9927
  mov   ax,452,10135
  mov   ds,453,10161
  mov   ds, ax453,10161
  mov   bx,456,10213
  mov   ax,457,10248
  and   ax,458,10265
  and   ax, #0xffcfxffcf458,10265
;; set 80x25 color 459,10285
  mov   bx,466,10448
  mov   al,467,10482
  mov 468,10500
  mov   [bx], al468,10500
  mov   bx,471,10539
  mov   al,472,10571
  mov 473,10589
  mov   [bx], al473,10589
  mov   bx,476,10639
  mov   al,477,10670
  mov 478,10688
  mov   [bx], al478,10688
  mov   bx,481,10739
  mov   al,482,10773
  mov 483,10791
  mov   [bx], al483,10791
  mov   bx,486,10833
  mov   al,487,10867
  mov 488,10885
static void display_splash_screen(521,11369
static void display_info(530,11534
static void display_string(552,11892
static void int10_debugmsg(583,12295
static void int10_func(596,12699
static void biosfn_set_video_mode(826,17914
static void biosfn_set_cursor_shape 1052,23570
static void biosfn_set_cursor_pos 1087,24400
static void biosfn_get_cursor_pos 1122,25413
static void biosfn_set_active_page 1138,25887
static void vgamem_copy_pl4(1192,27313
static void vgamem_fill_pl4(1209,27816
static void vgamem_copy_cga(1225,28270
static void vgamem_fill_cga(1243,28834
static void biosfn_scroll 1260,29310
static void biosfn_read_char_attr 1408,33511
static void write_gfx_char_pl4(1445,34436
static void write_gfx_char_cga(1504,35603
static void write_gfx_char_lin(1581,37100
static void biosfn_write_char_attr 1609,37685
static void biosfn_write_char_only 1667,39219
  cmp   bh,1729,40787
  cmp   bh,1731,40837
  mov   dx,1742,40994
  in    al,1743,41026
  mov   dx,1744,41041
  mov   al,1745,41075
  out   dx,1746,41093
  mov   al,1747,41108
  and   al,1748,41123
  test  al,1749,41141
  add   al,1751,41182
  out   dx,1753,41216
  mov   cl,1754,41231
  and   bl,1755,41249
  mov   dx,1757,41287
  mov   al,1758,41321
  out   dx,1759,41336
  mov   dx,1760,41351
  in    al,1761,41387
  and   al,1762,41402
  or    al,1763,41420
  mov   dx,1764,41435
  out   dx,1765,41469
  cmp   cl,1767,41495
  mov   al,1769,41540
  out   dx,1770,41558
  mov   dx,1781,41687
  in    al,1782,41719
  mov   cl,1783,41734
  and   bl,1784,41752
  mov   dx,1786,41792
  mov   al,1787,41826
  out   dx,1788,41841
  mov   dx,1789,41856
  in    al,1790,41892
  and   al,1791,41907
  or    al,1792,41925
  mov   dx,1793,41940
  out   dx,1794,41974
  cmp   cl,1796,42000
  mov   al,1798,42047
  out   dx,1799,42065
static void biosfn_write_pixel 1808,42235
static void biosfn_read_pixel 1887,44053
static void biosfn_write_teletype 1940,45400
  mov   ax,2060,48079
  mov   ds,2061,48105
  mov   bx,2063,48131
  mov   al,2064,48166
  mov   bh,2066,48194
  mov   bx,2068,48220
  mov   ah,2069,48252
  and   ah,2070,48269
  mov   bx,2071,48287
  mov   al,2072,48322
  or    al,2073,48339
  mov   bx,2074,48354
  mov   ah,2075,48384
  cmp   al,2084,48561
  cmp   al,2088,48658
  cmp   al,2092,48758
  cmp   al,2096,48852
  cmp   al,2100,48943
  cmp   al,2104,49040
  cmp   al,2108,49141
  cmp   al,2112,49235
  cmp   al,2116,49327
  cmp   al,2120,49417
  cmp   al,2124,49519
  cmp   al,2128,49613
  cmp   al,2132,49704
  cmp   al,2136,49791
  cmp   al,2140,49879
  cmp   bl,2150,50063
  mov   dx,2154,50124
  in    al,2155,50156
  mov   dx,2156,50171
  mov   al,2157,50205
  out   dx,2158,50220
  mov   al,2159,50235
  out   dx,2160,50250
  mov   al,2161,50265
  out   dx,2162,50283
  mov   bl,2173,50500
  mov   bx,2186,50760
  mov   dx,2187,50775
  in    al,2188,50807
  mov   cl,2189,50822
  mov   dx,2190,50840
  mov   al,2192,50892
  out   dx,2193,50907
  mov   al,2195,50933
  out   dx,2196,50950
  cmp   cl,2199,50987
  mov   al,2201,51030
  out   dx,2202,51048
  mov   al,2204,51074
  out   dx,2205,51091
  mov   al,2206,51106
  out   dx,2207,51124
  mov   dx,2221,51362
  in    al,2222,51394
  mov   dx,2223,51409
  mov   al,2224,51443
  out   dx,2225,51461
  mov   dx,2226,51476
  in    al,2227,51512
  and   al,2228,51527
  and   bl,2229,51545
  shl   bl,2230,51563
  or    al,2231,51577
  mov   dx,2232,51592
  out   dx,2233,51626
  mov   al,2234,51641
  out   dx,2235,51659
  cmp   bl,2245,51859
  mov   dx,2249,51920
  in    al,2250,51952
  mov   dx,2251,51967
  mov   al,2252,52001
  out   dx,2253,52016
  mov   dx,2254,52031
  in    al,2255,52067
  mov   bh,2256,52082
  mov   dx,2257,52097
  in    al,2258,52129
  mov   dx,2259,52144
  mov   al,2260,52178
  out   dx,2261,52196
  mov   bl,2273,52425
  mov   al,2275,52481
  mov   bh,2277,52507
  mov   bx,2289,52726
  mov   cl,2290,52741
  mov   dx,2292,52777
  in    al,2293,52809
  mov   dx,2294,52824
  mov   al,2295,52858
  out   dx,2296,52873
  mov   dx,2297,52888
  in    al,2298,52924
  mov 2300,52950
  cmp   cl,2303,52989
  mov   dx,2305,53032
  in    al,2306,53064
  mov   dx,2307,53079
  mov   al,2308,53113
  out   dx,2309,53131
  mov   dx,2310,53146
  in    al,2311,53182
  mov 2313,53208
  mov   dx,2314,53225
  in    al,2315,53257
  mov   dx,2316,53272
  mov   al,2317,53306
  out   dx,2318,53324
  mov   dx,2331,53553
  mov   al,2332,53592
  out   dx,2333,53607
  mov   dx,2334,53622
  mov   al,2337,53674
  out   dx,2338,53689
  mov   al,2339,53704
  out   dx,2340,53719
  mov   al,2341,53734
  out   dx,2342,53749
  mov   dx,2355,53975
  mov   al,2356,54014
  out   dx,2357,54029
  mov   bx,2360,54066
  mov   dx,2361,54081
  mov   al,2364,54136
  out   dx,2365,54153
  mov   al,2368,54190
  out   dx,2369,54207
  mov   al,2372,54244
  out   dx,2373,54261
  mov   dx,2390,54553
  in    al,2391,54585
  mov   dx,2392,54600
  mov   al,2393,54634
  out   dx,2394,54652
  mov   dx,2395,54667
  in    al,2396,54703
  and   bl,2397,54718
  and   al,2399,54757
  shl   bh,2400,54775
  or    al,2401,54789
  mov   dx,2402,54804
  out   dx,2403,54838
  mov   dx,2407,54902
  in    al,2408,54934
  mov   dx,2409,54949
  mov   al,2410,54983
  out   dx,2411,55001
  and   al,2413,55027
  shl   bh,2415,55069
  and   bh,2417,55100
  mov   al,2418,55118
  out   dx,2419,55133
  mov   al,2421,55165
  out   dx,2422,55183
  mov   dx,2434,55402
  mov   al,2435,55440
  out   dx,2436,55455
  mov   ah,2438,55481
  mov   dx,2439,55496
  in    al,2440,55526
  xchg  al,2441,55541
  in    al,2443,55567
  mov   ch,2444,55582
  in    al,2445,55597
  mov   cl,2446,55612
  mov   dx,2459,55839
  mov   al,2460,55877
  out   dx,2461,55892
  mov   bx,2464,55929
  mov   dx,2465,55944
  in    al,2467,55989
  mov 2469,56015
  in    al,2471,56043
  mov 2473,56069
  in    al,2475,56097
  mov 2477,56123
  mov   dx,2493,56392
  mov   al,2494,56422
  out   dx,2495,56437
  mov   dx,2506,56639
  in    al,2507,56669
  mov   bl,2508,56684
  mov   dx,2519,56893
  in    al,2520,56925
  mov   dx,2521,56940
  mov   al,2522,56974
  out   dx,2523,56992
  mov   dx,2524,57007
  in    al,2525,57043
  mov   bl,2526,57058
  shr   bl,2527,57073
  mov   dx,2528,57087
  in    al,2529,57119
  mov   dx,2530,57134
  mov   al,2531,57168
  out   dx,2532,57186
  mov   dx,2533,57201
  in    al,2534,57237
  mov   bh,2535,57252
  and   bh,2536,57267
  test  bl,2537,57285
  shr   bh,2539,57327
  mov   dx,2541,57358
  in    al,2542,57390
  mov   dx,2543,57405
  mov   al,2544,57439
  out   dx,2545,57457
static void biosfn_perform_gray_scale_summing 2552,57605
static void get_font_access(2588,58598
static void release_font_access(2610,58916
  xor dx,2640,59354
static void set_scan_lines(2645,59390
static void biosfn_load_text_user_pat 2675,60192
static void biosfn_load_text_8_14_pat 2694,60627
static void biosfn_load_text_8_8_pat 2713,61003
  mov   dx,2737,61535
  mov   ah,2738,61569
  mov   al,2739,61584
  out   dx,2740,61602
static void biosfn_load_text_8_16_pat 2747,61750
static void biosfn_load_gfx_8_8_chars 2766,62126
static void biosfn_load_gfx_user_chars 2772,62235
static void biosfn_load_gfx_8_14_chars 2778,62382
static void biosfn_load_gfx_8_8_dd_chars 2784,62478
static void biosfn_load_gfx_8_16_chars 2790,62576
static void biosfn_get_font_info 2797,62768
  mov   ax,2852,64154
  mov   ds,2853,64180
  xor   ch,2854,64195
  mov   bx,2855,64210
  mov   cl,2856,64241
  and   cl,2857,64258
  mov   bx,2858,64276
  mov   ax,2859,64311
  mov   bx,2860,64328
  cmp   ax,2861,64348
  mov   bh,2863,64409
static void biosfn_alternate_prtsc(2871,64576
biosfn_select_vert_res:biosfn_select_vert_res2880,64762
; res : 00 200 lines,2882,64787
; res : 00 200 lines, 01 350 lines,2882,64787
  mov   dl,2887,64870
  mov   ax,2888,64885
  mov   ds,2889,64911
  mov   bx,2890,64926
  mov   al,2891,64960
  mov   bx,2892,64977
  mov   ah,2893,65008
  cmp   dl,2894,65025
  cmp   dl,2897,65085
  mov   al,2900,65137
  xor   ah,2901,65152
  mov   bx,2903,65178
  add   sp,2906,65231
vert_res_400:vert_res_4002909,65273
  ; reset modeset ctl bit 7 and set bit 2911,65288
  and   al,2914,65364
  or    al,2915,65382
  and   ah,2916,65400
  or    ah,2917,65418
vert_res_350:vert_res_3502919,65457
  ; reset modeset ctl bit 7 and bit 2921,65472
  and   al,2924,65544
  and   ah,2925,65562
  or    ah,2926,65580
vert_res_200:vert_res_2002928,65619
  ; set modeset ctl bit 7 and reset bit 2930,65634
  and   al,2933,65710
  or    al,2934,65728
  and   ah,2935,65746
  or    ah,2936,65764
  mov   bx,2938,65796
  mov 2939,65830
  mov   bx,2940,65847
  mov 2941,65878
  mov   ax,2943,65908
.byte 0x0d,x0d2952,66041
.byte 0x0d,0x0a,x0a2952,66041
  mov   dl,2960,66143
  and   dl,2961,66158
  shl   dl,2962,66176
  mov   ax,2963,66190
  mov   ds,2964,66216
  mov   bx,2965,66231
  mov   al,2966,66265
  and   al,2967,66282
  or    al,2968,66300
  mov 2969,66315
  mov   ax,2970,66332
  mov   bl,2980,66447
  and   bl,2981,66462
  xor   bl,2982,66480
  shl   bl,2983,66498
  mov   dx,2984,66512
  in    al,2985,66550
  and   al,2986,66565
  or    al,2987,66583
  mov   dx,2988,66598
  out   dx,2989,66637
  mov   ax,2990,66652
  mov   dl,3000,66768
  and   dl,3001,66783
  xor   dl,3002,66801
  shl   dl,3003,66819
  mov   ax,3004,66833
  mov   ds,3005,66859
  mov   bx,3006,66874
  mov   al,3007,66908
  and   al,3008,66925
  or    al,3009,66943
  mov 3010,66958
  mov   ax,3011,66975
  mov   dl,3022,67101
  and   dl,3023,67116
  xor   dl,3024,67134
  mov   ax,3025,67152
  mov   ds,3026,67178
  mov   bx,3027,67193
  mov   al,3028,67227
  and   al,3029,67244
  or    al,3030,67262
  mov 3031,67277
  mov   ax,3032,67294
static void biosfn_switch_video_interface 3040,67458
static void biosfn_enable_video_refresh_control 3046,67583
static void biosfn_write_string 3054,67785
  cmp   al,3089,68673
  cmp   al,3091,68724
  mov   ax,3100,68865
  mov   ds,3101,68891
  mov   bx,3102,68906
  mov   al,3103,68938
  mov   bl,3104,68955
  xor   bh,3105,68970
  mov   al,3107,68996
  mov   ax,3114,69086
  mov   ds,3115,69112
  mov   ax,3116,69127
  mov   bx,3117,69142
  mov 3118,69174
  mov   al,3120,69204
  xor   ah,3121,69219
  mov   bx,3123,69245
  add   sp,3126,69297
  mov   al,3130,69341
.byte 0x0d,x0d3137,69453
.byte 0x0d,0x0a,x0a3137,69453
static void biosfn_read_state_info 3142,69586
static Bit16u biosfn_read_video_state_size2 3169,70466
static void biosfn_read_video_state_size 3186,70745
static Bit16u biosfn_save_video_state 3193,70912
static Bit16u biosfn_restore_video_state 3278,74393
static Bit8u find_vga_entry(3386,78523
static void memsetb(3405,78946
static void memsetw(3443,79525
static void memcpyb(3481,80104
static void memcpyw(3527,80826
read_byte(3580,81755
read_word(3604,82149
write_byte(3628,82541
write_word(3655,82997
inb(3682,83448
inw(3699,83600
outb(3717,83846
outw(3739,84155
Bit16u get_SS(3759,84362
void unimplemented(3767,84428
void unknown(3772,84486
void printf(3780,84709
ASM_START 3843,86019
.byte 0xCBxCB3851,86123

tools/firmware/vgabios/biossums.c,580
typedef unsigned char byte;22,923
#define MAX_BIOS_DATA 26,993
#define PMID_LEN 33,1261
#define PMID_CHKSUM 34,1288
#define PCIR_LEN 41,1553
byte bios_data[bios_data46,1639
long bios_len;47,1670
int main(50,1687
void check(175,5134
long chksum_bios_get_offset(184,5268
byte chksum_bios_calc_value(190,5355
byte chksum_bios_get_value(204,5610
void chksum_bios_set_value(210,5703
byte chksum_pmid_calc_value(216,5806
long chksum_pmid_get_offset(235,6172
byte chksum_pmid_get_value(253,6567
void chksum_pmid_set_value(260,6758
long chksum_pcir_get_offset(267,6958

tools/firmware/vgabios/clext.c,6318
#undef CIRRUS_VESA3_PMINFO23,888
#define PM_BIOSMEM_CURRENT_MODE 26,923
#define PM_BIOSMEM_CRTC_ADDRESS 27,961
#define PM_BIOSMEM_VBE_MODE 28,999
#define PM_BIOSMEM_VBE_POWER 29,1033
  unsigned short mode;34,1099
  unsigned short width;35,1122
  unsigned short height;36,1146
  unsigned short depth;37,1171
  unsigned short hidden_dac;39,1207
  unsigned short *seq;seq40,1248
  unsigned short *graph;graph41,1283
  unsigned short *crtc;crtc42,1320
  unsigned char bitsperpixel;44,1368
  unsigned char vesacolortype;45,1398
  unsigned char vesaredmask;46,1429
  unsigned char vesaredpos;47,1458
  unsigned char vesagreenmask;48,1486
  unsigned char vesagreenpos;49,1517
  unsigned char vesabluemask;50,1547
  unsigned char vesabluepos;51,1577
  unsigned char vesareservedmask;53,1618
  unsigned char vesareservedpos;54,1652
} cirrus_mode_t;55,1685
#define CIRRUS_MODE_SIZE 56,1702
#define CIRRUS_PM16INFO_SIZE 60,1756
unsigned short cseq_vga[cseq_vga63,1799
unsigned short cgraph_vga[cgraph_vga64,1844
unsigned short ccrtc_vga[ccrtc_vga65,1905
unsigned short cgraph_svgacolor[cgraph_svgacolor68,1983
unsigned short cseq_640x480x8[cseq_640x480x874,2133
unsigned short ccrtc_640x480x8[ccrtc_640x480x881,2302
unsigned short cseq_640x480x16[cseq_640x480x1690,2532
unsigned short ccrtc_640x480x16[ccrtc_640x480x1697,2702
unsigned short cseq_640x480x24[cseq_640x480x24106,2933
unsigned short ccrtc_640x480x24[ccrtc_640x480x24113,3103
unsigned short cseq_800x600x8[cseq_800x600x8122,3333
unsigned short ccrtc_800x600x8[ccrtc_800x600x8129,3502
unsigned short cseq_800x600x16[cseq_800x600x16137,3731
unsigned short ccrtc_800x600x16[ccrtc_800x600x16144,3901
unsigned short cseq_800x600x24[cseq_800x600x24152,4131
unsigned short ccrtc_800x600x24[ccrtc_800x600x24159,4301
unsigned short cseq_1024x768x8[cseq_1024x768x8167,4531
unsigned short ccrtc_1024x768x8[ccrtc_1024x768x8174,4701
unsigned short cseq_1024x768x16[cseq_1024x768x16182,4932
unsigned short ccrtc_1024x768x16[ccrtc_1024x768x16189,5103
unsigned short cseq_1024x768x24[cseq_1024x768x24197,5335
unsigned short ccrtc_1024x768x24[ccrtc_1024x768x24204,5506
unsigned short cseq_1280x1024x8[cseq_1280x1024x8212,5738
unsigned short ccrtc_1280x1024x8[ccrtc_1280x1024x8219,5909
unsigned short cseq_1280x1024x16[cseq_1280x1024x16227,6142
unsigned short ccrtc_1280x1024x16[ccrtc_1280x1024x16234,6314
unsigned short cseq_1600x1200x8[cseq_1600x1200x8243,6548
unsigned short ccrtc_1600x1200x8[ccrtc_1600x1200x8250,6719
cirrus_mode_t cirrus_modes[cirrus_modes258,6934
unsigned char cirrus_id_table[cirrus_id_table320,8796
unsigned short cirrus_vesa_modelist[cirrus_vesa_modelist330,8899
.byte 0x0d,x0d370,9486
.byte 0x0d,x0d371,9502
.byte 0x0d,0x0a,x0a371,9502
.byte 0x0d,x0d375,9593
.byte 0x0d,x0d376,9609
.byte 0x0d,0x0a,x0a376,9609
  SET_INT_VECTOR(390,9843
  mov  ax,1433,26937
  cmp  al,1434,26953
  xor  al,1440,27046
  shr  ax,1441,27060
  mov  ax,1445,27108
  cmp  al,1446,27124
  and  ax,1453,27224
  shr  ax,1454,27243
  or   ax,1455,27257
  ret1457,27281
  mov  al,1465,27393
  out  dx,1466,27410
  out  dx,1469,27444
  mov  al,1471,27468
  out  dx,1472,27485
  mov  al,1474,27509
  out  dx,1475,27523
  mov  al,1477,27547
  out  dx,1478,27564
  in   al,1480,27588
  and  al,1481,27602
  mov  ah,1483,27629
  shl  bl,1484,27643
  and  bl,1485,27657
  or   al,1486,27674
  out  dx,1487,27688
  mov  bl,1489,27712
  and  ah,1490,27726
  shl  bl,1491,27743
  and  bl,1492,27757
  or   ah,1493,27774
  mov  al,1494,27788
  out  dx,1495,27805
  in   al,1497,27829
  and  al,1498,27843
  or   al,1499,27860
  out  dx,1500,27874
  ret1502,27898
  mov  al,1508,27995
  out  dx,1509,28012
  in   al,1511,28036
  mov  ah,1512,28050
  mov  al,1514,28074
  out  dx,1515,28091
  in   al,1517,28115
  mov  al,1520,28149
  out  dx,1521,28166
  in   al,1523,28190
  mov  bl,1525,28214
  and  al,1526,28228
  and  bl,1527,28245
  shr  bl,1528,28262
  or   bl,1529,28276
  mov  al,1530,28290
  out  dx,1531,28307
  in   al,1533,28331
  and  al,1534,28345
  shr  al,1535,28362
  or   bl,1536,28376
  mov  dl,1537,28390
  xor  dh,1538,28404
  mov si,1546,28482
  shl al,1550,28559
  mov bl,1551,28572
  xor ah,1552,28585
  mov al,1554,28618
  mov dx,1555,28634
  out dx,1556,28651
  push ax1557,28664
;; Windows Vista appears to be emulating this sequence as part of changing 1559,28675
;; screen resolution,1560,28751
;; Instead,1561,28817
;;mov cx,1562,28884
;;mov cx, #0xa000xa0001562,28884
;;mov es,1563,28902
;;mov es, cx1563,28902
;;xor di,1564,28915
;;xor di, di1564,28915
;;mov ax,1565,28928
;;mov ax, si1565,28928
;;mov cx,1566,28941
;;cld1567,28957
;;rep1568,28963
  mov ax,1570,28981
  shl ax,1571,28994
  mov al,1572,29007
  out dx,1573,29023
  out dx, ax	1573,29023
  mov ax,1574,29083
  mov al,1575,29096
  out dx,1576,29114
  out dx, ax 1576,29114
  cmp ah,1580,29184
  xor ah,1583,29224
  mov dx,1584,29236
  out dx,1585,29253
cirrus_extbios_handlers:cirrus_extbios_handlers1591,29290
  dw cirrus_extbios_unimplemented1596,29396
  dw cirrus_extbios_unimplemented1601,29531
  dw cirrus_extbios_unimplemented1606,29676
  dw cirrus_extbios_unimplemented1611,29821
  dw cirrus_extbios_unimplemented1616,29966
  dw cirrus_extbios_unimplemented1621,30111
  dw cirrus_extbios_unimplemented1626,30246
  dw cirrus_extbios_unimplemented1631,30391
  dw cirrus_extbios_unimplemented1636,30506
  dw cirrus_extbios_unimplemented1641,30651
  dw cirrus_extbios_unimplemented1646,30796
cirrus_vesa_handlers:cirrus_vesa_handlers1653,30966
  dw cirrus_vesa_03h1658,31060
  dw cirrus_vesa_07h1663,31163
  dw cirrus_vesa_unimplemented1668,31286
  dw cirrus_vesa_unimplemented1673,31419
  .byte 0x50,x501685,31561
  .byte 0x50,0x4d,x4d1685,31561
  .byte 0x50,0x4d,0x49,x491685,31561
  .byte 0x50,0x4d,0x49,0x44 x441685,31561
  dw cirrus_vesa_pmbios_entry 1687,31617
  dw cirrus_vesa_pmbios_init 1688,31661
  dw 0x0000 x00001691,31743
  dw 0xA000 xA0001693,31794
  dw 0xB000 xB0001696,31857
  dw 0xB800 xB8001698,31908
  dw 0xC000 xC0001701,31971
cirrus_vesa_is_protected_mode:cirrus_vesa_is_protected_mode1702,31996
static void cirrus_debugmsg(1711,32292

tools/firmware/vgabios/vbetables-gen.c,198
#define VBE_DISPI_TOTAL_VIDEO_MEMORY_MB 5,78
    int width;8,139
    int height;9,154
    int depth;10,170
    int mode;11,185
} ModeInfo;12,199
ModeInfo modes[modes14,212
int main(82,3218

tools/firmware/vgabios/vgabios.h,895
#define vgabios_h_included2,27
typedef unsigned char  Bit8u;5,67
typedef unsigned short Bit16u;6,97
typedef unsigned long  Bit32u;7,128
typedef unsigned short Boolean;8,159
#define SET_AL(12,207
#define SET_BL(13,258
#define SET_CL(14,309
#define SET_DL(15,360
#define SET_AH(16,411
#define SET_BH(17,469
#define SET_CH(18,527
#define SET_DH(19,585
#define GET_AL(21,644
#define GET_BL(22,677
#define GET_CL(23,710
#define GET_DL(24,743
#define GET_AH(25,776
#define GET_BH(26,805
#define GET_CH(27,834
#define GET_DH(28,863
#define SET_CF(30,893
#define CLEAR_CF(31,930
#define GET_CF(32,967
#define SET_ZF(34,1006
#define CLEAR_ZF(35,1043
#define GET_ZF(36,1080
#define SCROLL_DOWN 38,1119
#define SCROLL_UP 39,1141
#define NO_ATTR 40,1163
#define WITH_ATTR 41,1185
#define SCREEN_SIZE(43,1208
#define SCREEN_MEM_START(44,1254
#define SCREEN_IO_START(45,1311

tools/firmware/vgabios/vgatables.h,5846
#define BIOSMEM_SEG 6,29
#define BIOSMEM_INITIAL_MODE 8,55
#define BIOSMEM_CURRENT_MODE 9,90
#define BIOSMEM_NB_COLS 10,125
#define BIOSMEM_PAGE_SIZE 11,160
#define BIOSMEM_CURRENT_START 12,195
#define BIOSMEM_CURSOR_POS 13,230
#define BIOSMEM_CURSOR_TYPE 14,265
#define BIOSMEM_CURRENT_PAGE 15,300
#define BIOSMEM_CRTC_ADDRESS 16,335
#define BIOSMEM_CURRENT_MSR 17,370
#define BIOSMEM_CURRENT_PAL 18,405
#define BIOSMEM_NB_ROWS 19,440
#define BIOSMEM_CHAR_HEIGHT 20,475
#define BIOSMEM_VIDEO_CTL 21,510
#define BIOSMEM_SWITCHES 22,545
#define BIOSMEM_MODESET_CTL 23,580
#define BIOSMEM_DCC_INDEX 24,615
#define BIOSMEM_VS_POINTER 25,650
#define BIOSMEM_VBE_FLAG 26,685
#define BIOSMEM_VBE_MODE 27,720
#define BIOSMEM_VBE_POWER 28,755
#define VGAREG_ACTL_ADDRESS 36,822
#define VGAREG_ACTL_WRITE_DATA 37,867
#define VGAREG_ACTL_READ_DATA 38,912
#define VGAREG_INPUT_STATUS 40,958
#define VGAREG_WRITE_MISC_OUTPUT 41,1003
#define VGAREG_VIDEO_ENABLE 42,1048
#define VGAREG_SEQU_ADDRESS 43,1093
#define VGAREG_SEQU_DATA 44,1138
#define VGAREG_PEL_MASK 46,1184
#define VGAREG_DAC_STATE 47,1229
#define VGAREG_DAC_READ_ADDRESS 48,1274
#define VGAREG_DAC_WRITE_ADDRESS 49,1319
#define VGAREG_DAC_DATA 50,1364
#define VGAREG_READ_FEATURE_CTL 52,1410
#define VGAREG_READ_MISC_OUTPUT 53,1455
#define VGAREG_GRDC_ADDRESS 55,1501
#define VGAREG_GRDC_DATA 56,1546
#define VGAREG_MDA_CRTC_ADDRESS 58,1592
#define VGAREG_MDA_CRTC_DATA 59,1637
#define VGAREG_VGA_CRTC_ADDRESS 60,1682
#define VGAREG_VGA_CRTC_DATA 61,1727
#define VGAREG_MDA_WRITE_FEATURE_CTL 63,1773
#define VGAREG_VGA_WRITE_FEATURE_CTL 64,1818
#define VGAREG_ACTL_RESET 65,1863
#define VGAREG_MDA_MODECTL 67,1909
#define VGAREG_CGA_MODECTL 68,1954
#define VGAREG_CGA_PALETTE 69,1999
#define VGAMEM_GRAPH 72,2064
#define VGAMEM_CTEXT 73,2092
#define VGAMEM_MTEXT 74,2120
#define MODE_MAX 81,2204
#define TEXT 82,2226
#define GRAPH 83,2250
#define CTEXT 85,2275
#define MTEXT 86,2299
#define CGA 87,2323
#define PLANAR1 88,2347
#define PLANAR4 89,2371
#define LINEAR8 90,2395
#define LINEAR15 93,2432
#define LINEAR16 94,2456
#define LINEAR24 95,2480
#define LINEAR32 96,2504
{Bit8u  svgamode;99,2544
 Bit8u  memmodel;101,2598
 Bit8u  pixbits;102,2669
 Bit16u sstart;103,2686
 Bit8u  pelmask;104,2702
 Bit8u  dacmodel;105,2719
} VGAMODES;106,2751
static VGAMODES vga_modes[vga_modes108,2764
static Bit8u line_to_vpti[line_to_vpti129,3686
#define DAC_MAX_MODEL 135,3857
static Bit8u dac_regs[dac_regs137,3882
    Bit8u  twidth;142,4005
    Bit8u  theightm1;143,4024
    Bit8u  cheight;144,4046
    Bit8u  slength_l;145,4066
    Bit8u  slength_h;146,4088
    Bit8u  sequ_regs[sequ_regs147,4110
    Bit8u  miscreg;148,4135
    Bit8u  crtc_regs[crtc_regs149,4155
    Bit8u  actl_regs[actl_regs150,4181
    Bit8u  grdc_regs[grdc_regs151,4207
} VideoParamTableEntry;152,4232
static VideoParamTableEntry video_param_table[video_param_table154,4257
 0x00,x00168,4778
 0x00, 0x00,x00168,4778
 0x00, 0x00, 0x00,x00168,4778
 0x00, 0x00, 0x00, 0x00,x00168,4778
 0x00, 0x00, 0x00, 0x00, 0x00,x00168,4778
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00168,4778
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00168,4778
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00168,4778
 0x00,x00169,4827
 0x00, 0x00,x00169,4827
 0x00, 0x00, 0x00,x00169,4827
 0x00, 0x00, 0x00, 0x00,x00169,4827
 0x00, 0x00, 0x00, 0x00, 0x00,x00169,4827
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00169,4827
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00169,4827
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00169,4827
 0x00,x00170,4876
 0x00, 0x00,x00170,4876
 0x00, 0x00, 0x00,x00170,4876
 0x00, 0x00, 0x00, 0x00,x00170,4876
 0x00, 0x00, 0x00, 0x00, 0x00,x00170,4876
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00170,4876
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00170,4876
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00170,4876
 0x00,x00171,4925
 0x00, 0x00,x00171,4925
 0x00, 0x00, 0x00,x00171,4925
 0x00, 0x00, 0x00, 0x00,x00171,4925
 0x00, 0x00, 0x00, 0x00, 0x00,x00171,4925
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00171,4925
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00171,4925
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00171,4925
 0x00,x00172,4974
 0x00, 0x00,x00172,4974
 0x00, 0x00, 0x00,x00172,4974
 0x00, 0x00, 0x00, 0x00,x00172,4974
 0x00, 0x00, 0x00, 0x00, 0x00,x00172,4974
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00172,4974
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00172,4974
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00172,4974
 0x00,x00173,5023
 0x00, 0x00,x00173,5023
 0x00, 0x00, 0x00,x00173,5023
 0x00, 0x00, 0x00, 0x00,x00173,5023
 0x00, 0x00, 0x00, 0x00, 0x00,x00173,5023
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00173,5023
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00173,5023
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00173,5023
 0x00,x00174,5072
 0x00, 0x00,x00174,5072
 0x00, 0x00, 0x00,x00174,5072
 0x00, 0x00, 0x00, 0x00,x00174,5072
 0x00, 0x00, 0x00, 0x00, 0x00,x00174,5072
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00174,5072
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00174,5072
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00174,5072
 0x00,x00175,5121
 0x00, 0x00,x00175,5121
 0x00, 0x00, 0x00,x00175,5121
 0x00, 0x00, 0x00, 0x00,x00175,5121
 0x00, 0x00, 0x00, 0x00, 0x00,x00175,5121
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00175,5121
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00175,5121
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,x00175,5121
static Bit8u palette0[palette0533,18766
static Bit8u palette1[palette1545,19844
static Bit8u palette2[palette2557,20922
static Bit8u palette3[palette3569,22000
static Bit8u static_functionality[static_functionality608,26199

tools/firmware/vgabios/vbe.c,6018
#define VBE_OEM_SOFTWARE_REV 42,1671
.byte	0x0a,x0a69,2394
.byte	0x0a,x0a70,2410
.byte	0x0a,x0a75,2509
.byte	0x0a,x0a76,2525
.byte	0x0a,x0a82,2686
.byte	0x0a,0x0d,x0d82,2686
  cmp  bx,101,3111
  mov  ax,103,3162
  mov  ax,106,3216
  mov  dx,109,3250
  mov  ax,110,3286
  out  dx,111,3320
  mov  dx,113,3344
  out  dx,114,3379
  in   ax,115,3393
  cmp  dx,117,3417
  mov  ax,119,3453
  mov  ax,122,3494
  cmp  bl,126,3547
  cmp  bl,128,3598
  mov  ax,130,3649
vesa_pm_set_display_start1:vesa_pm_set_display_start1132,3674
; convert offset to 133,3702
static void dispi_set_yres(266,5746
static void dispi_set_bpp(273,5888
ASM_START280,6025
; AL 281,6035
  mov  bx,304,6437
  or   ax,305,6451
  mov  dx,307,6507
  mov  ax,308,6543
  out  dx,309,6577
  mov  dx,310,6591
  in   ax,311,6626
  mov  ax,313,6650
  mov  bx,324,6790
  or   ax,325,6804
  mov  dx,327,6860
  mov  ax,328,6896
  out  dx,329,6929
  mov  dx,330,6943
  in   ax,331,6978
  mov  ax,333,7002
  mov  dx,343,7117
  mov  ax,344,7153
  out  dx,345,7189
  mov  dx,347,7213
  out  dx,348,7248
  mov  dx,354,7307
  mov  ax,355,7343
  out  dx,356,7379
  mov  dx,357,7393
  in   ax,358,7428
  mov  dx,365,7496
  mov  ax,366,7532
  out  dx,367,7566
  mov  dx,369,7590
  out  dx,370,7625
  mov  dx,376,7682
  mov  ax,377,7718
  out  dx,378,7752
  mov  dx,379,7766
  in   ax,380,7801
static void dispi_set_bank_farcall(385,7840
  mov  dx,425,8525
  mov  ax,426,8561
  out  dx,427,8599
  mov  dx,429,8623
  out  dx,430,8658
  mov  dx,436,8719
  mov  ax,437,8755
  out  dx,438,8793
  mov  dx,439,8807
  in   ax,440,8842
  mov  dx,447,8913
  mov  ax,448,8949
  out  dx,449,8987
  mov  dx,451,9011
  out  dx,452,9046
  mov  dx,458,9107
  mov  ax,459,9143
  out  dx,460,9181
  mov  dx,461,9195
  in   ax,462,9230
  mov  bx,470,9311
  cmp  al,472,9346
  shr  bx,474,9385
  shr  bx,476,9415
  mov  dx,477,9429
  mov  ah,478,9466
  mov  al,479,9480
  out  dx,480,9497
  mov  dx,490,9616
  mov  ax,491,9652
  out  dx,492,9692
  mov  dx,494,9716
  out  dx,495,9751
  mov  dx,501,9814
  mov  ax,502,9850
  out  dx,503,9890
  mov  dx,504,9904
  in   ax,505,9939
  mov  dx,511,10003
  mov  ax,512,10039
  out  dx,513,10080
  mov  dx,514,10094
  in   ax,515,10129
  push dx521,10189
  mov  dx,524,10225
  mov  ax,525,10261
  out  dx,526,10295
  mov  dx,527,10309
  in   ax,528,10344
  mov  dx,530,10368
  mov  ax,531,10405
  out  dx,532,10424
  shr  ax,535,10458
  mov  ah,537,10482
  mov  al,538,10496
  out  dx,539,10513
  call vga_set_virt_width541,10537
  mov  dx,544,10589
  mov  ax,545,10625
  out  dx,546,10659
  mov  dx,547,10673
  in   ax,548,10708
  mov  dx,551,10742
  mov  ah,552,10779
  mov  al,553,10793
  out  dx,554,10810
  mov  al,556,10834
  out  dx,557,10851
  in   al,559,10875
  and  al,560,10889
  test ah,561,10906
  or   al,563,10941
  test ah,565,10970
  or   al,567,11005
  out  dx,569,11034
  out  dx, al569,11034
  mov  dx,572,11068
  mov  ax,573,11105
  out  dx,574,11124
  mov  al,575,11138
  out  dx,576,11155
  mov  dx,577,11169
  in   al,578,11203
  or   al,579,11217
  out  dx,580,11234
  mov  dx,581,11248
  in   al,582,11279
  mov  dx,583,11293
  mov  al,584,11326
  out  dx,585,11343
  mov  dx,586,11357
  in   al,587,11392
  or   al,588,11406
  mov  dx,589,11423
  out  dx,590,11456
  mov  al,591,11470
  out  dx,592,11487
  mov  dx,593,11501
  mov  ax,594,11534
  out  dx,595,11553
  mov  dx,596,11567
  mov  ax,597,11600
  out  dx,598,11619
  out  dx, ax598,11619
  Bit16u mode; Boolean using_lfb;651,12662
  ModeInfoListItem  *cur_info=cur_info653,12698
ASM_START681,13150
; VBE Init - Initialise the Vesa Bios Extension Code698,13404
  mov  ax,702,13545
  cmp  ax,705,13612
  mov  ax,709,13683
  mov  ds,710,13708
  mov  bx,711,13722
  mov  al,712,13752
  mov 713,13769
  mov  ax,716,13805
  mov  bx,720,13913
  ret726,13990
  test ax,732,14109
  mov  ax,734,14142
  mov  ds,735,14161
  mov  si,736,14175
  mov  ax,739,14244
  mov  ds,740,14263
  mov  si,741,14277
void vbe_biosfn_return_controller_information(756,14752
void vbe_biosfn_return_mode_information(883,19336
void vbe_biosfn_set_mode(952,21528
  mov  ax,1044,24540
  mov  ds,1045,24565
  and  ax,1047,24603
  mov  bx,1049,24653
  mov  ax,1050,24683
  mov  bx,1051,24699
  mov  bx,1054,24743
  mov  al,1055,24777
  mov  bl,1056,24793
  xor  bh,1057,24807
  mov  ax,1059,24832
Bit16u vbe_biosfn_read_video_state_size(1065,24877
void vbe_biosfn_save_video_state(1070,24942
void vbe_biosfn_restore_video_state(1091,25495
void vbe_biosfn_save_restore_state(1137,27017
  cmp  bl,1202,28935
  cmp  bh,1204,28973
  mov  ax,1207,29042
  mov  ax,1210,29087
  cmp  ax,1213,29146
  mov  ax,1215,29181
  mov  dx,1219,29248
  mov  ax,1220,29262
  mov  ax,1223,29302
  mov  ax,1249,30177
  cmp  bl,1250,30191
  cmp  bl,1252,30244
  mov  ax,1255,30332
  xor  bh,1260,30417
  mov  bl,1261,30431
  or   bl,1262,30445
  shl  ax,1264,30476
  mov  bl,1265,30490
  xor  dx,1267,30515
  xor  bh,1274,30658
  mov  bl,1275,30672
  mov  cx,1277,30714
  or   bl,1278,30728
  shr  ax,1280,30759
  mov  bl,1281,30773
  mov  bx,1284,30808
  mov  dx,1286,30851
  mov  ax,1287,30865
  cmp  bl,1330,32817
  cmp  bl,1332,32859
  mov  ax,1335,32926
  mov  ax,1338,32970
  mov  ax,1340,33010
  mov  ax,1342,33050
  mov  cx,1346,33120
  mov  dx,1348,33160
  xor  bh,1349,33174
  mov  ax,1350,33188
  cmp  bl,1368,33695
  mov  ax,1371,33772
  cmp  bh,1375,33845
  cmp  bh,1377,33884
  or   ax,1379,33927
  and  ax,1382,33995
  mov  bh,1386,34091
  and  ax,1388,34132
  mov  bh,1390,34181
  mov  ax,1392,34209
  mov  ax,1395,34254
void vbe_biosfn_set_get_palette_data(1409,34490
  test bl,1426,35036
  mov di,1428,35062
  mov es,1429,35080
  mov di,1430,35093
  mov cx,1431,35119
  sub cx,1432,35143
  mov ax,1433,35156
  mov ax,1436,35187

tools/firmware/vgabios/vgafonts.h,226
static Bit8u vgafont8[vgafont86,172
static Bit8u vgafont14[vgafont14265,12750
static Bit8u vgafont16[vgafont16524,34546
static Bit8u vgafont14alt[vgafont14alt783,59414
static Bit8u vgafont16alt[vgafont16alt784,59451

tools/firmware/vgabios/vbe.h,9376
#define vbe_h_included2,23
typedef struct VbeInfoBlock22,594
   Bit8u  VbeSignature[VbeSignature24,625
   Bit16u VbeVersion;25,652
   Bit16u OemStringPtr_Off;26,674
   Bit16u OemStringPtr_Seg;27,702
   Bit8u  Capabilities[Capabilities28,730
   Bit16u VideoModePtr_Off;29,757
   Bit16u VideoModePtr_Seg;30,785
   Bit16u TotalMemory;31,813
   Bit16u OemSoftwareRev;32,836
   Bit16u OemVendorNamePtr_Off;33,862
   Bit16u OemVendorNamePtr_Seg;34,894
   Bit16u OemProductNamePtr_Off;35,926
   Bit16u OemProductNamePtr_Seg;36,959
   Bit16u OemProductRevPtr_Off;37,992
   Bit16u OemProductRevPtr_Seg;38,1024
   Bit16u  Reserved[Reserved39,1056
   Bit8u  OemData[OemData40,1124
} VbeInfoBlock;41,1148
typedef struct ModeInfoBlockCompact46,1274
   Bit16u ModeAttributes;49,1359
   Bit8u  WinAAttributes;50,1385
   Bit8u  WinBAttributes;51,1411
   Bit16u WinGranularity;52,1437
   Bit16u WinSize;53,1463
   Bit16u WinASegment;54,1482
   Bit16u WinBSegment;55,1505
   Bit32u WinFuncPtr;56,1528
   Bit16u BytesPerScanLine;57,1550
   Bit16u XResolution;59,1625
   Bit16u YResolution;60,1648
   Bit8u  XCharSize;61,1671
   Bit8u  YCharSize;62,1692
   Bit8u  NumberOfPlanes;63,1713
   Bit8u  BitsPerPixel;64,1739
   Bit8u  NumberOfBanks;65,1763
   Bit8u  MemoryModel;66,1788
   Bit8u  BankSize;67,1811
   Bit8u  NumberOfImagePages;68,1831
   Bit8u  Reserved_page;69,1861
   Bit8u  RedMaskSize;71,1957
   Bit8u  RedFieldPosition;72,1980
   Bit8u  GreenMaskSize;73,2008
   Bit8u  GreenFieldPosition;74,2033
   Bit8u  BlueMaskSize;75,2063
   Bit8u  BlueFieldPosition;76,2087
   Bit8u  RsvdMaskSize;77,2116
   Bit8u  RsvdFieldPosition;78,2140
   Bit8u  DirectColorModeInfo;79,2169
   Bit32u PhysBasePtr;81,2247
   Bit32u OffScreenMemOffset;82,2270
   Bit16u OffScreenMemSize;83,2300
   Bit16u LinBytesPerScanLine;85,2375
   Bit8u  BnkNumberOfPages;86,2406
   Bit8u  LinNumberOfPages;87,2434
   Bit8u  LinRedMaskSize;88,2462
   Bit8u  LinRedFieldPosition;89,2488
   Bit8u  LinGreenMaskSize;90,2519
   Bit8u  LinGreenFieldPosition;91,2547
   Bit8u  LinBlueMaskSize;92,2580
   Bit8u  LinBlueFieldPosition;93,2607
   Bit8u  LinRsvdMaskSize;94,2639
   Bit8u  LinRsvdFieldPosition;95,2666
   Bit32u MaxPixelClock;96,2698
} ModeInfoBlockCompact;98,2823
typedef struct ModeInfoBlock100,2848
   Bit16u ModeAttributes;103,2926
   Bit8u  WinAAttributes;104,2952
   Bit8u  WinBAttributes;105,2978
   Bit16u WinGranularity;106,3004
   Bit16u WinSize;107,3030
   Bit16u WinASegment;108,3049
   Bit16u WinBSegment;109,3072
   Bit32u WinFuncPtr;110,3095
   Bit16u BytesPerScanLine;111,3117
   Bit16u XResolution;113,3192
   Bit16u YResolution;114,3215
   Bit8u  XCharSize;115,3238
   Bit8u  YCharSize;116,3259
   Bit8u  NumberOfPlanes;117,3280
   Bit8u  BitsPerPixel;118,3306
   Bit8u  NumberOfBanks;119,3330
   Bit8u  MemoryModel;120,3355
   Bit8u  BankSize;121,3378
   Bit8u  NumberOfImagePages;122,3398
   Bit8u  Reserved_page;123,3428
   Bit8u  RedMaskSize;125,3524
   Bit8u  RedFieldPosition;126,3547
   Bit8u  GreenMaskSize;127,3575
   Bit8u  GreenFieldPosition;128,3600
   Bit8u  BlueMaskSize;129,3630
   Bit8u  BlueFieldPosition;130,3654
   Bit8u  RsvdMaskSize;131,3683
   Bit8u  RsvdFieldPosition;132,3707
   Bit8u  DirectColorModeInfo;133,3736
   Bit32u PhysBasePtr;135,3814
   Bit32u OffScreenMemOffset;136,3837
   Bit16u OffScreenMemSize;137,3867
   Bit16u LinBytesPerScanLine;139,3942
   Bit8u  BnkNumberOfPages;140,3973
   Bit8u  LinNumberOfPages;141,4001
   Bit8u  LinRedMaskSize;142,4029
   Bit8u  LinRedFieldPosition;143,4055
   Bit8u  LinGreenMaskSize;144,4086
   Bit8u  LinGreenFieldPosition;145,4114
   Bit8u  LinBlueMaskSize;146,4147
   Bit8u  LinBlueFieldPosition;147,4174
   Bit8u  LinRsvdMaskSize;148,4206
   Bit8u  LinRsvdFieldPosition;149,4233
   Bit32u MaxPixelClock;150,4265
   Bit8u  Reserved[Reserved151,4290
} ModeInfoBlock;152,4315
typedef struct ModeInfoListItem154,4333
  Bit16u                mode;156,4367
  ModeInfoBlockCompact  info;157,4397
} ModeInfoListItem;158,4427
#define VBE_RETURN_STATUS_SUPPORTED 162,4480
#define VBE_RETURN_STATUS_UNSUPPORTED 163,4542
#define VBE_RETURN_STATUS_SUCCESSFULL 165,4610
#define VBE_RETURN_STATUS_FAILED 166,4672
#define VBE_RETURN_STATUS_NOT_SUPPORTED 167,4734
#define VBE_RETURN_STATUS_INVALID 168,4796
#define VBE_MODE_VESA_DEFINED 172,4880
#define VBE_MODE_REFRESH_RATE_USE_CRTC 173,4944
#define VBE_MODE_LINEAR_FRAME_BUFFER 174,5008
#define VBE_MODE_PRESERVE_DISPLAY_MEMORY 175,5072
#define VBE_VESA_MODE_640X400X8 179,5161
#define VBE_VESA_MODE_640X480X8 180,5224
#define VBE_VESA_MODE_800X600X4 181,5287
#define VBE_VESA_MODE_800X600X8 182,5350
#define VBE_VESA_MODE_1024X768X4 183,5413
#define VBE_VESA_MODE_1024X768X8 184,5476
#define VBE_VESA_MODE_1280X1024X4 185,5539
#define VBE_VESA_MODE_1280X1024X8 186,5602
#define VBE_VESA_MODE_320X200X1555 187,5665
#define VBE_VESA_MODE_320X200X565 188,5728
#define VBE_VESA_MODE_320X200X888 189,5791
#define VBE_VESA_MODE_640X480X1555 190,5854
#define VBE_VESA_MODE_640X480X565 191,5917
#define VBE_VESA_MODE_640X480X888 192,5980
#define VBE_VESA_MODE_800X600X1555 193,6043
#define VBE_VESA_MODE_800X600X565 194,6106
#define VBE_VESA_MODE_800X600X888 195,6169
#define VBE_VESA_MODE_1024X768X1555 196,6232
#define VBE_VESA_MODE_1024X768X565 197,6295
#define VBE_VESA_MODE_1024X768X888 198,6358
#define VBE_VESA_MODE_1280X1024X1555 199,6421
#define VBE_VESA_MODE_1280X1024X565 200,6484
#define VBE_VESA_MODE_1280X1024X888 201,6547
#define VBE_VESA_MODE_1600X1200X8 202,6610
#define VBE_VESA_MODE_1600X1200X1555 203,6673
#define VBE_VESA_MODE_1600X1200X565 204,6736
#define VBE_VESA_MODE_1600X1200X888 205,6799
#define VBE_OWN_MODE_320X200X8888 208,6898
#define VBE_OWN_MODE_640X400X8888 209,6961
#define VBE_OWN_MODE_640X480X8888 210,7024
#define VBE_OWN_MODE_800X600X8888 211,7087
#define VBE_OWN_MODE_1024X768X8888 212,7150
#define VBE_OWN_MODE_1280X1024X8888 213,7213
#define VBE_OWN_MODE_320X200X8 214,7276
#define VBE_OWN_MODE_1600X1200X8888 215,7339
#define VBE_OWN_MODE_1152X864X8 216,7402
#define VBE_OWN_MODE_1152X864X1555 217,7465
#define VBE_OWN_MODE_1152X864X565 218,7528
#define VBE_OWN_MODE_1152X864X888 219,7591
#define VBE_OWN_MODE_1152X864X8888 220,7654
#define VBE_VESA_MODE_END_OF_LIST 222,7718
#define VBE_CAPABILITY_8BIT_DAC 226,7800
#define VBE_CAPABILITY_NOT_VGA_COMPATIBLE 227,7864
#define VBE_CAPABILITY_RAMDAC_USE_BLANK_BIT 228,7928
#define VBE_CAPABILITY_STEREOSCOPIC_SUPPORT 229,7992
#define VBE_CAPABILITY_STEREO_VIA_VESA_EVC 230,8056
#define VBE_MODE_ATTRIBUTE_SUPPORTED 234,8141
#define VBE_MODE_ATTRIBUTE_EXTENDED_INFORMATION_AVAILABLE 235,8205
#define VBE_MODE_ATTRIBUTE_TTY_BIOS_SUPPORT 236,8271
#define VBE_MODE_ATTRIBUTE_COLOR_MODE 237,8335
#define VBE_MODE_ATTRIBUTE_GRAPHICS_MODE 238,8399
#define VBE_MODE_ATTRIBUTE_NOT_VGA_COMPATIBLE 239,8463
#define VBE_MODE_ATTRIBUTE_NO_VGA_COMPATIBLE_WINDOW 240,8527
#define VBE_MODE_ATTRIBUTE_LINEAR_FRAME_BUFFER_MODE 241,8591
#define VBE_MODE_ATTRIBUTE_DOUBLE_SCAN_MODE 242,8655
#define VBE_MODE_ATTRIBUTE_INTERLACE_MODE 243,8719
#define VBE_MODE_ATTRIBUTE_HARDWARE_TRIPLE_BUFFER 244,8783
#define VBE_MODE_ATTRIBUTE_HARDWARE_STEREOSCOPIC_DISPLAY 245,8847
#define VBE_MODE_ATTRIBUTE_DUAL_DISPLAY_START_ADDRESS 246,8911
#define VBE_MODE_ATTTRIBUTE_LFB_ONLY 248,8976
#define VBE_WINDOW_ATTRIBUTE_RELOCATABLE 252,9150
#define VBE_WINDOW_ATTRIBUTE_READABLE 253,9212
#define VBE_WINDOW_ATTRIBUTE_WRITEABLE 254,9274
#define VBE_MEMORYMODEL_TEXT_MODE 258,9354
#define VBE_MEMORYMODEL_CGA_GRAPHICS 259,9416
#define VBE_MEMORYMODEL_HERCULES_GRAPHICS 260,9478
#define VBE_MEMORYMODEL_PLANAR 261,9540
#define VBE_MEMORYMODEL_PACKED_PIXEL 262,9602
#define VBE_MEMORYMODEL_NON_CHAIN_4_256 263,9664
#define VBE_MEMORYMODEL_DIRECT_COLOR 264,9726
#define VBE_MEMORYMODEL_YUV 265,9788
#define VBE_DIRECTCOLOR_COLOR_RAMP_PROGRAMMABLE 269,9875
#define VBE_DIRECTCOLOR_RESERVED_BITS_AVAILABLE 270,9937
  #define VBE_DISPI_BANK_ADDRESS 278,10151
  #define VBE_DISPI_BANK_SIZE_KB 279,10202
  #define VBE_DISPI_MAX_XRES 281,10251
  #define VBE_DISPI_MAX_YRES 282,10299
  #define VBE_DISPI_IOPORT_INDEX 284,10350
  #define VBE_DISPI_IOPORT_DATA 285,10400
  #define VBE_DISPI_INDEX_ID 287,10453
  #define VBE_DISPI_INDEX_XRES 288,10500
  #define VBE_DISPI_INDEX_YRES 289,10547
  #define VBE_DISPI_INDEX_BPP 290,10594
  #define VBE_DISPI_INDEX_ENABLE 291,10641
  #define VBE_DISPI_INDEX_BANK 292,10688
  #define VBE_DISPI_INDEX_VIRT_WIDTH 293,10735
  #define VBE_DISPI_INDEX_VIRT_HEIGHT 294,10782
  #define VBE_DISPI_INDEX_X_OFFSET 295,10829
  #define VBE_DISPI_INDEX_Y_OFFSET 296,10876
  #define VBE_DISPI_INDEX_VIDEO_MEMORY_64K 297,10923
  #define VBE_DISPI_INDEX_LFB_ADDRESS_H 298,10970
  #define VBE_DISPI_INDEX_LFB_ADDRESS_L 299,11017
  #define VBE_DISPI_LFB_PHYSICAL_ADDRESS 301,11065
  #define VBE_DISPI_ID0 302,11119
  #define VBE_DISPI_ID1 303,11169
  #define VBE_DISPI_ID2 304,11219
  #define VBE_DISPI_ID3 305,11269
  #define VBE_DISPI_ID4 306,11319
  #define VBE_DISPI_DISABLED 308,11370
  #define VBE_DISPI_ENABLED 309,11418
  #define VBE_DISPI_GETCAPS 310,11466
  #define VBE_DISPI_8BIT_DAC 311,11514
  #define VBE_DISPI_LFB_ENABLED 312,11562
  #define VBE_DISPI_NOCLEARMEM 313,11610

tools/debugger/kdd/kdd.c,2011
    uint32_t build;56,1883
    int w64;57,1916
    int mp;58,1929
    char *name;name59,1941
    uint64_t base;60,1957
    uint32_t range;61,2024
    uint32_t version;62,2101
    uint32_t modules;63,2157
    uint32_t prcbs;64,2218
} kdd_os;65,2277
        uint8_t txb[txb70,2350
        kdd_pkt txp;71,2429
        uint8_t rxb[rxb74,2527
        kdd_pkt rxp;75,2606
    unsigned int cur;77,2692
    uint32_t next_id;78,2771
    int running;79,2850
    int cpuid;80,2929
    int fd;81,3008
    FILE *log;log82,3087
    int verbosity;83,3166
    kdd_guest *guest;guest84,3245
    kdd_os os;85,3324
} kdd_state;86,3403
static uint64_t kdd_get_ip(93,3557
static size_t blocking_write(105,3892
static void kdd_log_pkt(117,4220
#define PAGE_SHIFT 168,5726
#define PAGE_SIZE 169,5750
static uint32_t kdd_read_physical(171,5791
static uint32_t kdd_write_physical(177,5980
static uint64_t v2p(185,6225
static uint32_t kdd_access_virtual(252,8434
static uint32_t kdd_read_virtual(278,9198
static uint32_t kdd_write_virtual(284,9394
static kdd_os os[os295,9749
static kdd_os unknown_os 330,12089
static int check_os(332,12157
static void find_os(371,13223
static void kdd_tx(400,13916
static void kdd_send_ack(423,14447
static void kdd_send_cmd(434,14700
static void kdd_send_string(446,15035
static void kdd_break(468,15615
static void kdd_handle_ack(506,16810
static void kdd_handle_handshake(533,17542
static void kdd_handle_setcpu(565,18901
static void kdd_handle_soft_breakpoint(577,19278
static void kdd_handle_hard_breakpoint(590,19752
static void kdd_handle_read_regs(602,20126
static void kdd_handle_write_regs(620,20714
static void kdd_handle_read_ctrl(639,21395
static void kdd_handle_read_msr(710,23969
static void kdd_handle_write_msr(722,24340
static void kdd_handle_memory_access(736,24790
static void kdd_handle_pkt(783,26532
static int kdd_init(876,29123
void kdd_select_callback(941,30727
static void usage(1001,32330
int main(1015,32787

tools/debugger/kdd/kdd.h,8446
#define _KDD_H_36,1576
#define PACKED 40,1614
#define KDD_DIR_PKT 62,2662
#define KDD_DIR_ACK 63,2708
    uint32_t dir;66,2772
    uint16_t type;67,2827
    uint16_t len;68,2867
    uint32_t id;69,2942
    uint32_t sum;70,2990
    uint8_t payload[payload71,3052
} PACKED kdd_hdr;72,3076
#define KDD_PKT_CMD 74,3095
#define KDD_PKT_MSG 75,3173
#define KDD_PKT_STC 76,3240
#define KDD_PKT_REG 77,3304
#define KDD_PKT_MAX 78,3375
#define KDD_ACK_OK 80,3403
#define KDD_ACK_BAD 81,3472
#define KDD_ACK_RST 82,3529
#define KDD_STATUS_SUCCESS 99,4321
#define KDD_STATUS_FAILURE 100,4360
#define KDD_STATUS_PENDING 101,4399
#define KDD_CMD_READ_VA 108,4690
#define KDD_CMD_WRITE_VA 109,4741
#define KDD_CMD_READ_CTRL 110,4792
#define KDD_CMD_WRITE_CTRL 111,4843
#define KDD_CMD_READ_PA 112,4894
#define KDD_CMD_WRITE_PA 113,4945
#define KDD_CMD_WRITE_Z 116,5060
    uint32_t u1;119,5129
    uint32_t status;120,5146
    uint32_t u2;121,5224
    uint64_t addr;122,5241
    uint32_t length_req;123,5314
    uint32_t length_rsp;124,5376
} PACKED kdd_cmd_mem;125,5451
#define KDD_CMD_READ_REGS 130,5585
#define KDD_CMD_WRITE_REGS 131,5636
    uint16_t u1;134,5705
    uint16_t cpu;135,5722
    uint32_t status;136,5788
} PACKED kdd_cmd_regs;137,5866
#define KDD_CMD_READ_MSR 139,5890
#define KDD_CMD_WRITE_MSR 140,5941
    uint32_t u1;143,6010
    uint32_t status;144,6027
    uint32_t u2;145,6105
    uint32_t msr;146,6122
    uint64_t val;147,6179
} PACKED kdd_cmd_msr;148,6238
#define KDD_CMD_SOFT_BP 152,6289
    uint32_t u1;155,6358
    uint32_t status;156,6375
    uint32_t u2;157,6453
    uint32_t bp;158,6470
} PACKED kdd_cmd_soft_bp;159,6543
#define KDD_CMD_HARD_BP 161,6570
    uint32_t u1;164,6639
    uint32_t status;165,6656
    uint32_t u2;166,6734
    uint64_t address;167,6751
    uint64_t u3;168,6812
    uint64_t u4;169,6829
    uint64_t u5;170,6846
    uint64_t u6;171,6863
} PACKED kdd_cmd_hard_bp;172,6880
#define KDD_CMD_CONT1 176,6978
#define KDD_CMD_CONT2 177,7029
#define KDD_DBG_EXCEPTION_HANDLED 179,7081
#define KDD_DBG_CONTINUE 180,7129
    uint32_t u1;183,7195
    uint32_t reason1;184,7212
    uint32_t u2;185,7264
    uint64_t reason2;186,7281
} PACKED kdd_cmd_cont;187,7346
#define KDD_CMD_SHAKE 191,7396
#define KDD_MACH_x32 193,7447
#define KDD_MACH_x64 194,7482
#define KDD_FLAGS_MP 196,7518
#define KDD_FLAGS_64 197,7553
    uint32_t u1;200,7606
    uint32_t status;201,7623
    uint32_t u2;202,7701
    uint16_t v_major;203,7718
    uint16_t v_minor;204,7791
    uint16_t proto;205,7869
    uint16_t flags;206,7933
    uint16_t machine;207,8002
    uint8_t pkts;208,8058
    uint8_t states;209,8135
    uint8_t manips;210,8212
    uint8_t u3[u3211,8291
    int64_t kern_addr;212,8310
    int64_t mods_addr;213,8362
    int64_t data_addr;214,8424
} PACKED kdd_cmd_shake;215,8484
#define KDD_CMD_SETCPU 219,8571
    uint16_t u1;222,8639
    uint16_t cpu;223,8656
    uint32_t status;224,8722
} PACKED kdd_cmd_setcpu;225,8779
    uint32_t subtype;228,8822
        kdd_cmd_mem mem;230,8886
        kdd_cmd_regs regs;231,8911
        kdd_cmd_msr msr;232,8938
        kdd_cmd_soft_bp sbp;233,8963
        kdd_cmd_hard_bp hbp;234,8992
        kdd_cmd_cont cont;235,9021
        kdd_cmd_shake shake;236,9048
        kdd_cmd_setcpu setcpu;237,9077
        uint8_t pad[pad238,9108
    uint8_t data[data240,9140
} PACKED kdd_cmd;241,9161
#define KDD_MSG_PRINT 252,9454
    uint32_t subtype;255,9523
    uint32_t u1;256,9575
    uint32_t length;257,9592
    uint32_t u2;258,9665
    uint8_t string[string259,9682
} PACKED kdd_msg;260,9752
#define KDD_REG_CHANGE 264,9809
    uint32_t subtype;267,9878
    uint32_t u1[u1268,9931
    uint16_t string[string269,9952
} PACKED kdd_reg;270,10019
#define KDD_STC_STOP 275,10174
#define KDD_STC_LOAD 276,10237
#define KDD_STC_STATUS_BREAKPOINT 278,10307
    uint16_t u1;281,10370
    uint16_t cpu;282,10387
    uint32_t ncpus;283,10449
    uint32_t u2;284,10508
    int64_t kthread;285,10525
    int64_t rip1;286,10587
    uint64_t status;287,10660
    uint64_t u3;288,10715
    int64_t rip2;289,10732
    uint64_t nparams;290,10783
    uint64_t params[params291,10851
    uint64_t first_chance;292,10909
    uint32_t u4[u4293,10981
    uint32_t ilen;294,11001
    uint8_t inst[inst295,11080
} PACKED kdd_stc_stop;296,11148
    uint32_t u1[u1299,11189
    uint64_t u2;300,11209
    uint64_t rip;301,11226
    uint64_t u3[u3302,11299
    uint8_t path[path303,11320
} PACKED kdd_stc_load;304,11400
    uint32_t subtype;307,11441
        kdd_stc_stop stop;309,11501
        kdd_stc_load load;310,11528
} PACKED kdd_stc;312,11562
    kdd_hdr h;320,11706
        kdd_cmd cmd;322,11793
        kdd_msg msg;323,11814
        kdd_reg reg;324,11835
        kdd_stc stc;325,11856
        uint8_t payload[payload326,11877
} PACKED kdd_pkt;328,11912
    uint32_t pad[pad337,12093
        uint32_t u1[u1339,12129
        uint8_t fp[fp340,12180
        int32_t gs;341,12251
        int32_t fs;342,12271
        int32_t es;343,12291
        int32_t ds;344,12311
        int32_t edi;345,12331
        int32_t esi;346,12352
        int32_t ebx;347,12373
        int32_t edx;348,12394
        int32_t ecx;349,12415
        int32_t eax;350,12436
        int32_t ebp;351,12457
        int32_t eip;352,12478
        int32_t cs;353,12499
        int32_t eflags;354,12519
        int32_t esp;355,12543
        int32_t ss;356,12564
        uint32_t sp2[sp2357,12584
        uint32_t sp3;358,12643
} PACKED kdd_regs_x86_32;360,12699
    uint64_t pad[pad363,12742
        uint64_t u1[u1366,12779
        uint16_t cs;368,12804
        uint16_t ds;369,12832
        uint16_t es;370,12853
        uint16_t fs;371,12874
        uint16_t gs;372,12895
        uint16_t ss;373,12916
        uint32_t rflags;374,12937
        uint64_t dr0;375,12962
        uint64_t dr1;376,12984
        uint64_t dr2;377,13006
        uint64_t dr3;378,13028
        uint64_t dr6;379,13050
        uint64_t dr7;380,13072
        int64_t rax;381,13094
        int64_t rcx;382,13115
        int64_t rdx;383,13136
        int64_t rbx;384,13157
        int64_t rsp;385,13178
        int64_t rbp;386,13199
        int64_t rsi;387,13220
        int64_t rdi;388,13241
        int64_t r8;389,13262
        int64_t r9;390,13282
        int64_t r10;391,13302
        int64_t r11;392,13323
        int64_t r12;393,13344
        int64_t r13;394,13365
        int64_t r14;395,13386
        int64_t r15;396,13407
        int64_t rip;397,13428
        uint64_t u2[u2399,13457
        uint8_t fp[fp401,13491
        uint64_t u3[u3403,13548
} PACKED kdd_regs_x86_64;405,13580
    kdd_regs_x86_32 r32;408,13623
    kdd_regs_x86_64 r64;409,13648
} PACKED kdd_regs;410,13673
    uint32_t cr0;414,13733
    uint32_t cr2;415,13751
    uint32_t cr3;416,13769
    uint32_t cr4;417,13787
    uint32_t dr0;418,13805
    uint32_t dr1;419,13823
    uint32_t dr2;420,13841
    uint32_t dr3;421,13859
    uint32_t dr6;422,13877
    uint32_t dr7;423,13895
    uint16_t gdt_pad;424,13913
    uint16_t gdt_limit;425,13935
    uint32_t gdt_base;426,13959
    uint16_t idt_pad;427,13982
    uint16_t idt_limit;428,14004
    uint32_t idt_base;429,14028
    uint16_t tss_sel;430,14051
    uint16_t ldt_sel;431,14073
    uint8_t u1[u1432,14095
} PACKED kdd_ctrl_x86_32;433,14115
    uint64_t cr0;436,14159
    uint64_t cr2;437,14177
    uint64_t cr3;438,14195
    uint64_t cr4;439,14214
    uint64_t dr0;440,14232
    uint64_t dr1;441,14250
    uint64_t dr2;442,14268
    uint64_t dr3;443,14286
    uint64_t dr6;444,14304
    uint64_t dr7;445,14322
    uint8_t  gdt_pad[gdt_pad446,14343
    uint16_t gdt_limit;447,14368
    uint64_t gdt_base;448,14392
    uint8_t  idt_pad[idt_pad449,14415
    uint16_t idt_limit;450,14440
    uint64_t idt_base;451,14464
    uint16_t tss_sel;452,14487
    uint16_t ldt_sel;453,14509
    uint8_t u1[u1454,14531
    uint64_t cr8;455,14551
    uint8_t u2[u2456,14569
    uint64_t efer;457,14589
} PACKED kdd_ctrl_x86_64;458,14649
    kdd_ctrl_x86_32 c32;461,14692
    kdd_ctrl_x86_64 c64;462,14717
} kdd_ctrl;463,14742
typedef struct kdd_guest kdd_guest;469,14912
#define KDD_LOG_IF(510,16395
#define KDD_LOG(517,16658
#define KDD_DEBUG(518,16725

tools/debugger/kdd/kdd-xen.c,1371
#define MAPSIZE 49,1743
#define PAGE_SHIFT 51,1777
#define PAGE_SIZE 52,1799
struct kdd_guest 54,1837
    struct xentoollog_logger xc_log;55,1856
    xc_interface *xc_handle;xc_handle56,1934
    uint32_t domid;57,1963
    char id[id58,1983
    FILE *log;log59,2000
    int verbosity;60,2015
    void *hvm_buf;hvm_buf61,2034
    uint32_t hvm_sz;62,2053
    uint32_t pfns[pfns63,2074
    void * maps[maps64,2102
static void flush_maps(70,2253
void kdd_halt(82,2491
int kdd_poll_guest(116,3534
static void hvm_writeback(123,3677
void kdd_run(132,4013
int kdd_count_cpus(140,4178
static struct hvm_hw_cpu *get_cpu(get_cpu161,4753
static struct hvm_hw_lapic_regs *get_lapic(get_lapic185,5518
static void kdd_get_regs_x86_32(210,6309
static void kdd_set_regs_x86_32(231,6894
static void kdd_get_regs_x86_64(252,7455
static void kdd_set_regs_x86_64(292,8516
int kdd_get_regs(328,9436
int kdd_set_regs(346,9760
static void kdd_get_ctrl_x86_32(365,10121
static void kdd_get_ctrl_x86_64(385,10638
int kdd_get_ctrl(409,11333
int kdd_wrmsr(430,11763
int kdd_rdmsr(458,12611
static uint32_t kdd_access_physical_page(487,13491
uint32_t kdd_access_physical(531,14871
static void kdd_xc_log(552,15444
kdd_guest *kdd_guest_init(kdd_guest_init571,16184
char *kdd_guest_identify(kdd_guest_identify612,17079
void kdd_guest_teardown(618,17178

tools/debugger/gdbsx/gx/gx_main.c,953
enum target_signal 35,1116
    TARGET_SIGNAL_INT 36,1137
    TARGET_SIGNAL_TRAP 37,1164
vcpuid_t max_vcpuid;43,1340
int guest_bitness;44,1404
const char host_name[host_name46,1448
int gx_remote_dbg;48,1478
uint64_t pgd3val;49,1552
static vcpuid_t current_vcpu;51,1634
gx_write_guest_regs(57,1733
gx_read_guest_regs(85,2489
_do_qRcmd_req(103,3006
process_q_request(133,3889
process_H_request(170,4986
process_m_request(196,5672
process_M_request(222,6293
process_v_cont_request(249,7001
process_v_request(285,7863
watchpoint_stop(304,8373
copy_mini_context32(311,8434
copy_mini_context64(332,9016
copy_mini_context(353,9598
prepare_stop_reply(374,10069
process_reas_request(399,10641
process_c_request(406,10797
process_Z_request(426,11378
process_z_request(444,11696
process_remote_request(462,12001
gdbsx_usage_exit(581,14913
check_usage_n_stuff(592,15268
initialize(624,16169
#define BUFSIZE 626,16197
main(640,16587

tools/debugger/gdbsx/gx/gx_comm.c,203
static int remote_fd;63,2040
do_tcp(68,2112
gx_remote_open(133,3950
gx_remote_close(153,4359
readchar(161,4476
gx_getpkt 190,5096
gx_reply_ok(251,6393
gx_reply_error(260,6497
gx_putpkt 274,6757

tools/debugger/gdbsx/gx/xg_dummy.c,257
int xgtrc_on 27,875
xgtrc(33,1038
xgprt(47,1320
xg_init(61,1598
xg_deinit(67,1632
xg_attach(74,1721
xg_step(80,1769
xg_resume(86,1840
xg_regs_read(92,1892
xg_regs_write(99,2031
xg_read_mem(106,2172
xg_write_mem(112,2247
xg_wait_domain(118,2325

tools/debugger/gdbsx/gx/gx_utils.c,205
gxprt(27,813
gx_fromhex(40,1034
gx_tohex(52,1253
gx_convert_int_to_ascii(62,1366
gx_convert_ascii_to_int(78,1696
gx_decode_zZ_packet(90,1951
gx_decode_m_packet(104,2259
gx_decode_M_packet(128,2883

tools/debugger/gdbsx/gx/gx_local.c,147
prnt_32regs(34,1025
prnt_64regs(48,1484
prnt_call_trace32(69,2258
prnt_call_trace64(91,2863
prnt_vcpu_context(113,3463
gx_local_cmd(136,4077

tools/debugger/gdbsx/gx/gx.h,69
typedef uint16_t domid_t;19,730
typedef unsigned char uchar;20,756

tools/debugger/gdbsx/xg/xg_main.c,1355
#define XGMIN(57,1831
#define X86_EFLAGS_TF 59,1871
typedef union vcpu_guest_context_any 72,2369
    vcpu_guest_context_x86_64_t ctxt64;73,2408
    vcpu_guest_context_x86_32_t ctxt32;74,2448
    vcpu_guest_context_t ctxt;75,2488
} vcpu_guest_context_any_t;76,2519
int xgtrc_on 79,2549
struct xen_domctl domctl;80,2567
static int     _hvm_guest;82,2633
static domid_t _dom_id;83,2714
static int     _max_vcpu_id;84,2766
static int     _dom0_fd;85,2831
static int     _32bit_hyp;86,2890
xgtrc(91,3003
xgprt(106,3330
xg_init(125,3676
_domctl_hcall(165,4762
_check_hyp(194,5648
_domain_ok(242,7022
_unpause_domain(254,7263
xg_attach(270,7631
_domain_is_paused(317,8971
xg_detach_deinit(329,9311
_wait_domain_pause(347,9741
_change_TF(365,10077
_allbutone_vcpu(413,11719
xg_step(438,12391
_vcpu_in_bp(471,13172
xg_resume_n_wait(492,13902
_cp_32ctxt_to_32gdb(518,14447
_cp_64ctxt_to_32gdb(540,15017
_cp_64ctxt_to_64gdb(562,15587
_cp_32gdb_to_32ctxt(599,16692
_cp_32gdb_to_64ctxt(620,17208
_cp_64gdb_to_64ctxt(641,17724
_get_vcpu_ctxt(675,18506
xg_regs_read(695,19074
xg_regs_write(732,20255
xg_read_mem(771,21500
    union {uint64_t llbuf8;774,21648
    union {uint64_t llbuf8; char buf8[buf8774,21648
xg_write_mem(798,22329
    union {uint64_t llbuf8;801,22477
    union {uint64_t llbuf8; char buf8[buf8801,22477

tools/debugger/gdbsx/xg/xg_public.h,1525
#define XGERR(19,730
#define XGTRC(21,814
#define XGTRC1(23,913
    #define  XGFM64 27,1040
    #define  XGF64 28,1067
    #define  XGFM64 30,1103
    #define  XGF64 31,1131
    XG_GPRS=36,1186
    XG_FPRS=37,1242
} regstype_t;38,1297
typedef uint32_t vcpuid_t;41,1313
struct xg_gdb_regs32 47,1498
    uint32_t  eax;48,1521
    uint32_t  ecx;49,1540
    uint32_t  edx;50,1559
    uint32_t  ebx;51,1578
    uint32_t  esp;52,1597
    uint32_t  ebp;53,1616
    uint32_t  esi;54,1635
    uint32_t  edi;55,1654
    uint32_t  eip;56,1673
    uint32_t  eflags;57,1692
    uint32_t  cs;58,1714
    uint32_t  ss;59,1732
    uint32_t  ds;60,1750
    uint32_t  es;61,1768
    uint32_t  fs;62,1786
    uint32_t  gs;63,1804
struct xg_gdb_regs64 67,1884
    uint64_t  rax;68,1907
    uint64_t  rbx;69,1926
    uint64_t  rcx;70,1945
    uint64_t  rdx;71,1964
    uint64_t  rsi;72,1983
    uint64_t  rdi;73,2002
    uint64_t  rbp;74,2021
    uint64_t  rsp;75,2040
    uint64_t  r8;76,2059
    uint64_t  r9;77,2077
    uint64_t  r10;78,2095
    uint64_t  r11;79,2114
    uint64_t  r12;80,2133
    uint64_t  r13;81,2152
    uint64_t  r14;82,2171
    uint64_t  r15;83,2190
    uint64_t  rip;84,2209
    uint64_t  rflags;85,2228
    uint64_t  cs;86,2250
    uint64_t  ss;87,2268
    uint64_t  ds;88,2286
    uint64_t  es;89,2304
    uint64_t  fs;90,2322
    uint64_t  gs;91,2340
union xg_gdb_regs 94,2362
    struct xg_gdb_regs32 gregs_32;95,2382
    struct xg_gdb_regs64 gregs_64;96,2417

tools/debugger/xenitp/ia64-opc-d.c,57
struct ia64_opcode ia64_opcodes_d[ia64_opcodes_d22,999

tools/debugger/xenitp/dis-asm.h,7999
#define DIS_ASM_H29,1166
#define PARAMS(41,1326
typedef void *PTR;PTR42,1346
typedef uint64_t bfd_vma;43,1365
typedef int64_t bfd_signed_vma;44,1391
typedef uint8_t bfd_byte;45,1423
typedef int bfd_boolean;46,1449
#define BFD_HOST_U_64_BIT 47,1474
#define BFD_HOST_64_BIT 48,1514
#define sprintf_vma(49,1543
#define BFD6453,1654
#define ATTRIBUTE_FPTR_PRINTF_254,1668
#define ATTRIBUTE_UNUSED 55,1700
enum bfd_flavour 57,1750
  bfd_target_unknown_flavour,58,1769
  bfd_target_aout_flavour,59,1799
  bfd_target_coff_flavour,60,1826
  bfd_target_ecoff_flavour,61,1853
  bfd_target_elf_flavour,62,1881
  bfd_target_ieee_flavour,63,1907
  bfd_target_nlm_flavour,64,1934
  bfd_target_oasys_flavour,65,1960
  bfd_target_tekhex_flavour,66,1988
  bfd_target_srec_flavour,67,2017
  bfd_target_ihex_flavour,68,2044
  bfd_target_som_flavour,69,2071
  bfd_target_os9k_flavour,70,2097
  bfd_target_versados_flavour,71,2124
  bfd_target_msdos_flavour,72,2155
  bfd_target_evax_flavour73,2183
enum bfd_endian 76,2213
enum bfd_endian { BFD_ENDIAN_BIG,76,2213
enum bfd_endian { BFD_ENDIAN_BIG, BFD_ENDIAN_LITTLE,76,2213
enum bfd_endian { BFD_ENDIAN_BIG, BFD_ENDIAN_LITTLE, BFD_ENDIAN_UNKNOWN 76,2213
enum bfd_architecture 78,2289
  bfd_arch_unknown,80,2314
  bfd_arch_obscure,81,2363
  bfd_arch_m68k,82,2421
#define bfd_mach_m68000 83,2465
#define bfd_mach_m68008 84,2491
#define bfd_mach_m68010 85,2517
#define bfd_mach_m68020 86,2543
#define bfd_mach_m68030 87,2569
#define bfd_mach_m68040 88,2595
#define bfd_mach_m68060 89,2621
#define bfd_mach_cpu32 90,2647
#define bfd_mach_mcf5200 91,2673
#define bfd_mach_mcf5206e 92,2701
#define bfd_mach_mcf5307 93,2730
#define bfd_mach_mcf5407 94,2759
#define bfd_mach_mcf528x 95,2788
#define bfd_mach_mcfv4e 96,2817
#define bfd_mach_mcf521x 97,2846
#define bfd_mach_mcf5249 98,2876
#define bfd_mach_mcf547x 99,2906
#define bfd_mach_mcf548x 100,2936
  bfd_arch_vax,101,2966
  bfd_arch_i960,102,3006
#define bfd_mach_i960_core 111,3358
#define bfd_mach_i960_ka_sa 112,3392
#define bfd_mach_i960_kb_sb 113,3426
#define bfd_mach_i960_mc 114,3460
#define bfd_mach_i960_xa 115,3494
#define bfd_mach_i960_ca 116,3528
#define bfd_mach_i960_jx 117,3562
#define bfd_mach_i960_hx 118,3596
  bfd_arch_a29k,120,3631
  bfd_arch_sparc,121,3670
#define bfd_mach_sparc 122,3705
#define bfd_mach_sparc_sparclet 124,3823
#define bfd_mach_sparc_sparclite 125,3864
#define bfd_mach_sparc_v8plus 126,3905
#define bfd_mach_sparc_v8plusa 127,3946
#define bfd_mach_sparc_sparclite_le 128,4018
#define bfd_mach_sparc_v9 129,4059
#define bfd_mach_sparc_v9a 130,4100
#define bfd_mach_sparc_v8plusb 131,4172
#define bfd_mach_sparc_v9b 132,4241
#define bfd_mach_sparc_v9_p(134,4362
  bfd_arch_mips,137,4512
#define bfd_mach_mips3000 138,4552
#define bfd_mach_mips3900 139,4596
#define bfd_mach_mips4000 140,4640
#define bfd_mach_mips4010 141,4684
#define bfd_mach_mips4100 142,4728
#define bfd_mach_mips4300 143,4772
#define bfd_mach_mips4400 144,4816
#define bfd_mach_mips4600 145,4860
#define bfd_mach_mips4650 146,4904
#define bfd_mach_mips5000 147,4948
#define bfd_mach_mips6000 148,4992
#define bfd_mach_mips8000 149,5036
#define bfd_mach_mips10000 150,5080
#define bfd_mach_mips16 151,5125
  bfd_arch_i386,152,5167
#define bfd_mach_i386_i386 153,5206
#define bfd_mach_i386_i8086 154,5235
#define bfd_mach_i386_i386_intel_syntax 155,5265
#define bfd_mach_x86_64 156,5307
#define bfd_mach_x86_64_intel_syntax 157,5333
  bfd_arch_we32k,158,5372
  bfd_arch_tahoe,159,5414
  bfd_arch_i860,160,5460
  bfd_arch_romp,161,5499
  bfd_arch_alliant,162,5543
  bfd_arch_convex,163,5580
  bfd_arch_m88k,164,5616
  bfd_arch_pyramid,165,5660
  bfd_arch_h8300,166,5708
#define bfd_mach_h8300 167,5752
#define bfd_mach_h8300h 168,5779
#define bfd_mach_h8300s 169,5806
  bfd_arch_powerpc,170,5833
#define bfd_mach_ppc 171,5870
#define bfd_mach_ppc64 172,5903
#define bfd_mach_ppc_403 173,5936
#define bfd_mach_ppc_403gc 174,5971
#define bfd_mach_ppc_505 175,6007
#define bfd_mach_ppc_601 176,6042
#define bfd_mach_ppc_602 177,6077
#define bfd_mach_ppc_603 178,6112
#define bfd_mach_ppc_ec603e 179,6147
#define bfd_mach_ppc_604 180,6183
#define bfd_mach_ppc_620 181,6218
#define bfd_mach_ppc_630 182,6253
#define bfd_mach_ppc_750 183,6288
#define bfd_mach_ppc_860 184,6323
#define bfd_mach_ppc_a35 185,6358
#define bfd_mach_ppc_rs64ii 186,6392
#define bfd_mach_ppc_rs64iii 187,6427
#define bfd_mach_ppc_7400 188,6462
  bfd_arch_rs6000,189,6498
  bfd_arch_hppa,190,6539
  bfd_arch_d10v,191,6579
  bfd_arch_z8k,192,6624
#define bfd_mach_z8001 193,6665
#define bfd_mach_z8002 194,6698
  bfd_arch_h8500,195,6731
  bfd_arch_sh,196,6775
#define bfd_mach_sh 197,6815
#define bfd_mach_sh2 198,6848
#define bfd_mach_sh_dsp 199,6881
#define bfd_mach_sh2a 200,6914
#define bfd_mach_sh2a_nofpu 201,6947
#define bfd_mach_sh2e 202,6980
#define bfd_mach_sh3 203,7013
#define bfd_mach_sh3_nommu 204,7046
#define bfd_mach_sh3_dsp 205,7079
#define bfd_mach_sh3e 206,7112
#define bfd_mach_sh4 207,7145
#define bfd_mach_sh4_nofpu 208,7178
#define bfd_mach_sh4_nommu_nofpu 209,7211
#define bfd_mach_sh4a 210,7250
#define bfd_mach_sh4a_nofpu 211,7283
#define bfd_mach_sh4al_dsp 212,7316
#define bfd_mach_sh5 213,7349
  bfd_arch_alpha,214,7382
#define bfd_mach_alpha 215,7421
  bfd_arch_arm,216,7446
#define bfd_mach_arm_2 217,7502
#define bfd_mach_arm_2a 218,7535
#define bfd_mach_arm_3 219,7576
#define bfd_mach_arm_3M 220,7609
#define bfd_mach_arm_4 221,7642
#define bfd_mach_arm_4T 222,7683
  bfd_arch_ns32k,223,7716
  bfd_arch_w65,224,7777
  bfd_arch_tic30,225,7816
  bfd_arch_v850,226,7873
#define bfd_mach_v850 227,7911
  bfd_arch_arc,228,7944
#define bfd_mach_arc_base 229,7992
  bfd_arch_m32r,230,8020
#define bfd_mach_m32r 231,8067
  bfd_arch_mn10200,232,8131
  bfd_arch_mn10300,233,8179
  bfd_arch_last234,8227
typedef struct symbol_cache_entry237,8249
    const char *name;name239,8285
        PTR p;242,8323
        bfd_vma i;243,8338
    } udata;244,8357
} asymbol;245,8370
typedef int (*fprintf_ftype)fprintf_ftype247,8382
enum dis_insn_type 249,8464
  dis_noninsn,250,8485
  dis_nonbranch,251,8532
  dis_branch,252,8581
  dis_condbranch,253,8624
  dis_jsr,254,8668
  dis_condjsr,255,8706
  dis_dref,256,8760
  dis_dref2	257,8807
typedef struct disassemble_info 270,9409
  fprintf_ftype fprintf_func;271,9443
  void *stream;stream272,9473
  void *application_data;application_data273,9489
  enum bfd_flavour flavour;279,9800
  enum bfd_architecture arch;281,9857
  unsigned long mach;283,9916
  enum bfd_endian endian;285,10015
  void *insn_sets;insn_sets290,10297
  asymbol **symbols;symbols302,10876
  int num_symbols;304,10934
  unsigned long flags;309,11138
#define INSN_HAS_RELOC	310,11161
  void *private_data;private_data311,11195
  int (*read_memory_func)read_memory_func318,11508
  void (*memory_error_func)memory_error_func326,11876
  void (*print_address_func)print_address_func330,12011
  int (* symbol_at_address_func)340,12576
  bfd_boolean (* symbol_is_valid)346,12846
  bfd_byte *buffer;buffer350,12973
  bfd_vma buffer_vma;351,12993
  unsigned int buffer_length;352,13015
  int bytes_per_line;358,13324
  int bytes_per_chunk;365,13627
  enum bfd_endian display_endian;366,13650
  unsigned int octets_per_byte;370,13809
  unsigned int skip_zeroes;374,13947
  unsigned int skip_zeroes_at_end;382,14331
  bfd_boolean disassembler_needs_relocs;385,14431
  char insn_info_valid;394,14816
  char branch_delay_insns;395,14873
  char data_size;397,14993
  enum dis_insn_type insn_type;398,15059
  bfd_vma target;399,15117
  bfd_vma target2;401,15211
  char * disassembler_options;404,15337
} disassemble_info;406,15369
typedef int (*disassembler_ftype)disassembler_ftype411,15520
#define INIT_DISASSEMBLE_INFO(538,22055
#define INIT_DISASSEMBLE_INFO_NO_ARCH(540,22191

tools/debugger/xenitp/ia64-opc-m.c,2738
#define M0	24,1022
#define M	25,1048
#define M2	26,1073
#define bM(29,1130
#define bX(30,1179
#define bX2(31,1228
#define bX3(32,1278
#define bX4(33,1328
#define bX6a(34,1378
#define bX6b(35,1430
#define bX7(36,1482
#define bY(37,1559
#define bHint(38,1608
#define mM	40,1660
#define mX	41,1679
#define mX2	42,1698
#define mX3	43,1719
#define mX4	44,1740
#define mX6a	45,1761
#define mX6b	46,1784
#define mX7	47,1807
#define mY	48,1828
#define mHint	49,1847
#define OpX3(51,1873
#define OpX3X6b(52,1926
#define OpX3X6bX7(54,2008
#define OpX3X4(56,2108
#define OpX3X4X2(58,2187
#define OpX3X4X2Y(60,2285
#define OpX6aHint(62,2400
#define OpXX6aHint(64,2487
#define OpMXX6a(66,2591
#define OpMXX6aHint(68,2682
#define EMPTY 74,2908
struct ia64_opcode ia64_opcodes_m[ia64_opcodes_m76,2932
#define LDINCREG(296,17010
#undef LDINCREG408,21550
#define CMPXCHG(437,23490
#define CMPXCHG_P(438,23572
#define CMPXCHG16(439,23658
#define CMPXCHG16_P(440,23750
#define CMPXCHG_acq 441,23838
#define CMPXCHG_rel 442,23860
#define CMPXCHG_1 443,23882
#define CMPXCHG_2 444,23902
#define CMPXCHG_4 445,23922
#define CMPXCHG_8 446,23942
#define CMPXCHGn(447,23962
#define CMP8XCHG16(454,24416
#define CMPXCHG_ALL(461,24833
#undef CMPXCHG468,25078
#undef CMPXCHG_P469,25093
#undef CMPXCHG16470,25110
#undef CMPXCHG16_P471,25127
#undef CMPXCHG_acq472,25146
#undef CMPXCHG_rel473,25165
#undef CMPXCHG_1474,25184
#undef CMPXCHG_2475,25201
#undef CMPXCHG_4476,25218
#undef CMPXCHG_8477,25235
#undef CMPXCHGn478,25252
#undef CMPXCHG16479,25268
#undef CMPXCHG_ALL480,25285
#define LDINCIMMED(513,27563
#undef LDINCIMMED625,32322
#define STINCIMMED(628,32384
#undef STINCIMMED647,33189
#define FLDINCREG(727,38766
#undef FLDINCREG803,41922
#define LD(874,47035
#undef LD929,49254
#define LFETCHINCREG(950,50544
#undef LFETCHINCREG967,51417
#define FLDINCIMMED(976,51779
#undef FLDINCIMMED1052,55082
#define FSTINCIMMED(1055,55160
#undef FSTINCIMMED1066,55648
#define LFETCHINCIMMED(1069,55719
#undef LFETCHINCIMMED1086,56621
#undef M01091,56690
#undef M1092,56700
#undef M21093,56709
#undef bM1094,56719
#undef bX1095,56729
#undef bX21096,56739
#undef bX31097,56750
#undef bX41098,56761
#undef bX6a1099,56772
#undef bX6b1100,56784
#undef bHint1101,56796
#undef mM1102,56809
#undef mX1103,56819
#undef mX21104,56829
#undef mX31105,56840
#undef mX41106,56851
#undef mX6a1107,56862
#undef mX6b1108,56874
#undef mHint1109,56886
#undef OpX31110,56899
#undef OpX3X6b1111,56911
#undef OpX3X41112,56926
#undef OpX3X4X21113,56940
#undef OpX6aHint1114,56956
#undef OpXX6aHint1115,56973
#undef OpMXX6a1116,56991
#undef OpMXX6aHint1117,57006
#undef EMPTY1118,57025

tools/debugger/xenitp/ia64-opc-i.c,2882
#define I0	25,1031
#define I	26,1057
#define I2	27,1082
#define bC(30,1139
#define bIh(31,1188
#define bTa(32,1238
#define bTag13(33,1288
#define bTb(34,1340
#define bVc(35,1390
#define bVe(36,1440
#define bWh(37,1490
#define bX(38,1540
#define bXb(39,1589
#define bXc(40,1639
#define bX2(41,1689
#define bX2a(42,1739
#define bX2b(43,1790
#define bX2c(44,1841
#define bX3(45,1892
#define bX6(46,1942
#define bYa(47,1993
#define bYb(48,2043
#define bZa(49,2093
#define bZb(50,2143
#define mC	53,2223
#define mIh	54,2242
#define mTa	55,2263
#define mTag13	56,2284
#define mTb	57,2311
#define mVc	58,2332
#define mVe	59,2353
#define mWh	60,2374
#define mX	61,2395
#define mXb	62,2414
#define mXc	63,2435
#define mX2	64,2456
#define mX2a	65,2477
#define mX2b	66,2500
#define mX2c	67,2523
#define mX3	68,2546
#define mX6	69,2567
#define mYa	70,2588
#define mYb	71,2609
#define mZa	72,2630
#define mZb	73,2651
#define OpZaZbVeX2aX2b(75,2673
#define OpZaZbVeX2aX2bX2c(78,2816
#define OpX2X(81,2983
#define OpX2XYa(82,3052
#define OpX2XYb(84,3146
#define OpX2TaTbYaC(86,3240
#define OpX2TaTbYaXcC(89,3374
#define OpX3(92,3528
#define OpX3X6(93,3580
#define OpX3X6Yb(95,3657
#define OpX3XbIhWh(97,3752
#define OpX3XbIhWhTag13(100,3871
#define FULL17 104,4026
#define EMPTY 108,4175
struct ia64_opcode ia64_opcodes_i[ia64_opcodes_i110,4199
#define MOV(120,4673
#undef MOV134,5228
#define TF(173,7134
#define TFCM(175,7220
#undef TF193,7905
#undef TFCM194,7915
#define TBIT(195,7927
#define TBITCM(197,8021
#undef TBIT215,8823
#undef TBITCM216,8835
#define TNAT(217,8849
#define TNATCM(219,8930
#undef TNAT237,9719
#undef TNATCM238,9731
#undef I0286,13286
#undef I287,13296
#undef I2288,13305
#undef L289,13315
#undef bC290,13324
#undef bIh291,13334
#undef bTa292,13345
#undef bTag13293,13356
#undef bTb294,13370
#undef bVc295,13381
#undef bVe296,13392
#undef bWh297,13403
#undef bX298,13414
#undef bXb299,13424
#undef bX2300,13435
#undef bX2a301,13446
#undef bX2b302,13458
#undef bX2c303,13470
#undef bX3304,13482
#undef bX6305,13493
#undef bY306,13504
#undef bZa307,13514
#undef bZb308,13525
#undef mC309,13536
#undef mIh310,13546
#undef mTa311,13557
#undef mTag13312,13568
#undef mTb313,13582
#undef mVc314,13593
#undef mVe315,13604
#undef mWh316,13615
#undef mX317,13626
#undef mXb318,13636
#undef mX2319,13647
#undef mX2a320,13658
#undef mX2b321,13670
#undef mX2c322,13682
#undef mX3323,13694
#undef mX6324,13705
#undef mY325,13716
#undef mZa326,13726
#undef mZb327,13737
#undef OpZaZbVeX2aX2b328,13748
#undef OpZaZbVeX2aX2bX2c329,13770
#undef OpX2X330,13795
#undef OpX2XYa331,13808
#undef OpX2XYb332,13823
#undef OpX2TaTbYaC333,13838
#undef OpX3334,13857
#undef OpX3X6335,13869
#undef OpX3XbIhWh336,13883
#undef OpX3XbIhWhTag13337,13901
#undef EMPTY338,13924

tools/debugger/xenitp/ia64-opc-f.c,1835
#define f0	24,1016
#define f	25,1042
#define f2	26,1067
#define bF2(28,1094
#define bF4(29,1144
#define bQ(30,1194
#define bRa(31,1242
#define bRb(32,1291
#define bSf(33,1340
#define bTa(34,1389
#define bXa(35,1438
#define bXb(36,1487
#define bX2(37,1536
#define bX6(38,1585
#define bY(39,1635
#define mF2	41,1684
#define mF4	42,1705
#define mQ	43,1726
#define mRa	44,1745
#define mRb	45,1766
#define mSf	46,1787
#define mTa	47,1808
#define mXa	48,1829
#define mXb	49,1850
#define mX2	50,1871
#define mX6	51,1892
#define mY	52,1913
#define OpXa(54,1933
#define OpXaSf(55,1984
#define OpXaSfF2(56,2055
#define OpXaSfF4(58,2149
#define OpXaSfF2F4(60,2243
#define OpXaX2(63,2360
#define OpXaX2F2(64,2431
#define OpRaRbTaSf(66,2525
#define OpTa(69,2642
#define OpXbQSf(70,2693
#define OpXbX6(72,2784
#define OpXbX6Y(74,2858
#define OpXbX6F2(76,2949
#define OpXbX6Sf(78,3043
#define EMPTY 83,3243
struct ia64_opcode ia64_opcodes_f[ia64_opcodes_f85,3267
#undef f0619,40963
#undef f620,40973
#undef f2621,40982
#undef bF2622,40992
#undef bF4623,41003
#undef bQ624,41014
#undef bRa625,41024
#undef bRb626,41035
#undef bSf627,41046
#undef bTa628,41057
#undef bXa629,41068
#undef bXb630,41079
#undef bX2631,41090
#undef bX6632,41101
#undef mF2633,41112
#undef mF4634,41123
#undef mQ635,41134
#undef mRa636,41144
#undef mRb637,41155
#undef mSf638,41166
#undef mTa639,41177
#undef mXa640,41188
#undef mXb641,41199
#undef mX2642,41210
#undef mX6643,41221
#undef OpXa644,41232
#undef OpXaSf645,41244
#undef OpXaSfF2646,41258
#undef OpXaSfF4647,41274
#undef OpXaSfF2F4648,41290
#undef OpXaX2649,41308
#undef OpRaRbTaSf650,41322
#undef OpTa651,41340
#undef OpXbQSf652,41352
#undef OpXbX6653,41367
#undef OpXbX6F2654,41381
#undef OpXbX6Sf655,41397
#undef EMPTY656,41413

tools/debugger/xenitp/ia64-opc-b.c,1977
#define B0	25,1031
#define B	26,1057
#define bBtype(29,1113
#define bD(30,1164
#define bIh(31,1213
#define bPa(32,1263
#define bPr(33,1313
#define bWha(34,1363
#define bWhb(35,1414
#define bWhc(36,1464
#define bX6(37,1515
#define mBtype	39,1567
#define mD	40,1595
#define mIh	41,1615
#define mPa	42,1637
#define mPr	43,1659
#define mWha	44,1681
#define mWhb	45,1705
#define mWhc	46,1729
#define mX6	47,1753
#define OpX6(49,1776
#define OpPaWhaD(50,1828
#define OpPaWhcD(52,1922
#define OpBtypePaWhaD(54,2016
#define OpBtypePaWhaDPr(57,2142
#define OpX6BtypePaWhaD(60,2288
#define OpX6BtypePaWhaDPr(63,2434
#define OpIhWhb(66,2602
#define OpX6IhWhb(69,2682
#define EMPTY 75,2888
struct ia64_opcode ia64_opcodes_b[ia64_opcodes_b77,2912
#define BR(81,3029
#undef BR89,3295
#define BR(91,3306
#define BRP(92,3380
#define BRT(93,3465
#undef BR190,8571
#undef BRP191,8581
#undef BRT192,8592
#define BRP(231,11098
#undef BRP241,11509
#define BR(246,11629
#undef BR254,11891
#define BR(256,11902
#define BRP(258,11979
#undef BR308,13959
#undef BRP309,13969
#define BR(311,13981
#undef BR362,16840
#define BR(363,16850
#define BRT(365,16943
#undef BR439,21015
#undef BRT440,21025
#define BRP(468,22925
#undef BRP478,23271
#undef B0483,23329
#undef B484,23339
#undef bBtype485,23348
#undef bD486,23362
#undef bIh487,23372
#undef bPa488,23383
#undef bPr489,23394
#undef bWha490,23405
#undef bWhb491,23417
#undef bWhc492,23429
#undef bX6493,23441
#undef mBtype494,23452
#undef mD495,23466
#undef mIh496,23476
#undef mPa497,23487
#undef mPr498,23498
#undef mWha499,23509
#undef mWhb500,23521
#undef mWhc501,23533
#undef mX6502,23545
#undef OpX6503,23556
#undef OpPaWhaD504,23568
#undef OpPaWhcD505,23584
#undef OpBtypePaWhaD506,23600
#undef OpBtypePaWhaDPr507,23621
#undef OpX6BtypePaWhaD508,23644
#undef OpX6BtypePaWhaDPr509,23667
#undef OpIhWhb510,23692
#undef OpX6IhWhb511,23707
#undef EMPTY512,23724

tools/debugger/xenitp/xenitp.c,4083
#define HAVE_DEBUG_OP39,1155
static xc_interface *xc_handle xc_handle43,1221
static int domid 44,1257
static vcpu_guest_context_t *cur_ctx;cur_ctx45,1279
static int cur_vcpu;46,1317
#define PSR_BN 48,1339
#define PSR_SS 49,1379
#define PSR_DB 50,1419
#define PSR_TB 51,1459
#define PSR_DD 52,1499
#define PSR_ID 53,1539
#define PSR_IT 54,1579
#define PSR_DT 55,1619
#define PSR_RI_SHIFT 56,1659
#define CFM_SOF_MASK 57,1695
static int xc_ia64_vcpu_getcontext(62,1851
static inline unsigned int ctx_slot 71,2199
target_map_memory 77,2332
target_read_memory 102,3098
perror_memory 130,3778
generic_print_address 151,4535
generic_symbol_at_address 159,4713
generic_symbol_is_valid 165,4817
bfd_vma bfd_getl32 171,4966
bfd_vma bfd_getl64 183,5212
bfd_vma bfd_getb32 199,5618
bfd_vma bfd_getl16 211,5864
bfd_vma bfd_getb16 221,6030
init_disassemble_info 232,6208
void target_disas 252,6887
#define PTE_ED_SHIFT 298,8077
#define PTE_ED_MASK 299,8114
#define PTE_PPN_SHIFT 300,8151
#define PTE_PPN_MASK 301,8188
#define PTE_AR_SHIFT 302,8225
#define PTE_AR_MASK 303,8262
#define PTE_PL_SHIFT 304,8299
#define PTE_PL_MASK 305,8336
#define PTE_D_SHIFT 306,8373
#define PTE_D_MASK 307,8410
#define PTE_A_SHIFT 308,8447
#define PTE_A_MASK 309,8484
#define PTE_MA_SHIFT 310,8521
#define PTE_MA_MASK 311,8558
#define PTE_P_SHIFT 312,8595
#define PTE_P_MASK 313,8632
#define ITIR_KEY_SHIFT 314,8669
#define ITIR_KEY_MASK 315,8706
#define ITIR_PS_SHIFT 316,8743
#define ITIR_PS_MASK 317,8780
#define ITIR_PS_MIN 318,8817
#define ITIR_PS_MAX 319,8854
#define RR_RID_SHIFT 320,8891
#define RR_RID_MASK 321,8928
#define RR_PS_SHIFT 322,8965
#define RR_PS_MASK 323,9002
#define RR_VE_MASK 324,9039
static const char *get_ps get_ps326,9077
static void print_a_tr 338,9535
void print_ctx 364,10604
void print_br 434,13161
void print_regs 448,13608
void print_cr 505,15856
void print_ar 538,17229
void print_a_rr 564,18274
void print_rr 573,18525
void print_db 583,18746
struct bit_descr 597,19177
    const char *name;name598,19196
    unsigned char sz;599,19218
const struct bit_descr psr_bits[psr_bits602,19244
void print_bits 618,19856
void print_tr 643,20410
static int do_ia64_debug_op 666,21138
static volatile int ctrl_c_hit;697,21959
void ctrl_c_handler 699,21992
int wait_domain 704,22047
int virt_to_phys 745,22988
get_reg_addr 775,23802
enum prio_expr 789,24162
enum prio_expr {EXPR_BASE,EXPR_BASE789,24162
enum prio_expr {EXPR_BASE, EXPR_SUM,789,24162
enum prio_expr {EXPR_BASE, EXPR_SUM, EXPR_LOGIC,789,24162
enum prio_expr {EXPR_BASE, EXPR_SUM, EXPR_LOGIC, EXPR_PROD}EXPR_PROD789,24162
int next_char 793,24295
int parse_unary 804,24437
int parse_expr 896,26612
char *parse_arg parse_arg937,27500
vcpu_guest_context_any_t *vcpu_ctx_any;vcpu_ctx_any958,27825
int vcpu_setcontext 960,27866
enum cmd_status 971,28065
enum cmd_status { CMD_ERROR,971,28065
enum cmd_status { CMD_ERROR, CMD_OK,971,28065
enum cmd_status { CMD_ERROR, CMD_OK, CMD_REPEAT,971,28065
enum cmd_status { CMD_ERROR, CMD_OK, CMD_REPEAT, CMD_QUIT 971,28065
struct command_desc973,28127
    const char *name;name975,28149
    const char *help;help976,28171
    enum cmd_status (*cmd)cmd977,28193
cmd_registers 981,28260
cmd_sstep 988,28359
cmd_go 1007,28789
cmd_cb 1036,29518
static int quit_paused;1055,29921
cmd_quit 1058,29969
cmd_echo 1066,30099
cmd_disassemble 1073,30193
cmd_dump 1094,30692
cmd_break 1124,31434
cmd_watch 1152,32042
cmd_delete 1188,32854
cmd_disable 1218,33461
cmd_enable 1239,33856
cmd_print 1260,34247
struct bit_xlat 1272,34439
    unsigned int bit;1273,34457
    const char *name;name1274,34479
static const struct bit_xlat debug_flags[debug_flags1277,34505
cmd_disp 1305,35485
cmd_bev 1403,38731
cmd_set 1459,40465
const struct command_desc commands[commands1484,40904
cmd_help 1487,40966
const struct command_desc commands[commands1497,41131
enum cmd_status do_command 1520,42096
void xenitp 1583,43494
static void usage 1673,45675
int main 1680,45774

tools/debugger/xenitp/ia64-opc-x.c,1344
#define X0 25,1049
#define X	26,1080
#define bBtype(29,1137
#define bD(30,1188
#define bPa(31,1237
#define bPr(32,1287
#define bVc(33,1337
#define bWha(34,1387
#define bX3(35,1438
#define bX6(36,1488
#define bY(37,1539
#define mBtype	39,1589
#define mD	40,1617
#define mPa	41,1637
#define mPr	42,1659
#define mVc 43,1681
#define mWha	44,1714
#define mX3 45,1738
#define mX6	46,1771
#define mY	47,1793
#define OpX3X6(49,1814
#define OpX3X6Y(51,1891
#define OpVc(53,1983
#define OpPaWhaD(54,2035
#define OpBtypePaWhaD(56,2129
#define OpBtypePaWhaDPr(59,2255
struct ia64_opcode ia64_opcodes_x[ia64_opcodes_x63,2402
#define BRL(69,2698
#undef BRL77,2991
#define BRL(78,3002
#define BRLP(80,3086
#undef BRL130,5156
#undef BRLP131,5167
#define BRL(132,5179
#define BRLP(133,5250
#undef BRL158,6371
#undef BRLP159,6382
#undef X0163,6440
#undef X164,6450
#undef bBtype166,6460
#undef bD167,6474
#undef bPa168,6484
#undef bPr169,6495
#undef bVc170,6506
#undef bWha171,6517
#undef bX3172,6529
#undef bX6173,6540
#undef mBtype175,6552
#undef mD176,6566
#undef mPa177,6576
#undef mPr178,6587
#undef mVc179,6598
#undef mWha180,6609
#undef mX3181,6621
#undef mX6182,6632
#undef OpX3X6184,6644
#undef OpVc185,6658
#undef OpPaWhaD186,6670
#undef OpBtypePaWhaD187,6686
#undef OpBtypePaWhaDPr188,6707

tools/debugger/xenitp/ia64-opc-a.c,1925
#define A	25,1031
#define A2	26,1056
#define bC(29,1113
#define bImm14(30,1162
#define bR3a(33,1327
#define bR3b(34,1379
#define bTa(35,1430
#define bTb(36,1480
#define bVe(37,1530
#define bX(38,1580
#define bX2(39,1629
#define bX2a(40,1679
#define bX2b(41,1730
#define bX4(42,1781
#define bZa(43,1831
#define bZb(44,1881
#define mC	47,1961
#define mImm14	48,1980
#define mR3a	49,2007
#define mR3b	50,2030
#define mTa	51,2053
#define mTb	52,2074
#define mVe	53,2095
#define mX	54,2116
#define mX2	55,2135
#define mX2a	56,2156
#define mX2b	57,2179
#define mX4	58,2202
#define mZa	59,2223
#define mZb	60,2244
#define OpR3b(62,2266
#define OpX2aVe(63,2321
#define OpX2aVeR3a(65,2402
#define OpX2aVeImm14(67,2505
#define OpX2aVeX4(69,2614
#define OpX2aVeX4X2b(71,2714
#define OpX2TbTaC(74,2837
#define OpX2TaC(77,2951
#define OpX2aZaZbX4(79,3045
#define OpX2aZaZbX4X2b(82,3165
#define EMPTY 88,3414
struct ia64_opcode ia64_opcodes_a[ia64_opcodes_a90,3438
#undef A379,26689
#undef A2380,26698
#undef bC381,26708
#undef bImm14382,26718
#undef bR3a383,26732
#undef bR3b384,26744
#undef bTa385,26756
#undef bTb386,26767
#undef bVe387,26778
#undef bX388,26789
#undef bX2389,26799
#undef bX2a390,26810
#undef bX2b391,26822
#undef bX4392,26834
#undef bZa393,26845
#undef bZb394,26856
#undef mC395,26867
#undef mImm14396,26877
#undef mR3a397,26891
#undef mR3b398,26903
#undef mTa399,26915
#undef mTb400,26926
#undef mVe401,26937
#undef mX402,26948
#undef mX2403,26958
#undef mX2a404,26969
#undef mX2b405,26981
#undef mX4406,26993
#undef mZa407,27004
#undef mZb408,27015
#undef OpR3a409,27026
#undef OpR3b410,27039
#undef OpX2aVe411,27052
#undef OpX2aVeImm14412,27067
#undef OpX2aVeX4413,27087
#undef OpX2aVeX4X2b414,27104
#undef OpX2TbTaC415,27124
#undef OpX2TaC416,27141
#undef OpX2aZaZbX4417,27156
#undef OpX2aZaZbX4X2b418,27175
#undef EMPTY419,27197

tools/debugger/xenitp/ia64.h,6660
#define opcode_ia64_h7,218
typedef BFD_HOST_U_64_BIT ia64_insn;14,288
enum ia64_insn_type16,326
    IA64_TYPE_NIL 18,350
    IA64_TYPE_A,19,392
    IA64_TYPE_I,20,442
    IA64_TYPE_M,21,490
    IA64_TYPE_B,22,529
    IA64_TYPE_F,23,568
    IA64_TYPE_X,24,615
    IA64_TYPE_DYN,25,661
    IA64_NUM_TYPES26,701
enum ia64_unit29,726
    IA64_UNIT_NIL 31,745
    IA64_UNIT_I,32,787
    IA64_UNIT_M,33,823
    IA64_UNIT_B,34,858
    IA64_UNIT_F,35,896
    IA64_UNIT_L,36,939
    IA64_UNIT_X,37,974
    IA64_NUM_UNITS38,1027
enum ia64_opnd44,1152
    IA64_OPND_NIL,46,1171
    IA64_OPND_AR_CSD,49,1244
    IA64_OPND_AR_CCV,50,1306
    IA64_OPND_AR_PFS,51,1368
    IA64_OPND_C1,52,1430
    IA64_OPND_C8,53,1469
    IA64_OPND_C16,54,1508
    IA64_OPND_GR0,55,1549
    IA64_OPND_IP,56,1578
    IA64_OPND_PR,57,1627
    IA64_OPND_PR_ROT,58,1675
    IA64_OPND_PSR,59,1740
    IA64_OPND_PSR_L,60,1797
    IA64_OPND_PSR_UM,61,1860
    IA64_OPND_AR3,64,1956
    IA64_OPND_B1,65,2023
    IA64_OPND_B2,66,2076
    IA64_OPND_CR3,67,2131
    IA64_OPND_F1,68,2194
    IA64_OPND_F2,69,2250
    IA64_OPND_F3,70,2307
    IA64_OPND_F4,71,2363
    IA64_OPND_P1,72,2420
    IA64_OPND_P2,73,2462
    IA64_OPND_R1,74,2505
    IA64_OPND_R2,75,2546
    IA64_OPND_R3,76,2588
    IA64_OPND_R3_2,77,2629
    IA64_OPND_MR3,80,2721
    IA64_OPND_CPUID_R3,83,2811
    IA64_OPND_DBR_R3,84,2852
    IA64_OPND_DTR_R3,85,2889
    IA64_OPND_ITR_R3,86,2926
    IA64_OPND_IBR_R3,87,2963
    IA64_OPND_MSR_R3,88,3000
    IA64_OPND_PKR_R3,89,3037
    IA64_OPND_PMC_R3,90,3074
    IA64_OPND_PMD_R3,91,3111
    IA64_OPND_RR_R3,92,3148
    IA64_OPND_CCNT5,95,3214
    IA64_OPND_CNT2a,96,3271
    IA64_OPND_CNT2b,97,3327
    IA64_OPND_CNT2c,98,3388
    IA64_OPND_CNT5,99,3457
    IA64_OPND_CNT6,100,3508
    IA64_OPND_CPOS6a,101,3559
    IA64_OPND_CPOS6b,102,3617
    IA64_OPND_CPOS6c,103,3675
    IA64_OPND_IMM1,104,3733
    IA64_OPND_IMMU2,105,3791
    IA64_OPND_IMMU5b,106,3856
    IA64_OPND_IMMU7a,107,3927
    IA64_OPND_IMMU7b,108,3993
    IA64_OPND_SOF,109,4059
    IA64_OPND_SOL,110,4107
    IA64_OPND_SOR,111,4153
    IA64_OPND_IMM8,112,4227
    IA64_OPND_IMM8U4,113,4294
    IA64_OPND_IMM8M1,114,4370
    IA64_OPND_IMM8M1U4,115,4442
    IA64_OPND_IMM8M1U8,116,4522
    IA64_OPND_IMMU9,117,4602
    IA64_OPND_IMM9a,118,4674
    IA64_OPND_IMM9b,119,4744
    IA64_OPND_IMM14,120,4815
    IA64_OPND_IMM17,121,4890
    IA64_OPND_IMMU21,122,4966
    IA64_OPND_IMM22,123,5036
    IA64_OPND_IMMU24,124,5107
    IA64_OPND_IMM44,125,5184
    IA64_OPND_IMMU62,126,5256
    IA64_OPND_IMMU64,127,5310
    IA64_OPND_INC3,128,5380
    IA64_OPND_LEN4,129,5448
    IA64_OPND_LEN6,130,5503
    IA64_OPND_MBTYPE4,131,5558
    IA64_OPND_MHTYPE8,132,5615
    IA64_OPND_POS6,133,5672
    IA64_OPND_TAG13,134,5723
    IA64_OPND_TAG13b,135,5795
    IA64_OPND_TGT25,136,5862
    IA64_OPND_TGT25b,137,5927
    IA64_OPND_TGT25c,138,6000
    IA64_OPND_TGT64,139,6067
    IA64_OPND_LDXMOV,140,6138
    IA64_OPND_COUNT	142,6205
enum ia64_dependency_mode145,6272
  IA64_DV_RAW,147,6300
  IA64_DV_WAW,148,6315
  IA64_DV_WAR,149,6330
enum ia64_dependency_semantics152,6349
  IA64_DVS_NONE,154,6382
  IA64_DVS_IMPLIED,155,6399
  IA64_DVS_IMPLIEDF,156,6419
  IA64_DVS_DATA,157,6440
  IA64_DVS_INSTR,158,6457
  IA64_DVS_SPECIFIC,159,6475
  IA64_DVS_STOP,160,6496
  IA64_DVS_OTHER,161,6513
enum ia64_resource_specifier164,6535
  IA64_RS_ANY,166,6566
  IA64_RS_AR_K,167,6581
  IA64_RS_AR_UNAT,168,6597
  IA64_RS_AR,169,6616
  IA64_RS_ARb,170,6692
  IA64_RS_BR,171,6728
  IA64_RS_CFM,172,6742
  IA64_RS_CPUID,173,6757
  IA64_RS_CR_IRR,174,6774
  IA64_RS_CR_LRR,175,6792
  IA64_RS_CR,176,6810
  IA64_RS_DBR,177,6862
  IA64_RS_FR,178,6877
  IA64_RS_FRb,179,6891
  IA64_RS_GR0,180,6906
  IA64_RS_GR,181,6921
  IA64_RS_IBR,182,6935
  IA64_RS_INSERVICE,183,6950
  IA64_RS_MSR,184,6996
  IA64_RS_PKR,185,7011
  IA64_RS_PMC,186,7026
  IA64_RS_PMD,187,7041
  IA64_RS_PR,188,7056
  IA64_RS_PRr,189,7096
  IA64_RS_PR63,190,7133
  IA64_RS_RR,191,7149
  IA64_RS_ARX,193,7164
  IA64_RS_CRX,194,7212
  IA64_RS_PSR,195,7250
  IA64_RS_RSE,196,7280
  IA64_RS_AR_FPSR,197,7339
enum ia64_rse_resource200,7362
  IA64_RSE_N_STACKED_PHYS,202,7387
  IA64_RSE_BOF,203,7414
  IA64_RSE_STORE_REG,204,7430
  IA64_RSE_LOAD_REG,205,7452
  IA64_RSE_BSPLOAD,206,7473
  IA64_RSE_RNATBITINDEX,207,7493
  IA64_RSE_CFLE,208,7518
  IA64_RSE_NDIRTY,209,7535
struct ia64_dependency213,7610
  const char *name;name216,7664
  enum ia64_resource_specifier specifier;218,7741
  enum ia64_dependency_mode mode;220,7810
  enum ia64_dependency_semantics semantics;222,7873
#define REG_NONE 224,7992
  int regindex;225,8014
  const char *info;info227,8064
struct ia64_opcode_dependency236,8465
  int nchks;238,8497
  const unsigned short *chks;chks239,8510
  int nregs;240,8540
  const unsigned short *regs;regs241,8553
#define RDEP(245,8640
#define NOTE(246,8674
#define DEP(247,8707
struct ia64_templ_desc252,8948
    int group_boundary;254,8975
    enum ia64_unit exec_unit[exec_unit255,9047
    const char *name;name256,9080
struct ia64_opcode261,9168
    const char *name;name264,9219
    enum ia64_insn_type type;267,9281
    int num_outputs;270,9349
    ia64_insn opcode;274,9470
    ia64_insn mask;280,9764
    enum ia64_opnd operands[operands285,9989
    unsigned int flags;290,10215
    short ent_index;293,10284
    const struct ia64_opcode_dependency *dependencies;dependencies296,10337
#define IA64_OPCODE_FIRST	301,10466
#define IA64_OPCODE_X_IN_MLX	302,10536
#define IA64_OPCODE_LAST	303,10611
#define IA64_OPCODE_PRIV	304,10679
#define IA64_OPCODE_SLOT2	305,10737
#define IA64_OPCODE_NO_PRED	306,10804
#define IA64_OPCODE_PSEUDO	307,10871
#define IA64_OPCODE_F2_EQ_F3	308,10931
#define IA64_OPCODE_LEN_EQ_64MCNT	309,10994
#define IA64_OPCODE_MOD_RRBS 310,11067
#define IA64_OPCODE_POSTINC	311,11137
#define IA64_OP(314,11270
enum ia64_operand_class316,11310
    IA64_OPND_CLASS_CST,318,11338
    IA64_OPND_CLASS_REG,319,11378
    IA64_OPND_CLASS_IND,320,11418
    IA64_OPND_CLASS_ABS,321,11467
    IA64_OPND_CLASS_REL,322,11513
struct ia64_operand327,11631
  const char *(*insert)insert335,11949
  const char *(*extract)extract342,12288
  const char *str;str347,12451
  struct bit_field349,12471
      int bits;352,12544
      int shift;355,12630
  field[field357,12653
  unsigned int flags;359,12719
  const char *desc;desc361,12742
#define IA64_OPND_FLAG_DECIMAL_SIGNED	367,12913
#define IA64_OPND_FLAG_DECIMAL_UNSIGNED	369,13014

tools/debugger/xenitp/ia64-dis.c,71
#define NELEMS(28,1078
unit_to_type 35,1265
print_insn_ia64 69,1848

tools/debugger/xenitp/cpu-ia64-opc.c,986
#define NELEMS(32,1343
ins_rsvd 35,1421
ext_rsvd 42,1627
ins_const 49,1834
ext_const 56,2003
ins_reg 63,2173
ext_reg 73,2413
ins_immu 81,2614
ext_immu 100,3052
ins_immu5b 117,3484
ext_immu5b 126,3714
ins_immus8 140,3960
ext_immus8 148,4175
ins_imms_scaled 161,4416
ext_imms_scaled 185,5057
ins_imms 207,5620
ins_immsu4 213,5770
ext_imms 221,5983
ins_immsm1 227,6135
ins_immsm1u4 234,6298
ext_immsm1 244,6531
ins_imms1 253,6724
ext_imms1 259,6875
ins_imms4 265,7028
ext_imms4 271,7179
ins_imms16 277,7332
ext_imms16 283,7485
ins_cimmu 289,7640
ext_cimmu 296,7853
ins_cnt 312,8220
ext_cnt 323,8482
ins_cnt2b 331,8708
ext_cnt2b 343,8936
ins_cnt2c 350,9107
ext_cnt2c 365,9467
ins_inc3 382,9822
ext_inc3 405,10324
#define CST	426,10722
#define REG	427,10754
#define IND	428,10786
#define ABS	429,10818
#define REL	430,10850
#define SDEC	432,10883
#define UDEC	433,10926
const struct ia64_operand elf64_ia64_operands[elf64_ia64_operands435,10972

tools/debugger/xenitp/ia64-opc.h,2272
#define IA64_OPC_H24,1021
#define bOp(30,1101
#define mOp	31,1150
#define Op(32,1171
#define FIRST	34,1199
#define X_IN_MLX	35,1232
#define LAST	36,1270
#define PRIV	37,1301
#define NO_PRED	38,1332
#define SLOT2	39,1369
#define PSEUDO	40,1402
#define F2_EQ_F3	41,1437
#define LEN_EQ_64MCNT	42,1475
#define MOD_RRBS 43,1523
#define POSTINC	44,1568
#define AR_CCV	46,1606
#define AR_PFS	47,1638
#define AR_CSD	48,1670
#define C1	49,1702
#define C8	50,1726
#define C16	51,1750
#define GR0	52,1776
#define IP	53,1802
#define PR	54,1826
#define PR_ROT	55,1850
#define PSR	56,1882
#define PSR_L	57,1908
#define PSR_UM	58,1938
#define AR3	60,1971
#define B1	61,1997
#define B2	62,2021
#define CR3	63,2045
#define F1	64,2071
#define F2	65,2095
#define F3	66,2119
#define F4	67,2143
#define P1	68,2167
#define P2	69,2191
#define R1	70,2215
#define R2	71,2239
#define R3	72,2263
#define R3_2	73,2287
#define CPUID_R3 75,2316
#define DBR_R3	76,2352
#define DTR_R3	77,2384
#define ITR_R3	78,2416
#define IBR_R3	79,2448
#define MR3	80,2480
#define MSR_R3	81,2506
#define PKR_R3	82,2538
#define PMC_R3	83,2570
#define PMD_R3	84,2602
#define RR_R3	85,2634
#define CCNT5	87,2665
#define CNT2a	88,2695
#define CNT2b	89,2725
#define CNT2c	90,2755
#define CNT5	91,2785
#define CNT6	92,2813
#define CPOS6a	93,2841
#define CPOS6b	94,2873
#define CPOS6c	95,2905
#define IMM1	96,2937
#define IMM14	97,2965
#define IMM17	98,2995
#define IMM22	99,3025
#define IMM44	100,3055
#define SOF	101,3085
#define SOL	102,3111
#define SOR	103,3137
#define IMM8	104,3163
#define IMM8U4	105,3191
#define IMM8M1	106,3223
#define IMM8M1U4 107,3255
#define IMM8M1U8 108,3291
#define IMM9a	109,3327
#define IMM9b	110,3357
#define IMMU2	111,3387
#define IMMU21	112,3417
#define IMMU24	113,3449
#define IMMU62	114,3481
#define IMMU64	115,3513
#define IMMU5b	116,3545
#define IMMU7a	117,3577
#define IMMU7b	118,3609
#define IMMU9	119,3641
#define INC3	120,3671
#define LEN4	121,3699
#define LEN6	122,3727
#define MBTYPE4	123,3755
#define MHTYPE8	124,3789
#define POS6	125,3823
#define TAG13	126,3851
#define TAG13b	127,3881
#define TGT25	128,3913
#define TGT25b	129,3943
#define TGT25c	130,3975
#define TGT64 131,4007

tools/debugger/xenitp/ia64-opc.c,506
const struct ia64_templ_desc ia64_templ_desc[ia64_templ_desc39,1733
get_opc_prefix 65,2885
find_string_ent 87,3327
find_main_ent 121,3920
find_completer 160,4734
apply_completer 193,5429
extract_op_bits 211,6040
extract_op 247,6925
opcode_verify 302,7967
locate_opcode_ent 346,9172
make_ia64_opcode 525,13464
ia64_dis_opcode 548,14366
ia64_find_matching_opcode 607,15660
ia64_find_next_opcode 668,17067
ia64_find_opcode 681,17444
ia64_free_opcode 711,17937
ia64_find_dependency 718,18058

tools/debugger/xenitp/ia64-asmtab.c,13961
static const char * const ia64_strings[ia64_strings2,71
dependencies[dependencies39,2523
static const unsigned short dep0[dep0390,16720
static const unsigned short dep1[dep1394,16787
static const unsigned short dep2[dep2399,16934
static const unsigned short dep3[dep3404,17076
static const unsigned short dep4[dep4409,17259
static const unsigned short dep5[dep5414,17415
static const unsigned short dep6[dep6419,17605
static const unsigned short dep7[dep7424,17747
static const unsigned short dep8[dep8429,17930
static const unsigned short dep9[dep9434,18072
static const unsigned short dep10[dep10439,18255
static const unsigned short dep11[dep11444,18434
static const unsigned short dep12[dep12450,18657
static const unsigned short dep13[dep13454,18719
static const unsigned short dep14[dep14459,18881
static const unsigned short dep15[dep15463,18967
static const unsigned short dep16[dep16470,19283
static const unsigned short dep17[dep17474,19394
static const unsigned short dep18[dep18480,19618
static const unsigned short dep19[dep19484,19714
static const unsigned short dep20[dep20489,19863
static const unsigned short dep21[dep21493,19928
static const unsigned short dep22[dep22497,20009
static const unsigned short dep23[dep23505,20438
static const unsigned short dep24[dep24512,20778
static const unsigned short dep25[dep25516,20844
static const unsigned short dep26[dep26520,20945
static const unsigned short dep27[dep27524,21011
static const unsigned short dep28[dep28529,21137
static const unsigned short dep29[dep29533,21203
static const unsigned short dep30[dep30537,21318
static const unsigned short dep31[dep31542,21453
static const unsigned short dep32[dep32547,21581
static const unsigned short dep33[dep33553,21812
static const unsigned short dep34[dep34557,21868
static const unsigned short dep35[dep35561,21956
static const unsigned short dep36[dep36566,22106
static const unsigned short dep37[dep37570,22213
static const unsigned short dep38[dep38575,22395
static const unsigned short dep39[dep39579,22466
static const unsigned short dep40[dep40584,22625
static const unsigned short dep41[dep41588,22741
static const unsigned short dep42[dep42593,22932
static const unsigned short dep43[dep43599,23151
static const unsigned short dep44[dep44603,23227
static const unsigned short dep45[dep45609,23455
static const unsigned short dep46[dep46615,23726
static const unsigned short dep47[dep47621,23996
static const unsigned short dep48[dep48628,24312
static const unsigned short dep49[dep49634,24540
static const unsigned short dep50[dep50640,24811
static const unsigned short dep51[dep51646,25039
static const unsigned short dep52[dep52652,25310
static const unsigned short dep53[dep53658,25538
static const unsigned short dep54[dep54664,25809
static const unsigned short dep55[dep55669,25936
static const unsigned short dep56[dep56675,26158
static const unsigned short dep57[dep57680,26327
static const unsigned short dep58[dep58686,26591
static const unsigned short dep59[dep59691,26718
static const unsigned short dep60[dep60697,26940
static const unsigned short dep61[dep61702,27067
static const unsigned short dep62[dep62708,27289
static const unsigned short dep63[dep63713,27416
static const unsigned short dep64[dep64719,27638
static const unsigned short dep65[dep65723,27748
static const unsigned short dep66[dep66728,27945
static const unsigned short dep67[dep67732,28010
static const unsigned short dep68[dep68737,28136
static const unsigned short dep69[dep69741,28254
static const unsigned short dep70[dep70745,28319
static const unsigned short dep71[dep71750,28445
static const unsigned short dep72[dep72754,28510
static const unsigned short dep73[dep73759,28636
static const unsigned short dep74[dep74763,28701
static const unsigned short dep75[dep75768,28827
static const unsigned short dep76[dep76772,28897
static const unsigned short dep77[dep77777,29024
static const unsigned short dep78[dep78781,29138
static const unsigned short dep79[dep79785,29208
static const unsigned short dep80[dep80790,29335
static const unsigned short dep81[dep81794,29405
static const unsigned short dep82[dep82799,29532
static const unsigned short dep83[dep83803,29602
static const unsigned short dep84[dep84808,29729
static const unsigned short dep85[dep85813,29873
static const unsigned short dep86[dep86818,30021
static const unsigned short dep87[dep87823,30169
static const unsigned short dep88[dep88828,30317
static const unsigned short dep89[dep89832,30387
static const unsigned short dep90[dep90837,30526
static const unsigned short dep91[dep91841,30638
static const unsigned short dep92[dep92846,30819
static const unsigned short dep93[dep93850,30889
static const unsigned short dep94[dep94855,31028
static const unsigned short dep95[dep95859,31098
static const unsigned short dep96[dep96864,31237
static const unsigned short dep97[dep97868,31307
static const unsigned short dep98[dep98873,31446
static const unsigned short dep99[dep99878,31603
static const unsigned short dep100[dep100884,31833
static const unsigned short dep101[dep101889,32033
static const unsigned short dep102[dep102895,32306
static const unsigned short dep103[dep103900,32464
static const unsigned short dep104[dep104906,32695
static const unsigned short dep105[dep105911,32853
static const unsigned short dep106[dep106917,33084
static const unsigned short dep107[dep107922,33242
static const unsigned short dep108[dep108928,33473
static const unsigned short dep109[dep109933,33645
static const unsigned short dep110[dep110939,33883
static const unsigned short dep111[dep111945,34100
static const unsigned short dep112[dep112951,34380
static const unsigned short dep113[dep113956,34552
static const unsigned short dep114[dep114962,34790
static const unsigned short dep115[dep115967,34962
static const unsigned short dep116[dep116973,35200
static const unsigned short dep117[dep117978,35372
static const unsigned short dep118[dep118984,35610
static const unsigned short dep119[dep119989,35754
static const unsigned short dep120[dep120995,35963
static const unsigned short dep121[dep1211000,36121
static const unsigned short dep122[dep1221006,36337
static const unsigned short dep123[dep1231012,36546
static const unsigned short dep124[dep1241017,36704
static const unsigned short dep125[dep1251021,36785
static const unsigned short dep126[dep1261026,36940
static const unsigned short dep127[dep1271031,37083
static const unsigned short dep128[dep1281036,37227
static const unsigned short dep129[dep1291041,37416
static const unsigned short dep130[dep1301045,37513
static const unsigned short dep131[dep1311050,37655
static const unsigned short dep132[dep1321055,37786
static const unsigned short dep133[dep1331060,37915
static const unsigned short dep134[dep1341064,38014
static const unsigned short dep135[dep1351069,38178
static const unsigned short dep136[dep1361074,38330
static const unsigned short dep137[dep1371079,38490
static const unsigned short dep138[dep1381084,38657
static const unsigned short dep139[dep1391089,38817
static const unsigned short dep140[dep1401094,38977
static const unsigned short dep141[dep1411099,39173
static const unsigned short dep142[dep1421104,39309
static const unsigned short dep143[dep1431108,39374
static const unsigned short dep144[dep1441113,39515
static const unsigned short dep145[dep1451117,39635
static const unsigned short dep146[dep1461121,39723
static const unsigned short dep147[dep1471126,39851
static const unsigned short dep148[dep1481131,39994
static const unsigned short dep149[dep1491136,40120
static const unsigned short dep150[dep1501143,40461
static const unsigned short dep151[dep1511150,40805
static const unsigned short dep152[dep1521155,40963
static const unsigned short dep153[dep1531160,41140
static const unsigned short dep154[dep1541165,41289
static const unsigned short dep155[dep1551169,41396
static const unsigned short dep156[dep1561176,41756
static const unsigned short dep157[dep1571182,42023
static const unsigned short dep158[dep1581188,42283
static const unsigned short dep159[dep1591194,42558
static const unsigned short dep160[dep1601201,42857
static const unsigned short dep161[dep1611208,43151
static const unsigned short dep162[dep1621212,43238
static const unsigned short dep163[dep1631218,43516
static const unsigned short dep164[dep1641222,43625
static const unsigned short dep165[dep1651227,43794
static const unsigned short dep166[dep1661234,44130
static const unsigned short dep167[dep1671240,44408
static const unsigned short dep168[dep1681245,44538
static const unsigned short dep169[dep1691250,44726
static const unsigned short dep170[dep1701257,45058
static const unsigned short dep171[dep1711262,45224
static const unsigned short dep172[dep1721268,45436
static const unsigned short dep173[dep1731274,45662
static const unsigned short dep174[dep1741278,45757
static const unsigned short dep175[dep1751284,45987
static const unsigned short dep176[dep1761290,46223
static const unsigned short dep177[dep1771294,46301
static const unsigned short dep178[dep1781299,46471
static const unsigned short dep179[dep1791303,46546
static const unsigned short dep180[dep1801308,46715
static const unsigned short dep181[dep1811312,46784
static const unsigned short dep182[dep1821317,46953
static const unsigned short dep183[dep1831321,47052
static const unsigned short dep184[dep1841326,47245
static const unsigned short dep185[dep1851330,47320
static const unsigned short dep186[dep1861335,47489
static const unsigned short dep187[dep1871339,47558
static const unsigned short dep188[dep1881344,47727
static const unsigned short dep189[dep1891348,47798
static const unsigned short dep190[dep1901353,47968
static const unsigned short dep191[dep1911357,48081
static const unsigned short dep192[dep1921363,48325
static const unsigned short dep193[dep1931367,48440
static const unsigned short dep194[dep1941373,48686
static const unsigned short dep195[dep1951378,48862
static const unsigned short dep196[dep1961383,49037
static const unsigned short dep197[dep1971388,49212
static const unsigned short dep198[dep1981393,49393
static const unsigned short dep199[dep1991398,49568
static const unsigned short dep200[dep2001403,49749
static const unsigned short dep201[dep2011408,49905
static const unsigned short dep202[dep2021413,50070
static const unsigned short dep203[dep2031417,50172
static const unsigned short dep204[dep2041423,50399
static const unsigned short dep205[dep2051427,50515
static const unsigned short dep206[dep2061433,50756
static const unsigned short dep207[dep2071438,50883
static const unsigned short dep208[dep2081444,51110
static const unsigned short dep209[dep2091449,51240
static const unsigned short dep210[dep2101455,51469
static const unsigned short dep211[dep2111460,51641
static const unsigned short dep212[dep2121465,51805
static const unsigned short dep213[dep2131470,52005
static const unsigned short dep214[dep2141476,52212
static const unsigned short dep215[dep2151481,52386
static const unsigned short dep216[dep2161486,52582
static const unsigned short dep217[dep2171492,52859
static const unsigned short dep218[dep2181496,52936
static const unsigned short dep219[dep2191503,53221
static const unsigned short dep220[dep2201510,53510
static const unsigned short dep221[dep2211514,53587
static const unsigned short dep222[dep2221521,53875
static const unsigned short dep223[dep2231528,54172
static const unsigned short dep224[dep2241535,54456
static const unsigned short dep225[dep2251539,54534
static const unsigned short dep226[dep2261543,54609
static const unsigned short dep227[dep2271550,54891
static const unsigned short dep228[dep2281557,55176
static const unsigned short dep229[dep2291561,55260
static const unsigned short dep230[dep2301568,55547
static const unsigned short dep231[dep2311572,55634
static const unsigned short dep232[dep2321579,55930
static const unsigned short dep233[dep2331586,56229
static const unsigned short dep234[dep2341593,56522
static const unsigned short dep235[dep2351598,56699
static const unsigned short dep236[dep2361605,56987
static const unsigned short dep237[dep2371609,57083
static const unsigned short dep238[dep2381616,57376
static const unsigned short dep239[dep2391623,57712
static const unsigned short dep240[dep2401630,58057
static const unsigned short dep241[dep2411634,58176
static const unsigned short dep242[dep2421641,58520
static const unsigned short dep243[dep2431648,58873
static const unsigned short dep244[dep2441652,58992
static const unsigned short dep245[dep2451657,59118
static const unsigned short dep246[dep2461664,59460
static const unsigned short dep247[dep2471671,59811
static const unsigned short dep248[dep2481676,59945
static const unsigned short dep249[dep2491683,60295
static const unsigned short dep250[dep2501691,60657
static const unsigned short dep251[dep2511696,60791
static const unsigned short dep252[dep2521703,61119
static const unsigned short dep253[dep2531708,61317
static const unsigned short dep254[dep2541714,61549
static const unsigned short dep255[dep2551720,61757
static const unsigned short dep256[dep2561727,62091
static const unsigned short dep257[dep2571735,62477
#define NELS(1744,62973
op_dependencies[op_dependencies1746,63057
completer_table[completer_table1914,71088
main_table[main_table4970,198358
static const char dis_table[dis_table5433,242431
static const struct ia64_dis_names ia64_dis_names[ia64_dis_names6075,289086

tools/debugger/xenitp/ia64-gen.c,4545
#define _(55,2075
#define _opcode_int64_low(61,2376
#define _opcode_int64_high(62,2444
#define opcode_fprintf_vma(63,2519
const char * program_name 66,2631
int debug 67,2665
#define NELEMS(69,2681
#define tmalloc(70,2730
struct main_entry75,2942
  struct string_entry *name;name79,3093
  struct ia64_opcode *opcode;opcode82,3257
  struct completer_entry *completers;completers84,3355
  struct main_entry *next;next86,3427
  int main_index;88,3489
} *maintable,maintable89,3507
} *maintable, **ordered_table;ordered_table89,3507
int otlen 91,3539
int ottotlen 92,3554
int opcode_count 93,3572
struct completer_entry96,3648
  int num;99,3738
  struct string_entry *name;name102,3786
  struct completer_entry *parent;parent105,3846
  int is_terminal;109,3965
  struct completer_entry *alternative;alternative112,4020
  struct completer_entry *addl_entries;addl_entries115,4125
  ia64_insn bits;121,4404
  ia64_insn mask;127,4705
  int dependencies;130,4787
  int order;133,4870
struct disent137,4936
  int ournum;140,5016
  int insn;143,5079
  int priority;146,5140
  int completer_index;149,5208
  int nextcnt;152,5283
  struct disent *nexte;nexte155,5348
  struct disent *next_ent;next_ent158,5415
} *disinsntable disinsntable159,5442
struct bittree163,5558
  struct disent *disent;disent165,5575
  struct bittree *bits[bits166,5600
  int bits_to_skip;167,5660
  int skip_flag;168,5680
} *bittree;bittree169,5697
struct string_entry 175,5842
  int num;178,5928
  char *s;s180,5964
} **string_table string_table181,5975
int strtablen 183,6001
int strtabtotlen 184,6020
struct rdep188,6081
  char *name;name190,6095
    mode:mode192,6165
    semantics:semantics193,6226
  char *extra;extra194,6291
  int nchks;195,6361
  int total_chks;196,6393
  int *chks;chks197,6462
  int *chknotes;chknotes199,6614
  int nregs;200,6690
  int total_regs;201,6703
  int *regs;regs202,6772
  int *regnotes;regnotes204,6923
  int waw_special;206,7000
} **rdeps rdeps207,7072
static int rdepslen 209,7091
static int rdepstotlen 210,7116
struct iclass213,7186
  char *name;name215,7203
  int is_class;216,7270
  int nsubs;217,7341
  int *subs;subs218,7378
  int nxsubs;219,7454
  int xsubs[xsubs220,7491
  char *comment;comment221,7546
  int note;222,7607
  int terminal_resolved;223,7665
  int orphan;224,7741
} **ics ics225,7806
static int iclen 227,7823
static int ictotlen 228,7845
struct opdep231,7935
  int chk;233,7950
  int reg;234,8010
} **opdeps;opdeps235,8070
static int opdeplen 237,8083
static int opdeptotlen 238,8108
struct deplist241,8214
  int len;243,8231
  unsigned short *deps;deps244,8242
} **dlists;dlists245,8266
static int dlistlen 247,8279
static int dlisttotlen 248,8304
static void fail 251,8334
warn 313,11335
insert_resource 326,11611
deplist_equals 345,12154
insert_deplist 361,12445
insert_dependencies 408,13589
mark_used 442,14317
fetch_insn_class 460,14765
sub_compare 593,18034
load_insn_classes 610,18336
parse_resource_users 696,20417
parse_semantics 778,22556
add_dep 799,23103
load_depfile 815,23509
load_dependencies 878,25079
irf_operand 890,25392
in_iclass_mov_x 915,26367
in_iclass 1029,29920
lookup_regindex 1265,38467
lookup_specifier 1423,42720
print_dependency_table 1502,45132
insert_string 1634,48709
make_bittree_entry 1704,50103
add_dis_table_ent 1719,50363
finish_distable 1760,51125
insert_bit_table_ent 1774,51376
add_dis_entry 1815,52256
compact_distree 1845,53082
#define IS_SKIP(1848,53132
static unsigned char *insn_list;insn_list1890,53922
static int insn_list_len 1891,53955
static int tot_insn_list_len 1892,53985
gen_dis_table 1897,54116
#define IS_ONLY_IFZERO(1956,55672
print_dis_table 2122,59965
generate_disassembler 2155,60657
print_string_table 2180,61121
static struct completer_entry **glist;glist2215,61695
static int glistlen 2216,61734
static int glisttotlen 2217,61759
completer_entries_eq 2222,61865
insert_gclist 2249,62638
get_prefix_len 2340,64204
compute_completer_bits 2356,64414
collapse_redundant_completers 2405,65355
insert_opcode_dependencies 2431,66021
insert_completer_entry 2518,69021
print_completer_entry 2592,70507
print_completer_table 2623,71120
opcodes_eq 2634,71344
add_opcode_entry 2660,71914
print_main_table 2716,73191
shrink 2748,74010
#define OPTION_SRCDIR	2778,74874
struct option long_options[long_options2780,74901
print_version 2790,75183
usage 2797,75280
main 2805,75454

tools/debugger/xenitp/ia64-asmtab.h,802
#define IA64_ASMTAB_H23,1030
struct ia64_main_table28,1132
  unsigned short name_index;32,1245
  unsigned char opcode_type;36,1362
  unsigned char num_outputs;39,1439
  ia64_insn opcode;42,1549
  ia64_insn mask;45,1643
  unsigned char operands[operands49,1767
  short flags;53,1897
  short completers;57,2011
struct ia64_completer_table89,3274
  unsigned int bits;92,3352
  unsigned int mask;96,3458
  unsigned short name_index;100,3571
  short alternative;103,3674
  short subentries;107,3789
  unsigned char offset 111,3896
  unsigned char terminal_completer 113,3925
  short dependencies;116,4011
struct ia64_dis_names 121,4163
  unsigned int completer_index 134,4688
  unsigned short insn_index 137,4791
  unsigned int next_flag 142,5039
  unsigned short priority;145,5137

tools/libxc/xg_private.h,3425
#define XG_PRIVATE_H18,724
#define ELFSIZE 40,1111
#define ELFSIZE 42,1136
#define _PAGE_PRESENT 55,1498
#define _PAGE_RW 56,1528
#define _PAGE_USER 57,1558
#define _PAGE_PWT 58,1588
#define _PAGE_PCD 59,1618
#define _PAGE_ACCESSED 60,1648
#define _PAGE_DIRTY 61,1678
#define _PAGE_PAT 62,1708
#define _PAGE_PSE 63,1738
#define _PAGE_GLOBAL 64,1768
#define L1_PAGETABLE_SHIFT_I386 66,1799
#define L2_PAGETABLE_SHIFT_I386 67,1840
#define L1_PAGETABLE_ENTRIES_I386 68,1881
#define L2_PAGETABLE_ENTRIES_I386 69,1922
#define L1_PAGETABLE_SHIFT_PAE 71,1964
#define L2_PAGETABLE_SHIFT_PAE 72,2005
#define L3_PAGETABLE_SHIFT_PAE 73,2046
#define L1_PAGETABLE_ENTRIES_PAE 74,2087
#define L2_PAGETABLE_ENTRIES_PAE 75,2128
#define L3_PAGETABLE_ENTRIES_PAE 76,2169
#define L1_PAGETABLE_SHIFT_X86_64 78,2211
#define L2_PAGETABLE_SHIFT_X86_64 79,2252
#define L3_PAGETABLE_SHIFT_X86_64 80,2293
#define L4_PAGETABLE_SHIFT_X86_64 81,2334
#define L1_PAGETABLE_ENTRIES_X86_64 82,2375
#define L2_PAGETABLE_ENTRIES_X86_64 83,2416
#define L3_PAGETABLE_ENTRIES_X86_64 84,2457
#define L4_PAGETABLE_ENTRIES_X86_64 85,2498
#define L1_PAGETABLE_SHIFT 88,2562
#define L2_PAGETABLE_SHIFT 89,2617
#define L1_PAGETABLE_ENTRIES 90,2672
#define L2_PAGETABLE_ENTRIES 91,2729
#define L1_PAGETABLE_SHIFT 93,2812
#define L2_PAGETABLE_SHIFT 94,2869
#define L3_PAGETABLE_SHIFT 95,2926
#define L4_PAGETABLE_SHIFT 96,2983
#define L1_PAGETABLE_ENTRIES 97,3040
#define L2_PAGETABLE_ENTRIES 98,3099
#define L3_PAGETABLE_ENTRIES 99,3158
#define L4_PAGETABLE_ENTRIES 100,3217
typedef uint32_t l1_pgentry_32_t;103,3284
typedef uint32_t l2_pgentry_32_t;104,3318
typedef uint64_t l1_pgentry_64_t;105,3352
typedef uint64_t l2_pgentry_64_t;106,3386
typedef uint64_t l3_pgentry_64_t;107,3420
typedef uint64_t l4_pgentry_64_t;108,3454
typedef l1_pgentry_32_t l1_pgentry_t;111,3511
typedef l2_pgentry_32_t l2_pgentry_t;112,3549
typedef l1_pgentry_64_t l1_pgentry_t;114,3613
typedef l2_pgentry_64_t l2_pgentry_t;115,3651
typedef l3_pgentry_64_t l3_pgentry_t;116,3689
typedef l4_pgentry_64_t l4_pgentry_t;117,3727
#define l1_table_offset_i386(120,3773
#define l2_table_offset_i386(122,3880
#define l1_table_offset_pae(125,3988
#define l2_table_offset_pae(127,4092
#define l3_table_offset_pae(129,4196
#define l1_table_offset_x86_64(132,4301
#define l2_table_offset_x86_64(134,4414
#define l3_table_offset_x86_64(136,4527
#define l4_table_offset_x86_64(138,4640
#define l1_table_offset(142,4776
#define l2_table_offset(143,4829
#define l1_table_offset(145,4908
#define l2_table_offset(146,4963
#define l3_table_offset(147,5018
#define l4_table_offset(148,5073
#define PAGE_SHIFT_X86 151,5136
#define PAGE_SIZE_X86 152,5171
#define PAGE_MASK_X86 153,5227
#define PAGE_SHIFT_IA64 155,5281
#define PAGE_SIZE_IA64 156,5316
#define PAGE_MASK_IA64 157,5373
#define ROUNDUP(159,5428
#define NRPAGES(160,5508
struct domain_info_context 166,5723
    unsigned int guest_width;167,5752
    unsigned long p2m_size;168,5782
#define FPP 172,5850
#define P2M_FLL_ENTRIES 175,5966
#define P2M_FL_ENTRIES 178,6088
#define P2M_GUEST_FL_SIZE 181,6198
#define P2M_TOOLS_FL_SIZE 182,6266
#define MADDR_BITS_X86 186,6453
#define MFN_MASK_X86 187,6515
#define MADDR_MASK_X86 188,6589
#define PAEKERN_no 191,6648
#define PAEKERN_yes 192,6679
#define PAEKERN_extended_cr3 193,6710
#define PAEKERN_bimodal 194,6741

tools/libxc/xc_private.h,2202
#define XC_PRIVATE_H18,724
#define DECLARE_HYPERCALL 41,1260
#define DECLARE_DOMCTL 42,1324
#define DECLARE_SYSCTL 43,1380
#define DECLARE_PHYSDEV_OP 44,1436
#define DECLARE_HYPERCALL 46,1506
#define DECLARE_DOMCTL 47,1562
#define DECLARE_SYSCTL 48,1610
#define DECLARE_PHYSDEV_OP 49,1658
#undef PAGE_SHIFT52,1722
#undef PAGE_SIZE53,1740
#undef PAGE_MASK54,1757
#define PAGE_SHIFT 55,1774
#define PAGE_SIZE 56,1820
#define PAGE_MASK 57,1865
#define XC_BUILD_BUG_ON(60,1964
#define MAX_PAGECACHE_USAGE 67,2209
struct xc_interface_core 69,2247
    enum xc_osdep_type type;70,2274
    int flags;71,2303
    xentoollog_logger *error_handler,error_handler72,2318
    xentoollog_logger *error_handler,   *error_handler_tofree;error_handler_tofree72,2318
    xentoollog_logger *dombuild_logger,dombuild_logger73,2381
    xentoollog_logger *dombuild_logger, *dombuild_logger_tofree;dombuild_logger_tofree73,2381
    struct xc_error last_error;74,2446
    FILE *dombuild_logger_file;dombuild_logger_file75,2506
    const char *currently_progress_reporting;currently_progress_reporting76,2538
    xc_osdep_info_t  osdep;78,2585
    xc_osdep_ops    *ops;ops79,2613
    xc_osdep_handle  ops_handle;80,2664
void xc_reportv(84,2809
void xc_report(87,2984
#define IPRINTF(98,3459
#define DPRINTF(99,3545
#define DBGPRINTF(100,3633
#define ERROR(102,3723
#define PERROR(103,3800
    XC_HYPERCALL_BUFFER_BOUNCE_NONE 118,4321
    XC_HYPERCALL_BUFFER_BOUNCE_IN 119,4362
    XC_HYPERCALL_BUFFER_BOUNCE_OUT 120,4403
    XC_HYPERCALL_BUFFER_BOUNCE_BOTH 121,4444
#define DECLARE_NAMED_HYPERCALL_BOUNCE(133,4745
#define DECLARE_HYPERCALL_BOUNCE(143,5155
#define HYPERCALL_BOUNCE_SET_SIZE(149,5378
#define xc_hypercall_bounce_pre(156,5649
#define xc_hypercall_bounce_post(158,5832
static inline int do_xen_version(166,6043
static inline int do_physdev_op(178,6401
static inline int do_domctl(206,7164
static inline int do_sysctl(235,7965
#define MAX_MMU_UPDATES 278,9419
struct xc_mmu 279,9448
    mmu_update_t updates[updates280,9464
    int          idx;281,9507
    domid_t      subject;282,9529
#define DOMPRINTF(299,10188
#define DOMPRINTF_CALLED(300,10258

tools/libxc/xg_private.c,227
char *xc_read_image(xc_read_image28,955
#define CHUNK 53,1549
#undef CHUNK80,2195
char *xc_inflate_buffer(xc_inflate_buffer104,2638
int pin_table(165,4333
unsigned long csum_page(180,4651
    int xc_hvm_build(193,4898

tools/libxc/xc_sedf.c,64
int xc_sedf_domain_set(27,1011
int xc_sedf_domain_get(52,1652

tools/libxc/xc_private.c,2004
#define XENCTRL_OSDEP 34,1067
static int xc_osdep_get_info(50,1433
static void xc_osdep_put(106,2719
static struct xc_interface_core *xc_interface_open_common(xc_interface_open_common114,2859
static int xc_interface_close_common(171,4584
int xc_interface_is_fake(185,4906
xc_interface *xc_interface_open(xc_interface_open198,5147
int xc_interface_close(210,5499
int do_xen_hypercall(216,5590
xc_evtchn *xc_evtchn_open(xc_evtchn_open221,5742
int xc_evtchn_close(232,6002
xc_gnttab *xc_gnttab_open(xc_gnttab_open237,6086
int xc_gnttab_close(244,6310
static pthread_key_t errbuf_pkey;249,6394
static pthread_once_t errbuf_pkey_once 250,6428
const xc_error *xc_get_last_error(xc_get_last_error252,6489
void xc_clear_last_error(257,6576
const char *xc_error_code_to_desc(xc_error_code_to_desc263,6706
void xc_reportv(283,7196
void xc_report(319,8222
void xc_report_error(327,8459
void xc_osdep_log(335,8666
void xc_report_progress_start(343,8890
void xc_report_progress_step(350,9167
int xc_get_pfn_type_batch(357,9446
int xc_mmuext_op(374,10031
static int flush_mmu_updates(404,10762
struct xc_mmu *xc_alloc_mmu_updates(xc_alloc_mmu_updates440,11636
int xc_add_mmu_update(450,11861
int xc_flush_mmu_updates(462,12174
int do_memory_op(467,12283
long xc_maximum_ram_page(490,12872
long long xc_domain_get_cpu_usage(495,12985
int xc_machphys_mfn_list(510,13380
int xc_get_pfn_list(538,14152
long xc_get_tot_pages(569,14991
int xc_copy_to_domain_page(578,15242
int xc_clear_domain_page(592,15656
int xc_domctl(605,16008
int xc_sysctl(610,16108
int xc_version(615,16208
unsigned long xc_make_page_below_4G(679,17778
_xc_clean_errbuf(703,18377
_xc_init_errbuf(710,18478
const char *xc_strerror(xc_strerror715,18561
#define XS_BUFSIZE 723,18730
void bitmap_64_to_byte(750,19527
void bitmap_byte_to_64(765,19854
int read_exact(780,20195
int write_exact(800,20592
int xc_ffs8(818,20956
int xc_ffs16(827,21092
int xc_ffs32(833,21203
int xc_ffs64(839,21319

tools/libxc/xc_linux.c,32
void discard_file_cache(24,969

tools/libxc/xenctrl_osdep_ENOSYS.c,1228
#define IPRINTF(10,167
#define ERROR(12,239
#define PERROR(13,326
static xc_osdep_handle ENOSYS_privcmd_open(16,478
static int ENOSYS_privcmd_close(22,654
static int ENOSYS_privcmd_hypercall(28,803
static void *ENOSYS_privcmd_map_foreign_batch(ENOSYS_privcmd_map_foreign_batch37,1199
static void *ENOSYS_privcmd_map_foreign_bulk(ENOSYS_privcmd_map_foreign_bulk44,1512
static void *ENOSYS_privcmd_map_foreign_range(ENOSYS_privcmd_map_foreign_range51,1859
static void *ENOSYS_privcmd_map_foreign_ranges(ENOSYS_privcmd_map_foreign_ranges58,2180
static struct xc_osdep_ops ENOSYS_privcmd_ops 66,2640
static xc_osdep_handle ENOSYS_evtchn_open(80,3105
static int ENOSYS_evtchn_close(86,3279
static int ENOSYS_evtchn_fd(92,3426
static int ENOSYS_evtchn_notify(98,3559
static int ENOSYS_evtchn_bind_unbound_port(104,3735
static int ENOSYS_evtchn_bind_interdomain(111,3929
static int ENOSYS_evtchn_bind_virq(118,4164
static int ENOSYS_evtchn_unbind(125,4346
static evtchn_port_or_error_t ENOSYS_evtchn_pending(132,4523
static int ENOSYS_evtchn_unmask(138,4690
static struct xc_osdep_ops ENOSYS_evtchn_ops 144,4866
static struct xc_osdep_ops * ENOSYS_osdep_init(164,5387
xc_osdep_info_t xc_osdep_info 192,5958

tools/libxc/xc_csched2.c,74
xc_sched_credit2_domain_set(28,1056
xc_sched_credit2_domain_get(45,1482

tools/libxc/xentoollog.h,859
#define XENTOOLLOG_H23,855
typedef enum xentoollog_level 31,975
    XTL_NONE,32,1007
    XTL_DEBUG,33,1064
    XTL_VERBOSE,34,1079
    XTL_DETAIL,35,1096
    XTL_PROGRESS,36,1112
    XTL_INFO,37,1170
    XTL_NOTICE,38,1184
    XTL_WARN,39,1200
    XTL_ERROR,40,1214
    XTL_CRITICAL,41,1229
    XTL_NUM_LEVELS42,1247
} xentoollog_level;43,1266
typedef struct xentoollog_logger xentoollog_logger;45,1287
struct xentoollog_logger 46,1339
    void (*vmessage)vmessage47,1366
    void (*progress)progress54,1738
    void (*destroy)destroy61,2122
#define XTL_STDIOSTREAM_SHOW_PID 68,2301
#define XTL_STDIOSTREAM_SHOW_DATE 69,2343
#define XTL_STDIOSTREAM_HIDE_PROGRESS 70,2385
typedef struct xentoollog_logger_stdiostream  xentoollog_logger_stdiostream;72,2428
void xtl_logv(90,3245
void xtl_log(97,3569
#define XTL_NEW_LOGGER(115,4238

tools/libxc/xc_dom_ia64.c,421
static int alloc_magic_pages(45,1320
int start_info_ia64(54,1563
int shared_info_ia64(96,3019
static int vcpu_ia64(114,3569
static struct xc_dom_arch xc_dom_arch 138,4280
static struct xc_dom_arch xc_dom_arch_ia64be 148,4580
static void __init register_arch_hooks(158,4889
int arch_setup_meminit(166,5059
static int ia64_setup_memmap(195,5906
int arch_setup_bootearly(256,8218
int arch_setup_bootlate(307,9937

tools/libxc/xc_misc.c,749
int xc_get_max_cpus(24,898
int xc_get_cpumap_size(38,1152
xc_cpumap_t xc_cpumap_alloc(43,1242
int xc_readconsolering(53,1405
int xc_send_debug_keys(89,2432
int xc_physinfo(109,2915
int xc_topologyinfo(127,3276
int xc_numainfo(145,3657
int xc_sched_id(164,4017
int xc_mca_op(181,4334
int xc_perfc_reset(202,4896
int xc_perfc_query_number(214,5234
int xc_perfc_query(236,5823
int xc_lockprof_reset(252,6320
int xc_lockprof_query_number(263,6599
int xc_lockprof_query(280,7005
int xc_getcpuinfo(301,7565
int xc_hvm_set_pci_intx_level(326,8169
int xc_hvm_set_isa_irq_level(360,9031
int xc_hvm_set_pci_link_route(391,9778
int xc_hvm_track_dirty_vram(420,10514
int xc_hvm_modified_memory(455,11547
int xc_hvm_set_mem_type(484,12279

tools/libxc/xc_tbuf.c,220
static int tbuf_enable(29,1049
int xc_tbuf_set_size(43,1406
int xc_tbuf_get_size(55,1717
int xc_tbuf_enable(81,2357
int xc_tbuf_disable(111,3168
int xc_tbuf_set_cpu_mask(116,3244
int xc_tbuf_set_evt_mask(147,4086

tools/libxc/xc_acm.c,22
int xc_acm_op(26,979

tools/libxc/xc_csched.c,72
xc_sched_credit_domain_set(28,1056
xc_sched_credit_domain_get(45,1478

tools/libxc/xc_hvm_build.c,683
#define SUPERPAGE_2MB_SHIFT 36,1138
#define SUPERPAGE_2MB_NR_PFNS 37,1170
#define SUPERPAGE_1GB_SHIFT 38,1229
#define SUPERPAGE_1GB_NR_PFNS 39,1262
#define SPECIALPAGE_BUFIOREQ 41,1322
#define SPECIALPAGE_XENSTORE 42,1353
#define SPECIALPAGE_IOREQ 43,1384
#define SPECIALPAGE_IDENT_PT 44,1415
#define SPECIALPAGE_CONSOLE 45,1446
#define NR_SPECIAL_PAGES 46,1477
#define special_pfn(47,1508
static void build_hvm_info(49,1568
static int loadelfimage(85,2712
static int check_mmio_hole(124,3721
static int setup_guest(133,3958
static int xc_hvm_build_internal(392,13454
int xc_hvm_build(411,14029
int xc_hvm_build_target_mem(437,14780
int xc_hvm_build_mem(461,15402

tools/libxc/xc_solaris.c,1068
static xc_osdep_handle solaris_privcmd_open(28,1002
static int solaris_privcmd_close(64,1964
static int solaris_privcmd_hypercall(70,2083
static void *solaris_privcmd_map_foreign_batch(solaris_privcmd_map_foreign_batch76,2274
static void *xc_map_foreign_range(xc_map_foreign_range103,3037
static void *solaric_privcmd_map_foreign_ranges(solaric_privcmd_map_foreign_ranges132,3844
static struct xc_osdep_ops solaris_privcmd_ops 170,4867
static xc_osdep_handle solaris_evtchn_open(184,5325
static int solaris_evtchn_close(197,5597
static int solaris_evtchn_fd(203,5712
static int solaris_evtchn_notify(208,5800
solaris_evtchn_bind_unbound_port(219,6061
solaris_evtchn_bind_interdomain(230,6332
solaris_evtchn_bind_virq(243,6697
static int solaris_evtchn_unbind(253,6919
solaris_evtchn_pending(264,7180
static int solaris_evtchn_unmask(275,7387
static struct xc_osdep_ops solaris_evtchn_ops 281,7557
void discard_file_cache(298,8144
static struct xc_osdep_ops *solaris_osdep_init(solaris_osdep_init303,8248
xc_osdep_info_t xc_osdep_info 319,8649

tools/libxc/xc_core_x86.c,302
#define GET_FIELD(25,937
#define MAX(28,1036
xc_core_arch_gpfn_may_present(32,1097
static int nr_gpfns(43,1423
xc_core_arch_auto_translated_physmap(49,1537
xc_core_arch_memory_map_get(55,1631
xc_core_arch_map_p2m_rw(79,2267
xc_core_arch_map_p2m(194,5966
xc_core_arch_map_p2m_writable(205,6426

tools/libxc/xc_evtchn.c,373
static int do_evtchn_op(25,931
xc_evtchn_alloc_unbound(51,1679
int xc_evtchn_reset(68,2073
int xc_evtchn_status(75,2274
int xc_evtchn_fd(81,2446
int xc_evtchn_notify(86,2540
xc_evtchn_bind_unbound_port(92,2691
xc_evtchn_bind_interdomain(98,2852
xc_evtchn_bind_virq(105,3078
int xc_evtchn_unbind(110,3207
xc_evtchn_pending(116,3358
int xc_evtchn_unmask(121,3458

tools/libxc/xc_dom_bzimageloader.c,2078
static int xc_try_bzip2_decode(42,1366
static int xc_try_bzip2_decode(129,3542
static uint64_t physmem(143,3789
static int xc_try_lzma_decode(164,4397
static int xc_try_lzma_decode(280,7427
#define LZOP_HEADER_HAS_FILTER 294,7678
#define LZOP_MAX_BLOCK_SIZE 295,7720
static inline uint_fast16_t lzo_read_16(297,7764
static inline uint_fast32_t lzo_read_32(302,7870
static int xc_try_lzo1x_decode(307,8011
static int xc_try_lzo1x_decode(462,11571
struct setup_header 472,11781
    uint8_t  _pad0[_pad0473,11803
    uint8_t  setup_sects;474,11862
    uint16_t root_flags;475,11888
    uint32_t syssize;476,11913
    uint16_t ram_size;477,11935
    uint16_t vid_mode;478,11958
    uint16_t root_dev;479,11981
    uint16_t boot_flag;480,12004
    uint16_t jump;481,12028
    uint32_t header;482,12047
#define HDR_MAGIC 483,12068
#define HDR_MAGIC_SZ 484,12094
    uint16_t version;485,12117
#define VERSION(486,12139
    uint32_t realmode_swtch;487,12177
    uint16_t start_sys;488,12206
    uint16_t kernel_version;489,12230
    uint8_t  type_of_loader;490,12259
    uint8_t  loadflags;491,12288
    uint16_t setup_move_size;492,12312
    uint32_t code32_start;493,12342
    uint32_t ramdisk_image;494,12369
    uint32_t ramdisk_size;495,12397
    uint32_t bootsect_kludge;496,12424
    uint16_t heap_end_ptr;497,12454
    uint16_t _pad1;498,12481
    uint32_t cmd_line_ptr;499,12501
    uint32_t initrd_addr_max;500,12528
    uint32_t kernel_alignment;501,12558
    uint8_t  relocatable_kernel;502,12589
    uint8_t  _pad2[_pad2503,12622
    uint32_t cmdline_size;504,12645
    uint32_t hardware_subarch;505,12672
    uint64_t hardware_subarch_data;506,12703
    uint32_t payload_offset;507,12739
    uint32_t payload_length;508,12768
static unsigned int payload_offset(513,12866
static int xc_dom_probe_bzimage_kernel(522,13043
static int xc_dom_parse_bzimage_kernel(613,15823
static int xc_dom_load_bzimage_kernel(618,15928
static struct xc_dom_loader bzimage_loader 623,16032
static void __init register_loader(630,16239

tools/libxc/xc_offline_page.c,1344
struct domain_mem_info{domain_mem_info37,1172
    int domid;38,1196
    unsigned int pt_level;39,1211
    unsigned int guest_width;40,1238
    xen_pfn_t *pfn_type;pfn_type41,1268
    xen_pfn_t *p2m_table;p2m_table42,1293
    unsigned long p2m_size;43,1319
    xen_pfn_t *m2p_table;m2p_table44,1347
    int max_mfn;45,1373
struct pte_backup_entry48,1394
    xen_pfn_t table_mfn;50,1420
    int offset;51,1445
#define DEFAULT_BACKUP_COUNT 54,1465
struct pte_backup55,1499
    struct pte_backup_entry *entries;entries57,1519
    int max;58,1557
    int cur;59,1570
static struct domain_info_context _dinfo;62,1587
static struct domain_info_context *dinfo dinfo63,1629
int xc_mark_page_online(65,1682
int xc_mark_page_offline(93,2507
int xc_query_page_offline_status(121,3335
static int xc_is_page_granted_v1(152,4262
static int xc_is_page_granted_v2(168,4649
static xen_pfn_t pfn_to_mfn(184,5050
static int get_pt_level(193,5377
static int close_mem_info(225,6244
static int init_mem_info(236,6559
static int backup_ptes(324,9043
typedef int (*pte_func)pte_func352,9698
static int __clear_pte(358,9960
static int __update_pte(383,10654
static int change_pte(412,11447
static int update_pte(490,13727
static int clear_pte(500,14070
static int is_page_exchangable(514,14455
int xc_exchange_page(546,15251

tools/libxc/xc_suspend.c,219
#define SUSPEND_LOCK_FILE 20,750
static int lock_suspend_event(21,806
static int unlock_suspend_event(47,1424
int xc_await_suspend(78,2030
int xc_suspend_evtchn_release(97,2512
int xc_suspend_evtchn_init(105,2735

tools/libxc/xc_gnttab.c,546
int xc_gnttab_op(22,878
int xc_gnttab_get_version(47,1504
static void *_gnttab_map_table(_gnttab_map_table61,1812
grant_entry_v1_t *xc_gnttab_map_table_v1(xc_gnttab_map_table_v1132,3711
grant_entry_v2_t *xc_gnttab_map_table_v2(xc_gnttab_map_table_v2140,3962
void *xc_gnttab_map_grant_ref(xc_gnttab_map_grant_ref148,4213
void *xc_gnttab_map_grant_refs(xc_gnttab_map_grant_refs157,4482
void *xc_gnttab_map_domain_grant_refs(xc_gnttab_map_domain_grant_refs167,4817
int xc_gnttab_munmap(177,5191
int xc_gnttab_set_max_grants(185,5397

tools/libxc/xc_dom_elfloader.c,451
#define XEN_VER 32,965
static void log_callback(36,1072
void xc_elf_set_logfile(47,1498
static char *xc_dom_guest_type(xc_dom_guest_type54,1737
static int check_elf_kernel(87,2719
static int xc_dom_probe_elf_kernel(109,3309
static int xc_dom_load_elf_symtab(114,3412
static int xc_dom_parse_elf_kernel(256,8078
static int xc_dom_load_elf_kernel(303,9431
struct xc_dom_loader elf_loader 316,9803
static void __init register_loader(323,9985

tools/libxc/xc_pagetab.c,148
#define CR0_PG 24,909
#define CR4_PAE 25,936
#define PTE_PSE 26,957
#define EFER_LMA 27,978
unsigned long xc_translate_foreign_address(30,1003

tools/libxc/xc_dom_x86.c,1718
#define SUPERPAGE_PFN_SHIFT 43,1318
#define SUPERPAGE_NR_PFNS 44,1349
#define bits_to_mask(46,1408
#define round_down(47,1472
#define round_up(48,1524
nr_page_tables(51,1597
static int count_pgtables(80,2311
#define L1_PROT 120,3867
#define L2_PROT 121,3923
#define L3_PROT 122,4002
static int count_pgtables_x86_32(124,4035
static int count_pgtables_x86_32_pae(129,4169
#define pfn_to_paddr(135,4353
static int setup_pgtables_x86_32(137,4419
static xen_pfn_t move_l3_below_4G(179,5862
static int setup_pgtables_x86_32_pae(236,7437
#undef L1_PROT311,9958
#undef L2_PROT312,9973
#undef L3_PROT313,9988
static int count_pgtables_x86_64(318,10163
#define L1_PROT 327,10478
#define L2_PROT 328,10534
#define L3_PROT 329,10613
#define L4_PROT 330,10692
static int setup_pgtables_x86_64(332,10772
#undef L1_PROT398,13087
#undef L2_PROT399,13102
#undef L3_PROT400,13117
#undef L4_PROT401,13132
static int alloc_magic_pages(405,13228
static int start_info_x86_32(427,14004
static int start_info_x86_64(467,15407
static int shared_info_x86_32(507,16810
static int shared_info_x86_64(520,17143
static int vcpu_x86_32(535,17556
static int vcpu_x86_64(574,18944
static struct xc_dom_arch xc_dom_32 611,20249
static struct xc_dom_arch xc_dom_32_pae 623,20666
static struct xc_dom_arch xc_dom_64 636,21097
static void __init register_arch_hooks(649,21515
static int x86_compat(656,21701
        char           *guest;guest659,21803
        uint32_t        size;660,21834
static int x86_shadow(688,22675
int arch_setup_meminit(711,23331
int arch_setup_bootearly(774,25219
int arch_setup_bootlate(780,25339
        char *guest;guest783,25417
        unsigned long pgd_type;784,25438

tools/libxc/xc_dom_core.c,1495
static const char *default_logfile default_logfile43,1286
int xc_dom_loginit(45,1362
void xc_dom_printf(68,2073
void xc_dom_panic_func(77,2318
static void print_mem(95,2836
void xc_dom_log_memory_footprint(105,3168
void *xc_dom_malloc(xc_dom_malloc119,3734
void *xc_dom_malloc_page_aligned(xc_dom_malloc_page_aligned135,4174
void *xc_dom_malloc_filemap(xc_dom_malloc_filemap161,4934
static void xc_dom_free_all(200,5941
char *xc_dom_strdup(xc_dom_strdup213,6234
size_t xc_dom_check_gzip(227,6628
int xc_dom_do_gunzip(250,7233
int xc_dom_try_gunzip(282,8159
void *xc_dom_pfn_to_ptr(xc_dom_pfn_to_ptr306,8777
int xc_dom_alloc_segment(407,12051
int xc_dom_alloc_page(464,13929
void xc_dom_unmap_one(481,14418
void xc_dom_unmap_all(506,15074
static struct xc_dom_loader *first_loader first_loader515,15371
static struct xc_dom_arch *first_hook first_hook516,15421
void xc_dom_register_loader(518,15468
static struct xc_dom_loader *xc_dom_find_loader(xc_dom_find_loader524,15591
void xc_dom_register_arch_hooks(544,16156
struct xc_dom_arch *xc_dom_find_arch_hooks(xc_dom_find_arch_hooks550,16274
void xc_dom_release(568,16841
struct xc_dom_image *xc_dom_allocate(xc_dom_allocate577,17023
int xc_dom_kernel_file(611,17929
int xc_dom_ramdisk_file(620,18275
int xc_dom_kernel_mem(631,18651
int xc_dom_ramdisk_mem(639,18910
int xc_dom_parse_image(649,19213
int xc_dom_mem_init(687,20211
int xc_dom_update_guest_p2m(713,20950
int xc_dom_build_image(753,22148

tools/libxc/xc_core_ia64.h,283
#define XC_CORE_IA64_H22,893
#define ELF_ARCH_DATA 26,944
#define ELF_ARCH_MACHINE 27,988
struct xc_core_arch_context 29,1030
    size_t mapped_regs_size;30,1060
    int nr_vcpus;31,1089
    mapped_regs_t** mapped_regs;32,1107
    struct xen_ia64_p2m_table p2m_table;34,1141

tools/libxc/xc_memshr.c,274
int xc_memshr_control(28,1047
int xc_memshr_nominate_gfn(45,1518
int xc_memshr_nominate_gref(67,2142
int xc_memshr_share(89,2777
int xc_memshr_domain_resume(107,3314
int xc_memshr_debug_gfn(122,3735
int xc_memshr_debug_mfn(139,4223
int xc_memshr_debug_gref(156,4711

tools/libxc/xc_netbsd.c,1104
static xc_osdep_handle netbsd_privcmd_open(27,978
static int netbsd_privcmd_close(63,1945
static int netbsd_privcmd_hypercall(69,2063
static void *netbsd_privcmd_map_foreign_batch(netbsd_privcmd_map_foreign_batch80,2344
static void *netbsd_privcmd_map_foreign_range(netbsd_privcmd_map_foreign_range109,3202
static void *netbsd_privcmd_map_foreign_ranges(netbsd_privcmd_map_foreign_ranges141,4182
static struct xc_osdep_ops netbsd_privcmd_ops 179,5134
#define EVTCHN_DEV_NAME 193,5585
static xc_osdep_handle netbsd_evtchn_open(195,5625
static int netbsd_evtchn_close(204,5832
static int netbsd_evtchn_fd(210,5946
static int netbsd_evtchn_notify(215,6033
netbsd_evtchn_bind_unbound_port(226,6293
netbsd_evtchn_bind_interdomain(242,6641
static int netbsd_evtchn_unbind(259,7049
netbsd_evtchn_bind_virq(270,7309
netbsd_evtchn_pending(286,7625
static int netbsd_evtchn_unmask(297,7831
static struct xc_osdep_ops netbsd_evtchn_ops 303,8001
void discard_file_cache(320,8585
static struct xc_osdep_ops *netbsd_osdep_init(netbsd_osdep_init354,9365
xc_osdep_info_t xc_osdep_info 370,9763

tools/libxc/xc_efi.h,2834
#define XC_EFI_H27,1091
        uint8_t b[b32,1193
} efi_guid_t;33,1216
#define EFI_GUID(35,1231
	uint64_t signature;46,1549
	uint32_t revision;47,1570
	uint32_t headersize;48,1590
	uint32_t crc32;49,1612
	uint32_t reserved;50,1629
} efi_table_hdr_t;51,1649
#define EFI_RESERVED_TYPE 58,1723
#define EFI_LOADER_CODE 59,1766
#define EFI_LOADER_DATA 60,1809
#define EFI_BOOT_SERVICES_CODE 61,1852
#define EFI_BOOT_SERVICES_DATA 62,1895
#define EFI_RUNTIME_SERVICES_CODE 63,1938
#define EFI_RUNTIME_SERVICES_DATA 64,1981
#define EFI_CONVENTIONAL_MEMORY 65,2024
#define EFI_UNUSABLE_MEMORY 66,2067
#define EFI_ACPI_RECLAIM_MEMORY 67,2110
#define EFI_ACPI_MEMORY_NVS 68,2153
#define EFI_MEMORY_MAPPED_IO 69,2196
#define EFI_MEMORY_MAPPED_IO_PORT_SPACE 70,2239
#define EFI_PAL_CODE 71,2282
#define EFI_MAX_MEMORY_TYPE 72,2325
#define EFI_MEMORY_UC 75,2393
#define EFI_MEMORY_WC 76,2477
#define EFI_MEMORY_WT 77,2569
#define EFI_MEMORY_WB 78,2658
#define EFI_MEMORY_WP 79,2744
#define EFI_MEMORY_RP 80,2833
#define EFI_MEMORY_XP 81,2921
#define EFI_MEMORY_RUNTIME 82,3012
#define EFI_MEMORY_DESCRIPTOR_VERSION 83,3118
#define EFI_PAGE_SHIFT 85,3161
        uint32_t type;93,3390
        uint32_t pad;94,3413
        uint64_t phys_addr;95,3435
        uint64_t virt_addr;96,3463
        uint64_t num_pages;97,3491
        uint64_t attribute;98,3519
        uint64_t pad1;100,3570
} efi_memory_desc_t;102,3600
#define EFI_RUNTIME_SERVICES_SIGNATURE	107,3659
#define EFI_RUNTIME_SERVICES_REVISION	108,3731
	efi_table_hdr_t hdr;111,3798
	unsigned long get_time;112,3820
	unsigned long set_time;113,3845
	unsigned long get_wakeup_time;114,3870
	unsigned long set_wakeup_time;115,3902
	unsigned long set_virtual_address_map;116,3934
	unsigned long convert_pointer;117,3974
	unsigned long get_variable;118,4006
	unsigned long get_next_variable;119,4035
	unsigned long set_variable;120,4069
	unsigned long get_next_high_mono_count;121,4098
	unsigned long reset_system;122,4139
} efi_runtime_services_t;123,4168
#define NULL_GUID 128,4251
#define ACPI_20_TABLE_GUID 130,4363
#define SAL_SYSTEM_TABLE_GUID 132,4486
	efi_guid_t guid;136,4630
	unsigned long table;137,4648
} efi_config_table_t;138,4670
#define EFI_SYSTEM_TABLE_SIGNATURE 140,4693
#define EFI_SYSTEM_TABLE_REVISION 141,4762
	efi_table_hdr_t hdr;144,4832
	unsigned long fw_vendor;145,4854
	uint32_t fw_revision;146,4924
	unsigned long con_in_handle;147,4947
	unsigned long con_in;148,4977
	unsigned long con_out_handle;149,5000
	unsigned long con_out;150,5031
	unsigned long stderr_handle;151,5055
	unsigned long stderr;152,5085
	efi_runtime_services_t *runtime;runtime153,5108
	unsigned long boottime;154,5142
	unsigned long nr_tables;155,5167
	unsigned long tables;156,5193
} efi_system_table_t;157,5216

tools/libxc/xc_cpupool.c,342
static int do_sysctl_save(26,945
int xc_cpupool_create(37,1148
int xc_cpupool_destroy(56,1691
xc_cpupoolinfo_t *xc_cpupool_getinfo(xc_cpupool_getinfo67,1985
void xc_cpupool_infofree(120,3353
int xc_cpupool_addcpu(127,3491
int xc_cpupool_removecpu(140,3889
int xc_cpupool_movedomain(153,4295
xc_cpumap_t xc_cpupool_freeinfo(166,4679

tools/libxc/xc_mem_paging.c,135
int xc_mem_paging_nominate(27,1011
int xc_mem_paging_evict(35,1335
int xc_mem_paging_prep(43,1653
int xc_mem_paging_resume(51,1969

tools/libxc/xc_tmem.c,369
static int do_tmem_op(24,881
int xc_tmem_control(49,1567
int xc_tmem_control_oid(99,2802
static int xc_tmem_uuid_parse(149,4099
int xc_tmem_auth(181,4947
int xc_tmem_save(218,6235
int xc_tmem_save_extra(334,10659
void xc_tmem_save_done(364,11734
static int xc_tmem_restore_new_pool(371,11872
int xc_tmem_restore(391,12373
int xc_tmem_restore_extra(494,16151

tools/libxc/xc_dom_compat_linux.c,168
static int xc_linux_build_internal(38,1184
int xc_linux_build_mem(73,2353
int xc_linux_build(107,3558
int xc_get_bit_size(139,4641
int xc_dom_linux_build(163,5363

tools/libxc/xc_domain_restore.c,2489
struct restore_ctx 36,1141
    unsigned long max_mfn;37,1162
    unsigned long hvirt_start;38,1231
    unsigned int pt_levels;39,1311
    unsigned long nr_pfns;40,1394
    xen_pfn_t *live_p2m;live_p2m41,1501
    xen_pfn_t *p2m;p2m42,1595
    xen_pfn_t *p2m_batch;p2m_batch43,1662
    int completed;44,1742
    int last_checkpoint;45,1808
    struct domain_info_context dinfo;46,1910
#define HEARTBEAT_MS 49,1952
static ssize_t rdexact(52,1998
#define RDEXACT(96,3261
#define RDEXACT 98,3329
static int uncanonicalize_pagetable(107,3679
static xen_pfn_t *load_p2m_frame_list(load_p2m_frame_list190,6154
    int ishvm;321,10482
        struct tailbuf_pv 323,10509
            unsigned int pfncount;324,10537
            unsigned long* pfntab;325,10572
            unsigned int vcpucount;326,10607
            unsigned char* vcpubuf;327,10643
            unsigned char shared_info_page[shared_info_page328,10679
        } pv;329,10734
        struct tailbuf_hvm 330,10748
            uint64_t magicpfns[magicpfns331,10777
            uint32_t hvmbufsize,332,10812
            uint32_t hvmbufsize, reclen;332,10812
            uint8_t* hvmbuf;333,10853
                uint32_t magic;335,10903
                uint32_t version;336,10935
                uint64_t len;337,10969
            } qemuhdr;338,10999
            uint32_t qemubufsize;339,11022
            uint8_t* qemubuf;340,11056
        } hvm;341,11086
    } u;342,11101
} tailbuf_t;343,11110
static int compat_buffer_qemu(346,11180
static int buffer_qemu(395,12399
static int dump_qemu(433,13366
static int buffer_tail_hvm(457,13901
static int buffer_tail_pv(525,16152
static int buffer_tail(609,18770
static void tailbuf_free_hvm(624,19459
static void tailbuf_free_pv(636,19693
static void tailbuf_free(648,19925
    void* pages;657,20095
    unsigned int nr_physpages,659,20187
    unsigned int nr_physpages, nr_pages;659,20187
    unsigned long* pfn_types;662,20279
    int verify;664,20310
    int new_ctxt_format;666,20327
    int max_vcpu_id;667,20352
    uint64_t vcpumap;668,20373
    uint64_t identpt;669,20395
    uint64_t vm86_tss;670,20417
    uint64_t console_pfn;671,20440
    uint64_t acpi_ioport_location;672,20466
} pagebuf_t;673,20501
static int pagebuf_init(675,20515
static void pagebuf_free(681,20608
static int pagebuf_get_one(693,20827
static int pagebuf_get(865,26780
static int apply_batch(882,27115
int xc_domain_restore(1080,33742

tools/libxc/xenctrl.h,6806
#define XENCTRL_H27,1019
#define __XEN_TOOLS__ 31,1127
#define XC_PAGE_SHIFT 61,1771
#define XC_PAGE_SHIFT 63,1812
#define XC_PAGE_SIZE 65,1854
#define XC_PAGE_MASK 66,1909
#define INVALID_MFN 68,1962
#define xen_mb(75,2054
#define xen_rmb(76,2129
#define xen_wmb(77,2204
#define xen_mb(79,2282
#define xen_rmb(80,2340
#define xen_wmb(81,2398
#define xen_mb(83,2474
#define xen_rmb(84,2526
#define xen_wmb(85,2578
typedef struct xc_interface_core xc_interface;107,3201
typedef struct xc_interface_core xc_evtchn;108,3248
typedef struct xc_interface_core xc_gnttab;109,3292
typedef enum xc_error_code xc_error_code;110,3336
enum xc_open_flags 145,4549
    XC_OPENFLAG_DUMMY 146,4570
    XC_OPENFLAG_NON_REENTRANT 147,4648
struct xc_hypercall_buffer 196,6441
    void *hbuf;hbuf198,6510
    struct xc_hypercall_buffer *param_shadow;param_shadow204,6633
    int dir;209,6742
    void *ubuf;ubuf212,6785
    size_t sz;213,6801
typedef struct xc_hypercall_buffer xc_hypercall_buffer_t;215,6819
#define XC__HYPERCALL_BUFFER_NAME(221,6978
#define HYPERCALL_BUFFER(226,7116
#define HYPERCALL_BUFFER_INIT_NO_BOUNCE 233,7600
#define DECLARE_HYPERCALL_BUFFER(241,7886
#define DECLARE_HYPERCALL_BUFFER_ARGUMENT(253,8427
#define HYPERCALL_BUFFER_AS_ARG(264,8871
#undef set_xen_guest_handle275,9425
#define set_xen_guest_handle(276,9453
#define xc_hypercall_buffer_alloc(291,10263
#define xc_hypercall_buffer_free(293,10459
#define xc_hypercall_buffer_alloc_pages(299,10729
#define xc_hypercall_buffer_free_pages(301,10953
typedef uint8_t *xc_cpumap_t;xc_cpumap_t306,11105
typedef struct xc_core_header 321,11427
    unsigned int xch_magic;322,11459
    unsigned int xch_nr_vcpus;323,11487
    unsigned int xch_nr_pages;324,11518
    unsigned int xch_ctxt_offset;325,11549
    unsigned int xch_index_offset;326,11583
    unsigned int xch_pages_offset;327,11618
} xc_core_header_t;328,11653
#define XC_CORE_MAGIC 330,11674
#define XC_CORE_MAGIC_HVM 331,11711
typedef struct xc_dominfo 337,11788
    uint32_t      domid;338,11816
    uint32_t      ssidref;339,11841
    unsigned int  dying:dying340,11868
    unsigned int  dying:1, crashed:crashed340,11868
    unsigned int  dying:1, crashed:1, shutdown:shutdown340,11868
                  paused:paused341,11918
                  paused:1, blocked:blocked341,11918
                  paused:1, blocked:1, running:running341,11918
                  hvm:hvm342,11968
                  hvm:1, debugged:debugged342,11968
    unsigned int  shutdown_reason;343,12005
    unsigned long nr_pages;344,12077
    unsigned long nr_shared_pages;345,12139
    unsigned long shared_info_frame;346,12174
    uint64_t      cpu_time;347,12211
    unsigned long max_memkb;348,12239
    unsigned int  nr_online_vcpus;349,12268
    unsigned int  max_vcpu_id;350,12303
    xen_domain_handle_t handle;351,12334
    unsigned int  cpupool;352,12366
} xc_dominfo_t;353,12393
typedef xen_domctl_getdomaininfo_t xc_domaininfo_t;355,12410
    vcpu_guest_context_x86_64_t x64;360,12525
    vcpu_guest_context_x86_32_t x32;361,12562
    vcpu_guest_context_t c;363,12609
} vcpu_guest_context_any_t;364,12637
    shared_info_x86_64_t x64;369,12727
    shared_info_x86_32_t x32;370,12757
    shared_info_t s;372,12794
} shared_info_any_t;373,12815
    start_info_x86_64_t x64;378,12898
    start_info_x86_32_t x32;379,12927
    start_info_t s;381,12963
} start_info_any_t;382,12983
typedef int (dumpcore_rtn_t)407,13855
typedef xen_domctl_getvcpuinfo_t xc_vcpuinfo_t;617,21891
typedef xen_domctl_shadow_op_stats_t xc_shadow_op_stats_t;630,22353
typedef struct xc_cpupoolinfo 708,25029
    uint32_t cpupool_id;709,25061
    uint32_t sched_id;710,25086
    uint32_t n_dom;711,25109
    xc_cpumap_t cpumap;712,25129
} xc_cpupoolinfo_t;713,25153
typedef int evtchn_port_or_error_t;807,27937
typedef struct evtchn_status xc_evtchn_status_t;831,28855
typedef xen_sysctl_physinfo_t xc_physinfo_t;914,31486
typedef xen_sysctl_topologyinfo_t xc_topologyinfo_t;915,31531
typedef xen_sysctl_numainfo_t xc_numainfo_t;916,31584
typedef uint32_t xc_cpu_to_node_t;918,31630
typedef uint32_t xc_cpu_to_socket_t;919,31665
typedef uint32_t xc_cpu_to_core_t;920,31702
typedef uint64_t xc_node_to_memsize_t;921,31737
typedef uint64_t xc_node_to_memfree_t;922,31776
typedef uint32_t xc_node_to_node_dist_t;923,31815
typedef xen_sysctl_cpuinfo_t xc_cpuinfo_t;936,32253
typedef xen_sysctl_perfc_desc_t xc_perfc_desc_t;1064,37940
typedef xen_sysctl_perfc_val_t xc_perfc_val_t;1065,37989
typedef xen_sysctl_lockprof_data_t xc_lockprof_data_t;1074,38337
enum xc_error_code 1407,50003
  XC_ERROR_NONE 1408,50024
  XC_INTERNAL_ERROR 1409,50045
  XC_INVALID_KERNEL 1410,50070
  XC_INVALID_PARAM 1411,50095
  XC_OUT_OF_MEMORY 1412,50119
#define XC_MAX_ERROR_MSG_LEN 1416,50212
typedef struct xc_error 1417,50246
  enum xc_error_code code;1418,50272
  char message[message1419,50299
} xc_error;1420,50337
struct xc_px_val 1575,55629
    uint64_t freq;1576,55648
    uint64_t residency;1577,55698
    uint64_t count;1578,55748
struct xc_px_stat 1581,55804
    uint8_t total;1582,55824
    uint8_t usable;1583,55872
    uint8_t last;1584,55921
    uint8_t cur;1585,55967
    uint64_t *trans_pt;trans_pt1586,56016
    struct xc_px_val *pt;pt1587,56068
struct xc_cx_stat 1594,56295
    uint32_t nr;1595,56315
    uint32_t last;1596,56390
    uint64_t idle_time;1597,56437
    uint64_t *triggers;triggers1598,56490
    uint64_t *residencies;residencies1599,56541
    uint64_t pc3;1600,56589
    uint64_t pc6;1601,56607
    uint64_t pc7;1602,56625
    uint64_t cc3;1603,56643
    uint64_t cc6;1604,56661
typedef struct xc_cx_stat xc_cx_stat_t;1606,56682
typedef xen_userspace_t xc_userspace_t;1619,57113
typedef xen_ondemand_t xc_ondemand_t;1620,57153
struct xc_get_cpufreq_para 1622,57192
    uint32_t cpu_num;1624,57247
    uint32_t freq_num;1625,57269
    uint32_t gov_num;1626,57292
    uint32_t *affected_cpus;affected_cpus1630,57366
    uint32_t *scaling_available_frequencies;scaling_available_frequencies1631,57395
    char     *scaling_available_governors;scaling_available_governors1632,57440
    char scaling_driver[scaling_driver1633,57483
    uint32_t cpuinfo_cur_freq;1635,57527
    uint32_t cpuinfo_max_freq;1636,57558
    uint32_t cpuinfo_min_freq;1637,57589
    uint32_t scaling_cur_freq;1638,57620
    char scaling_governor[scaling_governor1640,57652
    uint32_t scaling_max_freq;1641,57697
    uint32_t scaling_min_freq;1642,57728
        xc_userspace_t userspace;1646,57804
        xc_ondemand_t ondemand;1647,57838
    } u;1648,57870
    int32_t turbo_enabled;1650,57880
struct tmem_oid 1673,58746
    uint64_t oid[oid1674,58764

tools/libxc/xc_mem_event.c,100
int xc_mem_event_control(26,993
int xc_mem_event_enable(45,1582
int xc_mem_event_disable(53,1894

tools/libxc/xg_save_restore.h,938
#define XC_SAVE_ID_ENABLE_VERIFY_MODE 127,4589
#define XC_SAVE_ID_VCPU_INFO 128,4664
#define XC_SAVE_ID_HVM_IDENT_PT 129,4732
#define XC_SAVE_ID_HVM_VM86_TSS 130,4790
#define XC_SAVE_ID_TMEM 131,4848
#define XC_SAVE_ID_TMEM_EXTRA 132,4889
#define XC_SAVE_ID_TSC_INFO 133,4930
#define XC_SAVE_ID_HVM_CONSOLE_PFN 134,4971
#define XC_SAVE_ID_LAST_CHECKPOINT 135,5029
#define XC_SAVE_ID_HVM_ACPI_IOPORTS_LOCATION 136,5135
#define MAX_BATCH_SIZE 142,5327
#define MAX_PIN_BATCH 145,5473
static inline int get_platform_info(168,6178
#define PFN_TO_KB(224,8015
#define M2P_SHIFT 232,8295
#define M2P_CHUNK_SIZE 233,8342
#define M2P_SIZE(234,8383
#define M2P_CHUNKS(235,8454
#define is_mapped(238,8559
#define GET_FIELD(241,8620
#define SET_FIELD(243,8707
#define UNFOLD_CR3(250,8970
#define FOLD_CR3(255,9261
#define MEMCPY_FIELD(260,9552
#define MEMSET_ARRAY_FIELD(267,9910
#define MAX(275,10280
#define MIN(278,10348

tools/libxc/xc_core_x86.h,339
#define XC_CORE_X86_H22,892
#define ELF_ARCH_DATA 24,915
#define ELF_ARCH_MACHINE 25,959
struct xc_core_arch_context 27,1038
#define xc_core_arch_context_init(31,1090
#define xc_core_arch_context_free(32,1162
#define xc_core_arch_context_get(33,1234
#define xc_core_arch_context_dump(35,1366
xc_core_arch_context_get_shdr(41,1582

tools/libxc/xc_linux_osdep.c,1828
#define ERROR(41,1273
#define PERROR(42,1357
static xc_osdep_handle linux_privcmd_open(45,1506
static int linux_privcmd_close(83,2469
static int linux_privcmd_hypercall(89,2586
static int xc_map_foreign_batch_single(95,2775
static void *linux_privcmd_map_foreign_batch(linux_privcmd_map_foreign_batch117,3253
static void *linux_privcmd_map_foreign_bulk(linux_privcmd_map_foreign_bulk170,4685
static void *linux_privcmd_map_foreign_range(linux_privcmd_map_foreign_range297,8111
static void *linux_privcmd_map_foreign_ranges(linux_privcmd_map_foreign_ranges317,8647
static struct xc_osdep_ops linux_privcmd_ops 342,9430
#define DEVXEN 356,9878
static xc_osdep_handle linux_evtchn_open(358,9906
static int linux_evtchn_close(367,10101
static int linux_evtchn_fd(373,10214
static int linux_evtchn_notify(378,10300
linux_evtchn_bind_unbound_port(389,10559
linux_evtchn_bind_interdomain(400,10835
linux_evtchn_bind_virq(413,11201
static int linux_evtchn_unbind(423,11421
static evtchn_port_or_error_t linux_evtchn_pending(433,11650
static int linux_evtchn_unmask(444,11881
static struct xc_osdep_ops linux_evtchn_ops 453,12085
static xc_osdep_handle linux_gnttab_open(469,12591
static int linux_gnttab_close(479,12787
static void *linux_gnttab_map_grant_ref(linux_gnttab_map_grant_ref485,12900
static void *do_gnttab_map_grant_refs(do_gnttab_map_grant_refs525,14035
static void *linux_gnttab_map_grant_refs(linux_gnttab_map_grant_refs575,15462
static void *linux_gnttab_map_domain_grant_refs(linux_gnttab_map_domain_grant_refs582,15760
static int linux_gnttab_munmap(589,16077
static int linux_gnttab_set_max_grants(630,17197
static struct xc_osdep_ops linux_gnttab_ops 643,17502
static struct xc_osdep_ops *linux_osdep_init(linux_osdep_init656,17922
xc_osdep_info_t xc_osdep_info 671,18264

tools/libxc/xc_dom.h,3952
#define INVALID_P2M_ENTRY 19,735
typedef uint64_t xen_vaddr_t;23,853
typedef uint64_t xen_paddr_t;24,883
#define PRIpfn 26,914
struct xc_dom_seg 28,942
    xen_vaddr_t vstart;29,962
    xen_vaddr_t vend;30,986
    xen_pfn_t pfn;31,1008
struct xc_dom_mem 34,1031
    struct xc_dom_mem *next;next35,1051
    void *mmap_ptr;mmap_ptr36,1080
    size_t mmap_len;37,1100
    unsigned char memory[memory38,1121
struct xc_dom_phys 41,1154
    struct xc_dom_phys *next;next42,1175
    void *ptr;ptr43,1205
    xen_pfn_t first;44,1220
    xen_pfn_t count;45,1241
struct xc_dom_image 48,1266
    void *kernel_blob;kernel_blob50,1304
    size_t kernel_size;51,1327
    void *ramdisk_blob;ramdisk_blob52,1351
    size_t ramdisk_size;53,1375
    char *cmdline;cmdline56,1436
    uint32_t f_requested[f_requested57,1455
    struct elf_dom_parms parms;60,1541
    char *guest_type;guest_type61,1573
    struct xc_dom_seg kernel_seg;64,1620
    struct xc_dom_seg ramdisk_seg;65,1654
    struct xc_dom_seg p2m_seg;66,1689
    struct xc_dom_seg pgtables_seg;67,1720
    struct xc_dom_seg devicetree_seg;68,1756
    xen_pfn_t start_info_pfn;69,1794
    xen_pfn_t console_pfn;70,1824
    xen_pfn_t xenstore_pfn;71,1851
    xen_pfn_t shared_info_pfn;72,1879
    xen_pfn_t bootstack_pfn;73,1910
    xen_vaddr_t virt_alloc_end;74,1939
    xen_vaddr_t bsd_symtab_start;75,1971
    unsigned int pgtables;78,2036
    unsigned int pg_l4;79,2063
    unsigned int pg_l3;80,2087
    unsigned int pg_l2;81,2111
    unsigned int pg_l1;82,2135
    unsigned int alloc_bootstack;83,2159
    unsigned int extra_pages;84,2193
    xen_vaddr_t virt_pgtab_end;85,2223
    uint32_t f_active[f_active88,2283
    xen_pfn_t *p2m_host;p2m_host89,2326
    void *p2m_guest;p2m_guest90,2351
    xen_pfn_t total_pages;93,2399
    struct xc_dom_phys *phys_pages;phys_pages94,2426
    int realmodearea_log;95,2462
    struct xc_dom_mem *memblocks;memblocks98,2518
    size_t alloc_malloc;101,2586
    size_t alloc_mem_map;102,2611
    size_t alloc_file_map;103,2637
    size_t alloc_domU_map;104,2664
    unsigned long flags;107,2731
    unsigned int console_evtchn;108,2756
    unsigned int xenstore_evtchn;109,2789
    xen_pfn_t shared_info_mfn;110,2823
    xc_interface *xch;xch112,2855
    domid_t guest_domid;113,2878
    int8_t vhpt_size_log2;114,2903
    int8_t superpages;115,2945
    int shadow_enabled;116,2968
    int xen_version;118,2993
    xen_capabilities_info_t xen_caps;119,3014
    struct xc_dom_loader *kernel_loader;kernel_loader122,3089
    void *private_loader;private_loader123,3130
    struct xc_dom_arch *arch_hooks;arch_hooks126,3181
    int (*allocate)allocate128,3257
struct xc_dom_loader 133,3402
    char *name;name134,3425
    int (*probe)probe135,3441
    int (*parser)parser136,3487
    int (*loader)loader137,3534
    struct xc_dom_loader *next;next139,3582
#define __init 142,3618
struct xc_dom_arch 147,3796
    int (*alloc_magic_pages)alloc_magic_pages149,3843
    int (*count_pgtables)count_pgtables150,3901
    int (*setup_pgtables)setup_pgtables151,3956
    int (*start_info)start_info154,4055
    int (*shared_info)shared_info155,4106
    int (*vcpu)vcpu156,4177
    char *guest_type;guest_type158,4240
    char *native_protocol;native_protocol159,4262
    int page_shift;160,4289
    int sizeof_pfn;161,4309
    struct xc_dom_arch *next;next163,4330
#define XC_DOM_PAGE_SHIFT(167,4424
#define XC_DOM_PAGE_SIZE(168,4488
void xc_dom_printf(208,6300
void xc_dom_panic_func(210,6405
#define xc_dom_panic(215,6605
#define xc_dom_trace(217,6718
static inline void *xc_dom_seg_to_ptr(xc_dom_seg_to_ptr244,7871
static inline void *xc_dom_vaddr_to_ptr(xc_dom_vaddr_to_ptr254,8219
static inline int xc_dom_feature_translated(264,8627
static inline xen_pfn_t xc_dom_p2m_host(269,8782
static inline xen_pfn_t xc_dom_p2m_guest(276,8948

tools/libxc/xc_physdev.c,147
int xc_physdev_pci_access_modify(26,1016
int xc_physdev_map_pirq(37,1329
int xc_physdev_map_pirq_msi(62,1853
int xc_physdev_unmap_pirq(95,2664

tools/libxc/xc_foreign_memory.c,353
void *xc_map_foreign_pages(xc_map_foreign_pages23,884
void *xc_map_foreign_range(xc_map_foreign_range54,1527
void *xc_map_foreign_ranges(xc_map_foreign_ranges61,1801
void *xc_map_foreign_batch(xc_map_foreign_batch69,2180
void *xc_map_foreign_bulk(xc_map_foreign_bulk76,2449
void *xc_map_foreign_bulk_compat(xc_map_foreign_bulk_compat84,2786

tools/libxc/xc_pm.c,593
int xc_pm_get_max_px(29,1020
int xc_pm_get_pxstat(45,1388
int xc_pm_reset_pxstat(98,3012
int xc_pm_get_max_cx(109,3259
int xc_pm_get_cxstat(124,3626
int xc_pm_reset_cxstat(172,5317
int xc_get_cpufreq_para(188,5625
int xc_set_cpufreq_gov(281,9160
int xc_set_cpufreq_para(298,9643
int xc_get_cpufreq_avgfreq(315,10080
int xc_set_sched_opt_smt(336,10570
int xc_set_vcpu_migration_delay(350,10884
int xc_get_vcpu_migration_delay(364,11219
int xc_get_cpuidle_max_cstate(380,11582
int xc_set_cpuidle_max_cstate(398,12000
int xc_enable_turbo(413,12340
int xc_disable_turbo(426,12621

tools/libxc/xc_core.c,1018
#define DUMP_INCREMENT 75,3670
struct xc_core_strtab 78,3724
    char       *strings;strings79,3748
    uint16_t    length;80,3773
    uint16_t    max;81,3797
xc_core_strtab_init(85,3852
xc_core_strtab_free(111,4389
xc_core_strtab_get(118,4506
struct xc_core_section_headers 159,5429
    uint16_t    num;160,5462
    uint16_t    num_max;161,5483
    Elf64_Shdr  *shdrs;shdrs163,5509
#define SHDR_INIT 165,5536
#define SHDR_INC 166,5575
xc_core_shdr_init(169,5653
xc_core_shdr_free(188,6094
xc_core_shdr_get(195,6218
xc_core_shdr_set(223,6918
xc_core_ehdr_init(244,7510
elfnote_fill_xen_version(273,8433
elfnote_fill_format_version(319,9637
elfnote_init(326,9842
elfnote_dump_none(335,10104
elfnote_dump_core_header(354,10667
elfnote_dump_xen_version(379,11446
elfnote_dump_format_version(405,12329
get_guest_width(425,12992
xc_domain_dumpcore_via_callback(443,13378
struct dump_args 944,28586
    int     fd;945,28605
static int local_file_dump(949,28682
xc_domain_dumpcore(971,29220

tools/libxc/xc_e820.h,238
#define __XC_E820_H__18,725
#define E820_RAM 25,828
#define E820_RESERVED 26,856
#define E820_ACPI 27,884
#define E820_NVS 28,912
struct e820entry 30,941
    uint64_t addr;31,960
    uint64_t size;32,979
    uint32_t type;33,998

tools/libxc/xc_cpuid_x86.c,734
#define bitmaskof(28,982
#define clear_bit(29,1031
#define set_bit(30,1092
#define DEF_MAX_BASE 32,1153
#define DEF_MAX_EXT 33,1186
static int hypervisor_is_64bit(35,1220
static void cpuid(42,1439
static void xc_cpuid_brand_get(65,2054
static void amd_xc_cpuid_policy(78,2325
static void intel_xc_cpuid_policy(127,4066
#define XSAVEOPT 167,5257
static void xc_cpuid_config_xsave(169,5363
static void xc_cpuid_hvm_policy(219,7000
static void xc_cpuid_pv_policy(348,11318
static int xc_cpuid_policy(441,14444
static int xc_cpuid_do_domctl(458,14829
static char *alloc_str(alloc_str477,15341
void xc_cpuid_to_str(484,15437
int xc_cpuid_apply_policy(496,15696
int xc_cpuid_check(559,17396
int xc_cpuid_set(619,18966

tools/libxc/xtl_core.c,221
static const char *level_strings[level_strings30,981
const char *xtl_level_to_string(xtl_level_to_string37,1240
void xtl_logv(42,1384
void xtl_log(54,1839
void xtl_progress(66,2222
void xtl_logger_destroy(80,2636

tools/libxc/xc_domain_save.c,2367
#define DEF_MAX_ITERS 44,1357
#define DEF_MAX_FACTOR 45,1426
struct save_ctx 47,1496
    unsigned long hvirt_start;48,1514
    unsigned int pt_levels;49,1594
    unsigned long max_mfn;50,1677
    xen_pfn_t *live_p2m;live_p2m51,1739
    xen_pfn_t *live_m2p;live_m2p52,1833
    unsigned long m2p_mfn0;53,1905
    struct domain_info_context dinfo;54,1933
struct outbuf 58,1999
    void* buf;59,2015
    size_t size;60,2030
    size_t pos;61,2047
#define OUTBUF_SIZE 64,2067
#define mfn_to_pfn(68,2139
#define pfn_to_mfn(70,2190
#define MFN_IS_IN_PSEUDOPHYS_MAP(80,2670
#define BITS_PER_LONG 90,3007
#define BITS_TO_LONGS(91,3057
#define BITMAP_SIZE 92,3126
#define BITMAP_ENTRY(94,3206
#define BITMAP_SHIFT(97,3301
#define ORDER_LONG 99,3352
static inline int test_bit 101,3409
static inline void clear_bit 106,3533
static inline void set_bit 111,3656
static inline unsigned int hweight32(117,3856
static inline int count_bits 126,4215
static uint64_t tv_to_us(136,4543
static uint64_t llgettimeofday(141,4645
static uint64_t tv_delta(148,4768
static int noncached_write(154,4936
static int outbuf_init(173,5466
static inline int outbuf_write(187,5750
static int outbuf_flush(202,6135
static inline int outbuf_hardwrite(228,6712
static inline int write_buffer(245,7159
#define MAX_MBIT_RATE 262,7637
#define START_MBIT_RATE 263,7711
#define RATE_TO_BTU 266,7863
#define BURST_BUDGET 269,7956
static int mbit_rate,272,8055
static int mbit_rate, ombit_rate 272,8055
#define RATE_IS_MAX(275,8147
static inline void initialize_mbit_rate(277,8199
static int ratewrite(282,8279
#define RATE_IS_MAX(341,10077
#define ratewrite(342,10103
#define initialize_mbit_rate(343,10207
static inline int ratewrite_buffer(348,10324
static int print_stats(358,10668
static int analysis_phase(413,12443
static int suspend_and_state(445,13402
static void *map_frame_list_list(map_frame_list_list470,14121
static int canonicalize_pagetable(507,15316
xen_pfn_t *xc_map_m2p(xc_map_m2p621,19384
static xen_pfn_t *map_and_save_p2m_table(map_and_save_p2m_table681,20710
static int save_tsc_info(882,27809
int xc_domain_save(899,28398
#define wrexact(1173,36667
#undef ratewrite1175,36768
#define ratewrite(1177,36792
            int id;1564,50473
            int max_vcpu_id;1565,50493
            uint64_t vcpumap;1566,50522

tools/libxc/xc_domain.c,2550
int xc_domain_create(28,1007
int xc_domain_pause(50,1620
int xc_domain_unpause(60,1834
int xc_domain_destroy(70,2054
int xc_domain_shutdown(83,2356
int xc_vcpu_setaffinity(113,3101
int xc_vcpu_getaffinity(156,4094
int xc_domain_getinfo(197,5079
int xc_domain_getinfolist(258,7366
int xc_domain_hvm_getcontext(286,8217
int xc_domain_hvm_getcontext_partial(312,9000
int xc_domain_hvm_setcontext(341,9960
int xc_vcpu_getcontext(365,10601
int xc_watchdog(389,11263
int xc_shadow_control(419,11961
int xc_domain_setmaxmem(454,13036
int xc_domain_pin_memory_cacheattr(465,13345
int xc_domain_set_memmap_limit(482,13942
int xc_domain_set_memmap_limit(514,14764
int xc_domain_set_time_offset(524,15006
int xc_domain_disable_migrate(535,15370
int xc_domain_set_tsc_info(544,15619
int xc_domain_get_tsc_info(561,16242
int xc_domain_maximum_gpfn(592,17151
int xc_domain_increase_reservation(597,17291
int xc_domain_increase_reservation_exact(629,18386
int xc_domain_decrease_reservation(656,19243
int xc_domain_decrease_reservation_exact(692,20401
int xc_domain_add_to_physmap(717,21140
int xc_domain_populate_physmap(732,21590
int xc_domain_populate_physmap_exact(761,22629
int xc_domain_memory_exchange_pages(786,23408
static int xc_domain_pod_target(827,24905
int xc_domain_set_pod_target(866,25924
int xc_domain_get_pod_target(882,26547
int xc_domain_max_vcpus(897,27108
int xc_domain_sethandle(906,27358
int xc_vcpu_getinfo(917,27704
int xc_domain_ioport_permission(936,28128
int xc_availheap(953,28700
int xc_vcpu_setcontext(974,29169
int xc_domain_irq_permission(1004,29887
int xc_domain_iomem_permission(1019,30306
int xc_domain_send_trigger(1036,30863
int xc_set_hvm_param(1051,31252
int xc_get_hvm_param(1072,31852
int xc_domain_setdebugging(1093,32454
int xc_assign_device(1105,32765
int xc_get_device_group(1119,33043
int xc_test_assign_device(1154,33931
int xc_deassign_device(1168,34219
int xc_domain_update_msi_irq(1182,34502
int xc_domain_unbind_msi_irq(1210,35086
int xc_domain_bind_pt_irq(1237,35670
int xc_domain_unbind_pt_irq(1272,36493
int xc_domain_bind_pt_pci_irq(1302,37158
int xc_domain_bind_pt_isa_irq(1315,37452
int xc_domain_memory_mapping(1325,37691
int xc_domain_ioport_mapping(1345,38213
int xc_domain_set_target(1365,38735
int xc_domain_subscribe_for_suspend(1379,38996
int xc_domain_set_machine_address_size(1391,39252
int xc_domain_get_machine_address_size(1406,39652
int xc_domain_suppress_spurious_page_faults(1420,39978
int xc_domain_debug_control(1432,40248

tools/libxc/ia64/xc_ia64_stubs.c,694
#define __ASSEMBLY__25,1054
#undef __IA64_UL27,1096
#define __IA64_UL(28,1113
#undef __ASSEMBLY__29,1165
xc_ia64_fpsr_default(32,1200
xc_ia64_get_memmap(41,1399
xc_ia64_copy_memmap(67,2116
#define PTRS_PER_PTE 143,4317
xc_ia64_map_foreign_p2m(146,4381
xc_ia64_p2m_init(194,5863
xc_ia64_p2m_map(201,5979
xc_ia64_p2m_unmap(215,6458
#define _PAGE_P_BIT 228,6776
#define _PAGE_P 229,6810
#define _PAGE_PGC_ALLOCATED_BIT 230,6891
#define _PAGE_PGC_ALLOCATED 231,6952
#define _PAGE_IO_BIT 232,7017
#define _PAGE_IO 233,7052
#define IA64_MAX_PHYS_BITS 235,7107
#define _PAGE_PPN_MASK 236,7204
xc_ia64_p2m_present(239,7280
xc_ia64_p2m_allocated(249,7556
xc_ia64_p2m_mfn(260,7893

tools/libxc/ia64/xc_dom_ia64_util.h,214
#define XC_IA64_DOM_IA64_UTIL_H18,735
#define efi_systable_init_dom0(32,1379
#define complete_dom0_memmap(33,1428
#define FW_MEM_BASE 39,1639
#define FW_MEM_SIZE 40,1672
typedef struct { } spinlock_t;44,1806

tools/libxc/ia64/xc_ia64_linux_save.c,460
#define DEF_MAX_ITERS 47,1531
#define DEF_MAX_FACTOR 48,1609
static inline int test_bit(54,1811
static inline void clear_bit(59,1934
static inline void set_bit(64,2056
suspend_and_state(70,2186
md_is_not_ram(89,2671
xc_ia64_send_unallocated_list(103,3110
xc_ia64_send_vcpu_context(172,5054
xc_ia64_send_shared_info(191,5616
xc_ia64_send_vcpumap(201,5863
xc_ia64_pv_send_context(248,7004
xc_ia64_hvm_send_context(297,8374
xc_domain_save(398,11129

tools/libxc/ia64/xc_ia64_hvm_build.c,4542
xc_ia64_copy_to_domain_pages(32,1008
#define HOB_SIGNATURE 47,1417
#define GFW_HOB_START 48,1487
#define GFW_HOB_SIZE 49,1555
    unsigned long signature;52,1635
    unsigned int  type;53,1664
    unsigned int  length;54,1688
} HOB_GENERIC_HEADER;55,1714
    HOB_GENERIC_HEADER  header;62,1867
    unsigned long       length;63,1899
    unsigned long       cur_pos;64,1959
    unsigned long       buf_size;65,2021
} HOB_INFO;66,2078
    unsigned long start;69,2107
    unsigned long size;70,2132
} hob_mem_t;71,2156
    HOB_TYPE_INFO=74,2185
    HOB_TYPE_TERMINAL,75,2206
    HOB_TYPE_MEM,76,2229
    HOB_TYPE_PAL_BUS_GET_FEATURES_DATA,77,2247
    HOB_TYPE_PAL_CACHE_SUMMARY,78,2287
    HOB_TYPE_PAL_MEM_ATTRIB,79,2319
    HOB_TYPE_PAL_CACHE_INFO,80,2348
    HOB_TYPE_PAL_CACHE_PROT_INFO,81,2377
    HOB_TYPE_PAL_DEBUG_INFO,82,2411
    HOB_TYPE_PAL_FIXED_ADDR,83,2440
    HOB_TYPE_PAL_FREQ_BASE,84,2469
    HOB_TYPE_PAL_FREQ_RATIOS,85,2497
    HOB_TYPE_PAL_HALT_INFO,86,2527
    HOB_TYPE_PAL_PERF_MON_INFO,87,2555
    HOB_TYPE_PAL_PROC_GET_FEATURES,88,2587
    HOB_TYPE_PAL_PTCE_INFO,89,2623
    HOB_TYPE_PAL_REGISTER_INFO,90,2651
    HOB_TYPE_PAL_RSE_INFO,91,2683
    HOB_TYPE_PAL_TEST_INFO,92,2710
    HOB_TYPE_PAL_VM_SUMMARY,93,2738
    HOB_TYPE_PAL_VM_INFO,94,2767
    HOB_TYPE_PAL_VM_PAGE_SIZE,95,2793
    HOB_TYPE_NR_VCPU,96,2824
    HOB_TYPE_NVRAM,97,2846
    HOB_TYPE_MAX98,2866
} hob_type_t;99,2883
xc_ia64_build_hob(113,3497
hob_init(142,4155
hob_add(177,5103
get_hob_size(210,6057
build_hob(222,6318
load_hob(259,7205
#define MIN(282,7777
add_mem_hob(284,7832
add_vcpus_hob(309,8515
add_nvram_hob(315,8651
static const unsigned char config_pal_bus_get_features_data[config_pal_bus_get_features_data320,8789
static const unsigned char config_pal_cache_summary[config_pal_cache_summary325,8945
static const unsigned char config_pal_mem_attrib[config_pal_mem_attrib329,9060
static const unsigned char config_pal_cache_info[config_pal_cache_info333,9149
static const unsigned char config_pal_cache_prot_info[config_pal_cache_prot_info346,9754
static const unsigned char config_pal_debug_info[config_pal_debug_info362,10527
static const unsigned char config_pal_fixed_addr[config_pal_fixed_addr366,10639
static const unsigned char config_pal_freq_base[config_pal_freq_base370,10726
static const unsigned char config_pal_freq_ratios[config_pal_freq_ratios374,10819
static const unsigned char config_pal_halt_info[config_pal_halt_info379,10962
static const unsigned char config_pal_perf_mon_info[config_pal_perf_mon_info386,11230
static const unsigned char config_pal_proc_get_features[config_pal_proc_get_features398,11765
static const unsigned char config_pal_ptce_info[config_pal_ptce_info408,12185
static const unsigned char config_pal_register_info[config_pal_register_info413,12324
static const unsigned char config_pal_rse_info[config_pal_rse_info420,12656
static const unsigned char config_pal_test_info[config_pal_test_info424,12767
static const unsigned char config_pal_vm_summary[config_pal_vm_summary430,12982
static const unsigned char config_pal_vm_info[config_pal_vm_info434,13100
static const unsigned char config_pal_vm_page_size[config_pal_vm_page_size443,13520
    hob_type_t type;448,13658
    void* data;449,13679
    unsigned long size;450,13695
} hob_batch_t;451,13719
static const hob_batch_t hob_batch[hob_batch453,13735
add_pal_hob(533,15957
#define VALIDATE_NVRAM_FD(546,16298
#define IS_VALID_NVRAM_FD(547,16358
nvram_init(549,16439
copy_from_nvram_to_GFW(565,16781
static int is_valid_address(599,17649
copy_from_GFW_to_nvram(617,18105
int xc_ia64_save_to_nvram(706,20619
#define NVRAM_DIR 734,21440
#define NVRAM_FILE_PREFIX 735,21488
int xc_ia64_nvram_init(737,21524
#define GFW_PAGES 781,22733
#define VGA_START_PAGE 782,22776
#define VGA_END_PAGE 783,22828
xc_ia64_setup_md(786,22907
min(798,23233
xc_ia64_setup_memmap_info(804,23325
xc_ia64_setup_shared_info(881,26412
setup_guest(911,27661
    const struct hvm_special_page 925,28166
        int             param;926,28202
        xen_pfn_t       pfn;927,28233
xc_hvm_build(1075,33255
int xc_hvm_build_target_mem(1118,34617
#define _PAGE_P_BIT 1131,34970
#define _PAGE_A_BIT 1132,34996
#define _PAGE_D_BIT 1133,35022
#define _PAGE_P 1135,35049
#define _PAGE_A 1136,35120
#define _PAGE_D 1137,35192
#define _PAGE_MA_WB 1139,35262
#define _PAGE_MA_UC 1140,35336
#define _PAGE_AR_RW 1141,35411
xc_ia64_set_os_type(1144,35475

tools/libxc/ia64/dom_fw_acpi.c,29
u8 acpi_tb_checksum(35,1293

tools/libxc/ia64/sal.h,1405
#define XC_IA64_SAL_H21,788
struct ia64_sal_systab 29,1017
	uint8_t signature[signature30,1042
	uint32_t size;31,1088
	uint8_t sal_rev_minor;32,1139
	uint8_t sal_rev_major;33,1163
	uint16_t entry_count;34,1187
	uint8_t checksum;35,1249
	uint8_t reserved1[reserved136,1268
	uint8_t sal_a_rev_minor;37,1291
	uint8_t sal_a_rev_major;38,1317
	uint8_t sal_b_rev_minor;39,1343
	uint8_t sal_b_rev_major;40,1369
	uint8_t oem_id[oem_id42,1486
	uint8_t product_id[product_id43,1507
	uint8_t reserved2[reserved244,1556
enum sal_systab_entry_type 47,1583
	SAL_DESC_ENTRY_POINT 48,1612
	SAL_DESC_MEMORY 49,1639
	SAL_DESC_PLATFORM_FEATURE 50,1661
	SAL_DESC_TR 51,1693
	SAL_DESC_PTC 52,1711
	SAL_DESC_AP_WAKEUP 53,1730
typedef struct ia64_sal_desc_entry_point 56,1758
	uint8_t type;57,1801
	uint8_t reserved1[reserved158,1816
	uint64_t pal_proc;59,1839
	uint64_t sal_proc;60,1859
	uint64_t gp;61,1879
	uint8_t reserved2[reserved262,1893
}ia64_sal_desc_entry_point_t;ia64_sal_desc_entry_point_t63,1917
#define IA64_SAL_AP_EXTERNAL_INT 65,1948
typedef struct ia64_sal_desc_ap_wakeup 67,1984
	uint8_t type;68,2025
	uint8_t mechanism;69,2040
	uint8_t reserved1[reserved170,2091
	uint64_t vector;71,2114
} ia64_sal_desc_ap_wakeup_t 72,2175
struct xen_sal_data 76,2310
    unsigned long boot_rdv_ip;78,2364
    unsigned long boot_rdv_r1;79,2395
    int efi_virt_mode;82,2496

tools/libxc/ia64/xc_dom_ia64_util.c,253
xen_ia64_version(29,1034
xen_ia64_fpswa_revision(35,1144
int xen_ia64_is_running_on_sim(58,1783
xen_ia64_is_dom0(69,2027
xen_ia64_dom_fw_map(76,2145
xen_ia64_dom_fw_unmap(91,2583
xen_ia64_is_vcpu_allocated(98,2779
xen_ia64_dom_fw_setup(117,3169

tools/libxc/ia64/xc_ia64_dom_fwloader.c,441
static const char fw_magic[fw_magic30,932
#define FW_LOAD 34,1139
#define FW_SIZE 35,1168
static int xc_dom_probe_fw_kernel(37,1203
static int xc_dom_parse_fw_kernel(46,1431
static int xc_dom_load_fw_kernel(57,1789
static int alloc_magic_pages(74,2223
static int vcpu_ia64(87,2566
static struct xc_dom_arch xc_dom_arch_ia64_fw 109,3078
static struct xc_dom_loader fw_loader 121,3473
static void __init register_fwloader(128,3658

tools/libxc/ia64/xc_ia64_save_restore.h,417
#define XC_IA64_SR_H24,1007
#define XC_IA64_SR_FORMAT_VER_ONE 27,1107
#define XC_IA64_SR_FORMAT_VER_TWO 29,1200
#define XC_IA64_SR_FORMAT_VER_THREE 31,1308
#define XC_IA64_SR_FORMAT_VER_MAX 32,1352
#define XC_IA64_SR_FORMAT_VER_CURRENT 34,1397
#define BITS_PER_LONG 40,1589
#define BITMAP_ENTRY(42,1640
#define BITMAP_SHIFT(45,1726
static inline int __test_bit(47,1777
static inline void __set_bit(52,1893

tools/libxc/ia64/xc_ia64.h,130
#define _XC_IA64_H_22,890
struct xen_ia64_p2m_table 29,1158
    unsigned long size;30,1186
    unsigned long *p2m;p2m31,1210

tools/libxc/ia64/ac_ia64_tools.h,427
#define AC_IA64_TOOLS_H21,798
#define ACPI_MACHINE_WIDTH 23,823
#define COMPILER_DEPENDENT_UINT64 24,853
#define COMPILER_DEPENDENT_INT64 25,906
typedef unsigned long long u64;26,949
typedef long long s64;27,981
typedef unsigned u32;28,1004
typedef int s32;29,1026
typedef unsigned char u8;30,1043
typedef unsigned short u16;31,1069
#define __iomem32,1097
#define asmlinkage33,1113
#define CONFIG_ACPI_BOOT34,1132

tools/libxc/ia64/xc_ia64_linux_restore.c,606
#define PFN_TO_KB(37,1250
static unsigned long p2m_size;40,1377
static unsigned long nr_pfns;43,1489
populate_page_if_necessary(46,1531
read_page(56,1828
xc_ia64_recv_unallocated_list(82,2528
xc_ia64_recv_vcpu_context(133,3841
xc_ia64_recv_shared_info(164,4726
xc_ia64_recv_vcpumap(203,5904
xc_ia64_pv_recv_vcpu_context(240,6900
xc_ia64_pv_recv_shared_info(265,7476
xc_ia64_pv_recv_context_ver_one_or_two(307,9006
xc_ia64_pv_recv_context_ver_three(331,9900
xc_ia64_pv_recv_context(375,11267
xc_ia64_hvm_recv_context(410,12722
xc_ia64_hvm_domain_setup(532,16174
xc_domain_restore(550,16708

tools/libxc/xc_core.h,2748
#define XC_CORE_H22,888
#define XEN_DUMPCORE_SEC_NOTE 29,1012
#define XEN_DUMPCORE_SEC_PRSTATUS 30,1072
#define XEN_DUMPCORE_SEC_SHARED_INFO 31,1136
#define XEN_DUMPCORE_SEC_P2M 32,1203
#define XEN_DUMPCORE_SEC_PFN 33,1262
#define XEN_DUMPCORE_SEC_PAGES 34,1321
#define XEN_DUMPCORE_SEC_IA64_MAPPED_REGS 36,1383
#define XEN_DUMPCORE_ELFNOTE_NAME 39,1476
struct elfnote 42,1579
    uint32_t    namesz;43,1596
    uint32_t    descsz;44,1641
    uint32_t    type;45,1665
    char        name[name46,1687
struct xen_dumpcore_elfnote_none_desc 52,1907
struct xen_dumpcore_elfnote_header_desc 56,1969
    uint64_t    xch_magic;57,2011
    uint64_t    xch_nr_vcpus;58,2038
    uint64_t    xch_nr_pages;59,2068
    uint64_t    xch_page_size;60,2098
struct xen_dumpcore_elfnote_xen_version_desc 63,2133
    uint64_t                    major_version;64,2180
    uint64_t                    minor_version;65,2227
    xen_extraversion_t          extra_version;66,2274
    xen_compile_info_t          compile_info;67,2321
    xen_capabilities_info_t     capabilities;68,2367
    xen_changeset_info_t        changeset;69,2413
    xen_platform_parameters_t   platform_parameters;70,2456
    uint64_t                    pagesize;71,2509
#define XEN_DUMPCORE_FORMAT_VERSION(74,2555
#define XEN_DUMPCORE_FORMAT_MAJOR(76,2653
#define XEN_DUMPCORE_FORMAT_MINOR(77,2717
#define XEN_DUMPCORE_FORMAT_MAJOR_CURRENT 79,2789
#define XEN_DUMPCORE_FORMAT_MINOR_CURRENT 80,2851
#define XEN_DUMPCORE_FORMAT_VERSION_CURRENT 81,2913
struct xen_dumpcore_elfnote_format_version_desc 85,3121
    uint64_t    version;86,3171
struct xen_dumpcore_elfnote_none 90,3201
    struct elfnote                              elfnote;91,3236
    struct xen_dumpcore_elfnote_none_desc       none;92,3293
struct xen_dumpcore_elfnote_header 95,3351
    struct elfnote                              elfnote;96,3388
    struct xen_dumpcore_elfnote_header_desc     header;97,3445
struct xen_dumpcore_elfnote_xen_version 100,3505
    struct elfnote                                     elfnote;101,3547
    struct xen_dumpcore_elfnote_xen_version_desc        xen_version;102,3611
struct xen_dumpcore_elfnote_format_version 105,3684
    struct elfnote                                      elfnote;106,3729
    struct xen_dumpcore_elfnote_format_version_desc     format_version;107,3794
#define XC_CORE_INVALID_PFN 110,3870
#define XC_CORE_INVALID_GMFN 111,3917
struct xen_dumpcore_p2m 112,3964
    uint64_t    pfn;113,3990
    uint64_t    gmfn;114,4011
struct xc_core_memory_map 132,4481
    uint64_t    addr;133,4509
    uint64_t    size;134,4531
typedef struct xc_core_memory_map xc_core_memory_map_t;136,4556
# define ELF_CORE_EFLAGS 163,5730

tools/libxc/xenguest.h,436
#define XENGUEST_H24,911
#define XCFLAGS_LIVE 26,931
#define XCFLAGS_DEBUG 27,959
#define XCFLAGS_HVM 28,987
#define XCFLAGS_STDVGA 29,1015
#define X86_64_B_SIZE 30,1043
#define X86_32_B_SIZE 31,1071
struct save_callbacks 34,1142
    int (*suspend)suspend35,1166
    int (*postcopy)postcopy37,1266
    int (*checkpoint)checkpoint41,1397
    int (*switch_qemu_logdirty)switch_qemu_logdirty44,1485
    void* data;47,1646

tools/libxc/xc_dom_boot.c,296
static int setup_hypercall_page(40,1261
static int launch_vm(64,2024
static int clear_page(83,2653
int xc_dom_compat_check(105,3283
int xc_dom_boot_xen_init(131,4093
int xc_dom_boot_mem_init(148,4632
void *xc_dom_boot_domU_map(xc_dom_boot_domU_map166,4984
int xc_dom_boot_image(203,6142

tools/libxc/xc_flask.c,944
#define OCON_PIRQ_STR 33,1069
#define OCON_IOPORT_STR 34,1100
#define OCON_IOMEM_STR 35,1133
#define OCON_DEVICE_STR 36,1165
#define INITCONTEXTLEN 37,1201
int xc_flask_op(39,1230
int xc_flask_load(66,1865
int xc_flask_context_to_sid(81,2131
int xc_flask_sid_to_context(98,2465
int xc_flask_getenforce(115,2797
int xc_flask_setenforce(135,3143
static int xc_flask_add(154,3478
int xc_flask_add_pirq(168,3808
int xc_flask_add_ioport(176,4015
int xc_flask_add_iomem(185,4278
int xc_flask_add_device(194,4538
static int xc_flask_del(202,4755
int xc_flask_del_pirq(216,5053
int xc_flask_del_ioport(224,5234
int xc_flask_del_iomem(232,5449
int xc_flask_del_device(240,5662
int xc_flask_access(248,5853
#define MAX_SHORT_DEC_LEN 255,6188
int xc_flask_avc_hashstats(312,7408
int xc_flask_avc_cachestats(330,7714
int xc_flask_policyvers(348,8022
int xc_flask_getavc_threshold(366,8320
int xc_flask_setavc_threshold(386,8693

tools/libxc/xc_cpu_hotplug.c,54
int xc_cpu_online(24,945
int xc_cpu_offline(37,1220

tools/libxc/xc_resume.c,233
static int pv_guest_width(27,920
static int modify_returncode(40,1245
static int modify_returncode(92,2580
static int xc_domain_resume_cooperative(100,2672
static int xc_domain_resume_any(117,3104
int xc_domain_resume(254,7217

tools/libxc/xenctrlosdep.h,1843
#define XC_OSDEP_H41,1540
#define __XEN_TOOLS__ 45,1649
enum xc_osdep_type 53,1757
    XC_OSDEP_PRIVCMD,54,1778
    XC_OSDEP_EVTCHN,55,1800
    XC_OSDEP_GNTTAB,56,1821
typedef unsigned long xc_osdep_handle;60,1890
#define XC_OSDEP_OPEN_ERROR 62,1930
struct xc_osdep_ops64,1981
    xc_osdep_handle (*open)open71,2133
    int (*close)close73,2182
            int (*hypercall)hypercall77,2268
            void *(*map_foreign_batch)map_foreign_batch79,2369
            void *(*map_foreign_bulk)map_foreign_bulk81,2535
            void *(*map_foreign_range)map_foreign_range83,2724
            void *(*map_foreign_ranges)map_foreign_ranges85,2894
        } privcmd;88,3154
            int (*fd)fd90,3190
            int (*notify)notify92,3249
            evtchn_port_or_error_t (*bind_unbound_port)bind_unbound_port94,3332
            evtchn_port_or_error_t (*bind_interdomain)bind_interdomain95,3435
            evtchn_port_or_error_t (*bind_virq)bind_virq97,3619
            int (*unbind)unbind99,3723
            evtchn_port_or_error_t (*pending)pending101,3806
            int (*unmask)unmask102,3888
        } evtchn;103,3970
            void *(*map_grant_ref)map_grant_ref105,4005
            void *(*map_grant_refs)map_grant_refs109,4221
            void *(*map_domain_grant_refs)map_domain_grant_refs114,4497
            int (*munmap)munmap119,4806
            int (*set_max_grants)set_max_grants122,4957
        } gnttab;123,5043
    } u;124,5061
typedef struct xc_osdep_ops xc_osdep_ops;126,5073
typedef xc_osdep_ops *(*xc_osdep_init_fn)xc_osdep_init_fn128,5116
struct xc_osdep_info130,5199
    const char *name;name133,5256
    xc_osdep_init_fn init;136,5311
    int fake;139,5395
    void *dl_handle;dl_handle142,5448
typedef struct xc_osdep_info xc_osdep_info_t;144,5472

tools/libxc/xc_dom_binloader.c,1034
#define round_pgup(89,4150
#define round_pgdown(90,4217
struct xen_bin_image_table92,4265
    uint32_t magic;94,4294
    uint32_t flags;95,4314
    uint32_t checksum;96,4334
    uint32_t header_addr;97,4357
    uint32_t load_addr;98,4383
    uint32_t load_end_addr;99,4407
    uint32_t bss_end_addr;100,4435
    uint32_t entry_addr;101,4462
#define XEN_MULTIBOOT_MAGIC3 104,4491
#define XEN_MULTIBOOT_FLAG_ALIGN4K 106,4532
#define XEN_MULTIBOOT_FLAG_NEEDMEMINFO 107,4582
#define XEN_MULTIBOOT_FLAG_NEEDVIDINFO 108,4632
#define XEN_MULTIBOOT_FLAG_ADDRSVALID 109,4682
#define XEN_MULTIBOOT_FLAG_PAE_SHIFT 110,4732
#define XEN_MULTIBOOT_FLAG_PAE_MASK 111,4774
#define FLAGS_MASK 114,4874
#define FLAGS_REQUIRED 116,4978
static struct xen_bin_image_table *find_table(find_table120,5109
static int xc_dom_probe_bin_kernel(144,5842
static int xc_dom_parse_bin_kernel(149,5950
static int xc_dom_load_bin_kernel(246,9408
static struct xc_dom_loader bin_loader 284,10703
static void __init register_loader(291,10897

tools/libxc/xc_minios.c,1993
#undef NDEBUG22,918
static xc_osdep_handle minios_privcmd_open(52,1577
static int minios_privcmd_close(62,1766
void minios_interface_close_fd(68,1884
static int minios_privcmd_hypercall(73,1961
static void *minios_privcmd_map_foreign_bulk(minios_privcmd_map_foreign_bulk95,2473
static void *minios_privcmd_map_foreign_batch(minios_privcmd_map_foreign_batch111,2964
static void *minios_privcmd_map_foreign_range(minios_privcmd_map_foreign_range136,3618
static void *minios_privcmd_map_foreign_ranges(minios_privcmd_map_foreign_ranges154,4189
static struct xc_osdep_ops minios_privcmd_ops 185,5051
static xc_osdep_handle minios_evtchn_open(199,5507
static int minios_evtchn_close(212,5873
void minios_evtchn_close_fd(218,5987
static int minios_evtchn_fd(227,6219
static int minios_evtchn_notify(232,6306
static int port_alloc(246,6561
static void evtchn_handler(260,6871
static evtchn_port_or_error_t minios_evtchn_bind_unbound_port(278,7355
static evtchn_port_or_error_t minios_evtchn_bind_interdomain(303,7970
static int minios_evtchn_unbind(329,8684
static evtchn_port_or_error_t minios_evtchn_bind_virq(348,9183
static evtchn_port_or_error_t minios_evtchn_pending(372,9740
static int minios_evtchn_unmask(397,10406
static struct xc_osdep_ops minios_evtchn_ops 403,10537
void discard_file_cache(420,11112
static xc_osdep_handle minios_gnttab_open(426,11213
static int minios_gnttab_close(435,11437
void minios_gnttab_close_fd(441,11551
static void *minios_gnttab_map_grant_ref(minios_gnttab_map_grant_ref447,11661
static void *minios_gnttab_map_grant_refs(minios_gnttab_map_grant_refs460,12150
static void *minios_gnttab_map_domain_grant_refs(minios_gnttab_map_domain_grant_refs474,12709
static int minios_gnttab_munmap(488,13301
static int minios_gnttab_set_max_grants(504,13720
static struct xc_osdep_ops minios_gnttab_ops 518,14052
static struct xc_osdep_ops *minios_osdep_init(minios_osdep_init531,14480
xc_osdep_info_t xc_osdep_info 546,14826

tools/libxc/xtl_logger_stdio.c,618
struct xentoollog_logger_stdiostream 32,1011
    xentoollog_logger vtable;33,1050
    FILE *f;f34,1080
    xentoollog_level min_level;35,1093
    unsigned flags;36,1125
    int progress_erase_len,37,1145
    int progress_erase_len, progress_last_percent;37,1145
static void progress_erase(40,1200
static void stdiostream_vmessage(45,1362
static void stdiostream_progress(84,2584
static void stdiostream_destroy(125,3875
void xtl_stdiostream_set_minlevel(131,4045
void xtl_stdiostream_adjust_flags(136,4212
xentoollog_logger_stdiostream *xtl_createlogger_stdiostreamxtl_createlogger_stdiostream144,4533

tools/libxc/xc_arinc653.c,80
xc_sched_arinc653_schedule_set(30,1314
xc_sched_arinc653_schedule_get(59,2046

tools/libxc/xc_core_ia64.c,488
xc_core_arch_gpfn_may_present(28,982
xc_memory_map_cmp(38,1278
xc_core_arch_auto_translated_physmap(61,1926
memory_map_get_old_domu(72,2175
memory_map_get_old_hvm(100,2780
#define VGA_IO_END 115,3388
memory_map_get_old(159,4528
xc_core_arch_memory_map_get(173,5024
xc_core_arch_map_p2m(241,7015
xc_core_arch_context_init(254,7376
xc_core_arch_context_free(265,7666
xc_core_arch_context_get(276,8005
xc_core_arch_context_get_shdr(321,9483
xc_core_arch_context_dump(354,10550

tools/libxc/xc_cpufeature.h,3520
#define __LIBXC_CPUFEATURE_H18,732
#define X86_FEATURE_FPU	21,833
#define X86_FEATURE_VME	22,886
#define X86_FEATURE_DE	23,951
#define X86_FEATURE_PSE 24,1012
#define X86_FEATURE_TSC	25,1074
#define X86_FEATURE_MSR	26,1134
#define X86_FEATURE_PAE	27,1214
#define X86_FEATURE_MCE	28,1283
#define X86_FEATURE_CX8	29,1351
#define X86_FEATURE_APIC	30,1413
#define X86_FEATURE_SEP	31,1467
#define X86_FEATURE_MTRR	32,1525
#define X86_FEATURE_PGE	33,1594
#define X86_FEATURE_MCA	34,1654
#define X86_FEATURE_CMOV	35,1722
#define X86_FEATURE_PAT	36,1819
#define X86_FEATURE_PSE36	37,1881
#define X86_FEATURE_PN	38,1935
#define X86_FEATURE_CLFLSH	39,1999
#define X86_FEATURE_DS	40,2075
#define X86_FEATURE_ACPI	41,2127
#define X86_FEATURE_MMX	42,2181
#define X86_FEATURE_FXSR	43,2244
#define X86_FEATURE_XMM	45,2402
#define X86_FEATURE_XMM2	46,2469
#define X86_FEATURE_SELFSNOOP	47,2538
#define X86_FEATURE_HT	48,2599
#define X86_FEATURE_ACC	49,2655
#define X86_FEATURE_IA64	50,2720
#define X86_FEATURE_PBE	51,2777
#define X86_FEATURE_SYSCALL	55,2971
#define X86_FEATURE_MP	56,3030
#define X86_FEATURE_NX	57,3082
#define X86_FEATURE_MMXEXT	58,3138
#define X86_FEATURE_FFXSR 59,3200
#define X86_FEATURE_PAGE1GB	60,3280
#define X86_FEATURE_RDTSCP	61,3347
#define X86_FEATURE_LM	62,3397
#define X86_FEATURE_3DNOWEXT	63,3456
#define X86_FEATURE_3DNOW	64,3523
#define X86_FEATURE_RECOVERY	67,3642
#define X86_FEATURE_LONGRUN	68,3708
#define X86_FEATURE_LRTI	69,3774
#define X86_FEATURE_CXMMX	73,3968
#define X86_FEATURE_K6_MTRR	74,4031
#define X86_FEATURE_CYRIX_ARR	75,4100
#define X86_FEATURE_CENTAUR_MCR	76,4167
#define X86_FEATURE_K8	78,4276
#define X86_FEATURE_K7	79,4334
#define X86_FEATURE_P3	80,4381
#define X86_FEATURE_P4	81,4424
#define X86_FEATURE_CONSTANT_TSC 82,4467
#define X86_FEATURE_XMM3	85,4617
#define X86_FEATURE_DTES64	86,4686
#define X86_FEATURE_MWAIT	87,4748
#define X86_FEATURE_DSCPL	88,4812
#define X86_FEATURE_VMXE	89,4880
#define X86_FEATURE_SMXE	90,4948
#define X86_FEATURE_EST	91,5011
#define X86_FEATURE_TM2	92,5071
#define X86_FEATURE_SSSE3	93,5130
#define X86_FEATURE_CID	94,5213
#define X86_FEATURE_CX16 95,5265
#define X86_FEATURE_XTPR	96,5324
#define X86_FEATURE_PDCM	97,5393
#define X86_FEATURE_DCA	98,5460
#define X86_FEATURE_SSE4_1	99,5521
#define X86_FEATURE_SSE4_2	100,5594
#define X86_FEATURE_X2APIC 101,5667
#define X86_FEATURE_POPCNT	102,5722
#define X86_FEATURE_TSC_DEADLINE 103,5784
#define X86_FEATURE_AES	104,5858
#define X86_FEATURE_XSAVE	105,5929
#define X86_FEATURE_AVX	106,5998
#define X86_FEATURE_HYPERVISOR	107,6066
#define X86_FEATURE_XSTORE	110,6221
#define X86_FEATURE_XSTORE_EN	111,6297
#define X86_FEATURE_XCRYPT	112,6362
#define X86_FEATURE_XCRYPT_EN	113,6433
#define X86_FEATURE_ACE2	114,6501
#define X86_FEATURE_ACE2_EN	115,6574
#define X86_FEATURE_PHE	116,6633
#define X86_FEATURE_PHE_EN	117,6695
#define X86_FEATURE_PMM	118,6751
#define X86_FEATURE_PMM_EN	119,6823
#define X86_FEATURE_LAHF_LM	122,6947
#define X86_FEATURE_CMP_LEGACY	123,7014
#define X86_FEATURE_SVME 124,7093
#define X86_FEATURE_EXTAPICSPACE 125,7164
#define X86_FEATURE_ALTMOVCR	126,7233
#define X86_FEATURE_ABM	127,7304
#define X86_FEATURE_SSE4A	128,7371
#define X86_FEATURE_MISALIGNSSE	129,7446
#define X86_FEATURE_3DNOWPF	130,7516
#define X86_FEATURE_OSVW	131,7576
#define X86_FEATURE_IBS	132,7639
#define X86_FEATURE_SSE5	133,7708
#define X86_FEATURE_SKINIT	134,7782
#define X86_FEATURE_WDT	135,7849

tools/libxc/xc_hcall_buf.c,375
void *xc__hypercall_buffer_alloc_pages(xc__hypercall_buffer_alloc_pages31,999
void xc__hypercall_buffer_free_pages(63,1625
struct allocation_header 75,1864
    int nr_pages;76,1891
void *xc__hypercall_buffer_alloc(xc__hypercall_buffer_alloc79,1913
void xc__hypercall_buffer_free(95,2367
int xc__hypercall_bounce_pre(108,2627
void xc__hypercall_bounce_post(137,3293

tools/memshr/bidir-hash.c,6236
static const uint32_t hash_sizes[hash_sizes32,1085
static const uint16_t hash_sizes_len 36,1342
static const float hash_max_load_fact 38,1435
static const float hash_min_load_fact 39,1481
#define BUCKETS_PER_LOCK 42,1587
#define nr_locks(43,1618
#define HASH_LOCK 46,1691
#define BUCKET_LOCK 49,1804
struct hash_entry52,1919
    __k_t key;54,1939
    __v_t value;55,1954
    struct hash_entry *key_next;key_next57,2047
    struct hash_entry *value_next;value_next58,2080
struct bucket61,2119
    struct hash_entry *hash_entry;hash_entry63,2135
struct bucket_lock66,2174
    BUCKET_LOCK;68,2195
struct __hash71,2216
    int lock_alive;73,2232
    HASH_LOCK;74,2252
    uint32_t nr_ent;78,2502
    struct bucket *key_tab;key_tab79,2579
    struct bucket *value_tab;value_tab80,2656
    struct bucket_lock *key_lock_tab;key_lock_tab81,2733
    struct bucket_lock *value_lock_tab;value_lock_tab82,2810
    uint32_t tab_size;83,2887
    uint16_t size_idx;84,2964
    uint32_t max_load;85,3041
    uint32_t min_load;86,3118
#define ia64_fetchadd4_rel(104,3987
static inline void atomic_inc(110,4329
static inline void atomic_dec(111,4402
static inline void atomic_inc(113,4496
static inline void atomic_dec(120,4671
static void* alloc_entry(131,4882
static void alloc_buckets(136,4965
static void free_entry(147,5375
static void free_buckets(152,5443
static int max_entries(160,5671
#define SHM_TABLE_SLOTS 171,6027
struct shm_hdr173,6054
    int             hash_allocated;175,6071
    pthread_mutex_t mutex;176,6107
    int             free_tab_slots[free_tab_slots177,6134
    unsigned long   freelist_offset;179,6188
    unsigned long   entries_offset;181,6246
    unsigned long   nr_entries;182,6282
    unsigned long   tabs_offset;184,6335
    unsigned long   max_tab_size;185,6368
    unsigned long   max_lock_tab_size;186,6402
    struct __hash   hash;188,6442
static unsigned long get_shm_baddr(191,6472
static struct shm_hdr* get_shm_hdr(198,6643
static uint32_t* get_shm_freelist(204,6796
static struct hash_entry* get_shm_entries(210,6967
static struct bucket* get_shm_tab(216,7154
static struct bucket_lock* get_shm_lock_tab(224,7419
static int get_shm_slot(233,7736
static int shm_mutex_init(241,8006
static int shm_mutex_lock(257,8390
static int shm_mutex_unlock(262,8482
static void shm_add_to_freelist(269,8618
static uint32_t shm_get_from_freelist(279,8846
#define SHM_ALLOC_MAIN(293,9128
static unsigned long shm_init_offsets(295,9156
struct __hash* __shm_hash_init(317,9979
struct __hash* __shm_hash_get(347,10843
static void* alloc_entry(354,11013
static void alloc_buckets(366,11292
static void free_entry(397,12264
static void free_buckets(407,12505
static int max_entries(428,13102
#define C2L(444,13723
#define L2C(446,13836
#define HASH_LOCK_INIT(450,13951
#define HASH_LOCK_RDLOCK(467,15170
#define HASH_LOCK_RDUNLOCK(483,16308
#define HASH_LOCK_WRLOCK(486,16434
#define HASH_LOCK_TRYWRLOCK(501,17491
#define HASH_LOCK_WRUNLOCK(508,17900
#define BUCKET_LOCK_INIT(512,18027
#define BUCKET_LOCK_RDLOCK(529,19166
#define BUCKET_LOCK_RDUNLOCK(542,19981
#define BUCKET_LOCK_WRLOCK(547,20228
#define BUCKET_LOCK_WRUNLOCK(559,21042
#define TWO_BUCKETS_LOCK_WRLOCK(564,21289
#define TWO_BUCKETS_LOCK_WRUNLOCK(594,23561
static uint32_t hash_to_idx(609,24378
static void alloc_tab(614,24477
struct __hash *__hash_init(__hash_init639,25217
#undef __prim679,26533
#undef __prim_t680,26547
#undef __prim_tab681,26563
#undef __prim_lock_tab682,26581
#undef __prim_hash683,26604
#undef __prim_cmp684,26623
#undef __prim_next685,26641
#undef __sec686,26660
#undef __sec_t687,26673
#define __prim 689,26689
#define __prim_t 690,26720
#define __prim_tab 691,26751
#define __prim_lock_tab 692,26786
#define __prim_hash 693,26826
#define __prim_cmp 694,26862
#define __prim_next 695,26897
#define __sec 696,26933
#define __sec_t 697,26966
int __key_lookup(698,26997
#undef __prim730,27884
#undef __prim_t731,27898
#undef __prim_tab732,27914
#undef __prim_lock_tab733,27932
#undef __prim_hash734,27955
#undef __prim_cmp735,27974
#undef __prim_next736,27992
#undef __sec737,28011
#undef __sec_t738,28024
#define __prim 740,28040
#define __prim_t 741,28073
#define __prim_tab 742,28104
#define __prim_lock_tab 743,28141
#define __prim_hash 744,28183
#define __prim_cmp 745,28221
#define __prim_next 746,28258
#define __sec 747,28296
#define __sec_t 748,28327
int __value_lookup(749,28358
int __insert(780,29190
#undef __prim832,30662
#undef __prim_t833,30676
#undef __prim_tab834,30692
#undef __prim_lock_tab835,30710
#undef __prim_hash836,30733
#undef __prim_cmp837,30752
#undef __prim_next838,30770
#undef __sec839,30789
#undef __sec_t840,30802
#undef __sec_tab841,30817
#undef __sec_lock_tab842,30834
#undef __sec_hash843,30856
#undef __sec_next844,30874
#define __prim 846,30893
#define __prim_t 847,30924
#define __prim_tab 848,30955
#define __prim_lock_tab 849,30990
#define __prim_hash 850,31030
#define __prim_cmp 851,31066
#define __prim_next 852,31101
#define __sec 853,31137
#define __sec_t 854,31170
#define __sec_tab 855,31201
#define __sec_lock_tab 856,31238
#define __sec_hash 857,31280
#define __sec_next 858,31318
int __key_remove(860,31357
#undef __prim981,34932
#undef __prim_t982,34946
#undef __prim_tab983,34962
#undef __prim_lock_tab984,34980
#undef __prim_hash985,35003
#undef __prim_cmp986,35022
#undef __prim_next987,35040
#undef __sec988,35059
#undef __sec_t989,35072
#undef __sec_tab990,35087
#undef __sec_lock_tab991,35104
#undef __sec_hash992,35126
#undef __sec_next993,35144
#define __prim 995,35163
#define __prim_t 996,35196
#define __prim_tab 997,35227
#define __prim_lock_tab 998,35264
#define __prim_hash 999,35306
#define __prim_cmp 1000,35344
#define __prim_next 1001,35381
#define __sec 1002,35419
#define __sec_t 1003,35450
#define __sec_tab 1004,35481
#define __sec_lock_tab 1005,35516
#define __sec_hash 1006,35556
#define __sec_next 1007,35592
int __value_remove(1009,35629
int __hash_destroy(1131,39207
static void hash_resize(1165,40075
int __hash_iterator(1252,42677
void __hash_sizes(1288,43582

tools/memshr/shm.c,848
#define MEMSHR_INFO_SHM_FILE 32,1097
#define MEMSHR_INFO_MAGIC 33,1142
#define FGPRT_HASH_SHM_FILE 35,1185
#define FGPRT_HASH_PAGES 36,1230
#define BLOCK_HASH_SHM_FILE 38,1265
#define BLOCK_HASH_PAGES 39,1308
typedef struct shm_area 41,1343
    void*  base_addr;42,1369
    size_t size;43,1391
    int    fd;44,1408
} shm_area_t;45,1423
    struct shm_area shared_info_area;48,1455
    struct shm_area fgprts_area;49,1493
    struct shm_area blocks_area;50,1526
} private_shm_info_t;51,1559
private_shm_info_t shm_info;53,1582
static int shm_area_open(57,1614
static void shm_area_close(84,2343
shared_memshr_info_t * shm_shared_info_open(91,2456
struct fgprtshr_hash * shm_fgprtshr_hash_open(138,3943
struct blockshr_hash * shm_blockshr_hash_open(164,4643
uint16_t shm_vbd_image_get(190,5343
void shm_vbd_image_put(239,6567

tools/memshr/bidir-namedefs.h,738
#define BIDIR_NAME_ONE_INTERNAL(22,929
#define BIDIR_NAME_TWO_INTERNAL(24,1029
#define BIDIR_NAME_ONE(27,1153
#define BIDIR_NAME_TWO(29,1262
#define INTERNAL_NAME_ONE(32,1388
#define INTERNAL_NAME_TWO(33,1460
#define __k_t 37,1609
#define __v_t 38,1653
#define __hash 40,1700
#define __shm_hash_init 41,1756
#define __shm_hash_get 42,1821
#define __hash_init 43,1885
#define __key_lookup 44,1946
#define __value_lookup 45,2015
#define __insert 46,2086
#define __key_remove 47,2144
#define __value_remove 48,2213
#define __hash_destroy 49,2284
#define __hash_iterator 50,2348
#define __key_hash 52,2414
#define __key_cmp 53,2481
#define __value_hash 54,2547
#define __value_cmp 55,2616
#define __hash_sizes 57,2685

tools/memshr/interface.c,706
    int     enabled;29,1036
    domid_t domid;30,1057
    xc_interface *xc_handle;xc_handle31,1076
} memshr_vbd_info_t;32,1105
memshr_vbd_info_t vbd_info 34,1127
    struct shared_memshr_info *shared_info;shared_info38,1195
    struct fgprtshr_hash      *fgprts;fgprts39,1239
    struct blockshr_hash      *blks;blks40,1278
} private_memshr_info_t;41,1315
private_memshr_info_t memshr;43,1341
#define SHARED_INFO 45,1372
void memshr_set_domid(47,1415
void memshr_daemon_initialize(52,1481
void memshr_vbd_initialize(83,2197
uint16_t memshr_vbd_image_get(126,3107
void memshr_vbd_image_put(139,3404
int memshr_vbd_issue_ro_request(146,3630
void memshr_vbd_complete_ro_request(202,5431

tools/memshr/bidir-daemon.h,34
#define __BIDIR_DAEMON_H__21,891

tools/memshr/bidir-hash.h,1124
#define __BIDIR_HASH_H__20,888
typedef struct vbdblk 25,960
    uint64_t sec;26,984
    uint16_t disk_id;27,1002
} vbdblk_t;28,1024
#define DEFINE_SINGLE_MAP 32,1080
#undef BIDIR_NAME_PREFIX40,1348
#undef BIDIR_KEY41,1373
#undef BIDIR_VALUE42,1390
#undef BIDIR_KEY_T43,1409
#undef BIDIR_VALUE_T44,1428
static uint32_t fgprtshr_fgprt_hash(45,1449
static uint32_t fgprtshr_mfn_hash(50,1516
static int fgprtshr_fgprt_cmp(55,1591
static int fgprtshr_mfn_cmp(60,1675
#define BIDIR_NAME_PREFIX 64,1756
#define BIDIR_KEY 65,1798
#define BIDIR_VALUE 66,1837
#define BIDIR_KEY_T 67,1874
#define BIDIR_VALUE_T 68,1915
#undef BIDIR_NAME_PREFIX79,2244
#undef BIDIR_KEY80,2269
#undef BIDIR_VALUE81,2286
#undef BIDIR_KEY_T82,2305
#undef BIDIR_VALUE_T83,2324
static inline uint32_t blockshr_block_hash(85,2371
static inline uint32_t blockshr_shrhnd_hash(90,2497
static inline int blockshr_block_cmp(95,2592
static inline int blockshr_shrhnd_cmp(100,2721
#define BIDIR_NAME_PREFIX 104,2812
#define BIDIR_KEY 105,2853
#define BIDIR_VALUE 106,2891
#define BIDIR_KEY_T 107,2930
#define BIDIR_VALUE_T 108,2971

tools/memshr/memshr-priv.h,107
#define __MEMSHR_PRIV_H__20,889
#define DPRINTF(27,984
#define DPRINTF(29,1044
#define EPRINTF(32,1089

tools/memshr/memshr.h,63
#define __MEMSHR_H__20,884
typedef uint64_t xen_mfn_t;26,977

tools/memshr/shm.h,571
#define __SHM_H__20,881
#define MAX_NAME_LEN 25,942
typedef struct vbd_image_info 27,970
    char     file[file28,1002
    int      ref_cnt;29,1035
    uint16_t next;30,1057
    uint16_t prev;31,1076
} vbd_image_info_t;32,1095
#define MAX_NR_VBD_IMAGES 34,1116
typedef struct shared_memshr_info 36,1151
    unsigned long    magic;37,1187
    pthread_mutex_t  lock;38,1215
    int              fgprtshr_hash_inited;39,1242
    int              blockshr_hash_inited;40,1285
    vbd_image_info_t vbd_images[vbd_images41,1328
} shared_memshr_info_t;42,1380

tools/memshr/bidir-daemon.c,157
static struct blockshr_hash *blks_hash;blks_hash26,977
void* bidir_daemon(28,1018
void bidir_daemon_launch(79,2671
void bidir_daemon_initialize(86,2786

tools/xenpmd/xenpmd.c,2196
#define RUN_IN_SIMULATE_MODE46,1817
enum BATTERY_INFO_TYPE 48,1847
    BIF,49,1872
    BST 50,1882
enum BATTERY_PRESENT 53,1895
    NO,54,1918
    YES 55,1927
enum BATTERY_TECHNOLOGY 58,1940
    NON_RECHARGEABLE,59,1966
    RECHARGEABLE 60,1989
struct battery_info 63,2011
    enum BATTERY_PRESENT    present;64,2033
    unsigned long           design_capacity;65,2070
    unsigned long           last_full_capacity;66,2115
    enum BATTERY_TECHNOLOGY battery_technology;67,2163
    unsigned long           design_voltage;68,2211
    unsigned long           design_capacity_warning;69,2255
    unsigned long           design_capacity_low;70,2308
    unsigned long           capacity_granularity_1;71,2357
    unsigned long           capacity_granularity_2;72,2409
    char                    model_number[model_number73,2461
    char                    serial_number[serial_number74,2507
    char                    battery_type[battery_type75,2554
    char                    oem_info[oem_info76,2600
struct battery_status 79,2646
    enum BATTERY_PRESENT    present;80,2670
    unsigned long           state;81,2707
    unsigned long           present_rate;82,2742
    unsigned long           remaining_capacity;83,2784
    unsigned long           present_voltage;84,2832
static struct xs_handle *xs;xs87,2881
    #define BATTERY_DIR_PATH 90,2939
    #define BATTERY_INFO_FILE_PATH 91,2983
    #define BATTERY_STATE_FILE_PATH 92,3042
    #define BATTERY_DIR_PATH 94,3108
    #define BATTERY_INFO_FILE_PATH 95,3158
    #define BATTERY_STATE_FILE_PATH 96,3222
FILE *get_next_battery_file(get_next_battery_file99,3296
void set_attribute_battery_info(125,4018
void set_attribute_battery_status(215,6258
void parse_battery_info_or_status(255,7279
int get_next_battery_info_or_status(290,8397
void print_battery_info(317,9111
void write_ulong_lsb_first(335,10072
void write_battery_info_to_xenstore(342,10335
int write_one_time_battery_info(378,12041
void print_battery_status(406,12597
void write_battery_status_to_xenstore(416,13037
int wait_for_and_update_battery_status_request(432,13502
static void daemonize(473,14646
int main(497,14942

tools/vnet/vnetd/timer.h,225
#define _VNET_TIMER_H_20,821
typedef void TimerFn(24,860
typedef struct Timer 26,898
    struct Timer *next;next27,921
    TimerFn *fn;fn28,945
    unsigned long data;29,962
    double expiry;30,986
} Timer;31,1005

tools/vnet/vnetd/selector.c,309
#define MODULE_NAME 26,943
#define DEBUG 27,972
#undef DEBUG28,988
void Selector_init(31,1021
void Selector_close(39,1185
int Selector_select(59,1647
int Selector_selected(78,2069
int conn_select_fn(90,2301
int conn_selected_fn(102,2532
void conn_close_fn(113,2734
void Selector_conn_init(122,2883

tools/vnet/vnetd/select.c,258
#define MODULE_NAME 24,885
#define DEBUG25,915
#undef DEBUG26,929
void SelectSet_zero(35,1100
void SelectSet_add(49,1400
void SelectSet_add_read(68,1840
void SelectSet_add_write(81,2147
void SelectSet_add_error(94,2455
int SelectSet_select(107,2777

tools/vnet/vnetd/spinlock.h,486
#define _VNET_SPINLOCK_H_2,26
typedef struct atomic_t 4,53
    unsigned val;5,79
} atomic_t;6,97
typedef struct spinlock_t 13,252
    unsigned val;14,280
} spinlock_t;15,298
#define SPIN_LOCK_UNLOCKED 17,313
#define spin_lock_irqsave(22,457
typedef struct rwlock_t{rwlock_t25,598
    unsigned val;26,623
} rwlock_t;27,641
#define RW_LOCK_UNLOCKED 29,654
#define read_lock_irqsave(32,752
#define write_lock_irqsave(36,942
struct semaphore 39,1084
    int count;40,1103

tools/vnet/vnetd/connection.c,694
#define MODULE_NAME 30,1034
#define DEBUG 31,1061
#undef DEBUG32,1077
int stream_init(43,1380
ConnList * ConnList_add(68,1915
ConnList * ConnList_del(76,2063
void ConnList_close(91,2433
void ConnList_select(97,2537
ConnList * ConnList_handle(107,2759
Conn *Conn_new(Conn_new127,3216
int Conn_handler(135,3382
int Conn_handle(152,3750
void Conn_select(164,3993
int Conn_init(176,4288
int Conn_connect(205,5087
void Conn_close(235,5880
int setsock_reuse(244,6095
int setsock_broadcast(256,6367
int setsock_multicast(268,6650
int setsock_multicast_ttl(294,7500
int setsock_pktinfo(304,7751
char * socket_flags(314,7980
int create_socket(336,8639
int Conn_socket(396,10342

tools/vnet/vnetd/selector.h,251
#define _VNETD_SELECTOR_H_19,824
typedef struct Selector 26,905
    struct list_head list;29,986
    int (*select)select34,1169
    int (*selected)selected39,1392
    void (*close)close43,1532
    void *data;data46,1596
} Selector;48,1613

tools/vnet/vnetd/select.h,429
#define _VFC_SELECT_H_18,826
typedef struct SelectSet 22,894
    int n;23,921
    fd_set rd,24,932
    fd_set rd, wr,24,932
    fd_set rd, wr, er;24,932
} SelectSet;25,955
    SELECT_READ 28,976
    SELECT_WRITE 29,998
    SELECT_ERROR 30,1020
static inline int SelectSet_in(40,1392
static inline int SelectSet_in_read(48,1672
static inline int SelectSet_in_write(52,1784
static inline int SelectSet_in_err(56,1897

tools/vnet/vnetd/connection.h,553
#define _VNET_CONNECTION_H_18,831
typedef struct Conn 29,1041
    struct sockaddr_in addr;30,1063
    int sock;31,1092
    int type;32,1106
    int mode;33,1120
    IOStream *in;in34,1149
    IOStream *out;out35,1167
    int (*fn)fn36,1186
    void *data;data37,1230
} Conn;38,1246
typedef struct ConnList 40,1255
    Conn *conn;conn41,1281
    struct ConnList *next;next42,1297
} ConnList;43,1324
    VSOCK_REUSE 61,2131
    VSOCK_BIND 62,2157
    VSOCK_CONNECT 63,2183
    VSOCK_BROADCAST 64,2209
    VSOCK_MULTICAST 65,2235

tools/vnet/vnetd/list.h,1105
#define _VNETD_LIST_H_2,23
#define LIST_POISON1 12,303
#define LIST_POISON2 13,347
#define container_of(15,392
struct list_head 29,905
	struct list_head *next,next30,924
	struct list_head *next, *prev;prev30,924
#define LIST_HEAD_INIT(33,960
#define LIST_HEAD(35,1011
#define INIT_LIST_HEAD(38,1084
static inline void __list_add(48,1344
static inline void list_add(66,1741
static inline void list_add_tail(79,2063
static inline void __list_del(91,2368
static inline void list_del(103,2689
static inline void list_del_rcu(121,3246
static inline void list_del_init(131,3496
static inline void list_move(142,3768
static inline void list_move_tail(153,4073
static inline int list_empty(164,4327
static inline void __list_splice(169,4413
static inline void list_splice(188,4817
static inline void list_splice_init(201,5155
#define list_entry(216,5541
#define list_for_each(224,5753
#define list_for_each_prev(232,6000
#define list_for_each_safe(241,6348
#define list_for_each_entry(251,6680
#define list_for_each_entry_reverse(262,7119
#define list_for_each_entry_safe(276,7642

tools/vnet/vnetd/skbuff.c,823
#define SKB_DATA_ALIGN(38,1119
void skb_over_panic(48,1334
void skb_under_panic(63,1640
struct sk_buff *alloc_skb(alloc_skb78,2101
void skb_release_data(117,2934
void kfree_skbmem(125,3071
void __kfree_skb(140,3370
struct sk_buff *skb_clone(skb_clone169,4067
static void copy_skb_header(174,4170
int pskb_expand_head(208,5182
struct sk_buff *pskb_copy(pskb_copy245,5993
struct sk_buff *skb_realloc_headroom(skb_realloc_headroom272,6550
struct sk_buff *skb_copy_expand(skb_copy_expand307,7660
int skb_copy_bits(345,8475
struct sk_buff *skb_dequeue(skb_dequeue381,9188
struct sk_buff *skb_dequeue_tail(skb_dequeue_tail400,9714
void skb_queue_purge(419,10240
void skb_queue_head(437,10704
void skb_queue_tail(457,11246
void skb_unlink(477,11909
void skb_append(502,12489
void skb_insert(522,13012

tools/vnet/vnetd/vnetd.c,3178
#define MODULE_NAME 77,1947
#define DEBUG 78,1975
#undef DEBUG79,1991
#define PROGRAM 82,2024
#define VERSION 83,2048
typedef struct Vnetd 85,2071
    unsigned long port;86,2094
    int ttl;87,2118
    int verbose;88,2131
    int etherip;89,2148
    int udp_sock;91,2166
    struct sockaddr_in udp_sock_addr;92,2184
    int mcast_sock;93,2222
    struct sockaddr_in mcast_sock_addr;94,2242
    int etherip_sock;95,2282
    struct sockaddr_in etherip_sock_addr;96,2304
    int unix_sock;97,2346
    char *unix_path;unix_path98,2365
    int raw_sock;100,2387
    struct sockaddr_in ucast_addr;102,2406
    struct sockaddr_in mcast_addr;103,2441
    HashTable *vnet_table;vnet_table105,2477
    ConnList *conns;conns107,2505
} Vnetd;109,2527
Vnetd _vnetd 111,2537
Vnetd _vnetd = {}, *vnetd vnetd111,2537
uint32_t vnetd_intf_addr(113,2575
uint32_t vnetd_mcast_addr(117,2664
void vnetd_set_mcast_addr(121,2754
uint16_t vnetd_mcast_port(126,2887
uint32_t vnetd_addr(130,2970
int tap_open(136,3060
int tap_close(179,4355
int vnet_dev_add(191,4561
void vnet_dev_remove(210,5056
int netif_rx(222,5347
static const int SKB_SIZE 242,5743
struct sk_buff *skb_new(skb_new244,5778
int recvfromdest(263,6424
int skb_recv_udp(305,7645
int skb_recv_raw(346,9038
int skb_read(385,10294
int vnet_read(412,10912
int _skb_xmit(426,11210
int varp_open(494,13362
void varp_close(498,13426
int vnetd_raw_socket(508,13650
int get_dev_address(532,14267
int get_intf_address(557,14897
int get_self_addr(577,15349
static int eval_vnetd_mcaddr(601,15907
static int vnetd_eval_io(619,16320
static int vnetd_configure(645,17009
#define OPT_MCADDR 668,17674
#define KEY_MCADDR 669,17699
#define DOC_MCADDR 670,17734
#define OPT_FILE 672,17792
#define KEY_FILE 673,17817
#define DOC_FILE 674,17845
#define OPT_HELP 676,17907
#define KEY_HELP 677,17932
#define DOC_HELP 678,17960
#define OPT_VERSION 680,17999
#define KEY_VERSION 681,18024
#define DOC_VERSION 682,18055
#define OPT_VERBOSE 684,18097
#define KEY_VERBOSE 685,18122
#define DOC_VERBOSE 686,18153
static void usage(694,18365
static char *short_opts short_opts707,18955
static struct option const long_opts[long_opts716,19116
static int vnetd_getopts(725,19528
static int vnetd_init(767,20440
static void vnet_select(794,21265
static void vnet_handle(806,21607
static int vnetd_handle_udp(823,22071
static int vnetd_handle_etherip(854,22995
typedef struct ConnClient 881,23818
    Vnetd *vnetd;vnetd882,23846
    Parser *parser;parser883,23864
} ConnClient;884,23884
static int conn_handle_fn(886,23899
static int vnetd_handle_unix(926,24843
static void vnetd_select(959,25754
static void vnetd_handle(970,26149
static unsigned timer_alarms 996,26986
static int vnetd_main(998,27021
static int getsockaddr(1033,27877
static int vnetd_etherip_sock(1038,28054
static int vnetd_udp_sock(1054,28569
static int vnetd_raw_sock(1090,29830
static int vnetd_unix_sock(1104,30176
static void sigaction_SIGPIPE(1139,31050
static void sigaction_SIGALRM(1149,31247
typedef void SignalAction(1154,31383
static int catch_signal(1162,31588
int main(1176,31911

tools/vnet/vnetd/skbuff.h,3181
#define _VNET_SKBUFF_H15,440
struct sk_buff_head 22,528
	struct sk_buff	*next;next24,590
	struct sk_buff	*prev;prev25,613
	__u32		qlen;27,637
	spinlock_t	lock;28,651
#define MAX_SKB_FRAGS 33,675
typedef struct skb_frag_struct skb_frag_t;35,725
struct skb_frag_struct 37,769
    void *page;page39,819
	__u16 page_offset;40,835
	__u16 size;41,855
struct skb_shared_info 47,977
	atomic_t	dataref;48,1002
	unsigned int	nr_frags;49,1021
	unsigned short	tso_size;50,1045
	unsigned short	tso_segs;51,1071
	struct sk_buff	*frag_list;frag_list52,1097
	skb_frag_t	frags[frags53,1125
struct sk_buff 56,1163
	struct sk_buff		*next;next58,1220
	struct sk_buff		*prev;prev59,1244
	struct sk_buff_head	*list;list61,1269
        struct net_device       *dev;dev62,1297
		struct tcphdr	*th;th65,1345
		struct udphdr	*uh;uh66,1366
		struct icmphdr	*icmph;icmph67,1387
		struct igmphdr	*igmph;igmph68,1412
		struct iphdr	*ipiph;ipiph69,1437
		struct ipv6hdr	*ipv6h;ipv6h70,1460
		unsigned char	*raw;raw71,1485
	} h;72,1507
		struct iphdr	*iph;iph75,1523
		struct ipv6hdr	*ipv6h;ipv6h76,1544
		struct arphdr	*arph;arph77,1569
		unsigned char	*raw;raw78,1592
	} nh;79,1614
	  	unsigned char 	*raw;raw82,1631
	} mac;83,1656
	unsigned int		len,85,1665
                                data_len;86,1685
    unsigned char		pkt_type;87,1727
	unsigned short		protocol;88,1756
	void			(*destructor)destructor90,1784
	unsigned int		truesize;93,1901
	atomic_t		users;94,1926
	unsigned char		*head,head95,1944
				*data,data96,1967
				*tail,tail97,1978
				*end;end98,1989
#define skb_shinfo(106,2176
static inline void kfree_skb(120,2822
static inline void dev_kfree_skb(126,2969
static inline int skb_cloned(131,3052
static inline int skb_shared(143,3279
static inline struct sk_buff *skb_peek(skb_peek161,3848
static inline struct sk_buff *skb_peek_tail(skb_peek_tail182,4518
static inline __u32 skb_queue_len(196,4836
static inline void skb_queue_head_init(201,4930
static inline void __skb_queue_head(226,5655
static inline void __skb_queue_tail(251,6339
static inline struct sk_buff *__skb_dequeue(__skb_dequeue275,6975
static inline void __skb_insert(299,7484
static inline void __skb_append(314,7864
static inline void __skb_unlink(324,8136
static inline struct sk_buff *__skb_dequeue_tail(__skb_dequeue_tail349,8799
static inline unsigned char *__skb_put(__skb_put361,9008
static inline unsigned char *skb_put(skb_put378,9464
static inline unsigned char *__skb_push(__skb_push388,9713
static inline unsigned char *skb_push(skb_push404,10181
static inline unsigned char *__skb_pull(__skb_pull414,10417
static inline unsigned char *skb_pull(skb_pull431,10935
static inline int pskb_may_pull(436,11081
static inline unsigned int skb_headlen(441,11187
static inline int skb_headroom(452,11439
static inline int skb_tailroom(463,11677
static inline void skb_reserve(476,11980
static inline void __skb_queue_purge(491,12430
static inline struct sk_buff *__dev_alloc_skb(__dev_alloc_skb510,13048
static inline struct sk_buff *dev_alloc_skb(dev_alloc_skb531,13743
#define MULTICAST(536,13858

tools/vnet/vnetd/timer.c,296
#define MODULE_NAME 27,939
#undef DEBUG28,967
#define DEBUG 29,980
static Timer *timers timers32,1016
double time_now(39,1163
static int itimer_set(52,1598
void Timer_free(72,2129
int process_timers(90,2566
void Timer_add(103,2881
Timer * Timer_set(122,3367
int Timer_cancel(138,3733

tools/vnet/vnetd/spinlock.c,420
int atomic_read(3,23
int atomic_dec_and_test(7,81
void atomic_inc(15,208
void atomic_set(19,255
void spin_lock_init(23,311
unsigned long _spin_lock_irqsave(27,381
void spin_unlock_irqrestore(32,467
unsigned long _read_lock_irqsave(36,555
void read_unlock_irqrestore(41,639
unsigned long _write_lock_irqsave(45,725
void write_unlock_irqrestore(50,810
void init_MUTEX(54,897
void down(58,985
void up(62,1040

tools/vnet/vnetd/sys_kernel.h,843
#define _VNET_SYS_KERNEL_H_19,825
#define printk 29,1007
#define likely(31,1043
#define unlikely(32,1073
#define current_text_addr(33,1103
#define BUG_ON(35,1137
#define BUG(36,1179
#define kmalloc(37,1217
#define kfree(38,1265
#define in_atomic(39,1307
#define __init41,1338
#define __exit42,1353
#define module_init(44,1369
#define module_exit(45,1392
#define MODULE_LICENSE(46,1415
#define MODULE_PARM(47,1441
#define module_param(48,1467
#define MODULE_PARM_DESC(49,1497
    GFP_USER,52,1536
    GFP_ATOMIC,53,1550
    GFP_KERNEL,54,1566
typedef signed char s8;57,1586
typedef unsigned char u8;58,1610
typedef signed short s16;60,1637
typedef unsigned short u16;61,1663
typedef signed int s32;63,1692
typedef unsigned int u32;64,1716
typedef signed long long s64;66,1743
typedef unsigned long long u64;67,1773

tools/vnet/libxutil/sys_string.c,297
#define deferr(33,1035
extern char *strerror(strerror35,1081
inline static const char * convert_set_base(63,1653
inline static const char * convert_set_sign(84,2138
inline static int convert_get_digit(105,2611
int convert_atoul(127,3152
int convert_atol(159,3873
int path_concat(193,4596

tools/vnet/libxutil/debug.h,481
#define _XUTIL_DEBUG_H_19,821
#define MODULE_NAME 22,866
#define dprintf(31,982
#define wprintf(32,1086
#define iprintf(33,1190
#define eprintf(34,1294
#define dprintf(38,1406
#define wprintf(39,1451
#define iprintf(40,1535
#define eprintf(41,1619
#define dprintf(51,1753
#define wprintf(52,1866
#define iprintf(53,1979
#define eprintf(54,2092
#define dprintf(58,2213
#define wprintf(59,2258
#define iprintf(60,2351
#define eprintf(61,2444
#define IPFMT 70,2622

tools/vnet/libxutil/file_stream.h,37
#define _XUTIL_FILE_STREAM_H_20,835

tools/vnet/libxutil/string_stream.h,195
#define _XUTIL_STRING_STREAM_H_20,837
    char *string;string30,1099
    char *out;out32,1144
    char *in;in34,1185
    int size;36,1228
    char *end;end38,1265
} StringData;39,1280

tools/vnet/libxutil/kernel_stream.c,760
#define BUF_N 39,1266
typedef struct KernelData 42,1320
    spinlock_t lock;44,1422
    unsigned long flags;46,1479
    int buf_n;48,1542
    char buf[buf50,1583
} KernelData;51,1604
static const IOMethods kernel_methods 59,1864
static const KernelData kernel_data 70,2166
static IOStream iokernel 77,2306
IOStream *iostdout iostdout84,2445
IOStream *iostdin iostdin87,2511
IOStream *iostderr iostderr90,2576
IOStream get_stream_kernel(97,2760
static inline void KernelData_lock(105,2895
static inline void KernelData_unlock(113,3082
static inline KernelData *get_kernel_data(get_kernel_data122,3281
void kernel_stream_lock(130,3440
void kernel_stream_unlock(138,3590
static int kernel_write(149,3836
static void kernel_free(167,4348

tools/vnet/libxutil/enum.h,127
#define _XUTIL_ENUM_H_19,825
typedef struct EnumDef 22,892
    int val;23,917
    char *name;name24,930
} EnumDef;25,946

tools/vnet/libxutil/allocate.h,129
#define _XUTIL_ALLOCATE_H_20,832
#define ALLOCATE(23,911
#define ALLOCATE_TYPE(26,1020
typedef void AllocateFailedFn(33,1243

tools/vnet/libxutil/string_stream.c,436
static IOMethods string_methods 35,1288
static inline StringData *get_string_data(get_string_data48,1535
static int string_write(52,1629
static int string_read(63,1871
static int string_error(79,2220
static int string_close(89,2410
static void string_free(101,2677
IOMethods *string_stream_get_methods(string_stream_get_methods111,2893
void string_stream_init(125,3317
IOStream *string_stream_new(string_stream_new147,3957

tools/vnet/libxutil/gzip_stream.c,439
static const IOMethods gzip_methods 41,1335
static inline gzFile get_gzfile(55,1609
static int gzip_write(66,1849
static int gzip_read(77,2133
static int gzip_flush(86,2344
static int gzip_error(97,2641
static int gzip_close(109,2908
static void gzip_free(119,3078
IOStream *gzip_stream_new(gzip_stream_new128,3274
IOStream *gzip_stream_fopen(gzip_stream_fopen143,3652
IOStream *gzip_stream_fdopen(gzip_stream_fdopen163,4149

tools/vnet/libxutil/kernel_stream.h,73
#define _XUTIL_KERNEL_STREAM_H_20,837
#define get_stream_stdout 26,952

tools/vnet/libxutil/allocate.c,403
#  define DEFAULT_TYPE 34,1203
#  define MALLOC(35,1231
#  define FREE(36,1274
#  define DEFAULT_TYPE 44,1464
#  define MALLOC(48,1525
#  define FREE(49,1564
#  define MALLOC(53,1664
#  define FREE(54,1700
AllocateFailedFn *allocate_failed_fn allocate_failed_fn61,1890
void *allocate_type(allocate_type74,2335
void *allocate(allocate90,2699
void deallocate(99,2874
void memzero(111,3058

tools/vnet/libxutil/socket_stream.c,545
#define MODULE_NAME 32,1025
#define DEBUG 33,1052
static const IOMethods socket_methods 45,1421
static inline SocketData * socket_data(59,1691
int socket_stream_check(68,1899
int socket_stream_data(78,2160
int socket_stream_set_addr(94,2513
int socket_stream_set_flags(110,2877
static int socket_write(127,3270
static int socket_read(153,4185
static int socket_flush(167,4592
static int socket_error(176,4773
static int socket_close(186,4962
static void socket_free(195,5129
IOStream *socket_stream_new(socket_stream_new205,5344

tools/vnet/libxutil/sxpr.h,3581
#define _XUTIL_SXPR_H_18,825
#define NULL 36,1085
#define TRUE 40,1121
#define FALSE 44,1158
typedef int16_t TypeCode;48,1200
typedef struct Sxpr 51,1254
    TypeCode type;53,1298
        unsigned long ul;56,1356
        void *ptr;ptr58,1406
    } v;59,1425
} Sxpr;60,1434
static inline unsigned long get_ul(67,1526
static inline void * get_ptr(76,1679
static inline Sxpr obj_ptr(86,1852
static inline Sxpr obj_ul(96,2067
static inline TypeCode get_type(105,2250
static inline int has_type(115,2440
static inline int eq(125,2686
#define T_NONE 130,2829
#define T_NULL 132,2887
#define T_UINT 134,2947
#define T_STRING 136,2999
#define T_ATOM 138,3050
#define T_BOOL 140,3103
#define T_CONS 143,3169
#define T_ERR 146,3223
#define T_NOMEM 148,3303
typedef struct ObjString 150,3340
    int len;151,3367
    char data[data152,3380
} ObjString;153,3398
typedef struct ObjAtom 156,3428
    Sxpr name;157,3453
    Hashcode hashcode;158,3468
    int interned;159,3491
} ObjAtom;160,3509
typedef struct ObjCons 163,3543
    Sxpr car;164,3568
    Sxpr cdr;165,3582
} ObjCons;166,3596
enum PrintFlags 169,3640
    PRINT_RAW 170,3658
    PRINT_RAW           = 0x001,x001170,3658
    PRINT_TYPE 171,3691
    PRINT_TYPE          = 0x002,x002171,3691
    PRINT_PRETTY 172,3724
    PRINT_PRETTY        = 0x004,x004172,3724
    PRINT_COUNTED 173,3757
    PRINT_COUNTED       = 0x008,x008173,3757
    PRINT_ADDR 174,3790
    PRINT_ADDR          = 0x010,x010174,3790
#define OBJI(188,4234
#define OINT(193,4321
#define OERR(199,4410
#define ONOMEM 202,4481
#define ONONE 205,4556
#define ONULL 208,4624
#define OFALSE 211,4687
#define OTRUE 214,4749
static inline Sxpr OBJP(223,4961
static inline Sxpr PTR(231,5130
static inline Sxpr halloc(242,5391
#define HALLOC(252,5686
#define ATOMP(255,5798
#define BOOLP(256,5846
#define CONSP(257,5894
#define ERRP(258,5942
#define INTP(259,5989
#define NOMEMP(260,6037
#define NONEP(261,6086
#define NULLP(262,6134
#define STRINGP(263,6182
#define TRUEP(265,6233
#define OBJ_UINT(268,6315
#define OBJ_INT(270,6385
#define OBJ_STRING(275,6492
#define OBJ_CONS(276,6540
#define OBJ_ATOM(277,6586
#define OBJ_SET(278,6632
#define CAR(279,6677
#define CDR(280,6719
#define CAAR(282,6762
#define CADR(283,6799
#define CDAR(284,6836
#define CDDR(285,6873
static inline Sxpr car(292,7000
static inline Sxpr cdr(301,7164
typedef int ObjPrintFn(305,7239
typedef int ObjEqualFn(306,7303
typedef void ObjFreeFn(307,7349
typedef Sxpr ObjCopyFn(308,7383
typedef struct SxprType 311,7450
    TypeCode type;312,7476
    char *name;name313,7495
    int pointer;314,7511
    ObjPrintFn *print;print315,7528
    ObjEqualFn *equal;equal316,7551
    ObjFreeFn *free;free317,7574
    ObjCopyFn *copy;copy318,7595
} SxprType;319,7616
static inline void hfree(328,7791
static inline Sxpr mkatom(383,9383
static inline Sxpr mkstring(392,9539
static inline Sxpr mkint(401,9675
static inline Sxpr mkbool(410,9807
#define k_list_open 415,9928
#define c_list_open 416,9955
#define k_list_close 417,9982
#define c_list_close 418,10009
#define k_true 419,10036
#define k_false 420,10066
#define c_escape 422,10098
#define c_single_quote 423,10126
#define c_double_quote 424,10154
#define c_string_open 425,10181
#define c_string_close 426,10219
#define c_data_open 428,10258
#define c_data_quote 429,10285
#define c_data_count 430,10312
#define c_var 435,10427
#define c_eval 436,10454
#define c_concat_open 437,10481
#define c_concat_close 438,10508

tools/vnet/libxutil/util.c,154
int print_address(39,1182
int get_protocol_number(59,1866
char *get_protocol_name(get_protocol_name77,2214
char *get_host_name(get_host_name94,2524

tools/vnet/libxutil/mem_stream.c,875
typedef struct MemData 44,1707
    char *buf;buf46,1756
    unsigned long lo;48,1819
    unsigned long hi;50,1913
    unsigned int buf_n;52,1966
    unsigned int buf_max;54,2038
    int err;56,2087
} MemData;57,2100
static inline int mem_len(64,2205
static inline int mem_room(73,2383
static inline char * mem_lo(82,2589
static inline char * mem_hi(91,2803
static inline char * mem_end(100,3006
static int delta_min 111,3376
static IOMethods mem_methods 114,3441
static inline MemData *get_mem_data(get_mem_data127,3670
int mem_stream_avail(136,3863
static void mem_get(147,4134
static void mem_put(165,4578
static int mem_expand(183,5060
static int mem_write(222,6132
static int mem_read(243,6693
static int mem_error(261,7071
static int mem_close(271,7241
static void mem_free(283,7445
IOStream *mem_stream_new_size(mem_stream_new_size296,7816

tools/vnet/libxutil/gzip_stream.h,37
#define _XUTIL_GZIP_STREAM_H_20,824

tools/vnet/libxutil/lexis.c,142
inline static int in_range(33,1110
int is_decimal_number(43,1389
int is_hex_number(60,1849
int is_keyword(82,2377
int is_keychar(92,2615

tools/vnet/libxutil/sxpr.c,2337
int rand(34,1051
#undef free44,1166
static SxprType types[types78,2380
static int type_sup 106,3777
int def_sxpr_type(115,4052
SxprType *get_sxpr_type(get_sxpr_type137,4457
int default_print(151,4746
int default_equal(162,5020
int objprint(177,5469
Sxpr objcopy(192,5923
void objfree(215,6506
int objequal(235,6952
Sxpr assoc(249,7382
Sxpr assocq(267,7816
Sxpr acons(284,8152
Sxpr cons_member(300,8500
Sxpr cons_member_if(313,8898
int cons_subset(325,9289
int cons_set_equal(341,9637
Sxpr cons_remove(359,10165
Sxpr cons_remove_if(370,10508
Sxpr setf(395,11081
Sxpr atom_new(412,11444
void atom_free(437,11926
Sxpr atom_copy(448,12142
int atom_print(465,12470
int atom_equal(475,12689
char * atom_name(491,13025
int atom_length(495,13103
char * string_string(504,13272
int string_length(513,13419
Sxpr string_new(523,13640
Sxpr string_new_n(535,13933
void string_free(555,14344
Sxpr string_copy(563,14439
int needs_escapes(575,14748
char randchar(592,15120
int string_contains(603,15293
int string_delim(611,15468
int _string_print_raw(634,15940
int _string_print_counted(647,16212
int _string_print_quoted(662,16599
int _string_print_string(681,17129
int _string_print(723,18569
int string_print(744,19176
int string_eq(751,19394
int string_equal(761,19654
Sxpr cons_new(783,20247
int cons_push(804,20710
void cons_free(816,20936
Sxpr cons_copy(832,21224
void cons_free_cells(856,21738
int cons_print(873,22142
int cons_equal(900,22862
int cons_length(911,23072
Sxpr nrev(925,23365
static int null_print(953,24018
static int none_print(964,24285
static int int_print(975,24539
static int bool_print(986,24801
static int err_print(997,25079
static int nomem_print(1010,25421
int sxprp(1014,25531
Sxpr sxpr_name(1023,25695
int sxpr_is(1033,25874
int sxpr_elementp(1039,26101
Sxpr sxpr_attributes(1050,26308
Sxpr sxpr_attribute(1064,26580
Sxpr sxpr_children(1080,26898
Sxpr sxpr_child(1091,27113
Sxpr sxpr_child0(1104,27393
Sxpr sxpr_childN(1115,27583
Sxpr sxpr_child_value(1128,27843
static HashTable *symbols symbols1140,28131
static Hashcode sym_hash_fn(1147,28266
static int sym_equal_fn(1157,28481
static void sym_free_fn(1166,28680
static int init_symbols(1177,28934
void cleanup_symbols(1190,29265
Sxpr get_symbol(1200,29456
Sxpr intern(1219,29853

tools/vnet/libxutil/hash_table.c,1150
#define hashsize(49,1684
#define hashmask(50,1718
#define mix(78,2985
static inline ub4 _hash(119,4544
ub4 hash(164,6039
inline HTBucket * get_bucket(176,6359
static void HashTable_init(184,6554
HashTable *HashTable_new(HashTable_new201,6970
void HashTable_free(224,7477
static inline void push_on_bucket(238,7776
int HashTable_set_buckets_n(259,8430
int HashTable_adjust(296,9515
HTEntry * HTEntry_new(320,10312
inline void HTEntry_free(334,10580
inline void HashTable_free_entry(347,10844
inline HTEntry * HashTable_find_entry(365,11350
inline int HashTable_key_equal(388,11972
inline Hashcode HashTable_key_hash(403,12434
static inline int has_key(419,12892
inline HTEntry * HashTable_get_entry(429,13166
inline void * HashTable_get(452,13769
void show_buckets(461,13989
static int print_entry(484,14722
void HashTable_print(497,15107
inline HTEntry * HashTable_add_entry(513,15613
int HashTable_order_bucket(531,16264
inline HTEntry * HashTable_add(560,17113
inline int HashTable_remove_entry(573,17562
inline int HashTable_remove(605,18439
static inline void bucket_clear(636,19283
void HashTable_clear(652,19684

tools/vnet/libxutil/sys_net.c,508
#define PORT_MAX 34,1143
unsigned long bits_to_mask(43,1395
int mask_to_bits(57,1707
inline static int indexof(77,2289
int get_inet_addr(91,2650
char *inet_ntoa(inet_ntoa143,4002
int inet_aton(161,4595
int get_host_address(179,5049
int get_service_port(198,5541
char *get_port_service(get_port_service217,5968
int convert_service_to_port(232,6357
#define MAC_ELEMENT_N 249,6788
#define MAC_DIGIT_N 250,6853
#define MAC_LENGTH 251,6930
int mac_aton(262,7361
char *mac_ntoa(mac_ntoa309,8518

tools/vnet/libxutil/sys_net.h,125
#define _XUTIL_SYS_NET_H_20,831
#define htonl(43,1530
#define ntohl(47,1589
#define htons(51,1648
#define ntohs(55,1707

tools/vnet/libxutil/enum.c,79
int enum_name_to_val(33,1075
char *enum_val_to_name(enum_val_to_name51,1461

tools/vnet/libxutil/lexis.h,564
#define _XUTIL_LEXIS_H_19,827
#define space_class 34,1038
#define sep_class 37,1144
#define comment_class 39,1179
static inline int in_class(47,1404
static inline int in_space_class(56,1630
static inline int in_comment_class(60,1711
static inline int in_sep_class(71,2023
static inline int in_alpha_class(80,2238
static inline int in_octal_digit_class(89,2449
static inline int in_decimal_digit_class(98,2678
static inline int in_hex_digit_class(107,2895
static inline int in_string_quote_class(112,2998
static inline int in_printable_class(116,3080

tools/vnet/libxutil/iostream.h,1049
#define _XUTIL_IOSTREAM_H_20,832
#define IOSTREAM_EOF 37,1116
typedef struct IOStream IOStream;41,1178
typedef struct IOMethods 46,1301
    int (*read)read51,1521
    int (*write)write57,1767
    int (*flush)flush59,1831
    int (*error)error61,1863
    int (*close)close63,1895
    void (*free)free65,1927
    void (*lock)lock67,1959
    void (*unlock)unlock68,1990
} IOMethods;70,2024
struct IOStream 74,2067
    const IOMethods *methods;methods76,2136
    const void *data;data78,2215
    int closed;80,2294
    int written;82,2346
    int read;84,2396
    int nofree;86,2470
static inline int IOStream_read(109,3014
static inline int IOStream_write(134,3615
static inline int IOStream_flush(157,4140
static inline int IOStream_error(172,4489
static inline int IOStream_close(185,4791
static inline int IOStream_is_closed(210,5392
static inline int IOStream_putc(220,5632
static inline int IOStream_getc(237,6018
static inline int IOStream_get_read(255,6343
static inline int IOStream_get_written(264,6530

tools/vnet/libxutil/fd_stream.h,100
#define _XMC_FD_STREAM_H_20,824
typedef struct FDData 26,934
    int fd;28,997
} FDData;29,1009

tools/vnet/libxutil/file_stream.c,696
static const IOMethods file_methods 36,1273
static IOStream _iostdin 46,1480
static IOStream _iostdout 53,1604
static IOStream _iostderr 60,1729
IOStream *iostdin iostdin67,1853
IOStream *iostdout iostdout70,1913
IOStream *iostderr iostderr73,1975
static inline FILE *get_file(get_file80,2099
int file_stream_setvbuf(107,2680
static int file_write(118,2993
static int file_read(129,3284
static int file_flush(138,3509
static int file_error(147,3689
static int file_close(156,3856
static void file_free(166,4023
IOStream *file_stream_new(file_stream_new175,4220
IOStream *file_stream_fopen(file_stream_fopen190,4593
IOStream *file_stream_fdopen(file_stream_fdopen209,5071

tools/vnet/libxutil/sxpr_parser.c,2480
#define dprintf(48,1434
#define dprintf(50,1535
#undef printf53,1587
#define printf(54,1601
static void eprintf(65,1866
static void wprintf(79,2171
    ParseErrorId id;94,2533
    char *message;message95,2554
} ParseError;96,2573
#define PARSE_ERR_FMT 99,2637
static ParseError catalog[catalog102,2750
const static int catalog_n 113,3220
void Parser_set_error_stream(121,3451
static char *get_message(get_message130,3692
static int get_line(145,3946
static int get_column(153,4060
static int get_tok_line(162,4210
static int get_tok_column(170,4364
char *peek_token(peek_token181,4640
int token_len(185,4691
char *copy_token(copy_token195,4901
void new_token(205,5089
static void report_error(218,5400
int Parser_error_message(239,6091
int Parser_error_id(254,6506
int Parser_error(266,6715
int Parser_has_error(275,6910
int Parser_at_eof(284,7079
void ParserState_free(288,7131
int ParserState_new(294,7232
void Parser_pop(310,7589
void Parser_free(326,7909
int Parser_push(339,8212
int Parser_return(344,8381
static void reset(371,8864
Parser * Parser_new(392,9316
static int input_char(419,9874
int save_char(430,10056
static int is_separator(457,10754
int Parser_set_value(461,10829
int Parser_intern(471,11004
int Parser_atom(476,11112
int Parser_string(488,11370
int Parser_data(493,11498
int Parser_uint(498,11624
static int get_escape(503,11756
int Parser_ready(522,12343
Sxpr Parser_get_val(526,12451
Sxpr Parser_get_all(544,12836
static int state_comment(557,13130
static int begin_comment(567,13324
static int end_string(576,13516
static int octaldone(585,13673
static int octaldigit(593,13840
static int state_octal(610,14195
static int hexdone(626,14569
static int hexdigit(634,14738
static int state_hex(651,15094
static int state_escape(671,15637
static int state_string(696,16228
static int begin_string(710,16590
static int end_atom(720,16794
static int state_atom(729,16947
static int begin_atom(746,17336
static int end_data(756,17536
static int counted_data(765,17689
static int counted_data_count(776,17901
static int quoted_data(791,18262
static int quoted_data_delim(807,18679
static int state_data(822,19060
static int begin_data(850,19753
static int state_list(859,19926
static int begin_list(875,20310
static int state_start(879,20402
int begin_start(908,21162
int Parser_input_char(919,21396
int Parser_input_eof(935,21681
int Parser_input(942,21812
int main(975,22541

tools/vnet/libxutil/sys_string.h,254
#define _XUTIL_SYS_STRING_H_20,834
static inline int tolower(38,1240
static inline int isalpha(43,1333
static inline int isdigit(47,1423
static inline int strcasecmp(52,1496
static inline char * strdup(63,1678
static inline size_t strnlen(78,2012

tools/vnet/libxutil/socket_stream.h,266
#define _XEN_LIB_SOCKET_STREAM_H_20,832
typedef struct SocketData 31,1045
    int fd;33,1112
    struct sockaddr_in saddr;35,1177
    struct sockaddr_in daddr;37,1259
    int flags;39,1322
    int buf_n;41,1361
    char buf[buf43,1418
} SocketData;44,1438

tools/vnet/libxutil/mem_stream.h,98
#define _XUTIL_MEM_STREAM_H_20,827
static inline IOStream *mem_stream_new(mem_stream_new28,993

tools/vnet/libxutil/iostream.c,57
int IOStream_vprint(29,1046
int IOStream_print(47,1474

tools/vnet/libxutil/hash_table.h,1420
#define _XUTIL_HASH_TABLE_H_20,834
typedef unsigned long Hashcode;25,911
typedef union TableArg 28,1000
    unsigned long ul;29,1025
    void *ptr;ptr30,1047
} TableArg;31,1062
typedef struct HTEntry 34,1109
    Hashcode hashcode;36,1174
    void *key;key38,1232
    void *value;value40,1283
    struct HTEntry *next;next42,1339
} HTEntry;43,1365
typedef struct HTBucket 46,1410
    int count;48,1480
    HTEntry *head;head50,1547
} HTBucket;51,1566
#define HT_BUCKETS_N 65,1991
typedef struct HashTable HashTable;67,2018
typedef int TableTestFn(70,2112
typedef int TableMapFn(73,2240
typedef void TableFreeFn(76,2363
typedef Hashcode TableHashFn(79,2471
typedef int TableEqualFn(82,2573
typedef int TableOrderFn(85,2675
struct HashTable 92,2969
    HTBucket *buckets;buckets94,3041
    int buckets_n;96,3114
    int entry_count;98,3176
    unsigned long key_size;99,3197
    TableFreeFn *entry_free_fn;entry_free_fn101,3281
    TableHashFn *key_hash_fn;key_hash_fn103,3347
    TableEqualFn *key_equal_fn;key_equal_fn105,3427
    void *user_data;user_data107,3522
typedef unsigned long ub4;131,4808
typedef unsigned char ub1;132,4835
static inline Hashcode hash_hvoid(143,5140
static inline Hashcode hash_string(152,5337
#define HashTable_for_decl(160,5567
#define HashTable_for_each(189,6849
#define HashTable_map(219,7864
#define HKEY(232,8323
#define HVAL(238,8568

tools/vnet/libxutil/sxpr_parser.h,1423
#define _XUTIL_SXPR_PARSER_H_19,833
#define PARSER_BUF_SIZE 30,996
#define PARSER_BUF_INCREMENT 34,1079
typedef int ParserStateFn(37,1128
typedef struct ParserState 39,1181
    struct ParserState *parent;parent40,1210
    Sxpr val;41,1242
    int ival;42,1256
    int count;43,1270
    char delim;44,1285
    ParserStateFn *fn;fn45,1301
    char *name;name46,1324
} ParserState;47,1340
typedef struct Parser 49,1356
    ParserStateFn *begin;begin51,1415
    Sxpr val;53,1465
    IOStream *error_out;error_out55,1536
    int eof;57,1590
    int err;59,1667
    int line_no;61,1722
    int char_no;63,1794
    char *buf;buf65,1849
    char *buf_end;buf_end66,1864
    char *tok;tok67,1883
    char *tok_end;tok_end68,1898
    int tok_begin_line;70,1960
    int tok_begin_char;72,2039
    int flags;74,2089
    ParserState *state;state75,2104
    ParserState *start_state;start_state76,2128
} Parser;77,2158
    PARSE_ERR_NONE=81,2211
    PARSE_ERR_UNSPECIFIED,82,2233
    PARSE_ERR_NOMEM,83,2260
    PARSE_ERR_UNEXPECTED_EOF,84,2281
    PARSE_ERR_TOKEN_TOO_LONG,85,2311
    PARSE_ERR_INVALID_SYNTAX,86,2341
    PARSE_ERR_INVALID_ESCAPE,87,2371
} ParseErrorId;88,2401
    PARSE_INT=94,2489
static inline void Parser_flags_raise(102,2593
static inline void Parser_flags_lower(111,2765
static inline void Parser_flags_clear(119,2910
static inline int Parser_flags(123,2983

tools/vnet/libxutil/fd_stream.c,418
#define MODULE_NAME 32,1017
#define DEBUG 33,1049
static const IOMethods fd_methods 45,1390
static inline FDData * fd_data(59,1624
int fd_stream_check(68,1812
int fd_stream_data(78,2057
static int fd_write(96,2411
static int fd_read(110,2732
static int fd_flush(123,3040
static int fd_error(132,3209
static int fd_close(141,3352
static void fd_free(150,3499
IOStream *fd_stream_new(fd_stream_new160,3694

tools/vnet/libxutil/util.h,32
#define _XEN_LIB_UTIL_H_19,829

tools/vnet/vnet-module/esp.c,1337
static const int DEBUG_ICV 56,1491
#define MODULE_NAME 58,1524
#define DEBUG 59,1552
#undef DEBUG60,1568
int __init esp_module_init(66,1688
void __exit esp_module_exit(70,1739
static inline int roundupto(107,3265
static inline int multipleof(121,3606
static inline int bits_to_bytes(132,3817
static int esp_sa_pad(146,4228
static int esp_sa_encrypt(175,4969
static int esp_sa_decrypt(206,5906
static int esp_sa_digest(231,6658
static int esp_check_icv(253,7261
static int esp_sa_send(295,8499
static void esp_context_free_fn(396,12110
static int esp_sa_recv(416,12618
static u32 esp_sa_size(500,15552
static inline void esp_hmac_digest(524,16307
static void esp_fini(557,17455
static void esp_sa_fini(582,17992
static int esp_cipher_init(597,18300
static int esp_digest_init(640,19719
static int esp_sa_init(687,21110
static SAType esp_sa_type 713,21641
static int esp_skb_header(729,22035
static int esp_protocol_recv(755,22739
static void esp_protocol_icmp_err(805,24062
static struct net_protocol esp_protocol 832,24971
static int esp_protocol_add(837,25098
static int esp_protocol_del(841,25194
static struct inet_protocol esp_protocol 852,25513
static int esp_protocol_add(859,25699
static int esp_protocol_del(864,25789
int __init esp_module_init(877,26096
void __exit esp_module_exit(894,26455

tools/vnet/vnet-module/etherip.c,1016
#define IP_DF	55,1462
#define MODULE_NAME 68,1687
#define DEBUG 69,1714
#undef DEBUG70,1730
int etherip_in_udp 81,2071
void etheriphdr_get_vnet(88,2202
void etheriphdr_set_vnet(104,2587
static int etherip_tunnel_open(119,2968
static void etherip_tunnel_close(127,3095
static inline int skb_make_headroom(131,3149
static int etherip_tunnel_send(157,3936
static TunnelType _etherip_tunnel_type 227,6414
TunnelType *etherip_tunnel_type etherip_tunnel_type234,6585
int etherip_tunnel_create(236,6643
static inline void _nf_bridge_save_header(243,6956
int etherip_protocol_recv(264,7657
static void etherip_protocol_icmp_err(390,11711
static struct net_protocol etherip_protocol 408,12344
static int etherip_protocol_add(413,12481
static int etherip_protocol_del(417,12589
static struct inet_protocol etherip_protocol 427,12911
static int etherip_protocol_add(434,13115
static int etherip_protocol_del(439,13213
int __init etherip_module_init(452,13515
void __exit etherip_module_exit(461,13692

tools/vnet/vnet-module/timer_util.c,171
#define MODULE_NAME 40,1094
#define DEBUG 41,1122
#undef DEBUG42,1138
void timer_init(47,1190
void timer_set(53,1363
void timer_init(61,1521
void timer_set(67,1691

tools/vnet/vnet-module/varp_socket.c,1604
#define __KERNEL_SYSCALLS__38,1227
int errno=39,1255
#define MODULE_NAME 42,1295
#define DEBUG 43,1322
#undef DEBUG44,1338
#define sk_receive_queue 54,1546
#define sk_sleep 55,1585
#define sockfd_put(58,1682
static inline mm_segment_t change_fs(62,1735
static inline _syscall3(69,1897
int bind(105,3020
int connect(114,3260
int sendto(123,3510
int recvfrom(137,3918
int setsockopt(151,4337
int getsockopt(162,4672
int shutdown(173,5008
int getsockname(181,5184
enum VsockFlag 252,7467
    VSOCK_REUSE 253,7484
    VSOCK_BIND 254,7510
    VSOCK_CONNECT 255,7536
    VSOCK_BROADCAST 256,7562
    VSOCK_MULTICAST 257,7588
    VSOCK_NONBLOCK 258,7614
char * socket_flags(266,7737
atomic_t varp_run 283,8290
    VARP_STATE_EXITED 286,8334
    VARP_STATE_RUNNING 287,8362
    VARP_STATE_NONE 288,8390
    VARP_STATE_ERROR 289,8418
atomic_t varp_state 293,8511
int varp_thread_err 295,8564
int varp_mcast_sock 298,8624
int varp_ucast_sock 301,8683
int setsock_reuse(309,8846
int setsock_broadcast(324,9218
int setsock_multicast(339,9614
int setsock_multicast_ttl(367,10539
int create_socket(383,10975
int varp_mcast_open(442,12683
int varp_ucast_open(473,13427
static int handle_varp_skb(487,13824
static int handle_varp_sock(528,14958
int sock_add_wait_queue(565,16127
int sock_remove_wait_queue(585,16584
static void sock_def_readable(601,16947
static void sock_data_ready(611,17209
int sock_set_callback(626,17562
int varp_sockets_open(641,17871
void varp_sockets_close(660,18432
int varp_main(681,18978
void varp_close(724,20361
int varp_open(744,20941

tools/vnet/vnet-module/vif.c,993
#define MODULE_NAME 44,1143
#define DEBUG 45,1170
#undef DEBUG46,1186
#define VIF_TABLE_TTL 50,1279
#define VIF_ENTRY_TTL 53,1373
HashTable *vif_table vif_table56,1444
rwlock_t vif_table_lock 57,1473
struct timer_list vif_table_timer 58,1517
int vif_table_sweeps 59,1557
#define vif_read_lock(61,1584
#define vif_read_unlock(62,1660
#define vif_write_lock(63,1741
#define vif_write_unlock(64,1818
void vif_entry_print(66,1901
void vif_print(77,2289
void vif_decref(96,2812
void vif_incref(103,2934
static Hashcode vif_key_hash_fn(114,3145
static int vif_key_equal_fn(125,3422
static void vif_entry_free_fn(134,3628
static int _vif_lookup(151,3973
int vif_lookup(173,4453
static int _vif_add(191,4850
int vif_remove(225,5571
int vif_remove_vnet(241,5925
void vif_purge(260,6334
void vif_sweep(269,6522
int _vif_create(299,7311
int vif_create(316,7669
int vif_update(335,8099
static void vif_table_timer_fn(351,8432
int vif_init(361,8665
void vif_exit(383,9195

tools/vnet/vnet-module/linux/pfkeyv2.h,8259
#define _LINUX_PFKEY2_H7,175
#define PF_KEY_V2	11,226
#define PFKEYV2_REVISION	12,247
struct sadb_msg 14,281
	uint8_t		sadb_msg_version;15,299
	uint8_t		sadb_msg_type;16,327
	uint8_t		sadb_msg_errno;17,352
	uint8_t		sadb_msg_satype;18,378
	uint16_t	sadb_msg_len;19,405
	uint16_t	sadb_msg_reserved;20,429
	uint32_t	sadb_msg_seq;21,458
	uint32_t	sadb_msg_pid;22,482
struct sadb_ext 26,570
	uint16_t	sadb_ext_len;27,588
	uint16_t	sadb_ext_type;28,612
struct sadb_sa 32,700
	uint16_t	sadb_sa_len;33,717
	uint16_t	sadb_sa_exttype;34,740
	uint32_t	sadb_sa_spi;35,767
	uint8_t		sadb_sa_replay;36,790
	uint8_t		sadb_sa_state;37,816
	uint8_t		sadb_sa_auth;38,841
	uint8_t		sadb_sa_encrypt;39,865
	uint32_t	sadb_sa_flags;40,892
struct sadb_lifetime 44,980
	uint16_t	sadb_lifetime_len;45,1003
	uint16_t	sadb_lifetime_exttype;46,1032
	uint32_t	sadb_lifetime_allocations;47,1065
	uint64_t	sadb_lifetime_bytes;48,1102
	uint64_t	sadb_lifetime_addtime;49,1133
	uint64_t	sadb_lifetime_usetime;50,1166
struct sadb_address 54,1268
	uint16_t	sadb_address_len;55,1290
	uint16_t	sadb_address_exttype;56,1318
	uint8_t		sadb_address_proto;57,1350
	uint8_t		sadb_address_prefixlen;58,1380
	uint16_t	sadb_address_reserved;59,1414
struct sadb_key 63,1514
	uint16_t	sadb_key_len;64,1532
	uint16_t	sadb_key_exttype;65,1556
	uint16_t	sadb_key_bits;66,1584
	uint16_t	sadb_key_reserved;67,1609
struct sadb_ident 71,1701
	uint16_t	sadb_ident_len;72,1721
	uint16_t	sadb_ident_exttype;73,1747
	uint16_t	sadb_ident_type;74,1777
	uint16_t	sadb_ident_reserved;75,1804
	uint64_t	sadb_ident_id;76,1835
struct sadb_sens 80,1926
	uint16_t	sadb_sens_len;81,1945
	uint16_t	sadb_sens_exttype;82,1970
	uint32_t	sadb_sens_dpd;83,1999
	uint8_t		sadb_sens_sens_level;84,2024
	uint8_t		sadb_sens_sens_len;85,2056
	uint8_t		sadb_sens_integ_level;86,2086
	uint8_t		sadb_sens_integ_len;87,2119
	uint32_t	sadb_sens_reserved;88,2150
struct sadb_prop 96,2344
	uint16_t	sadb_prop_len;97,2363
	uint16_t	sadb_prop_exttype;98,2388
	uint8_t		sadb_prop_replay;99,2417
	uint8_t		sadb_prop_reserved[sadb_prop_reserved100,2445
struct sadb_comb 109,2685
	uint8_t		sadb_comb_auth;110,2704
	uint8_t		sadb_comb_encrypt;111,2730
	uint16_t	sadb_comb_flags;112,2759
	uint16_t	sadb_comb_auth_minbits;113,2786
	uint16_t	sadb_comb_auth_maxbits;114,2820
	uint16_t	sadb_comb_encrypt_minbits;115,2854
	uint16_t	sadb_comb_encrypt_maxbits;116,2891
	uint32_t	sadb_comb_reserved;117,2928
	uint32_t	sadb_comb_soft_allocations;118,2958
	uint32_t	sadb_comb_hard_allocations;119,2996
	uint64_t	sadb_comb_soft_bytes;120,3034
	uint64_t	sadb_comb_hard_bytes;121,3066
	uint64_t	sadb_comb_soft_addtime;122,3098
	uint64_t	sadb_comb_hard_addtime;123,3132
	uint64_t	sadb_comb_soft_usetime;124,3166
	uint64_t	sadb_comb_hard_usetime;125,3200
struct sadb_supported 129,3299
	uint16_t	sadb_supported_len;130,3323
	uint16_t	sadb_supported_exttype;131,3353
	uint32_t	sadb_supported_reserved;132,3387
struct sadb_alg 141,3642
	uint8_t		sadb_alg_id;142,3660
	uint8_t		sadb_alg_ivlen;143,3683
	uint16_t	sadb_alg_minbits;144,3709
	uint16_t	sadb_alg_maxbits;145,3737
	uint16_t	sadb_alg_reserved;146,3765
struct sadb_spirange 150,3857
	uint16_t	sadb_spirange_len;151,3880
	uint16_t	sadb_spirange_exttype;152,3909
	uint32_t	sadb_spirange_min;153,3942
	uint32_t	sadb_spirange_max;154,3971
	uint32_t	sadb_spirange_reserved;155,4000
struct sadb_x_kmprivate 159,4103
	uint16_t	sadb_x_kmprivate_len;160,4129
	uint16_t	sadb_x_kmprivate_exttype;161,4161
	u_int32_t	sadb_x_kmprivate_reserved;162,4197
struct sadb_x_sa2 166,4306
	uint16_t	sadb_x_sa2_len;167,4326
	uint16_t	sadb_x_sa2_exttype;168,4352
	uint8_t		sadb_x_sa2_mode;169,4382
	uint8_t		sadb_x_sa2_reserved1;170,4409
	uint16_t	sadb_x_sa2_reserved2;171,4441
	uint32_t	sadb_x_sa2_sequence;172,4473
	uint32_t	sadb_x_sa2_reqid;173,4504
struct sadb_x_policy 177,4598
	uint16_t	sadb_x_policy_len;178,4621
	uint16_t	sadb_x_policy_exttype;179,4650
	uint16_t	sadb_x_policy_type;180,4683
	uint8_t		sadb_x_policy_dir;181,4713
	uint8_t		sadb_x_policy_reserved;182,4742
	uint32_t	sadb_x_policy_id;183,4776
	uint32_t	sadb_x_policy_reserved2;184,4804
struct sadb_x_ipsecrequest 188,4908
	uint16_t	sadb_x_ipsecrequest_len;189,4937
	uint16_t	sadb_x_ipsecrequest_proto;190,4972
	uint8_t		sadb_x_ipsecrequest_mode;191,5009
	uint8_t		sadb_x_ipsecrequest_level;192,5045
	uint16_t	sadb_x_ipsecrequest_reqid;193,5082
struct sadb_x_nat_t_type 200,5330
	uint16_t	sadb_x_nat_t_type_len;201,5357
	uint16_t	sadb_x_nat_t_type_exttype;202,5390
	uint8_t		sadb_x_nat_t_type_type;203,5427
	uint8_t		sadb_x_nat_t_type_reserved[sadb_x_nat_t_type_reserved204,5461
struct sadb_x_nat_t_port 209,5628
	uint16_t	sadb_x_nat_t_port_len;210,5655
	uint16_t	sadb_x_nat_t_port_exttype;211,5688
	uint16_t	sadb_x_nat_t_port_port;212,5725
	uint16_t	sadb_x_nat_t_port_reserved;213,5759
#define SADB_RESERVED	218,5889
#define SADB_GETSPI	219,5914
#define SADB_UPDATE	220,5937
#define SADB_ADD	221,5960
#define SADB_DELETE	222,5980
#define SADB_GET	223,6003
#define SADB_ACQUIRE	224,6023
#define SADB_REGISTER	225,6047
#define SADB_EXPIRE	226,6072
#define SADB_FLUSH	227,6095
#define SADB_DUMP	228,6117
#define SADB_X_PROMISC	229,6139
#define SADB_X_PCHANGE	230,6166
#define SADB_X_SPDUPDATE	231,6193
#define SADB_X_SPDADD	232,6221
#define SADB_X_SPDDELETE	233,6247
#define SADB_X_SPDGET	234,6275
#define SADB_X_SPDACQUIRE	235,6301
#define SADB_X_SPDDUMP	236,6330
#define SADB_X_SPDFLUSH	237,6357
#define SADB_X_SPDSETIDX	238,6385
#define SADB_X_SPDEXPIRE	239,6413
#define SADB_X_SPDDELETE2	240,6441
#define SADB_X_NAT_T_NEW_MAPPING	241,6470
#define SADB_MAX	242,6506
#define SADB_SAFLAGS_PFS	245,6561
#define SADB_SASTATE_LARVAL	248,6623
#define SADB_SASTATE_MATURE	249,6653
#define SADB_SASTATE_DYING	250,6683
#define SADB_SASTATE_DEAD	251,6712
#define SADB_SASTATE_MAX	252,6740
#define SADB_SATYPE_UNSPEC	255,6801
#define SADB_SATYPE_AH	256,6830
#define SADB_SATYPE_ESP	257,6856
#define SADB_SATYPE_RSVP	258,6883
#define SADB_SATYPE_OSPFV2	259,6910
#define SADB_SATYPE_RIPV2	260,6939
#define SADB_SATYPE_MIP	261,6967
#define SADB_X_SATYPE_IPCOMP	262,6994
#define SADB_SATYPE_MAX	263,7025
#define SADB_AALG_NONE	266,7085
#define SADB_AALG_MD5HMAC	267,7112
#define SADB_AALG_SHA1HMAC	268,7141
#define SADB_X_AALG_SHA2_256HMAC	269,7171
#define SADB_X_AALG_SHA2_384HMAC	270,7206
#define SADB_X_AALG_SHA2_512HMAC	271,7241
#define SADB_X_AALG_RIPEMD160HMAC	272,7276
#define SADB_X_AALG_NULL	273,7312
#define SADB_AALG_MAX	274,7353
#define SADB_EALG_NONE	277,7410
#define SADB_EALG_DESCBC	278,7437
#define SADB_EALG_3DESCBC	279,7465
#define SADB_X_EALG_CASTCBC	280,7494
#define SADB_X_EALG_BLOWFISHCBC	281,7525
#define SADB_EALG_NULL	282,7560
#define SADB_X_EALG_AESCBC	283,7588
#define SADB_EALG_MAX	284,7619
#define SADB_X_CALG_NONE	287,7676
#define SADB_X_CALG_OUI	288,7704
#define SADB_X_CALG_DEFLATE	289,7732
#define SADB_X_CALG_LZS	290,7763
#define SADB_X_CALG_LZJH	291,7791
#define SADB_X_CALG_MAX	292,7819
#define SADB_EXT_RESERVED	295,7878
#define SADB_EXT_SA	296,7907
#define SADB_EXT_LIFETIME_CURRENT	297,7931
#define SADB_EXT_LIFETIME_HARD	298,7967
#define SADB_EXT_LIFETIME_SOFT	299,8001
#define SADB_EXT_ADDRESS_SRC	300,8035
#define SADB_EXT_ADDRESS_DST	301,8067
#define SADB_EXT_ADDRESS_PROXY	302,8099
#define SADB_EXT_KEY_AUTH	303,8133
#define SADB_EXT_KEY_ENCRYPT	304,8162
#define SADB_EXT_IDENTITY_SRC	305,8194
#define SADB_EXT_IDENTITY_DST	306,8228
#define SADB_EXT_SENSITIVITY	307,8262
#define SADB_EXT_PROPOSAL	308,8295
#define SADB_EXT_SUPPORTED_AUTH	309,8325
#define SADB_EXT_SUPPORTED_ENCRYPT	310,8361
#define SADB_EXT_SPIRANGE	311,8399
#define SADB_X_EXT_KMPRIVATE	312,8429
#define SADB_X_EXT_POLICY	313,8462
#define SADB_X_EXT_SA2	314,8492
#define SADB_X_EXT_NAT_T_TYPE	316,8581
#define SADB_X_EXT_NAT_T_SPORT	317,8615
#define SADB_X_EXT_NAT_T_DPORT	318,8650
#define SADB_X_EXT_NAT_T_OA	319,8685
#define SADB_EXT_MAX	320,8717
#define SADB_IDENTTYPE_RESERVED	323,8776
#define SADB_IDENTTYPE_PREFIX	324,8810
#define SADB_IDENTTYPE_FQDN	325,8842
#define SADB_IDENTTYPE_USERFQDN	326,8872
#define SADB_IDENTTYPE_MAX	327,8906

tools/vnet/vnet-module/skb_context.h,452
#define __VNET_SKB_CONTEXT_H__21,808
#define SKB_CONTEXT(30,974
#define SKB_CONTEXT(38,1102
typedef struct SkbContext 46,1351
    u32 vnet;47,1379
    u32 addr;48,1393
    int protocol;49,1407
    void *data;data50,1425
    void (*free_fn)free_fn51,1441
    atomic_t refcount;52,1483
    struct SkbContext *next;next53,1506
} SkbContext;54,1535
static inline void SkbContext_decref(60,1649
static inline void SkbContext_incref(72,1961

tools/vnet/vnet-module/random.h,33
#define __VNET_RANDOM_H__20,808

tools/vnet/vnet-module/skb_context.c,215
#define MODULE_NAME 26,905
#define DEBUG 27,932
#undef DEBUG28,948
SkbContext *SkbContext_create(SkbContext_create31,981
void SkbContext_free(48,1515
int SkbContext_push(61,1868
int skb_push_context(80,2395

tools/vnet/vnet-module/random.c,311
#define MODULE_NAME 27,935
#define DEBUG 28,964
#undef DEBUG29,980
static unsigned long seed 38,1135
static unsigned long count 39,1166
void add_random_bytes(46,1306
int get_random_byte(56,1521
void get_random_bytes(68,1763
int __init random_module_init(77,1928
void __exit random_module_exit(85,2095

tools/vnet/vnet-module/sa.c,1648
#define MODULE_NAME 29,931
#define DEBUG 30,959
#undef DEBUG31,975
#define INET_PROTOCOL_MAX 38,1091
static SAType *sa_type[sa_type41,1168
static inline unsigned char InetProtocol_hash(48,1307
int SAType_add(58,1593
int SAType_del(76,1997
int SAType_get(88,2235
static int sa_key_check(100,2498
static u32 random_spi(101,2582
static u32 generate_key(102,2635
static int sa_key_check(110,2870
static unsigned long sa_spi_counter 114,2947
static u32 mangle(125,3301
static u32 random_spi(134,3454
static u32 generate_spi(153,3927
static u32 generate_key(166,4257
int sa_spi_alloc(193,5327
static HashTable *sa_table sa_table212,5795
static u32 sa_id 214,5831
static inline Hashcode sa_table_hash_id(221,5919
static inline Hashcode sa_table_hash_spi(232,6144
static int sa_table_state_fn(244,6484
static int sa_table_id_fn(255,6776
static int sa_table_spi_fn(268,7144
static void sa_table_free_fn(281,7570
int sa_table_init(294,7863
void sa_table_exit(307,8081
int sa_table_delete(315,8199
int sa_table_add(337,8936
SAState * sa_table_lookup_spi(380,9999
SAState * sa_table_lookup_id(405,10607
static int sa_table_replace(429,11243
SAState *SAState_alloc(SAState_alloc451,11691
int SAState_init(474,12331
int SAState_create(499,12885
int sa_create(547,14301
int sa_set(600,16017
int sa_delete(637,16953
int vnet_sa_security(659,17462
int vnet_sa_create(674,17889
static int sa_tunnel_open(690,18296
static void sa_tunnel_close(701,18512
static int sa_tunnel_send(716,18852
static TunnelType _sa_tunnel_type 734,19240
TunnelType *sa_tunnel_type sa_tunnel_type742,19423
int sa_tunnel_create(744,19471

tools/vnet/vnet-module/if_varp.h,1128
#define _VNET_IF_VARP_H21,807
typedef struct Vmac 38,1034
    unsigned char mac[mac39,1056
} Vmac;40,1089
    VARP_ID 46,1188
    VUDP_ID 52,1332
    VFWD_ID 56,1394
    VARP_OP_REQUEST 59,1445
    VARP_OP_ANNOUNCE 61,1496
#define VNETID_SIZE8 64,1526
#define VNETID_SIZE16 65,1551
#define VNETID_SIZE32 66,1593
typedef struct VnetId 68,1636
        uint8_t  vnet8[vnet870,1672
        uint16_t vnet16[vnet1671,1710
        uint32_t vnet32[vnet3272,1750
    } u;73,1790
} __attribute__((packed)) VnetId;74,1799
typedef struct VarpAddr 76,1834
    uint8_t family;77,1860
        uint8_t raw[raw79,1916
        struct in_addr ip4;80,1941
        struct in6_addr ip6;81,1969
    } u;82,1998
} __attribute__((packed)) VarpAddr;84,2028
typedef struct VnetMsgHdr 86,2065
    uint16_t id;87,2093
    uint16_t opcode;88,2110
} __attribute__((packed)) VnetMsgHdr;89,2131
typedef struct VarpHdr 91,2170
  VnetMsgHdr hdr;92,2195
  VnetId vnet;93,2213
  Vmac vmac;94,2228
  VarpAddr addr;95,2241
} __attribute__((packed)) VarpHdr;96,2258
#define VARP_MCAST_ADDR 100,2355
#define VARP_PORT 103,2437

tools/vnet/vnet-module/skb_util.c,1176
#define HIPQUAD(68,1700
#define HIPQUAD	74,1877
#define MODULE_NAME 84,2022
#define DEBUG 85,2049
#undef DEBUG86,2065
int skb_make_room(98,2428
int skb_put_bits(143,3983
int skboffset(222,5887
void skb_print_bits(235,6201
void buf_print(271,7221
void *skb_trim_tail(skb_trim_tail285,7551
static const int DEBUG_SCATTERLIST 293,7683
#define SET_SCATTER_ADDR(296,7772
#define SET_SCATTER_ADDR(298,7827
int skb_scatterlist(310,8215
void print_skb_data(385,10641
        struct tcphdr  *th;th392,10857
        struct udphdr  *uh;uh393,10885
        struct icmphdr *icmph;icmph394,10913
        struct igmphdr *igmph;igmph395,10944
        struct iphdr   *ipiph;ipiph396,10975
        unsigned char  *raw;raw397,11006
        struct iphdr   *iph;iph401,11085
        struct ipv6hdr *ipv6h;ipv6h402,11114
        struct arpheader  *arph;arph403,11145
        struct ipxhdr  *ipxh;ipxh404,11178
        unsigned char  *raw;raw405,11208
        struct ethhdr  *ethernet;ethernet409,11285
        unsigned char  *raw;raw410,11319
void print_skb(519,15280
void print_ethhdr(523,15425
void print_iphdr(535,15775
void print_udphdr(549,16229

tools/vnet/vnet-module/vif.h,367
#define _VNET_VIF_H_20,803
typedef struct VifKey 32,983
    struct VnetId vnet;33,1007
    struct Vmac vmac;34,1031
} VifKey;35,1053
typedef struct Vif 37,1064
    struct VnetId vnet;38,1085
    struct Vmac vmac;39,1109
    atomic_t refcount;40,1131
    unsigned long timestamp;41,1154
    int flags;42,1183
} Vif;43,1198
    VIF_FLAG_PERSISTENT 46,1213

tools/vnet/vnet-module/tunnel.c,802
#define MODULE_NAME 40,1095
#define DEBUG 41,1122
#undef DEBUG42,1138
HashTable *tunnel_table tunnel_table46,1222
rwlock_t tunnel_table_lock 47,1254
#define tunnel_read_lock(49,1302
#define tunnel_read_unlock(50,1384
#define tunnel_write_lock(51,1471
#define tunnel_write_unlock(52,1554
void Tunnel_free(54,1643
void Tunnel_print(60,1765
int Tunnel_create(76,2200
void TunnelStats_update(108,3012
static inline Hashcode tunnel_table_key_hash_fn(120,3300
static int tunnel_table_key_equal_fn(124,3409
static void tunnel_table_entry_free_fn(128,3521
int Tunnel_init(136,3720
int Tunnel_lookup(160,4370
int Tunnel_open(182,5061
int Tunnel_add(212,5835
int Tunnel_del(227,6171
int Tunnel_send(242,6519
int __init tunnel_module_init(258,7027
void __exit tunnel_module_exit(262,7093

tools/vnet/vnet-module/vnet_ioctl.c,1833
#define MODULE_NAME 53,1401
#define DEBUG 54,1428
#undef DEBUG55,1444
#define PROC_ROOT 64,1580
#define PROC_ROOT_LEN 65,1607
#define MODULE_ROOT 66,1631
    VNET_POLICY 69,1676
    VNET_VNETS,70,1697
    VNET_VIFS,71,1713
    VNET_VARP,72,1728
    VNET_PEERS,73,1743
typedef struct proc_dir_entry ProcEntry;76,1763
typedef struct inode Inode;77,1804
typedef struct file File;78,1832
static int ProcEntry_has_name(88,2365
static int proc_get_parser(100,2793
static int proc_open_fn(117,3142
static ssize_t proc_read_fn(133,3608
static ssize_t proc_write_fn(147,3978
static int proc_flush_fn(155,4137
    SEEK_SET 170,4517
    SEEK_CUR 172,4576
    SEEK_END 174,4631
static loff_t proc_lseek_fn(178,4675
static int proc_ioctl_fn(197,5050
static ssize_t proc_policy_write_fn(204,5219
static int proc_policy_release_fn(230,5918
static int proc_io_open(254,6516
static ssize_t proc_io_read_fn(267,6783
static int proc_io_release_fn(299,7562
static int proc_vnets_open_fn(308,7776
static int proc_vifs_open_fn(317,7965
static int proc_peers_open_fn(326,8152
static int proc_varp_open_fn(335,8346
static struct file_operations proc_policy_ops 344,8534
static struct file_operations proc_vnets_ops 354,8800
static struct file_operations proc_vifs_ops 360,8949
static struct file_operations proc_peers_ops 366,9096
static struct file_operations proc_varp_ops 372,9245
static ProcEntry *proc_fs_root proc_fs_root378,9392
static int proc_path_init(380,9438
static ProcEntry * ProcFS_lookup(404,9955
static ProcEntry *ProcFS_register(ProcFS_register433,10750
static ProcEntry *ProcFS_mkdir(ProcFS_mkdir446,11117
static void ProcFS_remove(458,11426
static void ProcFS_rmrec_entry(462,11530
static void ProcFS_rmrec(474,11878
void __init ProcFS_init(485,12118
void __exit ProcFS_exit(505,12869

tools/vnet/vnet-module/sa_algorithm.h,676
#define __VNET_SA_ALGORITHM_H__20,808
typedef struct SADigestInfo 25,894
    u16 icv_truncbits;26,924
    u16 icv_fullbits;27,947
} SADigestInfo;28,969
typedef struct SACipherInfo 30,986
    u16 blockbits;31,1016
    u16 defkeybits;32,1035
} SACipherInfo;33,1055
typedef struct SACompressInfo 35,1072
    u16 threshold;36,1104
} SACompressInfo;37,1123
typedef struct SAAlgorithm 39,1142
    char *name;name40,1171
    u8 available;41,1187
        SADigestInfo digest;43,1217
        SACipherInfo cipher;44,1246
        SACompressInfo compress;45,1275
    } info;46,1308
    struct sadb_alg alg;47,1320
} SAAlgorithm;48,1345
#define MAX_KEY_BITS 61,1884

tools/vnet/vnet-module/vnet.c,1273
#define MODULE_NAME 86,1955
#define DEBUG 87,1982
#undef DEBUG88,1998
int vnet_security_default 93,2068
Vnet *vnet_physical vnet_physical96,2146
HashTable *vnet_table vnet_table99,2212
rwlock_t vnet_lock 101,2243
#define vnet_table_read_lock(103,2283
#define vnet_table_read_unlock(104,2359
#define vnet_table_write_lock(105,2440
#define vnet_table_write_unlock(106,2517
void Vnet_decref(112,2688
void Vnet_incref(123,2892
void Vnet_print(128,2980
void vnet_print(149,3550
int Vnet_alloc(169,4017
int Vnet_create(185,4328
int Vnet_add(200,4612
int Vnet_del(229,5293
int Vnet_lookup(259,6147
static int vnet_key_equal_fn(281,6558
static Hashcode vnet_key_hash_fn(285,6659
static void vnet_entry_free_fn(294,6851
void vnet_table_free(299,6968
int vnet_table_init(314,7277
static int vnet_setup(345,8055
int vnet_init(370,8692
void vnet_exit(386,8979
inline int _skb_xmit(394,9103
int skb_xmit(463,10818
int vnet_skb_send(477,11150
int vnet_skb_recv(508,12119
int vnet_check_context(534,12740
static int vnet_tunnel_create(571,13679
int vnet_tunnel_lookup(601,14509
int vnet_tunnel_send(617,14917
static char *vnet_encaps vnet_encaps640,15521
static void __exit vnet_module_exit(642,15555
static int __init vnet_module_init(657,15866

tools/vnet/vnet-module/tunnel.h,857
#define __VNET_TUNNEL_H__20,808
typedef struct TunnelType 39,1046
    const char *name;name40,1074
    int (*open)open41,1096
    int (*send)send42,1136
    void (*close)close43,1197
} TunnelType;44,1239
typedef struct TunnelStats 46,1254
    int bytes;47,1283
    int packets;48,1298
    int dropped_bytes;49,1315
    int dropped_packets;50,1338
} TunnelStats;51,1363
typedef struct TunnelKey 53,1379
    struct VnetId vnet;54,1406
    struct VarpAddr addr;55,1430
} TunnelKey;56,1456
typedef struct Tunnel 58,1470
    struct TunnelKey key;60,1548
    atomic_t refcount;62,1602
    struct TunnelType *type;type64,1649
    struct TunnelStats send_stats;66,1701
    void *data;data68,1769
    struct Tunnel *base;base70,1829
} Tunnel;71,1854
static inline void Tunnel_decref(79,2011
static inline void Tunnel_incref(90,2258

tools/vnet/vnet-module/esp.h,1112
#define __VNET_ESP_H__20,805
typedef struct ESPHdr 36,1050
    u32 spi;38,1122
    u32 seq;40,1163
    u8  data[data43,1268
} ESPHdr;44,1285
typedef struct ESPPadding 50,1433
    u8 pad_n;51,1461
    u8 protocol;52,1475
} ESPPadding;53,1492
static const int ESP_HDR_N 56,1552
static const int ESP_PAD_N 59,1650
    SASTATE_VOID,62,1707
    SASTATE_ACQUIRE,63,1725
    SASTATE_VALID,64,1746
    SASTATE_ERROR,65,1765
    SASTATE_EXPIRED,66,1784
    SASTATE_DEAD,67,1805
typedef struct ESPCipher 73,1871
    u8 *key;key75,1921
    int key_n;77,1963
    u8 *iv;iv79,2017
    int iv_n;81,2057
    int pad_n;83,2114
    int block_n;85,2167
    struct crypto_tfm *tfm;tfm87,2220
} ESPCipher;88,2248
typedef struct ESPDigest 91,2288
    u8 *key;key93,2338
    int key_n;95,2379
    u8 icv_n;97,2428
    u8 icv_full_n;99,2490
    u8 *icv_tmp;icv_tmp101,2555
    void (*icv)icv103,2625
    struct crypto_tfm *tfm;tfm109,2826
} ESPDigest;110,2854
typedef struct ESPState 112,2868
    struct ESPCipher cipher;113,2894
    struct ESPDigest digest;114,2923
} ESPState;115,2952

tools/vnet/vnet-module/vnet_eval.c,677
#define MODULE_NAME 58,1366
#define DEBUG 59,1393
#undef DEBUG60,1409
static int ctrl_vnet_add(71,1658
static int ctrl_vif_add(100,2361
static int ctrl_vif_del(118,2729
static int eval_varp_print(134,3045
static int eval_varp_list(142,3208
static int eval_varp_mcaddr(150,3365
static int eval_varp_flush(164,3647
int eval_vnet_add(175,3883
static int eval_vnet_del(219,5009
static int eval_vnet_list(231,5257
static int eval_vif_add(239,5427
static int eval_vif_del(257,5859
static int eval_vif_list(273,6242
int eval_peer_add(288,6560
static int eval_peer_del(318,7240
static int eval_peer_list(339,7708
int vnet_eval_defs(345,7834
int vnet_eval(361,8259

tools/vnet/vnet-module/vnet_forward.c,1054
#define MODULE_NAME 68,1674
#define DEBUG 69,1701
#undef DEBUG70,1717
typedef struct VnetPeer 75,1810
    struct VarpAddr addr;76,1836
    uint16_t port;77,1862
    atomic_t refcount;78,1881
    int tx_packets;79,1904
    int rx_packets;80,1924
} VnetPeer;81,1944
static HashTable *vnet_peer_table vnet_peer_table83,1957
static rwlock_t vnet_peer_table_lock 84,1999
#define vnet_peer_read_lock(86,2057
#define vnet_peer_read_unlock(87,2145
#define vnet_peer_write_lock(88,2238
#define vnet_peer_write_unlock(89,2327
static void VnetPeer_decref(91,2422
static void VnetPeer_incref(98,2565
static void VnetPeer_print(103,2668
static int VnetPeer_forward(114,3106
int vnet_peer_get(200,5987
int vnet_peer_add(210,6246
int vnet_peer_del(238,6865
void vnet_peer_print(248,7081
int vnet_forward_send(261,7403
int vnet_forward_recv(281,7831
static Hashcode peer_key_hash_fn(354,10175
static int peer_key_equal_fn(360,10329
static void peer_entry_free_fn(364,10439
int vnet_forward_init(370,10602
void vnet_forward_exit(386,11046

tools/vnet/vnet-module/etherip.h,32
#define _VNET_ETHERIP_H_20,807

tools/vnet/vnet-module/vnet_dev.h,33
#define _VNET_VNET_DEV_H_20,808

tools/vnet/vnet-module/varp_util.c,50
static int hex16(20,777
int VnetId_aton(43,1241

tools/vnet/vnet-module/timer_util.h,165
#define _VNET_TIMER_UTIL_H_21,805
#define timer_cancel 26,872
#define timer_list 31,947
#define HZ 32,974
#define jiffies 33,1000
#define timer_cancel 34,1054

tools/vnet/vnet-module/vnet_dev.c,733
#define MODULE_NAME 47,1337
#define DEBUG 48,1364
#undef DEBUG49,1380
static void vnet_dev_destructor(60,1653
static struct net_device_stats *vnet_dev_get_stats(vnet_dev_get_stats72,1906
static int vnet_dev_change_mtu(78,2103
void vnet_dev_remove(95,2476
static int vnet_dev_open(102,2649
static int vnet_dev_stop(109,2764
static int vnet_dev_hard_start_xmit(116,2878
void vnet_dev_set_multicast_list(157,3927
static int vnet_dev_do_ioctl(161,3994
void vnet_dev_tx_timeout(167,4117
static int vnet_dev_hard_header(176,4438
int vnet_device_mac(189,4808
void vnet_dev_mac(201,5062
static void vnet_dev_init(209,5224
static int vnet_dev_setup(241,6209
static inline int roundupto(261,6711
int vnet_dev_add(272,7011

tools/vnet/vnet-module/vnet.h,506
#define __VNET_VNET_H__20,806
struct net_device 33,1016
    char name[name34,1036
    char tap[tap35,1061
    int  tapfd;36,1080
typedef struct Vnet 54,1286
    struct VnetId vnet;56,1328
    atomic_t refcount;58,1380
    int security;60,1460
    char device[device61,1478
    struct net_device *dev;dev63,1506
    int header_n;66,1574
    int mtu;67,1592
    struct net_device_stats stats;69,1628
    int recursion;70,1663
} Vnet;71,1682
    VNET_PHYS 102,2954
    VNET_VIF 103,2973

tools/vnet/vnet-module/varp.c,3821
#define MODULE_NAME 72,1777
#define DEBUG 73,1804
#undef DEBUG74,1820
#define VARP_ENTRY_TTL 108,2560
#define VARP_PROBE_MAX 111,2643
#define VARP_PROBE_INTERVAL 114,2724
#define VARP_QUEUE_MAX 117,2815
#define VARP_TABLE_BUCKETS 120,2907
    VARP_STATE_INCOMPLETE 124,2974
    VARP_STATE_REACHABLE 125,3005
    VARP_STATE_FAILED 126,3035
    VARP_FLAG_PROBING 131,3098
    VARP_FLAG_PERMANENT 132,3125
typedef struct VarpKey 136,3187
    VnetId vnet;138,3248
    Vmac vmac;140,3297
} VarpKey;141,3312
typedef struct VarpEntry 144,3359
    VarpKey key;146,3416
    VarpAddr addr;148,3473
    unsigned long timestamp;150,3527
    short state;152,3574
    short flags;154,3609
    atomic_t refcount;156,3654
    rwlock_t lock;158,3694
    unsigned long lflags;159,3713
    atomic_t probes;162,3783
    struct timer_list timer;164,3828
    void (*error)error165,3857
    struct sk_buff_head queue;167,3954
    int queue_max;169,4023
    atomic_t deleted;170,4042
} VarpEntry;171,4064
typedef struct VarpTable 174,4134
    HashTable *table;table176,4162
    struct timer_list timer;179,4209
    rwlock_t lock;181,4239
    struct semaphore mutex;182,4258
    int entry_ttl;184,4287
    int probe_max;185,4306
    int probe_interval;186,4325
    int queue_max;187,4349
} VarpTable;189,4369
static VarpTable *varp_table varp_table192,4406
static char *varp_mcaddr varp_mcaddr195,4495
u32 varp_mcast_addr 198,4571
u16 varp_port 201,4630
char *varp_device varp_device203,4650
#define VarpTable_read_lock(205,4682
#define VarpTable_read_unlock(208,4793
#define VarpTable_write_lock(211,4909
#define VarpTable_write_unlock(214,5022
#define VarpEntry_lock(217,5140
#define VarpEntry_unlock(220,5275
void varp_dprint(232,5685
void varp_flush(240,5806
static int device_ucast_addr(245,5883
int varp_ucast_addr(262,6226
int vnet_get_device(279,6651
int vnet_get_device_address(294,6991
int varp_ucast_addr(311,7299
void varp_print(320,7406
static inline int addr_route(340,8110
static inline int addr_route(356,8389
#define HH_DATA_MOD	366,8627
#define LL_RESERVED_SPACE(367,8650
#define ip_eth_mc_map(374,8802
int varp_send(387,9168
int varp_solicit(525,13232
int VarpEntry_get_flags(535,13453
int VarpEntry_set_flags(546,13701
void VarpEntry_print(559,13950
static void VarpEntry_free(591,15245
void VarpEntry_incref(600,15423
void VarpEntry_decref(609,15624
void VarpEntry_error(620,15842
void VarpEntry_schedule(635,16259
static void varp_timer_fn(645,16525
static void varp_error_fn(701,18401
VarpEntry * VarpEntry_new(710,18628
static Hashcode varp_key_hash_fn(738,19438
static int varp_key_equal_fn(749,19720
static void varp_entry_free_fn(758,19929
void VarpTable_free(771,20217
void VarpTable_schedule(804,21194
static void varp_table_timer_fn(813,21436
void VarpTable_print(825,21678
VarpTable * VarpTable_new(844,22172
VarpEntry * VarpTable_add(881,23199
int VarpTable_remove(916,24080
int VarpTable_remove_vnet(932,24595
int varp_remove_vnet(950,25043
VarpEntry * VarpTable_lookup(968,25508
int VarpEntry_send(992,26231
int VarpEntry_resolve(1018,27006
void VarpEntry_process_queue(1061,28358
static int varp_multicast(1078,28789
int VarpEntry_output(1091,29161
int VarpEntry_update(1127,30182
int VarpTable_update(1159,31123
int varp_update(1194,32111
static inline int VarpEntry_sweepable(1205,32420
static inline int VarpTable_old(1209,32565
void VarpTable_sweep(1218,32829
void VarpTable_flush(1254,33818
int varp_handle_request(1286,34849
int varp_announce_vif(1309,35424
int varp_handle_announce(1329,35912
int varp_handle_message(1346,36408
int varp_output(1431,39295
int varp_set_mcast_addr(1473,40323
static void varp_init_mcast_addr(1486,40651
int varp_init(1501,40978
void varp_exit(1522,41392

tools/vnet/vnet-module/sxpr_util.h,30
#define _SXPR_UTIL__H_20,798

tools/vnet/vnet-module/vnet_ioctl.h,35
#define _VNET_VNET_IOCTL_H_20,804

tools/vnet/vnet-module/skb_util.h,702
#define _VNET_SKB_UTIL_H_20,808
#    define NEED_ETH_HDR55,1820
#  define NEED_ETH_HDR58,1860
static inline struct ethhdr *eth_hdr(eth_hdr63,1912
static inline unsigned char *__skb_pull_vn(__skb_pull_vn74,2199
static inline unsigned char *skb_pull_vn(skb_pull_vn80,2387
static inline int skb_route(95,2769
static inline int skb_route(116,3218
struct arpheader134,3658
	unsigned short	ar_hrd;136,3677
	unsigned short	ar_pro;137,3735
	unsigned char	ar_hln;138,3793
	unsigned char	ar_pln;139,3850
	unsigned short	ar_op;140,3907
	unsigned char		ar_sha[ar_sha146,4048
	unsigned char		ar_sip[ar_sip147,4112
	unsigned char		ar_tha[ar_tha148,4165
	unsigned char		ar_tip[ar_tip149,4229

tools/vnet/vnet-module/if_etherip.h,612
#define _VNET_IF_ETHERIP_H_20,810
#define __KERNEL__25,890
#undef __KERNEL__31,1111
#define CONFIG_ETHERIP_EXT36,1159
#define ETHERIP_VERSION 42,1269
struct etheriphdr 44,1296
    __u16    reserved:reserved46,1354
             version:version47,1380
    __u16    version:version49,1442
            reserved:reserved50,1466
    __u8 vnet[vnet54,1552
#define ETHERIP_VERSION 61,1659
struct etheriphdr63,1686
    __u16    reserved:reserved66,1744
             version:version67,1770
    __u16    version:version69,1832
            reserved:reserved70,1856
#define IPPROTO_ETHERIP 80,1979

tools/vnet/vnet-module/sxpr_util.c,221
int stringof(24,865
int child_string(37,1107
int intof(44,1269
int child_int(60,1557
int vnetof(67,1711
int child_vnet(77,1882
int macof(84,2041
int child_mac(94,2215
int addrof(101,2379
int child_addr(114,2621

tools/vnet/vnet-module/sa.h,2419
#define __VNET_SA_H__20,798
#define CRYPTO_MAX_KEY_BYTES 37,1006
#define CRYPTO_MAX_KEY_BITS 38,1049
#define CRYPTO_MAX_ALG_NAME	42,1152
typedef struct SALimits 45,1192
    u64 bytes_soft;46,1218
    u64 bytes_hard;47,1238
    u64 packets_soft;48,1258
    u64 packets_hard;49,1280
} SALimits;50,1302
typedef struct SACounts 52,1315
    u64 bytes;53,1341
    u64 packets;54,1356
    u32 integrity_failures;55,1373
} SACounts;56,1401
typedef struct SAReplay 58,1414
    int replay;59,1440
    u32 send_seq;60,1456
    u32 recv_seq;61,1474
    u32 bitmap;62,1492
    u32 replay_window;63,1508
} SAReplay;64,1531
typedef struct SAKey 66,1544
    char name[name67,1567
    int bits;68,1603
    char key[key69,1617
} SAKey;70,1653
typedef struct SAKeying 72,1663
    u8 state;73,1689
    u8 dying;74,1703
} SAKeying;75,1717
typedef struct SAIdent 77,1730
    u32 id;78,1755
    u32 spi;79,1767
    u32 addr;80,1780
    u32 protocol;81,1794
} SAIdent;82,1812
typedef struct SAState 87,1873
    atomic_t refcount;88,1898
    spinlock_t lock;89,1921
    struct SAIdent ident;91,1965
    int security;93,2018
    struct SAKeying keying;95,2061
    struct SACounts counts;97,2117
    struct SALimits limits;99,2173
    struct SAReplay replay;101,2231
    struct SAKey digest;103,2288
    struct SAKey cipher;105,2342
    struct SAKey compress;107,2397
    struct SAType *type;type109,2454
    void *data;data111,2519
} SAState;112,2535
typedef struct SAType 114,2551
    char *name;name115,2575
    int protocol;116,2591
    int (*init)init117,2609
    void (*fini)fini118,2654
    int (*recv)recv119,2688
    int (*send)send120,2742
    u32 (*size)size121,2819
} SAType;122,2862
typedef struct SAInfo 127,2958
    SAIdent ident;129,3005
    int security;131,3051
    SAKey digest;133,3106
    SAKey cipher;135,3161
    SAKey compress;137,3218
    SALimits limits;139,3269
    int replay_window;141,3327
} SAInfo;142,3350
enum sa_alg_type 144,3361
    SA_ALG_DIGEST 145,3380
    SA_ALG_CIPHER 146,3403
    SA_ALG_COMPRESS 147,3426
static inline void SAState_incref(165,3935
static inline void SAState_decref(174,4140
static inline int SAState_send(186,4461
static inline int SAState_recv(190,4597
static inline int SAState_size(194,4702
    SA_AUTH 203,4972
    SA_CONF 204,4989
    SA_STATE_ACQUIRE 208,5016
    SA_STATE_VALID 209,5042

tools/vnet/vnet-module/vnet_forward.h,32
#define _VNET_FORWARD_H_20,807

tools/vnet/vnet-module/varp.h,525
#define _VNET_VARP_H21,804
#define CONFIG_VARP_GRATUITOUS 35,954
    VARP_UPDATE_CREATE 42,1043
    VARP_UPDATE_QUEUE 43,1071
static inline int mac_is_multicast(79,2146
static inline int mac_is_broadcast(88,2339
static inline int mac_is_zero(98,2635
#define MACFMT 104,2815
#define MAC6TUPLE(106,2863
static inline u32 subnet_net(114,3094
static inline u32 subnet_addr(124,3317
static inline u32 subnet_broadcast_addr(134,3555
static inline int subnet_broadcast(146,3947
static inline int subnet_local(157,4254

tools/vnet/vnet-module/vnet_eval.h,126
#define _VNET_EVAL_H_20,804
typedef struct SxprEval 25,863
    Sxpr name;26,889
    int (*fn)fn27,904
} SxprEval;28,956

tools/vnet/vnet-module/varp_util.h,343
#define _VNET_VARP_UTIL_H20,808
#define VARP_ADDR_BUF 25,916
#define VNET_ID_BUF 28,993
#define NIPQUAD(31,1033
#define NIP6(39,1203
static inline const char *VarpAddr_ntoa(VarpAddr_ntoa51,1478
static inline const char *VnetId_ntoa(VnetId_ntoa67,1895
static inline struct VnetId toVnetId(85,2494
static inline int VnetId_eq(91,2652

tools/vnet/vnet-module/sa_algorithm.c,1076
#define MODULE_NAME 29,1023
#define DEBUG 30,1051
#undef DEBUG31,1067
static SAAlgorithm digest_alg[digest_alg46,1473
static SAAlgorithm cipher_alg[cipher_alg124,3314
static SAAlgorithm compress_alg[compress_alg219,5453
static SAAlgorithm *sa_algorithm_by_id(sa_algorithm_by_id250,6118
static SAAlgorithm *sa_algorithm_by_name(sa_algorithm_by_name260,6366
SAAlgorithm *sa_digest_by_id(sa_digest_by_id270,6639
SAAlgorithm *sa_cipher_by_id(sa_cipher_by_id274,6736
SAAlgorithm *sa_compress_by_id(sa_compress_by_id278,6833
SAAlgorithm *sa_digest_by_name(sa_digest_by_name282,6934
SAAlgorithm *sa_cipher_by_name(sa_cipher_by_name286,7033
SAAlgorithm *sa_compress_by_name(sa_compress_by_name290,7132
SAAlgorithm *sa_digest_by_index(sa_digest_by_index294,7235
SAAlgorithm *sa_cipher_by_index(sa_cipher_by_index298,7319
SAAlgorithm *sa_compress_by_index(sa_compress_by_index302,7403
static void sa_algorithm_probe(306,7491
static char *crypto_modules[crypto_modules324,8112
static void sa_module_probe(344,8385
void sa_algorithm_probe_all(359,8789

tools/include/xen-sys/NetBSD/evtchn.h,777
#define __NetBSD_EVTCHN_H__32,1471
#define IOCTL_EVTCHN_BIND_VIRQ	37,1543
struct ioctl_evtchn_bind_virq 39,1625
	unsigned int virq;40,1657
	unsigned int port;41,1677
#define IOCTL_EVTCHN_BIND_INTERDOMAIN	47,1771
struct ioctl_evtchn_bind_interdomain 49,1866
	unsigned int remote_domain,50,1905
	unsigned int remote_domain, remote_port;50,1905
	unsigned int port;51,1947
#define IOCTL_EVTCHN_BIND_UNBOUND_PORT	57,2034
struct ioctl_evtchn_bind_unbound_port 59,2131
	unsigned int remote_domain;60,2171
	unsigned int port;61,2200
#define IOCTL_EVTCHN_UNBIND	67,2269
struct ioctl_evtchn_unbind 69,2344
	unsigned int port;70,2373
#define IOCTL_EVTCHN_NOTIFY	76,2449
struct ioctl_evtchn_notify 78,2524
	unsigned int port;79,2553
#define IOCTL_EVTCHN_RESET	83,2647

tools/include/xen-sys/NetBSD/privcmd.h,1247
#define __NetBSD_PRIVCMD_H__31,1429
typedef struct privcmd_hypercall35,1497
    unsigned long op;37,1532
    unsigned long arg[arg38,1554
    long retval;39,1580
} privcmd_hypercall_t;40,1597
typedef struct privcmd_mmap_entry 42,1621
    unsigned long va;43,1657
    unsigned long mfn;44,1679
    unsigned long npages;45,1702
} privcmd_mmap_entry_t;46,1728
typedef struct privcmd_mmap 48,1754
    int num;49,1784
    domid_t dom;50,1797
    privcmd_mmap_entry_t *entry;entry51,1834
} privcmd_mmap_t;52,1867
typedef struct privcmd_mmapbatch 54,1887
    int num;55,1922
    domid_t dom;56,1973
    unsigned long addr;57,2010
    unsigned long *arr;arr58,2057
} privcmd_mmapbatch_t;59,2125
typedef struct privcmd_blkmsg61,2150
    unsigned long op;63,2182
    void         *buf;buf64,2204
    int           buf_size;65,2227
} privcmd_blkmsg_t;66,2255
#define IOCTL_PRIVCMD_HYPERCALL 73,2415
#define IOCTL_PRIVCMD_INITDOMAIN_EVTCHN_OLD 78,2531
#define IOCTL_PRIVCMD_MMAP 82,2628
#define IOCTL_PRIVCMD_MMAPBATCH 84,2702
#define IOCTL_PRIVCMD_GET_MACH2PHYS_START_MFN 86,2781
#define IOCTL_PRIVCMD_INITDOMAIN_EVTCHN 95,3037
#define EVTCHN_RESET 100,3211
#define EVTCHN_BIND 102,3306
#define EVTCHN_UNBIND 104,3423

tools/include/xen-sys/Linux/evtchn.h,699
#define __LINUX_PUBLIC_EVTCHN_H__34,1588
#define IOCTL_EVTCHN_BIND_VIRQ	40,1692
struct ioctl_evtchn_bind_virq 42,1792
	unsigned int virq;43,1824
#define IOCTL_EVTCHN_BIND_INTERDOMAIN	50,1944
struct ioctl_evtchn_bind_interdomain 52,2057
	unsigned int remote_domain,53,2096
	unsigned int remote_domain, remote_port;53,2096
#define IOCTL_EVTCHN_BIND_UNBOUND_PORT	60,2231
struct ioctl_evtchn_bind_unbound_port 62,2346
	unsigned int remote_domain;63,2386
#define IOCTL_EVTCHN_UNBIND	69,2464
struct ioctl_evtchn_unbind 71,2558
	unsigned int port;72,2587
#define IOCTL_EVTCHN_NOTIFY	78,2656
struct ioctl_evtchn_notify 80,2750
	unsigned int port;81,2779
#define IOCTL_EVTCHN_RESET	85,2873

tools/include/xen-sys/Linux/gntdev.h,822
#define __LINUX_PUBLIC_GNTDEV_H__34,1583
struct ioctl_gntdev_grant_ref 36,1618
	uint32_t domid;38,1698
	uint32_t ref;40,1769
#define IOCTL_GNTDEV_MAP_GRANT_REF 48,1990
struct ioctl_gntdev_map_grant_ref 50,2094
	uint32_t count;53,2193
	uint32_t pad;54,2210
	uint64_t index;57,2308
	struct ioctl_gntdev_grant_ref refs[refs60,2405
#define IOCTL_GNTDEV_UNMAP_GRANT_REF 68,2665
struct ioctl_gntdev_unmap_grant_ref 70,2780
	uint64_t index;73,2906
	uint32_t count;75,2966
	uint32_t pad;76,2983
#define IOCTL_GNTDEV_GET_OFFSET_FOR_VADDR 91,3635
struct ioctl_gntdev_get_offset_for_vaddr 93,3753
	uint64_t vaddr;96,3881
	uint64_t offset;99,3985
	uint32_t count;101,4075
	uint32_t pad;102,4092
#define IOCTL_GNTDEV_SET_MAX_GRANTS 111,4289
struct ioctl_gntdev_set_max_grants 113,4395
	uint32_t count;116,4516

tools/include/xen-sys/Linux/privcmd.h,1025
#define __LINUX_PUBLIC_PRIVCMD_H__34,1592
#define __user39,1669
typedef struct privcmd_hypercall42,1692
	__u64 op;44,1727
	__u64 arg[arg45,1738
} privcmd_hypercall_t;46,1753
typedef struct privcmd_mmap_entry 48,1777
	__u64 va;49,1813
	__u64 mfn;50,1824
	__u64 npages;51,1836
} privcmd_mmap_entry_t;52,1851
typedef struct privcmd_mmap 54,1877
	int num;55,1907
	domid_t dom;56,1917
	privcmd_mmap_entry_t __user *entry;entry57,1951
} privcmd_mmap_t;58,1988
typedef struct privcmd_mmapbatch 60,2008
	int num;61,2043
	domid_t dom;62,2091
	__u64 addr;63,2125
	xen_pfn_t __user *arr;arr64,2161
} privcmd_mmapbatch_t;65,2229
typedef struct privcmd_mmapbatch_v2 67,2254
	unsigned int num;68,2292
	domid_t dom;69,2345
	__u64 addr;70,2384
	const xen_pfn_t __user *arr;arr71,2425
	int __user *err;err72,2475
} privcmd_mmapbatch_v2_t;73,2521
#define IOCTL_PRIVCMD_HYPERCALL	80,2687
#define IOCTL_PRIVCMD_MMAP	82,2779
#define IOCTL_PRIVCMD_MMAPBATCH	84,2861
#define IOCTL_PRIVCMD_MMAPBATCH_V2	86,2953

tools/include/xen-sys/SunOS/xenbus.h,120
#define _XEN_SYS_XENBUS_H30,1336
#define	IOCTL_XENBUS_XENSTORE_EVTCHN 35,1408
#define	IOCTL_XENBUS_NOTIFY_UP 40,1521

tools/include/xen-sys/SunOS/evtchn.h,711
#define _XEN_SYS_EVTCHN_H31,1402
#define	_IOC_NONE	33,1429
#define	_IOC(34,1449
#define IOCTL_EVTCHN_BIND_VIRQ	40,1583
struct ioctl_evtchn_bind_virq 42,1683
	unsigned int virq;43,1715
#define IOCTL_EVTCHN_BIND_INTERDOMAIN	50,1835
struct ioctl_evtchn_bind_interdomain 52,1948
	unsigned int remote_domain,53,1987
	unsigned int remote_domain, remote_port;53,1987
#define IOCTL_EVTCHN_BIND_UNBOUND_PORT 60,2122
struct ioctl_evtchn_bind_unbound_port 62,2259
        unsigned int remote_domain;63,2299
#define IOCTL_EVTCHN_UNBIND	69,2384
struct ioctl_evtchn_unbind 71,2478
	unsigned int port;72,2507
#define IOCTL_EVTCHN_NOTIFY	78,2565
struct ioctl_evtchn_notify 80,2659
	unsigned int port;81,2688

tools/include/xen-sys/SunOS/privcmd.h,807
#define	_XEN_SYS_PRIVCMD_H32,1376
#define	__PRIVCMD_IOC	51,1693
#define	IOCTL_PRIVCMD_HYPERCALL	53,1749
#define	IOCTL_PRIVCMD_MMAP	54,1800
#define	IOCTL_PRIVCMD_MMAPBATCH	55,1846
typedef struct __privcmd_hypercall 57,1898
	unsigned long op;58,1935
	unsigned long arg[arg59,1954
} privcmd_hypercall_t;60,1977
typedef struct __privcmd_mmap_entry 62,2001
	unsigned long va;63,2039
	unsigned long mfn;64,2058
	unsigned long npages;65,2078
} privcmd_mmap_entry_t;66,2101
typedef struct __privcmd_mmap 68,2126
	int num;69,2158
	domid_t dom;70,2168
	privcmd_mmap_entry_t *entry;entry71,2202
} privcmd_mmap_t;72,2232
typedef struct __privcmd_mmapbatch 74,2251
	int num;75,2288
	domid_t dom;76,2332
	unsigned long addr;77,2366
	unsigned long *arr;arr78,2411
} privcmd_mmapbatch_t;79,2478

tools/include/xen-sys/MiniOS/privcmd.h,260
#define __MINIOS_PUBLIC_PRIVCMD_H__2,36
typedef struct privcmd_hypercall26,1145
	uint64_t op;28,1180
	uint64_t arg[arg29,1194
} privcmd_hypercall_t;30,1212
typedef struct privcmd_mmap_entry 32,1236
	uint64_t mfn;33,1272
} privcmd_mmap_entry_t;34,1287

tools/python/xen/lowlevel/netlink/libnetlink.c,562
void rtnl_close(28,698
int rtnl_open_byproto(33,767
int rtnl_open(83,2351
int rtnl_wilddump_request(88,2487
               struct nlmsghdr nlh;91,2578
               struct rtgenmsg g;92,2614
int rtnl_send(111,3202
int rtnl_dump_request(121,3476
int rtnl_dump_filter(148,4291
int rtnl_talk(229,7145
int rtnl_listen(350,11584
int rtnl_from_file(422,14071
int addattr32(477,15672
int addattr_l(493,16181
int addraw_l(511,16746
int rta_addattr32(524,17214
int rta_addattr_l(541,17788
int parse_rtattr(559,18422
int parse_rtattr_byindex(572,18849

tools/python/xen/lowlevel/netlink/libnetlink.h,389
#define __LIBNETLINK_H__ 2,25
struct rtnl_handle9,157
       int                     fd;11,178
       struct sockaddr_nl      local;12,213
       struct sockaddr_nl      peer;13,251
       __u32                   seq;14,288
       __u32                   dump;15,324
typedef int (*rtnl_filter_t)rtnl_filter_t24,742
#define parse_rtattr_nested(46,1944
#define NLMSG_TAIL(54,2253

tools/python/xen/lowlevel/netlink/netlink.c,627
#define PKG 6,81
  int opened;10,150
  struct rtnl_handle rth;11,164
} PyRtnlObject;12,190
static PyObject* PyRtnl_new(15,234
static int PyRtnl_init(21,383
static void PyRtnl_dealloc(33,640
static PyObject* pyrtnl_talk(40,761
static PyObject* pyrtnl_wilddump_request(62,1245
static PyObject* pyrtnl_dump_request(79,1647
static int dump_filter_helper(99,2119
static PyObject* pyrtnl_dump_filter(117,2571
static PyMethodDef PyRtnl_methods[PyRtnl_methods143,3141
static PyTypeObject PyRtnlType 155,3586
static PyMethodDef methods[methods197,5704
static char doc[doc201,5752
PyMODINIT_FUNC initnetlink(203,5795

tools/python/xen/lowlevel/acm/acm.c,650
#define PERROR(36,903
static PyObject *acm_error_obj;acm_error_obj40,1019
static void *__getssid(__getssid43,1082
    #define SSID_BUFFER_SIZE 46,1224
static PyObject *policy(policy74,2064
static PyObject *getssid(getssid105,3103
static PyObject *getdecision(getdecision149,4534
const char bad_arg[bad_arg207,6306
const char ctrlif_op[ctrlif_op208,6355
const char hv_op_err[hv_op_err209,6417
static PyObject *chgpolicy(chgpolicy211,6479
static PyObject *getpolicy(getpolicy284,9166
static PyObject *relabel_domains(relabel_domains324,10300
static PyMethodDef acmMethods[acmMethods385,12175
PyMODINIT_FUNC initacm(397,12838

tools/python/xen/lowlevel/process/process.c,195
pyprocess_activate(40,1663
pyprocess_clear(77,2363
pyprocess_abandon_latest(97,2737
static struct PyMethodDef pyprocess_module_methods[pyprocess_module_methods150,3993
initprocess(161,4452

tools/python/xen/lowlevel/scf/scf.c,287
#define	XEND_FMRI 29,1243
#define	XEND_PG 30,1292
static PyObject *scf_exc;scf_exc32,1318
scf_exception(35,1359
pyscf_get_bool(45,1627
pyscf_get_int(76,2340
pyscf_get_string(102,2987
static struct PyMethodDef pyscf_module_methods[pyscf_module_methods136,3963
initscf(147,4367

tools/python/xen/lowlevel/xc/xc.c,6630
#define ARRAY_SIZE(27,576
#define PyMODINIT_FUNC 31,702
#define PKG 34,749
#define CLS 35,779
#define FLASK_CTX_LEN 37,797
static PyObject *xc_error_obj,xc_error_obj39,825
static PyObject *xc_error_obj, *zero;zero39,825
    PyObject_HEAD;42,881
    xc_interface *xc_handle;xc_handle43,900
} XcObject;44,929
static PyObject *pyxc_error_to_exception(pyxc_error_to_exception50,1062
static PyObject *pyxc_domain_dumpcore(pyxc_domain_dumpcore89,1988
static PyObject *pyxc_domain_create(pyxc_domain_create107,2426
static PyObject *pyxc_domain_max_vcpus(pyxc_domain_max_vcpus155,4013
static PyObject *pyxc_domain_pause(pyxc_domain_pause169,4345
static PyObject *pyxc_domain_unpause(pyxc_domain_unpause174,4465
static PyObject *pyxc_domain_destroy_hook(pyxc_domain_destroy_hook179,4589
static PyObject *pyxc_domain_destroy(pyxc_domain_destroy189,4777
static PyObject *pyxc_domain_shutdown(pyxc_domain_shutdown194,4901
static PyObject *pyxc_domain_resume(pyxc_domain_resume208,5244
static PyObject *pyxc_vcpu_setaffinity(pyxc_vcpu_setaffinity223,5583
static PyObject *pyxc_domain_sethandle(pyxc_domain_sethandle261,6672
static PyObject *pyxc_domain_getinfo(pyxc_domain_getinfo297,7520
static PyObject *pyxc_vcpu_getinfo(pyxc_vcpu_getinfo368,10050
static PyObject *pyxc_getBitSize(pyxc_getBitSize427,11856
static PyObject *pyxc_linux_build(pyxc_linux_build447,12596
static PyObject *pyxc_get_hvm_param(pyxc_get_hvm_param539,15620
static PyObject *pyxc_set_hvm_param(pyxc_set_hvm_param559,16213
static int token_value(579,16812
static int next_bdf(585,16925
static PyObject *pyxc_test_assign_device(pyxc_test_assign_device606,17420
static PyObject *pyxc_assign_device(pyxc_assign_device638,18280
static PyObject *pyxc_deassign_device(pyxc_deassign_device670,19120
static PyObject *pyxc_get_device_group(pyxc_get_device_group702,19968
static PyObject *pyxc_nvram_init(pyxc_nvram_init767,21554
static PyObject *pyxc_set_os_type(pyxc_set_os_type782,21871
static void pyxc_dom_extract_cpuid(800,22256
static PyObject *pyxc_create_cpuid_dict(pyxc_create_cpuid_dict817,22701
static PyObject *pyxc_dom_check_cpuid(pyxc_dom_check_cpuid836,23139
static PyObject *pyxc_dom_set_policy_cpuid(pyxc_dom_set_policy_cpuid859,23840
static PyObject *pyxc_dom_set_cpuid(pyxc_dom_set_cpuid875,24203
static PyObject *pyxc_dom_set_machine_address_size(pyxc_dom_set_machine_address_size899,24946
static PyObject *pyxc_dom_suppress_spurious_page_faults(pyxc_dom_suppress_spurious_page_faults915,25329
static PyObject *pyxc_hvm_build(pyxc_hvm_build932,25741
static PyObject *pyxc_evtchn_alloc_unbound(pyxc_evtchn_alloc_unbound1008,28357
static PyObject *pyxc_evtchn_reset(pyxc_evtchn_reset1027,28968
static PyObject *pyxc_physdev_map_pirq(pyxc_physdev_map_pirq1045,29437
static PyObject *pyxc_physdev_pci_access_modify(pyxc_physdev_pci_access_modify1064,30087
static PyObject *pyxc_readconsolering(pyxc_readconsolering1086,30799
static unsigned long pages_to_kib(1135,32155
static PyObject *pyxc_pages_to_kib(pyxc_pages_to_kib1141,32258
static PyObject *pyxc_physinfo(pyxc_physinfo1151,32481
static PyObject *pyxc_topologyinfo(pyxc_topologyinfo1188,33909
#define MAX_CPU_INDEX 1190,33962
#undef MAX_CPU_INDEX1277,36914
static PyObject *pyxc_numainfo(pyxc_numainfo1280,36938
#define MAX_NODE_INDEX 1282,36987
#undef MAX_NODE_INDEX1380,40765
static PyObject *pyxc_xeninfo(pyxc_xeninfo1383,40790
static PyObject *pyxc_sedf_domain_set(pyxc_sedf_domain_set1437,43004
static PyObject *pyxc_sedf_domain_get(pyxc_sedf_domain_get1459,43844
static PyObject *pyxc_shadow_control(pyxc_shadow_control1481,44597
static PyObject *pyxc_shadow_mem_control(pyxc_shadow_mem_control1504,45220
static PyObject *pyxc_sched_id_get(pyxc_sched_id_get1534,46066
static PyObject *pyxc_sched_credit_domain_set(pyxc_sched_credit_domain_set1543,46290
static PyObject *pyxc_sched_credit_domain_get(pyxc_sched_credit_domain_get1570,47101
static PyObject *pyxc_sched_credit2_domain_set(pyxc_sched_credit2_domain_set1586,47589
static PyObject *pyxc_sched_credit2_domain_get(pyxc_sched_credit2_domain_get1610,48321
static PyObject *pyxc_domain_setmaxmem(pyxc_domain_setmaxmem1625,48754
static PyObject *pyxc_domain_set_target_mem(pyxc_domain_set_target_mem1640,49123
static PyObject *pyxc_domain_set_memmap_limit(pyxc_domain_set_memmap_limit1658,49560
static PyObject *pyxc_domain_ioport_permission(pyxc_domain_ioport_permission1673,49953
static PyObject *pyxc_domain_irq_permission(pyxc_domain_irq_permission1695,50705
static PyObject *pyxc_domain_iomem_permission(pyxc_domain_iomem_permission1718,51410
static PyObject *pyxc_domain_set_time_offset(pyxc_domain_set_time_offset1741,52195
static PyObject *pyxc_domain_set_tsc_info(pyxc_domain_set_tsc_info1756,52558
static PyObject *pyxc_domain_disable_migrate(pyxc_domain_disable_migrate1770,52918
static PyObject *pyxc_domain_send_trigger(pyxc_domain_send_trigger1784,53243
static PyObject *pyxc_send_debug_keys(pyxc_send_debug_keys1804,53861
static PyObject *dom_op(dom_op1822,54344
static PyObject *pyxc_tmem_control(pyxc_tmem_control1837,54685
static PyObject *pyxc_tmem_shared_auth(pyxc_tmem_shared_auth1884,56024
static PyObject *pyxc_dom_set_memshr(pyxc_dom_set_memshr1906,56637
static PyObject *cpumap_to_cpulist(cpumap_to_cpulist1921,56984
static PyObject *pyxc_cpupool_create(pyxc_cpupool_create1947,57579
static PyObject *pyxc_cpupool_destroy(pyxc_cpupool_destroy1965,58165
static PyObject *pyxc_cpupool_getinfo(pyxc_cpupool_getinfo1980,58526
static PyObject *pyxc_cpupool_addcpu(pyxc_cpupool_addcpu2015,59398
static PyObject *pyxc_cpupool_removecpu(pyxc_cpupool_removecpu2035,59966
static PyObject *pyxc_cpupool_movedomain(pyxc_cpupool_movedomain2055,60546
static PyObject *pyxc_cpupool_freeinfo(pyxc_cpupool_freeinfo2074,61124
static PyObject *pyflask_context_to_sid(pyflask_context_to_sid2090,61443
static PyObject *pyflask_sid_to_context(pyflask_sid_to_context2136,62470
static PyObject *pyflask_load(pyflask_load2168,63316
static PyObject *pyflask_getenforce(pyflask_getenforce2197,63977
static PyObject *pyflask_setenforce(pyflask_setenforce2219,64423
static PyObject *pyflask_access(pyflask_access2249,65165
static PyMethodDef pyxc_methods[pyxc_methods2286,66393
static PyObject *PyXc_getattr(PyXc_getattr2937,92956
static PyObject *PyXc_new(PyXc_new2942,93069
PyXc_init(2955,93324
static void PyXc_dealloc(2965,93524
static PyTypeObject PyXcType 2975,93727
static PyMethodDef xc_methods[xc_methods3017,95818
PyMODINIT_FUNC initxc(3019,95867

tools/python/xen/lowlevel/flask/flask.c,685
#define PKG 17,470
#define CLS 18,503
#define CTX_LEN 20,524
static PyObject *xc_error_obj;xc_error_obj22,546
    PyObject_HEAD;25,595
    xc_interface *xc_handle;xc_handle26,614
} XcObject;27,643
static PyObject *pyflask_context_to_sid(pyflask_context_to_sid29,656
static PyObject *pyflask_sid_to_context(pyflask_sid_to_context75,1680
static PyObject *pyflask_load(pyflask_load107,2511
static PyObject *pyflask_getenforce(pyflask_getenforce136,3169
static PyObject *pyflask_setenforce(pyflask_setenforce158,3612
static PyObject *pyflask_access(pyflask_access188,4351
static PyMethodDef pyflask_methods[pyflask_methods225,5576
PyMODINIT_FUNC initflask(282,7752

tools/python/xen/lowlevel/checkpoint/checkpoint.h,631
#define _CHECKPOINT_H_ 4,52
    dt_unknown,14,195
    dt_pv,15,211
    dt_hvm,16,222
    dt_pvhvm 17,234
} checkpoint_domtype;18,273
    xc_interface *xch;xch21,313
    xc_evtchn *xce;xce22,336
    struct xs_handle* xsh;23,390
    int watching_shutdown;24,439
    unsigned int domid;26,506
    checkpoint_domtype domtype;27,530
    int fd;28,562
    int suspend_evtchn;30,575
    char* errstr;32,600
    volatile int suspended;35,661
    volatile int done;36,689
    pthread_t suspend_thr;37,712
    sem_t suspended_sem;38,739
    sem_t resumed_sem;39,764
    timer_t timer;40,787
} checkpoint_state;41,806

tools/python/xen/lowlevel/checkpoint/libcheckpoint.c,1162
static char errbuf[errbuf18,277
char* checkpoint_error(43,1300
void checkpoint_init(48,1371
int checkpoint_open(70,1750
void checkpoint_close(138,3295
static int noop_switch_logdirty(167,3865
int checkpoint_start(172,3956
int checkpoint_suspend(203,4632
int checkpoint_wait(223,5099
int checkpoint_resume(252,5694
int checkpoint_postflush(286,6515
int checkpoint_settimer(295,6713
int delete_suspend_timer(323,7308
static int setup_suspend_evtchn(337,7605
static void release_suspend_evtchn(360,8173
static int setup_shutdown_watch(369,8447
static int check_shutdown(387,8949
static void release_shutdown_watch(435,9972
static int evtchn_suspend(450,10307
static int compat_suspend(482,11021
static int pollfd(500,11408
static int switch_qemu_logdirty(531,12085
static int suspend_hvm(576,13262
static int suspend_qemu(596,13694
static int resume_qemu(632,14468
static int send_qemu(646,14810
static void *suspend_thread(suspend_thread707,16313
static int create_suspend_timer(753,17362
void block_timer(771,17756
void unblock_timer(781,17894
static int create_suspend_thread(791,18036
static void stop_suspend_thread(821,18766

tools/python/xen/lowlevel/checkpoint/checkpoint.c,905
#define PKG 10,126
static PyObject* CheckpointError;12,165
  checkpoint_state cps;16,233
  unsigned int interval;19,299
  int armed;20,324
  PyObject* suspend_cb;22,338
  PyObject* postcopy_cb;23,362
  PyObject* checkpoint_cb;24,387
  PyThreadState* threadstate;26,415
} CheckpointObject;27,445
static PyObject* Checkpoint_new(33,600
static int Checkpoint_init(48,929
static void Checkpoint_dealloc(53,1022
static PyObject* pycheckpoint_open(60,1158
static PyObject* pycheckpoint_close(79,1568
static PyObject* pycheckpoint_start(96,1951
static PyMethodDef Checkpoint_methods[Checkpoint_methods182,4152
static PyTypeObject CheckpointType 192,4473
static PyMethodDef methods[methods234,6594
static char doc[doc238,6642
PyMODINIT_FUNC initcheckpoint(240,6681
static int suspend_trampoline(265,7239
static int postcopy_trampoline(309,8174
static int checkpoint_trampoline(337,8744

tools/python/xen/lowlevel/xs/xs.c,2641
#define PyMODINIT_FUNC 42,1254
#define PKG 45,1301
#define CLS 46,1331
static PyObject *xs_error;xs_error48,1349
typedef struct XsHandle 52,1420
    PyObject_HEAD;53,1446
    struct xs_handle *xh;xh54,1465
    PyObject *watches;watches55,1491
} XsHandle;56,1514
static void xs_set_error(58,1527
static inline struct xs_handle *xshandle(xshandle64,1615
#define xspy_read_doc 82,2090
static PyObject *xspy_read(xspy_read92,2512
#define xspy_write_doc 118,3057
static PyObject *xspy_write(xspy_write128,3382
#define xspy_ls_doc 154,3930
static PyObject *xspy_ls(xspy_ls164,4281
#define xspy_mkdir_doc 194,4928
static PyObject *xspy_mkdir(xspy_mkdir202,5147
#define xspy_rm_doc 221,5498
static PyObject *xspy_rm(xspy_rm230,5876
#define xspy_get_permissions_doc 249,6240
static PyObject *xspy_get_permissions(xspy_get_permissions258,6618
#define xspy_set_permissions_doc 302,7714
static PyObject *xspy_set_permissions(xspy_set_permissions312,8137
#define xspy_watch_doc 393,10268
#define MAX_STRLEN(403,10649
static PyObject *xspy_watch(xspy_watch405,10723
#define xspy_read_watch_doc 445,11789
static PyObject *xspy_read_watch(xspy_read_watch452,11974
#define xspy_unwatch_doc 496,13145
static PyObject *xspy_unwatch(xspy_unwatch505,13400
#define xspy_transaction_start_doc 528,13954
static PyObject *xspy_transaction_start(xspy_transaction_start535,14146
#define xspy_transaction_end_doc 557,14639
static PyObject *xspy_transaction_end(xspy_transaction_end566,14968
#define xspy_introduce_domain_doc 606,15881
static PyObject *xspy_introduce_domain(xspy_introduce_domain616,16248
#define xspy_set_target_doc 637,16704
static PyObject *xspy_set_target(xspy_set_target647,17081
#define xspy_resume_domain_doc 667,17489
static PyObject *xspy_resume_domain(xspy_resume_domain676,17914
#define xspy_release_domain_doc 695,18289
static PyObject *xspy_release_domain(xspy_release_domain704,18590
#define xspy_close_doc 724,18968
static PyObject *xspy_close(xspy_close731,19139
#define xspy_get_domain_path_doc 752,19526
static PyObject *xspy_get_domain_path(xspy_get_domain_path760,19782
static void remove_watch(790,20412
static int parse_transaction_path(811,20954
static PyObject *none(none832,21386
#define XSPY_METH(845,21579
static PyMethodDef xshandle_methods[xshandle_methods851,21798
static PyObject *xshandle_getattr(xshandle_getattr873,22751
xshandle_new(879,22892
xshandle_init(900,23351
static void xshandle_dealloc(921,23849
static PyTypeObject xshandle_type 933,24064
static PyMethodDef xs_methods[xs_methods975,26160
PyMODINIT_FUNC initxs(977,26209

tools/python/xen/lowlevel/xl/xl.c,3040
#define ARRAY_SIZE(45,1279
#define PyMODINIT_FUNC 49,1405
#define CLS 52,1452
#define Py_ssize_t 55,1547
static PyObject *xl_error_obj;xl_error_obj58,1578
int genwrap__obj_init(60,1610
int genwrap__string_set(76,1930
PyObject *genwrap__string_get(genwrap__string_get98,2426
PyObject *genwrap__ull_get(genwrap__ull_get105,2559
int genwrap__ull_set(110,2660
PyObject *genwrap__ll_get(genwrap__ll_get133,3255
int genwrap__ll_set(138,3338
static int fixed_bytearray_set(157,3758
static PyObject *fixed_bytearray_get(fixed_bytearray_get199,4696
int attrib__libxl_cpuid_policy_list_set(210,4963
int attrib__libxl_cpumap_set(215,5067
int attrib__libxl_cpuarray_set(227,5310
int attrib__libxl_domain_build_state_ptr_set(232,5396
int attrib__libxl_file_reference_set(237,5507
int attrib__libxl_hwcap_set(242,5605
int attrib__libxl_key_value_list_set(247,5685
int attrib__libxl_mac_set(252,5783
int attrib__libxl_string_list_set(257,5889
int attrib__libxl_uuid_set(262,5981
int attrib__struct_in_addr_set(267,6111
PyObject *attrib__libxl_cpuid_policy_list_get(attrib__libxl_cpuid_policy_list_get272,6197
PyObject *attrib__libxl_cpumap_get(attrib__libxl_cpumap_get277,6296
PyObject *attrib__libxl_cpuarray_get(attrib__libxl_cpuarray_get294,6665
PyObject *attrib__libxl_domain_build_state_ptr_get(attrib__libxl_domain_build_state_ptr_get313,7123
PyObject *attrib__libxl_file_reference_get(attrib__libxl_file_reference_get318,7229
PyObject *attrib__libxl_hwcap_get(attrib__libxl_hwcap_get323,7322
PyObject *attrib__libxl_key_value_list_get(attrib__libxl_key_value_list_get328,7397
PyObject *attrib__libxl_mac_get(attrib__libxl_mac_get333,7490
PyObject *attrib__libxl_string_list_get(attrib__libxl_string_list_get338,7586
PyObject *attrib__libxl_uuid_get(attrib__libxl_uuid_get343,7673
PyObject *attrib__struct_in_addr_get(attrib__struct_in_addr_get348,7793
    PyObject_HEAD;354,7891
    libxl_ctx ctx;355,7910
    xentoollog_logger_stdiostream *logger;logger356,7929
    xentoollog_level minmsglevel;357,7972
} XlObject;358,8006
static PyObject *pyxl_list_domains(pyxl_list_domains360,8019
static PyObject *pyxl_domid_to_name(pyxl_domid_to_name391,8739
static PyObject *pyxl_domain_shutdown(pyxl_domain_shutdown407,9066
static PyObject *pyxl_domain_destroy(pyxl_domain_destroy419,9413
static PyObject *pyxl_domain_pause(pyxl_domain_pause431,9763
static PyObject *pyxl_domain_unpause(pyxl_domain_unpause443,10079
static PyObject *pyxl_domain_rename(pyxl_domain_rename455,10401
static PyObject *pyxl_pci_add(pyxl_pci_add468,10806
static PyObject *pyxl_pci_del(pyxl_pci_del487,11347
static PyObject *pyxl_pci_parse(pyxl_pci_parse507,11923
static PyMethodDef pyxl_methods[pyxl_methods530,12478
static PyObject *PyXl_getattr(PyXl_getattr554,13596
static PyObject *PyXl_new(PyXl_new559,13709
PyXl_init(574,14045
static void PyXl_dealloc(591,14513
static PyTypeObject PyXlType 600,14724
static PyMethodDef xl_methods[xl_methods642,16815
PyMODINIT_FUNC initxl(644,16864

tools/python/ptsname/ptsname.c,172
#define PyMODINIT_FUNC 14,319
static PyObject *do_ptsname(do_ptsname17,366
static PyMethodDef ptsname_methods[ptsname_methods36,681
PyMODINIT_FUNC initptsname(41,786

tools/xcutils/xc_restore.c,13
main(19,356

tools/xcutils/readnotes.c,209
static xc_interface *xch;xch19,323
static void print_string_note(21,350
static void print_numeric_note(27,522
static void print_l1_mfn_valid_note(37,811
static int print_notes(59,1378
int main(124,3092

tools/xcutils/xc_save.c,350
static struct suspendinfo 26,511
    xc_interface *xch;xch27,539
    xc_evtchn *xce;xce28,562
    int suspend_evtchn;29,609
    int domid;30,633
    unsigned int flags;31,648
} si;32,672
static int compat_suspend(38,833
static int evtchn_suspend(52,1176
static int suspend(74,1631
static int switch_qemu_logdirty(105,2753
main(167,4662

tools/xcutils/lsevtchn.c,17
int main(11,157

tools/libxl/xl_cmdimpl.c,7668
#define CHK_ERRNO(44,1240
#define MUST(53,1770
int logfile 63,2301
libxl_ctx ctx;66,2379
static uint32_t domid;69,2446
static const char *common_domname;common_domname70,2469
static int fd_lock 71,2504
static const char savefileheader_magic[savefileheader_magic74,2531
static const char migrate_receiver_banner[migrate_receiver_banner77,2619
static const char migrate_receiver_ready[migrate_receiver_ready79,2727
static const char migrate_permission_to_go[migrate_permission_to_go81,2812
static const char migrate_report[migrate_report83,2909
struct save_file_header 93,3251
    char magic[magic94,3277
    uint32_t byteorder;96,3376
    uint32_t mandatory_flags;97,3431
    uint32_t optional_flags;98,3499
    uint32_t optional_data_len;99,3566
enum action_on_shutdown 103,3647
    ACTION_DESTROY,104,3673
    ACTION_RESTART,106,3694
    ACTION_RESTART_RENAME,107,3714
    ACTION_PRESERVE,109,3742
    ACTION_COREDUMP_DESTROY,111,3764
    ACTION_COREDUMP_RESTART,112,3793
static const char *action_on_shutdown_names[action_on_shutdown_names115,3826
struct domain_config 127,4139
    libxl_domain_create_info c_info;128,4162
    libxl_domain_build_info b_info;129,4199
    int num_disks,131,4236
    int num_disks, num_vifs,131,4236
    int num_disks, num_vifs, num_vif2s,131,4236
    int num_disks, num_vifs, num_vif2s, num_pcidevs,131,4236
    int num_disks, num_vifs, num_vif2s, num_pcidevs, num_vfbs,131,4236
    int num_disks, num_vifs, num_vif2s, num_pcidevs, num_vfbs, num_vkbs;131,4236
    libxl_device_disk *disks;disks133,4310
    libxl_device_nic *vifs;vifs134,4340
    libxl_device_net2 *vif2s;vif2s135,4368
    libxl_device_pci *pcidevs;pcidevs136,4398
    libxl_device_vfb *vfbs;vfbs137,4429
    libxl_device_vkb *vkbs;vkbs138,4457
    enum action_on_shutdown on_poweroff;140,4486
    enum action_on_shutdown on_reboot;141,4527
    enum action_on_shutdown on_watchdog;142,4566
    enum action_on_shutdown on_crash;143,4607
static void free_domain_config(146,4649
#define SAVEFILE_BYTEORDER_VALUE 183,5724
static int qualifier_to_id(185,5783
static int domain_qualifier_to_domid(206,6199
static int cpupool_qualifier_to_cpupoolid(216,6501
static void find_domain(226,6815
static int acquire_lock(238,7127
static int release_lock(268,7838
#define LOG(297,8396
static void dolog(299,8473
static void dolog(302,8596
static void init_create_info(315,8875
static void init_build_info(327,9158
static void init_dm_info(353,9969
static void init_nic_info(383,10871
static void init_net2_info(410,11653
static void init_vfb_info(438,12501
static void init_vkb_info(454,12895
static void init_console_info(460,13037
static void printf_info(470,13378
static int parse_action_on_shutdown(628,20246
static void parse_config_data(644,20611
static void *xmalloc(xmalloc1216,42233
static void *xrealloc(xrealloc1224,42446
static pid_t autoconnect_console(1236,42832
static int handle_domain_death(1257,43349
static int preserve_domain(1329,45431
struct domain_create 1365,46329
    int debug;1366,46352
    int daemonize;1367,46367
    int paused;1368,46386
    int dryrun;1369,46402
    int quiet;1370,46418
    int console_autoconnect;1371,46433
    const char *config_file;config_file1372,46462
    const char *extra_config;extra_config1373,46491
    const char *restore_file;restore_file1374,46547
    int migrate_fd;1375,46577
    char **migration_domname_r;migration_domname_r1376,46617
static int freemem(1379,46671
static int create_domain(1421,47720
        union { uint32_t u32;1454,48711
        union { uint32_t u32; char b[b1454,48711
#define OPTDATA_LEFT 1490,50220
#define WITH_OPTDATA(1491,50299
void help(1894,63660
static int64_t parse_mem_size_kb(1921,64463
static int set_memory_max(1951,64952
int main_memmax(1969,65291
static void set_memory_target(2002,65946
int main_memset(2017,66284
static void cd_insert(2044,66806
int main_cd_eject(2083,67867
int main_cd_insert(2110,68404
int main_console(2139,69038
static int vncviewer(2181,70116
int main_vncviewer(2189,70328
static void pcilist_assignable(2227,71132
int main_pcilist_assignable(2241,71486
static void pcilist(2260,71868
int main_pcilist(2277,72357
static void pcidetach(2303,72842
int main_pcidetach(2318,73270
static void pciattach(2348,73899
int main_pciattach(2363,74322
static void pause_domain(2393,74940
static void unpause_domain(2399,75042
static void destroy_domain(2405,75148
static void shutdown_domain(2417,75462
static void reboot_domain(2460,76492
static void list_domains_details(2468,76688
static void list_domains(2494,77518
static void list_vm(2531,78995
static void save_domain_core_begin(2553,79555
static void save_domain_core_writeconfig(2579,80352
    union { uint32_t u32;2584,80564
    union { uint32_t u32; char b[b2584,80564
#define ADD_OPTDATA(2592,80780
static int save_domain(2618,81893
static int migrate_read_fixedmessage(2650,82727
static void migration_child_report(2670,83369
static void migrate_domain(2735,85555
static void core_dump_domain(2902,91402
static void migrate_receive(2910,91654
int main_restore(3009,95123
int main_migrate_receive(3066,96525
int main_save(3097,97169
int main_migrate(3130,97902
int main_dump_core(3184,99150
int main_pause(3205,99622
int main_unpause(3232,100084
int main_destroy(3259,100554
int main_shutdown(3285,101019
int main_reboot(3315,101572
int main_list(3340,102032
int main_list_vm(3413,103764
int main_create(3432,104104
static void button_press(3517,106230
int main_button_press(3535,106618
static void print_vcpuinfo(3563,107148
static void print_domain_vcpuinfo(3632,109240
static void vcpulist(3652,109698
int main_vcpulist(3690,110756
static void vcpupin(3709,111139
int main_vcpupin(3781,113317
static void vcpuset(3805,113795
int main_vcpuset(3826,114324
static void output_xeninfo(3849,114780
static void output_nodeinfo(3881,116034
static void output_physinfo(3894,116391
static void output_topologyinfo(3938,117859
static void info(3964,118532
int main_info(3980,118738
static int sched_credit_domain_get(4009,119352
static int sched_credit_domain_set(4021,119610
static void sched_credit_domain_output(4033,119864
int main_sched_credit(4046,120150
int main_domid(4120,122215
int main_domname(4153,122952
int main_rename(4194,123932
int main_trigger(4229,124698
int main_sysrq(4272,125677
int main_debug_keys(4311,126458
int main_dmesg(4341,127042
int main_top(4374,127751
int main_networkattach(4392,128094
int main_networklist(4476,130987
int main_networkdetach(4526,132699
int main_blockattach(4570,133905
int main_blocklist(4643,136154
int main_blockdetach(4691,137693
int main_network2attach(4725,138608
int main_network2list(4822,142145
int main_network2detach(4867,143773
static char *uptime_to_string(uptime_to_string4902,144715
static char *current_time_to_string(current_time_to_string4936,145725
static void print_dom0_uptime(4953,146112
static void print_domU_uptime(5000,147119
static void print_uptime(5034,147958
int main_uptime(5060,148636
int main_tmem_list(5092,149314
int main_tmem_freeze(5138,150238
int main_tmem_destroy(5174,150965
int main_tmem_thaw(5210,151696
int main_tmem_set(5246,152415
int main_tmem_shared_auth(5308,153866
int main_tmem_freeable(5367,155182
int main_cpupoolcreate(5391,155640
int main_cpupoollist(5600,161815
int main_cpupooldestroy(5699,164536
int main_cpupoolrename(5732,165333
int main_cpupoolcpuadd(5773,166324
int main_cpupoolcpuremove(5836,167775
int main_cpupoolmigrate(5899,169266
int main_cpupoolnumasplit(5947,170468

tools/libxl/libxl_cpuid.c,615
void libxl_cpuid_destroy(19,629
#define CPUID_REG_INV 34,1032
#define CPUID_REG_EAX 35,1056
#define CPUID_REG_EBX 36,1080
#define CPUID_REG_ECX 37,1104
#define CPUID_REG_EDX 38,1128
struct cpuid_flags 46,1460
    char* name;47,1481
    uint32_t leaf;48,1497
    uint32_t subleaf;49,1516
    int reg;50,1538
    int bit;51,1551
    int length;52,1564
static libxl_cpuid_policy_list cpuid_find_match(58,1713
int libxl_cpuid_parse_config(82,2580
#define NA 84,2660
#undef NA183,8907
int libxl_cpuid_parse_config_xend(257,11270
void libxl_cpuid_apply_policy(313,12779
void libxl_cpuid_set(318,12890

tools/libxl/libxl_internal.c,491
int libxl__error_set(32,901
int libxl__ptr_add(37,967
void libxl__free_all(68,1717
void *libxl__zalloc(libxl__zalloc81,1949
void *libxl__calloc(libxl__calloc93,2178
char *libxl__sprintf(libxl__sprintf105,2426
char *libxl__strdup(libxl__strdup128,2820
char *libxl__dirname(libxl__dirname138,2958
void libxl__logv(150,3157
void libxl__log(177,3919
char *libxl__abs_path(libxl__abs_path187,4207
int libxl__file_reference_map(195,4371
int libxl__file_reference_unmap(228,4862

tools/libxl/libxlu_cfg.c,770
XLU_Config *xlu_cfg_init(xlu_cfg_init7,109
int xlu_cfg_readfile(21,417
int xlu_cfg_readdata(56,1197
void xlu__cfg_set_free(93,2096
void xlu_cfg_destroy(103,2284
static XLU_ConfigSetting *find(find116,2543
static int find_atom(127,2787
int xlu_cfg_get_string(145,3253
int xlu_cfg_replace_string(155,3497
int xlu_cfg_get_long(166,3770
int xlu_cfg_get_list(196,4600
const char *xlu_cfg_get_listitem(xlu_cfg_get_listitem214,5200
XLU_ConfigSetting *xlu__cfg_set_mk(xlu__cfg_set_mk220,5362
void xlu__cfg_set_add(253,6013
void xlu__cfg_set_store(274,6666
char *xlu__cfgl_strdup(xlu__cfgl_strdup285,6944
char *xlu__cfgl_dequote(xlu__cfgl_dequote294,7140
#define NUMERIC_CHAR(328,8057
void xlu__cfgl_lexicalerror(361,9555
void xlu__cfg_yyerror(368,9778

tools/libxl/libxl_internal.h,2646
#define LIBXL_INTERNAL_H18,723
#define _hidden 29,931
#define _protected 30,985
#define _hidden32,1051
#define _protected33,1067
#define LIBXL_DESTROY_TIMEOUT 39,1143
#define LIBXL_DEVICE_MODEL_START_TIMEOUT 40,1176
#define LIBXL_XENCONSOLE_LIMIT 41,1220
#define LIBXL_XENCONSOLE_PROTOCOL 42,1259
#define LIBXL_MAXMEM_CONSTANT 43,1301
#define LIBXL_PV_EXTRA_MEMORY 44,1336
#define LIBXL_HVM_EXTRA_MEMORY 45,1371
#define LIBXL_MIN_DOM0_MEM 46,1407
#define QEMU_SIGNATURE 47,1445
#define ARRAY_SIZE(49,1493
#define LIBXL__LOGGING_ENABLED51,1543
#define LIBXL__LOG(54,1605
#define LIBXL__LOG_ERRNO(55,1722
#define LIBXL__LOG_ERRNOVAL(56,1848
#define LIBXL__LOG(58,1996
#define LIBXL__LOG_ERRNO(59,2041
#define LIBXL__LOG_ERRNOVAL(60,2092
_hidden void libxl__logv(65,2244
_hidden void libxl__log(71,2530
    DEVICE_VIF 81,2887
    DEVICE_VIF2,82,2907
    DEVICE_VBD,83,2924
    DEVICE_TAP,84,2940
    DEVICE_QDISK,85,2956
    DEVICE_PCI,86,2974
    DEVICE_VFB,87,2990
    DEVICE_VKBD,88,3006
    DEVICE_CONSOLE,89,3023
} libxl__device_kinds;90,3043
#define is_valid_device_kind(92,3067
    uint32_t backend_devid;95,3175
    uint32_t backend_domid;96,3203
    uint32_t devid;97,3231
    uint32_t domid;98,3251
    libxl__device_kinds backend_kind;99,3271
    libxl__device_kinds kind;100,3309
} libxl__device;101,3339
#define XC_PCI_BDF 103,3357
#define AUTO_PHP_SLOT 104,3413
#define SYSFS_PCI_DEV 105,3450
#define SYSFS_PCIBACK_DRIVER 106,3504
#define PROC_PCI_NUM_RESOURCES 108,3567
#define PCI_BAR_IO 109,3600
#define PRINTF_ATTRIBUTE(111,3637
    int alloc_maxsize;115,3742
    void **alloc_ptrs;alloc_ptrs116,3765
    libxl_ctx *owner;owner117,3788
} libxl__gc;118,3810
#define LIBXL_INIT_GC(120,3824
static inline libxl_ctx *libxl__gc_owner(libxl__gc_owner121,3916
_hidden char *libxl__sprintf(libxl__sprintf131,4265
    pid_t intermediate;193,7776
    char *what;what194,7800
} libxl__spawn_starting;195,7846
struct libxl__device_model_starting 197,7872
    libxl__spawn_starting *for_spawn;for_spawn198,7910
    char *dom_path;dom_path199,7961
    int domid;200,8038
#define LIBXL__LOG_DEBUG 233,9613
#define LIBXL__LOG_INFO 234,9650
#define LIBXL__LOG_WARNING 235,9686
#define LIBXL__LOG_ERROR 236,9722
struct libxl__cpuid_policy 247,10131
    uint32_t input[input248,10160
    char *policy[policy249,10183
struct libxl__xen_console_reader 273,10890
    char *buffer;buffer274,10925
    unsigned int size;275,10943
    unsigned int count;276,10966
    unsigned int clear;277,10990
    unsigned int incremental;278,11014
    unsigned int index;279,11044

tools/libxl/libxl_nocpuid.c,179
void libxl_cpuid_destroy(15,554
int libxl_cpuid_parse_config(19,623
int libxl_cpuid_parse_config_xend(24,720
void libxl_cpuid_apply_policy(30,856
void libxl_cpuid_set(34,923

tools/libxl/libxl.h,2517
#define LIBXL_H125,5691
typedef uint8_t libxl_mac[libxl_mac136,5873
typedef char **libxl_string_list;libxl_string_list138,5904
typedef char **libxl_key_value_list;libxl_key_value_list141,5994
typedef uint32_t libxl_hwcap[libxl_hwcap144,6094
    uint32_t size;147,6145
    uint8_t *map;map148,6202
} libxl_cpumap;149,6220
    uint32_t entries;153,6300
    uint32_t *array;array154,6322
} libxl_cpuarray;155,6343
#define LIBXL_CPUARRAY_INVALID_ENTRY 156,6361
    XENFV 160,6470
    XENPV,161,6485
} libxl_qemu_machine_type;162,6496
    LIBXL_CONSTYPE_SERIAL 165,6539
    LIBXL_CONSTYPE_PV,166,6570
} libxl_console_constype;167,6593
    LIBXL_CONSBACK_XENCONSOLED,170,6635
    LIBXL_CONSBACK_IOEMU,171,6667
} libxl_console_consback;172,6693
    PHYSTYPE_QCOW 175,6735
    PHYSTYPE_QCOW2,176,6758
    PHYSTYPE_VHD,177,6778
    PHYSTYPE_AIO,178,6796
    PHYSTYPE_FILE,179,6814
    PHYSTYPE_PHY,180,6833
} libxl_disk_phystype;181,6851
    NICTYPE_IOEMU 184,6890
    NICTYPE_VIF,185,6913
} libxl_nic_type;186,6930
    char * path;193,7118
    int mapped;194,7135
    void * data;195,7151
    size_t size;196,7168
} libxl_file_reference;197,7185
typedef struct libxl__cpuid_policy libxl_cpuid_policy;204,7443
typedef libxl_cpuid_policy * libxl_cpuid_policy_list;205,7498
#define LIBXL_PCI_FUNC_ALL 208,7616
    xentoollog_logger *lg;lg213,7694
    xc_interface *xch;xch214,7721
    struct xs_handle *xsh;xsh215,7744
    int (*waitpid_instead)waitpid_instead220,7938
    libxl_version_info version_info;221,8001
} libxl_ctx;222,8038
#define XL_SUSPEND_DEBUG 227,8136
#define XL_SUSPEND_LIVE 228,8163
    int flags;229,8189
    int (*suspend_callback)suspend_callback230,8204
} libxl_domain_suspend_info;231,8246
    ERROR_VERSION 234,8283
    ERROR_FAIL 235,8307
    ERROR_NI 236,8328
    ERROR_NOMEM 237,8347
    ERROR_INVAL 238,8369
    ERROR_BADFAIL 239,8391
#define LIBXL_VERSION 242,8419
    LIBXL_EVENT_DOMAIN_DEATH,288,10415
    LIBXL_EVENT_DISK_EJECT,289,10445
} libxl_event_type;290,10473
    libxl_event_type type;294,10532
    char *path;path296,10606
    char *token;token297,10622
} libxl_event;298,10639
    char *path;path301,10672
    char *token;token302,10688
} libxl_waiter;303,10705
typedef struct libxl__device_model_starting libxl_device_model_starting;378,14494
    POWER_BUTTON,471,19517
    SLEEP_BUTTON472,19535
} libxl_button;473,19552
typedef struct libxl__xen_console_reader libxl_xen_console_reader;497,20655

tools/libxl/xl.h,230
#define XL_H16,598
struct cmd_spec 20,637
    char *cmd_name;cmd_name21,655
    int (*cmd_impl)cmd_impl22,675
    char *cmd_desc;cmd_desc23,719
    char *cmd_usage;cmd_usage24,739
    char *cmd_option;cmd_option25,760

tools/libxl/libxl_xshelp.c,276
char **libxl__xs_kvs_of_flexarray(libxl__xs_kvs_of_flexarray27,811
int libxl__xs_writev(51,1348
int libxl__xs_write(71,1825
char * libxl__xs_read(90,2204
char *libxl__xs_get_dompath(libxl__xs_get_dompath103,2476
char **libxl__xs_directory(libxl__xs_directory116,2830

tools/libxl/libxl_exec.c,256
static int call_waitpid(33,977
void libxl__exec(38,1175
void libxl_report_child_exitstatus(61,1738
int libxl__spawn_spawn(92,2982
static void report_spawn_intermediate_status(139,4283
int libxl__spawn_detach(155,4971
int libxl__spawn_check(188,5976

tools/libxl/xl_cmdtable.c,132
struct cmd_spec cmd_table[cmd_table20,642
int cmdtable_len 388,11872
struct cmd_spec *cmdtable_lookup(cmdtable_lookup391,12005

tools/libxl/libxlu_cfg_i.h,28
#define LIBXLU_CFG_I_H2,23

tools/libxl/libxl_bootloader.c,348
#define XENCONSOLED_BUF_SIZE 30,783
#define BOOTLOADER_BUF_SIZE 31,815
static char **make_bootloader_args(make_bootloader_args33,849
static int open_xenconsoled_pty(76,2419
static pid_t fork_exec_bootloader(121,3651
static char * bootloader_interact(164,5117
static void parse_bootloader_result(274,9141
int libxl_run_bootloader(298,10095

tools/libxl/libxlu_internal.h,584
#define LIBXLU_INTERNAL_H17,652
#define XLU_ConfigList 24,758
struct XLU_ConfigSetting 28,824
    struct XLU_ConfigSetting *next;next29,869
    char *name;name30,905
    int nvalues,31,921
    int nvalues, avalues;31,921
    char **values;values32,974
    int lineno;33,993
struct XLU_Config 36,1013
    XLU_ConfigSetting *settings;settings37,1033
    FILE *report;report38,1066
    char *filename;filename39,1084
    XLU_Config *cfg;cfg43,1125
    int err,44,1146
    int err, lexerrlineno;44,1146
    void *scanner;scanner45,1173
} CfgParseContext;46,1192

tools/libxl/libxl_blktap2.c,98
int libxl__blktap_enabled(21,667
const char *libxl__blktap_devpath(libxl__blktap_devpath27,767

tools/libxl/osdeps.c,44
int vasprintf(26,795
int asprintf(57,1438

tools/libxl/libxl_device.c,817
static const char *string_of_kinds[string_of_kinds31,945
static char *libxl__device_frontend_path(libxl__device_frontend_path43,1240
static char *libxl__device_backend_path(libxl__device_backend_path55,1680
int libxl__device_generic_add(64,2020
char *libxl__device_disk_string_of_phystype(libxl__device_disk_string_of_phystype124,4151
char *libxl__device_disk_backend_type_of_phystype(libxl__device_disk_backend_type_of_phystype137,4544
int libxl__device_physdisk_major_minor(151,4983
static int device_virtdisk_matches(161,5227
int libxl__device_disk_dev_number(209,6305
int libxl__device_destroy(247,7492
static int wait_for_dev_destroy(283,8427
int libxl__devices_destroy(312,9303
int libxl__device_del(384,11878
int libxl__wait_for_device_model(412,12435
int libxl__wait_for_backend(483,14515

tools/libxl/libxlutil.h,125
#define LIBXLUTIL_H17,646
typedef struct XLU_Config XLU_Config;24,775
typedef struct XLU_ConfigList XLU_ConfigList;25,813

tools/libxl/flexarray.c,215
flexarray_t *flexarray_make(flexarray_make18,663
void flexarray_free(29,936
int flexarray_grow(35,1021
int flexarray_set(49,1308
int flexarray_get(63,1692
void **flexarray_contents(flexarray_contents71,1851

tools/libxl/xl.c,216
xentoollog_logger_stdiostream *logger;logger35,1012
int autoballoon 36,1051
char *lockfile;lockfile37,1072
static xentoollog_level minmsglevel 39,1089
static void parse_global_config(41,1142
int main(78,2127

tools/libxl/libxl_uuid.h,1041
#define __LIBXL_UUID_H__16,601
#define LIBXL_UUID_FMT 18,627
#define LIBXL__UUID_BYTES(19,753
    uuid_t uuid;29,1102
} libxl_uuid;30,1119
#define LIBXL_UUID_BYTES(32,1134
static inline int libxl_uuid_is_nil(34,1206
static inline void libxl_uuid_generate(39,1303
static inline int libxl_uuid_from_string(44,1397
static inline void libxl_uuid_copy(49,1517
static inline void libxl_uuid_clear(54,1629
static inline int libxl_uuid_compare(59,1717
static inline uint8_t *libxl_uuid_bytearray(libxl_uuid_bytearray64,1849
#define LIBXL_UUID_BYTES(77,2064
    uint8_t uuid[uuid80,2140
} libxl_uuid;81,2162
static inline int libxl_uuid_is_nil(83,2177
static inline void libxl_uuid_generate(89,2312
#define LIBXL__UUID_PTRS(96,2476
static inline int libxl_uuid_from_string(100,2767
#undef LIBXL__UUID_PTRS106,2969
static inline void libxl_uuid_copy(108,2994
static inline void libxl_uuid_clear(113,3122
static inline int libxl_uuid_compare(118,3229
static inline uint8_t *libxl_uuid_bytearray(libxl_uuid_bytearray123,3376

tools/libxl/libxl_pci.c,1512
#define PCI_BDF 40,1169
#define PCI_BDF_SHORT 41,1222
#define PCI_BDF_VDEVFN 42,1270
static unsigned int pcidev_value(44,1329
        unsigned int value;47,1402
            unsigned int reserved1:reserved149,1447
            unsigned int reg:reg50,1485
            unsigned int func:func51,1517
            unsigned int dev:dev52,1550
            unsigned int bus:bus53,1582
            unsigned int reserved2:reserved254,1614
            unsigned int enable:enable55,1652
        }fields;fields56,1687
static int pcidev_init(69,1922
static int hex_convert(81,2268
#define STATE_DOMAIN 95,2574
#define STATE_BUS 96,2600
#define STATE_DEV 97,2626
#define STATE_FUNC 98,2652
#define STATE_VSLOT 99,2678
#define STATE_OPTIONS_K 100,2704
#define STATE_OPTIONS_V 101,2730
#define STATE_TERMINAL 102,2756
int libxl_device_pci_parse_bdf(103,2782
static int libxl_create_pci_backend(224,6607
static int libxl_device_pci_add_xenstore(290,9361
static int libxl_device_pci_remove_xenstore(344,11682
static int get_all_assigned_devices(450,16182
static int is_assigned(496,17575
int libxl_device_pci_list_assignable(516,18045
static int pci_multifunction_check(575,19641
static int pci_ins_check(620,20943
static int do_pci_add(634,21264
static int libxl_device_pci_reset(740,26003
int libxl_device_pci_add(776,27341
static int do_pci_remove(846,29605
int libxl_device_pci_remove(965,34738
int libxl_device_pci_list_assigned(1002,35732
int libxl_device_pci_shutdown(1052,37656

tools/libxl/flexarray.h,157
#define FLEXARRAY_H17,654
typedef struct flexarray 19,675
    int size;20,702
    int autogrow;21,716
    void **data;data22,734
} flexarray_t;23,774

tools/libxl/libxl_osdeps.h,54
#define LIBXL_OSDEP22,780
#define _GNU_SOURCE24,801

tools/libxl/libxl.c,5124
#define PAGE_TO_MEMKB(39,1149
int libxl_ctx_init(41,1193
int libxl_ctx_free(68,1973
void libxl_string_list_destroy(76,2173
void libxl_key_value_list_destroy(89,2379
int libxl_domain_make(107,2748
int libxl_domain_rename(216,6590
int libxl_domain_build(296,9322
int libxl_domain_restore(353,11208
int libxl_domain_resume(431,13757
int libxl_domain_preserve(466,14770
static void xcinfo2xlinfo(532,16541
libxl_dominfo * libxl_list_domain(556,17521
int libxl_domain_info(582,18149
libxl_cpupoolinfo * libxl_list_cpupool(598,18596
libxl_vminfo * libxl_list_vm(637,19759
int libxl_domain_suspend(665,20485
int libxl_domain_pause(679,20974
int libxl_domain_core_dump(690,21232
int libxl_domain_unpause(703,21598
static char *req_table[req_table727,22426
int libxl_domain_shutdown(735,22559
int libxl_get_wait_fd(784,24127
int libxl_wait_for_domain_death(790,24224
int libxl_wait_for_disk_ejects(800,24542
int libxl_get_event(824,25323
int libxl_stop_waiting(839,25702
int libxl_free_event(847,25882
int libxl_free_waiter(854,25989
int libxl_event_get_domain_death_info(861,26101
int libxl_event_get_disk_eject_info(872,26388
static int libxl_destroy_device_model(905,27308
int libxl_domain_destroy(945,28667
int libxl_console_exec(1006,30731
int libxl_primary_console_exec(1032,31439
int libxl_vncviewer_exec(1045,31899
static char ** libxl_build_device_model_args_old(1110,34005
static char ** libxl_build_device_model_args_new(1251,39590
static char ** libxl_build_device_model_args(1411,45628
static void dm_xenstore_record_pid(1428,46229
static int libxl_vfb_and_vkb_from_device_model_info(1453,46814
static int libxl_write_dmargs(1477,47600
static int libxl_create_stubdom(1526,49079
int libxl_create_device_model(1678,54330
int libxl_detach_device_model(1774,57407
int libxl_confirm_device_model_startup(1786,57695
int libxl_device_disk_add(1800,58203
int libxl_device_disk_del(1938,63453
char * libxl_device_disk_local_attach(1955,64022
int libxl_device_disk_local_detach(1987,65002
int libxl_device_nic_add(2000,65365
int libxl_device_nic_del(2088,68694
libxl_nicinfo *libxl_list_nics(libxl_list_nics2103,69137
int libxl_device_net2_add(2160,71715
libxl_net2info *libxl_device_net2_list(libxl_device_net2_list2273,76586
int libxl_device_net2_del(2334,79106
int libxl_device_console_add(2350,79614
int libxl_device_vkb_add(2430,82614
int libxl_device_vkb_clean_shutdown(2484,84324
int libxl_device_vkb_hard_shutdown(2489,84418
libxl_device_disk *libxl_device_disk_list(libxl_device_disk_list2494,84511
int libxl_device_disk_getinfo(2551,87621
int libxl_cdrom_insert(2586,89289
static int libxl_build_xenpv_qemu_args(2628,90478
int libxl_need_xenpv_qemu(2657,91516
int libxl_create_xenpv_qemu(2690,92185
int libxl_device_vfb_add(2702,92587
int libxl_device_vfb_clean_shutdown(2778,95388
int libxl_device_vfb_hard_shutdown(2783,95482
int libxl_domain_setmaxmem(2790,95657
static int libxl__fill_dom0_memory_info(2820,96582
static int libxl__get_free_memory_slack(2895,98971
int libxl_set_memory_target(2921,99789
int libxl_get_memory_target(3051,104076
int libxl_domain_need_memory(3087,105165
int libxl_get_free_memory(3102,105732
int libxl_wait_for_free_memory(3126,106292
int libxl_wait_for_memory_target(3155,106951
int libxl_button_press(3183,107540
int libxl_get_physinfo(3201,107961
int libxl_get_topologyinfo(3226,108849
const libxl_version_info* libxl_get_version_info(3279,111003
        xen_extraversion_t xen_extra;3282,111082
        xen_compile_info_t xen_cc;3283,111120
        xen_changeset_info_t xen_chgset;3284,111155
        xen_capabilities_info_t xen_caps;3285,111196
        xen_platform_parameters_t p_parms;3286,111238
        xen_commandline_t xen_commandline;3287,111281
libxl_vcpuinfo *libxl_list_vcpu(libxl_list_vcpu3325,112547
int libxl_set_vcpuaffinity(3365,113983
int libxl_set_vcpuonline(3375,114303
int libxl_get_sched_id(3409,115299
int libxl_sched_credit_domain_get(3420,115546
int libxl_sched_credit_domain_set(3437,115970
static int trigger_type_from_string(3477,117245
int libxl_send_trigger(3493,117773
int libxl_send_sysrq(3514,118401
int libxl_send_debug_keys(3525,118706
    libxl_xen_console_read_start(3537,118990
int libxl_xen_console_read_line(3573,120164
void libxl_xen_console_read_finish(3599,120837
uint32_t libxl_vm_get_start_time(3606,120994
char *libxl_tmem_list(libxl_tmem_list3628,121684
int libxl_tmem_freeze(3644,122066
int libxl_tmem_destroy(3659,122403
int libxl_tmem_thaw(3674,122743
static int32_t tmem_setop_from_string(3689,123074
int libxl_tmem_set(3701,123379
int libxl_tmem_shared_auth(3721,123937
int libxl_tmem_freeable(3736,124282
void libxl_file_reference_destroy(3750,124592
int libxl_get_freecpus(3756,124711
int libxl_create_cpupool(3773,125035
int libxl_destroy_cpupool(3827,126703
int libxl_cpupool_rename(3888,128209
int libxl_cpupool_cpuadd(3931,129083
int libxl_cpupool_cpuadd_node(3944,129379
int libxl_cpupool_cpuremove(3976,130110
int libxl_cpupool_cpuremove_node(3989,130416
int libxl_cpupool_movedomain(4031,131437

tools/libxl/libxl_utils.c,1492
struct schedid_name 34,961
    char *name;name35,983
    int id;36,999
static struct schedid_name schedid_name[schedid_name39,1015
unsigned long libxl_get_required_shadow_memory(46,1200
char *libxl_domid_to_name(libxl_domid_to_name57,1665
char *libxl__domid_to_name(libxl__domid_to_name68,1938
int libxl_name_to_domid(76,2122
char *libxl_cpupoolid_to_name(libxl_cpupoolid_to_name104,2780
char *libxl__cpupoolid_to_name(libxl__cpupoolid_to_name117,3117
int libxl_name_to_cpupoolid(125,3311
int libxl_name_to_schedid(152,4016
char *libxl_schedid_to_name(libxl_schedid_to_name163,4252
int libxl_get_stubdom_id(174,4484
int libxl_is_stubdom(191,4972
static int logrename(212,5503
int libxl_create_logfile(226,5865
int libxl_string_to_phystype(264,7168
int libxl_read_file_contents(294,7918
#define READ_WRITE_EXACTLY(365,9713
READ_WRITE_EXACTLY(396,11931
pid_t libxl_fork(407,12189
int libxl_pipe(428,12680
int libxl_mac_to_device_nic(437,12866
int libxl_devid_to_device_nic(480,14075
int libxl_devid_to_device_disk(516,15337
int libxl_devid_to_device_net2(559,16979
int libxl_strtomac(613,19134
#define QEMU_VERSION_STR 628,19456
int libxl_check_device_model_version(631,19509
int libxl_cpumap_alloc(711,21436
void libxl_cpumap_destroy(728,21792
int libxl_cpumap_test(733,21862
void libxl_cpumap_set(740,22033
void libxl_cpumap_reset(747,22184
int libxl_cpuarray_alloc(754,22340
void libxl_cpuarray_destroy(773,22796
int libxl_get_max_cpus(778,22876

tools/libxl/libxl_dom.c,991
int libxl__domain_is_hvm(38,1074
int libxl__domain_shutdown_reason(51,1372
int libxl__build_pre(67,1773
int libxl__build_post(90,2734
int libxl__build_pv(146,4742
static int hvm_build_set_params(225,7491
int libxl__build_hvm(264,9304
int libxl__domain_restore_common(299,10440
struct suspendinfo 316,11036
    libxl__gc *gc;gc317,11057
    xc_evtchn *xce;xce318,11076
    int suspend_eventchn;319,11123
    int domid;320,11149
    int hvm;321,11164
    unsigned int flags;322,11177
static int libxl__domain_suspend_common_switch_qemu_logdirty(325,11205
static int libxl__domain_suspend_common_callback(344,11755
int libxl__domain_suspend_common(402,14038
int libxl__domain_save_device_model(458,15585
char *libxl__uuid2string(libxl__uuid2string516,17366
static const char *userdata_path(userdata_path524,17621
static int userdata_delete(550,18528
void libxl__userdata_destroyall(560,18761
int libxl_userdata_store(588,19412
int libxl_userdata_retrieve(657,20801

tools/libxl/libxl_paths.c,640
const char *libxl_sbindir_path(libxl_sbindir_path18,622
const char *libxl_bindir_path(libxl_bindir_path23,684
const char *libxl_libexec_path(libxl_libexec_path28,744
const char *libxl_libdir_path(libxl_libdir_path33,806
const char *libxl_sharedir_path(libxl_sharedir_path38,866
const char *libxl_private_bindir_path(libxl_private_bindir_path43,930
const char *libxl_xenfirmwaredir_path(libxl_xenfirmwaredir_path48,1006
const char *libxl_xen_config_dir_path(libxl_xen_config_dir_path53,1082
const char *libxl_xen_script_dir_path(libxl_xen_script_dir_path58,1158
const char *libxl_lock_dir_path(libxl_lock_dir_path63,1234

tools/libxl/libxl_noblktap2.c,98
int libxl__blktap_enabled(19,645
const char *libxl__blktap_devpath(libxl__blktap_devpath24,705

tools/libxl/libxl_utils.h,65
#define LIBXL_UTILS_H17,662
#define libxl_for_each_cpu(83,3854

tools/pygrub/src/fsimage/fsimage.c,1026
#define PY_PAD 30,1278
#define PY_PAD 32,1371
typedef struct fsimage_fs 35,1406
	fsi_t *fs;fs37,1449
} fsimage_fs_t;38,1461
typedef struct fsimage_file 40,1478
	fsimage_fs_t *fs;fs42,1524
	fsi_file_t *file;file43,1543
} fsimage_file_t;44,1562
struct foo 46,1581
	int ref;47,1594
	int size;48,1604
	long hash;49,1615
	int state;50,1627
fsimage_file_read(54,1661
static struct PyMethodDef fsimage_file_methods[fsimage_file_methods110,2893
fsimage_file_getattr(117,3099
fsimage_file_dealloc(123,3242
static char fsimage_file_type__doc__[fsimage_file_type__doc__131,3389
PyTypeObject fsimage_file_type 132,3455
fsimage_fs_open_file(159,4178
fsimage_fs_file_exists(187,4781
static struct PyMethodDef fsimage_fs_methods[fsimage_fs_methods210,5393
fsimage_fs_getattr(219,5726
fsimage_fs_dealloc 225,5859
PyTypeObject fsimage_fs_type 234,6030
fsimage_open(261,6741
fsimage_getbootstring(285,7314
static struct PyMethodDef fsimage_module_methods[fsimage_module_methods311,8006
initfsimage(320,8306

tools/libxen/src/xen_xspolicy.c,801
XEN_FREE(29,953
const abstract_type xen_xspolicy_record_abstract_type_ 49,1620
static const struct_member xen_xs_policystate_struct_members[xen_xs_policystate_struct_members59,1925
const abstract_type xen_xs_policystate_abstract_type_ 84,2878
xen_xs_policystate_free(98,3204
xen_xspolicy_record_free(113,3457
xen_xspolicy_get_record(127,3666
xen_xspolicy_get_uuid(151,4187
xen_xspolicy_get_by_uuid(169,4581
xen_xspolicy_get_xstype(187,4976
xen_xspolicy_set_xspolicy(202,5239
xen_xspolicy_reset_xspolicy(228,6007
xen_xspolicy_get_xspolicy(246,6428
xen_xspolicy_get_labeled_resources(261,6726
xen_xspolicy_set_resource_label(277,7078
xen_xspolicy_get_resource_label(298,7699
xen_xspolicy_rm_xsbootpolicy(314,8096
xen_xspolicy_activate_xspolicy(327,8344
xen_xspolicy_can_run(349,8945

tools/libxen/src/xen_pbd.c,397
XEN_FREE(31,1021
const abstract_type xen_pbd_record_abstract_type_ 59,1947
xen_pbd_record_free(70,2237
xen_pbd_get_record(86,2551
xen_pbd_get_by_uuid(109,3013
xen_pbd_create(126,3368
xen_pbd_destroy(143,3736
xen_pbd_get_host(157,4029
xen_pbd_get_sr(174,4379
xen_pbd_get_device_config(191,4723
xen_pbd_get_currently_attached(208,5116
xen_pbd_get_all(224,5468
xen_pbd_get_uuid(236,5720

tools/libxen/src/xen_vdi_type.c,300
static const char *lookup_table[lookup_table29,974
xen_vdi_type_set_alloc(40,1117
xen_vdi_type_set_free(48,1272
xen_vdi_type_to_string(55,1351
xen_vdi_type_from_string(62,1458
const abstract_type xen_vdi_type_abstract_type_ 68,1580
const abstract_type xen_vdi_type_set_abstract_type_ 78,1864

tools/libxen/src/xen_common.c,3244
#define _XOPEN_SOURCE19,790
#define PERMISSIVE 48,1576
static xmlXPathCompExprPtr responsePath 51,1599
static xmlXPathCompExprPtr faultPath 52,1647
    size_t size;57,1711
    void *contents[contents58,1728
} arbitrary_map;59,1750
    void *handle;handle64,1786
} arbitrary_record;65,1804
    bool is_record;70,1843
        char *handle;handle73,1879
        arbitrary_record *record;record74,1901
    } u;75,1935
} arbitrary_record_opt;76,1944
xen_init(127,3297
xen_fini(140,3580
xen_session_record_free(150,3730
xen_session_login_with_password(164,3974
xen_session_logout(191,4745
xen_session_clear_error(213,5207
xen_session_get_uuid(230,5603
xen_session_get_this_host(246,5998
xen_session_get_this_user(262,6411
xen_session_get_last_active(278,6821
static const struct_member xen_session_record_struct_members[xen_session_record_struct_members293,7235
const abstract_type xen_session_record_abstract_type_ 309,7843
xen_session_get_record(320,8149
#define X 338,8589
#define UUID_FORMAT 339,8606
xen_uuid_string_to_bytes(343,8681
xen_uuid_bytes_to_string(376,9366
#undef UUID_FORMAT393,9770
#undef X394,9789
xen_uuid_free(398,9805
xen_uuid_bytes_free(405,9858
xen_call_(417,10143
bufferAdd(442,10762
call_raw(449,10897
static void server_error(478,11732
static void server_error_2(498,12195
static bool is_node(520,12745
static bool is_container_node(528,12889
static xmlChar *string_from_value(string_from_value542,13261
static xmlChar *string_from_name(string_from_name576,14199
static int count_children(593,14477
static void destring(611,14765
static void parse_into(648,15947
static size_t size_of_member(1031,27184
static void parse_structmap_value(1063,27674
static void parse_fault(1082,28104
static void parse_failure(1143,29819
static void parse_result(1180,30641
make_body_add_type(1259,32602
make_body(1380,36048
add_struct_value(1418,37054
get_val_as_string(1521,39921
add_container(1575,40864
add_param(1582,40990
add_value(1590,41180
add_unnamed_value(1598,41386
add_param_struct(1607,41569
add_param_array(1617,41825
add_struct_member(1627,42074
add_struct_array(1639,42386
add_nested_struct(1654,42795
int xen_enum_lookup_(1667,43122
xen_strdup_(1687,43512
const abstract_type abstract_type_string 1695,43632
const abstract_type abstract_type_int 1696,43699
const abstract_type abstract_type_float 1697,43760
const abstract_type abstract_type_bool 1698,43825
const abstract_type abstract_type_datetime 1699,43888
const abstract_type abstract_type_ref 1700,43959
const abstract_type abstract_type_string_set 1702,44021
const abstract_type abstract_type_ref_set 1708,44146
static const struct struct_member string_string_members[string_string_members1714,44265
const abstract_type abstract_type_string_string_map 1725,44561
static struct struct_member int_float_members[int_float_members1732,44758
const abstract_type abstract_type_int_float_map 1743,45032
static struct struct_member int_int_members[int_int_members1750,45217
const abstract_type abstract_type_int_int_map 1761,45483
static struct struct_member int_string_set_members[int_string_set_members1768,45662
const abstract_type abstract_type_int_string_set_map 1779,45956

tools/libxen/src/xen_host_metrics.c,401
XEN_FREE(28,929
const abstract_type xen_host_metrics_record_abstract_type_ 53,1840
xen_host_metrics_record_free(64,2166
xen_host_metrics_get_record(77,2359
xen_host_metrics_get_by_uuid(100,2884
xen_host_metrics_get_memory_total(117,3266
xen_host_metrics_get_memory_free(133,3653
xen_host_metrics_get_last_updated(149,4038
xen_host_metrics_get_all(165,4429
xen_host_metrics_get_uuid(177,4708

tools/libxen/src/xen_int_int_map.c,60
xen_int_int_map_alloc(26,905
xen_int_int_map_free(36,1147

tools/libxen/src/xen_vif.c,1115
XEN_FREE(32,1061
const abstract_type xen_vif_record_abstract_type_ 87,3227
xen_vif_record_free(98,3517
xen_vif_get_record(121,4137
xen_vif_get_by_uuid(144,4599
xen_vif_create(161,4954
xen_vif_destroy(178,5322
xen_vif_get_device(192,5615
xen_vif_get_network(209,5966
xen_vif_get_vm(226,6325
xen_vif_get_mac(243,6669
xen_vif_get_mtu(260,7014
xen_vif_get_currently_attached(276,7338
xen_vif_get_status_code(292,7690
xen_vif_get_status_detail(308,8030
xen_vif_get_runtime_properties(325,8395
xen_vif_get_qos_algorithm_type(342,8798
xen_vif_get_qos_algorithm_params(359,9173
xen_vif_get_qos_supported_algorithms(376,9580
xen_vif_get_metrics(393,9988
xen_vif_set_device(410,10351
xen_vif_set_mac(426,10749
xen_vif_set_mtu(442,11135
xen_vif_set_qos_algorithm_type(458,11517
xen_vif_set_qos_algorithm_params(474,11955
xen_vif_add_to_qos_algorithm_params(490,12443
xen_vif_remove_from_qos_algorithm_params(508,12966
xen_vif_plug(524,13402
xen_vif_unplug(538,13691
xen_vif_get_all(552,13984
xen_vif_get_uuid(564,14236
xen_vif_set_security_label(581,14583
xen_vif_get_security_label(603,15174

tools/libxen/src/xen_vif_metrics.c,392
XEN_FREE(28,928
const abstract_type xen_vif_metrics_record_abstract_type_ 53,1831
xen_vif_metrics_record_free(64,2153
xen_vif_metrics_get_record(77,2344
xen_vif_metrics_get_by_uuid(100,2862
xen_vif_metrics_get_io_read_kbs(117,3241
xen_vif_metrics_get_io_write_kbs(133,3622
xen_vif_metrics_get_last_updated(149,4005
xen_vif_metrics_get_all(165,4391
xen_vif_metrics_get_uuid(177,4667

tools/libxen/src/xen_vbd_type.c,300
static const char *lookup_table[lookup_table29,974
xen_vbd_type_set_alloc(37,1064
xen_vbd_type_set_free(45,1219
xen_vbd_type_to_string(52,1298
xen_vbd_type_from_string(59,1405
const abstract_type xen_vbd_type_abstract_type_ 65,1527
const abstract_type xen_vbd_type_set_abstract_type_ 75,1811

tools/libxen/src/xen_vdi.c,1036
XEN_FREE(33,1090
const abstract_type xen_vdi_record_abstract_type_ 82,2946
xen_vdi_record_free(93,3236
xen_vdi_get_record(112,3678
xen_vdi_get_by_uuid(135,4140
xen_vdi_create(152,4495
xen_vdi_destroy(169,4863
xen_vdi_get_by_name_label(183,5156
xen_vdi_get_name_label(200,5541
xen_vdi_get_name_description(217,5900
xen_vdi_get_sr(234,6271
xen_vdi_get_vbds(251,6615
xen_vdi_get_crash_dumps(268,6980
xen_vdi_get_virtual_size(285,7365
xen_vdi_get_physical_utilisation(301,7707
xen_vdi_get_type(317,8065
xen_vdi_get_sharable(332,8410
xen_vdi_get_read_only(348,8742
xen_vdi_get_other_config(364,9076
xen_vdi_set_name_label(381,9467
xen_vdi_set_name_description(397,9871
xen_vdi_set_virtual_size(413,10299
xen_vdi_set_sharable(429,10717
xen_vdi_set_read_only(445,11118
xen_vdi_set_other_config(461,11523
xen_vdi_add_to_other_config(477,11987
xen_vdi_remove_from_other_config(495,12494
xen_vdi_get_all(511,12914
xen_vdi_get_uuid(523,13166
xen_vdi_set_security_label(540,13513
xen_vdi_get_security_label(562,14104

tools/libxen/src/xen_vtpm.c,377
XEN_FREE(30,977
const abstract_type xen_vtpm_record_abstract_type_ 55,1773
xen_vtpm_record_free(66,2067
xen_vtpm_get_record(82,2383
xen_vtpm_get_by_uuid(105,2852
xen_vtpm_create(122,3210
xen_vtpm_destroy(139,3583
xen_vtpm_get_vm(153,3881
xen_vtpm_get_backend(170,4230
xen_vtpm_get_uuid(187,4589
xen_vtpm_get_other_config(204,4941
xen_vtpm_set_other_config(222,5363

tools/libxen/src/xen_vbd_mode.c,300
static const char *lookup_table[lookup_table29,974
xen_vbd_mode_set_alloc(37,1062
xen_vbd_mode_set_free(45,1217
xen_vbd_mode_to_string(52,1296
xen_vbd_mode_from_string(59,1403
const abstract_type xen_vbd_mode_abstract_type_ 65,1525
const abstract_type xen_vbd_mode_set_abstract_type_ 75,1809

tools/libxen/src/xen_vm.c,3641
XEN_FREE(42,1416
const abstract_type xen_vm_record_abstract_type_ 178,7281
xen_vm_record_free(189,7567
xen_vm_get_record(226,8807
xen_vm_get_by_uuid(249,9262
xen_vm_create(266,9614
xen_vm_destroy(283,9977
xen_vm_get_by_name_label(297,10265
xen_vm_get_power_state(314,10647
xen_vm_get_name_label(329,11013
xen_vm_get_name_description(346,11367
xen_vm_get_user_version(363,11733
xen_vm_get_is_a_template(379,12070
xen_vm_get_auto_power_on(395,12407
xen_vm_get_suspend_vdi(411,12744
xen_vm_get_resident_on(428,13102
xen_vm_get_memory_static_max(445,13461
xen_vm_get_memory_dynamic_max(461,13808
xen_vm_get_memory_dynamic_min(477,14157
xen_vm_get_memory_static_min(493,14506
xen_vm_get_vcpus_params(509,14853
xen_vm_get_vcpus_max(526,15239
xen_vm_get_vcpus_at_startup(542,15570
xen_vm_get_actions_after_shutdown(558,15915
xen_vm_get_actions_after_reboot(573,16303
xen_vm_get_actions_after_crash(588,16687
xen_vm_get_consoles(603,17077
xen_vm_get_vifs(620,17449
xen_vm_get_vbds(637,17809
xen_vm_get_crash_dumps(654,18169
xen_vm_get_vtpms(671,18549
xen_vm_get_pv_bootloader(688,18912
xen_vm_get_pv_kernel(705,19272
xen_vm_get_pv_ramdisk(722,19624
xen_vm_get_pv_args(739,19978
xen_vm_get_pv_bootloader_args(756,20326
xen_vm_get_hvm_boot_policy(773,20696
xen_vm_get_hvm_boot_params(790,21060
xen_vm_get_platform(807,21452
xen_vm_get_pci_bus(824,21830
xen_vm_get_other_config(841,22178
xen_vm_get_domid(858,22564
xen_vm_get_is_control_domain(874,22887
xen_vm_get_metrics(890,23232
xen_vm_get_guest_metrics(907,23589
xen_vm_set_name_label(924,23964
xen_vm_set_name_description(940,24363
xen_vm_set_user_version(956,24786
xen_vm_set_is_a_template(972,25199
xen_vm_set_auto_power_on(988,25615
xen_vm_set_memory_static_max(1004,26031
xen_vm_set_memory_dynamic_max(1020,26450
xen_vm_set_memory_dynamic_min(1036,26873
xen_vm_set_memory_static_min(1052,27296
xen_vm_set_vcpus_params(1068,27715
xen_vm_add_to_vcpus_params(1084,28162
xen_vm_remove_from_vcpus_params(1102,28664
xen_vm_set_vcpus_max(1118,29079
xen_vm_set_vcpus_at_startup(1134,29468
xen_vm_set_actions_after_shutdown(1150,29885
xen_vm_set_actions_after_reboot(1166,30355
xen_vm_set_actions_after_crash(1182,30817
xen_vm_set_pv_bootloader(1198,31283
xen_vm_set_pv_kernel(1214,31698
xen_vm_set_pv_ramdisk(1230,32097
xen_vm_set_pv_args(1246,32500
xen_vm_set_pv_bootloader_args(1262,32891
xen_vm_set_hvm_boot_policy(1278,33326
xen_vm_set_hvm_boot_params(1294,33747
xen_vm_add_to_hvm_boot_params(1310,34210
xen_vm_remove_from_hvm_boot_params(1328,34718
xen_vm_set_platform(1344,35139
xen_vm_add_to_platform(1360,35582
xen_vm_remove_from_platform(1378,36076
xen_vm_set_pci_bus(1394,36483
xen_vm_set_other_config(1410,36880
xen_vm_add_to_other_config(1426,37339
xen_vm_remove_from_other_config(1444,37841
xen_vm_clone(1460,38256
xen_vm_start(1479,38696
xen_vm_pause(1495,39086
xen_vm_unpause(1509,39370
xen_vm_clean_shutdown(1523,39658
xen_vm_clean_reboot(1537,39960
xen_vm_hard_shutdown(1551,40258
xen_vm_hard_reboot(1565,40558
xen_vm_suspend(1579,40854
xen_vm_resume(1593,41142
xen_vm_set_vcpus_number_live(1609,41534
xen_vm_add_to_vcpus_params_live(1625,41947
xen_vm_set_memory_dynamic_max_live(1643,42463
xen_vm_set_memory_dynamic_min_live(1659,42884
xen_vm_send_sysrq(1675,43305
xen_vm_send_trigger(1691,43692
xen_vm_migrate(1707,44091
xen_vm_get_all(1727,44707
xen_vm_get_uuid(1739,44956
xen_vm_set_security_label(1756,45298
xen_vm_get_security_label(1778,45883
xen_vm_get_cpu_pool(1795,46246
xen_vm_get_pool_name(1812,46620
xen_vm_set_pool_name(1829,46973
xen_vm_cpu_pool_migrate(1845,47378

tools/libxen/src/xen_int_float_map.c,64
xen_int_float_map_alloc(26,909
xen_int_float_map_free(36,1161

tools/libxen/src/xen_on_normal_exit.c,336
static const char *lookup_table[lookup_table29,986
xen_on_normal_exit_set_alloc(37,1090
xen_on_normal_exit_set_free(45,1263
xen_on_normal_exit_to_string(52,1354
xen_on_normal_exit_from_string(59,1479
const abstract_type xen_on_normal_exit_abstract_type_ 65,1607
const abstract_type xen_on_normal_exit_set_abstract_type_ 75,1909

tools/libxen/src/xen_console_protocol.c,348
static const char *lookup_table[lookup_table29,990
xen_console_protocol_set_alloc(38,1101
xen_console_protocol_set_free(46,1280
xen_console_protocol_to_string(53,1375
xen_console_protocol_from_string(60,1506
const abstract_type xen_console_protocol_abstract_type_ 66,1636
const abstract_type xen_console_protocol_set_abstract_type_ 76,1944

tools/libxen/src/xen_vbd_metrics.c,392
XEN_FREE(28,928
const abstract_type xen_vbd_metrics_record_abstract_type_ 53,1831
xen_vbd_metrics_record_free(64,2153
xen_vbd_metrics_get_record(77,2344
xen_vbd_metrics_get_by_uuid(100,2862
xen_vbd_metrics_get_io_read_kbs(117,3241
xen_vbd_metrics_get_io_write_kbs(133,3622
xen_vbd_metrics_get_last_updated(149,4005
xen_vbd_metrics_get_all(165,4391
xen_vbd_metrics_get_uuid(177,4667

tools/libxen/src/xen_int_string_set_map.c,74
xen_int_string_set_map_alloc(27,955
xen_int_string_set_map_free(37,1232

tools/libxen/src/xen_vm_metrics.c,631
XEN_FREE(32,1090
const abstract_type xen_vm_metrics_record_abstract_type_ 75,2864
xen_vm_metrics_record_free(86,3182
xen_vm_metrics_get_record(104,3619
xen_vm_metrics_get_by_uuid(127,4130
xen_vm_metrics_get_memory_actual(144,4506
xen_vm_metrics_get_vcpus_number(160,4885
xen_vm_metrics_get_vcpus_utilisation(176,5262
xen_vm_metrics_get_vcpus_cpu(193,5690
xen_vm_metrics_get_vcpus_params(210,6098
xen_vm_metrics_get_vcpus_flags(227,6524
xen_vm_metrics_get_state(244,6950
xen_vm_metrics_get_start_time(261,7355
xen_vm_metrics_get_last_updated(277,7732
xen_vm_metrics_get_all(293,8113
xen_vm_metrics_get_uuid(305,8386

tools/libxen/src/xen_console.c,566
XEN_FREE(31,1038
const abstract_type xen_console_record_abstract_type_ 59,2022
xen_console_record_free(70,2328
xen_console_get_record(86,2633
xen_console_get_by_uuid(109,3123
xen_console_create(126,3490
xen_console_destroy(143,3878
xen_console_get_protocol(157,4191
xen_console_get_location(172,4580
xen_console_get_vm(189,4955
xen_console_get_other_config(206,5319
xen_console_set_other_config(223,5730
xen_console_add_to_other_config(239,6214
xen_console_remove_from_other_config(257,6741
xen_console_get_all(273,7181
xen_console_get_uuid(285,7445

tools/libxen/src/xen_sr.c,652
XEN_FREE(30,977
const abstract_type xen_sr_record_abstract_type_ 73,2563
xen_sr_record_free(84,2849
xen_sr_get_record(103,3238
xen_sr_get_by_uuid(126,3693
xen_sr_get_by_name_label(143,4045
xen_sr_get_name_label(160,4427
xen_sr_get_name_description(177,4781
xen_sr_get_vdis(194,5147
xen_sr_get_pbds(211,5507
xen_sr_get_virtual_allocation(228,5867
xen_sr_get_physical_utilisation(244,6216
xen_sr_get_physical_size(260,6569
xen_sr_get_type(276,6908
xen_sr_get_content_type(293,7250
xen_sr_set_name_label(310,7608
xen_sr_set_name_description(326,8007
xen_sr_get_supported_types(342,8430
xen_sr_get_all(354,8707
xen_sr_get_uuid(366,8956

tools/libxen/src/xen_crashdump.c,347
XEN_FREE(30,983
const abstract_type xen_crashdump_record_abstract_type_ 52,1678
xen_crashdump_record_free(63,1992
xen_crashdump_get_record(78,2261
xen_crashdump_get_by_uuid(101,2765
xen_crashdump_get_vm(118,3138
xen_crashdump_get_vdi(135,3512
xen_crashdump_destroy(152,3889
xen_crashdump_get_all(166,4202
xen_crashdump_get_uuid(178,4472

tools/libxen/src/xen_network.c,729
XEN_FREE(31,1025
const abstract_type xen_network_record_abstract_type_ 62,2147
xen_network_record_free(73,2453
xen_network_get_record(91,2850
xen_network_get_by_uuid(114,3340
xen_network_create(131,3707
xen_network_destroy(148,4095
xen_network_get_by_name_label(162,4408
xen_network_get_name_label(179,4805
xen_network_get_name_description(196,5184
xen_network_get_vifs(213,5575
xen_network_get_pifs(230,5960
xen_network_get_other_config(247,6345
xen_network_set_name_label(264,6756
xen_network_set_name_description(280,7180
xen_network_set_other_config(296,7628
xen_network_add_to_other_config(312,8112
xen_network_remove_from_other_config(330,8639
xen_network_get_all(346,9079
xen_network_get_uuid(358,9343

tools/libxen/src/xen_event_operation.c,274
static const char *lookup_table[lookup_table29,988
xen_event_operation_set_alloc(38,1096
xen_event_operation_set_free(46,1272
xen_event_operation_to_string(53,1365
xen_event_operation_from_string(60,1493
const abstract_type xen_event_operation_abstract_type_ 66,1622

tools/libxen/src/xen_vm_guest_metrics.c,610
XEN_FREE(29,976
const abstract_type xen_vm_guest_metrics_record_abstract_type_ 66,2565
xen_vm_guest_metrics_record_free(77,2907
xen_vm_guest_metrics_get_record(96,3412
xen_vm_guest_metrics_get_by_uuid(119,3965
xen_vm_guest_metrics_get_os_version(136,4359
xen_vm_guest_metrics_get_pv_drivers_version(153,4811
xen_vm_guest_metrics_get_memory(170,5279
xen_vm_guest_metrics_get_disks(187,5723
xen_vm_guest_metrics_get_networks(204,6165
xen_vm_guest_metrics_get_other(221,6613
xen_vm_guest_metrics_get_last_updated(238,7055
xen_vm_guest_metrics_get_all(254,7466
xen_vm_guest_metrics_get_uuid(266,7757

tools/libxen/src/xen_host.c,1755
XEN_FREE(36,1184
const abstract_type xen_host_record_abstract_type_ 118,4727
xen_host_record_free(129,5021
xen_host_get_record(161,6163
xen_host_get_by_uuid(184,6632
xen_host_get_by_name_label(201,6990
xen_host_get_name_label(218,7378
xen_host_get_name_description(235,7742
xen_host_get_api_version_major(252,8118
xen_host_get_api_version_minor(268,8475
xen_host_get_api_version_vendor(284,8832
xen_host_get_api_version_vendor_implementation(301,9212
xen_host_get_enabled(318,9650
xen_host_get_software_version(334,9985
xen_host_get_other_config(351,10389
xen_host_get_capabilities(368,10785
xen_host_get_cpu_configuration(385,11174
xen_host_get_sched_policy(402,11580
xen_host_get_supported_bootloaders(419,11948
xen_host_get_resident_vms(436,12355
xen_host_get_logging(453,12740
xen_host_get_pifs(470,13126
xen_host_get_suspend_image_sr(487,13496
xen_host_get_crash_dump_sr(504,13873
xen_host_get_pbds(521,14244
xen_host_get_host_cpus(538,14614
xen_host_get_metrics(555,14999
xen_host_set_name_label(572,15368
xen_host_set_name_description(588,15777
xen_host_set_other_config(604,16210
xen_host_add_to_other_config(620,16679
xen_host_remove_from_other_config(638,17191
xen_host_set_logging(654,17616
xen_host_add_to_logging(670,18065
xen_host_remove_from_logging(688,18567
xen_host_set_suspend_image_sr(704,18982
xen_host_set_crash_dump_sr(720,19426
xen_host_disable(736,19858
xen_host_enable(750,20156
xen_host_shutdown(764,20452
xen_host_reboot(778,20752
xen_host_dmesg(792,21048
xen_host_dmesg_clear(809,21394
xen_host_get_log(826,21752
xen_host_send_debug_keys(843,22102
xen_host_list_methods(859,22511
xen_host_get_all(871,22778
xen_host_get_uuid(883,23033
xen_host_get_resident_cpu_pools(900,23385

tools/libxen/src/xen_string_string_map.c,72
xen_string_string_map_alloc(26,917
xen_string_string_map_free(36,1189

tools/libxen/src/xen_cpu_pool.c,1404
XEN_FREE(28,958
const abstract_type xen_cpu_pool_record_abstract_type_ 78,2940
xen_cpu_pool_record_free(89,3250
xen_cpu_pool_get_record(110,3796
xen_cpu_pool_get_by_uuid(134,4297
xen_cpu_pool_create(151,4667
xen_cpu_pool_destroy(169,5064
xen_cpu_pool_get_uuid(183,5382
xen_cpu_pool_deactivate(200,5754
xen_cpu_pool_activate(214,6079
xen_cpu_pool_add_host_CPU_live(228,6400
xen_cpu_pool_remove_host_CPU_live(245,6853
xen_cpu_pool_get_all(262,7312
xen_cpu_pool_get_by_name_label(273,7578
xen_cpu_pool_get_activated(291,7982
xen_cpu_pool_get_auto_power_on(308,8345
xen_cpu_pool_get_host_CPUs(325,8716
xen_cpu_pool_get_name_description(343,9125
xen_cpu_pool_get_name_label(361,9525
xen_cpu_pool_get_ncpu(379,9913
xen_cpu_pool_get_proposed_CPUs(396,10268
xen_cpu_pool_get_other_config(414,10683
xen_cpu_pool_get_resident_on(432,11103
xen_cpu_pool_get_sched_policy(450,11496
xen_cpu_pool_get_started_VMs(468,11888
xen_cpu_pool_set_auto_power_on(486,12288
xen_cpu_pool_set_proposed_CPUs(503,12738
xen_cpu_pool_add_to_proposed_CPUs(520,13221
xen_cpu_pool_remove_from_proposed_CPUs(537,13680
xen_cpu_pool_set_name_label(554,14149
xen_cpu_pool_set_name_description(571,14582
xen_cpu_pool_set_ncpu(588,15027
xen_cpu_pool_set_other_config(604,15438
xen_cpu_pool_add_to_other_config(621,15931
xen_cpu_pool_remove_from_other_config(640,16467
xen_cpu_pool_set_sched_policy(657,16916

tools/libxen/src/xen_vm_power_state.c,336
static const char *lookup_table[lookup_table29,986
xen_vm_power_state_set_alloc(41,1150
xen_vm_power_state_set_free(49,1323
xen_vm_power_state_to_string(56,1414
xen_vm_power_state_from_string(63,1539
const abstract_type xen_vm_power_state_abstract_type_ 69,1667
const abstract_type xen_vm_power_state_set_abstract_type_ 79,1969

tools/libxen/src/xen_event.c,259
XEN_ALLOC(29,964
const abstract_type xen_event_record_abstract_type_ 55,1876
const abstract_type xen_event_record_set_abstract_type_ 65,2169
xen_event_record_free(73,2321
xen_event_register(87,2526
xen_event_unregister(101,2866
xen_event_next(115,3210

tools/libxen/src/xen_pif.c,576
XEN_FREE(31,1020
const abstract_type xen_pif_record_abstract_type_ 68,2258
xen_pif_record_free(79,2548
xen_pif_get_record(97,2920
xen_pif_get_by_uuid(120,3382
xen_pif_get_device(137,3737
xen_pif_get_network(154,4088
xen_pif_get_host(171,4447
xen_pif_get_mac(188,4797
xen_pif_get_mtu(205,5142
xen_pif_get_vlan(221,5466
xen_pif_get_metrics(237,5792
xen_pif_set_device(254,6155
xen_pif_set_mac(270,6553
xen_pif_set_mtu(286,6939
xen_pif_set_vlan(302,7321
xen_pif_create_vlan(318,7707
xen_pif_destroy(341,8362
xen_pif_get_all(355,8657
xen_pif_get_uuid(367,8909

tools/libxen/src/xen_string_set.c,58
xen_string_set_alloc(25,871
xen_string_set_free(34,1083

tools/libxen/src/xen_acmpolicy.c,677
static const struct_member xen_acmpolicy_record_struct_members[xen_acmpolicy_record_struct_members30,988
const abstract_type xen_acmpolicy_record_abstract_type_ 46,1569
static const struct_member xen_acm_header_struct_members[xen_acm_header_struct_members56,1877
const abstract_type xen_acm_header_abstract_type_ 78,2726
xen_acm_header_free(89,3033
xen_acmpolicy_record_free(106,3311
xen_acmpolicy_get_record(121,3523
xen_acmpolicy_get_header(145,4049
xen_acmpolicy_get_xml(164,4497
xen_acmpolicy_get_map(183,4914
xen_acmpolicy_get_binary(202,5331
xen_acmpolicy_get_enforced_binary(220,5735
xen_acmpolicy_get_VM_ssidref(238,6166
xen_acmpolicy_get_uuid(255,6542

tools/libxen/src/xen_pif_metrics.c,392
XEN_FREE(28,928
const abstract_type xen_pif_metrics_record_abstract_type_ 53,1831
xen_pif_metrics_record_free(64,2153
xen_pif_metrics_get_record(77,2344
xen_pif_metrics_get_by_uuid(100,2862
xen_pif_metrics_get_io_read_kbs(117,3241
xen_pif_metrics_get_io_write_kbs(133,3622
xen_pif_metrics_get_last_updated(149,4005
xen_pif_metrics_get_all(165,4391
xen_pif_metrics_get_uuid(177,4667

tools/libxen/src/xen_user.c,345
XEN_FREE(28,921
const abstract_type xen_user_record_abstract_type_ 50,1593
xen_user_record_free(61,1887
xen_user_get_record(76,2122
xen_user_get_by_uuid(99,2591
xen_user_create(116,2949
xen_user_destroy(133,3322
xen_user_get_short_name(147,3620
xen_user_get_fullname(164,3984
xen_user_set_fullname(181,4344
xen_user_get_uuid(197,4755

tools/libxen/src/xen_on_crash_behaviour.c,360
static const char *lookup_table[lookup_table29,994
xen_on_crash_behaviour_set_alloc(41,1196
xen_on_crash_behaviour_set_free(49,1381
xen_on_crash_behaviour_to_string(56,1480
xen_on_crash_behaviour_from_string(63,1617
const abstract_type xen_on_crash_behaviour_abstract_type_ 69,1749
const abstract_type xen_on_crash_behaviour_set_abstract_type_ 79,2063

tools/libxen/src/xen_host_cpu.c,640
XEN_FREE(30,989
const abstract_type xen_host_cpu_record_abstract_type_ 76,2738
xen_host_cpu_record_free(87,3048
xen_host_cpu_get_record(107,3470
xen_host_cpu_get_by_uuid(130,3967
xen_host_cpu_get_host(147,4337
xen_host_cpu_get_number(164,4712
xen_host_cpu_get_vendor(180,5067
xen_host_cpu_get_speed(197,5443
xen_host_cpu_get_modelname(213,5796
xen_host_cpu_get_stepping(230,6178
xen_host_cpu_get_flags(247,6558
xen_host_cpu_get_features(264,6932
xen_host_cpu_get_utilisation(281,7312
xen_host_cpu_get_all(297,7678
xen_host_cpu_get_uuid(309,7945
xen_host_cpu_get_cpu_pool(326,8317
xen_host_cpu_get_unassigned_cpus(343,8720

tools/libxen/src/xen_vbd.c,1137
XEN_FREE(34,1127
const abstract_type xen_vbd_record_abstract_type_ 92,3432
xen_vbd_record_free(103,3722
xen_vbd_get_record(125,4311
xen_vbd_get_by_uuid(148,4773
xen_vbd_create(165,5128
xen_vbd_destroy(182,5496
xen_vbd_get_vm(196,5789
xen_vbd_get_vdi(213,6133
xen_vbd_get_device(230,6480
xen_vbd_get_bootable(247,6831
xen_vbd_get_mode(263,7163
xen_vbd_get_type(278,7508
xen_vbd_get_currently_attached(293,7853
xen_vbd_get_status_code(309,8205
xen_vbd_get_status_detail(325,8545
xen_vbd_get_runtime_properties(342,8910
xen_vbd_get_qos_algorithm_type(359,9313
xen_vbd_get_qos_algorithm_params(376,9688
xen_vbd_get_qos_supported_algorithms(393,10095
xen_vbd_get_metrics(410,10503
xen_vbd_set_device(427,10866
xen_vbd_set_bootable(443,11264
xen_vbd_set_mode(459,11665
xen_vbd_set_type(475,12072
xen_vbd_set_qos_algorithm_type(491,12479
xen_vbd_set_qos_algorithm_params(507,12917
xen_vbd_add_to_qos_algorithm_params(523,13405
xen_vbd_remove_from_qos_algorithm_params(541,13928
xen_vbd_media_change(557,14364
xen_vbd_plug(573,14762
xen_vbd_unplug(587,15051
xen_vbd_get_all(601,15344
xen_vbd_get_uuid(613,15596

tools/libxen/src/xen_string_set.h,154
#define XEN_STRING_SET_H20,814
typedef struct xen_string_set26,867
    size_t size;28,899
    char *contents[contents29,916
} xen_string_set;30,938

tools/libxen/include/xen/api/xen_vbd_metrics.h,1007
#define XEN_VBD_METRICS_H20,815
typedef struct xen_vbd_metrics_set41,1183
    size_t size;43,1220
    xen_vbd_metrics *contents[contents44,1237
} xen_vbd_metrics_set;45,1270
typedef struct xen_vbd_metrics_record61,1598
    xen_vbd_metrics handle;63,1638
    char *uuid;uuid64,1666
    double io_read_kbs;65,1682
    double io_write_kbs;66,1706
    time_t last_updated;67,1731
} xen_vbd_metrics_record;68,1756
typedef struct xen_vbd_metrics_record_opt84,2113
    bool is_record;86,2157
        xen_vbd_metrics handle;89,2193
        xen_vbd_metrics_record *record;record90,2225
    } u;91,2265
} xen_vbd_metrics_record_opt;92,2274
typedef struct xen_vbd_metrics_record_set108,2667
    size_t size;110,2711
    xen_vbd_metrics_record *contents[contents111,2728
} xen_vbd_metrics_record_set;112,2768
typedef struct xen_vbd_metrics_record_opt_set129,3173
    size_t size;131,3221
    xen_vbd_metrics_record_opt *contents[contents132,3238
} xen_vbd_metrics_record_opt_set;133,3282

tools/libxen/include/xen/api/xen_xspolicy_decl.h,83
#define XEN_XSPOLICY_DECL_H21,845
typedef void *xen_xspolicy;xen_xspolicy23,874

tools/libxen/include/xen/api/xen_vbd_metrics_decl.h,92
#define XEN_VBD_METRICS_DECL_H20,820
typedef void *xen_vbd_metrics;xen_vbd_metrics22,852

tools/libxen/include/xen/api/xen_vm.h,2776
#define XEN_VM_H20,806
typedef struct xen_vm_set55,1635
    size_t size;57,1663
    xen_vm *contents[contents58,1680
} xen_vm_set;59,1704
typedef struct xen_vm_record75,1969
    xen_vm handle;77,2000
    char *uuid;uuid78,2019
    enum xen_vm_power_state power_state;79,2035
    char *name_label;name_label80,2076
    char *name_description;name_description81,2098
    int64_t user_version;82,2126
    bool is_a_template;83,2152
    bool auto_power_on;84,2176
    struct xen_vdi_record_opt *suspend_vdi;suspend_vdi85,2200
    struct xen_host_record_opt *resident_on;resident_on86,2244
    int64_t memory_static_max;87,2289
    int64_t memory_dynamic_max;88,2320
    int64_t memory_dynamic_min;89,2352
    int64_t memory_static_min;90,2384
    xen_string_string_map *vcpus_params;vcpus_params91,2415
    int64_t vcpus_max;92,2456
    int64_t vcpus_at_startup;93,2479
    enum xen_on_normal_exit actions_after_shutdown;94,2509
    enum xen_on_normal_exit actions_after_reboot;95,2561
    enum xen_on_crash_behaviour actions_after_crash;96,2611
    struct xen_console_record_opt_set *consoles;consoles97,2664
    struct xen_vif_record_opt_set *vifs;vifs98,2713
    struct xen_vbd_record_opt_set *vbds;vbds99,2754
    struct xen_crashdump_record_opt_set *crash_dumps;crash_dumps100,2795
    struct xen_vtpm_record_opt_set *vtpms;vtpms101,2849
    char *pv_bootloader;pv_bootloader102,2892
    char *pv_kernel;pv_kernel103,2917
    char *pv_ramdisk;pv_ramdisk104,2938
    char *pv_args;pv_args105,2960
    char *pv_bootloader_args;pv_bootloader_args106,2979
    char *hvm_boot_policy;hvm_boot_policy107,3009
    xen_string_string_map *hvm_boot_params;hvm_boot_params108,3036
    xen_string_string_map *platform;platform109,3080
    char *pci_bus;pci_bus110,3117
    xen_string_string_map *other_config;other_config111,3136
    int64_t domid;112,3177
    bool is_control_domain;113,3196
    struct xen_vm_metrics_record_opt *metrics;metrics114,3224
    struct xen_vm_guest_metrics_record_opt *guest_metrics;guest_metrics115,3271
    char *security_label;security_label116,3330
    char *pool_name;pool_name117,3356
    struct xen_cpu_pool_record_opt_set *cpu_pool;cpu_pool118,3377
} xen_vm_record;119,3427
typedef struct xen_vm_record_opt135,3721
    bool is_record;137,3756
        xen_vm handle;140,3792
        xen_vm_record *record;record141,3815
    } u;142,3846
} xen_vm_record_opt;143,3855
typedef struct xen_vm_record_set159,4185
    size_t size;161,4220
    xen_vm_record *contents[contents162,4237
} xen_vm_record_set;163,4268
typedef struct xen_vm_record_opt_set180,4610
    size_t size;182,4649
    xen_vm_record_opt *contents[contents183,4666
} xen_vm_record_opt_set;184,4701

tools/libxen/include/xen/api/xen_user_decl.h,71
#define XEN_USER_DECL_H20,813
typedef void *xen_user;xen_user22,838

tools/libxen/include/xen/api/xen_host.h,2136
#define XEN_HOST_H20,808
typedef struct xen_host_set49,1425
    size_t size;51,1455
    xen_host *contents[contents52,1472
} xen_host_set;53,1498
typedef struct xen_host_record69,1777
    xen_host handle;71,1810
    char *uuid;uuid72,1831
    char *name_label;name_label73,1847
    char *name_description;name_description74,1869
    int64_t api_version_major;75,1897
    int64_t api_version_minor;76,1928
    char *api_version_vendor;api_version_vendor77,1959
    xen_string_string_map *api_version_vendor_implementation;api_version_vendor_implementation78,1989
    bool enabled;79,2051
    xen_string_string_map *software_version;software_version80,2069
    xen_string_string_map *other_config;other_config81,2114
    struct xen_string_set *capabilities;capabilities82,2155
    xen_string_string_map *cpu_configuration;cpu_configuration83,2196
    char *sched_policy;sched_policy84,2242
    struct xen_string_set *supported_bootloaders;supported_bootloaders85,2266
    struct xen_vm_record_opt_set *resident_vms;resident_vms86,2316
    xen_string_string_map *logging;logging87,2364
    struct xen_pif_record_opt_set *pifs;pifs88,2400
    struct xen_sr_record_opt *suspend_image_sr;suspend_image_sr89,2441
    struct xen_sr_record_opt *crash_dump_sr;crash_dump_sr90,2489
    struct xen_pbd_record_opt_set *pbds;pbds91,2534
    struct xen_host_cpu_record_opt_set *host_cpus;host_cpus92,2575
    struct xen_host_metrics_record_opt *metrics;metrics93,2626
    struct xen_cpu_pool_record_opt_set *resident_cpu_pools;resident_cpu_pools94,2675
} xen_host_record;95,2735
typedef struct xen_host_record_opt111,3043
    bool is_record;113,3080
        xen_host handle;116,3116
        xen_host_record *record;record117,3141
    } u;118,3174
} xen_host_record_opt;119,3183
typedef struct xen_host_record_set135,3527
    size_t size;137,3564
    xen_host_record *contents[contents138,3581
} xen_host_record_set;139,3614
typedef struct xen_host_record_opt_set156,3970
    size_t size;158,4011
    xen_host_record_opt *contents[contents159,4028
} xen_host_record_opt_set;160,4065

tools/libxen/include/xen/api/xen_acmpolicy.h,557
#define XEN_ACMPOLICY_H21,841
typedef struct xen_acmpolicy_record32,1010
    xen_xspolicy handle;34,1048
    char *uuid;uuid35,1073
    char *repr;repr36,1089
    xs_instantiationflags flags;37,1105
    xs_type type;38,1138
} xen_acmpolicy_record;39,1156
typedef struct xen_acm_header58,1549
    char *policyname;policyname60,1581
    char *policyurl;policyurl61,1603
    char *date;date62,1624
    char *reference;reference63,1640
    char *namespaceurl;namespaceurl64,1661
    char *version;version65,1685
} xen_acm_header;66,1704

tools/libxen/include/xen/api/xen_vm_metrics_decl.h,89
#define XEN_VM_METRICS_DECL_H20,819
typedef void *xen_vm_metrics;xen_vm_metrics22,850

tools/libxen/include/xen/api/xen_host_decl.h,71
#define XEN_HOST_DECL_H20,813
typedef void *xen_host;xen_host22,838

tools/libxen/include/xen/api/xen_on_normal_exit.h,305
#define XEN_ON_NORMAL_EXIT_H20,818
enum xen_on_normal_exit26,883
    XEN_ON_NORMAL_EXIT_DESTROY,31,953
    XEN_ON_NORMAL_EXIT_RESTART36,1024
typedef struct xen_on_normal_exit_set40,1060
    size_t size;42,1100
    enum xen_on_normal_exit contents[contents43,1117
} xen_on_normal_exit_set;44,1157

tools/libxen/include/xen/api/xen_vtpm.h,952
#define XEN_VTPM_H21,841
typedef struct xen_vtpm_set43,1163
    size_t size;45,1193
    xen_vtpm *contents[contents46,1210
} xen_vtpm_set;47,1236
typedef struct xen_vtpm_record63,1515
    xen_vtpm handle;65,1548
    char *uuid;uuid66,1569
    struct xen_vm_record_opt *vm;vm67,1585
    struct xen_vm_record_opt *backend;backend68,1619
    xen_string_string_map *other_config;other_config69,1658
} xen_vtpm_record;70,1699
typedef struct xen_vtpm_record_opt86,2007
    bool is_record;88,2044
        xen_vtpm handle;91,2080
        xen_vtpm_record *record;record92,2105
    } u;93,2138
} xen_vtpm_record_opt;94,2147
typedef struct xen_vtpm_record_set110,2491
    size_t size;112,2528
    xen_vtpm_record *contents[contents113,2545
} xen_vtpm_record_set;114,2578
typedef struct xen_vtpm_record_opt_set131,2934
    size_t size;133,2975
    xen_vtpm_record_opt *contents[contents134,2992
} xen_vtpm_record_opt_set;135,3029

tools/libxen/include/xen/api/xen_int_string_set_map.h,367
#define XEN_INT_STRING_SET_MAP_H20,822
typedef struct xen_int_string_set_map_contents26,891
  int64_t key;28,940
  struct xen_string_set *val;val29,955
} xen_int_string_set_map_contents;30,985
typedef struct xen_int_string_set_map33,1022
    size_t size;35,1062
    xen_int_string_set_map_contents contents[contents36,1079
} xen_int_string_set_map;37,1127

tools/libxen/include/xen/api/xen_crashdump_decl.h,86
#define XEN_CRASHDUMP_DECL_H20,818
typedef void *xen_crashdump;xen_crashdump22,848

tools/libxen/include/xen/api/xen_event_decl.h,32
#define XEN_EVENT_DECL_H20,814

tools/libxen/include/xen/api/xen_network_decl.h,80
#define XEN_NETWORK_DECL_H20,816
typedef void *xen_network;xen_network22,844

tools/libxen/include/xen/api/xen_xspolicy.h,2353
#define XEN_XSPOLICY_H21,840
typedef int64_t xs_type;32,1014
typedef int64_t xs_instantiationflags;33,1039
enum xs_type 35,1079
    XS_POLICY_ACM 36,1094
enum xs_instantiationflags 39,1128
    XS_INST_NONE 40,1157
    XS_INST_BOOT 41,1179
    XS_INST_LOAD 42,1208
#define XSERR_BASE 47,1307
#define XSERR_SUCCESS 49,1356
#define XSERR_GENERAL_FAILURE 50,1399
#define XSERR_BAD_XML 51,1455
#define XSERR_XML_PROCESSING 52,1511
#define XSERR_POLICY_INCONSISTENT 53,1567
#define XSERR_FILE_ERROR 54,1623
#define XSERR_BAD_RESOURCE_FORMAT 55,1679
#define XSERR_BAD_LABEL_FORMAT 56,1735
#define XSERR_RESOURCE_NOT_LABELED 57,1791
#define XSERR_RESOURCE_ALREADY_LABELED 58,1847
#define XSERR_WRONG_POLICY_TYPE 59,1903
#define XSERR_BOOTPOLICY_INSTALLED 60,1959
#define XSERR_NO_DEFAULT_BOOT_TITLE 61,2015
#define XSERR_POLICY_LOAD_FAILED 62,2071
#define XSERR_POLICY_LOADED 63,2127
#define XSERR_POLICY_TYPE_UNSUPPORTED 64,2183
#define XSERR_BAD_CONFLICTSET 65,2239
#define XSERR_RESOURCE_IN_USE 66,2295
#define XSERR_BAD_POLICY_NAME 67,2351
#define XSERR_RESOURCE_ACCESS 68,2407
#define XSERR_HV_OP_FAILED 69,2463
#define XSERR_BOOTPOLICY_INSTALL_ERROR 70,2519
#define XSERR_VM_NOT_AUTHORIZED 71,2575
#define XSERR_VM_IN_CONFLICT 72,2631
typedef struct xen_xspolicy_set83,2848
    size_t size;85,2882
    xen_xspolicy *contents[contents86,2899
} xen_xspolicy_set;87,2929
typedef struct xen_xspolicy_record103,3236
    xen_xspolicy handle;105,3273
    char *uuid;uuid106,3298
    char *repr;repr107,3314
    xs_instantiationflags flags;108,3330
    xs_type type;109,3363
} xen_xspolicy_record;110,3381
typedef struct xen_xspolicy_record_opt126,3717
    bool is_record;128,3758
        xen_xspolicy handle;131,3794
        xen_xspolicy_record *record;record132,3823
    } u;133,3860
} xen_xspolicy_record_opt;134,3869
typedef struct xen_xspolicy_record_set150,4241
    size_t size;152,4282
    xen_xspolicy_record *contents[contents153,4299
} xen_xspolicy_record_set;154,4336
typedef struct xen_xs_policystate173,4812
    xen_xspolicy_record_opt *xs_ref;xs_ref175,4848
    int64_t xserr;176,4885
    char *repr;repr177,4904
    xs_type type;178,4920
    xs_instantiationflags flags;179,4938
    char *version;version180,4971
    char *errors;errors181,4990
} xen_xs_policystate;182,5008

tools/libxen/include/xen/api/xen_console_decl.h,80
#define XEN_CONSOLE_DECL_H20,816
typedef void *xen_console;xen_console22,844

tools/libxen/include/xen/api/xen_vdi.h,1273
#define XEN_VDI_H20,807
typedef struct xen_vdi_set46,1273
    size_t size;48,1302
    xen_vdi *contents[contents49,1319
} xen_vdi_set;50,1344
typedef struct xen_vdi_record66,1616
    xen_vdi handle;68,1648
    char *uuid;uuid69,1668
    char *name_label;name_label70,1684
    char *name_description;name_description71,1706
    struct xen_sr_record_opt *sr;sr72,1734
    struct xen_vbd_record_opt_set *vbds;vbds73,1768
    struct xen_crashdump_record_opt_set *crash_dumps;crash_dumps74,1809
    int64_t virtual_size;75,1863
    int64_t physical_utilisation;76,1889
    enum xen_vdi_type type;77,1923
    bool sharable;78,1951
    bool read_only;79,1970
    xen_string_string_map *other_config;other_config80,1990
} xen_vdi_record;81,2031
typedef struct xen_vdi_record_opt97,2332
    bool is_record;99,2368
        xen_vdi handle;102,2404
        xen_vdi_record *record;record103,2428
    } u;104,2460
} xen_vdi_record_opt;105,2469
typedef struct xen_vdi_record_set121,2806
    size_t size;123,2842
    xen_vdi_record *contents[contents124,2859
} xen_vdi_record_set;125,2891
typedef struct xen_vdi_record_opt_set142,3240
    size_t size;144,3280
    xen_vdi_record_opt *contents[contents145,3297
} xen_vdi_record_opt_set;146,3333

tools/libxen/include/xen/api/xen_string_string_map.h,345
#define XEN_STRING_STRING_MAP_H20,821
typedef struct xen_string_string_map_contents26,889
  char *key;key28,937
  char *val;val29,950
} xen_string_string_map_contents;30,963
typedef struct xen_string_string_map33,999
    size_t size;35,1038
    xen_string_string_map_contents contents[contents36,1055
} xen_string_string_map;37,1102

tools/libxen/include/xen/api/xen_int_float_map.h,316
#define XEN_INT_FLOAT_MAP_H20,817
typedef struct xen_int_float_map_contents26,881
  int64_t key;28,925
  double val;29,940
} xen_int_float_map_contents;30,954
typedef struct xen_int_float_map33,986
    size_t size;35,1021
    xen_int_float_map_contents contents[contents36,1038
} xen_int_float_map;37,1081

tools/libxen/include/xen/api/xen_cpu_pool.h,1416
#define XEN_CPU_POOL_H20,812
typedef struct xen_cpu_pool_set49,1380
    size_t size;51,1414
    xen_cpu_pool *contents[contents52,1431
} xen_cpu_pool_set;53,1461
typedef struct xen_cpu_pool_record69,1768
    xen_cpu_pool handle;71,1805
    char *uuid;uuid72,1830
    char *name_label;name_label73,1846
    char *name_description;name_description74,1868
    struct xen_host_record_opt *resident_on;resident_on75,1896
    bool auto_power_on;76,1941
    struct xen_vm_record_opt_set *started_vms;started_vms77,1965
    int64_t ncpu;78,2012
    char *sched_policy;sched_policy79,2030
    struct xen_string_set *proposed_cpus;proposed_cpus80,2054
    struct xen_host_cpu_record_opt_set *host_cpus;host_cpus81,2096
    bool activated;82,2147
    xen_string_string_map *other_config;other_config83,2167
} xen_cpu_pool_record;84,2208
typedef struct xen_cpu_pool_record_opt100,2544
    bool is_record;102,2585
        xen_cpu_pool handle;105,2621
        xen_cpu_pool_record *record;record106,2650
    } u;107,2687
} xen_cpu_pool_record_opt;108,2696
typedef struct xen_cpu_pool_record_set124,3068
    size_t size;126,3109
    xen_cpu_pool_record *contents[contents127,3126
} xen_cpu_pool_record_set;128,3163
typedef struct xen_cpu_pool_record_opt_set145,3547
    size_t size;147,3592
    xen_cpu_pool_record_opt *contents[contents148,3609
} xen_cpu_pool_record_opt_set;149,3650

tools/libxen/include/xen/api/xen_crashdump.h,968
#define XEN_CRASHDUMP_H20,813
typedef struct xen_crashdump_set43,1198
    size_t size;45,1233
    xen_crashdump *contents[contents46,1250
} xen_crashdump_set;47,1281
typedef struct xen_crashdump_record63,1595
    xen_crashdump handle;65,1633
    char *uuid;uuid66,1659
    struct xen_vm_record_opt *vm;vm67,1675
    struct xen_vdi_record_opt *vdi;vdi68,1709
} xen_crashdump_record;69,1745
typedef struct xen_crashdump_record_opt85,2088
    bool is_record;87,2130
        xen_crashdump handle;90,2166
        xen_crashdump_record *record;record91,2196
    } u;92,2234
} xen_crashdump_record_opt;93,2243
typedef struct xen_crashdump_record_set109,2622
    size_t size;111,2664
    xen_crashdump_record *contents[contents112,2681
} xen_crashdump_record_set;113,2719
typedef struct xen_crashdump_record_opt_set130,3110
    size_t size;132,3156
    xen_crashdump_record_opt *contents[contents133,3173
} xen_crashdump_record_opt_set;134,3215

tools/libxen/include/xen/api/xen_host_cpu_decl.h,83
#define XEN_HOST_CPU_DECL_H20,817
typedef void *xen_host_cpu;xen_host_cpu22,846

tools/libxen/include/xen/api/xen_vbd_decl.h,68
#define XEN_VBD_DECL_H20,812
typedef void *xen_vbd;xen_vbd22,836

tools/libxen/include/xen/api/xen_vdi_decl.h,68
#define XEN_VDI_DECL_H20,812
typedef void *xen_vdi;xen_vdi22,836

tools/libxen/include/xen/api/xen_pif_decl.h,68
#define XEN_PIF_DECL_H20,812
typedef void *xen_pif;xen_pif22,836

tools/libxen/include/xen/api/xen_network.h,1105
#define XEN_NETWORK_H20,811
typedef struct xen_network_set44,1229
    size_t size;46,1262
    xen_network *contents[contents47,1279
} xen_network_set;48,1308
typedef struct xen_network_record64,1608
    xen_network handle;66,1644
    char *uuid;uuid67,1668
    char *name_label;name_label68,1684
    char *name_description;name_description69,1706
    struct xen_vif_record_opt_set *vifs;vifs70,1734
    struct xen_pif_record_opt_set *pifs;pifs71,1775
    xen_string_string_map *other_config;other_config72,1816
} xen_network_record;73,1857
typedef struct xen_network_record_opt89,2186
    bool is_record;91,2226
        xen_network handle;94,2262
        xen_network_record *record;record95,2290
    } u;96,2326
} xen_network_record_opt;97,2335
typedef struct xen_network_record_set113,2700
    size_t size;115,2740
    xen_network_record *contents[contents116,2757
} xen_network_record_set;117,2793
typedef struct xen_network_record_opt_set134,3170
    size_t size;136,3214
    xen_network_record_opt *contents[contents137,3231
} xen_network_record_opt_set;138,3271

tools/libxen/include/xen/api/xen_vm_power_state.h,465
#define XEN_VM_POWER_STATE_H20,818
enum xen_vm_power_state26,883
    XEN_VM_POWER_STATE_HALTED,31,939
    XEN_VM_POWER_STATE_PAUSED,36,1001
    XEN_VM_POWER_STATE_RUNNING,41,1064
    XEN_VM_POWER_STATE_SUSPENDED,46,1130
    XEN_VM_POWER_STATE_CRASHED,51,1196
    XEN_VM_POWER_STATE_UNKNOWN56,1277
typedef struct xen_vm_power_state_set60,1313
    size_t size;62,1353
    enum xen_vm_power_state contents[contents63,1370
} xen_vm_power_state_set;64,1410

tools/libxen/include/xen/api/xen_user.h,868
#define XEN_USER_H20,808
typedef struct xen_user_set41,1097
    size_t size;43,1127
    xen_user *contents[contents44,1144
} xen_user_set;45,1170
typedef struct xen_user_record61,1449
    xen_user handle;63,1482
    char *uuid;uuid64,1503
    char *short_name;short_name65,1519
    char *fullname;fullname66,1541
} xen_user_record;67,1561
typedef struct xen_user_record_opt83,1869
    bool is_record;85,1906
        xen_user handle;88,1942
        xen_user_record *record;record89,1967
    } u;90,2000
} xen_user_record_opt;91,2009
typedef struct xen_user_record_set107,2353
    size_t size;109,2390
    xen_user_record *contents[contents110,2407
} xen_user_record_set;111,2440
typedef struct xen_user_record_opt_set128,2796
    size_t size;130,2837
    xen_user_record_opt *contents[contents131,2854
} xen_user_record_opt_set;132,2891

tools/libxen/include/xen/api/xen_host_metrics_decl.h,95
#define XEN_HOST_METRICS_DECL_H20,821
typedef void *xen_host_metrics;xen_host_metrics22,854

tools/libxen/include/xen/api/xen_vif.h,1444
#define XEN_VIF_H20,807
typedef struct xen_vif_set46,1288
    size_t size;48,1317
    xen_vif *contents[contents49,1334
} xen_vif_set;50,1359
typedef struct xen_vif_record66,1631
    xen_vif handle;68,1663
    char *uuid;uuid69,1683
    char *device;device70,1699
    struct xen_network_record_opt *network;network71,1717
    struct xen_vm_record_opt *vm;vm72,1761
    char *mac;mac73,1795
    int64_t mtu;74,1810
    bool currently_attached;75,1827
    int64_t status_code;76,1856
    char *status_detail;status_detail77,1881
    xen_string_string_map *runtime_properties;runtime_properties78,1906
    char *qos_algorithm_type;qos_algorithm_type79,1953
    xen_string_string_map *qos_algorithm_params;qos_algorithm_params80,1983
    struct xen_string_set *qos_supported_algorithms;qos_supported_algorithms81,2032
    struct xen_vif_metrics_record_opt *metrics;metrics82,2085
} xen_vif_record;83,2133
typedef struct xen_vif_record_opt99,2434
    bool is_record;101,2470
        xen_vif handle;104,2506
        xen_vif_record *record;record105,2530
    } u;106,2562
} xen_vif_record_opt;107,2571
typedef struct xen_vif_record_set123,2908
    size_t size;125,2944
    xen_vif_record *contents[contents126,2961
} xen_vif_record_set;127,2993
typedef struct xen_vif_record_opt_set144,3342
    size_t size;146,3382
    xen_vif_record_opt *contents[contents147,3399
} xen_vif_record_opt_set;148,3435

tools/libxen/include/xen/api/xen_pif_metrics.h,1007
#define XEN_PIF_METRICS_H20,815
typedef struct xen_pif_metrics_set41,1189
    size_t size;43,1226
    xen_pif_metrics *contents[contents44,1243
} xen_pif_metrics_set;45,1276
typedef struct xen_pif_metrics_record61,1604
    xen_pif_metrics handle;63,1644
    char *uuid;uuid64,1672
    double io_read_kbs;65,1688
    double io_write_kbs;66,1712
    time_t last_updated;67,1737
} xen_pif_metrics_record;68,1762
typedef struct xen_pif_metrics_record_opt84,2119
    bool is_record;86,2163
        xen_pif_metrics handle;89,2199
        xen_pif_metrics_record *record;record90,2231
    } u;91,2271
} xen_pif_metrics_record_opt;92,2280
typedef struct xen_pif_metrics_record_set108,2673
    size_t size;110,2717
    xen_pif_metrics_record *contents[contents111,2734
} xen_pif_metrics_record_set;112,2774
typedef struct xen_pif_metrics_record_opt_set129,3179
    size_t size;131,3227
    xen_pif_metrics_record_opt *contents[contents132,3244
} xen_pif_metrics_record_opt_set;133,3288

tools/libxen/include/xen/api/xen_common.h,886
#define XEN_COMMON_H20,805
typedef bool (*xen_result_func)xen_result_func31,945
typedef int (*xen_call_func)xen_call_func38,1113
    xen_call_func call_func;45,1315
    void *handle;handle46,1344
    const char *session_id;session_id47,1362
    bool ok;48,1390
    char **error_description;error_description49,1403
    int error_description_count;50,1433
} xen_session;51,1466
typedef struct xen_session_record54,1483
    char *uuid;uuid56,1519
    struct xen_host_record_opt *this_host;this_host57,1535
    char *this_user;this_user58,1578
    time_t last_active;59,1599
} xen_session_record;60,1623
typedef struct xen_task_ * xen_task_id;79,1972
    int progress;84,2031
    long eta;85,2049
}  xen_task_status;87,2084
    int major;92,2123
    int minor;93,2138
    int patch;94,2153
    char *extraversion;extraversion95,2168
} xen_version;96,2192

tools/libxen/include/xen/api/xen_vdi_type.h,365
#define XEN_VDI_TYPE_H20,812
enum xen_vdi_type26,871
    XEN_VDI_TYPE_SYSTEM,31,953
    XEN_VDI_TYPE_USER,36,1045
    XEN_VDI_TYPE_EPHEMERAL,41,1134
    XEN_VDI_TYPE_SUSPEND,46,1221
    XEN_VDI_TYPE_CRASHDUMP51,1315
typedef struct xen_vdi_type_set55,1347
    size_t size;57,1381
    enum xen_vdi_type contents[contents58,1398
} xen_vdi_type_set;59,1432

tools/libxen/include/xen/api/xen_host_cpu.h,1244
#define XEN_HOST_CPU_H20,812
typedef struct xen_host_cpu_set43,1197
    size_t size;45,1231
    xen_host_cpu *contents[contents46,1248
} xen_host_cpu_set;47,1278
typedef struct xen_host_cpu_record63,1585
    xen_host_cpu handle;65,1622
    char *uuid;uuid66,1647
    struct xen_host_record_opt *host;host67,1663
    int64_t number;68,1701
    char *vendor;vendor69,1721
    int64_t speed;70,1739
    char *modelname;modelname71,1758
    char *stepping;stepping72,1779
    char *flags;flags73,1799
    char *features;features74,1816
    double utilisation;75,1836
    struct xen_cpu_pool_record_opt_set *cpu_pools;cpu_pools76,1860
} xen_host_cpu_record;77,1911
typedef struct xen_host_cpu_record_opt93,2247
    bool is_record;95,2288
        xen_host_cpu handle;98,2324
        xen_host_cpu_record *record;record99,2353
    } u;100,2390
} xen_host_cpu_record_opt;101,2399
typedef struct xen_host_cpu_record_set117,2771
    size_t size;119,2812
    xen_host_cpu_record *contents[contents120,2829
} xen_host_cpu_record_set;121,2866
typedef struct xen_host_cpu_record_opt_set138,3250
    size_t size;140,3295
    xen_host_cpu_record_opt *contents[contents141,3312
} xen_host_cpu_record_opt_set;142,3353

tools/libxen/include/xen/api/xen_vif_decl.h,68
#define XEN_VIF_DECL_H20,812
typedef void *xen_vif;xen_vif22,836

tools/libxen/include/xen/api/xen_vm_decl.h,65
#define XEN_VM_DECL_H20,811
typedef void *xen_vm;xen_vm22,834

tools/libxen/include/xen/api/xen_pif_metrics_decl.h,92
#define XEN_PIF_METRICS_DECL_H20,820
typedef void *xen_pif_metrics;xen_pif_metrics22,852

tools/libxen/include/xen/api/xen_vif_metrics.h,1007
#define XEN_VIF_METRICS_H20,815
typedef struct xen_vif_metrics_set41,1185
    size_t size;43,1222
    xen_vif_metrics *contents[contents44,1239
} xen_vif_metrics_set;45,1272
typedef struct xen_vif_metrics_record61,1600
    xen_vif_metrics handle;63,1640
    char *uuid;uuid64,1668
    double io_read_kbs;65,1684
    double io_write_kbs;66,1708
    time_t last_updated;67,1733
} xen_vif_metrics_record;68,1758
typedef struct xen_vif_metrics_record_opt84,2115
    bool is_record;86,2159
        xen_vif_metrics handle;89,2195
        xen_vif_metrics_record *record;record90,2227
    } u;91,2267
} xen_vif_metrics_record_opt;92,2276
typedef struct xen_vif_metrics_record_set108,2669
    size_t size;110,2713
    xen_vif_metrics_record *contents[contents111,2730
} xen_vif_metrics_record_set;112,2770
typedef struct xen_vif_metrics_record_opt_set129,3175
    size_t size;131,3223
    xen_vif_metrics_record_opt *contents[contents132,3240
} xen_vif_metrics_record_opt_set;133,3284

tools/libxen/include/xen/api/xen_vm_guest_metrics.h,1359
#define XEN_VM_GUEST_METRICS_H20,820
typedef struct xen_vm_guest_metrics_set42,1287
    size_t size;44,1329
    xen_vm_guest_metrics *contents[contents45,1346
} xen_vm_guest_metrics_set;46,1384
typedef struct xen_vm_guest_metrics_record62,1747
    xen_vm_guest_metrics handle;64,1792
    char *uuid;uuid65,1825
    xen_string_string_map *os_version;os_version66,1841
    xen_string_string_map *pv_drivers_version;pv_drivers_version67,1880
    xen_string_string_map *memory;memory68,1927
    xen_string_string_map *disks;disks69,1962
    xen_string_string_map *networks;networks70,1996
    xen_string_string_map *other;other71,2033
    time_t last_updated;72,2067
} xen_vm_guest_metrics_record;73,2092
typedef struct xen_vm_guest_metrics_record_opt89,2484
    bool is_record;91,2533
        xen_vm_guest_metrics handle;94,2569
        xen_vm_guest_metrics_record *record;record95,2606
    } u;96,2651
} xen_vm_guest_metrics_record_opt;97,2660
typedef struct xen_vm_guest_metrics_record_set113,3088
    size_t size;115,3137
    xen_vm_guest_metrics_record *contents[contents116,3154
} xen_vm_guest_metrics_record_set;117,3199
typedef struct xen_vm_guest_metrics_record_opt_set134,3639
    size_t size;136,3692
    xen_vm_guest_metrics_record_opt *contents[contents137,3709
} xen_vm_guest_metrics_record_opt_set;138,3758

tools/libxen/include/xen/api/xen_event.h,411
#define XEN_EVENT_H20,809
typedef struct xen_event_record36,1060
    int64_t id;38,1094
    time_t timestamp;39,1110
    enum xen_event_operation operation;41,1149
    char *ref;ref42,1189
    char *obj_uuid;obj_uuid43,1204
} xen_event_record;44,1224
typedef struct xen_event_record_set60,1539
    size_t size;62,1577
    xen_event_record *contents[contents63,1594
} xen_event_record_set;64,1628

tools/libxen/include/xen/api/xen_sr.h,1151
#define XEN_SR_H20,806
typedef struct xen_sr_set44,1185
    size_t size;46,1213
    xen_sr *contents[contents47,1230
} xen_sr_set;48,1254
typedef struct xen_sr_record64,1519
    xen_sr handle;66,1550
    char *uuid;uuid67,1569
    char *name_label;name_label68,1585
    char *name_description;name_description69,1607
    struct xen_vdi_record_opt_set *vdis;vdis70,1635
    struct xen_pbd_record_opt_set *pbds;pbds71,1676
    int64_t virtual_allocation;72,1717
    int64_t physical_utilisation;73,1749
    int64_t physical_size;74,1783
    char *type;type75,1810
    char *content_type;content_type76,1826
} xen_sr_record;77,1850
typedef struct xen_sr_record_opt93,2144
    bool is_record;95,2179
        xen_sr handle;98,2215
        xen_sr_record *record;record99,2238
    } u;100,2269
} xen_sr_record_opt;101,2278
typedef struct xen_sr_record_set117,2608
    size_t size;119,2643
    xen_sr_record *contents[contents120,2660
} xen_sr_record_set;121,2691
typedef struct xen_sr_record_opt_set138,3033
    size_t size;140,3072
    xen_sr_record_opt *contents[contents141,3089
} xen_sr_record_opt_set;142,3124

tools/libxen/include/xen/api/xen_vbd_mode.h,253
#define XEN_VBD_MODE_H20,812
enum xen_vbd_mode26,871
    XEN_VBD_MODE_RO,31,940
    XEN_VBD_MODE_RW36,1012
typedef struct xen_vbd_mode_set40,1037
    size_t size;42,1071
    enum xen_vbd_mode contents[contents43,1088
} xen_vbd_mode_set;44,1122

tools/libxen/include/xen/api/xen_vm_metrics.h,1318
#define XEN_VM_METRICS_H20,814
typedef struct xen_vm_metrics_set46,1356
    size_t size;48,1392
    xen_vm_metrics *contents[contents49,1409
} xen_vm_metrics_set;50,1441
typedef struct xen_vm_metrics_record66,1762
    xen_vm_metrics handle;68,1801
    char *uuid;uuid69,1828
    int64_t memory_actual;70,1844
    int64_t vcpus_number;71,1871
    xen_int_float_map *vcpus_utilisation;vcpus_utilisation72,1897
    xen_int_int_map *vcpus_cpu;vcpus_cpu73,1939
    xen_string_string_map *vcpus_params;vcpus_params74,1971
    xen_int_string_set_map *vcpus_flags;vcpus_flags75,2012
    struct xen_string_set *state;state76,2053
    time_t start_time;77,2087
    time_t last_updated;78,2110
} xen_vm_metrics_record;79,2135
typedef struct xen_vm_metrics_record_opt95,2485
    bool is_record;97,2528
        xen_vm_metrics handle;100,2564
        xen_vm_metrics_record *record;record101,2595
    } u;102,2634
} xen_vm_metrics_record_opt;103,2643
typedef struct xen_vm_metrics_record_set119,3029
    size_t size;121,3072
    xen_vm_metrics_record *contents[contents122,3089
} xen_vm_metrics_record_set;123,3128
typedef struct xen_vm_metrics_record_opt_set140,3526
    size_t size;142,3573
    xen_vm_metrics_record_opt *contents[contents143,3590
} xen_vm_metrics_record_opt_set;144,3633

tools/libxen/include/xen/api/xen_vif_metrics_decl.h,92
#define XEN_VIF_METRICS_DECL_H20,820
typedef void *xen_vif_metrics;xen_vif_metrics22,852

tools/libxen/include/xen/api/xen_int_int_map.h,305
#define XEN_INT_INT_MAP_H20,815
typedef struct xen_int_int_map_contents26,877
  int64_t key;28,919
  int64_t val;29,934
} xen_int_int_map_contents;30,949
typedef struct xen_int_int_map33,979
    size_t size;35,1012
    xen_int_int_map_contents contents[contents36,1029
} xen_int_int_map;37,1070

tools/libxen/include/xen/api/xen_all.h,31
#define XEN_API_XEN_ALL_H3,59

tools/libxen/include/xen/api/xen_on_crash_behaviour.h,543
#define XEN_ON_CRASH_BEHAVIOUR_H20,822
enum xen_on_crash_behaviour26,891
    XEN_ON_CRASH_BEHAVIOUR_DESTROY,31,965
    XEN_ON_CRASH_BEHAVIOUR_COREDUMP_AND_DESTROY,36,1073
    XEN_ON_CRASH_BEHAVIOUR_RESTART,41,1161
    XEN_ON_CRASH_BEHAVIOUR_COREDUMP_AND_RESTART,46,1263
    XEN_ON_CRASH_BEHAVIOUR_PRESERVE,51,1363
    XEN_ON_CRASH_BEHAVIOUR_RENAME_RESTART56,1467
typedef struct xen_on_crash_behaviour_set60,1514
    size_t size;62,1558
    enum xen_on_crash_behaviour contents[contents63,1575
} xen_on_crash_behaviour_set;64,1619

tools/libxen/include/xen/api/xen_host_metrics.h,1026
#define XEN_HOST_METRICS_H20,816
typedef struct xen_host_metrics_set41,1175
    size_t size;43,1213
    xen_host_metrics *contents[contents44,1230
} xen_host_metrics_set;45,1264
typedef struct xen_host_metrics_record61,1599
    xen_host_metrics handle;63,1640
    char *uuid;uuid64,1669
    int64_t memory_total;65,1685
    int64_t memory_free;66,1711
    time_t last_updated;67,1736
} xen_host_metrics_record;68,1761
typedef struct xen_host_metrics_record_opt84,2125
    bool is_record;86,2170
        xen_host_metrics handle;89,2206
        xen_host_metrics_record *record;record90,2239
    } u;91,2280
} xen_host_metrics_record_opt;92,2289
typedef struct xen_host_metrics_record_set108,2689
    size_t size;110,2734
    xen_host_metrics_record *contents[contents111,2751
} xen_host_metrics_record_set;112,2792
typedef struct xen_host_metrics_record_opt_set129,3204
    size_t size;131,3253
    xen_host_metrics_record_opt *contents[contents132,3270
} xen_host_metrics_record_opt_set;133,3315

tools/libxen/include/xen/api/xen_vbd_type.h,255
#define XEN_VBD_TYPE_H20,812
enum xen_vbd_type26,871
    XEN_VBD_TYPE_CD,31,945
    XEN_VBD_TYPE_DISK36,1023
typedef struct xen_vbd_type_set40,1050
    size_t size;42,1084
    enum xen_vbd_type contents[contents43,1101
} xen_vbd_type_set;44,1135

tools/libxen/include/xen/api/xen_pif.h,1060
#define XEN_PIF_H20,807
typedef struct xen_pif_set45,1269
    size_t size;47,1298
    xen_pif *contents[contents48,1315
} xen_pif_set;49,1340
typedef struct xen_pif_record65,1612
    xen_pif handle;67,1644
    char *uuid;uuid68,1664
    char *device;device69,1680
    struct xen_network_record_opt *network;network70,1698
    struct xen_host_record_opt *host;host71,1742
    char *mac;mac72,1780
    int64_t mtu;73,1795
    int64_t vlan;74,1812
    struct xen_pif_metrics_record_opt *metrics;metrics75,1830
} xen_pif_record;76,1878
typedef struct xen_pif_record_opt92,2179
    bool is_record;94,2215
        xen_pif handle;97,2251
        xen_pif_record *record;record98,2275
    } u;99,2307
} xen_pif_record_opt;100,2316
typedef struct xen_pif_record_set116,2653
    size_t size;118,2689
    xen_pif_record *contents[contents119,2706
} xen_pif_record_set;120,2738
typedef struct xen_pif_record_opt_set137,3087
    size_t size;139,3127
    xen_pif_record_opt *contents[contents140,3144
} xen_pif_record_opt_set;141,3180

tools/libxen/include/xen/api/xen_vtpm_decl.h,71
#define XEN_VTPM_DECL_H21,841
typedef void *xen_vtpm;xen_vtpm23,866

tools/libxen/include/xen/api/xen_console_protocol.h,351
#define XEN_CONSOLE_PROTOCOL_H20,820
enum xen_console_protocol26,887
    XEN_CONSOLE_PROTOCOL_VT100,31,953
    XEN_CONSOLE_PROTOCOL_RFB,36,1054
    XEN_CONSOLE_PROTOCOL_RDP41,1132
typedef struct xen_console_protocol_set45,1166
    size_t size;47,1208
    enum xen_console_protocol contents[contents48,1225
} xen_console_protocol_set;49,1267

tools/libxen/include/xen/api/xen_cpu_pool_decl.h,83
#define XEN_CPU_POOL_DECL_H20,817
typedef void *xen_cpu_pool;xen_cpu_pool22,846

tools/libxen/include/xen/api/xen_vm_guest_metrics_decl.h,107
#define XEN_VM_GUEST_METRICS_DECL_H20,825
typedef void *xen_vm_guest_metrics;xen_vm_guest_metrics22,862

tools/libxen/include/xen/api/xen_vbd.h,1480
#define XEN_VBD_H20,807
typedef struct xen_vbd_set48,1347
    size_t size;50,1376
    xen_vbd *contents[contents51,1393
} xen_vbd_set;52,1418
typedef struct xen_vbd_record68,1690
    xen_vbd handle;70,1722
    char *uuid;uuid71,1742
    struct xen_vm_record_opt *vm;vm72,1758
    struct xen_vdi_record_opt *vdi;vdi73,1792
    char *device;device74,1828
    bool bootable;75,1846
    enum xen_vbd_mode mode;76,1865
    enum xen_vbd_type type;77,1893
    bool currently_attached;78,1921
    int64_t status_code;79,1950
    char *status_detail;status_detail80,1975
    xen_string_string_map *runtime_properties;runtime_properties81,2000
    char *qos_algorithm_type;qos_algorithm_type82,2047
    xen_string_string_map *qos_algorithm_params;qos_algorithm_params83,2077
    struct xen_string_set *qos_supported_algorithms;qos_supported_algorithms84,2126
    struct xen_vbd_metrics_record_opt *metrics;metrics85,2179
} xen_vbd_record;86,2227
typedef struct xen_vbd_record_opt102,2528
    bool is_record;104,2564
        xen_vbd handle;107,2600
        xen_vbd_record *record;record108,2624
    } u;109,2656
} xen_vbd_record_opt;110,2665
typedef struct xen_vbd_record_set126,3002
    size_t size;128,3038
    xen_vbd_record *contents[contents129,3055
} xen_vbd_record_set;130,3087
typedef struct xen_vbd_record_opt_set147,3436
    size_t size;149,3476
    xen_vbd_record_opt *contents[contents150,3493
} xen_vbd_record_opt_set;151,3529

tools/libxen/include/xen/api/xen_sr_decl.h,65
#define XEN_SR_DECL_H20,811
typedef void *xen_sr;xen_sr22,834

tools/libxen/include/xen/api/xen_pbd.h,970
#define XEN_PBD_H20,807
typedef struct xen_pbd_set44,1237
    size_t size;46,1266
    xen_pbd *contents[contents47,1283
} xen_pbd_set;48,1308
typedef struct xen_pbd_record64,1580
    xen_pbd handle;66,1612
    char *uuid;uuid67,1632
    struct xen_host_record_opt *host;host68,1648
    struct xen_sr_record_opt *sr;sr69,1686
    xen_string_string_map *device_config;device_config70,1720
    bool currently_attached;71,1762
} xen_pbd_record;72,1791
typedef struct xen_pbd_record_opt88,2092
    bool is_record;90,2128
        xen_pbd handle;93,2164
        xen_pbd_record *record;record94,2188
    } u;95,2220
} xen_pbd_record_opt;96,2229
typedef struct xen_pbd_record_set112,2566
    size_t size;114,2602
    xen_pbd_record *contents[contents115,2619
} xen_pbd_record_set;116,2651
typedef struct xen_pbd_record_opt_set133,3000
    size_t size;135,3040
    xen_pbd_record_opt *contents[contents136,3057
} xen_pbd_record_opt_set;137,3093

tools/libxen/include/xen/api/xen_string_set.h,154
#define XEN_STRING_SET_H20,814
typedef struct xen_string_set26,867
    size_t size;28,899
    char *contents[contents29,916
} xen_string_set;30,938

tools/libxen/include/xen/api/xen_event_operation.h,341
#define XEN_EVENT_OPERATION_H20,819
enum xen_event_operation26,885
    XEN_EVENT_OPERATION_ADD,31,962
    XEN_EVENT_OPERATION_DEL,36,1042
    XEN_EVENT_OPERATION_MOD41,1123
typedef struct xen_event_operation_set45,1156
    size_t size;47,1197
    enum xen_event_operation contents[contents48,1214
} xen_event_operation_set;49,1255

tools/libxen/include/xen/api/xen_pbd_decl.h,68
#define XEN_PBD_DECL_H20,812
typedef void *xen_pbd;xen_pbd22,836

tools/libxen/include/xen/api/xen_console.h,1033
#define XEN_CONSOLE_H20,811
typedef struct xen_console_set44,1228
    size_t size;46,1261
    xen_console *contents[contents47,1278
} xen_console_set;48,1307
typedef struct xen_console_record64,1607
    xen_console handle;66,1643
    char *uuid;uuid67,1667
    enum xen_console_protocol protocol;68,1683
    char *location;location69,1723
    struct xen_vm_record_opt *vm;vm70,1743
    xen_string_string_map *other_config;other_config71,1777
} xen_console_record;72,1818
typedef struct xen_console_record_opt88,2147
    bool is_record;90,2187
        xen_console handle;93,2223
        xen_console_record *record;record94,2251
    } u;95,2287
} xen_console_record_opt;96,2296
typedef struct xen_console_record_set112,2661
    size_t size;114,2701
    xen_console_record *contents[contents115,2718
} xen_console_record_set;116,2754
typedef struct xen_console_record_opt_set133,3131
    size_t size;135,3175
    xen_console_record_opt *contents[contents136,3192
} xen_console_record_opt_set;137,3232

tools/libxen/include/xen_vm_power_state_internal.h,45
#define XEN_VM_POWER_STATE_INTERNAL_H27,986

tools/libxen/include/xen_internal.h,1613
#define XEN_INTERNAL_H20,812
enum abstract_typename30,935
  VOID,32,960
  STRING,33,968
  INT,34,978
  FLOAT,35,985
  BOOL,36,994
  DATETIME,37,1002
  SET,38,1014
  MAP,39,1021
  STRUCT,40,1028
  REF,41,1038
  ENUM,42,1045
  ENUMSET43,1053
    size_t size;49,1085
    void *contents[contents50,1102
} arbitrary_set;51,1124
typedef struct struct_member struct_member;54,1143
typedef struct abstract_type57,1189
    enum abstract_typename typename;59,1220
    const struct abstract_type *child;child60,1257
    const char * (*enum_marshaller)enum_marshaller61,1296
    int (*enum_demarshaller)enum_demarshaller62,1338
    size_t struct_size;63,1397
    size_t member_count;64,1421
    const struct_member *members;members65,1446
} abstract_type;66,1480
struct struct_member69,1499
    const char *key;key71,1522
    const struct abstract_type *type;type72,1543
    int offset;73,1581
typedef struct abstract_value93,2227
    const abstract_type *type;type95,2259
        const char *string_val;string_val98,2306
        int64_t int_val;99,2338
        int enum_val;100,2363
        double float_val;101,2385
        bool bool_val;102,2411
        arbitrary_set *set_val;set_val103,2434
        void *struct_val;struct_val104,2466
        time_t datetime_val;105,2492
    } u;106,2521
} abstract_value;107,2530
#define XEN_CALL_(115,2715
#define ENUM_LOOKUP(129,3146
#define XEN_ALLOC(134,3379
#define XEN_FREE(142,3681
#define XEN_SET_ALLOC_FREE(150,3983
#define XEN_SET_ALLOC(155,4110
#define XEN_SET_FREE(166,4706
#define XEN_RECORD_OPT_FREE(177,5302

tools/libxen/include/xen_on_normal_exit_internal.h,45
#define XEN_ON_NORMAL_EXIT_INTERNAL_H27,986

tools/libxen/include/xen_on_crash_behaviour_internal.h,49
#define XEN_ON_CRASH_BEHAVIOUR_INTERNAL_H28,997

tools/libxen/include/xen_vbd_mode_internal.h,39
#define XEN_VBD_MODE_INTERNAL_H27,974

tools/libxen/include/xen_vbd_type_internal.h,39
#define XEN_VBD_TYPE_INTERNAL_H27,974

tools/libxen/include/xen_event_operation_internal.h,46
#define XEN_EVENT_OPERATION_INTERNAL_H27,988

tools/libxen/include/xen_console_protocol_internal.h,47
#define XEN_CONSOLE_PROTOCOL_INTERNAL_H27,990

tools/libxen/include/xen_vdi_type_internal.h,39
#define XEN_VDI_TYPE_INTERNAL_H27,974

tools/libxen/test/test_bindings.c,817
#define _GNU_SOURCE19,789
static void usage(33,1045
static char *url;url49,1388
    xen_result_func func;54,1425
    void *handle;handle55,1451
} xen_comms;56,1469
write_func(67,1794
call_func(80,2107
static void print_error(118,3085
#define NAME_DESCRIPTION 130,3388
#define NAME_DESCRIPTION_2 131,3424
#define NAME_LABEL 132,3464
#define NAME_LABEL_2 133,3492
#define SCHED_NAME 134,3522
#define NCPU_VAL 135,3550
#define NCPU_VAL_2 136,3571
static int pool_tests(139,3596
int main(772,23053
#define CLEANUP 787,23293
static xen_vm create_new_vm(1066,30651
static void print_vm_power_state(1266,36118
static size_t my_strftime(1296,36735
static void print_session_info(1306,36929
static int pstrcmp(1347,37927
static void print_methods(1356,38079
static void print_vm_metrics(1384,38635

tools/libxen/test/test_event_handling.c,326
#define _GNU_SOURCE19,789
static void usage(32,1014
static char *url;url48,1357
    xen_result_func func;53,1394
    void *handle;handle54,1420
} xen_comms;55,1438
write_func(59,1467
call_func(72,1780
static void print_error(110,2758
static size_t my_strftime(124,3113
int main(131,3268
#define CLEANUP 146,3508

stubdom/grub/boot-x86_64.S,476
.globl 7,143
_boot_page:_boot_page8,161
.globl 16,281
_boot_page_entry:_boot_page_entry17,305
_boot_mmuext:_boot_mmuext22,395
.globl 28,537
_boot_pdmfn:_boot_pdmfn29,556
.globl 41,780
_boot_oldpdmfn:_boot_oldpdmfn42,802
.globl 49,942
_boot_stack:_boot_stack50,961
.globl 52,990
_boot_target:_boot_target53,1010
.globl 57,1065
_boot_start_info:_boot_start_info58,1089
.globl 62,1151
_boot_start:_boot_start63,1170
.globl 69,1242
_boot:_boot70,1255

stubdom/grub/boot-x86_32.S,573
.globl 7,143
_boot_page:_boot_page8,161
.globl 16,281
_boot_page_entry:_boot_page_entry17,305
_boot_page_entry_lo:_boot_page_entry_lo18,323
_boot_page_entry_hi:_boot_page_entry_hi20,360
_boot_mmuext:_boot_mmuext25,453
.globl 30,569
_boot_pdmfn:_boot_pdmfn31,588
.globl 42,786
_boot_oldpdmfn:_boot_oldpdmfn43,808
.globl 50,948
_boot_stack:_boot_stack51,967
.globl 54,1022
_boot_target:_boot_target55,1042
.globl 59,1097
_boot_start_info:_boot_start_info60,1121
.globl 64,1183
_boot_start:_boot_start65,1202
.globl 71,1274
_boot:_boot72,1287

stubdom/grub/config.h,86
#undef putchar2,19
#define debug 5,73
#define grub_halt(6,94
#define printf 7,125

stubdom/grub/mini-os.c,2161
char config_file[config_file29,513
unsigned long boot_drive 30,583
unsigned long install_partition 31,625
char version_string[version_string33,670
int saved_entryno;36,731
struct blkfront_dev **blk_dev;blk_dev42,767
int blk_nb;43,798
static struct blkfront_info *blk_info;blk_info44,810
static int vbdcmp(46,850
void init_disk 54,1061
int get_diskinfo 86,1871
biosdisk 115,2771
load_file(141,3384
void *kernel_image,kernel_image173,4030
void *kernel_image, *module_image;module_image173,4030
long  kernel_size,174,4065
long  kernel_size, module_size;174,4065
char *kernel_arg,kernel_arg175,4097
char *kernel_arg, *module_arg;module_arg175,4097
void *multiboot_next_module;multiboot_next_module176,4128
struct xen_multiboot_mod_list *multiboot_next_module_header;multiboot_next_module_header177,4157
load_image 180,4228
load_initrd 196,4632
load_module 208,4892
pv_boot 268,6878
struct netfront_dev *net_dev;net_dev286,7320
minios_probe 289,7355
static void minios_reset(308,7709
static void minios_disable(313,7772
static int minios_poll(318,7844
struct frame 324,8008
        uint8_t dest[dest325,8023
        uint8_t src[src326,8055
        uint16_t type;327,8086
        unsigned char data[data328,8109
static void minios_transmit 330,8142
static char packet[packet343,8549
struct nic nic 345,8585
eth_probe 359,8875
eth_poll 365,8932
eth_disable 371,8989
eth_transmit 377,9045
serial_hw_put 389,9239
serial_hw_fetch 396,9316
struct kbdfront_dev *kbd_dev;kbd_dev413,9537
struct fbfront_dev *fb_dev;fb_dev414,9567
static union xenkbd_in_event ev;415,9595
static int has_ev;416,9628
int console_checkkey 417,9647
static char linux2ascii[linux2ascii426,9846
static char linux2ascii_shifted[linux2ascii_shifted516,11396
int console_getkey 606,12952
static void kbd_thread(655,14029
struct fbfront_dev *fb_open(fb_open661,14122
void kbd_close(689,14833
void fb_close(695,14916
int getrtsecs 706,15060
int currticks 713,15197
void __attribute__ ((noreturn)) grub_reboot 720,15353
#define SCRATCH_MEMSIZE 729,15578
char grub_scratch_mem[grub_scratch_mem733,15738
int main(735,15815

stubdom/grub/kexec.c,318
#define DEBUG(36,836
#define DEBUG(38,894
static unsigned long *pages;pages49,1202
static unsigned long *pages_mfns;pages_mfns50,1231
static unsigned long allocated;51,1265
static void do_exchange(57,1478
int kexec_allocate(76,2034
void kexec(106,2950
#undef start_info225,6888
#define start_info 228,6987

stubdom/grub/osdep.h,317
#define __OSDEP_H__2,20
#define swap32(5,63
#define swap16(6,93
#define htons(10,181
#define ntohs(11,202
#define htonl(12,223
#define ntohl(13,244
#define htons(15,271
#define ntohs(16,298
#define htonl(17,325
#define ntohl(18,352
typedef unsigned long Address;21,387
#define P(25,465
#define P(27,486

stubdom/libpci.config.h,143
#define PCI_OS_MINIOS1,0
#define PCI_HAVE_STDINT_H2,22
#define PCI_PATH_IDS_DIR 3,48
#define PCI_COMPRESSED_IDS4,77
#define PCI_IDS 5,104

stubdom/caml/main-caml.c,106
int *__errno_location;__errno_location16,280
void *__ctype_b_loc;__ctype_b_loc18,375
int main(20,397

stubdom/c/main.c,15
int main(4,40

extras/mini-os/console/console.c,272
#define USE_XEN_CONSOLE50,1956
static int console_initialised 55,2127
void xencons_rx(59,2183
void xencons_tx(72,2465
void console_print(79,2537
void print(118,3656
void printk(138,4125
void xprintk(146,4264
void init_console(153,4403
void fini_console(162,4610

extras/mini-os/console/xencons_ring.c,485
static inline void notify_daemon(17,396
static inline struct xencons_interface *xencons_interface(xencons_interface26,663
int xencons_ring_send_no_notify(31,787
int xencons_ring_send(56,1342
static void handle_input(68,1544
int xencons_ring_avail(102,2215
int xencons_ring_recv(120,2561
struct consfront_dev *xencons_ring_init(xencons_ring_init150,3206
void free_consfront(185,4005
struct consfront_dev *init_consfront(init_consfront200,4251
void xencons_resume(335,7815

extras/mini-os/mm.c,1092
#define DEBUG(46,1955
#define DEBUG(49,2056
static unsigned long *alloc_bitmap;alloc_bitmap57,2213
#define PAGES_PER_MAPWORD 58,2249
#define allocated_in_map(60,2304
static void map_alloc(72,2705
static void map_free(94,3382
typedef struct chunk_head_st chunk_head_t;121,4114
typedef struct chunk_tail_st chunk_tail_t;122,4157
struct chunk_head_st 124,4201
    chunk_head_t  *next;next125,4224
    chunk_head_t **pprev;pprev126,4249
    int            level;127,4275
struct chunk_tail_st 130,4305
    int level;131,4328
#define FREELIST_SIZE 135,4417
static chunk_head_t *free_head[free_head136,4471
static chunk_head_t  free_tail[free_tail137,4518
#define FREELIST_EMPTY(138,4565
#define round_pgdown(140,4614
#define round_pgup(141,4657
USED static void print_allocation(148,4822
USED static void print_chunks(163,5219
static void init_page_allocator(200,6182
unsigned long alloc_pages(258,7869
void free_pages(308,9165
int free_physical_pages(365,10892
void *sbrk(sbrk378,11253
void init_mm(402,11768
void fini_mm(424,12337
void sanity_check(428,12361

extras/mini-os/xenbus/xenbus.c,2099
#define min(31,906
#define DEBUG(38,1126
#define DEBUG(41,1227
static struct xenstore_domain_interface *xenstore_buf;xenstore_buf44,1273
xenbus_event_queue xenbus_events;48,1416
static struct watch 49,1450
    char *token;token50,1472
    xenbus_event_queue *events;events51,1489
    struct watch *next;next52,1521
} *watches;watches53,1545
struct xenbus_req_info 54,1557
    int in_use:in_use56,1583
    struct wait_queue_head waitq;57,1601
    void *reply;reply58,1635
#define NR_REQS 61,1656
static struct xenbus_req_info req_info[req_info62,1675
static void memcpy_from_ring(64,1725
char **xenbus_wait_for_watch_return(xenbus_wait_for_watch_return78,2030
void xenbus_wait_for_watch(93,2372
char* xenbus_wait_for_value(105,2638
char *xenbus_switch_state(xenbus_switch_state126,3060
char *xenbus_wait_for_state_change(xenbus_wait_for_state_change168,4030
static void xenbus_thread_func(194,4551
static void xenbus_evtchn_handler(271,7199
static int nr_live_reqs;277,7321
static spinlock_t req_lock 278,7346
static void release_xenbus_id(282,7470
static int allocate_xenbus_id(296,7827
void init_xenbus(328,8505
void fini_xenbus(343,8952
static void xb_write(351,9190
xenbus_msg_reply(429,11656
static char *errmsg(errmsg453,12100
static void xenbus_debug_msg(471,12501
char *xenbus_ls(xenbus_ls488,13044
char *xenbus_read(xenbus_read517,13859
char *xenbus_write(xenbus_write536,14327
char* xenbus_watch_path_token(551,14694
char* xenbus_unwatch_path_token(581,15330
char *xenbus_rm(xenbus_rm611,16011
char *xenbus_get_perms(xenbus_get_perms624,16322
#define PERM_MAX_SIZE 643,16800
char *xenbus_set_perms(xenbus_set_perms644,16825
char *xenbus_transaction_start(xenbus_transaction_start663,17317
xenbus_transaction_end(681,17769
int xenbus_read_integer(706,18231
char* xenbus_printf(722,18495
#define BUFFER_SIZE 726,18669
domid_t xenbus_get_self_id(739,18993
static void do_ls_test(750,19168
static void do_read_test(770,19538
static void do_write_test(784,19826
static void do_rm_test(797,20092
void test_xenbus(811,20343

extras/mini-os/gntmap.c,420
#define DEFAULT_MAX_GRANTS 41,1733
struct gntmap_entry 43,1765
    unsigned long host_addr;44,1787
    grant_handle_t handle;45,1816
gntmap_entry_used(49,1865
gntmap_find_free_entry(55,1978
gntmap_find_entry(72,2346
gntmap_set_max_grants(84,2574
_gntmap_map_grant_ref(103,3016
_gntmap_unmap_grant_ref(133,3854
gntmap_munmap(155,4418
gntmap_map_grant_refs(181,5022
gntmap_init(225,6313
gntmap_fini(235,6472

extras/mini-os/kernel.c,1723
static struct netfront_dev *net_dev;net_dev50,1961
uint8_t xen_features[xen_features52,1999
void setup_xen_features(54,2047
static void xenbus_tester(72,2414
static void periodic_thread(78,2542
static void netfront_thread(90,2788
static struct blkfront_dev *blk_dev;blk_dev95,2883
static struct blkfront_info blk_info;96,2920
static uint64_t blk_size_read;97,2958
static uint64_t blk_size_write;98,2989
struct blk_req 100,3022
    struct blkfront_aiocb aiocb;101,3039
    int rand_value;102,3072
    struct blk_req *next;next103,3092
static struct blk_req *blk_to_read;blk_to_read107,3143
static struct blk_req *blk_alloc_req(blk_alloc_req110,3187
static void blk_read_completed(122,3584
static void blk_read_sector(133,3898
static void blk_write_read_completed(144,4109
static void blk_write_completed(171,4846
static void blk_write_sector(186,5260
static void blkfront_thread(207,5716
#define WIDTH 260,7108
#define HEIGHT 261,7126
#define DEPTH 262,7145
static uint32_t *fb;fb264,7163
static int refresh_period 265,7184
static struct fbfront_dev *fb_dev;fb_dev266,7216
static struct semaphore fbfront_sem 267,7251
static void fbfront_drawvert(269,7331
static void fbfront_drawhoriz(284,7624
static void fbfront_thread(299,7917
static void clip_cursor(321,8532
static void refresh_cursor(333,8733
static struct kbdfront_dev *kbd_dev;kbd_dev352,9313
static void kbdfront_thread(353,9350
static struct pcifront_dev *pci_dev;pci_dev436,12428
static void print_pcidev(438,12466
static void pcifront_thread(450,13031
static void fs_thread(459,13214
__attribute__((weak)) int app_main(465,13348
void start_kernel(482,13921
void stop_kernel(541,15423
void do_exit(595,16466

extras/mini-os/arch/x86/x86_32.S,464
.section 5,91
.globl 16,364
_start:_start18,432
stack_start:stack_start25,567
shared_info:shared_info31,804
hypercall_page:hypercall_page34,838
ES	37,875
ORIG_EAX	38,886
EIP	39,902
CS	40,914
do_exception:do_exception75,1427
ret_from_exception:ret_from_exception101,1915
safesti:safesti134,3171
scrit:scrit135,3226
ecrit:ecrit141,3427
critical_region_fixup:critical_region_fixup149,3935
critical_fixup_table:critical_fixup_table167,4622

extras/mini-os/arch/x86/mm.c,1712
#define DEBUG(46,1955
#define DEBUG(49,2056
unsigned long *phys_to_machine_mapping;phys_to_machine_mapping52,2102
unsigned long mfn_zero;53,2142
static void new_pt_frame(62,2389
static int need_pt_frame(139,4749
static void build_pagetable(192,6159
static void set_readonly(285,9543
#define MEM_TEST_MAX_ERRORS 362,11961
int mem_test(363,11993
static pgentry_t *get_pgt(get_pgt413,13481
pgentry_t *need_pgt(need_pgt448,14364
static unsigned long demand_map_area_start;495,15653
#define DEMAND_MAP_PAGES 497,15715
#define DEMAND_MAP_PAGES 499,15775
#define HEAP_PAGES 503,15853
unsigned long heap,505,15880
unsigned long heap, brk,505,15880
unsigned long heap, brk, heap_mapped,505,15880
unsigned long heap, brk, heap_mapped, heap_end;505,15880
#define HEAP_PAGES 507,15946
#define HEAP_PAGES 509,16000
void arch_init_demand_mapping_area(513,16061
unsigned long allocate_ondemand(531,16587
#define MAP_BATCH 569,17630
void do_map_frames(570,17690
void *map_frames_ex(map_frames_ex636,19617
#define UNMAP_BATCH 654,20099
int unmap_frames(655,20166
#define MAX_CONTIG_ORDER 718,21847
unsigned long alloc_contig_pages(719,21884
static long system_ram_end_mfn;850,25701
int mfn_is_ram(851,25733
static void clear_bootstrap(862,25990
void arch_init_p2m(874,26329
#define L1_P2M_SHIFT 877,26391
#define L2_P2M_SHIFT 878,26417
#define L3_P2M_SHIFT 879,26448
#define L1_P2M_SHIFT 881,26485
#define L2_P2M_SHIFT 882,26512
#define L3_P2M_SHIFT 883,26543
#define L1_P2M_ENTRIES 885,26581
#define L2_P2M_ENTRIES 886,26629
#define L3_P2M_ENTRIES 887,26694
#define L1_P2M_MASK 888,26759
#define L2_P2M_MASK 889,26808
#define L3_P2M_MASK 890,26857
void arch_init_mm(922,27863

extras/mini-os/arch/x86/ioremap.c,148
static void *__do_ioremap(__do_ioremap32,1425
void *ioremap(ioremap63,2337
void *ioremap_nocache(ioremap_nocache68,2452
void iounmap(75,2714

extras/mini-os/arch/x86/x86_64.S,542
.section 5,88
.globl 16,360
_start:_start19,405
stack_start:stack_start26,551
shared_info:shared_info32,782
hypercall_page:hypercall_page35,816
NMI_MASK 43,974
.macro 49,1080
.endm	60,1301
.macro 63,1310
error_call_handler:error_call_handler105,2280
.macro 113,2448
.endm	121,2687
.macro 123,2695
restore_all_enable_events:restore_all_enable_events163,3844
scrit:scrit166,3935
ecrit:ecrit184,4412
retint_kernel:retint_kernel187,4457
retint_restore_args:retint_restore_args188,4472
error_exit:error_exit201,4812

extras/mini-os/arch/x86/traps.c,691
void dump_regs(33,757
static void do_trap(63,2003
#define DO_ERROR(71,2266
#define DO_ERROR_INFO(77,2420
DO_ERROR_INFO(83,2595
static int handle_cow(119,4151
static void do_stack_walk(158,5151
void stack_walk(167,5382
static void dump_mem(178,5557
#define read_cr2(192,5832
static int handling_pg_fault 195,5927
void do_page_fault(197,5962
void do_general_protection(242,7398
void do_debug(266,8040
#define TF_MASK 269,8112
void do_coprocessor_error(275,8203
void simd_math_error(282,8322
void do_simd_coprocessor_error(287,8387
void do_spurious_interrupt_bug(292,8480
static trap_info_t trap_table[trap_table302,8815
void trap_init(325,10141
void trap_fini(330,10214

extras/mini-os/arch/x86/sched.c,177
#define DEBUG(51,1991
#define DEBUG(54,2095
void dump_stack(58,2142
static void stack_push(88,2982
struct thread* arch_create_thread(95,3192
void run_idle_thread(117,4031

extras/mini-os/arch/x86/setup.c,312
shared_info_t *HYPERVISOR_shared_info;HYPERVISOR_shared_info36,1526
union start_info_union start_info_union;42,1714
char stack[stack48,1848
#define __pte(57,2041
#define __pte(59,2083
shared_info_t *map_shared_info(map_shared_info64,2221
arch_init(78,2518
arch_fini(105,3319
arch_print_info(115,3449

extras/mini-os/arch/x86/time.c,853
struct shadow_time_info 48,2098
	uint64_t tsc_timestamp;49,2124
	uint64_t system_timestamp;50,2193
	uint32_t tsc_to_nsec_mul;51,2262
	uint32_t tsc_to_usec_mul;52,2289
	int tsc_shift;53,2316
	uint32_t version;54,2332
static struct timespec shadow_ts;56,2354
static uint32_t shadow_ts_version;57,2388
static struct shadow_time_info shadow;59,2424
#define rmb(63,2477
#define HANDLE_USEC_OVERFLOW(66,2561
static inline int time_values_up_to_date(75,2898
static inline uint64_t scale_delta(87,3178
static unsigned long get_nsec_offset(120,3830
static void get_time_values_from_xen(129,4023
uint64_t monotonic_clock(154,4713
static void update_wallclock(171,5047
int gettimeofday(186,5332
void block_domain(200,5605
static void timer_handler(217,5912
static evtchn_port_t port;225,6052
void init_time(226,6079
void fini_time(233,6232

extras/mini-os/arch/ia64/mm.c,702
#define MAX_MEM_AREA	33,1366
paddr_t phys_avail[phys_avail34,1389
int	phys_avail_cnt;35,1427
uint64_t physmem;36,1447
uint64_t kernstart,44,1643
uint64_t kernstart, kernend,44,1643
uint64_t kernstart, kernend, kernsize,44,1643
uint64_t kernstart, kernend, kernsize, kernpstart,44,1643
uint64_t kernstart, kernend, kernsize, kernpstart, kernpend;44,1643
uint8_t _heap[_heap47,1722
unsigned long heap 48,1749
print_phys_avail(56,2024
arch_init_mm(70,2326
arch_init_demand_mapping_area(128,4073
unsigned long allocate_ondemand(133,4151
void do_map_frames(139,4288
map_frames_ex(148,4497
int unmap_frames(159,4877
unsigned long alloc_contig_pages(165,4982
void arch_init_p2m(171,5085

extras/mini-os/arch/ia64/xencomm.c,912
#define XENCOMM_MINI_ADDRS 34,1156
struct xencomm_mini35,1185
	struct xencomm_desc _desc;37,1207
	uint64_t address[address38,1235
#define xen_guest_handle(41,1278
xencomm_vaddr_to_paddr(47,1407
xencomm_create_inline(60,1685
#define min(68,1869
xencomm_init_desc(70,1923
xencomm_alloc_mini(115,2999
xencomm_create_mini(136,3449
xencommize_mini_grant_table_op(162,4008
xencomm_arch_hypercall_grant_table_op(217,5395
xencomm_mini_hypercall_grant_table_op(225,5643
gnttab_map_grant_ref_pre(241,6053
HYPERVISOR_grant_table_op(267,6662
HYPERVISOR_suspend(282,7071
HYPERVISOR_event_channel_op(292,7281
xencomm_arch_xen_version(310,7658
xencomm_arch_xen_feature(316,7785
HYPERVISOR_xen_version(325,7979
HYPERVISOR_console_io(338,8215
HYPERVISOR_sched_op_compat(347,8406
HYPERVISOR_sched_op(353,8523
HYPERVISOR_callback_op(362,8692
HYPERVISOR_opt_feature(371,8867
HYPERVISOR_shutdown(381,9032

extras/mini-os/arch/ia64/efi.c,62
efi_get_time(43,1749
efi_guid_cmp(59,2115
init_efi(65,2216

extras/mini-os/arch/ia64/ivt.S,115
ia64_trap_table:ia64_trap_table638,14285
adt_common:adt_common648,14516
adt_reg7_addr:adt_reg7_addr670,15001

extras/mini-os/arch/ia64/__udivsi3.S,138
.file 1,0
.section 32,1357
.proc 36,1408
.align 37,1425
.global 38,1435
.align 39,1454
__udivsi3:__udivsi341,1465
.endp 124,2860

extras/mini-os/arch/ia64/__udivdi3.S,138
.file 1,0
.section 31,1353
.proc 32,1368
.align 33,1385
.global 34,1395
.align 35,1414
__udivdi3:__udivdi339,1460
.endp 142,2995

extras/mini-os/arch/ia64/gen_off.c,224
#define DEFINE(33,1553
#define DEFINE_STR2(35,1645
#define SZ(38,1740
#define OFF(39,1778
#define TFOFF(45,1968
#define SIZE(46,2014
#define SWOFF(48,2057
#define SI_OFF(51,2140
#define MR_OFF(53,2229
main(56,2297

extras/mini-os/arch/ia64/common.c,549
int bootverbose;50,1947
union start_info_union start_info_union;56,2113
shared_info_t *HYPERVISOR_shared_info HYPERVISOR_shared_info58,2155
struct machine_fw machineFwG;60,2223
struct xen_ia64_boot_param* ia64_boot_paramP;64,2367
struct xen_ia64_boot_param ia64BootParamG;66,2414
char boot_cmd_line[boot_cmd_line67,2457
ia64_write_itr_i(71,2505
map_pal_code(85,2978
registerCallback(115,3812
init_start_info(126,4027
init_boot_params(145,4783
set_opt_feature(183,6233
arch_init(198,6617
arch_fini(237,7288
arch_print_info(243,7326

extras/mini-os/arch/ia64/__umoddi3.S,138
.file 1,0
.section 31,1358
.proc 35,1414
.align 36,1431
.global 37,1441
.align 38,1460
__umoddi3:__umoddi340,1471
.endp 154,3428

extras/mini-os/arch/ia64/sched.c,107
void stack_walk(37,1509
arch_create_thread(43,1566
arch_switch_threads(65,2332
run_idle_thread(73,2512

extras/mini-os/arch/ia64/debug.c,305
static const char *ia64_vector_names[ia64_vector_names32,1472
	uint64_t sof	105,3587
	uint64_t sol	106,3629
	uint64_t sor	107,3684
	uint64_t rrb_gr	108,3702
	uint64_t rrb_fr	109,3723
	uint64_t rrb_pr	110,3744
	uint64_t res	111,3765
	uint64_t v	112,3799
} ifs_t;113,3831
do_trap_error(116,3846

extras/mini-os/arch/ia64/fw.S,86
palret	185,4675
entry	186,4689
rpsave	187,4702
pfssave 188,4716
psrsave	189,4731

extras/mini-os/arch/ia64/sal.c,141
static struct ia64_fdesc sal_fdesc;36,1574
uint64_t ia64_pal_entry;37,1610
ia64_sal_call(41,1686
fake_sal(48,1902
ia64_sal_init(64,2277

extras/mini-os/arch/ia64/time.c,656
struct timespec os_time;36,1653
static uint64_t itc_alt;37,1678
static uint64_t itc_at_boot;38,1730
static uint64_t itc_frequency;39,1778
static uint64_t processor_frequency;40,1809
static uint64_t itm_val;41,1846
static int is_leap_year(43,1872
static int count_leap_years(57,2046
static int get_day(64,2203
static unsigned long _mktime(96,3316
ns_from_cycles(113,3779
ns_to_cycles(119,3888
block_domain(129,4095
calculate_time(150,4632
timer_interrupt(169,4989
monotonic_clock(182,5241
gettimeofday(192,5376
calculate_frequencies(205,5679
#define HZ 243,6937
#define IA64_TIMER_VECTOR 244,6982
init_time(247,7019
fini_time(286,7921

extras/mini-os/arch/ia64/__divdi3.S,136
.file 1,0
.section 31,1351
.proc 32,1366
.align 33,1382
.global 34,1392
.align 35,1410
__divdi3:__divdi339,1454
.endp 141,2983

extras/mini-os/arch/ia64/ia64.S,43
kstack:kstack43,1619
self:self224,5114

extras/mini-os/gnttab.c,618
#define NR_RESERVED_ENTRIES 23,702
#define NR_GRANT_FRAMES 27,824
#define NR_GRANT_FRAMES 29,856
#define NR_GRANT_ENTRIES 31,889
static grant_entry_t *gnttab_table;gnttab_table33,969
static grant_ref_t gnttab_list[gnttab_list34,1005
static char inuse[inuse36,1072
put_free_entry(41,1180
get_free_entry(56,1474
gnttab_grant_access(74,1854
gnttab_grant_transfer(89,2183
gnttab_end_access(103,2449
gnttab_end_transfer(123,2940
gnttab_alloc_and_grant(153,3713
static const char * const gnttabop_error_msgs[gnttabop_error_msgs164,3921
gnttabop_error(167,4006
init_gnttab(177,4209
fini_gnttab(199,4777

extras/mini-os/lib/ctype.c,34
unsigned char _ctype[_ctype4,38

extras/mini-os/lib/xs.c,521
static inline int _xs_fileno(17,261
struct xs_handle *xs_daemon_open(xs_daemon_open21,341
void xs_daemon_close(29,559
int xs_fileno(38,790
void *xs_read(xs_read43,856
bool xs_write(61,1175
static bool xs_bool(79,1535
bool xs_rm(87,1638
static void *xs_talkv(xs_talkv92,1753
static void *xs_single(xs_single110,2172
char *xs_get_domain_path(xs_get_domain_path123,2462
char **xs_directory(xs_directory132,2683
bool xs_watch(166,3333
char **xs_read_watch(xs_read_watch173,3579
bool xs_unwatch(184,3903

extras/mini-os/lib/printf.c,518
unsigned long simple_strtoul(73,3129
long simple_strtol(104,3899
unsigned long long simple_strtoull(117,4283
long long simple_strtoll(148,5145
static int skip_atoi(155,5329
#define ZEROPAD 164,5460
#define SIGN 165,5512
#define PLUS 166,5571
#define SPACE 167,5619
#define LEFT 168,5671
#define SPECIAL 169,5724
#define LARGE 170,5765
static char * number(172,5837
int vsnprintf(280,8512
int snprintf(517,15041
int vsprintf(537,15519
int sprintf(549,15814
int vsscanf(566,16114
int sscanf(782,20769

extras/mini-os/lib/xmalloc.c,479
struct xmalloc_hdr50,1791
    size_t size;53,1879
    struct minios_list_head freelist;54,1896
} __cacheline_aligned;55,1934
struct xmalloc_pad59,2007
    size_t hdr_size;62,2064
static inline size_t align_up(66,2143
static void maybe_split(71,2251
static struct xmalloc_hdr *xmalloc_new_page(xmalloc_new_page98,3112
static void *xmalloc_whole_pages(xmalloc_whole_pages113,3430
void *_xmalloc(_xmalloc140,4186
void xfree(201,6292
void *_realloc(_realloc279,8228

extras/mini-os/lib/stack_chk_fail.c,28
void __stack_chk_fail(4,58

extras/mini-os/lib/string.c,432
int __ffsti2 24,828
int __ffsdi2 43,1224
int ffsl 48,1298
int ffsll 53,1368
int memcmp(65,1560
void * memcpy(76,1793
int strncmp(87,1957
int strcmp(100,2155
char * strcpy(112,2383
char * strncpy(121,2552
void * memset(131,2747
size_t strnlen(141,2897
char * strcat(151,3078
size_t strlen(163,3255
char * strchr(172,3374
char * strrchr(180,3546
char * strstr(189,3749
char *strdup(strdup206,4110
int ffs(215,4264

extras/mini-os/lib/sys.c,1972
#define DEBUG(16,374
#define DEBUG(18,430
#define debug(52,1008
#define print_unsupported(54,1035
#define unsupported_function_crash(58,1188
#define unsupported_function_log(67,1422
#define unsupported_function(77,1679
#define NOFILE 85,1868
pthread_mutex_t fd_lock 90,2022
struct file files[files91,2075
int alloc_fd(99,2279
void close_all_files(115,2606
int dup2(125,2810
pid_t getpid(136,3095
pid_t getppid(141,3133
pid_t setsid(146,3172
char *getcwd(getcwd151,3210
#define LOG_PATH 157,3298
int mkdir(159,3328
int posix_openpt(170,3530
int open(184,3795
int isatty(230,5055
int read(235,5123
int write(306,6883
off_t lseek(341,7759
int fsync(370,8305
int close(389,8624
static void init_stat(452,10143
static void stat_from_fs(463,10361
int stat(474,10696
int fstat(502,11182
int ftruncate(538,11968
int remove(559,12336
int unlink(571,12552
int rmdir(576,12619
int fcntl(581,12685
DIR *opendir(opendir606,13237
struct dirent *readdir(readdir619,13482
int closedir(641,14166
static const char file_types[file_types654,14406
static void dump_set(668,14733
#define printfds(671,14863
#define dump_set(697,15383
static int select_poll(701,15486
int select(859,19517
int socket(985,22263
int accept(997,22522
#define LWIP_STUB(1014,22936
LWIP_STUB(1026,23194
void vsyslog(1046,24471
void syslog(1052,24595
void closelog(1060,24744
void vwarn(1066,24818
void warn(1077,25033
void verr(1085,25154
void err(1091,25250
void vwarnx(1099,25385
void warnx(1106,25505
void verrx(1114,25628
void errx(1120,25726
int nanosleep(1128,25863
int usleep(1153,26422
unsigned int sleep(1166,26640
int clock_gettime(1181,26872
uid_t getuid(1213,27405
uid_t geteuid(1218,27440
gid_t getgid(1223,27476
gid_t getegid(1228,27511
int gethostname(1233,27547
size_t getpagesize(1239,27643
void *mmap(mmap1244,27695
int munmap(1264,28460
void sparse(1277,28697
int nice(1311,29529
unsupported_function_log(1424,34104

extras/mini-os/lib/math.c,699
union uu 70,3191
        int64_t           q;71,3202
        int64_t          uq;72,3269
        long           sl[sl73,3336
        unsigned long  ul[ul74,3401
#define _QUAD_HIGHWORD 77,3513
#define _QUAD_LOWWORD 78,3538
#define H 82,3603
#define L 83,3642
#define CHAR_BIT 91,3865
#define QUAD_BITS 93,3943
#define LONG_BITS 94,3996
#define HALF_BITS 95,4046
#define HHALF(106,4514
#define LHALF(107,4557
#define LHUP(108,4614
#define	B	114,4770
#define	COMBINE(117,4879
typedef unsigned short digit;121,5061
typedef u_long digit;123,5097
shl(133,5334
__qdivrem(151,5855
__divdi3(352,10584
__udivdi3(373,10891
__umoddi3(383,11051
__moddi3(398,11309
int rand(418,11642

extras/mini-os/lwip-net.c,546
#define IFNAME0 68,2360
#define IFNAME1 69,2380
#define IF_IPADDR	71,2401
#define IF_NETMASK	72,2430
static struct netif *the_interface the_interface75,2510
static unsigned char rawmac[rawmac77,2554
static struct netfront_dev *dev;dev78,2586
low_level_output(94,2957
netfront_output(139,3996
netfront_input(157,4331
void netif_rx(237,6314
void networking_set_addr(249,6595
arp_timer(258,6830
netif_netfront_init(274,7138
static void tcpip_bringup_finished(330,8411
void start_networking(342,8761
void stop_networking(384,9901

extras/mini-os/fs-front.c,2081
#undef NDEBUG27,1295
#define preempt_disable(39,1569
#define preempt_enable(40,1595
#define cmpxchg(41,1620
#define DEBUG(45,1682
#define DEBUG(48,1789
struct fs_import *fs_import;fs_import53,1855
struct fs_request61,2259
    void *private1;private163,2279
    void *private2;private264,2353
    struct thread *thread;thread65,2373
    struct fsif_response shadow_rsp;66,2453
struct fs_rw_gnts70,2601
    int count;73,2644
    grant_ref_t grefs[grefs74,2659
    void *pages[pages75,2703
#define FS_RING_FREE_REQUESTS(103,3972
static RING_IDX reserve_fsif_request(108,4105
static void commit_fsif_request(125,4525
static inline void add_id_to_freelist(143,5166
static inline unsigned short get_id_from_freelist(162,5752
int fs_open(187,6596
int fs_close(233,7915
ssize_t fs_read(273,9029
ssize_t fs_write(347,11272
int fs_stat(419,13531
int fs_truncate(464,14811
int fs_remove(507,16040
int fs_rename(554,17353
int fs_create(611,19242
char** fs_list(660,20678
int fs_chmod(722,22669
int64_t fs_space(763,23832
int fs_sync(809,25168
void *alloc_buffer_page(alloc_buffer_page854,26523
void free_buffer_page(866,26816
static void fsfront_handler(872,26959
static void alloc_request_table(912,28112
void test_fs_import(934,28981
    int fd,999,30921
    int fd, ret;999,30921
    char write_string[write_string1001,30954
    struct fsif_stat_response stat;1002,31017
    char **files;files1003,31053
    int32_t nr_files,1004,31071
    int32_t nr_files, i;1004,31071
    int64_t ret64;1005,31096
    fd 1008,31117
    ret 1013,31327
    ret 1015,31440
    ret 1024,31842
    ret 1026,31926
    ret 1028,32026
    ret 1030,32116
    ret 1032,32196
    ret 1034,32268
    ret 1037,32424
    ret 1039,32524
    files 1041,32638
    for(i=0; i<nr_files;nr_files1042,32694
    ret64 1044,32774
static int init_fs_import(1054,33119
#define WAIT_PERIOD 1170,36710
#define MAX_WAIT 1171,36763
static void add_export(1206,37851
static struct minios_list_head* probe_exports(1241,38895
void init_fs_frontend(1275,39566

extras/mini-os/lock.c,269
int ___lock_init(13,172
int ___lock_acquire(20,281
int ___lock_try_acquire(35,585
int ___lock_release(48,815
int ___lock_init_recursive(59,998
int ___lock_acquire_recursive(66,1131
int ___lock_try_acquire_recursive(84,1586
int ___lock_release_recursive(98,1873

extras/mini-os/events.c,767
#define NR_EVS 25,829
typedef struct _ev_action_t 28,924
	evtchn_handler_t handler;29,954
	void *data;data30,981
    uint32_t count;31,994
} ev_action_t;32,1014
static ev_action_t ev_actions[ev_actions34,1030
static unsigned long bound_ports[bound_ports37,1146
void unbind_all_ports(39,1215
int do_event(72,2092
evtchn_port_t bind_evtchn(94,2473
void unbind_evtchn(109,2842
evtchn_port_t bind_virq(131,3378
evtchn_port_t bind_pirq(149,3803
char irqstack[irqstack169,4308
static struct pda171,4340
    int irqcount;173,4360
    char *irqstackptr;irqstackptr174,4418
} cpu0_pda;175,4457
void init_events(181,4543
void fini_events(199,5057
void default_handler(208,5231
int evtchn_alloc_unbound(220,5643
int evtchn_bind_interdomain(241,6208

extras/mini-os/include/err.h,162
#define _ERR_H2,15
#define IS_ERR_VALUE(14,329
static inline void *ERR_PTR(ERR_PTR16,384
static inline long PTR_ERR(21,453
static inline long IS_ERR(26,522

extras/mini-os/include/events.h,135
#define _EVENTS_H_20,708
typedef void (*evtchn_handler_t)evtchn_handler_t25,785
static inline int notify_remote_via_evtchn(42,1546

extras/mini-os/include/hypervisor.h,156
#define _HYPERVISOR_H_14,375
union start_info_union32,769
    start_info_t start_info;34,794
    char padding[padding35,823
#define start_info 38,897

extras/mini-os/include/console.h,360
#define _LIB_CONSOLE_H_37,1633
struct consfront_dev 47,1834
    domid_t dom;48,1857
    struct xencons_interface *ring;ring50,1875
    grant_ref_t ring_ref;51,1911
    evtchn_port_t evtchn;52,1937
    char *nodename;nodename54,1964
    char *backend;backend55,1984
    xenbus_event_queue events;57,2004
    int fd;60,2053
#define tprintk(70,2205

extras/mini-os/include/xenbus.h,529
#define XENBUS_H__2,19
typedef unsigned long xenbus_transaction_t;6,67
#define XBT_NIL 7,111
struct xenbus_event 18,497
    char *path;path20,561
    char *token;token21,577
    struct xenbus_event *next;next22,594
typedef struct xenbus_event *xenbus_event_queue;xenbus_event_queue24,628
#define XENBUS_WATCH_PATH_TOKEN 36,1403
#define xenbus_watch_path(38,1496
#define xenbus_unwatch_path(39,1599
struct write_req 46,1872
    const void *data;data47,1891
    unsigned len;48,1913
char* xenbus_printf(93,3833

extras/mini-os/include/linux/types.h,58
#define _LINUX_TYPES_H_2,24
typedef uint64_t __u64;4,75

extras/mini-os/include/wait.h,392
#define __WAIT_H__2,19
#define DEFINE_WAIT(8,122
static inline void init_waitqueue_head(15,371
static inline void init_waitqueue_entry(20,484
static inline void add_wait_queue(27,643
static inline void remove_wait_queue(33,837
static inline void wake_up(38,939
#define add_waiter(52,1332
#define remove_waiter(60,1549
#define wait_event_deadline(67,1732
#define wait_event(91,3197

extras/mini-os/include/errno-base.h,800
#define _ERRNO_BASE_H2,22
#define	EPERM	4,45
#define	ENOENT	5,93
#define	ESRCH	6,144
#define	EINTR	7,184
#define	EIO	8,232
#define	ENXIO	9,264
#define	E2BIG	10,314
#define	ENOEXEC	11,361
#define	EBADF	12,405
#define	ECHILD	13,445
#define	EAGAIN	14,489
#define	ENOMEM	15,524
#define	EACCES	16,563
#define	EFAULT	17,606
#define	ENOTBLK	18,643
#define	EBUSY	19,691
#define	EEXIST	20,739
#define	EXDEV	21,776
#define	ENODEV	22,818
#define	ENOTDIR	23,858
#define	EISDIR	24,900
#define	EINVAL	25,940
#define	ENFILE	26,982
#define	EMFILE	27,1027
#define	ENOTTY	28,1072
#define	ETXTBSY	29,1114
#define	EFBIG	30,1155
#define	ENOSPC	31,1194
#define	ESPIPE	32,1243
#define	EROFS	33,1281
#define	EMLINK	34,1327
#define	EPIPE	35,1367
#define	EDOM	36,1403
#define	ERANGE	37,1462

extras/mini-os/include/mm.h,186
#define _MM_H_26,1250
#define STACK_SIZE_PAGE_ORDER 43,1560
#define STACK_SIZE 44,1614
#define alloc_page(49,1706
#define free_page(51,1788
static __inline__ int get_order(53,1830

extras/mini-os/include/gnttab.h,26
#define __GNTTAB_H__2,21

extras/mini-os/include/arch/cc.h,896
#define __LWIP_ARCH_CC_H__10,179
typedef uint8_t  u8_t;16,322
typedef int8_t   s8_t;17,345
typedef uint16_t u16_t;18,368
typedef int16_t  s16_t;19,392
typedef uint32_t u32_t;20,416
typedef int32_t  s32_t;21,440
typedef uint64_t u64_t;22,464
typedef int64_t  s64_t;23,488
typedef uintptr_t mem_ptr_t;24,512
typedef uint16_t u_short;26,542
#define PACK_STRUCT_FIELD(29,624
#define PACK_STRUCT_STRUCT 30,658
#define PACK_STRUCT_BEGIN 31,714
#define PACK_STRUCT_END32,741
#define LWIP_PLATFORM_DIAG(37,854
#define LWIP_PLATFORM_ASSERT(40,958
#define S16_F 67,1925
#define U16_F 68,1946
#define X16_F 69,1967
#define S32_F 70,1988
#define U32_F 71,2009
#define X32_F 72,2030
#define DBG_ON	76,2073
#define LWIP_DEBUG	78,2107
#define TCP_DEBUG	80,2159
#define TCP_INPUT_DEBUG	81,2184
#define TCP_QLEN_DEBUG	82,2215
#define TCPIP_DEBUG	83,2245
#define DBG_TYPES_ON	84,2272

extras/mini-os/include/arch/perf.h,89
#define __LWIP_ARCH_PERF_H__10,186
#define PERF_START 12,216
#define PERF_STOP(13,254

extras/mini-os/include/arch/sys_arch.h,504
#define __LWIP_ARCH_SYS_ARCH_H__10,195
typedef struct semaphore *sys_sem_t;sys_sem_t16,314
#define SYS_SEM_NULL 17,351
struct mbox 19,392
    int count;20,406
    void **messages;messages21,421
    struct semaphore read_sem;22,442
    struct semaphore write_sem;23,473
    int writer;24,505
    int reader;25,521
typedef struct mbox *sys_mbox_t;sys_mbox_t28,541
#define SYS_MBOX_NULL 29,574
typedef struct thread *sys_thread_t;sys_thread_t31,614
typedef unsigned long sys_prot_t;33,652

extras/mini-os/include/xmalloc.h,283
#define __XMALLOC_H__2,22
#define _xmalloc(9,142
#define xfree(10,194
#define DEFAULT_ALIGN 16,252
#define malloc(17,298
#define free(18,349
#define realloc(19,378
static inline void *_xmalloc_array(_xmalloc_array30,622
#define xmalloc(39,856
#define xmalloc_array(42,984

extras/mini-os/include/spinlock.h,424
#define __ASM_SPINLOCK_H2,25
	volatile unsigned int slock;11,167
} spinlock_t;12,197
#define SPINLOCK_MAGIC	18,250
#define SPIN_LOCK_UNLOCKED 20,285
#define spin_lock_init(22,337
#define spin_is_locked(31,587
#define spin_unlock_wait(33,637
#define _spin_trylock(36,710
#define _spin_lock(39,820
#define _spin_unlock(44,934
#define spin_lock(50,1050
#define spin_unlock(51,1097
#define DEFINE_SPINLOCK(53,1149

extras/mini-os/include/errno.h,2666
#define _ERRNO_H2,17
typedef int error_t;6,68
#define	EDEADLK	8,90
#define	ENAMETOOLONG	9,146
#define	ENOLCK	10,195
#define	ENOSYS	11,246
#define	ENOTEMPTY	12,296
#define	ELOOP	13,343
#define	EWOULDBLOCK	14,403
#define	ENOMSG	15,458
#define	EIDRM	16,510
#define	ECHRNG	17,553
#define	EL2NSYNC	18,606
#define	EL3HLT	19,657
#define	EL3RST	20,697
#define	ELNRNG	21,736
#define	EUNATCH	22,786
#define	ENOCSI	23,841
#define	EL2HLT	24,893
#define	EBADE	25,933
#define	EBADR	26,974
#define	EXFULL	27,1025
#define	ENOANO	28,1064
#define	EBADRQC	29,1098
#define	EBADSLT	30,1145
#define	EDEADLOCK	32,1185
#define	EBFONT	34,1212
#define	ENOSTR	35,1258
#define	ENODATA	36,1303
#define	ETIME	37,1347
#define	ENOSR	38,1385
#define	ENONET	39,1434
#define	ENOPKG	40,1489
#define	EREMOTE	41,1536
#define	ENOLINK	42,1579
#define	EADV	43,1627
#define	ESRMNT	44,1666
#define	ECOMM	45,1705
#define	EPROTO	46,1757
#define	EMULTIHOP	47,1797
#define	EDOTDOT	48,1843
#define	EBADMSG	49,1888
#define	EOVERFLOW	50,1933
#define	ENOTUNIQ	51,1998
#define	EBADFD	52,2051
#define	EREMCHG	53,2105
#define	ELIBACC	54,2154
#define	ELIBBAD	55,2219
#define	ELIBSCN	56,2282
#define	ELIBMAX	57,2340
#define	ELIBEXEC	58,2414
#define	EILSEQ	59,2478
#define	ERESTART	60,2525
#define	ESTRPIPE	61,2595
#define	EUSERS	62,2640
#define	ENOTSOCK	63,2680
#define	EDESTADDRREQ	64,2737
#define	EMSGSIZE	65,2796
#define	EPROTOTYPE	66,2839
#define	ENOPROTOOPT	67,2898
#define	EPROTONOSUPPORT	68,2950
#define	ESOCKTNOSUPPORT	69,3006
#define	EOPNOTSUPP	70,3065
#define	ENOTSUP 71,3139
#define	EPFNOSUPPORT	72,3166
#define	EAFNOSUPPORT	73,3226
#define	EADDRINUSE	74,3297
#define	EADDRNOTAVAIL	75,3348
#define	ENETDOWN	76,3411
#define	ENETUNREACH	77,3454
#define	ENETRESET	78,3507
#define	ECONNABORTED	79,3579
#define	ECONNRESET	80,3643
#define	ENOBUFS	81,3697
#define	EISCONN	82,3750
#define	ENOTCONN	83,3817
#define	ESHUTDOWN	84,3880
#define	ETOOMANYREFS	85,3954
#define	ETIMEDOUT	86,4020
#define	ECONNREFUSED	87,4069
#define	EHOSTDOWN	88,4119
#define	EHOSTUNREACH	89,4160
#define	EALREADY	90,4208
#define	EINPROGRESS	91,4265
#define	ESTALE	92,4321
#define	EUCLEAN	93,4369
#define	ENOTNAM	94,4421
#define	ENAVAIL	95,4476
#define	EISNAM	96,4533
#define	EREMOTEIO	97,4580
#define	EDQUOT	98,4625
#define	ENOMEDIUM	100,4667
#define	EMEDIUMTYPE	101,4711
#define	ECANCELED	102,4759
#define	ENOKEY	103,4806
#define	EKEYEXPIRED	104,4859
#define	EKEYREVOKED	105,4905
#define	EKEYREJECTED	106,4956
#define	EOWNERDEAD	109,5041
#define	ENOTRECOVERABLE	110,5081
#define EFTYPE 113,5139
#define ERRNO118,5274
#define errno 119,5288

extras/mini-os/include/semaphore.h,807
#define _SEMAPHORE_H_2,22
struct semaphore12,237
	int count;14,256
	struct wait_queue_head wait;15,268
struct rw_semaphore 21,337
	signed long		count;22,359
	spinlock_t		wait_lock;23,380
	struct minios_list_head	wait_list;24,404
	int			debug;25,440
#define __SEMAPHORE_INITIALIZER(28,458
#define __MUTEX_INITIALIZER(34,741
#define __DECLARE_SEMAPHORE_GENERIC(37,841
#define DECLARE_MUTEX(40,960
#define DECLARE_MUTEX_LOCKED(42,1025
static inline void init_SEMAPHORE(44,1097
#define init_MUTEX(50,1227
static inline int trydown(52,1275
static void inline down(65,1515
static void inline up(79,1821
static inline void init_rwsem(89,2055
static inline void down_read(94,2134
static inline void up_read(99,2195
static inline void up_write(103,2253
static inline void down_write(107,2312

extras/mini-os/include/fbfront.h,123
#define BTN_LEFT 7,122
#define BTN_RIGHT 10,170
#define BTN_MIDDLE 13,220
#define KEY_Q 16,266
#define KEY_MAX 19,306

extras/mini-os/include/fs.h,571
#define __FS_H__2,17
#define FSIF_RING_SIZE_ORDER 8,119
#define FSIF_RING_SIZE_PAGES 9,152
struct fs_import 11,210
    domid_t dom_id;13,230
    uint16_t export_id;14,310
    uint16_t import_id;15,389
    struct minios_list_head list;16,469
    unsigned int nr_entries;17,548
    struct fsif_front_ring ring;19,703
    uint32_t gnt_refs[gnt_refs20,782
    evtchn_port_t local_port;21,871
    char *backend;backend22,950
    struct fs_request *requests;requests23,1029
    unsigned short *freelist;freelist24,1108
    struct semaphore reqs_sem;25,1187

extras/mini-os/include/blkfront.h,651
struct blkfront_aiocb5,100
    struct blkfront_dev *aio_dev;aio_dev7,124
    uint8_t *aio_buf;aio_buf8,158
    size_t aio_nbytes;9,180
    off_t aio_offset;10,203
    size_t total_bytes;11,225
    uint8_t is_write;12,249
    void *data;data13,271
    grant_ref_t gref[gref15,288
    int n;16,342
    void (*aio_cb)aio_cb18,354
struct blkfront_info20,416
    uint64_t sectors;22,439
    unsigned sector_size;23,461
    int mode;24,487
    int info;25,501
    int barrier;26,515
    int flush;27,532
#define blkfront_aio_read(34,760
#define blkfront_aio_write(35,818
#define blkfront_read(37,937
#define blkfront_write(38,990

extras/mini-os/include/ioremap.h,28
#define _IOREMAP_H_25,1181

extras/mini-os/include/waittypes.h,303
#define __WAITTYPE_H__2,23
struct wait_queue7,89
    struct thread *thread;thread9,109
    struct minios_list_head thread_list;10,136
struct wait_queue_head13,181
    struct minios_list_head thread_list;16,238
#define DECLARE_WAIT_QUEUE_HEAD(19,283
#define __WAIT_QUEUE_HEAD_INITIALIZER(23,434

extras/mini-os/include/kernel.h,50
#define _KERNEL_H_2,19
extern void do_exit(4,39

extras/mini-os/include/list.h,914
#define _LINUX_LIST_H2,22
struct minios_list_head 14,385
	struct minios_list_head *next,next15,411
	struct minios_list_head *next, *prev;prev15,411
#define MINIOS_LIST_HEAD_INIT(18,454
#define MINIOS_LIST_HEAD(20,512
#define MINIOS_INIT_LIST_HEAD(23,606
#define minios_list_top(27,706
static __inline__ void __minios_list_add(39,1077
static __inline__ void minios_list_add(57,1500
static __inline__ void minios_list_add_tail(70,1861
static __inline__ void __minios_list_del(82,2198
static __inline__ void minios_list_del(94,2561
static __inline__ void minios_list_del_init(103,2810
static __inline__ int minios_list_empty(113,3058
static __inline__ void minios_list_splice(123,3289
#define minios_list_entry(145,3872
#define minios_list_for_each(153,4137
#define minios_list_for_each_safe(162,4508
#define minios_list_for_each_entry(172,4861
#define minios_list_for_each_entry_safe(184,5407

extras/mini-os/include/time.h,420
#define _MINIOS_TIME_H_21,774
typedef int64_t s_time_t;32,1102
#define NOW(33,1128
#define SECONDS(34,1190
#define TENTHS(35,1258
#define HUNDREDTHS(36,1325
#define MILLISECS(37,1391
#define MICROSECS(38,1456
#define Time_Max 39,1518
#define FOREVER 40,1584
#define NSEC_TO_USEC(41,1625
#define NSEC_TO_MSEC(42,1676
#define NSEC_TO_SEC(43,1731
typedef long time_t;46,1813
typedef long suseconds_t;47,1834

extras/mini-os/include/sched.h,533
#define __SCHED_H__2,20
struct thread11,173
    char *name;name13,189
    char *stack;stack14,205
    unsigned long sp;17,274
    unsigned long ip;18,317
    thread_regs_t regs;20,397
    struct minios_list_head thread_list;22,453
    uint32_t flags;23,494
    s_time_t wakeup_time;24,514
    struct _reent reent;26,557
#define RUNNABLE_FLAG 33,664
#define is_runnable(35,700
#define set_runnable(36,765
#define clear_runnable(37,831
#define switch_threads(39,899
void exit_thread(48,1277
#define current 52,1374

extras/mini-os/include/lib.h,1440
#define _LIB_H_56,2728
#define _p(68,2915
#define RAND_MIX 105,4513
#define ARRAY_SIZE(111,4589
struct kvec 113,4641
    void *iov_base;iov_base114,4655
    size_t iov_len;115,4675
#define ASSERT(118,4699
#define BUG_ON(129,5257
enum fd_type 135,5377
    FTYPE_NONE 136,5392
    FTYPE_CONSOLE,137,5412
    FTYPE_FILE,138,5431
    FTYPE_XENBUS,139,5447
    FTYPE_XC,140,5465
    FTYPE_EVTCHN,141,5479
    FTYPE_GNTMAP,142,5497
    FTYPE_SOCKET,143,5515
    FTYPE_TAP,144,5533
    FTYPE_BLK,145,5548
    FTYPE_KBD,146,5563
    FTYPE_FB,147,5578
    FTYPE_MEM,148,5592
#define MAX_EVTCHN_PORTS 151,5611
extern struct file 153,5640
    enum fd_type type;154,5661
	    int fd;158,5732
	} socket;159,5745
	    int fd;162,5797
	    off_t offset;163,5810
	} file;164,5829
                evtchn_port_t port;169,5991
                unsigned long pending;170,6027
                int bound;171,6066
            } ports[ports172,6093
	} evtchn;173,6132
	struct gntmap gntmap;174,6143
	    struct netfront_dev *dev;dev176,6176
	} tap;177,6207
	    struct blkfront_dev *dev;dev179,6225
	} blk;180,6256
	    struct kbdfront_dev *dev;dev182,6274
	} kbd;183,6305
	    struct fbfront_dev *dev;dev185,6323
	} fb;186,6353
	    struct consfront_dev *dev;dev188,6370
	} cons;189,6402
            xenbus_event_queue events;193,6531
        } xenbus;194,6570
    int read;196,6595
} files[files197,6640

extras/mini-os/include/x86/x86_64/hypercall-x86_64.h,1196
#define __HYPERCALL_X86_64_H__35,1518
#define __STR(41,1619
#define STR(42,1639
#define _hypercall0(46,1704
#define _hypercall1(57,1923
#define _hypercall2(68,2196
#define _hypercall3(79,2509
#define _hypercall4(92,2881
#define _hypercall5(106,3303
HYPERVISOR_set_trap_table(122,3789
HYPERVISOR_mmu_update(129,3909
HYPERVISOR_mmuext_op(136,4093
HYPERVISOR_set_gdt(143,4277
HYPERVISOR_stack_switch(150,4417
HYPERVISOR_set_callbacks(157,4552
HYPERVISOR_fpu_taskswitch(166,4793
HYPERVISOR_sched_op(173,4900
HYPERVISOR_set_timer_op(180,5012
HYPERVISOR_set_debugreg(187,5129
HYPERVISOR_get_debugreg(194,5270
HYPERVISOR_update_descriptor(201,5383
HYPERVISOR_memory_op(208,5530
HYPERVISOR_multicall(215,5652
HYPERVISOR_update_va_mapping(222,5787
HYPERVISOR_event_channel_op(229,5964
HYPERVISOR_xen_version(236,6098
HYPERVISOR_console_io(243,6215
HYPERVISOR_physdev_op(250,6348
HYPERVISOR_grant_table_op(257,6463
HYPERVISOR_update_va_mapping_otherdomain(264,6622
HYPERVISOR_vm_assist(272,6851
HYPERVISOR_vcpu_op(279,6982
HYPERVISOR_set_segment_base(286,7125
HYPERVISOR_suspend(293,7264
HYPERVISOR_nmi_op(301,7412
HYPERVISOR_sysctl(309,7536
HYPERVISOR_domctl(316,7635

extras/mini-os/include/x86/arch_limits.h,210
#define __ARCH_LIMITS_H__3,27
#define __PAGE_SHIFT 5,54
#define __PAGE_SIZE 8,104
#define __PAGE_SIZE 11,174
#define __PAGE_SIZE 13,228
#define __STACK_SIZE_PAGE_ORDER 17,292
#define __STACK_SIZE 18,327

extras/mini-os/include/x86/x86_32/hypercall-x86_32.h,1158
#define __HYPERCALL_X86_32_H__31,1409
#define __STR(38,1531
#define STR(39,1551
#define _hypercall0(43,1616
#define _hypercall1(54,1835
#define _hypercall2(65,2108
#define _hypercall3(76,2421
#define _hypercall4(89,2793
#define _hypercall5(102,3204
HYPERVISOR_set_trap_table(117,3681
HYPERVISOR_mmu_update(124,3801
HYPERVISOR_mmuext_op(131,3985
HYPERVISOR_set_gdt(138,4169
HYPERVISOR_stack_switch(145,4309
HYPERVISOR_set_callbacks(152,4444
HYPERVISOR_fpu_taskswitch(162,4740
HYPERVISOR_sched_op(169,4847
HYPERVISOR_set_timer_op(176,4959
HYPERVISOR_set_debugreg(185,5201
HYPERVISOR_get_debugreg(192,5342
HYPERVISOR_update_descriptor(199,5455
HYPERVISOR_memory_op(206,5610
HYPERVISOR_multicall(213,5732
HYPERVISOR_update_va_mapping(220,5867
HYPERVISOR_event_channel_op(228,6072
HYPERVISOR_xen_version(235,6197
HYPERVISOR_console_io(242,6314
HYPERVISOR_physdev_op(249,6447
HYPERVISOR_grant_table_op(256,6562
HYPERVISOR_update_va_mapping_otherdomain(263,6721
HYPERVISOR_vm_assist(271,6972
HYPERVISOR_vcpu_op(278,7103
HYPERVISOR_suspend(285,7246
HYPERVISOR_nmi_op(293,7394
HYPERVISOR_sysctl(301,7518
HYPERVISOR_domctl(308,7617

extras/mini-os/include/x86/arch_mm.h,2989
#define _ARCH_MM_H_26,1255
#define L1_FRAME 39,1479
#define L2_FRAME 40,1513
#define L3_FRAME 41,1547
#define L1_PAGETABLE_SHIFT 43,1582
#define L2_PAGETABLE_SHIFT 47,1641
#define L3_PAGETABLE_SHIFT 48,1676
#define L1_PAGETABLE_ENTRIES 50,1712
#define L2_PAGETABLE_ENTRIES 51,1748
#define L3_PAGETABLE_ENTRIES 52,1784
#define PADDR_BITS 54,1819
#define PADDR_MASK 55,1854
#define L2_MASK 57,1912
#define NOT_L1_FRAMES 64,2149
#define PRIpte 65,2183
typedef uint64_t pgentry_t;67,2228
#define L2_PAGETABLE_SHIFT 72,2291
#define L3_PAGETABLE_SHIFT 73,2326
#define L4_PAGETABLE_SHIFT 74,2361
#define L1_PAGETABLE_ENTRIES 76,2397
#define L2_PAGETABLE_ENTRIES 77,2433
#define L3_PAGETABLE_ENTRIES 78,2469
#define L4_PAGETABLE_ENTRIES 79,2505
#define PADDR_BITS 82,2621
#define VADDR_BITS 83,2656
#define PADDR_MASK 84,2691
#define VADDR_MASK 85,2747
#define L2_MASK 87,2804
#define L3_MASK 88,2855
#define NOT_L1_FRAMES 90,2907
#define PRIpte 91,2941
typedef unsigned long pgentry_t;93,2985
#define L1_MASK 98,3034
#define l1_table_offset(101,3156
#define l2_table_offset(103,3248
#define l3_table_offset(105,3340
#define l4_table_offset(108,3456
#define _PAGE_PRESENT 112,3556
#define _PAGE_RW 113,3588
#define _PAGE_USER 114,3620
#define _PAGE_PWT 115,3652
#define _PAGE_PCD 116,3684
#define _PAGE_ACCESSED 117,3716
#define _PAGE_DIRTY 118,3748
#define _PAGE_PAT 119,3780
#define _PAGE_PSE 120,3812
#define _PAGE_GLOBAL 121,3844
#define L1_PROT 124,3899
#define L1_PROT_RO 125,3955
#define L2_PROT 126,4005
#define L3_PROT 127,4085
#define L1_PROT 129,4143
#define L1_PROT_RO 130,4210
#define L2_PROT 131,4271
#define L3_PROT 132,4350
#define L4_PROT 133,4429
#define IO_PROT 137,4569
#define IO_PROT_NOCACHE 138,4595
#define INVALID_P2M_ENTRY 141,4656
#define PAGE_SIZE 144,4715
#define PAGE_SHIFT 145,4751
#define PAGE_MASK 146,4788
#define PFN_UP(148,4830
#define PFN_DOWN(149,4892
#define PFN_PHYS(150,4940
#define PHYS_PFN(151,4998
#define PAGE_ALIGN(154,5102
typedef unsigned long long paddr_t;159,5265
typedef unsigned long long maddr_t;160,5301
typedef unsigned long paddr_t;162,5343
typedef unsigned long maddr_t;163,5374
#define pfn_to_mfn(169,5542
static __inline__ maddr_t phys_to_machine(170,5601
#define mfn_to_pfn(177,5788
static __inline__ paddr_t machine_to_phys(178,5847
#define VIRT_START 186,6038
#define to_phys(188,6098
#define to_virt(189,6165
#define virt_to_pfn(191,6243
#define virt_to_mfn(192,6305
#define mach_to_virt(193,6373
#define virt_to_mach(194,6442
#define mfn_to_virt(195,6511
#define pfn_to_virt(196,6588
#define pte_to_mfn(199,6681
#define pte_to_virt(200,6774
#define PT_BASE	203,6863
#define virtual_to_l3(206,6937
#define virtual_to_l3(208,7035
#define virtual_to_l2(211,7083
#define virtual_to_l1(216,7240
#define virtual_to_pte(221,7397
#define virtual_to_mfn(225,7543
#define map_frames(227,7611
#define map_zero(228,7692
#define do_map_zero(229,7782

extras/mini-os/include/x86/arch_sched.h,113
#define __ARCH_SCHED_H__3,26
static inline struct thread* get_current(7,78
#define arch_switch_threads(21,445

extras/mini-os/include/x86/os.h,3251
#define _OS_H_8,158
#define __builtin_expect(11,215
#define unlikely(13,270
#define likely(14,315
#define smp_processor_id(16,359
#define USED 24,499
#define BUG 26,539
#define __KERNEL_CS 33,591
#define __KERNEL_DS 34,627
#define __KERNEL_SS 35,663
#define TRAP_divide_error 37,700
#define TRAP_debug 38,733
#define TRAP_nmi 39,766
#define TRAP_int3 40,799
#define TRAP_overflow 41,832
#define TRAP_bounds 42,865
#define TRAP_invalid_op 43,898
#define TRAP_no_device 44,931
#define TRAP_double_fault 45,964
#define TRAP_copro_seg 46,997
#define TRAP_invalid_tss 47,1030
#define TRAP_no_segment 48,1063
#define TRAP_stack_error 49,1096
#define TRAP_gp_fault 50,1129
#define TRAP_page_fault 51,1162
#define TRAP_spurious_int 52,1195
#define TRAP_copro_error 53,1228
#define TRAP_alignment_check 54,1261
#define TRAP_machine_check 55,1294
#define TRAP_simd_error 56,1327
#define TRAP_deferred_nmi 57,1360
#define __cli(83,2027
#define __sti(91,2233
#define __save_flags(102,2575
#define __restore_flags(109,2769
#define safe_halt(121,3137
#define __save_and_cli(123,3169
#define local_irq_save(132,3422
#define local_irq_restore(133,3466
#define local_save_flags(134,3514
#define local_irq_disable(135,3558
#define local_irq_enable(136,3594
#define irqs_disabled(138,3630
#define barrier(142,3802
#define mb(145,3881
#define rmb(146,3958
#define wmb(147,4035
#define mb(149,4114
#define rmb(150,4173
#define wmb(151,4232
#define LOCK_PREFIX 155,4339
#define LOCK 156,4362
#define ADDR 157,4378
typedef struct { volatile int counter;163,4608
typedef struct { volatile int counter; } atomic_t;163,4608
#define xchg(169,4751
struct __xchg_dummy 170,4841
struct __xchg_dummy { unsigned long a[a170,4841
#define __xg(171,4888
static inline unsigned long __xchg(172,4933
static inline int test_and_clear_bit(206,5691
static inline int constant_test_bit(217,5914
static inline int variable_test_bit(222,6052
#define test_bit(233,6262
static inline void set_bit(253,6955
static inline void clear_bit(271,7493
static inline unsigned long __ffs(285,7783
#define ADDR 301,8183
#define rdtscll(303,8223
#define xchg(311,8412
#define __xg(312,8502
static inline unsigned long __xchg(313,8541
static __inline__ int test_and_clear_bit(352,9356
static __inline__ int constant_test_bit(363,9582
static __inline__ int variable_test_bit(368,9750
#define test_bit(379,9956
static __inline__ void set_bit(395,10448
static __inline__ void clear_bit(413,11000
static __inline__ unsigned long __ffs(427,11293
#define ADDR 435,11424
#define rdtscll(437,11464
#define wrmsr(443,11654
#define wrmsrl(448,11835
struct __synch_xchg_dummy 457,12071
struct __synch_xchg_dummy { unsigned long a[a457,12071
#define __synch_xg(458,12124
#define synch_cmpxchg(460,12182
static inline unsigned long __synch_cmpxchg(466,12443
static __inline__ void synch_set_bit(515,13912
static __inline__ void synch_clear_bit(522,14086
static __inline__ int synch_test_and_set_bit(529,14261
static __inline__ int synch_test_and_clear_bit(538,14505
static __inline__ int synch_const_test_bit(547,14751
static __inline__ int synch_var_test_bit(553,14938
#define synch_test_bit(562,15161
#undef ADDR568,15300

extras/mini-os/include/x86/traps.h,1025
#define _TRAPS_H_18,505
struct pt_regs 21,540
	long ebx;22,557
	long ecx;23,568
	long edx;24,579
	long esi;25,590
	long edi;26,601
	long ebp;27,612
	long eax;28,623
	int  xds;29,634
	int  xes;30,645
	long orig_eax;31,656
	long eip;32,672
	int  xcs;33,683
	long eflags;34,694
	long esp;35,708
	int  xss;36,719
struct pt_regs 40,751
	unsigned long r15;41,768
	unsigned long r14;42,788
	unsigned long r13;43,808
	unsigned long r12;44,828
	unsigned long rbp;45,848
	unsigned long rbx;46,868
 	unsigned long r11;48,960
	unsigned long r10;49,981
	unsigned long r9;50,1002
	unsigned long r8;51,1021
	unsigned long rax;52,1040
	unsigned long rcx;53,1060
	unsigned long rdx;54,1080
	unsigned long rsi;55,1100
	unsigned long rdi;56,1120
	unsigned long orig_rax;57,1140
	unsigned long rip;60,1229
	unsigned long cs;61,1249
	unsigned long eflags;62,1268
	unsigned long rsp;63,1292
	unsigned long ss;64,1313
#define TRAP_PF_PROT 74,1432
#define TRAP_PF_WRITE 75,1459
#define TRAP_PF_USER 76,1486

extras/mini-os/include/x86/arch_spinlock.h,434
#define __ARCH_ASM_SPINLOCK_H4,32
#define ARCH_SPIN_LOCK_UNLOCKED 10,106
#define arch_spin_is_locked(19,325
#define spin_unlock_wait(20,402
#define spin_lock_string 22,474
#define spin_lock_string_flags 34,645
#define spin_unlock_string 57,1029
static inline void _raw_spin_unlock(62,1144
static inline int _raw_spin_trylock(70,1269
static inline void _raw_spin_lock(80,1465
static inline void _raw_spin_lock_flags 87,1601

extras/mini-os/include/lwipopts.h,363
#define __LWIP_LWIPOPTS_H__10,154
#define SYS_LIGHTWEIGHT_PROT 12,183
#define MEM_LIBC_MALLOC 13,214
#define LWIP_TIMEVAL_PRIVATE 14,240
#define LWIP_DHCP 15,271
#define LWIP_COMPAT_SOCKETS 16,291
#define LWIP_IGMP 17,321
#define LWIP_USE_HEAP_FROM_INTERRUPT 18,341
#define MEMP_NUM_SYS_TIMEOUT 19,380
#define TCP_SND_BUF 20,412
#define TCP_MSS 21,437

extras/mini-os/include/ia64/arch_limits.h,153
#define __ARCH_LIMITS_H__3,27
#define __PAGE_SHIFT	6,89
#define __PAGE_SIZE	7,129
#define __STACK_SIZE_PAGE_ORDER 9,170
#define __STACK_SIZE 10,206

extras/mini-os/include/ia64/atomic.h,3723
#define _MACHINE_ATOMIC_H_32,1580
#define IA64_CMPXCHG(47,1821
ia64_cmpxchg_acq_8(61,2138
ia64_cmpxchg_acq_16(70,2317
ia64_cmpxchg_acq_32(79,2501
ia64_cmpxchg_rel_32(88,2685
ia64_cmpxchg_acq_64(97,2869
ia64_cmpxchg_rel_64(106,3053
#define ATOMIC_STORE_LOAD(114,3212
ATOMIC_STORE_LOAD(178,4858
#undef ATOMIC_STORE_LOAD183,4990
#define IA64_ATOMIC(185,5016
#undef IA64_ATOMIC229,6244
#undef IA64_CMPXCHG230,6263
#define atomic_set_8	232,6284
#define	atomic_clear_8	233,6324
#define atomic_add_8	234,6368
#define	atomic_subtract_8	235,6408
#define atomic_set_16	237,6458
#define	atomic_clear_16	238,6500
#define atomic_add_16	239,6546
#define	atomic_subtract_16	240,6588
#define atomic_set_32	242,6640
#define	atomic_clear_32	243,6682
#define atomic_add_32	244,6728
#define	atomic_subtract_32	245,6770
#define atomic_set_64	247,6822
#define	atomic_clear_64	248,6864
#define atomic_add_64	249,6910
#define	atomic_subtract_64	250,6952
#define atomic_set_char	252,7004
#define atomic_clear_char	253,7043
#define atomic_add_char	254,7085
#define atomic_subtract_char	255,7124
#define atomic_set_acq_char	256,7172
#define atomic_clear_acq_char	257,7218
#define atomic_add_acq_char	258,7268
#define atomic_subtract_acq_char	259,7314
#define atomic_set_rel_char	260,7369
#define atomic_clear_rel_char	261,7415
#define atomic_add_rel_char	262,7465
#define atomic_subtract_rel_char	263,7511
#define atomic_set_short	265,7567
#define atomic_clear_short	266,7607
#define atomic_add_short	267,7651
#define atomic_subtract_short	268,7691
#define atomic_set_acq_short	269,7741
#define atomic_clear_acq_short	270,7789
#define atomic_add_acq_short	271,7841
#define atomic_subtract_acq_short	272,7889
#define atomic_set_rel_short	273,7946
#define atomic_clear_rel_short	274,7994
#define atomic_add_rel_short	275,8046
#define atomic_subtract_rel_short	276,8094
#define atomic_set_int	278,8152
#define atomic_clear_int	279,8191
#define atomic_add_int	280,8233
#define atomic_subtract_int	281,8272
#define atomic_set_acq_int	282,8320
#define atomic_clear_acq_int	283,8366
#define atomic_add_acq_int	284,8416
#define atomic_subtract_acq_int	285,8462
#define atomic_set_rel_int	286,8518
#define atomic_clear_rel_int	287,8564
#define atomic_add_rel_int	288,8614
#define atomic_subtract_rel_int	289,8660
#define atomic_set_long	291,8717
#define atomic_clear_long	292,8757
#define atomic_add_long	293,8800
#define atomic_subtract_long	294,8840
#define atomic_set_acq_long	295,8889
#define atomic_clear_acq_long	296,8936
#define atomic_add_acq_long	297,8987
#define atomic_subtract_acq_long	298,9034
#define atomic_set_rel_long	299,9090
#define atomic_clear_rel_long	300,9137
#define atomic_add_rel_long	301,9188
#define atomic_subtract_rel_long	302,9235
atomic_cmpset_rel_32(316,9666
atomic_cmpset_acq_64(327,10020
atomic_cmpset_rel_64(333,10180
#define atomic_cmpset_32	338,10320
#define atomic_cmpset_64	339,10367
#define	atomic_cmpset_int	340,10414
#define	atomic_cmpset_long	341,10458
#define atomic_cmpset_acq_int	342,10503
#define atomic_cmpset_rel_int	343,10555
#define atomic_cmpset_acq_long	344,10607
#define atomic_cmpset_rel_long	345,10660
atomic_cmpset_acq_ptr(348,10734
atomic_cmpset_rel_ptr(355,10922
#define	atomic_cmpset_ptr	361,11090
atomic_load_acq_ptr(364,11162
atomic_store_rel_ptr(370,11286
#define IA64_ATOMIC_PTR(375,11396
IA64_ATOMIC_PTR(394,11906
#undef IA64_ATOMIC_PTR399,11998
atomic_readandclear_64(412,12209
#define atomic_readandclear_int	421,12346
#define atomic_readandclear_long	422,12401
set_bit(428,12505
clear_bit(442,12778
test_bit(455,13058
test_and_set_bit 467,13342
inline int test_and_clear_bit(487,13831

extras/mini-os/include/ia64/page.h,915
#define _PAGE_H_28,1331
#define PTE_KERNEL_ATTR 33,1388
#define KERNEL_TR_PAGE_SIZE	42,1642
#define PAL_TR_PAGE_SIZE	44,1727
#define PAGE_SHIFT	47,1788
#define PAGE_SIZE	48,1820
#define PAGE_MASK	49,1850
#define KSTACK_PAGES	51,1886
#define IA64_TR_KERNEL	53,1951
#define IA64_TR_PAL	54,2025
#define IA64_RR_BASE(59,2130
#define IA64_RR_MASK(60,2176
#define IA64_RR_EXTR(61,2235
#define IA64_PHYS_TO_RR5(63,2273
#define IA64_PHYS_TO_RR7(64,2325
#define __pa(66,2378
#define __va(67,2410
#define roundup_page(69,2447
#define trunc_page(70,2523
#define page_to_pfn(78,2689
#define pfn_to_page(79,2748
#define virt_to_page(81,2858
#define virt_to_pfn(82,2920
#define KERNEL_START	90,3095
#define KERNEL_PHYS_START_SHIFT	96,3237
#define KERN_VIRT_2_PHYS(99,3318
#define IA64_KEY_REG7	103,3466
#define IA64_KEY_REG5	104,3537
#define PAGE_SHIFT_XEN_16K	107,3626
#define mfn_to_virt(108,3678

extras/mini-os/include/ia64/asm.h,62
#define _ASM_H_6,88
#define	ENTRY(8,105
#define	END(15,208

extras/mini-os/include/ia64/hypercall-ia64.h,257
#define __HYPERCALL_H__35,1657
#define likely(46,1867
#define unlikely(47,1918
#define _hypercall0(56,2223
#define _hypercall1(64,2390
#define _hypercall2(72,2575
#define _hypercall3(81,2791
#define _hypercall4(91,3038
#define _hypercall5(102,3316

extras/mini-os/include/ia64/pal.h,1439
#define _PAL_H_31,1496
#define PAL_CACHE_FLUSH	36,1573
#define PAL_CACHE_INFO	37,1600
#define PAL_CACHE_INIT	38,1626
#define PAL_CACHE_SUMMARY	39,1652
#define PAL_MEM_ATTRIB	40,1680
#define PAL_PTCE_INFO	41,1706
#define PAL_VM_INFO	42,1731
#define PAL_VM_SUMMARY	43,1754
#define PAL_BUS_GET_FEATURES	44,1780
#define PAL_BUS_SET_FEATURES	45,1811
#define PAL_DEBUG_INFO	46,1843
#define PAL_FIXED_ADDR	47,1870
#define PAL_FREQ_BASE	48,1897
#define PAL_FREQ_RATIOS	49,1923
#define PAL_PERF_MON_INFO	50,1951
#define PAL_PLATFORM_ADDR	51,1980
#define PAL_PROC_GET_FEATURE	52,2009
#define PAL_PROC_SET_FEATURE	53,2041
#define PAL_RSE_INFO	54,2073
#define PAL_VERSION	55,2098
#define PAL_MC_CLEAR_LOG	56,2122
#define PAL_MC_DRAIN	57,2150
#define PAL_MC_DYNAMIC_STATE	58,2175
#define PAL_MC_ERROR_INFO	59,2207
#define PAL_MC_EXPECTED	60,2236
#define PAL_MC_REGISTER_MEM	61,2264
#define PAL_MC_RESUME	62,2295
#define PAL_HALT	63,2321
#define PAL_HALT_LIGHT	64,2342
#define PAL_COPY_INFO	65,2369
#define PAL_CACHE_LINE_INIT	66,2395
#define PAL_PMI_ENTRYPOINT	67,2426
#define PAL_ENTER_IA_32_ENV	68,2456
#define PAL_VM_PAGE_SIZE	69,2487
#define PAL_MEM_FOR_TEST	70,2515
#define PAL_CACHE_PROT_INFO	71,2543
#define PAL_REGISTER_INFO	72,2574
#define PAL_SHUTDOWN	73,2603
#define PAL_PREFETCH_VISIBILITY	74,2628
struct ia64_pal_result77,2665
	int64_t		pal_status;79,2690
	uint64_t	pal_result[pal_result80,2712

extras/mini-os/include/ia64/ia64_cpu.h,9197
#define _IA64_CPU_H_34,1563
#define IA64_RR_VE	43,1687
#define IA64_RR_MBZ0	44,1709
#define IA64_RR_PS	45,1733
#define IA64_RR_PS_LEN	46,1755
#define IA64_RR_RID	47,1781
#define IA64_RR_RID_LEN	48,1804
#define IA64_RR_MBZ1	49,1832
#define IA64_RR_IDX_POS	51,1858
#define IA64_RR_VAL(53,1887
#define IA64_PKR_V	60,2045
#define IA64_PKR_WD	61,2067
#define IA64_PKR_RD	62,2090
#define IA64_PKR_XD	63,2113
#define IA64_PKR_MBZ0	64,2136
#define IA64_PKR_KEY	65,2161
#define IA64_PKR_KEY_LEN	66,2185
#define IA64_PKR_MBZ1	67,2213
#define IA64_PKR_VALID	69,2240
#define	IA64_ITIR_MBZ0	76,2320
#define	IA64_ITIR_PS	77,2346
#define	IA64_ITIR_PS_LEN	78,2370
#define	IA64_ITIR_KEY	79,2397
#define	IA64_ITIR_KEY_LEN	80,2422
#define	IA64_ITIR_MBZ1	81,2451
#define	IA64_ITIR_MBZ1_LEN	82,2478
#define	IA64_ITIR_PPN	83,2508
#define	IA64_ITIR_PPN_LEN	84,2534
#define	IA64_ITIR_MBZ2	85,2563
#define IA64_PSR_BE	90,2634
#define IA64_PSR_UP	91,2674
#define IA64_PSR_AC	92,2714
#define IA64_PSR_MFL	93,2754
#define IA64_PSR_MFH_BIT	94,2795
#define IA64_PSR_MFH	95,2822
#define IA64_PSR_UMASK	96,2868
#define IA64_PSR_IC_BIT	99,2976
#define IA64_PSR_IC	100,3004
#define IA64_PSR_I_BIT	101,3069
#define IA64_PSR_I	102,3096
#define IA64_PSR_PK	103,3159
#define IA64_PSR_DT	104,3199
#define IA64_PSR_DFL	105,3239
#define IA64_PSR_DFH	106,3280
#define IA64_PSR_SP	107,3321
#define IA64_PSR_PP	108,3361
#define IA64_PSR_DI	109,3401
#define IA64_PSR_SI	110,3441
#define IA64_PSR_DB	111,3481
#define IA64_PSR_LP	112,3521
#define IA64_PSR_TB	113,3561
#define IA64_PSR_RT	114,3601
#define IA64_PSR_CPL	115,3641
#define IA64_PSR_CPL_KERN	116,3682
#define IA64_PSR_CPL_1	117,3727
#define IA64_PSR_CPL_2	118,3770
#define IA64_PSR_CPL_USER	119,3813
#define IA64_PSR_IS	120,3858
#define IA64_PSR_MC	121,3898
#define IA64_PSR_IT	122,3938
#define IA64_PSR_ID	123,3978
#define IA64_PSR_DA	124,4018
#define IA64_PSR_DD	125,4058
#define IA64_PSR_SS	126,4098
#define IA64_PSR_RI	127,4138
#define IA64_PSR_RI_0	128,4178
#define IA64_PSR_RI_1	129,4220
#define IA64_PSR_RI_2	130,4262
#define IA64_PSR_RI_SHIFT	131,4304
#define IA64_PSR_ED	132,4333
#define IA64_PSR_BN	133,4373
#define IA64_PSR_IA	134,4413
#define STARTUP_PSR 137,4455
#define MOS_SYS_PSR 141,4609
#define MOS_USR_PSR 145,4776
#define IA64_ISR_CODE	152,4977
#define IA64_ISR_VECTOR	153,5018
#define IA64_ISR_X	154,5061
#define IA64_ISR_W	155,5099
#define IA64_ISR_R	156,5137
#define IA64_ISR_NA	157,5175
#define IA64_ISR_SP	158,5214
#define IA64_ISR_RS	159,5253
#define IA64_ISR_IR	160,5292
#define IA64_ISR_NI	161,5331
#define IA64_ISR_SO	162,5370
#define IA64_ISR_EI	163,5409
#define IA64_ISR_EI_0	164,5448
#define IA64_ISR_EI_1	165,5489
#define IA64_ISR_EI_2	166,5530
#define IA64_ISR_ED	167,5571
#define IA64_DCR_PP	172,5639
#define IA64_DCR_BE	173,5662
#define IA64_DCR_LC	174,5685
#define IA64_DCR_MBZ0	175,5708
#define IA64_DCR_MBZ0_V	176,5733
#define IA64_DCR_DM	177,5762
#define IA64_DCR_DP	178,5785
#define IA64_DCR_DK	179,5808
#define IA64_DCR_DX	180,5832
#define IA64_DCR_DR	181,5856
#define IA64_DCR_DA	182,5880
#define IA64_DCR_DD	183,5904
#define IA64_DCR_DEFER_ALL	184,5928
#define IA64_DCR_MBZ1	185,5962
#define IA64_DCR_MBZ1_V	186,5987
#define IA64_DCR_DEFAULT 189,6032
#define IA64_VEC_VHPT	194,6126
#define IA64_VEC_ITLB	195,6153
#define IA64_VEC_DTLB	196,6180
#define IA64_VEC_ALT_ITLB	197,6207
#define IA64_VEC_ALT_DTLB	198,6237
#define IA64_VEC_NESTED_DTLB	199,6267
#define IA64_VEC_IKEY_MISS	200,6300
#define IA64_VEC_DKEY_MISS	201,6331
#define IA64_VEC_DIRTY_BIT	202,6362
#define IA64_VEC_INST_ACCESS	203,6393
#define IA64_VEC_DATA_ACCESS	204,6426
#define IA64_VEC_BREAK	205,6460
#define IA64_VEC_EXT_INTR	206,6489
#define IA64_VEC_PAGE_NOT_PRESENT	207,6520
#define IA64_VEC_KEY_PERMISSION	208,6558
#define IA64_VEC_INST_ACCESS_RIGHTS	209,6595
#define IA64_VEC_DATA_ACCESS_RIGHTS	210,6635
#define IA64_VEC_GENERAL_EXCEPTION	211,6675
#define IA64_VEC_DISABLED_FP	212,6714
#define IA64_VEC_NAT_CONSUMPTION	213,6748
#define IA64_VEC_SPECULATION	214,6785
#define IA64_VEC_DEBUG	215,6819
#define IA64_VEC_UNALIGNED_REFERENCE	216,6848
#define IA64_VEC_UNSUPP_DATA_REFERENCE	217,6889
#define IA64_VEC_FLOATING_POINT_FAULT	218,6932
#define IA64_VEC_FLOATING_POINT_TRAP	219,6974
#define IA64_VEC_LOWER_PRIVILEGE_TRANSFER 220,7015
#define IA64_VEC_TAKEN_BRANCH_TRAP	221,7061
#define IA64_VEC_SINGLE_STEP_TRAP	222,7100
#define IA64_VEC_IA32_EXCEPTION	223,7138
#define IA64_VEC_IA32_INTERCEPT	224,7175
#define IA64_VEC_IA32_INTERRUPT	225,7212
#define IA64_RSC_MODE 233,7353
#define IA64_RSC_PL 234,7383
#define IA64_RSC_BE 235,7413
#define IA64_RSC_MBZ0 236,7443
#define IA64_RSC_MBZ0_V 237,7473
#define IA64_RSC_LOADRS 238,7507
#define IA64_RSC_LOADRS_LEN 239,7538
#define IA64_RSC_MBZ1 240,7569
#define IA64_RSC_MBZ1_V 241,7600
#define IA64_RSC_MODE_LY 246,7664
#define IA64_RSC_MODE_SI 247,7708
#define IA64_RSC_MODE_LI 248,7763
#define IA64_RSC_MODE_EA 249,7817
#define IA64_RSE_EAGER 251,7863
#define IA64_RSE_LAZY 252,7920
struct ia64_fdesc259,8051
	uint64_t	func;261,8071
	uint64_t	gp;262,8087
typedef struct ia64_fdesc ia64_fdesc_t;264,8104
#define FDESC_FUNC(266,8145
#define FDESC_GP(267,8204
ia64_mf(278,8354
ia64_mf_a(284,8432
ia64_fc(293,8524
ia64_sync_i(302,8645
ia64_thash(311,8766
ia64_ttag(322,8952
ia64_tpa(333,9146
ia64_ptc_e(344,9327
ia64_ptc_g(353,9468
ia64_ptc_ga(362,9644
ia64_ptc_l(371,9821
ia64_get_psr(380,9993
ia64_set_psr(388,10123
ia64_srlz_d(394,10220
disable_intr(400,10295
enable_intr(406,10380
#define IA64_AR(415,10498
IA64_AR(431,10884
#define IA64_CR(471,11296
#define IA64_GR(519,12016
ia64_get_rr(554,12667
ia64_get_cpuid(567,12862
struct trap_frame576,12992
	uint64_t	rsc;578,13012
	uint64_t	ndirty;579,13027
	uint64_t	ssd;580,13073
	uint64_t	iip;581,13088
	uint64_t	ipsr;582,13125
	uint64_t	ifs;583,13164
	uint16_t	trap_num;585,13221
	uint64_t	cfm;586,13275
	uint64_t	pfs;587,13318
	uint64_t	bsp;588,13369
	uint64_t	rnat;589,13418
	uint64_t	csd;590,13465
	uint64_t	ccv;591,13516
	uint64_t	unat;592,13568
	uint64_t	fpsr;593,13591
	uint64_t	pr;594,13644
	uint64_t	gp;596,13686
	uint64_t	sp;597,13722
	uint64_t	tp;598,13757
	uint64_t	r2;600,13794
	uint64_t	r3;601,13828
	uint64_t	r8;602,13842
	uint64_t	r9;603,13856
	uint64_t	r10;604,13870
	uint64_t	r11;605,13885
	uint64_t	r14;606,13900
	uint64_t	r15;607,13915
	uint64_t	r16;608,13930
	uint64_t	r17;609,13945
	uint64_t	r18;610,13960
	uint64_t	r19;611,13975
	uint64_t	r20;612,13990
	uint64_t	r21;613,14005
	uint64_t	r22;614,14020
	uint64_t	r23;615,14035
	uint64_t	r24;616,14050
	uint64_t	r25;617,14065
	uint64_t	r26;618,14080
	uint64_t	r27;619,14095
	uint64_t	r28;620,14110
	uint64_t	r29;621,14125
	uint64_t	r30;622,14140
	uint64_t	r31;623,14155
	uint64_t	b0;625,14171
	uint64_t	b6;626,14185
	uint64_t	b7;627,14199
	ia64_fpreg_t	f6;629,14214
	ia64_fpreg_t	f7;630,14274
	ia64_fpreg_t	f8;631,14292
	ia64_fpreg_t	f9;632,14310
	ia64_fpreg_t	f10;633,14328
	ia64_fpreg_t	f11;634,14347
	uint64_t	ifa;636,14367
	uint64_t	isr;637,14419
	uint64_t	iim;638,14470
typedef struct trap_frame trap_frame_t;641,14528
#define PTE_P_SHIFT	647,14628
#define PTE_P	648,14650
#define PTE_MA_SHIFT	650,14668
#define PTE_MA_WB	651,14691
#define PTE_A_SHIFT	653,14712
#define PTE_A	654,14734
#define PTE_D_SHIFT	655,14751
#define PTE_D	656,14773
#define PTE_AR_SHIFT	658,14791
#define PTE_AR_R	659,14814
#define PTE_AR_RX	660,14833
#define PTE_AR_RW	661,14853
#define PTE_AR_RWX	662,14873
#define PTE_AR_R_RW	663,14894
#define PTE_AR_RX_RWX	664,14916
#define PTE_AR_RWX_RW	665,14940
#define PTE_PL_SHIFT	667,14986
#define PTE_PL_KERN	668,15009
#define PTE_PS_4K	670,15069
#define PTE_PS_8K	671,15090
#define PTE_PS_16K	672,15111
#define PTE_PS_64K	673,15133
#define PTE_PS_256K	674,15155
#define PTE_PS_1M	675,15178
#define PTE_PS_4M	676,15199
#define PTE_PS_16M	677,15220
#define PTE_PS_64M	678,15242
#define PTE_PS_256M	679,15264
#define PTE_OFF_P	683,15325
#define PTE_OFF_MA	684,15345
#define PTE_OFF_A	685,15366
#define PTE_OFF_D	686,15386
#define PTE_OFF_PL	687,15406
#define PTE_OFF_AR	688,15427
#define PTE_OFF_PPN	689,15448
#define PTE_OFF_ED	690,15471
	uint64_t pte_p	698,15632
	uint64_t pte_rv1:pte_rv1699,15668
	uint64_t pte_ma	700,15705
	uint64_t pte_a	701,15742
	uint64_t pte_d	702,15778
	uint64_t pte_pl	703,15814
	uint64_t pte_ar	704,15851
	uint64_t pte_ppn:pte_ppn705,15889
	uint64_t pte_rv2:pte_rv2706,15929
	uint64_t pte_ed	707,15968
	uint64_t pte_ig	708,16007
} ia64_pte_t;709,16047
	uint64_t pte_p	717,16116
	uint64_t pte_rv1	718,16153
	uint64_t pte_ma	719,16191
	uint64_t pte_a	720,16229
	uint64_t pte_d	721,16266
	uint64_t pte_pl	722,16303
	uint64_t pte_ar	723,16341
	uint64_t pte_ppn	724,16380
	uint64_t pte_rv2	725,16421
	uint64_t pte_ed	726,16461
	uint64_t pte_ig	727,16501
	uint64_t pte_rv3	728,16542
	uint64_t pte_ps	729,16580
	uint64_t pte_key	730,16618
	uint64_t pte_rv4	731,16658
	uint64_t pte_tag;732,16699
	uint64_t pte_chain;733,16737
} ia64_lpte_t;734,16787

extras/mini-os/include/ia64/efi.h,6405
#define _EFI_H_33,1822
#define EFIWARN(38,1868
#define EFI_ERROR(39,1912
#define EFI_SUCCESS 42,1974
#define EFI_LOAD_ERROR 43,2016
#define EFI_INVALID_PARAMETER 44,2066
#define EFI_UNSUPPORTED 45,2116
#define EFI_BAD_BUFFER_SIZE 46,2166
#define EFI_BUFFER_TOO_SMALL 47,2216
#define EFI_NOT_READY 48,2266
#define EFI_DEVICE_ERROR 49,2316
#define EFI_WRITE_PROTECTED 50,2366
#define EFI_OUT_OF_RESOURCES 51,2416
#define EFI_VOLUME_CORRUPTED 52,2466
#define EFI_VOLUME_FULL 53,2517
#define EFI_NO_MEDIA 54,2568
#define EFI_MEDIA_CHANGED 55,2619
#define EFI_NOT_FOUND 56,2670
#define EFI_ACCESS_DENIED 57,2721
#define EFI_NO_RESPONSE 58,2772
#define EFI_NO_MAPPING 59,2823
#define EFI_TIMEOUT 60,2874
#define EFI_NOT_STARTED 61,2925
#define EFI_ALREADY_STARTED 62,2976
#define EFI_ABORTED 63,3027
#define EFI_ICMP_ERROR 64,3078
#define EFI_TFTP_ERROR 65,3129
#define EFI_PROTOCOL_ERROR 66,3180
#define EFI_WARN_UNKOWN_GLYPH 68,3232
#define EFI_WARN_DELETE_FAILURE 69,3283
#define EFI_WARN_WRITE_FAILURE 70,3334
#define EFI_WARN_BUFFER_TOO_SMALL 71,3385
typedef uint64_t	efi_status_t;74,3438
typedef void*		efi_handle_t;75,3469
typedef void*		efi_event_t;76,3498
typedef uint16_t	efi_char16_t;77,3526
struct efi_table_header84,3596
	uint64_t	Signature;86,3622
	uint32_t	Revision;90,3766
	uint32_t	HeaderSize;91,3786
	uint32_t	CRC32;92,3808
	uint32_t	Reserved;93,3825
typedef struct efi_table_header efi_table_header_t;95,3848
	uint16_t	Year;102,3947
	uint8_t		Month;103,3987
	uint8_t		Day;104,4022
	uint8_t		Hour;105,4057
	uint8_t		Minute;106,4092
	uint8_t		Second;107,4127
	uint8_t		Pad1;108,4162
	uint32_t	Nanosecond;109,4178
	int16_t		TimeZone;110,4222
	uint8_t		Daylight;111,4272
	uint8_t		Pad2;112,4292
} efi_time_t;113,4308
#define EFI_TIME_ADJUST_DAYLIGHT 116,4369
#define EFI_TIME_IN_DAYLIGHT 117,4410
#define EFI_UNSPECIFIED_TIMEZONE 120,4499
	uint32_t	Resolution;126,4562
	uint32_t	Accuracy;127,4617
	uint8_t		SetsToZero;128,4655
} efi_time_capabilities_t;129,4714
typedef efi_status_t (*efi_get_time_t)efi_get_time_t132,4743
typedef efi_status_t (*efi_set_time_t)efi_set_time_t133,4823
typedef efi_status_t (*efi_get_wakeup_time_t)efi_get_wakeup_time_t134,4877
typedef efi_status_t (*efi_set_wakeup_time_t)efi_set_wakeup_time_t135,4958
	EfiReservedMemoryType,147,5345
	EfiLoaderCode,148,5378
	EfiLoaderData,149,5394
	EfiBootServicesCode,150,5410
	EfiBootServicesData,151,5432
	EfiRuntimeServicesCode,152,5454
	EfiRuntimeServicesData,153,5479
	EfiConventionalMemory,154,5513
	EfiUnusableMemory,155,5546
	EfiACPIReclaimMemory,156,5566
	EfiACPIMemoryNVS,157,5598
	EfiMemoryMappedIO,158,5630
	EfiMemoryMappedIOPortSpace,159,5650
	EfiPalCode,160,5691
	EfiMaxMemoryType	161,5718
} efi_memory_type_t;162,5749
#define EFI_MEMORY_UC	165,5821
#define EFI_MEMORY_WC	166,5863
#define EFI_MEMORY_WT	167,5905
#define EFI_MEMORY_WB	168,5947
#define EFI_MEMORY_UCE	169,5989
#define EFI_MEMORY_WP	171,6076
#define EFI_MEMORY_RP	172,6118
#define EFI_MEMORY_XP	173,6160
#define EFI_MEMORY_RUNTIME	175,6241
#define EFI_MEMORY_DESCRIPTOR_VERSION 177,6288
typedef uint64_t efi_phys_addr_t;179,6330
typedef uint64_t efi_virt_addr_t;180,6364
	uint32_t	Type;184,6416
	efi_phys_addr_t	PhysicalStart;185,6463
	efi_virt_addr_t	VirtualStart;186,6495
	uint64_t	NumberOfPages;187,6526
	uint64_t	Attribute;188,6551
} efi_memory_descriptor_t;189,6572
#define NextMemoryDescriptor(191,6600
typedef efi_status_t (*efi_set_virtual_address_map_t)efi_set_virtual_address_map_t194,6697
typedef efi_status_t (*efi_convert_pointer_t)efi_convert_pointer_t202,6880
	uint32_t	Data1;214,7025
	uint16_t	Data2;215,7042
	uint16_t	Data3;216,7059
	uint8_t		Data4[Data4217,7076
} efi_guid_t;218,7097
#define MPS_TABLE_GUID	224,7168
#define ACPI_TABLE_GUID	228,7283
#define ACPI_20_TABLE_GUID 232,7399
#define SMBIOS_TABLE_GUID 236,7517
#define SAL_SYSTEM_TABLE_GUID 240,7636
#define	HCDP_TABLE_GUID	245,7808
typedef struct efi_configuration_table250,7923
	efi_guid_t	VendorGuid;252,7964
	void*		VendorTable;253,7988
} efi_configuration_table_t;254,8009
#define EFI_GLOBAL_VARIABLE 261,8074
#define EFI_VARIABLE_NON_VOLATILE 266,8221
#define EFI_VARIABLE_BOOTSERVICE_ACCESS 267,8276
#define EFI_VARIABLE_RUNTIME_ACCESS 268,8331
#define EFI_MAXIMUM_VARIABLE_SIZE 271,8418
typedef efi_status_t (*efi_get_variable_t)efi_get_variable_t273,8468
efi_status_t (*efi_get_next_variable_name_t)efi_get_next_variable_name_t283,8643
typedef efi_status_t (*efi_set_variable_t)efi_set_variable_t290,8781
	EfiResetCold,305,8977
	EfiResetWarm,306,8992
	EfiResetShutdown307,9007
} efi_reset_type_t;308,9025
typedef efi_status_t (*efi_reset_system_t)efi_reset_system_t311,9047
typedef efi_status_t (*efi_get_next_high_mono_count_t)efi_get_next_high_mono_count_t319,9206
#define EFI_RUNTIME_SERVICES_SIGNATURE 326,9324
#define EFI_RUNTIME_SERVICES_REVISION 327,9385
	efi_table_header_t		Hdr;332,9526
	efi_get_time_t			GetTime;334,9573
	efi_set_time_t			SetTime;335,9600
	efi_get_wakeup_time_t		GetWakeupTime;336,9627
	efi_set_wakeup_time_t		SetWakeupTime;337,9666
	efi_set_virtual_address_map_t	SetVirtualAddressMap;339,9736
	efi_convert_pointer_t		ConvertPointer;340,9789
	efi_get_variable_t		GetVariable;342,9854
	efi_get_next_variable_name_t	GetNextVariableName;343,9888
	efi_set_variable_t		SetVariable;344,9939
	efi_get_next_high_mono_count_t	GetNextHighMonotonicCount;346,9985
	efi_reset_system_t		ResetSystem;347,10044
} efi_runtime_services_t;349,10079
#define EFI_SPECIFICATION_MAJOR_REVISION 352,10107
#define EFI_SYSTEM_TABLE_SIGNATURE 353,10150
#define EFI_SYSTEM_TABLE_REVISION 354,10209
struct efi_system_table357,10330
	efi_table_header_t	Hdr;359,10356
	uint64_t	FirmwareVendor;361,10382
	uint32_t	FirmwareRevision;362,10432
	efi_handle_t	ConsoleInHandle;364,10489
	uint64_t	ConIn;365,10520
	efi_handle_t	ConsoleOutHandle;367,10538
	uint64_t	ConOut;368,10570
	efi_handle_t	StandardErrorHandle;370,10589
	uint64_t	StdErr;371,10624
	uint64_t	RuntimeServices;373,10643
	uint64_t	BootServices;374,10683
	uint64_t	NumberOfTableEntries;376,10722
	uint64_t	ConfigurationTable;377,10785
typedef struct efi_system_table efi_system_table_t;380,10847
#define EFI_PAGE_SIZE 383,10901
#define EFI_PAGE_MASK 384,10930
#define EFI_PAGE_SHIFT 385,10960
#define EFI_SIZE_TO_PAGES(387,10988

extras/mini-os/include/ia64/sal.h,3699
#define _SAL_H_45,2150
typedef uint64_t u_int64_t;47,2167
typedef uint32_t u_int32_t;48,2195
typedef uint16_t u_int16_t;49,2223
typedef uint8_t u_int8_t;50,2251
struct sal_system_table 52,2278
	char		sal_signature[sal_signature53,2304
#define	SAL_SIGNATURE	54,2329
	uint32_t	sal_length;55,2358
	uint8_t		sal_rev[sal_rev56,2380
	uint16_t	sal_entry_count;57,2439
	uint8_t		sal_checksum;58,2493
	uint8_t		sal_reserved1[sal_reserved159,2517
	uint8_t		sal_a_version[sal_a_version60,2545
	uint8_t		sal_b_version[sal_b_version61,2589
	char		sal_oem_id[sal_oem_id62,2633
	char		sal_product_id[sal_product_id63,2687
	uint8_t		sal_reserved2[sal_reserved264,2740
typedef struct sal_system_table sal_system_table_t;67,2772
#define SAL_DESC_ENTRYPOINT	69,2825
#define SAL_DESC_ENTRYPOINT_LENGTH	70,2856
#define SAL_DESC_MEMORY	71,2894
#define SAL_DESC_MEMORY_LENGTH	72,2922
#define SAL_DESC_PLATFORM	73,2957
#define SAL_DESC_PLATFORM_LENGT	74,2986
#define SAL_DESC_TR_REG	75,3022
#define SAL_DESC_TR_REG_LENGTH	76,3050
#define SAL_DESC_PURGE_TR_CACHE	77,3085
#define SAL_DESC_PURGE_TR_CACHE_LENGTH	78,3120
#define SAL_DESC_AP_WAKEUP	79,3162
#define SAL_DESC_AP_WAKEUP_LENGTH	80,3192
struct sal_entrypoint_descriptor83,3231
	uint8_t		sale_type;85,3266
	uint8_t		sale_reserved1[sale_reserved186,3299
	uint64_t	sale_pal_proc;87,3328
	uint64_t	sale_sal_proc;88,3381
	uint64_t	sale_sal_gp;89,3434
	uint8_t		sale_reserved2[sale_reserved290,3490
struct sal_memory_descriptor93,3524
	uint8_t		sale_type;95,3555
	uint8_t		sale_need_virtual;96,3587
	uint8_t		sale_current_attribute;97,3616
	uint8_t		sale_access_rights;98,3650
	uint8_t		sale_supported_attributes;99,3680
	uint8_t		sale_reserved1;100,3717
	uint8_t		sale_memory_type[sale_memory_type101,3743
	uint64_t	sale_physical_address;102,3774
	uint32_t	sale_length;103,3807
	uint8_t		sale_reserved2[sale_reserved2104,3830
struct sal_platform_descriptor107,3864
	uint8_t		sale_type;109,3897
	uint8_t		sale_features;110,3929
	uint8_t		sale_reserved[sale_reserved111,3954
struct sal_tr_descriptor114,3987
	u_int8_t	sale_type;116,4014
	u_int8_t	sale_register_type;117,4046
	u_int8_t	sale_register_number;118,4076
	u_int8_t	sale_reserved1[sale_reserved1119,4108
	u_int64_t	sale_virtual_address;120,4137
	u_int64_t	sale_page_size;121,4170
	u_int8_t	sale_reserved2[sale_reserved2122,4197
struct sal_ptc_cache_descriptor125,4230
	uint8_t		sale_type;127,4264
	uint8_t		sale_reserved[sale_reserved128,4296
	uint32_t	sale_domains;129,4324
	uint64_t	sale_address;130,4348
struct sal_ap_wakeup_descriptor133,4376
	uint8_t		sale_type;135,4410
	uint8_t		sale_mechanism;136,4442
	uint8_t		sale_reserved[sale_reserved137,4468
	uint64_t	sale_vector;138,4496
#define SAL_SET_VECTORS	145,4557
#define SAL_GET_STATE_INFO	146,4594
#define SAL_GET_STATE_INFO_SIZE	147,4633
#define SAL_CLEAR_STATE_INFO	148,4677
#define SAL_MC_RENDEZ	149,4718
#define SAL_MC_SET_PARAMS	150,4753
#define SAL_REGISTER_PHYSICAL_ADDR	151,4791
#define SAL_CACHE_FLUSH	152,4837
#define SAL_CACHE_INIT	153,4874
#define SAL_PCI_CONFIG_READ	154,4910
#define SAL_PCI_CONFIG_WRITE	155,4950
#define SAL_FREQ_BASE	156,4991
#define SAL_UPDATE_PAL	157,5026
#define	SAL_OS_MCA	160,5105
#define	SAL_OS_INIT	161,5127
#define	SAL_OS_BOOT_RENDEZ	162,5150
#define	SAL_INFO_MCA	165,5236
#define	SAL_INFO_INIT	166,5260
#define	SAL_INFO_CMC	167,5285
#define	SAL_INFO_CPE	168,5309
#define	SAL_INFO_TYPES	169,5333
struct ia64_sal_result171,5396
	int64_t		sal_status;173,5421
	uint64_t	sal_result[sal_result174,5443
typedef struct ia64_sal_result ia64_sal_result_t;176,5471
typedef ia64_sal_result_t sal_entry_t178,5522

extras/mini-os/include/ia64/ia64_fpu.h,1038
#define _IA64_FPU_H_31,1502
#define IA64_FPSR_TRAP_VD	38,1588
#define IA64_FPSR_TRAP_DD	39,1643
#define IA64_FPSR_TRAP_ZD	40,1698
#define IA64_FPSR_TRAP_OD	41,1753
#define IA64_FPSR_TRAP_UD	42,1808
#define IA64_FPSR_TRAP_ID	43,1863
#define IA64_FPSR_SF(44,1918
#define IA64_SF_FTZ	46,1965
#define IA64_SF_WRE	47,2003
#define IA64_SF_PC	48,2041
#define IA64_SF_PC_0	49,2078
#define IA64_SF_PC_1	50,2117
#define IA64_SF_PC_2	51,2156
#define IA64_SF_PC_3	52,2195
#define IA64_SF_RC	53,2234
#define IA64_SF_RC_NEAREST	54,2271
#define IA64_SF_RC_NEGINF	55,2315
#define IA64_SF_RC_POSINF	56,2358
#define IA64_SF_RC_TRUNC	57,2401
#define IA64_SF_TD	58,2443
#define IA64_SF_V	59,2480
#define IA64_SF_D	60,2516
#define IA64_SF_Z	61,2552
#define IA64_SF_O	62,2588
#define IA64_SF_U	63,2624
#define IA64_SF_I	64,2660
#define IA64_SF_DEFAULT	66,2697
#define IA64_FPSR_DEFAULT	68,2758
#define __aligned(87,3293
struct ia64_fpreg90,3391
	uint8_t	fpr_bits[fpr_bits92,3411
typedef struct ia64_fpreg ia64_fpreg_t;95,3452

extras/mini-os/include/ia64/arch_mm.h,276
#define __ARCH_MM_H__25,1263
#define PFN_PHYS(30,1327
#define PHYS_PFN(31,1364
#define to_virt(32,1401
#define to_phys(33,1428
#define virt_to_mfn(35,1456
#define virtual_to_mfn(36,1494
#define map_frames(38,1566
#define map_zero(40,1652
#define do_map_zero(41,1728

extras/mini-os/include/ia64/arch_sched.h,1194
#define __ARCH_SCHED_H__28,1350
struct thread_regs34,1435
	unsigned long	unat_b;36,1456
	unsigned long	sp;37,1506
	unsigned long	rp;38,1525
	unsigned long	pr;39,1544
	unsigned long	bsp;40,1563
	unsigned long	pfs;41,1583
	unsigned long	rnat;42,1603
	unsigned long	lc;43,1624
	unsigned long	unat_a;45,1644
	unsigned long	r4;46,1694
	unsigned long	r5;47,1713
	unsigned long	r6;48,1732
	unsigned long	r7;49,1751
	unsigned long	b1;51,1771
	unsigned long	b2;52,1790
	unsigned long	b3;53,1809
	unsigned long	b4;54,1828
	unsigned long	b5;55,1847
	ia64_fpreg_t	f2;57,1867
	ia64_fpreg_t	f3;58,1885
	ia64_fpreg_t	f4;59,1903
	ia64_fpreg_t	f5;60,1921
	ia64_fpreg_t	f16;61,1939
	ia64_fpreg_t	f17;62,1958
	ia64_fpreg_t	f18;63,1977
	ia64_fpreg_t	f19;64,1996
	ia64_fpreg_t	f20;65,2015
	ia64_fpreg_t	f21;66,2034
	ia64_fpreg_t	f22;67,2053
	ia64_fpreg_t	f23;68,2072
	ia64_fpreg_t	f24;69,2091
	ia64_fpreg_t	f25;70,2110
	ia64_fpreg_t	f26;71,2129
	ia64_fpreg_t	f27;72,2148
	ia64_fpreg_t	f28;73,2167
	ia64_fpreg_t	f29;74,2186
	ia64_fpreg_t	f30;75,2205
	ia64_fpreg_t	f31;76,2224
typedef struct thread_regs thread_regs_t;79,2247
static inline struct thread* get_current(83,2359

extras/mini-os/include/ia64/os.h,1766
#define __OS_H__26,1265
typedef uint64_t paddr_t;40,1493
typedef uint64_t caddr_t;42,1562
#define COMMAND_LINE_SIZE 55,1836
struct efi68,2153
	efi_system_table_t*		efiSysTableP;71,2167
	efi_set_virtual_address_map_t	setVirtAddrMapF;72,2203
	efi_get_time_t			getTimeF;73,2251
	efi_reset_system_t		resetSystemF;74,2279
struct machine_fw78,2319
	struct efi efi;80,2339
	uint64_t ia64_port_base;82,2357
	uint64_t ia64_pal_base;83,2406
	sal_system_table_t* ia64_sal_tableP;85,2459
	sal_entry_t* ia64_sal_entryP;86,2497
	uint64_t ia64_efi_acpi_table;88,2555
	uint64_t ia64_efi_acpi20_table;89,2609
	uint64_t mach_mem_start;91,2666
	uint64_t mach_mem_size;92,2732
	uint64_t kernstart;94,2788
	uint64_t kernend;95,2848
	uint64_t kernpstart;96,2867
	uint64_t kernpend;97,2928
#define ia64_sal_entry 102,2990
#define smp_processor_id(104,3041
xchg8(107,3094
#define xchg 114,3340
# define get_popcnt(118,3457
# define get_popcnt(120,3517
__ffs 135,3823
synch_clear_bit(145,3946
synch_set_bit(151,4039
synch_test_bit(157,4127
synch_test_and_set_bit(163,4228
#define synch_cmpxchg(169,4325
__synch_cmpxchg(176,4614
#define __cli(208,5479
#define __sti(216,5685
#define __save_flags(227,6025
#define __restore_flags(234,6219
#define safe_halt(246,6587
#define __save_and_cli(248,6619
#define local_irq_save(257,6872
#define local_irq_restore(258,6916
#define local_save_flags(259,6964
#define local_irq_disable(260,7008
#define local_irq_enable(261,7044
#define irqs_disabled(263,7080
#define barrier(267,7251
#define mb(269,7308
#define rmb(270,7331
#define wmb(271,7350
#define BUG(274,7371
#define PRINT_BV(277,7459
#define UL_CONST(285,7612
#define UL_TYPE(286,7634
#define UL_CONST(290,7691
#define UL_TYPE(291,7717

extras/mini-os/include/ia64/traps.h,127
#define _TRAPS_H_25,1252
#define pt_regs 32,1340
inline static void trap_init(37,1430
inline static void trap_fini(41,1519

extras/mini-os/include/ia64/privop.h,1680
#define _PRIVOP_H_11,180
#define IA64_PARAVIRTUALIZED15,228
#define XSI_BASE	19,347
#define XMAPPEDREGS_BASE	22,416
#define	XEN_HYPER_RFI	25,484
#define	XEN_HYPER_RSM_PSR_DT	26,529
#define	XEN_HYPER_SSM_PSR_DT	27,583
#define	XEN_HYPER_COVER	28,637
#define	XEN_HYPER_ITC_D	29,686
#define	XEN_HYPER_ITC_I	30,735
#define	XEN_HYPER_SSM_I	31,784
#define	XEN_HYPER_GET_IVR	32,833
#define	XEN_HYPER_GET_TPR	33,885
#define	XEN_HYPER_SET_TPR	34,937
#define	XEN_HYPER_EOI	35,989
#define	XEN_HYPER_SET_ITM	36,1034
#define	XEN_HYPER_THASH	37,1086
#define	XEN_HYPER_PTC_GA	38,1135
#define	XEN_HYPER_ITR_D	39,1185
#define	XEN_HYPER_GET_RR	40,1234
#define	XEN_HYPER_SET_RR	41,1284
#define	XEN_HYPER_SET_KR	42,1334
#define	XEN_HYPER_FC	43,1384
#define	XEN_HYPER_GET_CPUID	44,1427
#define	XEN_HYPER_GET_PMD	45,1483
#define	XEN_HYPER_GET_EFLAG	46,1535
#define	XEN_HYPER_SET_EFLAG	47,1591
#define	XEN_HYPER_RSM_BE	48,1647
#define	XEN_HYPER_GET_PSR	49,1697
#define XSI_IFS	51,1750
#define XSI_PRECOVER_IFS	52,1793
#define XSI_INCOMPL_REGFR	53,1852
#define XSI_IFA	54,1913
#define XSI_ISR	55,1956
#define XSI_IIM	56,1999
#define XSI_ITIR	57,2042
#define XSI_PSR_I_ADDR	58,2086
#define XSI_PSR_IC	59,2142
#define XSI_IPSR	60,2190
#define XSI_IIP	61,2234
#define XSI_BANK1_R16	62,2277
#define XSI_BANKNUM	63,2331
#define XSI_IHA	64,2381
#define	XEN_HYPER_SSM_I	68,2453
#define	XEN_HYPER_GET_IVR	69,2522
#define XEN_MAPPEDREGS 81,3139
#define XSI_PSR_I	82,3203
#define xen_get_virtual_psr_i(84,3265
#define xen_set_virtual_psr_i(86,3314
#define xen_get_virtual_psr_ic(88,3396
#define xen_set_virtual_psr_ic(90,3481
#define xen_get_virtual_pend(92,3588

extras/mini-os/include/ia64/arch_spinlock.h,218
#define _ARCH_SPINLOCK_H_26,1303
#define ARCH_SPIN_LOCK_UNLOCKED 30,1351
#define SPIN_LOCK_UNUSED	32,1390
#define SPIN_LOCK_USED	33,1417
_raw_spin_lock(37,1464
_raw_spin_unlock(47,1660
_raw_spin_trylock(54,1808

extras/mini-os/include/fcntl.h,1270
#define _I386_FCNTL_H2,22
#define O_ACCMODE	10,204
#define O_RDONLY	11,230
#define O_WRONLY	12,255
#define O_RDWR	13,280
#define O_CREAT	14,304
#define O_EXCL	15,345
#define O_NOCTTY	16,385
#define O_TRUNC	17,426
#define O_APPEND	18,467
#define O_NONBLOCK	19,492
#define O_NDELAY	20,519
#define O_SYNC	21,547
#define FASYNC	22,571
#define O_DIRECT	23,630
#define O_LARGEFILE	24,685
#define O_DIRECTORY	25,713
#define O_NOFOLLOW	26,767
#define O_NOATIME	27,819
#define F_DUPFD	29,847
#define F_GETFD	30,876
#define F_SETFD	31,919
#define F_GETFL	32,968
#define F_SETFL	33,1011
#define F_GETLK	34,1054
#define F_SETLK	35,1073
#define F_SETLKW	36,1092
#define F_SETOWN	38,1112
#define F_GETOWN	39,1151
#define F_SETSIG	40,1190
#define F_GETSIG	41,1230
#define F_GETLK64	43,1271
#define F_SETLK64	44,1322
#define F_SETLKW64	45,1343
#define FD_CLOEXEC	48,1390
#define F_RDLCK	51,1494
#define F_WRLCK	52,1513
#define F_UNLCK	53,1532
#define F_EXLCK	56,1597
#define F_SHLCK	57,1627
#define F_INPROGRESS	60,1675
#define LOCK_SH	63,1773
#define LOCK_EX	64,1810
#define LOCK_NB	65,1850
#define LOCK_UN	67,1929
#define LOCK_MAND	69,1967
#define LOCK_READ	70,2020
#define LOCK_WRITE	71,2091
#define LOCK_RW	72,2165
int open(96,2485

extras/mini-os/include/types.h,1416
#define _TYPES_H_21,733
typedef unsigned char       u_char;26,817
typedef unsigned int        u_int;27,853
typedef unsigned long       u_long;28,888
typedef long long           quad_t;31,947
typedef unsigned long long  u_quad_t;32,983
typedef struct { unsigned long pte_low,34,1022
typedef struct { unsigned long pte_low, pte_high;34,1022
typedef struct { unsigned long pte_low, pte_high; } pte_t;34,1022
typedef long                quad_t;37,1129
typedef unsigned long       u_quad_t;38,1165
typedef struct { unsigned long pte;40,1204
typedef struct { unsigned long pte; } pte_t;40,1204
#define __pte(44,1304
#define __pte(46,1346
typedef unsigned int        uintptr_t;55,1556
typedef int                 intptr_t;56,1595
typedef unsigned long       uintptr_t;58,1680
typedef long                intptr_t;59,1719
typedef unsigned char uint8_t;61,1793
typedef   signed char int8_t;62,1824
typedef unsigned short uint16_t;63,1854
typedef   signed short int16_t;64,1887
typedef unsigned int uint32_t;65,1919
typedef   signed int int32_t;66,1950
typedef   signed long long int64_t;68,1996
typedef unsigned long long uint64_t;69,2032
typedef   signed long int64_t;71,2116
typedef unsigned long uint64_t;72,2147
typedef uint64_t uintmax_t;74,2186
typedef  int64_t intmax_t;75,2214
typedef uint64_t off_t;76,2241
typedef intptr_t            ptrdiff_t;79,2273
typedef long ssize_t;83,2332

extras/mini-os/include/byteswap.h,145
#define _BYTESWAP_H_2,21
static inline uint16_t bswap_16(7,116
static inline uint32_t bswap_32(13,227
static inline uint64_t bswap_64(20,413

extras/mini-os/include/sys/time.h,222
#define _MINIOS_SYS_TIME_H_21,778
struct timespec 26,857
    time_t      tv_sec;27,875
    long        tv_nsec;28,899
struct timezone 31,928
struct timeval 34,950
	time_t		tv_sec;35,967
	suseconds_t	tv_usec;36,999

extras/mini-os/include/sys/lock.h,678
#define _MINIOS_SYS_LOCK_H_2,28
        int busy;12,206
        struct wait_queue_head wait;13,224
} _LOCK_T;14,261
#define __LOCK_INIT(16,273
#define __lock_init(23,564
#define __lock_acquire(24,614
#define __lock_release(25,670
#define __lock_try_acquire(26,726
#define __lock_close(27,790
    struct thread *owner;owner31,840
    int count;32,866
    struct wait_queue_head wait;33,881
} _LOCK_RECURSIVE_T;34,914
#define __LOCK_INIT_RECURSIVE(36,936
#define __lock_init_recursive(44,1351
#define __lock_acquire_recursive(45,1421
#define __lock_release_recursive(46,1497
#define __lock_try_acquire_recursive(47,1573
#define __lock_close_recursive(48,1657

extras/mini-os/include/posix/err.h,26
#define _POSIX_ERR_H2,21

extras/mini-os/include/posix/pthread.h,948
#define _POSIX_PTHREAD_H2,25
    void *ptr;ptr9,131
} *pthread_key_t;pthread_key_t10,146
static inline int pthread_key_create(11,164
static inline int pthread_setspecific(17,328
static inline void *pthread_getspecific(pthread_getspecific22,456
static inline int pthread_key_delete(26,540
typedef struct {} pthread_mutexattr_t;34,632
static inline int pthread_mutexattr_init(35,671
#define PTHREAD_MUTEX_NORMAL 36,754
#define PTHREAD_MUTEX_RECURSIVE 37,785
static inline int pthread_mutexattr_settype(38,819
static inline int pthread_mutexattr_destroy(39,915
typedef struct {} pthread_mutex_t;40,1001
#define PTHREAD_MUTEX_INITIALIZER 41,1036
static inline int pthread_mutex_init(42,1073
static inline int pthread_mutex_lock(43,1176
static inline int pthread_mutex_unlock(44,1251
    int done;49,1348
} pthread_once_t;50,1362
#define PTHREAD_ONCE_INIT 51,1380
static inline int pthread_once(53,1413
#define __thread62,1614

extras/mini-os/include/posix/syslog.h,586
#define _POSIX_SYSLOG_H2,24
#define LOG_PID 6,70
#define LOG_CONS 7,88
#define LOG_NDELAY 8,107
#define LOG_ODELAY 9,128
#define LOG_NOWAIT 10,149
#define LOG_KERN 12,171
#define LOG_USER 13,190
#define LOG_MAIL 14,209
#define LOG_NEWS 15,228
#define LOG_UUCP 16,247
#define LOG_DAEMON 17,266
#define LOG_AUTH 18,287
#define LOG_CRON 19,306
#define LOG_LPR 20,325
#define LOG_EMERG 23,364
#define LOG_ALERT 24,384
#define LOG_CRIT 25,404
#define LOG_ERR 26,423
#define LOG_WARNING 27,441
#define LOG_NOTICE 28,463
#define LOG_INFO 29,484
#define LOG_DEBUG 30,503

extras/mini-os/include/posix/limits.h,737
#define _POSIX_LIMITS_H2,24
#define CHAR_BIT 6,83
#define SCHAR_MAX 8,110
#define SCHAR_MIN 9,139
#define UCHAR_MAX 10,178
# define CHAR_MIN 13,233
# define CHAR_MAX 14,259
# define CHAR_MIN 16,299
# define CHAR_MAX 17,333
#define INT_MAX 20,375
#define INT_MIN 21,410
#define UINT_MAX 22,447
#define SHRT_MIN	24,483
#define SHRT_MAX 25,510
#define USHRT_MAX 26,541
# define LONG_MAX 29,618
# define ULONG_MAX 30,662
# define LONG_MAX 32,713
# define ULONG_MAX 33,749
#define LONG_MIN 35,793
#define LLONG_MAX 37,833
#define LLONG_MIN 38,878
#define ULLONG_MAX 39,919
#define LONG_LONG_MIN 41,966
#define LONG_LONG_MAX 42,1000
#define ULONG_LONG_MAX 43,1034
#define PATH_MAX 45,1070
#define PAGE_SIZE 46,1099

extras/mini-os/include/posix/unistd.h,29
#define _POSIX_UNISTD_H2,24

extras/mini-os/include/posix/stdlib.h,52
#define _POSIX_STDLIB_H2,24
#define realpath(6,75

extras/mini-os/include/posix/arpa/inet.h,33
#define	_POSIX_ARPA_INET_H_2,28

extras/mini-os/include/posix/netinet/in.h,30
#define _POSIX_SYS_IN_H_2,25

extras/mini-os/include/posix/netinet/tcp.h,31
#define _POSIX_SYS_TCP_H_2,26

extras/mini-os/include/posix/termios.h,1570
#define _POSIX_TERMIOS_H2,25
#define NCC 4,51
struct termios 6,67
    unsigned long c_iflag;7,84
    unsigned long c_oflag;8,111
    unsigned long c_lflag;9,138
    unsigned long c_cflag;10,165
    unsigned char c_cc[c_cc11,192
#define TIOCM_DTR	15,243
#define TIOCM_RTS	16,267
#define TIOCM_CTS	17,291
#define TIOCM_CAR	18,315
#define TIOCM_RI	19,339
#define TIOCM_DSR	20,362
#define IGNBRK	23,401
#define BRKINT	24,427
#define IGNPAR	25,453
#define PARMRK	26,479
#define INPCK	27,505
#define ISTRIP	28,530
#define INLCR	29,556
#define IGNCR	30,581
#define ICRNL	31,606
#define IUCLC	32,631
#define IXON	33,656
#define IXANY	34,680
#define IXOFF	35,705
#define IMAXBEL	36,730
#define IUTF8	37,757
#define OPOST	40,797
#define OLCUC	41,822
#define ONLCR	42,847
#define OCRNL	43,872
#define ONOCR	44,897
#define ONLRET	45,922
#define OFILL	46,948
#define OFDEL	47,973
#define ISIG	50,1013
#define ICANON	51,1037
#define XCASE	52,1063
#define ECHO	53,1088
#define ECHOE	54,1112
#define ECHOK	55,1137
#define ECHONL	56,1162
#define NOFLSH	57,1188
#define TOSTOP	58,1214
#define ECHOCTL	59,1240
#define ECHOPRT	60,1267
#define ECHOKE	61,1294
#define FLUSHO	62,1320
#define PENDIN	63,1346
#define IEXTEN	64,1372
#define CSIZE	67,1413
#define CS8	68,1438
#define CSTOPB	69,1461
#define CREAD	70,1487
#define PARENB	71,1512
#define PARODD	72,1538
#define HUPCL	73,1564
#define CLOCAL	74,1589
#define VTIME	77,1627
#define VMIN	78,1643
#define TCSANOW	80,1659
#define TCSADRAIN	81,1678
#define TCSAFLUSH	82,1698

extras/mini-os/include/posix/net/if.h,177
#define _NET_IF_H_66,3363
#define IF_NAMESIZE 72,3524
struct if_nameindex 74,3548
        unsigned int    if_index;75,3570
        char            *if_name;if_name76,3626

extras/mini-os/include/posix/time.h,57
#define _POSIX_TIME_H2,22
#define CLOCK_MONOTONIC	5,67

extras/mini-os/include/posix/strings.h,50
#define _POSIX_STRINGS_H2,25
#define bzero(6,72

extras/mini-os/include/posix/fcntl.h,116
#define _POSIX_FCNTL_H2,23
#define F_ULOCK 6,72
#define F_LOCK 7,90
#define F_TLOCK 8,108
#define F_TEST 9,126

extras/mini-os/include/posix/signal.h,29
#define _POSIX_SIGNAL_H2,24

extras/mini-os/include/posix/sys/poll.h,421
#define	_POSIX_SYS_POLL_H_34,1756
typedef	unsigned int	nfds_t;40,1863
struct pollfd 45,1952
	int	fd;46,1968
	short	events;47,2014
	short	revents;48,2064
#define	POLLIN	61,2605
#define	POLLPRI	62,2663
#define	POLLOUT	63,2719
#define	POLLRDNORM	64,2779
#define	POLLWRNORM	65,2839
#define	POLLRDBAND	66,2903
#define	POLLWRBAND	67,2961
#define	POLLERR	73,3117
#define	POLLHUP	74,3173
#define	POLLNVAL	75,3234

extras/mini-os/include/posix/sys/select.h,29
#define _POSIX_SELECT_H2,24

extras/mini-os/include/posix/sys/mman.h,306
#define _POSIX_SYS_MMAN_H2,26
#define PROT_READ	4,53
#define PROT_WRITE	5,75
#define PROT_EXEC	6,98
#define MAP_SHARED	8,121
#define MAP_PRIVATE	9,145
#define MAP_ANON	10,170
#define MAP_LOCKED	13,232
#define MAP_FAILED	15,256
void *mmap(mmap17,287
#define munlock(19,424
#define mlock(20,482

extras/mini-os/include/posix/sys/stat.h,47
#define _POSIX_SYS_STAT_H2,26
int fstat(5,80

extras/mini-os/include/posix/sys/ioctl.h,128
#define _POSIX_SYS_IOCTL_H2,27
#define _IOC_NONE 6,93
#define _IOC_WRITE 7,113
#define _IOC_READ 8,134
#define _IOC(10,155

extras/mini-os/include/posix/sys/socket.h,34
#define _POSIX_SYS_SOCKET_H_2,29

extras/mini-os/include/posix/dirent.h,332
#define _POSIX_DIRENT_H2,24
struct dirent 6,70
        char *d_name;d_name7,86
        struct dirent dirent;11,129
        char *name;name12,159
        int32_t offset;13,179
        char **entries;entries14,203
        int32_t curentry;15,227
        int32_t nbentries;16,253
        int has_more;17,280
} DIR;18,302

extras/mini-os/include/posix/netdb.h,108
#define _POSIX_NETDB_H_2,24
struct hostent 4,49
    char *h_addr;h_addr5,66
#define gethostbyname(7,87

extras/mini-os/include/gntmap.h,122
#define __GNTMAP_H__2,21
struct gntmap 10,207
    int nentries;11,223
    struct gntmap_entry *entries;entries12,241

extras/mini-os/include/ctype.h,660
#define _CTYPE_H2,17
#define _U	12,177
#define _L	13,205
#define _D	14,233
#define _C	15,261
#define _P	16,289
#define _S	17,317
#define _X	18,366
#define _SP	19,398
#define __ismask(24,473
#define isalnum(26,528
#define isalpha(27,579
#define iscntrl(28,627
#define isdigit(29,672
#define isgraph(30,717
#define islower(31,771
#define isprint(32,816
#define ispunct(33,874
#define isspace(34,919
#define isupper(35,964
#define isxdigit(36,1009
#define isascii(38,1059
#define toascii(39,1107
static inline unsigned char __tolower(41,1155
static inline unsigned char __toupper(48,1259
#define tolower(55,1363
#define toupper(56,1395

extras/mini-os/main.c,228
int main(28,570
void _init(35,674
void _fini(39,696
static void call_main(44,762
#define PARSE_ARGS(101,2063
#define PARSE_ARGS_COUNT(133,2636
#define PARSE_ARGS_STORE(134,2699
void _exit(165,3404
int app_main(186,3902

extras/mini-os/sched.c,557
#define DEBUG(51,1991
#define DEBUG(54,2095
struct thread *idle_thread idle_thread57,2141
static int threads_started;59,2210
struct thread *main_thread;main_thread61,2239
void inline print_runqueue(63,2268
void schedule(75,2590
struct thread* create_thread(143,4933
static struct _reent callback_reent;169,5716
struct _reent *__getreent(__getreent170,5753
void exit_thread(204,6355
void block(224,6899
void msleep(230,6997
void wake(238,7178
void idle_thread_fn(244,7273
void th_f1(255,7426
void th_f2(280,7966
void init_sched(291,8102

extras/mini-os/fbfront.c,1237
struct kbdfront_dev 25,457
    domid_t dom;26,479
    struct xenkbd_page *page;page28,497
    evtchn_port_t evtchn;29,527
    char *nodename;nodename31,554
    char *backend;backend32,574
    xenbus_event_queue events;34,594
    int fd;37,643
void kbdfront_handler(41,666
static void free_kbdfront(53,907
struct kbdfront_dev *init_kbdfront(init_kbdfront67,1120
int kbdfront_receive(199,4753
void shutdown_kbdfront(236,5665
int kbdfront_open(295,7784
struct fbfront_dev 315,8039
    domid_t dom;316,8060
    struct xenfb_page *page;page318,8078
    evtchn_port_t evtchn;319,8107
    char *nodename;nodename321,8134
    char *backend;backend322,8154
    int request_update;323,8173
    int width;325,8198
    int height;326,8213
    int depth;327,8229
    int stride;328,8244
    int mem_length;329,8260
    int offset;330,8280
    xenbus_event_queue events;332,8297
    int fd;335,8346
void fbfront_handler(339,8369
static void free_fbfront(351,8607
int fbfront_receive(365,8818
struct fbfront_dev *init_fbfront(init_fbfront401,9724
static void fbfront_out_event(563,14404
void fbfront_update(582,14954
void fbfront_resize(614,15618
void shutdown_fbfront(627,16065
int fbfront_open(689,18253

extras/mini-os/pcifront.c,853
#define PCI_DEVFN(18,394
static struct pcifront_dev *pcidev;pcidev21,509
struct pcifront_dev 23,546
    domid_t dom;24,568
    struct xen_pci_sharedinfo *info;info26,586
    grant_ref_t info_ref;27,623
    evtchn_port_t evtchn;28,649
    char *nodename;nodename30,676
    char *backend;backend31,696
    xenbus_event_queue events;33,716
void pcifront_handler(36,751
static void free_pcifront(41,862
void pcifront_watches(58,1149
struct pcifront_dev *init_pcifront(init_pcifront140,4821
void pcifront_scan(279,8496
void shutdown_pcifront(328,10060
int pcifront_physical_to_virtual 384,12057
void pcifront_op(437,13747
int pcifront_conf_read(454,14214
int pcifront_conf_write(484,14934
int pcifront_enable_msi(511,15622
int pcifront_disable_msi(536,16227
int pcifront_enable_msix(558,16782
int pcifront_disable_msix(593,17645

extras/mini-os/hypervisor.c,233
#define active_evtchns(33,1459
int in_callback;37,1590
void do_hypervisor_callback(39,1608
void force_evtchn_callback(74,2516
inline void mask_evtchn(91,2919
inline void unmask_evtchn(97,3055
inline void clear_evtchn(118,3759

extras/mini-os/daytime.c,82
static char message[message13,233
void run_server(15,259
int app_main(63,1473

extras/mini-os/lwip-arch.c,702
void sys_init(17,321
sys_sem_t sys_sem_new(23,459
void sys_sem_free(32,664
void sys_sem_signal(38,745
uint32_t sys_arch_sem_wait(53,1367
sys_mbox_t sys_mbox_new(87,2201
void sys_mbox_free(106,2788
static void do_mbox_post(115,3002
void sys_mbox_post(129,3516
err_t sys_mbox_trypost(138,3716
static void do_mbox_fetch(152,4027
uint32_t sys_arch_mbox_fetch(177,5094
uint32_t sys_arch_mbox_tryfetch(202,5920
struct sys_timeouts *sys_arch_timeouts(sys_arch_timeouts223,6671
static struct thread *lwip_thread;lwip_thread234,7062
sys_thread_t sys_thread_new(235,7097
sys_prot_t sys_arch_protect(257,8168
void sys_arch_unprotect(268,8541
void lwip_printk(274,8650
void lwip_die(284,8846

extras/mini-os/netfront.c,1560
#define NETIF_SELECT_RX 23,553
#define NET_TX_RING_SIZE 28,599
#define NET_RX_RING_SIZE 29,675
#define GRANT_INVALID_REF 30,751
struct net_buffer 33,781
    void* page;34,801
    grant_ref_t gref;35,817
struct netfront_dev 38,843
    domid_t dom;39,865
    unsigned short tx_freelist[tx_freelist41,883
    struct semaphore tx_sem;42,937
    struct net_buffer rx_buffers[rx_buffers44,967
    struct net_buffer tx_buffers[tx_buffers45,1019
    struct netif_tx_front_ring tx;47,1072
    struct netif_rx_front_ring rx;48,1107
    grant_ref_t tx_ring_ref;49,1142
    grant_ref_t rx_ring_ref;50,1171
    evtchn_port_t evtchn;51,1200
    char *nodename;nodename53,1227
    char *backend;backend54,1247
    char *mac;mac55,1266
    xenbus_event_queue events;57,1282
    int fd;60,1331
    unsigned char *data;data61,1343
    size_t len;62,1368
    size_t rlen;63,1384
    void (*netif_rx)netif_rx66,1409
static inline void add_id_to_freelist(71,1514
static inline unsigned short get_id_from_freelist(77,1658
__attribute__((weak)) void netif_rx(84,1825
__attribute__((weak)) void net_app_main(89,1945
static inline int xennet_rxidx(91,2016
void network_rx(96,2107
void network_tx_buf_gc(181,4161
void netfront_handler(232,5679
void netfront_select_handler(246,5938
static void free_netfront(262,6270
struct netfront_dev *init_netfront(init_netfront295,6925
int netfront_tap_open(488,12236
void shutdown_netfront(504,12603
void init_rx_buffers(566,14770
void netfront_xmit(597,15528
ssize_t netfront_receive(646,16552

extras/mini-os/blkfront.c,1003
#define strtoul 21,454
#define BLK_RING_SIZE 34,705
#define GRANT_INVALID_REF 35,775
struct blk_buffer 38,805
    void* page;39,825
    grant_ref_t gref;40,841
struct blkfront_dev 43,867
    domid_t dom;44,889
    struct blkif_front_ring ring;46,907
    grant_ref_t ring_ref;47,941
    evtchn_port_t evtchn;48,967
    blkif_vdev_t handle;49,993
    char *nodename;nodename51,1019
    char *backend;backend52,1039
    struct blkfront_info info;53,1058
    xenbus_event_queue events;55,1090
    int fd;58,1139
void blkfront_handler(62,1162
static void free_blkfront(74,1403
struct blkfront_dev *init_blkfront(init_blkfront89,1660
void shutdown_blkfront(250,6200
static void blkfront_wait_slot(309,8217
void blkfront_aio(332,8711
static void blkfront_aio_cb(391,10737
void blkfront_io(396,10840
static void blkfront_push_operation(421,11342
void blkfront_aio_push_operation(442,11947
void blkfront_sync(448,12134
int blkfront_aio_poll(477,12853
int blkfront_open(547,14568

tools/libxl/libxlu_cfg_y.c,578
#define YYBISON 47,2141
#define YYBISON_VERSION 50,2182
#define YYSKELETON_NAME 53,2235
#define YYPURE 56,2290
#define YYLSP_NEEDED 59,2332
#define yyparse 62,2407
#define yylex 63,2440
#define yyerror 64,2471
#define yylval 65,2504
#define yychar 66,2536
#define yydebug 67,2568
#define yynerrs 68,2601
#define yylloc 69,2634
# define YYTOKENTYPE73,2701
   enum yytokentype 76,2825
     IDENT 77,2847
     STRING 78,2865
     NUMBER 79,2884
     NEWLINE 80,2903
#define IDENT 84,2950
#define STRING 85,2968
#define NUMBER 86,2987
#define NEWLINE 87,3006

libxlu_cfg_y.y,257
#define YYLEX_PARAM 4,
# define YYDEBUG 11,
# undef YYERROR_VERBOSE16,
# define YYERROR_VERBOSE 17,
# define YYERROR_VERBOSE 19,
# define YYTOKEN_TABLE 24,
typedef union YYSTYPE28,
  char *string;string10,
  XLU_ConfigSetting *setting;setting11,

libxlu_cfg_y.c,3677
	YYSTYPE;127,
# define yystype 128,
# define YYSTYPE_IS_DECLARED 129,
# define YYSTYPE_IS_TRIVIAL 130,
typedef struct YYLTYPE134,
  int first_line;136,
  int first_column;137,
  int last_line;138,
  int last_column;139,
} YYLTYPE;140,
# define yyltype 141,
# define YYLTYPE_IS_DECLARED 142,
# define YYLTYPE_IS_TRIVIAL 143,
# undef short154,
typedef YYTYPE_UINT8 yytype_uint8;158,
typedef unsigned char yytype_uint8;160,
typedef YYTYPE_INT8 yytype_int8;164,
typedef signed char yytype_int8;167,
typedef short int yytype_int8;169,
typedef YYTYPE_UINT16 yytype_uint16;173,
typedef unsigned short int yytype_uint16;175,
typedef YYTYPE_INT16 yytype_int16;179,
typedef short int yytype_int16;181,
#  define YYSIZE_T 186,
#  define YYSIZE_T 188,
#  define YYSIZE_T 192,
#  define YYSIZE_T 194,
#define YYSIZE_MAXIMUM 198,
#   define YY_(204,
#  define YY_(208,
# define YYUSE(214,
# define YYUSE(216,
# define YYID(221,
YYID 226,
#    define YYSTACK_ALLOC 244,
#    define YYSTACK_ALLOC 248,
#    define alloca 251,
#    define YYSTACK_ALLOC 253,
#      define _STDLIB_H 258,
#  define YYSTACK_FREE(267,
#   define YYSTACK_ALLOC_MAXIMUM 273,
#  define YYSTACK_ALLOC 276,
#  define YYSTACK_FREE 277,
#   define YYSTACK_ALLOC_MAXIMUM 279,
#    define _STDLIB_H 286,
#   define YYMALLOC 290,
#   define YYFREE 297,
union yyalloc313,
  yytype_int16 yyss;315,
  YYSTYPE yyvs;316,
    YYLTYPE yyls;317,
# define YYSTACK_GAP_MAXIMUM 321,
# define YYSTACK_BYTES(325,
#   define YYCOPY(333,
#   define YYCOPY(336,
# define YYSTACK_RELOCATE(352,
#define YYFINAL 366,
#define YYLAST 368,
#define YYNTOKENS 371,
#define YYNNTS 373,
#define YYNRULES 375,
#define YYNSTATES 377,
#define YYUNDEFTOK 380,
#define YYMAXUTOK 381,
#define YYTRANSLATE(383,
static const yytype_uint8 yytranslate[yytranslate387,
static const yytype_uint8 yyprhs[yyprhs421,
static const yytype_int8 yyrhs[yyrhs429,
static const yytype_uint8 yyrline[yyrline440,
static const char *const yytname[yytname451,
static const yytype_uint16 yytoknum[yytoknum462,
static const yytype_uint8 yyr1[yyr1470,
static const yytype_uint8 yyr2[yyr2478,
static const yytype_uint8 yydefact[yydefact488,
static const yytype_int8 yydefgoto[yydefgoto496,
#define YYPACT_NINF 503,
static const yytype_int8 yypact[yypact504,
static const yytype_int8 yypgoto[yypgoto512,
#define YYTABLE_NINF 521,
static const yytype_uint8 yytable[yytable522,
static const yytype_uint8 yycheck[yycheck529,
static const yytype_uint8 yystos[yystos538,
#define yyerrok	545,
#define yyclearin	546,
#define YYEMPTY	547,
#define YYEOF	548,
#define YYACCEPT	550,
#define YYABORT	551,
#define YYERROR	552,
#define YYFAIL	559,
#define YYRECOVERING(561,
#define YYBACKUP(563,
#define YYTERROR	581,
#define YYERRCODE	582,
#define YYRHSLOC(589,
# define YYLLOC_DEFAULT(591,
#  define YY_LOCATION_PRINT(617,
#  define YY_LOCATION_PRINT(622,
# define YYLEX 630,
# define YYLEX 632,
#  define YYFPRINTF 640,
# define YYDPRINTF(643,
# define YY_SYMBOL_PRINT(649,
yy_symbol_value_print 669,
yy_symbol_print 705,
yy_stack_print 735,
# define YY_STACK_PRINT(749,
yy_reduce_print 763,
# define YY_REDUCE_PRINT(789,
int yydebug;797,
# define YYDPRINTF(799,
# define YY_SYMBOL_PRINT(800,
# define YY_STACK_PRINT(801,
# define YY_REDUCE_PRINT(802,
# define YYINITDEPTH 808,
# define YYMAXDEPTH 819,
#   define yystrlen 828,
yystrlen 834,
#   define yystpcpy 851,
yystpcpy 858,
yytnamerr 886,
yysyntax_error 933,
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM 946,
yydestruct 1043,
yyparse 1135,
#define YYPOPSTACK(1203,
#  undef YYSTACK_RELOCATE1297,

libxlu_cfg_l.c,6565
#define  YY_INT_ALIGNED 5,
#define FLEX_SCANNER9,
#define YY_FLEX_MAJOR_VERSION 10,
#define YY_FLEX_MINOR_VERSION 11,
#define YY_FLEX_SUBMINOR_VERSION 12,
#define FLEX_BETA14,
#define FLEXINT_H30,
#define __STDC_LIMIT_MACROS 40,
typedef int8_t flex_int8_t;44,
typedef uint8_t flex_uint8_t;45,
typedef int16_t flex_int16_t;46,
typedef uint16_t flex_uint16_t;47,
typedef int32_t flex_int32_t;48,
typedef uint32_t flex_uint32_t;49,
typedef signed char flex_int8_t;51,
typedef short int flex_int16_t;52,
typedef int flex_int32_t;53,
typedef unsigned char flex_uint8_t;54,
typedef unsigned short int flex_uint16_t;55,
typedef unsigned int flex_uint32_t;56,
#define INT8_MIN 61,
#define INT16_MIN 64,
#define INT32_MIN 67,
#define INT8_MAX 70,
#define INT16_MAX 73,
#define INT32_MAX 76,
#define UINT8_MAX 79,
#define UINT16_MAX 82,
#define UINT32_MAX 85,
#define YY_USE_CONST93,
#define YY_USE_CONST100,
#define yyconst 106,
#define yyconst108,
#define YY_NULL 112,
#define YY_SC_TO_UI(119,
#define YY_TYPEDEF_YY_SCANNER_T123,
typedef void* yyscan_t;124,
#define yyin 129,
#define yyout 130,
#define yyextra 131,
#define yyleng 132,
#define yytext 133,
#define yylineno 134,
#define yycolumn 135,
#define yy_flex_debug 136,
#define BEGIN 142,
#define YY_START 148,
#define YYSTATE 149,
#define YY_STATE_EOF(152,
#define YY_NEW_FILE 155,
#define YY_END_OF_BUFFER_CHAR 157,
#define YY_BUF_SIZE 161,
#define YY_STATE_BUF_SIZE 166,
#define YY_TYPEDEF_YY_BUFFER_STATE169,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE170,
#define EOB_ACT_CONTINUE_SCAN 173,
#define EOB_ACT_END_OF_FILE 174,
#define EOB_ACT_LAST_MATCH 175,
    #define  YY_LESS_LINENO(184,
#define yyless(193,
#define unput(206,
#define YY_TYPEDEF_YY_SIZE_T209,
typedef size_t yy_size_t;210,
#define YY_STRUCT_YY_BUFFER_STATE214,
struct yy_buffer_state215,
	FILE *yy_input_file;yy_input_file217,
	char *yy_ch_buf;yy_ch_buf219,
	char *yy_buf_pos;yy_buf_pos220,
	yy_size_t yy_buf_size;225,
	int yy_n_chars;230,
	int yy_is_our_buffer;236,
	int yy_is_interactive;243,
	int yy_at_bol;249,
    int yy_bs_lineno;251,
    int yy_bs_column;252,
	int yy_fill_buffer;257,
	int yy_buffer_status;259,
#define YY_BUFFER_NEW 261,
#define YY_BUFFER_NORMAL 262,
#define YY_BUFFER_EOF_PENDING 273,
#define YY_CURRENT_BUFFER 284,
#define YY_CURRENT_BUFFER_LVALUE 291,
#define YY_FLUSH_BUFFER 305,
#define yy_new_buffer 315,
#define yy_set_interactive(317,
#define yy_set_bol(327,
#define YY_AT_BOL(337,
#define xlu__cfg_yywrap(339,
#define YY_SKIP_YYWRAP340,
typedef unsigned char YY_CHAR;342,
typedef int yy_state_type;344,
#define yytext_ptr 346,
#define YY_DO_BEFORE_ACTION 356,
#define YY_NUM_RULES 364,
#define YY_END_OF_BUFFER 365,
struct yy_trans_info368,
	flex_int32_t yy_verify;370,
	flex_int32_t yy_nxt;371,
static yyconst flex_int16_t yy_accept[yy_accept373,
static yyconst flex_int32_t yy_ec[yy_ec381,
static yyconst flex_int32_t yy_meta[yy_meta413,
static yyconst flex_int16_t yy_base[yy_base419,
static yyconst flex_int16_t yy_def[yy_def427,
static yyconst flex_int16_t yy_nxt[yy_nxt435,
static yyconst flex_int16_t yy_chk[yy_chk446,
static yyconst flex_int32_t yy_rule_can_match_eol[yy_rule_can_match_eol458,
#define REJECT 465,
#define yymore(466,
#define YY_MORE_ADJ 467,
#define YY_RESTORE_YY_MORE_OFFSET468,
#define INITIAL 492,
#define lexerr 493,
#define YY_EXTRA_TYPE 504,
struct yyguts_t508,
    YY_EXTRA_TYPE yyextra_r;512,
    FILE *yyin_r,yyin_r515,
    FILE *yyin_r, *yyout_r;yyout_r515,
    size_t yy_buffer_stack_top;516,
    size_t yy_buffer_stack_max;517,
    YY_BUFFER_STATE * yy_buffer_stack;518,
    char yy_hold_char;519,
    int yy_n_chars;520,
    int yyleng_r;521,
    char *yy_c_buf_p;yy_c_buf_p522,
    int yy_init;523,
    int yy_start;524,
    int yy_did_buffer_switch_on_eof;525,
    int yy_start_stack_ptr;526,
    int yy_start_stack_depth;527,
    int *yy_start_stack;yy_start_stack528,
    yy_state_type yy_last_accepting_state;529,
    char* yy_last_accepting_cpos;530,
    int yylineno_r;532,
    int yy_flex_debug_r;533,
    char *yytext_r;yytext_r535,
    int yy_more_flag;536,
    int yy_more_len;537,
    YYSTYPE * yylval_r;539,
    YYLTYPE * yylloc_r;541,
    #    define yylval 549,
    #    define yylloc 551,
#define YY_READ_BUF_SIZE 626,
#define ECHO 634,
#define YY_INPUT(641,
#define yyterminate(678,
#define YY_START_STACK_INCR 683,
#define YY_FATAL_ERROR(688,
#define YY_DECL_IS_OURS 697,
#define YY_DECL 702,
#define YY_USER_ACTION710,
#define YY_BREAK 715,
#define YY_RULE_SETUP 718,
static int yy_get_next_buffer 1075,
    static yy_state_type yy_get_previous_state 1210,
    static yy_state_type yy_try_NUL_trans 1243,
    static int yyinput 1269,
    void xlu__cfg_yyrestart 1354,
    void xlu__cfg_yy_switch_to_buffer 1372,
static void xlu__cfg_yy_load_buffer_state 1404,
    YY_BUFFER_STATE xlu__cfg_yy_create_buffer 1419,
    void xlu__cfg_yy_delete_buffer 1447,
    static void xlu__cfg_yy_init_buffer 1471,
    void xlu__cfg_yy_flush_buffer 1500,
void xlu__cfg_yypush_buffer_state 1530,
void xlu__cfg_yypop_buffer_state 1561,
static void xlu__cfg_yyensure_buffer_stack 1581,
YY_BUFFER_STATE xlu__cfg_yy_scan_buffer 1631,
YY_BUFFER_STATE xlu__cfg_yy_scan_string 1668,
YY_BUFFER_STATE xlu__cfg_yy_scan_bytes 1681,
#define YY_EXIT_FAILURE 1712,
static void yy_fatal_error 1715,
#undef yyless1723,
#define yyless(1724,
YY_EXTRA_TYPE xlu__cfg_yyget_extra 1743,
int xlu__cfg_yyget_lineno 1752,
int xlu__cfg_yyget_column 1765,
FILE *xlu__cfg_yyget_in xlu__cfg_yyget_in1778,
FILE *xlu__cfg_yyget_out xlu__cfg_yyget_out1787,
int xlu__cfg_yyget_leng 1796,
char *xlu__cfg_yyget_text xlu__cfg_yyget_text1806,
void xlu__cfg_yyset_extra 1816,
void xlu__cfg_yyset_lineno 1826,
void xlu__cfg_yyset_column 1841,
void xlu__cfg_yyset_in 1858,
void xlu__cfg_yyset_out 1864,
int xlu__cfg_yyget_debug 1870,
void xlu__cfg_yyset_debug 1876,
YYSTYPE * xlu__cfg_yyget_lval 1884,
void xlu__cfg_yyset_lval 1890,
YYLTYPE *xlu__cfg_yyget_lloc xlu__cfg_yyget_lloc1896,
void xlu__cfg_yyset_lloc 1902,
int xlu__cfg_yylex_init(1915,
int xlu__cfg_yylex_init_extra(1944,
static int yy_init_globals 1972,
int xlu__cfg_yylex_destroy 2006,
static void yy_flex_strncpy 2040,
static int yy_flex_strlen 2049,
void *xlu__cfg_yyalloc xlu__cfg_yyalloc2059,
void *xlu__cfg_yyrealloc xlu__cfg_yyrealloc2064,
void xlu__cfg_yyfree 2076,
#define YYTABLES_NAME 2081,

libxlu_cfg_l.l,55
#define ctx 6,
#define YY_NO_INPUT7,
#define GOT(9,

tools/libxl/libxlu_cfg_y.h,238
# define YYTOKENTYPE38,1653
   enum yytokentype 41,1777
     IDENT 42,1799
     STRING 43,1817
     NUMBER 44,1836
     NEWLINE 45,1855
#define IDENT 49,1902
#define STRING 50,1920
#define NUMBER 51,1939
#define NEWLINE 52,1958

libxlu_cfg_y.y,95
typedef union YYSTYPE58,
  char *string;string10,
  XLU_ConfigSetting *setting;setting11,

libxlu_cfg_y.h,324
	YYSTYPE;66,
# define yystype 67,
# define YYSTYPE_IS_DECLARED 68,
# define YYSTYPE_IS_TRIVIAL 69,
typedef struct YYLTYPE75,
  int first_line;77,
  int first_column;78,
  int last_line;79,
  int last_column;80,
} YYLTYPE;81,
# define yyltype 82,
# define YYLTYPE_IS_DECLARED 83,
# define YYLTYPE_IS_TRIVIAL 84,

tools/libxl/libxlu_cfg_l.h,69
#define xlu__cfg_yyHEADER_H 2,28
#define xlu__cfg_yyIN_HEADER 3,58

libxlu_cfg_l.h,2347
#define  YY_INT_ALIGNED 9,
#define FLEX_SCANNER13,
#define YY_FLEX_MAJOR_VERSION 14,
#define YY_FLEX_MINOR_VERSION 15,
#define YY_FLEX_SUBMINOR_VERSION 16,
#define FLEX_BETA18,
#define FLEXINT_H34,
#define __STDC_LIMIT_MACROS 44,
typedef int8_t flex_int8_t;48,
typedef uint8_t flex_uint8_t;49,
typedef int16_t flex_int16_t;50,
typedef uint16_t flex_uint16_t;51,
typedef int32_t flex_int32_t;52,
typedef uint32_t flex_uint32_t;53,
typedef signed char flex_int8_t;55,
typedef short int flex_int16_t;56,
typedef int flex_int32_t;57,
typedef unsigned char flex_uint8_t;58,
typedef unsigned short int flex_uint16_t;59,
typedef unsigned int flex_uint32_t;60,
#define INT8_MIN 65,
#define INT16_MIN 68,
#define INT32_MIN 71,
#define INT8_MAX 74,
#define INT16_MAX 77,
#define INT32_MAX 80,
#define UINT8_MAX 83,
#define UINT16_MAX 86,
#define UINT32_MAX 89,
#define YY_USE_CONST97,
#define YY_USE_CONST104,
#define yyconst 110,
#define yyconst112,
#define YY_TYPEDEF_YY_SCANNER_T117,
typedef void* yyscan_t;118,
#define yyin 123,
#define yyout 124,
#define yyextra 125,
#define yyleng 126,
#define yytext 127,
#define yylineno 128,
#define yycolumn 129,
#define yy_flex_debug 130,
#define YY_BUF_SIZE 134,
#define YY_TYPEDEF_YY_BUFFER_STATE138,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE139,
#define YY_TYPEDEF_YY_SIZE_T143,
typedef size_t yy_size_t;144,
#define YY_STRUCT_YY_BUFFER_STATE148,
struct yy_buffer_state149,
	FILE *yy_input_file;yy_input_file151,
	char *yy_ch_buf;yy_ch_buf153,
	char *yy_buf_pos;yy_buf_pos154,
	yy_size_t yy_buf_size;159,
	int yy_n_chars;164,
	int yy_is_our_buffer;170,
	int yy_is_interactive;177,
	int yy_at_bol;183,
    int yy_bs_lineno;185,
    int yy_bs_column;186,
	int yy_fill_buffer;191,
	int yy_buffer_status;193,
#define xlu__cfg_yywrap(214,
#define YY_SKIP_YYWRAP215,
#define yytext_ptr 217,
#define INITIAL 220,
#define lexerr 221,
#define YY_EXTRA_TYPE 234,
#define YY_READ_BUF_SIZE 304,
#define YY_START_STACK_INCR 309,
#define YY_DECL_IS_OURS 316,
#define YY_DECL 321,
#undef YY_NEW_FILE327,
#undef YY_FLUSH_BUFFER328,
#undef yy_set_bol329,
#undef yy_new_buffer330,
#undef yy_set_interactive331,
#undef YY_DO_BEFORE_ACTION332,
#undef YY_DECL_IS_OURS335,
#undef YY_DECL336,
#undef xlu__cfg_yyIN_HEADER342,

extras/mini-os/include/netfront.h,0

extras/mini-os/include/pcifront.h,0

stubdom/grub/mini-os.h,0

libxlu_cfg_l.l,0

tools/libxl/libxlu_cfg_l.c,0

tools/libxc/xc_elf.h,0

tools/blktap/drivers/blk.h,0

tools/blktap/drivers/blktapctrl.h,0

tools/tests/x86_emulate.c,0

tools/libaio/src/io_destroy.c,0

tools/libaio/src/raw_syscall.c,0

tools/libaio/src/io_submit.c,0

tools/libaio/src/vsys_def.h,0

tools/libaio/src/io_setup.c,0

tools/console/daemon/main.c,0

tools/console/daemon/io.h,0

xen/xsm/flask/include/common_perm_to_string.h,0

xen/xsm/flask/include/av_inherit.h,0

xen/common/preempt.c,0

xen/include/asm-x86/mem_paging.h,0

xen/include/public/arch-x86_32.h,0

xen/include/public/arch-x86_64.h,0

xen/include/asm-ia64/slab.h,0

xen/include/asm-ia64/linux-null/asm/cyclone.h,0

xen/include/asm-ia64/linux-null/asm/sn/geo.h,0

xen/include/asm-ia64/linux-null/asm/sn/sn_cpuid.h,0

xen/include/asm-ia64/linux-null/asm/sn/nodepda.h,0

xen/include/asm-ia64/linux-null/asm/sn/arch.h,0

xen/include/asm-ia64/linux-null/asm/signal.h,0

xen/include/asm-ia64/linux-null/asm/module.h,0

xen/include/asm-ia64/linux-null/asm/mman.h,0

xen/include/asm-ia64/linux-null/asm/scatterlist.h,0

xen/include/asm-ia64/linux-null/asm/serial.h,0

xen/include/asm-ia64/linux-null/asm/pdb.h,0

xen/include/asm-ia64/linux-null/asm/ia32.h,0

xen/include/asm-ia64/linux-null/asm/mmzone.h,0

xen/include/asm-ia64/linux-null/asm/ptrace_offsets.h,0

xen/include/asm-ia64/linux-null/asm/semaphore.h,0

xen/include/asm-ia64/linux-null/asm/ustack.h,0

xen/include/asm-ia64/linux-null/asm/desc.h,0

xen/include/asm-ia64/linux-null/asm/xen/hypervisor.h,0

xen/include/asm-ia64/linux-null/linux/device.h,0

xen/include/asm-ia64/linux-null/linux/vmalloc.h,0

xen/include/asm-ia64/linux-null/linux/page-flags.h,0

xen/include/asm-ia64/linux-null/linux/sysctl.h,0

xen/include/asm-ia64/linux-null/linux/kallsyms.h,0

xen/include/asm-ia64/linux-null/linux/rcupdate.h,0

xen/include/asm-ia64/linux-null/linux/seq_file.h,0

xen/include/asm-ia64/linux-null/linux/dmapool.h,0

xen/include/asm-ia64/linux-null/linux/signal.h,0

xen/include/asm-ia64/linux-null/linux/module.h,0

xen/include/asm-ia64/linux-null/linux/pm.h,0

xen/include/asm-ia64/linux-null/linux/swap.h,0

xen/include/asm-ia64/linux-null/linux/platform.h,0

xen/include/asm-ia64/linux-null/linux/slab.h,0

xen/include/asm-ia64/linux-null/linux/node.h,0

xen/include/asm-ia64/linux-null/linux/file.h,0

xen/include/asm-ia64/linux-null/linux/capability.h,0

xen/include/asm-ia64/linux-null/linux/kernel_stat.h,0

xen/include/asm-ia64/linux-null/linux/vfs.h,0

xen/include/asm-ia64/linux-null/linux/tty.h,0

xen/include/asm-ia64/linux-null/linux/serial.h,0

xen/include/asm-ia64/linux-null/linux/smp_lock.h,0

xen/include/asm-ia64/linux-null/linux/rtc.h,0

xen/include/asm-ia64/linux-null/linux/bootmem.h,0

xen/include/asm-ia64/linux-null/linux/mmzone.h,0

xen/include/asm-ia64/linux-null/linux/rwsem.h,0

xen/include/asm-ia64/linux-null/linux/mount.h,0

xen/include/asm-ia64/linux-null/linux/workqueue.h,0

xen/include/asm-ia64/linux-null/linux/profile.h,0

xen/include/asm-ia64/linux-null/linux/completion.h,0

xen/include/asm-ia64/linux-null/linux/ptrace.h,0

xen/include/asm-ia64/linux-null/linux/pagemap.h,0

xen/include/asm-ia64/linux-null/linux/random.h,0

xen/include/asm-ia64/linux-null/linux/serial_core.h,0

xen/include/asm-ia64/linux-null/linux/poll.h,0

xen/include/asm-ia64/linux-null/linux/proc_fs.h,0

xen/include/asm-ia64/linux-null/linux/threads.h,0

xen/include/asm-ia64/linux-null/asm-generic/pci-dma-compat.h,0

xen/include/asm-ia64/regs.h,0

xen/include/asm-ia64/linux/asm/div64.h,0

xen/include/asm-ia64/mach_apic.h,0

xen/include/xen/stdarg.h,0

xen/arch/ia64/linux/idiv64.S,0

xen/arch/ia64/linux/sn/kernel/pio_phys.S,0

xen/arch/ia64/linux/idiv32.S,0

xen/arch/ia64/linux/hpsim.S,0

xen/arch/ia64/linux/carta_random.S,0

xen/arch/x86/mm/shadow/multi.h,0

xen/arch/x86/clear_page.S,0

xen/arch/x86/copy_page.S,0

xen/arch/x86/x86_32/gpr_switch.S,0

xen/arch/x86/xen.lds.S,0

xen/arch/x86/x86_64/gpr_switch.S,0
